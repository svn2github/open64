/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Define to one of `_getb67', `GETB67', `getb67' for Cray-2 and Cray-YMP
   systems. This function is required for `alloca.c' support on those systems.
   */
#undef CRAY_STACKSEG_END

/* Define to 1 if using `alloca.c'. */
#undef C_ALLOCA

/* Define to 1 if you have `alloca', as a function or macro. */
#undef HAVE_ALLOCA

/* Define to 1 if you have <alloca.h> and it should be used (not on Ultrix).
   */
#undef HAVE_ALLOCA_H

/* Define to 1 if you have the <ar.h> header file. */
#undef HAVE_AR_H

/* Define to 1 if the system has the type `clock_t'. */
#undef HAVE_CLOCK_T

/* We have elf64_getehdr() in our libelf.a. */
#undef HAVE_ELF64_GETEHDR

/* We have elf64_getshdr() in our libelf.a. */
#undef HAVE_ELF64_GETSHDR

/* Define to 1 if you have the <elf.h> header file. */
#undef HAVE_ELF_H

/* Define to 1 if you have the <fcntl.h> header file. */
#undef HAVE_FCNTL_H

/* Define to 1 if you have the `ftruncate' function. */
#undef HAVE_FTRUNCATE

/* Define to 1 if you have the <gelf.h> header file. */
#undef HAVE_GELF_H

/* Define to 1 if you have the `getpagesize' function. */
#undef HAVE_GETPAGESIZE

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <libelf.h> header file. */
#undef HAVE_LIBELF_H

/* Define to 1 if you have the <limits.h> header file. */
#undef HAVE_LIMITS_H

/* Define to 1 if you have the `memcmp' function. */
#undef HAVE_MEMCMP

/* Define to 1 if you have the `memcpy' function. */
#undef HAVE_MEMCPY

/* Define to 1 if you have the `memmove' function. */
#undef HAVE_MEMMOVE

/* Define to 1 if you have the <memory.h> header file. */
#undef HAVE_MEMORY_H

/* Define to 1 if you have the `memset' function. */
#undef HAVE_MEMSET

/* Define to 1 if you have a working `mmap' system call. */
#undef HAVE_MMAP

/* DWARF2 32-bit section offsets. */
#undef HAVE_OLD_DWARF2_32BIT_OFFSET

/* Define to 1 if you have the <stdbool.h> header file. */
#undef HAVE_STDBOOL_H

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the `strsignal' function. */
#undef HAVE_STRSIGNAL

/* Define to 1 if the system has the type `struct tms'. */
#undef HAVE_STRUCT_TMS

/* Define to 1 if you have the <sys/elf.h> header file. */
#undef HAVE_SYS_ELF_H

/* Define to 1 if you have the <sys/resource.h> header file. */
#undef HAVE_SYS_RESOURCE_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/times.h> header file. */
#undef HAVE_SYS_TIMES_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <time.h> header file. */
#undef HAVE_TIME_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if the system has the type `_Bool'. */
#undef HAVE__BOOL

/* See if __uint32_t is predefined in the compiler. */
#undef HAVE___UINT32_T

/* Define 1 if sys/types.h defines __uint32_t. */
#undef HAVE___UINT32_T_IN_SYS_TYPES_H

/* See if __uint64_t is predefined in the compiler. */
#undef HAVE___UINT64_T

/* Define 1 if sys/types.h defines __uint64_t. */
#undef HAVE___UINT64_T_IN_SYS_TYPES_H

	/* Include GCC's config header when appropriate. */
	#ifdef IN_GCC
	#include "kpro64/gcc/config/gcc-config.h"
	#endif
    

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* The size of a `int', as computed by sizeof. */
#undef SIZEOF_INT

/* The size of a `long', as computed by sizeof. */
#undef SIZEOF_LONG

/* The size of a `long long', as computed by sizeof. */
#undef SIZEOF_LONG_LONG

/* The size of a `short', as computed by sizeof. */
#undef SIZEOF_SHORT

/* If using the C implementation of alloca, define if you know the
   direction of stack growth for your system; otherwise it will be
   automatically deduced at run-time.
	STACK_DIRECTION > 0 => grows toward higher addresses
	STACK_DIRECTION < 0 => grows toward lower addresses
	STACK_DIRECTION = 0 => direction of growth unknown */
#undef STACK_DIRECTION

/* Define to 1 if you have the ANSI C header files. */
#undef STDC_HEADERS

/* Define when building an ia64 compiler */
#undef TARG_IA64

/* Define when building an amd64 compiler */
#undef TARG_X8664

/* Version number of package */
#undef VERSION

/* Always define this when using the GNU C Library */
#undef _GNU_SOURCE

/* Define if your system supports 64-bit ELF. */
#undef __LIBELF64

/* Define if you have an Irix system with 64-bit ELF support. */
#undef __LIBELF64_IRIX

/* Define if symbol versioning uses GNU section types. */
#undef __LIBELF_GNU_SYMBOL_VERSIONS

/* Define to `<elf.h>' or `<sys/elf.h>' if one of them is present. */
#undef __LIBELF_HEADER_ELF_H

/* Define if symbol versioning uses Sun section types. */
#undef __LIBELF_SUN_SYMBOL_VERSIONS

/* Define if your system supports symbol versioning. */
#undef __LIBELF_SYMBOL_VERSIONS

/* Define to a 16-bit signed integer type if one exists. */
#undef __libelf_i16_t

/* Define to a 32-bit signed integer type if one exists. */
#undef __libelf_i32_t

/* Define to a 64-bit signed integer type if one exists. */
#undef __libelf_i64_t

/* Define to a 16-bit unsigned integer type if one exists. */
#undef __libelf_u16_t

/* Define to a 32-bit unsigned integer type if one exists. */
#undef __libelf_u32_t

/* Define to a 64-bit unsigned integer type if one exists. */
#undef __libelf_u64_t

/* Define to empty if `const' does not conform to ANSI C. */
#undef const

/* Define to `__inline__' or `__inline' if that's what the C compiler
   calls it, or to nothing if 'inline' is not supported under any name.  */
#ifndef __cplusplus
#undef inline
#endif

/* Define to `long' if <sys/types.h> does not define. */
#undef off_t

/* Define to `unsigned' if <sys/types.h> does not define. */
#undef size_t
