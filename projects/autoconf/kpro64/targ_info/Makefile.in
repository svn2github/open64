# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@



srcdir = @srcdir@
top_srcdir = @top_srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
noinst_PROGRAMS = abi_properties_gen$(EXEEXT) isa_bundle_gen$(EXEEXT) \
	isa_decode_gen$(EXEEXT) isa_enums_gen$(EXEEXT) \
	isa_gen$(EXEEXT) isa_hazards_gen$(EXEEXT) \
	isa_lits_gen$(EXEEXT) isa_operands_gen$(EXEEXT) \
	isa_pack_gen$(EXEEXT) isa_print_gen$(EXEEXT) \
	isa_properties_gen$(EXEEXT) isa_pseudo_gen$(EXEEXT) \
	isa_registers_gen$(EXEEXT) isa_subset_gen$(EXEEXT) \
	proc_gen$(EXEEXT) proc_properties_gen$(EXEEXT) $(am__EXEEXT_1)
subdir = kpro64/targ_info
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
libsigen_a_AR = $(AR) $(ARFLAGS)
libsigen_a_LIBADD =
am_libsigen_a_OBJECTS = si_gen.$(OBJEXT)
libsigen_a_OBJECTS = $(am_libsigen_a_OBJECTS)
libtarginfo_a_AR = $(AR) $(ARFLAGS)
libtarginfo_a_LIBADD =
am_libtarginfo_a_OBJECTS = ti_asm.$(OBJEXT) ti_bundle.$(OBJEXT) \
	ti_errors.$(OBJEXT) ti_latency.$(OBJEXT)
am__objects_1 = targ_abi_properties.$(OBJEXT) \
	targ_isa_bundle.$(OBJEXT) targ_isa_decode.$(OBJEXT) \
	targ_isa_enums.$(OBJEXT) targ_isa_hazards.$(OBJEXT) \
	targ_isa_lits.$(OBJEXT) targ_isa_operands.$(OBJEXT) \
	targ_isa_pack.$(OBJEXT) targ_isa_print.$(OBJEXT) \
	targ_isa_properties.$(OBJEXT) targ_isa_pseudo.$(OBJEXT) \
	targ_isa_registers.$(OBJEXT) targ_isa_subset.$(OBJEXT) \
	targ_proc.$(OBJEXT) targ_proc_properties.$(OBJEXT) \
	topcode.$(OBJEXT)
nodist_libtarginfo_a_OBJECTS = $(am__objects_1)
libtarginfo_a_OBJECTS = $(am_libtarginfo_a_OBJECTS) \
	$(nodist_libtarginfo_a_OBJECTS)
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(pkglibdir)"
pkglibLTLIBRARIES_INSTALL = $(INSTALL)
LTLIBRARIES = $(pkglib_LTLIBRARIES)
em64t_la_LIBADD =
am_em64t_la_OBJECTS = em64t.lo
em64t_la_OBJECTS = $(am_em64t_la_OBJECTS)
@TARG_X8664_TRUE@am_em64t_la_rpath = -rpath $(pkglibdir)
opteron_la_LIBADD =
am_opteron_la_OBJECTS = opteron.lo
opteron_la_OBJECTS = $(am_opteron_la_OBJECTS)
@TARG_X8664_TRUE@am_opteron_la_rpath = -rpath $(pkglibdir)
@TARG_X8664_TRUE@am__EXEEXT_1 = em64t_si_gen$(EXEEXT) \
@TARG_X8664_TRUE@	opteron_si_gen$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_abi_properties_gen_OBJECTS = gen_util.$(OBJEXT) \
	abi_properties.$(OBJEXT) abi_properties_gen.$(OBJEXT)
nodist_abi_properties_gen_OBJECTS = targ_isa_registers.$(OBJEXT) \
	targ_isa_subset.$(OBJEXT)
abi_properties_gen_OBJECTS = $(am_abi_properties_gen_OBJECTS) \
	$(nodist_abi_properties_gen_OBJECTS)
abi_properties_gen_LDADD = $(LDADD)
am_em64t_si_gen_OBJECTS = em64t_si.$(OBJEXT)
em64t_si_gen_OBJECTS = $(am_em64t_si_gen_OBJECTS)
am__DEPENDENCIES_1 = libsigen.a libtarginfo.a
em64t_si_gen_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_isa_bundle_gen_OBJECTS = gen_util.$(OBJEXT) isa_bundle.$(OBJEXT) \
	isa_bundle_gen.$(OBJEXT)
nodist_isa_bundle_gen_OBJECTS = targ_isa_properties.$(OBJEXT) \
	topcode.$(OBJEXT)
isa_bundle_gen_OBJECTS = $(am_isa_bundle_gen_OBJECTS) \
	$(nodist_isa_bundle_gen_OBJECTS)
isa_bundle_gen_LDADD = $(LDADD)
am_isa_decode_gen_OBJECTS = gen_util.$(OBJEXT) isa_decode.$(OBJEXT) \
	isa_decode_gen.$(OBJEXT)
nodist_isa_decode_gen_OBJECTS = targ_isa_bundle.$(OBJEXT) \
	topcode.$(OBJEXT)
isa_decode_gen_OBJECTS = $(am_isa_decode_gen_OBJECTS) \
	$(nodist_isa_decode_gen_OBJECTS)
isa_decode_gen_LDADD = $(LDADD)
am_isa_enums_gen_OBJECTS = gen_util.$(OBJEXT) isa_enums.$(OBJEXT) \
	isa_enums_gen.$(OBJEXT)
isa_enums_gen_OBJECTS = $(am_isa_enums_gen_OBJECTS)
isa_enums_gen_LDADD = $(LDADD)
am_isa_gen_OBJECTS = gen_util.$(OBJEXT) isa.$(OBJEXT) \
	isa_gen.$(OBJEXT)
isa_gen_OBJECTS = $(am_isa_gen_OBJECTS)
isa_gen_LDADD = $(LDADD)
am_isa_hazards_gen_OBJECTS = gen_util.$(OBJEXT) isa_hazards.$(OBJEXT) \
	isa_hazards_gen.$(OBJEXT)
nodist_isa_hazards_gen_OBJECTS = targ_isa_subset.$(OBJEXT) \
	topcode.$(OBJEXT)
isa_hazards_gen_OBJECTS = $(am_isa_hazards_gen_OBJECTS) \
	$(nodist_isa_hazards_gen_OBJECTS)
isa_hazards_gen_LDADD = $(LDADD)
am_isa_lits_gen_OBJECTS = gen_util.$(OBJEXT) isa_lits.$(OBJEXT) \
	isa_lits_gen.$(OBJEXT)
isa_lits_gen_OBJECTS = $(am_isa_lits_gen_OBJECTS)
isa_lits_gen_LDADD = $(LDADD)
am_isa_operands_gen_OBJECTS = gen_util.$(OBJEXT) \
	isa_operands.$(OBJEXT) isa_operands_gen.$(OBJEXT)
nodist_isa_operands_gen_OBJECTS = targ_isa_enums.$(OBJEXT) \
	targ_isa_lits.$(OBJEXT) targ_isa_registers.$(OBJEXT) \
	targ_isa_subset.$(OBJEXT) topcode.$(OBJEXT)
isa_operands_gen_OBJECTS = $(am_isa_operands_gen_OBJECTS) \
	$(nodist_isa_operands_gen_OBJECTS)
isa_operands_gen_LDADD = $(LDADD)
am_isa_pack_gen_OBJECTS = gen_util.$(OBJEXT) isa_pack.$(OBJEXT) \
	isa_pack_gen.$(OBJEXT)
nodist_isa_pack_gen_OBJECTS = targ_isa_properties.$(OBJEXT) \
	topcode.$(OBJEXT)
isa_pack_gen_OBJECTS = $(am_isa_pack_gen_OBJECTS) \
	$(nodist_isa_pack_gen_OBJECTS)
isa_pack_gen_LDADD = $(LDADD)
am_isa_print_gen_OBJECTS = gen_util.$(OBJEXT) isa_print.$(OBJEXT) \
	isa_print_gen.$(OBJEXT)
nodist_isa_print_gen_OBJECTS = targ_isa_properties.$(OBJEXT) \
	topcode.$(OBJEXT)
isa_print_gen_OBJECTS = $(am_isa_print_gen_OBJECTS) \
	$(nodist_isa_print_gen_OBJECTS)
isa_print_gen_LDADD = $(LDADD)
am_isa_properties_gen_OBJECTS = gen_util.$(OBJEXT) \
	isa_properties.$(OBJEXT) isa_properties_gen.$(OBJEXT)
nodist_isa_properties_gen_OBJECTS = topcode.$(OBJEXT)
isa_properties_gen_OBJECTS = $(am_isa_properties_gen_OBJECTS) \
	$(nodist_isa_properties_gen_OBJECTS)
isa_properties_gen_LDADD = $(LDADD)
am_isa_pseudo_gen_OBJECTS = gen_util.$(OBJEXT) isa_pseudo.$(OBJEXT) \
	isa_pseudo_gen.$(OBJEXT)
nodist_isa_pseudo_gen_OBJECTS = targ_isa_enums.$(OBJEXT) \
	targ_isa_lits.$(OBJEXT) targ_isa_operands.$(OBJEXT) \
	targ_isa_registers.$(OBJEXT) targ_isa_subset.$(OBJEXT) \
	topcode.$(OBJEXT)
isa_pseudo_gen_OBJECTS = $(am_isa_pseudo_gen_OBJECTS) \
	$(nodist_isa_pseudo_gen_OBJECTS)
isa_pseudo_gen_LDADD = $(LDADD)
am_isa_registers_gen_OBJECTS = gen_util.$(OBJEXT) \
	isa_registers.$(OBJEXT) isa_registers_gen.$(OBJEXT)
nodist_isa_registers_gen_OBJECTS = targ_isa_subset.$(OBJEXT) \
	topcode.$(OBJEXT)
isa_registers_gen_OBJECTS = $(am_isa_registers_gen_OBJECTS) \
	$(nodist_isa_registers_gen_OBJECTS)
isa_registers_gen_LDADD = $(LDADD)
am_isa_subset_gen_OBJECTS = gen_util.$(OBJEXT) isa_subset.$(OBJEXT) \
	isa_subset_gen.$(OBJEXT)
nodist_isa_subset_gen_OBJECTS = topcode.$(OBJEXT)
isa_subset_gen_OBJECTS = $(am_isa_subset_gen_OBJECTS) \
	$(nodist_isa_subset_gen_OBJECTS)
isa_subset_gen_LDADD = $(LDADD)
am_opteron_si_gen_OBJECTS = opteron_si.$(OBJEXT)
opteron_si_gen_OBJECTS = $(am_opteron_si_gen_OBJECTS)
opteron_si_gen_DEPENDENCIES = $(am__DEPENDENCIES_1)
am_proc_gen_OBJECTS = gen_util.$(OBJEXT) proc.$(OBJEXT) \
	proc_gen.$(OBJEXT)
proc_gen_OBJECTS = $(am_proc_gen_OBJECTS)
proc_gen_LDADD = $(LDADD)
am_proc_properties_gen_OBJECTS = gen_util.$(OBJEXT) \
	proc_properties.$(OBJEXT) proc_properties_gen.$(OBJEXT)
nodist_proc_properties_gen_OBJECTS = targ_proc.$(OBJEXT)
proc_properties_gen_OBJECTS = $(am_proc_properties_gen_OBJECTS) \
	$(nodist_proc_properties_gen_OBJECTS)
proc_properties_gen_LDADD = $(LDADD)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libsigen_a_SOURCES) $(libtarginfo_a_SOURCES) \
	$(nodist_libtarginfo_a_SOURCES) $(em64t_la_SOURCES) \
	$(opteron_la_SOURCES) $(abi_properties_gen_SOURCES) \
	$(nodist_abi_properties_gen_SOURCES) $(em64t_si_gen_SOURCES) \
	$(isa_bundle_gen_SOURCES) $(nodist_isa_bundle_gen_SOURCES) \
	$(isa_decode_gen_SOURCES) $(nodist_isa_decode_gen_SOURCES) \
	$(isa_enums_gen_SOURCES) $(isa_gen_SOURCES) \
	$(isa_hazards_gen_SOURCES) $(nodist_isa_hazards_gen_SOURCES) \
	$(isa_lits_gen_SOURCES) $(isa_operands_gen_SOURCES) \
	$(nodist_isa_operands_gen_SOURCES) $(isa_pack_gen_SOURCES) \
	$(nodist_isa_pack_gen_SOURCES) $(isa_print_gen_SOURCES) \
	$(nodist_isa_print_gen_SOURCES) $(isa_properties_gen_SOURCES) \
	$(nodist_isa_properties_gen_SOURCES) $(isa_pseudo_gen_SOURCES) \
	$(nodist_isa_pseudo_gen_SOURCES) $(isa_registers_gen_SOURCES) \
	$(nodist_isa_registers_gen_SOURCES) $(isa_subset_gen_SOURCES) \
	$(nodist_isa_subset_gen_SOURCES) $(opteron_si_gen_SOURCES) \
	$(proc_gen_SOURCES) $(proc_properties_gen_SOURCES) \
	$(nodist_proc_properties_gen_SOURCES)
DIST_SOURCES = $(libsigen_a_SOURCES) $(libtarginfo_a_SOURCES) \
	$(em64t_la_SOURCES) $(opteron_la_SOURCES) \
	$(abi_properties_gen_SOURCES) $(em64t_si_gen_SOURCES) \
	$(isa_bundle_gen_SOURCES) $(isa_decode_gen_SOURCES) \
	$(isa_enums_gen_SOURCES) $(isa_gen_SOURCES) \
	$(isa_hazards_gen_SOURCES) $(isa_lits_gen_SOURCES) \
	$(isa_operands_gen_SOURCES) $(isa_pack_gen_SOURCES) \
	$(isa_print_gen_SOURCES) $(isa_properties_gen_SOURCES) \
	$(isa_pseudo_gen_SOURCES) $(isa_registers_gen_SOURCES) \
	$(isa_subset_gen_SOURCES) $(opteron_si_gen_SOURCES) \
	$(proc_gen_SOURCES) $(proc_properties_gen_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
VPATH = ${srcdir}/abi/${TARG_SUBDIR} ${srcdir}/access ${srcdir}/generate \
	${srcdir}/isa/${TARG_SUBDIR} ${srcdir}/proc/${TARG_SUBDIR}

ACLOCAL = @ACLOCAL@
ALLOCA = @ALLOCA@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
GCC_EXTRA_MODES = @GCC_EXTRA_MODES@
GCC_FULL_HEADERS_CONFIG = @GCC_FULL_HEADERS_CONFIG@
GCC_HEADERS_CONFIG = @GCC_HEADERS_CONFIG@
GCC_HEADERS_HCONFIG = @GCC_HEADERS_HCONFIG@
GCC_HEADERS_TM_P = @GCC_HEADERS_TM_P@
GCC_MD_FILE = @GCC_MD_FILE@
GCC_OUT_FILE = @GCC_OUT_FILE@
GCC_TARGET_ALIAS = @GCC_TARGET_ALIAS@
GCC_TARGET_CPU_DEFAULT = @GCC_TARGET_CPU_DEFAULT@
GCC_TM_DEFINES = @GCC_TM_DEFINES@
GCC_TM_FILE = @GCC_TM_FILE@
GCC_XM_DEFINES_CONFIG = @GCC_XM_DEFINES_CONFIG@
GCC_XM_DEFINES_HCONFIG = @GCC_XM_DEFINES_HCONFIG@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PIC_FLAGS = @PIC_FLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TARG_IA64_FALSE = @TARG_IA64_FALSE@
TARG_IA64_TRUE = @TARG_IA64_TRUE@
TARG_SUBDIR = @TARG_SUBDIR@
TARG_X8664_FALSE = @TARG_X8664_FALSE@
TARG_X8664_TRUE = @TARG_X8664_TRUE@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
noinst_LIBRARIES = libsigen.a libtarginfo.a
libtarginfo_a_SOURCES = ti_asm.c ti_bundle.c ti_errors.c ti_latency.c
libsigen_a_SOURCES = si_gen.cxx
@TARG_X8664_TRUE@pkglib_LTLIBRARIES = em64t.la opteron.la
@TARG_X8664_TRUE@_targ_tools = em64t_si_gen opteron_si_gen
GENSRCS = targ_abi_properties.c targ_isa_bundle.c targ_isa_decode.c \
	targ_isa_enums.c targ_isa_hazards.c targ_isa_lits.c \
	targ_isa_operands.c targ_isa_pack.c targ_isa_print.c \
	targ_isa_properties.c targ_isa_pseudo.c targ_isa_registers.c \
	targ_isa_subset.c targ_proc.c targ_proc_properties.c topcode.c

GENHDRS = $(patsubst %.c,%.h,${GENSRCS})
GENXPRT = $(patsubst %.c,%.Exported,${GENSRCS})
nodist_libtarginfo_a_SOURCES = ${GENSRCS}
BUILT_SOURCES = ${GENSRCS} ${GENHDRS} ${em64t_la_SOURCES} \
	${opteron_la_SOURCES}
CLEANFILES = ${GENSRCS} ${GENHDRS} ${GENXPRT} ${em64t_la_SOURCES} \
	${opteron_la_SOURCES}
abi_properties_gen_SOURCES = gen_util.cxx abi_properties.cxx \
	abi_properties_gen.cxx

nodist_abi_properties_gen_SOURCES = targ_isa_registers.c targ_isa_subset.c
isa_bundle_gen_SOURCES = gen_util.cxx isa_bundle.cxx isa_bundle_gen.cxx
nodist_isa_bundle_gen_SOURCES = targ_isa_properties.c topcode.c
isa_decode_gen_SOURCES = gen_util.cxx isa_decode.cxx isa_decode_gen.cxx
nodist_isa_decode_gen_SOURCES = targ_isa_bundle.c topcode.c
isa_enums_gen_SOURCES = gen_util.cxx isa_enums.cxx isa_enums_gen.cxx
isa_gen_SOURCES = gen_util.cxx isa.cxx isa_gen.cxx
isa_hazards_gen_SOURCES = gen_util.cxx isa_hazards.cxx isa_hazards_gen.cxx
nodist_isa_hazards_gen_SOURCES = targ_isa_subset.c topcode.c
isa_lits_gen_SOURCES = gen_util.cxx isa_lits.cxx isa_lits_gen.cxx
isa_operands_gen_SOURCES = gen_util.cxx isa_operands.cxx isa_operands_gen.cxx
nodist_isa_operands_gen_SOURCES = targ_isa_enums.c targ_isa_lits.c \
	targ_isa_registers.c targ_isa_subset.c topcode.c

isa_pack_gen_SOURCES = gen_util.cxx isa_pack.cxx isa_pack_gen.cxx
nodist_isa_pack_gen_SOURCES = targ_isa_properties.c topcode.c
isa_print_gen_SOURCES = gen_util.cxx isa_print.cxx isa_print_gen.cxx
nodist_isa_print_gen_SOURCES = targ_isa_properties.c topcode.c
isa_properties_gen_SOURCES = gen_util.cxx isa_properties.cxx \
	isa_properties_gen.cxx

nodist_isa_properties_gen_SOURCES = topcode.c
isa_pseudo_gen_SOURCES = gen_util.cxx isa_pseudo.cxx isa_pseudo_gen.cxx
nodist_isa_pseudo_gen_SOURCES = targ_isa_enums.c targ_isa_lits.c \
	targ_isa_operands.c targ_isa_registers.c targ_isa_subset.c topcode.c

isa_registers_gen_SOURCES = gen_util.cxx isa_registers.cxx \
	isa_registers_gen.cxx

nodist_isa_registers_gen_SOURCES = targ_isa_subset.c topcode.c
isa_subset_gen_SOURCES = gen_util.cxx isa_subset.cxx isa_subset_gen.cxx
nodist_isa_subset_gen_SOURCES = topcode.c
proc_gen_SOURCES = gen_util.cxx proc.cxx proc_gen.cxx
proc_properties_gen_SOURCES = gen_util.cxx proc_properties.cxx \
	proc_properties_gen.cxx

nodist_proc_properties_gen_SOURCES = targ_proc.c

#
# X8664
#
em64t_la_SOURCES = em64t.c
em64t_la_LDFLAGS = -avoid-version -module
em64t_si_gen_SOURCES = em64t_si.cxx
em64t_si_gen_LDADD = ${noinst_LIBRARIES}
opteron_la_SOURCES = opteron.c
opteron_la_LDFLAGS = -avoid-version -module
opteron_si_gen_SOURCES = opteron_si.cxx
opteron_si_gen_LDADD = ${noinst_LIBRARIES}
AM_CPPFLAGS = ${PIC_FLAGS} -I${srcdir}/access -I${srcdir}/generate
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cxx .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  kpro64/targ_info/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  kpro64/targ_info/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
libsigen.a: $(libsigen_a_OBJECTS) $(libsigen_a_DEPENDENCIES) 
	-rm -f libsigen.a
	$(libsigen_a_AR) libsigen.a $(libsigen_a_OBJECTS) $(libsigen_a_LIBADD)
	$(RANLIB) libsigen.a
libtarginfo.a: $(libtarginfo_a_OBJECTS) $(libtarginfo_a_DEPENDENCIES) 
	-rm -f libtarginfo.a
	$(libtarginfo_a_AR) libtarginfo.a $(libtarginfo_a_OBJECTS) $(libtarginfo_a_LIBADD)
	$(RANLIB) libtarginfo.a
install-pkglibLTLIBRARIES: $(pkglib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(pkglibdir)" || $(mkdir_p) "$(DESTDIR)$(pkglibdir)"
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) '$$p' '$(DESTDIR)$(pkglibdir)/$$f'"; \
	    $(LIBTOOL) --mode=install $(pkglibLTLIBRARIES_INSTALL) $(INSTALL_STRIP_FLAG) "$$p" "$(DESTDIR)$(pkglibdir)/$$f"; \
	  else :; fi; \
	done

uninstall-pkglibLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@set -x; list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " $(LIBTOOL) --mode=uninstall rm -f '$(DESTDIR)$(pkglibdir)/$$p'"; \
	  $(LIBTOOL) --mode=uninstall rm -f "$(DESTDIR)$(pkglibdir)/$$p"; \
	done

clean-pkglibLTLIBRARIES:
	-test -z "$(pkglib_LTLIBRARIES)" || rm -f $(pkglib_LTLIBRARIES)
	@list='$(pkglib_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
em64t.la: $(em64t_la_OBJECTS) $(em64t_la_DEPENDENCIES) 
	$(LINK) $(am_em64t_la_rpath) $(em64t_la_LDFLAGS) $(em64t_la_OBJECTS) $(em64t_la_LIBADD) $(LIBS)
opteron.la: $(opteron_la_OBJECTS) $(opteron_la_DEPENDENCIES) 
	$(LINK) $(am_opteron_la_rpath) $(opteron_la_LDFLAGS) $(opteron_la_OBJECTS) $(opteron_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
abi_properties_gen$(EXEEXT): $(abi_properties_gen_OBJECTS) $(abi_properties_gen_DEPENDENCIES) 
	@rm -f abi_properties_gen$(EXEEXT)
	$(CXXLINK) $(abi_properties_gen_LDFLAGS) $(abi_properties_gen_OBJECTS) $(abi_properties_gen_LDADD) $(LIBS)
em64t_si_gen$(EXEEXT): $(em64t_si_gen_OBJECTS) $(em64t_si_gen_DEPENDENCIES) 
	@rm -f em64t_si_gen$(EXEEXT)
	$(CXXLINK) $(em64t_si_gen_LDFLAGS) $(em64t_si_gen_OBJECTS) $(em64t_si_gen_LDADD) $(LIBS)
isa_bundle_gen$(EXEEXT): $(isa_bundle_gen_OBJECTS) $(isa_bundle_gen_DEPENDENCIES) 
	@rm -f isa_bundle_gen$(EXEEXT)
	$(CXXLINK) $(isa_bundle_gen_LDFLAGS) $(isa_bundle_gen_OBJECTS) $(isa_bundle_gen_LDADD) $(LIBS)
isa_decode_gen$(EXEEXT): $(isa_decode_gen_OBJECTS) $(isa_decode_gen_DEPENDENCIES) 
	@rm -f isa_decode_gen$(EXEEXT)
	$(CXXLINK) $(isa_decode_gen_LDFLAGS) $(isa_decode_gen_OBJECTS) $(isa_decode_gen_LDADD) $(LIBS)
isa_enums_gen$(EXEEXT): $(isa_enums_gen_OBJECTS) $(isa_enums_gen_DEPENDENCIES) 
	@rm -f isa_enums_gen$(EXEEXT)
	$(CXXLINK) $(isa_enums_gen_LDFLAGS) $(isa_enums_gen_OBJECTS) $(isa_enums_gen_LDADD) $(LIBS)
isa_gen$(EXEEXT): $(isa_gen_OBJECTS) $(isa_gen_DEPENDENCIES) 
	@rm -f isa_gen$(EXEEXT)
	$(CXXLINK) $(isa_gen_LDFLAGS) $(isa_gen_OBJECTS) $(isa_gen_LDADD) $(LIBS)
isa_hazards_gen$(EXEEXT): $(isa_hazards_gen_OBJECTS) $(isa_hazards_gen_DEPENDENCIES) 
	@rm -f isa_hazards_gen$(EXEEXT)
	$(CXXLINK) $(isa_hazards_gen_LDFLAGS) $(isa_hazards_gen_OBJECTS) $(isa_hazards_gen_LDADD) $(LIBS)
isa_lits_gen$(EXEEXT): $(isa_lits_gen_OBJECTS) $(isa_lits_gen_DEPENDENCIES) 
	@rm -f isa_lits_gen$(EXEEXT)
	$(CXXLINK) $(isa_lits_gen_LDFLAGS) $(isa_lits_gen_OBJECTS) $(isa_lits_gen_LDADD) $(LIBS)
isa_operands_gen$(EXEEXT): $(isa_operands_gen_OBJECTS) $(isa_operands_gen_DEPENDENCIES) 
	@rm -f isa_operands_gen$(EXEEXT)
	$(CXXLINK) $(isa_operands_gen_LDFLAGS) $(isa_operands_gen_OBJECTS) $(isa_operands_gen_LDADD) $(LIBS)
isa_pack_gen$(EXEEXT): $(isa_pack_gen_OBJECTS) $(isa_pack_gen_DEPENDENCIES) 
	@rm -f isa_pack_gen$(EXEEXT)
	$(CXXLINK) $(isa_pack_gen_LDFLAGS) $(isa_pack_gen_OBJECTS) $(isa_pack_gen_LDADD) $(LIBS)
isa_print_gen$(EXEEXT): $(isa_print_gen_OBJECTS) $(isa_print_gen_DEPENDENCIES) 
	@rm -f isa_print_gen$(EXEEXT)
	$(CXXLINK) $(isa_print_gen_LDFLAGS) $(isa_print_gen_OBJECTS) $(isa_print_gen_LDADD) $(LIBS)
isa_properties_gen$(EXEEXT): $(isa_properties_gen_OBJECTS) $(isa_properties_gen_DEPENDENCIES) 
	@rm -f isa_properties_gen$(EXEEXT)
	$(CXXLINK) $(isa_properties_gen_LDFLAGS) $(isa_properties_gen_OBJECTS) $(isa_properties_gen_LDADD) $(LIBS)
isa_pseudo_gen$(EXEEXT): $(isa_pseudo_gen_OBJECTS) $(isa_pseudo_gen_DEPENDENCIES) 
	@rm -f isa_pseudo_gen$(EXEEXT)
	$(CXXLINK) $(isa_pseudo_gen_LDFLAGS) $(isa_pseudo_gen_OBJECTS) $(isa_pseudo_gen_LDADD) $(LIBS)
isa_registers_gen$(EXEEXT): $(isa_registers_gen_OBJECTS) $(isa_registers_gen_DEPENDENCIES) 
	@rm -f isa_registers_gen$(EXEEXT)
	$(CXXLINK) $(isa_registers_gen_LDFLAGS) $(isa_registers_gen_OBJECTS) $(isa_registers_gen_LDADD) $(LIBS)
isa_subset_gen$(EXEEXT): $(isa_subset_gen_OBJECTS) $(isa_subset_gen_DEPENDENCIES) 
	@rm -f isa_subset_gen$(EXEEXT)
	$(CXXLINK) $(isa_subset_gen_LDFLAGS) $(isa_subset_gen_OBJECTS) $(isa_subset_gen_LDADD) $(LIBS)
opteron_si_gen$(EXEEXT): $(opteron_si_gen_OBJECTS) $(opteron_si_gen_DEPENDENCIES) 
	@rm -f opteron_si_gen$(EXEEXT)
	$(CXXLINK) $(opteron_si_gen_LDFLAGS) $(opteron_si_gen_OBJECTS) $(opteron_si_gen_LDADD) $(LIBS)
proc_gen$(EXEEXT): $(proc_gen_OBJECTS) $(proc_gen_DEPENDENCIES) 
	@rm -f proc_gen$(EXEEXT)
	$(CXXLINK) $(proc_gen_LDFLAGS) $(proc_gen_OBJECTS) $(proc_gen_LDADD) $(LIBS)
proc_properties_gen$(EXEEXT): $(proc_properties_gen_OBJECTS) $(proc_properties_gen_DEPENDENCIES) 
	@rm -f proc_properties_gen$(EXEEXT)
	$(CXXLINK) $(proc_properties_gen_LDFLAGS) $(proc_properties_gen_OBJECTS) $(proc_properties_gen_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/abi_properties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/abi_properties_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em64t.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/em64t_si.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gen_util.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_bundle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_bundle_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_decode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_decode_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_enums.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_enums_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_hazards.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_hazards_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_lits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_lits_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_operands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_operands_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_pack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_pack_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_print_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_properties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_properties_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_pseudo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_pseudo_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_registers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_registers_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_subset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/isa_subset_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opteron.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/opteron_si.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proc_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proc_properties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/proc_properties_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/si_gen.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_abi_properties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_bundle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_decode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_enums.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_hazards.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_lits.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_operands.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_pack.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_print.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_properties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_pseudo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_registers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_isa_subset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_proc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/targ_proc_properties.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ti_asm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ti_bundle.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ti_errors.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ti_latency.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/topcode.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	if $(COMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	if $(LTCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCC_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCC_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(LTCOMPILE) -c -o $@ $<

.cxx.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cxx.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cxx.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(LTLIBRARIES) $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(pkglibdir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-pkglibLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-pkglibLTLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-pkglibLTLIBRARIES

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLIBRARIES clean-noinstPROGRAMS \
	clean-pkglibLTLIBRARIES ctags distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man \
	install-pkglibLTLIBRARIES install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-info-am \
	uninstall-pkglibLTLIBRARIES


targ_abi_properties.c: abi_properties_gen
	./$<

targ_isa_bundle.c: isa_bundle_gen
	./$<

targ_isa_decode.c: isa_decode_gen
	./$<

targ_isa_enums.c: isa_enums_gen
	./$<

targ_isa_hazards.c: isa_hazards_gen
	./$<

targ_isa_lits.c: isa_lits_gen
	./$<

targ_isa_operands.c: isa_operands_gen
	./$<

targ_isa_pack.c: isa_pack_gen
	./$<

targ_isa_print.c: isa_print_gen
	./$<

targ_isa_properties.c targ_isa_properties.h: isa_properties_gen
	./$<

targ_isa_pseudo.c: isa_pseudo_gen
	./$<

targ_isa_registers.c targ_isa_registers.h: isa_registers_gen
	./$<

targ_isa_subset.c targ_isa_subset.h: isa_subset_gen
	./$<

targ_proc.c: proc_gen
	./$<

targ_proc_properties.c: proc_properties_gen
	./$<

topcode.c topcode.h: isa_gen
	./$<
abi_properties.${OBJEXT}: targ_isa_registers.h
abi_properties_gen.${OBJEXT}: targ_isa_registers.h
isa_bundle_gen.${OBJEXT}: targ_isa_properties.h topcode.h
isa_decode_gen.${OBJEXT}: topcode.h
isa_hazards_gen.${OBJEXT}: targ_isa_subset.h topcode.h
isa_operands_gen.${OBJEXT}: topcode.h
isa_pack_gen.${OBJEXT}: targ_isa_properties.h topcode.h
isa_print_gen.${OBJEXT}: targ_isa_properties.h topcode.h
isa_properties_gen.${OBJEXT}: topcode.h
isa_pseudo_gen.${OBJEXT}: targ_isa_operands.h topcode.h
isa_registers.${OBJEXT}: targ_isa_subset.h
isa_subset.${OBJEXT}: topcode.h
isa_subset_gen.${OBJEXT}: topcode.h
proc_properties_gen.${OBJEXT}: targ_proc.h

em64t.c: em64t_si_gen
	./$<

opteron.c: opteron_si_gen
	./$<
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
