#!/bin/sh
# ====================================================================
#
# Copyright (C) 2011, Hewlett-Packard Development Company, L.P.
# All Rights Reserved.
#
# Open64 is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# Open64 is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA  02110-1301, USA.
#
# ====================================================================
#
# This script is designed to be invoked via the SIMULATOR mechanism
# for a CTI regression test. It runs the specified executable under
# GDB in batch mode. If the name of the executable is "X", it looks
# for a file "X.gdb-commands" and passes them to GDB. 
#
# To accommodate cross testing, we examine the architecture we're
# running on and stub out the run of it is not a HPUX IPF box.
#
FULLME=$0
ME=`basename $FULLME`
EXEC=$1
ARCH=`uname -ms`
if [ "$ARCH" != "HP-UX ia64" ]; then
  echo "RUN STUBBED OUT"
  exit 0
fi
#
if [ "$GDB_SERVER" = "" ]; then
  echo "run failed, no setting for CTI variable 'GDB_SERVER'"
  exit 1
fi
if [ ! -x $GDB_SERVER ]; then
  echo "run failed, can't locate or execute $GDB_SERVER"
  exit 1
fi
if [ ! -x ./$EXEC ]; then
  echo "run failed, can't access/execute ./$EXEC"
  exit 1
fi
CMDS="${EXEC}.gdb-commands"
if [ ! -r ./$CMDS ]; then
  echo "run failed, can't locate ./$CMDS"
  exit 1
fi
#
# Emit a bunch of comments to the output file so that a human 
# being reading it will realize that a special run is taking place.
#
echo "#"
echo "# This output generated by running the $ME wrapper script, "
echo "# which runs GDB on the executable to be tested ($EXEC). "
echo "# Commands passed to GDB were read from the file $CMDS "
echo "#"
# 
exec $GDB_SERVER -batch -n -x $CMDS $EXEC < /dev/null
