%!PS-Adobe-2.0
%%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
%%Title: example.dvi
%%Pages: 22
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: Helvetica
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips example -o example.ps
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2001.01.14:1935
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin 40258431 52099146 1000 600 600 (example.dvi)
@start
%DVIPSBitmapFont: Fa cmr6 6 1
/Fa 1 49 df<13FF000313C0380781E0380F00F0001E137848133CA248131EA400F8131F
AD0078131EA2007C133E003C133CA26C13786C13F0380781E03803FFC0C6130018227DA0
1E>48 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fb cmsy8 8 3
/Fb 3 50 df<B812C0A32A037A9137>0 D<170EA3170F8384170384170184717E187818
7C84180FF007C0BA12F819FC19F8CBEA07C0F00F00183E601878604D5A60170360170795
C7FC5F170EA33E237CA147>33 D<D93F80EC07F0D9FFF0EC3FFC000301FC91B5FC4801FF
903901F80780D80F80903A8007C001C03D1E003FC00F8000E0486D6C48C7127000389026
0FF03E143048902607F83C14386E6C48141800606D6C5A00E06D6C48141C48027F150C5E
153F6F7E6F7E82151F6C6F141C0060DA3DFE1418DB78FF143800704A6C7E003001016D6C
1370003849486C6C13F06C903B07C00FF001E06C903B0F8007FC07C02807807E0003B512
806CB44801001400C601F0EC3FFCD93F80EC07F03E1F7C9D47>49
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fc cmmi8 8 2
/Fc 2 111 df<EB07E0EB1FF890387C1CE0EBF80D3801F00F3803E007EA07C0120FD81F
8013C0A2EA3F00140F481480127EA2141F00FE14005AA2EC3F02EC3E06A25AEC7E0E007C
EBFE0C14FC0101131C393E07BE18391F0E1E38390FFC0FF03903F003C01F1F7D9D25>97
D<3907C007E0391FE03FF83918F8783E393879E01E39307B801F38707F00126013FEEAE0
FC12C05B00815C0001143E5BA20003147E157C5B15FC0007ECF8081618EBC00115F0000F
1538913803E0300180147016E0001F010113C015E390C7EAFF00000E143E251F7E9D2B>
110 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fd cmr8 8 7
/Fd 7 57 df<EB3FC0EBFFF03803E07C48487E48487E497E001EEB0780A2003E14C0A248
EB03E0A500FC14F0B0007C14E0A3007E1307003E14C0A36CEB0F806C14006D5A3807C03E
3803F0FC3800FFF0EB3FC01C2D7DAB23>48 D<130C133C137CEA03FC12FFEAFC7C1200B3
B113FE387FFFFEA2172C7AAB23>I<EB7F803801FFF0380780FC380E003F48EB1F8048EB
0FC05A0060EB07E012F000FC14F07E1403A3007C1307C7FCA215E0140F15C0141F1580EC
3F00147E147C5C495A495A495A495A011EC7FC5B5B4913305B485A4848136048C7FC000E
14E0001FB5FC5A4814C0B6FCA21C2C7DAB23>I<EB3FC03801FFF03807C0FC380E007E48
7FEC1F80003F14C0A2EB800F1300A2000C131FC7FC1580A2EC3F00143E5C5CEB03F0EBFF
C014F0EB00FC143FEC1F8015C0140F15E0A2EC07F0A21238127C12FEA3EC0FE012F80060
14C00070131F6C1480001EEB3F00380780FC3801FFF038007FC01C2D7DAB23>I<140EA2
141E143EA2147E14FEA2EB01BE1303143E1306130E130C131813381330136013E013C0EA
0180120313001206120E120C5A123812305A12E0B612FCA2C7EA3E00A9147F90381FFFFC
A21E2D7EAC23>I<000CEB0180380FC01F90B512005C5C14F014C0D80C7EC7FC90C8FCA8
EB1FC0EB7FF8380DE07C380F801F01001380000E130F000CEB07C0C713E0A2140315F0A4
127812FCA448EB07E012E0006014C00070130F6C14806CEB1F006C133E380780F83801FF
E038007F801C2D7DAB23>I<EB1FC0EBFFF03803E07C3807801E48487E001EEB0780A248
EB03C0A4123E1407003F1480381FC00F01E01300EBF81E6C6C5A3807FFF86C13E0C6FCEB
3FF8EBFFFC3803C7FFD807831380D81F0013C0001E133F48EB1FE0007C13070078EB03F0
12F84813011400A46C14E000781301007C14C0003C13036CEB0780390F800F003807E03C
3801FFF038003FC01C2D7DAB23>56 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fe cmti10 10.95 32
/Fe 32 121 df<EA01E0EA07F8120F13FC121FA4120FEA03D8EA0018A213381330137013
6013E013C01201EA038013005A120E5A5A5A5A5A0E1C6DBE1C>39
D<387FFFFCA3B5FCA21605799521>45 D<15031507150F151F151E153E157EEC01FEEC03
FC1407141FEB01FF90380FFBF8EB1FC3EB0E07130015F0A2140FA215E0A2141FA215C0A2
143FA21580A2147FA21500A25CA25CA21301A25CA21303A25CA21307A25CA2130FA25CA2
131FA25CEB7FE0B612F0A215E0203D77BC2E>49 D<15FE913803FFC091380F01F091383C
00F84A137C4A7F4948133F49487F4A148049C7FC5BEB0E0C011E15C0EB1C0EEB3C061338
13781370020E133FD9F00C148013E0141C0218137F00011600EBC0384A13FEEC600102E0
5B3A00E3C003F89039FF0007F0013C495A90C7485A5E037FC7FC15FC4A5A4A5AEC0FC04A
C8FC147E14F8EB03E0495A011FC9FC133E49141801F0143C48481438485A1678485A48C8
5A120E001E4A5AD83FE0130301FF495A397C3FF01FD8780FB55AD8700391C7FCD8F0015B
486C6C5A6E5AEC07C02A3F79BC2E>I<171C173C177CA217FCA216011603A21607A24C7E
A2161DA216391679167116E1A2ED01C1A2ED038115071601150EA2031C7FA24B7EA25D15
F05D4A5AA24A5AA24AC7FC5C140E5C021FB6FC4A81A20270C7127FA25C13015C495AA249
C8FCA2130E131E131C133C5B01F882487ED807FEEC01FFB500E0017FEBFF80A25C39417B
C044>65 D<9339FF8001C0030F13E0033F9038F803809239FF807E07913A03FC001F0FDA
0FF0EB071FDA1FC0ECBF00DA7F806DB4FC4AC77E495AD903F86E5A495A130F4948157E49
48157C495A13FF91C9FC4848167812035B1207491670120FA2485A95C7FC485AA3127F5B
A312FF5BA490CCFCA2170FA2170EA2171E171C173C173817786C16706D15F04C5A003F5E
6D1403001F4B5A6D4AC8FC000F151E6C6C5C6C6C14F86C6C495A6C6CEB07C090397FC03F
8090261FFFFEC9FC010713F0010013803A4272BF41>67 D<9339FF8001C0030F13E0033F
9038F803809239FF807E07913A03FC001F0FDA0FF0EB071FDA1FC0ECBF00DA7F806DB4FC
4AC77E495AD903F86E5A495A130F4948157E4948157C495A13FF91C9FC4848167812035B
1207491670120FA2485A95C7FC485AA3127F5BA312FF5BA30303B512FC90C7FCA2DB0001
90C7FCA25FA216035FA316076C5E7FA2003F150F6D5D121F6D141F000F153F6C6C4A5A6C
6C14F76C6CEB01E36CB4EB07C1903A7FC03F81C090391FFFFE00010701F890C8FC010013
803A4272BF46>71 D<4AB61280A2180091C713C0167F5FA216FF94C7FCA35D5EA315035E
A315075EA3150F5EA3151F5EA3153F5EA3157FA25EA215FFA293C8FCA25CA25DA2380F80
03EA3FC0D87FE05BA21407D8FFC05B140F01805B49485A12FC0070495A4A5A6C01FEC9FC
383C01FC380F07F03807FFC0C648CAFC314079BD30>74 D<902601FFFE020FB5FC496D5C
A2D900016D010013C04AEE3F00193E70141C193CEC07BFDB3FE01438151F1978020F7FDA
0E0F15708219F0EC1E07021C6D5CA203031401023C7FDA38015DA2701303EC7800027002
805BA2047F130702F014C04A013F91C7FCA2715A0101141F4AECF00EA2040F131E010315
F84A151C1607EFFC3C0107140391C7143817FE040113784915FF010E16708218F0131E01
1C6F5AA2173F133C01385E171F137813F8486C6F5AEA07FEB500F01407A295C8FC483E7B
BD44>78 D<EEFFC0030713F892383F80FE9238FC003FDA03F0EB0F804A486D7EDA1F8080
4AC76C7E027E6E7E4A81494814004948811307495A4948157F133F5C49C9FC4917805B12
01485AA212075B000F17FFA25B121F190048485DA448484B5AA34D5AA25B4D5A12FF6017
1F60007F163F604D5AA24DC7FC5F003F15014C5A6D5D001F4B5A4C5A6C6C4A5A4C5A6C6C
4AC8FC000315FC6C6C495A6C6CEB07E0017FEB1F8090261FC07EC9FC903807FFF8010013
80394273BF46>I<49B77E18F018FC903B0003FE0003FEEF00FF4BEC7F80F03FC0020715
1F19E05DA2020F16F0A25DA2141FF03FE05DA2023F16C0187F4B1580A2027FEDFF00604B
495A4D5A02FF4A5A4D5A92C7EA3FC04CB4C7FC4990B512FC17E04ACAFCA21303A25CA213
07A25CA2130FA25CA2131FA25CA2133FA25CA2137FA25C497EB67EA33C3E7BBD3E>I<92
391FE00380ED7FFC913A01FFFE0700913907F01F8F91390FC007DF4AC66CB4FC023E6D5A
4A130014FC495A4948147CA2495AA2010F15785CA3011F1570A46E91C7FCA2808014FE90
380FFFE015FC6DEBFF8016E06D806D806D6C7F141F02037FEC003FED07FF1501A281A282
A212075A167E120EA2001E15FE5EA25E003E14015E003F14034B5A486C5C150F6D495A6D
49C8FCD8F9F0137C39F8FE01F839F03FFFF0D8E00F13C026C001FEC9FC314279BF33>83
D<48B9FCA25A903AFE001FF00101F89138E0007FD807E0163E49013F141E5B48C75BA200
1E147FA2001C4B131C123C003814FFA2007892C7FC12704A153C00F01738485CC7160014
03A25DA21407A25DA2140FA25DA2141FA25DA2143FA25DA2147FA25DA214FFA292C9FCA2
5BA25CA21303A25CEB0FFE003FB67E5AA2383D71BC41>I<147E49B47E903907C1C38090
391F80EFC090383F00FF017E137F4914804848133F485AA248481400120F5B001F5C157E
485AA215FE007F5C90C7FCA21401485C5AA21403EDF0385AA21407EDE078020F1370127C
021F13F0007E013F13E0003E137FECF3E1261F01E313C03A0F8781E3803A03FF00FF00D8
00FC133E252977A72E>97 D<EC1FC0ECFFF0903803F03C903807C01E90381F800E90383F
000F017E133F4913FF485A485A000714FE5B000F14FC48481300A2485AA3127F90C8FCA3
5A5AA6481403007E1407150F151E003E143C15786C14F0EC03E0390F800F803903E07E00
3801FFF838003FC0202977A72A>99 D<EE3F80ED1FFF1700A2ED007FA2167EA216FEA25E
A21501A25EA21503A25EA21507A25E147E903801FF8F903807C1CF90391F80EFC090383F
00FF017E137F5B48486D5A485AA2485A000F92C7FC5B001F5CA24848137EA215FE127F90
C75AA214015A485CA2140316384814F0A21407167891380FE070127C021F13F0007E013F
5B003E137FECF3E1261F01E35B3A0F8781E3802703FF00FFC7FCD800FC133E294077BE2E
>I<EC3F80903801FFE0903807E0F890381F803CEB3E0001FC131E485A485A1207484813
3E49133C121F4848137C15F8EC03F0397F000FE0ECFF809038FFFC00B512C048C8FCA45A
A61506150E151E007C143C15786C14F0EC01E06CEB07C0390F801F003807C0FC3801FFF0
38007F801F2976A72A>I<167C4BB4FC923807C78092380F83C0ED1F87161FED3F3FA215
7EA21780EE0E004BC7FCA414015DA414035DA30103B512F8A390260007E0C7FCA3140F5D
A5141F5DA4143F92C8FCA45C147EA414FE5CA413015CA4495AA4495AA4495A121E127F5C
12FF49C9FCA2EAFE1EEAF83C1270EA7878EA3FE0EA0F802A5383BF1C>I<EC03F0EC0FFC
91383E0E1C9138FC077E903901F003FE1303903807E001D90FC013FCEB1F80A2EB3F0049
14F8137E01FE1303A2484814F0A2150712034914E0A2150F12074914C0A2151FA216805B
153F1203ED7F006D5BA200015B0000495A9038F80F7E90387C1EFEEB1FF8903807E0FC90
C7FC1401A25DA21403A25D001C1307007F5C48130F5D4A5A4AC7FC48137E00F85B387C03
F0381FFFC0D803FEC8FC273B7CA72A>I<EB01FC13FF5CA21303A25CA21307A25CA2130F
A25CA2131FA25CA2133FA291C8FCEC03F890387F0FFE91383E0F80D97E7813C0ECE007D9
FFC013E014801400A2485A5BA25B0003140F16C05BA20007141F16805BA2000F143F1600
5B5D001F147EEDFE074913FCA2003F0101130FEDF80E1300161E48ECF01CA2007E1538A2
00FE1570020013E048EC7FC00038EC1F0028407ABE2E>I<1478EB01FCA21303A314F8EB
00E01400AD137C48B4FC38038F80EA0707000E13C0121E121CEA3C0F1238A2EA781F0070
1380A2EAF03F140012005B137E13FE5BA212015BA212035B1438120713E0000F1378EBC0
70A214F0EB80E0A2EB81C01383148038078700EA03FEEA00F8163E79BC1C>I<EB07F0EA
03FF14E0A2EA000FA214C0A2131FA21480A2133FA21400A25BA2137EA213FEA25BA21201
A25BA21203A25BA21207A25BA2120FA25BA2121FA25BA2123FA290C7FCA25A1307127EA2
EAFE0F130E12FCA2131E131CA2EA7C381378EA3C70EA1FE0EA0780144079BE17>108
D<D801F0D93F80137F3D07FC01FFE003FFC03D0F3E07C1F80F83F03D0E1F0F00FC1E01F8
001E011C90387C3800001C49D97E707F003C01F05C0038157F4A5C26783FC05C12704A91
C7FC91C7127E00F003FE1301494A5CEA007EA20301140301FE5F495CA203031407000160
495C180F03075D0003051F13E0494A1480A2030FEC3F810007F001C0495CA2031F91383E
0380120F494AEC0700A2033F150E001FEF1E1C4991C7EA0FF80007C7000EEC03E0432979
A74A>I<D801F0EB3F803A07FC01FFE03A0F3E07C1F83A0E1F0F00FC001E011C137C001C
49137E003C13F012385C38783FC012705C91C7FC00F015FE495CEA007EA2150101FE5C5B
A2150300015D5B15075E0003020F13704914C0A2031F13F00007ED80E05B1681EE01C012
0F49EC0380A2EE0700001FEC0F0E49EB07FC0007C7EA01F02C2979A733>I<EC1FC0ECFF
F8903803F07C90380FC01FEB1F8090393F000F80017E14C0491307484814E0485A12075B
000F15F0485AA2485AA2ED0FE0127F90C7FCA2151F4815C05AA2ED3F80A2ED7F00A24814
7E007C5C007E13015D4A5A003E495A6C495A4A5A260F803EC7FC3807C0FC3801FFF03800
3F80242977A72E>I<903903E001F890390FF807FE903A1E7C1E0F80903A1C3E3C07C001
3C137801389038E003E0EB783F017001C013F0ED80019038F07F0001E015F8147E160300
0113FEA2C75AA20101140717F05CA20103140F17E05CA20107EC1FC0A24A1480163F010F
15005E167E5E131F4B5A6E485A4B5A90393FB80F80DA9C1FC7FCEC0FFCEC03E049C9FCA2
137EA213FEA25BA21201A25BA21203A2387FFFE0B5FCA22D3A80A72E>I<D801F013FC3A
07FC07FF803A0F3E0F03C0260E1F1C13E0001EEB380F001C1370003CEBE01F123814C0D8
783F14C00070903880070092C7FC91C8FC12F05BEA007EA313FE5BA312015BA312035BA3
12075BA3120F5BA3121F5B0007C9FC232979A726>114 D<EC7F80903801FFE0903807C0
F890381F003C013E131C013C131E017C133E49137E15FEA2000114FCA215706D13007FEB
FFC014FC6C13FF15806D13C06D13E0010F13F01300140F14071403120C123F387F800114
03D8FF0013E0A300FCEB07C000F0EB0F8012700078EB1F006C133C381F01F83807FFE0C6
90C7FC1F297AA725>I<EB01C0EB03F01307A25CA2130FA25CA2131FA25CA2133FA291C7
FCA2007FB51280B6FC1500D8007EC7FC13FEA25BA21201A25BA21203A25BA21207A25BA2
120FA25BA2121F141C1380A2003F133C1438EB0078147014F05C495AEA1F03495A6C48C7
FCEA07FCEA01F0193A78B81E>I<137C48B4141C26038F80137EEA0707000E7F001E15FE
121CD83C0F5C12381501EA781F007001805BA2D8F03F1303140000005D5B017E1307A201
FE5C5B150F1201495CA2151F0003EDC1C0491481A2153F1683EE0380A2ED7F07000102FF
13005C01F8EBDF0F00009038079F0E90397C0F0F1C90391FFC07F8903907F001F02A2979
A731>I<017C167048B491387001FC3A038F8001F8EA0707000E01C015FE001E1403001C
EDF000EA3C0F0038177C1507D8781F4A133C00701380A2D8F03F130F020049133812005B
017E011F14784C137013FE5B033F14F0000192C712E05BA2170100034A14C049137E1703
1880A2EF070015FE170E00010101141E01F86D131C0000D9039F5BD9FC076D5A903A3E0F
07C1E0903A1FFC03FFC0902703F0007FC7FC372979A73C>119 D<903903F001F890390F
FC07FE90393C1E0E0F9026780F1C138001F0EBB83FD801E013F89039C007F07FEA038000
0714E0D9000F140048151C000E4AC7FCA2001E131FA2C75BA2143F92C8FCA35C147EA314
FE4A131CA30101143C001E1538003F491378D87F811470018314F000FF5D9039077801C0
39FE0F7C033A7C0E3C078027783C1E1EC7FC391FF80FFC3907E003F029297CA72A>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Ff cmsy10 10.95 9
/Ff 9 113 df<007FB812F8B912FCA26C17F83604789847>0 D<121EEA7F80A2EAFFC0A4
EA7F80A2EA1E000A0A799B19>I<1818187CEF01FCEF07F8EF1FF0EF7FC0933801FF00EE
07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948
C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA1FF0EA7FC048CBFC5AEA7F80EA3FE0EA0F
F8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE913800FF80ED
3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF0FF8EF03FC
170018381800AE007FB812F8B912FCA26C17F8364878B947>20 D<126012F812FEEA7F80
EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC03FE91
3800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF3FE0EF
0FF8EF03FC1701EF07F8EF1FF0EF7FC0933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07
FCED1FF0ED7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CA
FCEA07FCEA1FF0EA7FC048CBFC12FC1270CCFCAE007FB812F8B912FCA26C17F8364878B9
47>I<D91FE01620D9FFFC16704813FF000714C04814F048809026E01FFE15F0273F0003
FFEC01E0007E010013C00078DA3FF01307DB0FFCEB0FC048913A07FF807F8048020190B5
FC6F1500043F5B040F13F804035B00409238007F80CDFCA4D91FE01620D9FFFC16704813
FF000714C04814F048809026E01FFE15F0273F0003FFEC01E0007E010013C00078DA3FF0
1307DB0FFCEB0FC048913A07FF807F8048020190B5FC6F1500043F5B040F13F804035B00
409238007F803C287BAB47>25 D<ED0780150F93CBFC5D151E153E5DA25D4A5A4A5A1407
5D4A5A023FB912FE4A18FF91BBFC4919FED907E0CCFC495AEB3F8001FECDFCEA03F8EA1F
F0EAFFC0A2EA1FF0EA03F8EA00FEEB3F80EB0FC06D7E0101BA12FE6D19FF806E18FEDA0F
80CBFC6E7E8114036E7E6E7E157CA281151E151F8182150750327BAF5B>40
D<EF01E0841700841878187C84A284727E727E851803727E007FB912FCBA7E856C85CCEA
07E0737EF101FCF1007FF21FC0F20FF8F203FFA2F20FF8F21FC0F27F00F101FCF103F04F
5A007FBA1280BBC7FC616C60CBEA01F04E5A1807614E5A4EC8FC183EA260187818F86017
016050327BAF5B>I<126012F0B3B3B3B3B11260045B76C319>106
D<1A03F207801A0FA2F21F00A21A3EA262A262A24F5AA24F5AA24F5AA24F5AA24FC7FCA2
193EA261A261A24E5AA24E5AA24E5AA24E5AA24EC8FCA2183EA260A260A24D5A131C017C
5E01FE15031201D807FF4B5A120E484C5A00787FD8E07F4BC9FC00C07FD8003F153E8001
1F5D80010F5D8001074A5A8001034A5AA26E495A13016E495A7F6F48CAFC147FEDC03E14
3F6F5A141F6F5A140FEDF1F015F9913807FBE015FF6E5BA26E5BA26E90CBFCA2157EA215
3C1538495B7B834C>112 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fg cmmi10 10.95 16
/Fg 16 117 df<0120ED01C00178ED07F001F8150F000117F85B485A5B00071607491503
48C9EA01F0A2121E1700121C003C023814E0003814FCA200781601140100704A14C0A217
034B148000F0130317074B14005F5D0207141E6F133E6C010F5C4A7E6C013F5C007E9038
FFF8033B7F87FDFF0FF0D9FFF8EBFFE06C495C4A6C5B6C496C90C7FC00079038001FFCD8
01F8EB03F035297EA739>33 D<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>
58 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013C0A312011380120313
005A120E5A1218123812300B1C798919>I<183818FC1703EF0FF8EF3FE0EFFF80933803
FE00EE0FF8EE3FE0EEFF80DB03FEC7FCED0FF8ED3FE0EDFF80DA03FEC8FCEC0FF8EC3FE0
ECFF80D903FEC9FCEB0FF8EB3FE0EBFF80D803FECAFCEA0FF8EA3FE0EA7F8000FECBFCA2
EA7F80EA3FE0EA0FF8EA03FEC66C7EEB3FE0EB0FF8EB03FE903800FF80EC3FE0EC0FF8EC
03FE913800FF80ED3FE0ED0FF8ED03FE923800FF80EE3FE0EE0FF8EE03FE933800FF80EF
3FE0EF0FF8EF03FC17001838363678B147>I<ED0180ED03C01507A21680150FA216005D
A2151E153EA2153C157CA2157815F8A25D1401A25D1403A25D1407A25D140FA24AC7FCA2
141E143EA2143C147CA2147814F8A25C1301A25C1303A25C1307A25C130FA291C8FC5BA2
131E133EA25BA2137813F8A25B1201A25B1203A25B1207A25B120FA290C9FC5AA2121E12
3EA2123C127CA2127812F8A25A1260225B7BC32D>I<126012F8B4FCEA7FC0EA1FF0EA07
FCEA01FF38007FC0EB1FF0EB07FCEB01FF9038007FC0EC1FF0EC07FCEC01FF9138007FC0
ED1FF0ED07FCED01FF9238007FC0EE1FF0EE07FCEE01FF9338007FC0EF1FF0EF07F8EF01
FCA2EF07F8EF1FF0EF7FC0933801FF00EE07FCEE1FF0EE7FC04B48C7FCED07FCED1FF0ED
7FC04A48C8FCEC07FCEC1FF0EC7FC04948C9FCEB07FCEB1FF0EB7FC04848CAFCEA07FCEA
1FF0EA7FC048CBFC12FC1270363678B147>I<EE3FF00303B5FC92391FC03FC092397E00
07E0DA01F8EB01F8DA07E06D7E4A48147E023FC87E027EED1F804A16C0D903F8150F4948
16E0495A4948ED07F0A2494816F849C9FC5B48481603A2484817FCA2485A000F17075B12
1FA25B123F19F84848160FA44848EE1FF0A3F03FE0A390CAEA7FC0A2F0FF80A219004D5A
1703604D5A6C7E4D5A4D5A003F5F4D5A6C6C4BC7FC17FE6C6C4A5A4C5A6C6CEC07E06C6C
EC1FC06C6C4A5A6C6C02FEC8FC90393F8003F890390FE01FE00103B5C9FC9038007FF03E
427BBF45>79 D<48B912FCA25A913A0003FE000F01F84A1301D807E0EE00F84913074917
78000F5D90C7FC001E140FA2001C4B1470123C0038141FA200785D1270033F15F000F018
E0485DC81600157FA25EA215FFA293C9FCA25CA25DA21403A25DA21407A25DA2140FA25D
A2141FA25DA2143FA25DA2147FA214FF497F001FB612FCA25E3E3D7FBC35>84
D<EC1F80ECFFE0903903F0707090390FC039F890381F801D90383F000F017E5C5B000114
07485A48485CA2485A001F140F5E485AA2151F007F5D5BA2153F00FF92C7FC90C7FCA25D
92387E03805AA215FEEDFC07007E0101140014035E6C0107130E140E3A1F801C7C1C000F
13783A07C1F03E383A01FFC01FF03A007F0007C029297DA730>97
D<EB1FC0EA0FFF5CA2EA003FA291C8FCA25BA2137EA213FEA25BA21201A25BA21203A25B
EC3F800007EBFFE09038F3C1F849C67E01FE137E4848133E49133F5B491480001F141F5B
5BED3FC0123FA290C7FCA248147F1680127EA215FF00FE15005AA24A5AA25D1403485C14
07007C5C4A5A5D003C495A003E49C7FC001E137E6C13F8380783F03803FFC0C648C8FC22
407CBE27>I<EC07F0EC7FFE903801FC0F903907E0038090390FC001C0D93F8013E09038
7F000701FE131F485A485A16C0485A000F15804990C7FC121F485AA3127F5BA312FF90C9
FCA6007E1560007F15E01501ED03C06CEC07806DEB0F00001F141E6C6C137C3907E001F0
3901F01FC06CB5C7FCEB1FF023297DA727>I<EC01F8EC0FFE91383F07879139FC03DF80
903801F801903903F000FFEB0FE04948EB7F005C133F49C7FC49147E5B000115FEA24848
5CA215011207495CA21503120F495CA21507A25E5B0007140FA24B5A6D133F0003147F00
0114FF6D485B0000EB03DF90387E0F3FEB1FFCD907F090C7FC90C7FC5DA2157EA215FEA2
5D001C1301007F5C4813035D4A5A4A5A48495A00F8017EC8FC387E01FC381FFFE0000390
C9FC293B7FA72B>103 D<01F8D907F0EB07F8D803FED93FFEEB1FFE28078F80F81FEB78
1F3E0F0F81C00F81E00F803E0E07C78007C3C007C0001CD9CF00EBC78002FEDAEF007F00
3C4914FE0038495C49485C12780070495CA200F0494948130F011F600000495CA2041F14
1F013F6091C75B193F043F92C7FC5B017E92C75A197E5E01FE9438FE01C049027E14FCA2
04FE01011303000106F81380495CF20700030115F00003190E494A151E1A1C03035E0007
943800F8F0494AEC7FE0D801C0D900E0EC1F804A297EA750>109
D<01F8EB0FF0D803FEEB3FFC3A078F80F03E3A0F0F83C01F3B0E07C7800F80001CEBCF00
02FE80003C5B00385B495A127800705BA200F049131F011F5D00005BA2163F013F92C7FC
91C7FC5E167E5B017E14FE5EA201FE0101EB03804914F8A203031307000103F013005B17
0E16E000035E49153C17385F0007913801F1E0496DB45AD801C0023FC7FC31297EA737>
I<EC07F8EC7FFE903901FC0F80903907E007E090390FC003F090393F8001F8EB7F0001FE
EB00FC485A484814FEA2485A120F5B001F15FF485AA2ED01FE127F5BA2150300FF15FC90
C7FCA2ED07F8A2ED0FF0A2007E15E0007FEC1FC0ED3F80A26CEC7F006C6C13FC4A5A6C6C
485A3907E00FC02601F03FC7FC3800FFFCEB1FE028297DA72C>I<147014FC1301A25CA2
1303A25CA21307A25CA2130FA25CA2007FB512F0B6FC15E039001F8000133FA291C7FCA2
5BA2137EA213FEA25BA21201A25BA21203A25BA21207EC01C013E01403000F1480A2EBC0
071500140E141E5C000713385C3803E1E03801FF80D8003EC7FC1C3A7EB821>116
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fh cmbx12 20.74 11
/Fh 11 117 df<EE01F0EE07F8160F163F167FED01FF150F153F4AB5FC143F010FB6FCB8
FCA54A7E14C0EBF000C8FCB3B3B3B3AE007FBA12F0A8447171F061>49
D<92380FFFE04AB67E020F15F0027F15FE49B87E4917E0010F17F8013F8349D9C01F14FF
9027FFFC0001814801E06D6C80480180021F804890C86C8048486F8048486F8001FF6F80
4801C06E8002F081486D18806E816E18C0B5821BE06E81A37214F0A56C5BA36C5B6C5B6C
5B000313C0C690C9FC90CA15E060A34E14C0A21B80601B0060626295B55A5F624D5C624D
5C4D91C7FC614D5B4D13F04D5B6194B55A4C49C8FC4C5B4C5B4C13E04C5B604C90C9FCEE
7FFC4C5A4B5B4B5B4B0180EC0FF04B90C8FC4B5A4B5A4B48ED1FE0EDFFE04A5B4A5B4A90
C9FC4A48163F4A5ADA3FF017C05D4A48167F4A5A4990CA12FFD903FC160749BAFC5B4919
805B5B90BBFC5A5A5A5A481A005A5ABCFCA462A44C7176F061>I<923801FFFE033FEBFF
F84AB7FC020F16E0023F16F84A16FE49B97E49DA003F80010F01F0010714F04901800101
804948C880D97FF86F7F02E081496C834801FC6F148014FF486E6E14C08181481AE081A9
6C5C1BC06C4A5C6C5C6D90C815806D5AD90FF85D90CA150062606295B55A4D5C624D5C4D
5C4D91C7FC4D13FC4D5B4CB512E0047F1480037FB548C8FC92B612F818C018F8F0FF806F
15F092C7003F13FC050713FF050114C071807213F8727F727F867214801BC07214E01BF0
A27214F81BFCA37214FEA31BFFEBFF80000313E0487F001F13FC487FA2487FA2B67EA31B
FEA3601BFCA292C8FC6C1AF84A5D4A18F06C494B14E05C6C01C04B14C06C90C915804E14
006C6D4B5B6C01F092B55A6C01FC4A5C27007FFFC001075C6D01FE013F14C0010F90B85A
6D4DC7FC010117F8D9003F16E0020F93C8FC020015F0030749C9FC507378F061>I<F10F
F04F7E193FA2197F19FF60A260606060A2606095B5FCA25F5F5FA25F5F5F5F18BFEFFF3F
5EEE03FE17FCEE07F8160FEE1FF0EE3FE017C0167FEEFF804B13005E4B5A15074B5A4B5A
5E153F4B5A4B5A93C7FC4A5A14034A5A5D4A5A141F4A5A4A5A5D4AC8FC5B495A5C495A13
0F495A495A5C137F495A4890C9FC5B485A1207485A485A5B123F485A485A90BC12FCA8CB
02F8C7FCB3A20307B912FCA856727BF161>I<96267FFFE01670063FB6ED01F80503B700
F01403053F04FC14074CB96C130F040706E0131F043F72133F93BA00FC137F0303DC0007
6D13FF030F03C09039003FFF814B02FCC8000713C3037F02E0030113F792B600806F6CB5
FC02034ACA121F4A02F8834A02E0834A4A1701027F4A8391B548CC7E494A85495C4C8549
88494A85494A85495C8A4991CDFC90B54886A2484A1B7FA2481E3F5D481E1F5D5A1F0FA2
485CA3481E075DA2F703F0489BC7FCA45DA2B6FCB27EA281A47EA2F703F06FF307F87EA3
6C80A21F0F7E6F1CF07E6F1B1F7E20E06C6E1B3F816DF57FC06D80F7FF806D806D6E4F13
006D6E616D525A826D6E4F5A6D6E4F5A6E6D6C4E5A021F6EF0FFE06E6E4D5B6E02F84D5B
6E02FE050F90C7FC02006E6CEE3FFE6F02F0EEFFFC031F02FE03035B6FDAFFC0021F13E0
030303FF0103B55A030093B7C8FC043F18FC040718F0040118C0DC003F94C9FC050316F8
DD003F1580DE007F01F0CAFC757A75F78C>67 D<92383FFFF80207B612E0027F15FC49B8
7E010717E0011F83499026F0007F13FC4948C7000F7F90B502036D7E486E6D806F6D8072
7F486E6E7F8486727FA28684A26C5C72806C5C6D90C8FC6D5AEB0FF8EB03E090CAFCA705
07B6FC041FB7FC0303B8FC157F0203B9FC021FECFE0391B612800103ECF800010F14C049
91C7FC017F13FC90B512F04814C0485C4891C8FC485B5A485B5C5A5CA2B5FC5CA360A36E
5DA26C5F6E5D187E6C6D846E4A48806C6D4A4814FC6C6ED90FF0ECFFFC6C02E090263FE0
7F14FE00019139FC03FFC06C91B6487E013F4B487E010F4B1307010303F01301D9003F02
80D9003F13FC020101F8CBFC57507ACE5E>97 D<93387FFF80030FB512FC037FECFF804A
B712E0020716F8021F16FE027FD9F8077F49B5D8C000804991C7003F13E04901FC020F7F
49496E7F49498049496E7F49496E7F90B55A48727E92C914804884485B1BC048841BE048
5BA27313F05AA25C5AA21BF885A2B5FCA391BAFCA41BF002F8CCFCA67EA3807EA47E806C
F103F0F207F86C7F1A0F6C6E17F06C191F6F17E06C6E163F6D6DEE7FC06D6D16FF6D6D4B
13806D6D4B13006D6D6CEC0FFE6D02E0EC3FFC6D02F8ECFFF86D9126FFC00F5B023F91B6
5A020F178002034CC7FC020016F8031F15E0030392C8FCDB000F13E04D507BCE58>101
D<903801FFFCB6FCA8C67E131F7FB3AD95380FFFE095B512FE05036E7E050F15E0053F15
F84D81932701FFF01F7F4CD900077FDC07FC6D80DC0FF06D80DC1FC07F4C48824CC8FC04
7E6F7F5EEDFDF85E03FF707F5EA25EA25EA293C9FCA45DB3B3A6B8D8E003B81280A86178
79F76C>104 D<902601FFFCEC7FFEB6020FB512F0057F14FE4CB712C0040716F0041F82
047F16FE93B5C66C7F92B500F0010F14C0C66C0380010380011F4AC76C806D4A6E8004F0
6F7F4C6F7F4C6F7F4C8193C915804B7014C0861DE0A27414F0A27414F8A47513FCA57513
FEAF5113FCA598B512F8A31DF0621DE0621DC0621D806F5E701800704B5B505B704B5B70
92B55A04FC4A5C704A5C706C010F5C05E0013F49C7FC9227FE7FFC01B55A70B712F0040F
16C0040393C8FC040015F8053F14C0050301F0C9FC94CCFCB3A6B812E0A85F6F7ACD6C>
112 D<902601FFF8EB07FEB691383FFFC094B512F00403804C14FE4C8093261FFC3F1380
93263FE07F13C0DC7F80B5FCC66C5D011FDAFE0114E06DEBF9FC16F815FB16F016E015FF
16C07114C05E72138095381FFE0093C76C5AF001E095C8FCA25DA65DB3B3A2B812F8A843
4E7ACD4F>114 D<15FFA75CA55CA45CA25CA25CA25CA25C91B5FCA25B5B5B131F5B90B9
FC120FBAFCA6D8000791C9FCB3B3A3F01FE0AE183F7014C07F187F7014806D16FF826D4B
13006E6D485AEEFE0F6E90B55A020F5D6E5D020115C06E6C5C031F49C7FC030113F03B6E
7CEC4B>116 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fi cmbx10 10.95 39
/Fi 39 123 df<EDFFF8020F13FF027F8049B612E001079038C01FF090390FFE0007D91F
F8497ED93FE0131F4948497E13FF5C5A91C7FCA2705A705AEE03C093C8FCA6EE03FCB8FC
A50001903880001F160FB3AB007FD9FE03B512F0A534407EBF3A>12
D<DBFFF8903807FFC0021F01FE017F13F8027FD9FF83B57E49B600CF14FF01079028C03F
FFFE007F90270FFE000F01F0133FD91FF84901C0497ED93FE04990C712FF49484A497F13
FF4A495A5A91C76C5AA2041F6E5B040F6F5A081EC7FC97C8FCA6F21FE0BCFCA500019027
80000FFCC7FC1A7FB3AB007FD9FE03B5D8F01FB51280A551407EBF57>14
D<EA0FC0EA1FE0EA3FF0EA7FF8EAFFFCA6EA7FF8EA3FF0EA1FE0EA0FC00E0E798D1D>46
D<140F143F5C495A130F48B5FCB6FCA313F7EAFE071200B3B3A8007FB612F0A5243C78BB
34>49 D<903803FF80013F13F890B512FE00036E7E4881260FF80F7F261FC0037F4848C6
7F486C6D7E6D6D7E487E6D6D7EA26F1380A46C5A6C5A6C5A0007C7FCC8FC4B1300A25E15
3F5E4B5AA24B5A5E4A5B4A5B4A48C7FC5D4A5AEC1FE04A5A4A5A9139FF000F80EB01FC49
5A4948EB1F00495AEB1F8049C7FC017E5C5B48B7FC485D5A5A5A5A5AB7FC5EA4293C7BBB
34>I<903801FFE0010F13FE013F6D7E90B612E04801817F3A03FC007FF8D807F06D7E82
D80FFC131F6D80121F7FA56C5A5E6C48133FD801F05CC8FC4B5A5E4B5A4A5B020F5B9026
07FFFEC7FC15F815FEEDFFC0D9000113F06E6C7E6F7E6F7E6F7E1780A26F13C0A217E0EA
0FC0487E487E487E487EA317C0A25D491580127F49491300D83FC0495A6C6C495A3A0FFE
01FFF86CB65A6C5DC61580013F49C7FC010313E02B3D7CBB34>I<ED01F815031507A215
0F151F153FA2157F15FF5C5CA25C5CEC1FBFEC3F3F143E147C14FCEB01F814F0EB03E013
07EB0FC0EB1F801400133E137E5B485A5B485A1207485A5B48C7FC5A127E5AB812F8A5C8
387FF800AA49B612F8A52D3C7DBB34>I<00071538D80FE0EB01F801FE133F90B6FC5E5E
5E5E93C7FC5D15F85D15C04AC8FC0180C9FCA9ECFFC0018713FC019F13FF90B67E020113
E09039F8007FF0496D7E01C06D7E5B6CC77FC8120F82A31780A21207EA1FC0487E487E12
FF7FA21700A25B4B5A6C5A01805C6CC7123F6D495AD81FE0495A260FFC075B6CB65A6C92
C7FCC614FC013F13F0010790C8FC293D7BBB34>I<903801FFE0010F13FC013F13FF90B6
12C04801E07F489038003FF048486D7E000F6E7E485A6F7E123F48488081178012FFA217
C0A517E0A4007F5CA4003F5C6C7E5D6C7E00075C3903FF80FB6C13FF6C6C13F36D13C301
0F018313C090380008031400A24B1380EA03F0487E486C1500487E4B5AA25E151F4B5A49
5C6C48EBFFE049485B2607FC0F5B6CB6C7FC6C14FC6C14F06D13C0D90FFEC8FC2B3D7CBB
34>57 D<16FCA24B7EA24B7EA34B7FA24B7FA34B7FA24B7FA34B7F157C03FC7FEDF87FA2
020180EDF03F0203804B7E02078115C082020F814B7E021F811500824A81023E7F027E81
027C7FA202FC814A147F49B77EA34982A2D907E0C7001F7F4A80010F835C83011F8391C8
7E4983133E83017E83017C81B500FC91B612FCA5463F7CBE4F>65
D<B812F8EFFF8018F018FC8426003FFCC7EA3FFF050F13807113C07113E08319F0A27113
F8A719F05FA24D13E019C04D13804D1300EF3FFE933801FFF891B712E0188018F818FE02
FCC7380FFF80050313C07113E07113F019F8F07FFCA2F03FFEA219FFA38460A419FE187F
A2F0FFFC4D13F85F4D13F0053F13E0BA12C0190018FC18F095C7FC403E7DBD4A>I<B812
F8EFFF8018F018FC18FF26003FFCC76C13C005077F05017F716C7E727E727E727E721380
A27213C0A27213E0A21AF084A21AF8A41AFCA5197FA319FFA51AF8A41AF0A2601AE0A24E
13C0A24E13804E1300604E5A4E5A4D485A050713E0057F5BBA5A4EC7FC18F818C005F8C8
FC463E7DBD50>68 D<BAFCA4198026003FFEC7123F1707170183183FA2181FF00FC0A318
07EE07C0A3F003E0A3160F95C7FC161F163F16FF91B6FCA54AC6FC163F161F040F147CA2
160719F8A593C71201A219F01803A21807A2180FF01FE0183F18FF1703173FBAFCA219C0
A33E3D7DBC45>I<B712E0A526003FFEC9FCB3AD183EA4187E187CA418FCA21701A2EF03
F8A21707170F171F177FEE01FF160FB9FC18F0A4373E7DBD3F>76
D<B6051FB512C06F5EA26F5EA2D8003F97C7FC6F16F7A26E6CED01E7A26E6CED03C7A36E
6CED0787A26E6CED0F07A26E6C151EA36E6D143CA26E6D1478A26E6D14F0A26F6CEB01E0
A36F6CEB03C0A26F6CEB0780A26F6CEB0F00A36F6C131EA26F6D5AA26F6D5AA26F6D5AA3
93387FF1E0A293383FFBC0A270B45AA37090C7FCA2705AA2705AB600C0031FB612C0A270
5AA2705A5A3E7CBD63>I<B812F017FF18C018F018FC26003FFCC77FEF1FFF7113807113
C07113E0A27113F0A319F8A819F0A34D13E019C05F4D1380053F1300EFFFFE91B712F860
188005FCC7FC4ACAFCB3A4B77EA53D3E7DBD47>80 D<B76C90B61280A526003FFEC9003E
C7FCB3B3A4197E011F177C80A26D17FC616D6D14014E5A6D6D4A5A6D6D140F6D01F8EC3F
C0DA7FFEECFF8091273FFFC00F90C8FC020F90B512FC02035D020015E0031F1480030101
F8C9FC493F7DBD50>85 D<903807FFC0013F13F848B6FC48812607FE037F260FF8007F6D
EB3FF0486C806F7EA36F7EA26C5A6C5AEA01E0C8FC153F91B5FC130F137F3901FFFE0F48
13E0000F1380381FFE00485A5B485A12FF5BA4151F7F007F143F6D90387BFF806C6C01FB
13FE391FFF07F36CEBFFE100031480C6EC003FD91FF890C7FC2F2B7DA933>97
D<13FFB5FCA512077EAFEDFFE0020713FC021FEBFF80027F80DAFF8113F09139FC003FF8
02F06D7E4A6D7E4A13074A80701380A218C082A318E0AA18C0A25E1880A218005E6E5C6E
495A6E495A02FCEB7FF0903AFCFF01FFE0496CB55AD9F01F91C7FCD9E00713FCC7000113
C033407DBE3A>I<EC7FF00107B5FC011F14C0017F14E09039FFF01FF0489038800FF848
EB001F4848EB3FFC120F485AA2485AA2007FEC1FF849EB0FF0ED03C000FF91C7FCAB127F
7FA3003F153E7F001F157E6C6C147C6C6C14FC91388001F86C9038C003F0C69038F81FE0
6DB512C0011F14800107EBFE009038007FF0272B7DA92E>I<EE07F8ED07FFA5ED003F16
1FAFEC7FF0903807FFFE011FEBFF9F017F14DF9039FFF01FFF48EBC00348EB00014848EB
007F485A001F153F5B123FA2127F5BA212FFAA127FA37F123FA26C6C147F120F6D14FF6C
6C01037F6C6D48EBFFE06CEBF03F6C6CB512BF6D143F010713FC010001E0EBE00033407D
BE3A>I<ECFFF0010713FE011F6D7E017F809039FFE07FE0489038801FF048496C7E4848
6D7E48486D7E121F491301003F81A2485A6F1380A212FFA290B7FCA401F0C9FCA5127FA2
7F123FEE0F806C7E161F6C6C15006C6C5C6C6D137E6C9038E001FC6C9038F80FF8013FB5
5A6D14C0010391C7FC9038007FF8292B7DA930>I<EC07FE91387FFF8049B512C0010714
E090390FFE3FF0EB1FF090393FE07FF8EB7FC013FF1480A2489038003FF0ED1FE0ED0FC0
92C7FCAAB612E0A500010180C7FCB3AC007FEBFF80A525407DBF20>I<903A03FF8007F0
013F9038F83FF8499038FCFFFC48B712FE48018313F93A07FC007FC34848EB3FE1001FED
F1FC4990381FF0F81700003F81A7001F5DA26D133F000F5D6C6C495A3A03FF83FF8091B5
C7FC4814FC01BF5BD80F03138090CAFCA2487EA27F13F06CB6FC16F016FC6C15FF17806C
16C06C16E01207001F16F0393FE000034848EB003F49EC1FF800FF150F90C81207A56C6C
EC0FF06D141F003F16E001F0147FD81FFC903801FFC02707FF800F13006C90B55AC615F8
013F14E0010101FCC7FC2F3D7DA834>I<13FFB5FCA512077EAFED1FF8EDFFFE02036D7E
4A80DA0FE07F91381F007F023C805C4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A5333F7C
BE3A>I<EA01F8487E487E487E481380A66C13006C5A6C5A6C5AC8FCA913FFB5FCA51207
7EB3ABB512F8A515407CBF1D>I<13FFB5FCA512077EB092380FFFFEA5DB01FEC7FC4B5A
ED07F0ED1FE04B5A4B5A4BC8FCEC03FC4A5A4A5A141F4A7EECFFFCA2818102E77F02C37F
148102007F826F7E6F7E151F6F7E826F7F6F7F816F7FB5D8FC07EBFFC0A5323F7DBE37>
107 D<13FFB5FCA512077EB3B3AFB512FCA5163F7CBE1D>I<01FFD91FF8ECFFC0B590B5
010713F80203DAC01F13FE4A6E487FDA0FE09026F07F077F91261F003FEBF8010007013E
DAF9F0806C0178ECFBC04A6DB4486C7FA24A92C7FC4A5CA34A5CB3A4B5D8FE07B5D8F03F
EBFF80A551297CA858>I<01FFEB1FF8B5EBFFFE02036D7E4A80DA0FE07F91381F007F00
07013C806C5B4A6D7E5CA25CA35CB3A4B5D8FE0FB512E0A533297CA83A>I<EC7FF09038
03FFFE011FEBFFC0017F14F09039FFE03FF8489038800FFC3A03FE0003FE48486D7E000F
168048486D13C0A2003F16E049147F007F16F0A400FF16F8AA007F16F0A46C6CECFFE0A2
001F16C06C6C491380A26C6C4913003A03FF800FFE6C9038E03FFC6C6CB512F0011F14C0
010791C7FC9038007FF02D2B7DA934>I<01FFEBFFE0B5000713FC021FEBFF80027F80DA
FF8113F09139FC007FF8000701F06D7E6C496D7E4A130F4A6D7E1880A27013C0A38218E0
AA4C13C0A318805E18005E6E5C6E495A6E495A02FCEBFFF0DAFF035B92B55A029F91C7FC
028713FC028113C00280C9FCACB512FEA5333B7DA83A>I<3901FE01FE00FF903807FF80
4A13E04A13F0EC3F1F91387C3FF8000713F8000313F0EBFFE0A29138C01FF0ED0FE09138
8007C092C7FCA391C8FCB3A2B6FCA525297DA82B>114 D<90383FFC1E48B512BE000714
FE5A381FF00F383F800148C7FC007E147EA200FE143EA27E7F6D90C7FC13F8EBFFE06C13
FF15C06C14F06C806C806C806C80C61580131F1300020713C014000078147F00F8143F15
1F7EA27E16806C143F6D140001E013FF9038F803FE90B55A15F0D8F87F13C026E00FFEC7
FC222B7DA929>I<EB07C0A5130FA4131FA3133F137FA213FF5A1207001FEBFFFEB6FCA4
0001EBC000B3151FA96CEBE03EA2017F137EECF8FC90383FFFF86D13F0010713E0010013
80203B7EB929>I<B53CFC3FFFFC03FFFEA50003D980009039C0000F806E161F6C037F15
006E496C5B6C183E836E48157E017F177C6E486D13FC013F02EF5C83DAFC071401011F02
C75CDAFE0FEBFE03010F02835C17FFDAFF1F14076D02015C03BF148F6DD9BE005C18CF03
FE14DF6D49017F90C7FC18FF6D496D5AA36E486D5AA26E486D5AA36E486D5AA26E486D5A
47287EA74C>119 D<B5D8FC03B51280A5C69026E0007FC7FC6E13FE6D6C5B6D6C485A6D
6C485A010F13076D6C485AED9FC06DEBFF806D91C8FC6D5B6E5AA2143F6E7E140F814A7F
4A7F4A7F02FE7F903801FC7F49486C7E02F07F49486C7E49486C7E011F7F49486C7FD97F
008001FE6D7FB5D8C007EBFFC0A532287EA737>I<B500FC90383FFFC0A5000101C09038
03E0006E1307A26C5E6E130F017F5D6E131F013F92C7FC6E5B011F143E6E137E010F147C
6E13FCA26D5C15816D5C15C36D5C15E76D5C15FF6E5BA36E90C8FCA26E5AA26E5AA26E5A
A26E5AA35D14075D000E130FD83F805B387FC01FD8FFE090C9FC5C143E147E5CEBC1F838
7FC3F0387E0FE06CB45A6C5B6C48CAFCEA03F8323B7EA737>I<003FB612F8A4D9F80113
F001C014E0495A494813C04A1380007E15005C4A5A007C5C147F4A5A495B5DC65A495B49
5BA249EB007C495A5C137F494813FC484913F85C5A48EBC0011480481403481300484813
0749131F007FECFFF0B7FCA426287DA72E>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fj cmbx12 24.88 33
/Fj 33 123 df[<96380FFFFE060FB612E04DB712FC051F16FF94B912C0040784041F18
F8047F9126FC001F7F4BB6008001017F030702F8C8EA3FFF4B02E0030F7F033F02804B7F
4B49C9127F92B54893B57E4A02F05D4A4A4B804A4A5D4A4A84634A91C9FC4A5BA24A5B51
80755C91B5FC5EA3755CA2755C755C755CE23FFEC8FCF40FF899CAFCAF083FB612FCBFFC
A9C702FCC912038787B3B3B3B2003FB800F0013FB812F0A9>116
144 123 271 129 12 D[<96260FFFFE0507B5FC060FB600E00307B612F04DB700FC92B7
12FE051F04FF020F707E94B900C0017F17E00407DEF003B97E041FDEF80F18FC047F9126
FC001FD9FC3F9126FE000F7F4BB6008001006DB600C001007F030702F8C8003FB600FCC8
001F7F4B02E0030F03F003077F033F02804B03C04B7F4B49C9007F92C9123F92B54893B6
484C7F4A02F04B03F893B5FC4A4A4B4B4B804A4A4B4B5D4A4A4F8451614A91C95E4A4997
C9FCA24A496159807D5C91B5FC4C61A375735CA275735C75735C75745B76071F90C8FCA1
EA07FCA1CAFCAF101FB612FEC5B5FCA9C702FCCA6C49C912018FA17EB3B3B3B2003FB800
F0011FB800F8011FB812F8A9>181 144 123 271 194 14 D[<F31FE0F37FF8A2517EA2
507FA3507FA25080A35080A25080A35080A25080A397B67EA24F81A34F81A24F82A34F82
A24F82A21AFBDF3FF981A2DF7FF1811AF06207FF6D80A24E01C081871A804E6E80A24E01
00828761060F6E81A24E48838761063F6E81A24E4883876106FF6F80A24D498388614D70
80A24D90C8FC768160050F7081A260051F708160053F7081A260057F70816005FF7180A2
604C7280604C7280A295CAFC4C72815F040F7281A294BDFC4C88A24C88A34C88A293BE7E
05E0CB7E5F4B7480A24B497280A294CCFC4B7481A24B487381A25E031F7481A24B487381
A25E037F7481A24B487480A25E4A7680A24A497480A293CEFC4A7681A24A4875814A7E01
07B512FCB96C043FBA12FCA9>158 145 120 272 175 65 D[<BFFC1EFEF6FFE01FFCF7
FF8020F020FC20FF8DC7000392CA001F15E00B0181776C800C1F807814FF0C03818A7881
8E79808B8E8B8E8B8EA27980A4791580AB551500A4555CA26A676A676A555C9CB65AA254
5D5492C7FC545C5414F80C3F5C545C53B612800B0F4AC8FC0B7F14F80A1FB612E095BBC9
FC1FF81F801FF8F7FF8020F820FE95CBECFFC00C1F14F00C07807814FE0C006E7E798079
8079807980798079808E79158023C08B23E08C23F0A223F88CA223FCA38C23FEAB5614FC
A55614F8A39DB612F0A25515E06723C055158067551500555C555C9CB6FC545D0C075D0C
1F15C09BB75A0B0F93C7FCC212FC6921E021800EFCC8FC20F020800DF0C9FC0CFCCAFC>
143 142 120 269 165 I[<0803B500C0EE01F00703B600FEEE03F8077FDBFFE0150706
07B800FC150F063F05FF151F4DBA00E0143F050F07F8147F053F07FE14FF94BC5B040393
26F8000FECC003040F4BC86CEBF007043F03C0030F6D5A93B648C900036D5A4B03F09339
007FFF3F030703C0051F90B5FC4B92CB7E033F02FC18034B02F08492B648844A0380193F
4A92CD7E4A4A864A4A864A02F0864A4A864A8991B65A494B874992CF7E4C885B494A885E
498B494A88A2495C8D90B65A8D5A5E48217FA24892D1FC223FA25A5DA248211FA3485CFA
0FF09FC7FCA25AA45DA3B6FCB27EA381A47EA46C80FA07F0FA0FF87EA2817EA36C6F1D1F
23F07E827E223F6D6E1EE0A26D6E1D7F23C06D6E1DFF7F705213806D806D55130070646D
6F646D6F515A6E6E1B1F6E6E515A6E6E515A6E6E1BFF6E6E505B6E6E505B6E6F4F5B6E03
E04F90C7FC6F6EF13FFE6F02FC4F5A030F02FF4E485A6F03C005075B030103F0051F5B6F
03FE057F1380043FDAFFE00303B5C8FC040F03FE033F13FC0403DBFFF80107B55A040093
B812E0053F1A80050F4FC9FC050119F8DD003F18C0060795CAFCDE007F16F0070393CBFC
DF000314C0>141 146 115 271 168 I[<BE12FEF5FFFCF6FFC01FFCF7FF8020E020FC20
FF21C0C700030380C8000116F0E2000F810B0015FE0C1F800C0315C00C00810D3F807980
0D0714FE79807981796C808C7A807A808F7A807A808C8F7A818DA17E8DA17E8DA17EA27B
80A2A17E8DA17EA28DA17EA3A113808DA3A113C0A57B15E0A6A113F0B3A2A113E0A569A1
13C0A5A11380A269A2A11300A3575CA2A15AA269A15A69A15AA2575CA15A69A15A9EB6FC
5692C7FC6B565C68565C565C565C565C9DB65A5592C8FC0D075C555C0D3F5C9CB65A0C03
15C00C0F5D0C7F92C9FC0B07B612FC52B712F0C212C09ECAFC20FC20F020800DFCCBFC1F
E00CFCCCFC53CDFC>156 142 120 269 178 I[<C212F8A48DA5C7000303C0C9123FF500
7F1E0F0C0180787E1F1F8B8B1F018BA27A7E8C8CA28CA28CA28C8EA28CA38CA38EA2E21F
F0157FA67B7EA40A3F93C8FCA41C7FA21CFFA26363631B1F1B7F0807B5FC95B8FCA99538
C00007F2007F1B1F1B07878787A21C7FA21C3FA3FA7FC01C1FA2FAFF80A6571300A299CA
FCA369A26AA22107A3210F6AA2211FA2213FA2575AA221FFA26868565BA26868207F9DB5
FC555C1F071F1F1F7F0C03B6FC1E3F0B1FB7FCC35AA66AA3>138
141 120 268 153 I[<BC12C0A9C7000103E0C8FCB3B3B3B3B3B3B0BC12C0A9>74
142 122 269 87 73 D[<BC12F8A9C7000303C0CEFCB3B3B3B3A5F8FF80A4672100A667
A368A21F07A41F0FA3555AA21F3FA21F7FA21FFFA2666668666666666653B5FC65650B1F
5C1D7F0A03B6FC1C1F0903B7FCC1FCA468A5>121 142 120 269
140 76 D[<BE12F8F5FFF01EFF1FE01FFCF7FF8020E020F820FEC700030380C8000781E2
003F15C00B03810B00810C3F8078800C07807880788178818E8B8E8B8E8B8EA28EA28B8E
A42380AC2300A46A67A26AA26A676A676A9CB65A6A665492C7FC545C0C1F5C545C9BB612
E00B075D0B3F5D0A07B648C8FC95BB12F820E0208055C9FC1FF09CCAFC1EF00BF8CBFC06
C0D0FCB3B3B2BCFCA9>137 142 120 269 159 80 D[<BC040FB912C0A9C7000303C0CD
001F02E0C7FC9E26007FF8C8FC7C5AB3B3B3B3B36E555AA3848022FF6BA26F6572648169
6F9CC9FC72626F66210F6F6E505AA26F6E505A6F535A6F6E1AFF734E5B706E4E5B706370
02F04E5B706E063F90CAFC706E4E5A7002FF4D485A04006F04075B7102E0043F5B7102FC
4BB55A050FDAFF80020F14807103FC0103B6CBFC050192B812FC716C61061F19E0060319
80060006FCCCFC071F17F007011780DF001F03F8CDFCE0001F49CEFC>162
144 120 269 179 85 D<93B512FC037FECFFF00207B8FC023F17E091B912F84918FE01
07727E499126C0007F14E04901E0C7000F80496D020380496D020014FE6F6F7F90B57080
6F6F8085486E6F807380A27380A28885886C5CA26D4982886D5B6D5B010713C0010190CA
FC90CCFCA90603B7FC050FB8FC0403B9FC167F0307BAFC153F4AB7EA807F020FEDE00002
3F02FCC7FC91B612E0010392C8FC4914FC011F14F04914C0495C90B548C9FC485C485C48
5C485C5A5D485CA24891CAFCA3B6FC5CA397B6FCA461806C60F107EF6C6E150F6F16CF6C
183F6FDB7F8F806C6EDBFF0F14E06C02FCDA03FE15FE6C6E91260FFC0791B5FC6C6E6CD9
3FF817806C923AF803FFF003013F91B6487E010FEF8000010394C77E010004FC141F021F
03F0140702010380DA007F1400DA000701F8CDFC695F79DD71>97
D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B296383FFFC00607B512FE063FECFFE0
4DB712F8050716FF051F17C0057F17F094B5D8C00F8004F301FCC714FE04F701E0023F7F
93B50080020F804DC86C14E005F80301804D6F804D707F05808294CA804C717F4C7180A2
4C71808BA27680A28B88A28BA28BA3888BA52080B02000A56764A267A3676467A2525CA2
67647062704D91C7FC704D5BA2714C5B7193B55A05F04B5CDCBFF84B5CDC1FFC030F5C4B
6CB44B91C8FC7001C0027F5B4B6C01F00103B55A4BC601FF013F14F04B6D90B712C04B01
1F94C9FC4B6D16FC4B010316F092C86C15804A030F02F8CAFC90CB49CBFC>113
144 121 270 129 I<94387FFFF0041FB612E093B712FE0307707E031F17F092B97E4A18
FE020784021F9126F8000F14804A0280010014C04A49C74814E049B500F85C494A17F049
4A5C495C494A4A14F84991C8FC5D495B90B5FC5D5A485C7314F05A4B6F14E05A7314C048
7214804B93383FFE00F20FF84896C8FCA4485CA5B6FCB07EA281A37EA36C80A37E6F18FE
6CF201FFA26C6E5F1CFE6C801B076C6EEF0FFC6D7F70EE1FF86DF13FF06D6E167F6D6EEE
FFE06D02F84B13C06D6E5D6D02FF030F13806D03C0023F1300023F02F0903801FFFC6E91
26FF801F5B020792B65A6E18C0020060033F4CC7FC030716F8030016C0041F4AC8FCDC00
7F13C0585F78DD67>I[<F53FE098B6FC4FB7FCA996C77E1B0FA287B3B294383FFF80040F
B512FC93B71280030716E0031F16F8037F16FE4AB9128702074AC66C13C7021F02E00107
13F74A91C890B6FC4A01FC153F49B548150F4902E081494A81494A814991CA7E495B8749
498390B548835A5D5AA2485CA25A5D5AA35AA25D5AA5B6FCB07EA57E81A37EA27EA2817E
A26C80A26C626C6E5F636D7F6D6D94B6FC6D606D6D1607705D6D6E4B81010102F0157F6D
6E92B712FE6E01FE020301EF91B512806E6D6C011F13CF020FDAF801B5120F020391B612
FE6E17F86E6C16E0030F16800301EDFC00DB003F14E0040049C74AC8FC>113
144 120 270 129 I<94387FFFC0040FB6FC93B712E0030716FC031F16FF037F17C04AB9
12F00207DAF80380021F912680003F13FE4A49C7000F7F4A01F802038049B5486E804902
C06E6C7F494A6F7F4991C9FC49727F4949707F4B84498490B548707F5A4B198048855D48
1CC086481CE05D5A871DF05AA25D5AA21DF887A2B6FCA392BBFCA51DF00380CDFCA77EA4
817EA37EA2817EA26CF307F06FF00FF87E816C1B1F6F19F06C1B3F6D6DF07FE06D7FF4FF
C06D6E4C13806D6E5E6D02F04C13006D6EEE1FFE6D6E4C5A6D6C01FFEEFFF86E02E00203
5B6E02FC021F5B02079126FFC003B55A6E92B7C7FC020060033F17F8030F17E003011780
DB003F03FCC8FC040315C0DC000F01F8C9FC5D5F7ADD6A>I[<95383FFF80050FB512F094
B612FE040781041F16C0047F824BB87E0307DAF8077F031FDAC00F7F4B49C6487F4B495B
92B500F0814A4A5B4A5C4A93B612805F4A91C7FC5C5E5C5E5C731400A24C6E5B91B56F5B
A2735B070313E00700138097C8FCB3A4BA12F8A9C702FCCBFCB3B3B3B3A2003FB9FCA9>
81 144 121 271 71 I<F5FFC093260FFFFC030F13F04BB600E0027F7F031F03FE49B512
FE037F9226FF8007800203B8EAF01F020FDDFC3F15804A7148133F027FDA003F90B500F0
14C091B500F80107ED807F4902E00101ECFC00010702806D6C5B93C87E49496F7F49496F
7F49496F6D6D1380491A8077130090B5486F6E6C5AF503F84875C8FCA2484A6F80A44887
AB6C63A46C6E4B5CA26C63A26D6D4B5CA26D97C9FC6D6D4B5B6D6D4B5B6D6D4B5B705C01
0102E049B512E06D02F801075C4902FF013F5C4992B648CAFC496002F317F090260FE07F
1680031F4BCBFC90261FC00115E0DB000F01FCCCFC013F91CFFCA3137FA280A380A28080
806E7E15F092B812F06DF0FFE01BFEF3FFC06D1AF81CFE767E6D1BE06D87896D1BFE6D87
7F6E878A0103BD7E130F013F8890BEFC4802E0C9003F814891CBFC4801FC180F48490601
804849727E484985884849737F88A2B55A88A66E616C65A26E616C6D4F5B6C656E616C6D
4F5B6C6D96B55A6C6D6C05035C6F5FC602F0051F49C7FC6D01FC057F5B6DD9FF800303B5
5A010F02F8033F14E06DDAFFE0010FB65A010192B9C8FCD9003F19F8020F19E0020196C9
FCDA001F17F0030194CAFCDB000192CBFC6A887ADD74>I[<ED1FF0017FB5FCB7FCA9EA00
3F1307A27FB3B2963803FFFC073FEBFFE096B612F8060715FE061F6F7E4E16E095B87E4D
D9FC03804DD9C000804D48C76C7FDD0FF880DD1FE0824D486E804D5A05FEC881DCF1FC81
5F04F385EEF7F04D81EEFFC0A24D84A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9
>114 143 119 270 129 I[<EC3FC0ECFFF0010313FC497F497F498049804980A290B67E
A24881A86C5DA26D5CA26D5C6D5C6D91C8FC6D5B6D5B010013F0EC3FC091CAFCB3A3ED1F
F0017FB5FCB7FCA9EA003F1307A27FB3B3B3B0B91280A9>49 144
119 271 65 I[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3083FB712C0A908014AC7
FCE0003F13C09AC8FC515A515A505B5013E0080F5B505B5090C9FCF27FFC4F485A4F5B4F
5B4F5B4F90CAFCF17FFE4F5A4E5B4E5B4E13C0061F5B4E90CBFC4E5AF0FFF805037F5F4D
7F4D7F4D8094B67E16F104F38104F78193B77EA2868605F18017E04D814D6C804D6C8004
FC6D805E4C6D804C6D807280A27280728173808588738073807380A2738073807381A274
80748074808689748074807480A274818A5015F0B96C017F92B5FCA9>112
143 121 270 123 107 D[<ED1FF0017FB5FCB7FCA9EA003F1307A27FB3B3B3B3B3B3AC
B912C0A9>50 143 119 270 65 I<DB3FE0912601FFFC943801FFFC017FB5031FD9FFE0
041FEBFFE0B792B600FC93B612FC060303FF030315FF060F04C0020F16C0063F04F0023F
16F095B86C91B87E4DD9FC036E49D9FC03804DD9C0006E49D9C000804D48C7003F6D4948
C7003F7FDD0FF86EDB0FF880D8003F4B48714848830107DB3FC06E9126C03FC06E804D48
4E5A6D4BC86F48C881DCE1FE6FDAE1FE814D61DCE3F8DEF3F884DCE7F0F0F7F04D6F4B81
DCEFC0F0FFC0A2DCFF804F84A294C993C9FCA24C61A34C61A44C61B3B3AFB900E090B900
E090B912E0A9B35D77DCC2>I<DB3FE0913803FFFC017FB5033FEBFFE0B792B612F80607
15FE061F6F7E4E16E095B87E4DD9FC03804DD9C000804D48C76C7FDD0FF880D8003FDB1F
E08201074B486E804D5A6D03FEC881DCE1FC815F04E385EEE7F04D81EEEFC0A2DCFF8084
A294C9FCA25EA35EA45EB3B3AFB9D8E001B912C0A9725D77DC81>I<94381FFFF00407B6
12C0047F15FC0303B87E030F17E0037F17FC4ABAFC4A9126FC007F80020F02C0010714E0
4A49C880027F01F8033F13FC91B5486F7F4902C003077F494A6F804991C96C8049497080
4949717F49874949717FA290B548717F48884B83481D80A2481DC04B83481DE0A2481DF0
A3484A7114F8A4481DFCA5B61BFEAF6C1DFCA56C6E4D14F8A36C1DF0A36C1DE06F5F6C1D
C0A26C6E4D1480A26C1D006F5F6C646D6D4D5B6F94B5FC6D636D6D4C5C6D6E4B5C6D6E4B
5C6D02F0031F5C6D6E4B91C7FC6D6C01FE92B512FC6ED9FFC001075C6E02FC017F5C0207
91B812C0020196C8FC6E6C17FC031F17F003031780DB007F03FCC9FC040715C0DC001F01
F0CAFC675F7ADD74>I<DB1FF091381FFFC0017FB50203B6FCB7021F15E095B712FC0503
16FF050F17C0053F17F094B912FC04F1DAC01F8004F79026FC00018093B500E06D6C14C0
D8003F93C86C8001074B030F8005F86F806D03E06F804D6F804D8194CA6C7F4C864C7180
5E7680A27680A27680A28B88A28BA288A28BA4882080B0200064A467A26467A3525CA267
64676467647062704D91C7FC7094B55AA2714B5C714B5C714B5C05F84B5C71033F5C05FF
4B91C8FC06C049B55A04FB01F001075C04F801FF017F14F07190B712C0051F94C9FC7116
FC050316F0DD007F1580060F02F8CAFC060049CBFC96CDFCB3ACB912E0A9718579DC81>
I<DB7FC049B47E90B6021F13F8B7027F13FE4DB67E4D15E04D814D814D01077F94263FF0
0F7F94387FC01F4D48487FD8003F16000107DAC1FE491480EEC3FC6D5DEEC7F05F16CF5F
16DF4D6D1400A204FFC76C5BA2735B4C6E5B735B070013C04C92C8FCA45EA65EB3B3AAB9
12FCA9515D79DC5F>114 D<92261FFFF814F80203B638C001FC023FEDFC0791B8121F01
0317FF130F013F9038F8001F4990C8FCD9FFF8153F4801E0150F484915034849814890CA
FC197F4848173F191F485AA2007F180FA31907487EA27FA28002E0705A6E93C8FC14FC14
FF15F06CECFF8016FCEEFFF06CEEFF8018F06C17FE727E6C18E0856C18FC6C846C727E6C
856D84011F846D841303010084023F83140F020183EC001FDB007F16801603DC000F15C0
1700183F060F14E0007F1703486C82727E857F85857FA2857F1BC07FA27F1B806D5F7F1B
006E5E6E5F6E163F6E4C5A02FC4C5A6E03035B6E6C4A5B03F0023F5B03FF0107B55A01F9
91B7C7FCD9F07F16FCD9E01F16F0D9800716C0D9000193C8FC48D9003F14F8007C020349
C9FC4B5F78DD5C>I[<ED03FEA81507A5150FA4151FA3153FA2157FA215FFA25CA25C5CA2
5C5C5C5C91B5FC13035B131F017F91B712F00007BAFCBBFCA7C74AC9FCB3B3AAF101FFB1
616E17FE82A219076E17FC836EEE0FF871131F6E6EEB3FF071137F6E6EEBFFE06EDAFF03
13C06E92B512806E1700033F5D6F5D03075D030015E0041F1480040001FCC7FC>72
132 124 258 90 I<B800FE017FB700F8023FB612F8A9D8000F02F0C8000702C0C9003F
EBF800100313806D6E6F7390C7FC775E6D69706F6E1607A26D6E6F6277160F6D6970706D
161FA26E6E6F61516D163F6E687192B6167FA26E68714A6F15FF6E68714A608A6E9DC8FC
714A6F5C6E6771DA0FFD17078A6E06F86071021F6F140F6E67714A486C161F8A6F4D6C5F
72017F6F143F6F667249486C167F8A6F4D6C5F72487113FFA26F02F04A6C4B5B4F17C06F
4C6D94C9FCDEF807715AA26F02FC496D4B5A070F17F06F4C6D5EDEFE1FEFF80FA26F02FF
496E4A5A073F17FC704B6E5D07FFEFFE3FA2704B6E4A5A1FFF704B6E5D20FFA27092C86C
5DA2704A6F92CAFCA3704A6F5CA2704A6F5CA3704A705BA27149705BA37149705BA27149
705BA37190CA6C5BA271487190CBFC7148715A9D5D7BDBA8>119
D<007FB86C49B712FEA9C792C9000F02C0C7FC6E6E030101F0C8FC715F6E6E4B5B6E6E4B
5B6E4E90C9FC6E6E5E71151F6E6E4B5A6E6E4B5A6E4E5A6F6E495B72495B6F6E495B6F80
6F6E4990CAFC6F4C5A72495A6F6E495A6F6E495A6F03815B705E7014C307E75B7091B5CB
FC705D705D705D6282705D715C8386718071807180837180864D814D815F4D81874D814D
81DDFFF3804C13E14C01C1804C0180814E6C804C6E804C487F4C48824C486D804C486D80
4B496D804B497F73804B49834B90C86C804B486F804B48814B486F804B48844C6F804A71
804A496F804A49814A90CA814A487180023F7280010FB500E07080B8031FB812E0A9735C
7CDB7B>I<007FB800C04AB71280A9D800034ACA000791C7FC6D080013F0775A6D6E4E5A
A26E6E6064836E4F90C8FC836E4F5A836E4F5AA26E6E4C5AA26E6E5F1C3F6E6E5F1C7F83
6E4F5A846F4D5B846F4D90C9FCA26F6E4A5AA26F6E5D1B0F846F4D5A846F4D5A846F4D5A
A26F6E4A5AA2706E5C627002C091CAFC6219E0704B5A19F0704B5AA2706E485AA2706E48
5AA27002FE5B1A7F19FF704B5AA2715DA27192CBFCA2715CA2715CA3715CA2715CA2715C
A2715CA2725BA27290CCFCA3725AA2725AA24E5AA24E5AA261187FA24E5AA24D5B13FE26
03FF804A90CDFC000F13E0486D4A5A487F486D4A5AA260B56C141F4D5AA24D5A17FF604C
5B4A4990CEFC6C5D4C5A6C49EB3FFC4A495A6C4948485A9026FE80075B270FFFC03F5B6C
90B6CFFC6C5D6C15F86C6C5C011F14C0010749D0FC9038007FE071857CDB7B>I<0003BC
12F81CFCA51CF80480C7123F03F0C84814F048028018E04AC9B612C04A5D02F04B15804A
19004E5C4A5D4A4B5C6391C9485C604993B65A634D5D495D98C7FC4D5C4D5C000F5E6249
4B5C4D5C94B6FC624C5D4C92C8FC5EC95D4C5C5E4C5C614C5C93B6FC4B5D614B92C9FC5D
4B5C604B5C5D4B4AEC07FC6092B65A5C604A92C8EA0FF84A5C5C5F4A5C4A5C4A181F5F91
B65A495D491AF094C9123F495C5B494A167F5E494A16FF496090B65A4C5D484B5D484F13
E04892C95A4B5E484A93B5FC481803484A151F4B0203B6FC4891BAFCBDFCA21CC0A47E56
5C7ADB67>I E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fk cmtt10 10.95 22
/Fk 22 123 df<007FB612F0A2B712F8A36C15F0A225077B9E30>45
D<120FEA3FC0EA7FE0A2EAFFF0A4EA7FE0A2EA3FC0EA0F000C0C6E8B30>I<EB03C0497E
A2130FA2131FA2133F137F13FF1203123FB5FCA213EF138FEA7E0F1200B3B0003FB512F8
4814FCB612FEA26C14FC6C14F81F3977B830>49 D<EB07FC90383FFFC090B512F0000380
4814FE4880261FF80F1380263FE00113C09038C0007F4848EB3FE090C7121FED0FF04814
075A6C15F81503A3127E1218C8FCA2150716F0150F16E0151F16C0153FED7F8015FF4A13
005DEC07FC4A5A4A5A4A5A4A5A4A5A4990C7FC495A495AEB0FF0EB3FE0495A495A4890C8
FC4848EB01F04848EB03F8485AEA1FE048B6FCB7FCA37E6C15F025397BB830>I<EC1FE0
ECFFF8010313FE010F7F4914804914C090397FF03FE09038FF800F4890380007F0D803FC
13033A07F801FBF89038F007FF380FE01F4A13FCEA1FC0495A003FEBFF0F903800FE0790
3901FC03FE007FEBF801EA7E03ECF000A2EAFE0700FC49137EAA00FE6D13FED87E0314FC
A2ECF801D87F0114F8003FEBFC03903900FE07F0903880FF0F001F90387FFFE06D6C13C0
EA0FE06E13803A07F007FE009038F801F86C6CC7127C6CB414FE6CEB800390387FF01F6D
B512FC6D14F86D14E0010314C00100EBFE00EC1FF0273A7CB830>64
D<147F4A7EA2497FA4497F14F7A401077F14E3A3010F7FA314C1A2011F7FA490383F80FE
A590387F007FA4498049133F90B6FCA34881A39038FC001F00038149130FA40007814913
07A2D87FFFEB7FFFB56CB51280A46C496C130029397DB830>I<91387F803C903903FFF0
3E49EBFC7E011F13FE49EBFFFE5B9038FFE07F48EB801F3903FE000F484813075B484813
03A2484813015B123F491300A2127F90C8FC167C16005A5AAC7E7EA2167C6D14FE123FA2
7F121F6D13016C6C14FCA26C6CEB03F86D13076C6CEB0FF03901FF801F6C9038E07FE06D
B512C06D14806D1400010713FC6D13F09038007FC0273A7CB830>67
D<003FB512E04814FCB67E6F7E6C816C813A03F8007FF0ED1FF8150F6F7E6F7E15016F7E
A2EE7F80A2163F17C0161FA4EE0FE0AC161F17C0A3163F1780A2167F17005E4B5A15034B
5A150F4B5AED7FF0003FB65A485DB75A93C7FC6C14FC6C14E02B387FB730>I<913801FF
E04A7F5CA28080EC0007AAEB03FE90381FFF874913E790B6FC5A5A481303380FFC00D81F
F0133F49131F485A150F4848130790C7FCA25AA25AA87E6C140FA27F003F141F6D133F6C
7E6D137F390FF801FF2607FE07EBFFC06CB712E06C16F06C14F76D01C713E0011F010313
C0D907FCC8FC2C397DB730>100 D<49B4FC010713E0011F13F8017F7F90B57E48804801
8113803A07FC007FC04848133FD81FE0EB1FE0150F484814F0491307127F90C7FCED03F8
5A5AB7FCA516F048C9FC7E7EA27F003FEC01F06DEB03F86C7E6C7E6D1307D807FEEB1FF0
3A03FFC07FE06C90B5FC6C15C0013F14806DEBFE00010713F8010013C0252A7CA830>I<
EDFF80020713E0021F13F05C4A13F891B5FC491387903803FE079138FC03F0903907F800
C04A1300A8003FB612C04815E0B7FCA36C15C0260007F0C7FCB3A9003FB512FE4880B712
80A26C15006C5C25397DB830>I<387FFFF8B57EA47EEA0001B3B3A8007FB612F0B712F8
A46C15F025387BB730>108 D<02FC137E3B7FC3FF01FF80D8FFEF01877F90B500CF7F15
DF92B57E6C010F13872607FE07EB03F801FC13FE9039F803FC01A201F013F8A301E013F0
B3A23C7FFE0FFF07FF80B548018F13C0A46C486C01071380322881A730>I<EC01FE3A3F
FC0FFF80267FFE3F13E000FF90B57E90B67E7E6C9038FE07FCC6EBF8039138E001FE14C0
EC8000A291C7FCA25BB3A23B3FFFF81FFFF8486D4813FCB500FE14FEA26C01FC14FC6C49
6C13F82F2880A730>I<49B4FC010F13E0013F13F8497F90B57E0003ECFF8014013A07FC
007FC04848EB3FE0D81FE0EB0FF0A24848EB07F8491303007F15FC90C71201A300FEEC00
FEA86C14016C15FCA26D1303003F15F86D13076D130F6C6CEB1FF06C6CEB3FE06D137F3A
07FF01FFC06C90B512806C15006C6C13FC6D5B010F13E0010190C7FC272A7CA830>I<ED
07F83A3FFF803FFF486DB51280B512C302CF14C06C13DF6C9038FFFC3FD8001F13E09238
801F809238000F004A90C7FC5C5C5CA25CA45CAF003FB512FC4880B7FCA26C5C6C5C2A28
7EA730>114 D<90381FFC1E48B5129F000714FF5A5A5A387FF007EB800100FEC7FC4880
A46C143E007F91C7FC13E06CB4FC6C13FC6CEBFF806C14E0000114F86C6C7F01037F9038
000FFF02001380007C147F00FEEC1FC0A2150F7EA27F151F6DEB3F806D137F9039FC03FF
0090B6FC5D5D00FC14F0D8F83F13C026780FFEC7FC222A79A830>I<EB0780497E131FA9
003FB612E04815F0B7FCA36C15E026001FC0C7FCB216F8ED01FCA5ECE003010FEB07F814
F09138FC1FF06DB512E06D14C016806D14009038007FFCEC1FF026337EB130>I<D83FFC
EB3FFC486C497E00FF14FFA2007F147F003F143F00001400B3A41501A2150315076D130F
903A7FC07FFFF891B612FC6D15FE7F6D4913FC6D9038F87FF8010001C0C7FC2F2880A630
>I<3A3FFF81FFFC4801C37FB580A26C5D6C01815BC648C66CC7FC137FEC80FE90383F81
FC90381FC3F8EB0FE3ECE7F06DB45A6D5B7F6D5B92C8FC147E147F5C497F81903803F7E0
EB07E790380FE3F0ECC1F890381F81FC90383F80FE90387F007E017E137F01FE6D7E4848
6D7E267FFF80B5FCB500C1148014E3A214C16C0180140029277DA630>120
D<3B3FFFC07FFF80486DB512C0B515E0A26C16C06C496C13803B01FC0003F000A2000014
076D5C137E150F017F5C7F151FD91F805BA214C0010F49C7FCA214E00107137EA2EB03F0
157C15FCEB01F85DA2EB00F9ECFDF0147D147FA26E5AA36E5AA35DA2143F92C8FCA25C14
7EA2000F13FE486C5AEA3FC1EBC3F81387EB8FF0EBFFE06C5B5C6C90C9FC6C5AEA01F02B
3C7EA630>I<001FB612FC4815FE5AA316FC90C7EA0FF8ED1FF0ED3FE0ED7FC0EDFF8000
3E491300C7485A4A5A4A5A4A5A4A5A4A5A4A5A4990C7FC495A495A495A495A495A495A49
48133E4890C7127F485A485A485A485A485A48B7FCB8FCA46C15FE28277DA630>I
E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fl cmr10 10.95 80
/Fl 80 124 df<ED7FE0913807FFFE91391FC03F8091397E0007E0D901F8EB01F8D907F0
EB00FE4948147F49486E7E49486E7E49C86C7E01FE6F7E48486F7EA248486F7E00078349
1500000F834982001F1880A24848EE3FC0A3007F18E0A249161FD981C0143800FF18F0A2
91B612F8A702C0C71238A3D87F80C913E0A26D163FA3003F18C0A26C6CEE7F80A36C6CEE
FF00A26C6C4B5A00035F6D150300015F6C6C4B5A017F4B5A6D5E6D6C4A5AD90FE0027FC7
FC6D6C14FED901F8EB01F8D9007EEB07E091391FC03F80912607FFFEC8FC9138007FE03C
427BBF47>2 D<913801FFC0021F13FC9139FF007F80D903F8EB0FE0D90FF0EB07F8D91F
C0EB01FCD97F806DB4FC49C86C7E48486F7E00038348486F7E000F8349150F001F834915
07003F83A348486F7EAA6C6C4B5AA3001F5FA26C6C4B5AA200075F6D151F00035FA26C6C
4B5A00005FA2017F4BC7FC6D157EA26D6C5C010F5DA26D6C495A00E0EF0380010315E0D8
70019238C007006E130301001580A36C0160EC000E003C017049131E263FFFF0ECFFFEA3
6C5FA339407CBF42>10 D<4AB4EB0FE0021F9038E03FFC913A7F00F8FC1ED901FC90383F
F03FD907F090397FE07F80494801FF13FF4948485BD93F805C137F0200ED7F00EF003E01
FE6D91C7FC82ADB97EA3C648C76CC8FCB3AE486C4A7E007FD9FC3FEBFF80A339407FBF35
>I<EC03FE91383FFF809138FE03E0903903F800F0D90FE013384948137C90393F8001FE
90387F00035B5BA2485A6F5AED007093C7FCAA16FEB7FCA33901FC000315011500B3AC48
6C497EB5D8F87F13FCA32E407EBF33>I<133E133F137F13FFA2EA01FEEA03FCEA07F813
F0EA0FE0EA1FC01380EA3E005A5A1270122010116EBE2D>19 D<001E130F397F803FC000
FF137F01C013E0A201E013F0A3007F133F391E600F3000001300A401E01370491360A300
0114E04913C00003130101001380481303000EEB070048130E0018130C0038131C003013
181C1C7DBE2D>34 D<4B6C130C4B6C131EA20307143EA24C133CA2030F147CA293C71278
A24B14F8A2031E5CA2033E1301A2033C5CA3037C1303A203785CA203F81307A24B5CA202
01140F007FBAFCBB1280A26C1900C72707C0003EC8FC4B133CA3020F147CA292C71278A2
4A14F8A2021E5CA3023E1301007FBAFCBB1280A26C1900C727F80007C0C8FC4A5CA20101
140FA24A91C9FCA301035CA24A131EA20107143EA24A133CA2010F147CA291C71278A349
14F8A2011E5CA2013E1301A2013C5CA201186D5A41517BBE4C>I<121EEA7F8012FF13C0
A213E0A3127FEA1E601200A413E013C0A312011380120313005A120E5A1218123812300B
1C79BE19>39 D<1430147014E0EB01C0EB03801307EB0F00131E133E133C5B13F85B1201
5B1203A2485AA2120F5BA2121F90C7FCA25AA3123E127EA6127C12FCB2127C127EA6123E
123FA37EA27F120FA27F1207A26C7EA212017F12007F13787F133E131E7FEB07801303EB
01C0EB00E014701430145A77C323>I<12C07E12707E7E121E7E6C7E7F12036C7E7F1200
7F1378137CA27FA2133F7FA21480130FA214C0A3130714E0A6130314F0B214E01307A614
C0130FA31480A2131F1400A25B133EA25BA2137813F85B12015B485A12075B48C7FC121E
121C5A5A5A5A145A7BC323>I<1506150FB3A9007FB912E0BA12F0A26C18E0C8000FC9FC
B3A915063C3C7BB447>43 D<121EEA7F8012FF13C0A213E0A3127FEA1E601200A413E013
C0A312011380120313005A120E5A1218123812300B1C798919>I<B512FEA617067F961E>
I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A0A798919>I<EB01FE90380FFFC090383F
03F090387C00F849137C48487F48487F4848EB0F80A2000F15C04848EB07E0A3003F15F0
A290C712034815F8A64815FCB3A26C15F8A56C6CEB07F0A3001F15E0A36C6CEB0FC0A26C
6CEB1F80000315006C6C133E6C6C5B017C5B90383F03F090380FFFC0D901FEC7FC263F7D
BC2D>48 D<EB01C013031307131F137FEA07FFB5FC139FEAF81F1200B3B3ACEB7FF0B612
F8A31D3D78BC2D>I<EB07FC90383FFF8090B512E03903F01FF83907C007FC390F0001FE
001E6D7E001C1580003CEC7FC05AED3FE01270B4FC6DEB1FF07FA56C5A6CC7FC120CC813
E0153FA216C0157F168015FF16004A5A5D4A5A4A5A5D4A5A4A5A4AC7FC147E147C5C495A
495A495A495A49C71270133E133C5B4914E0485A485A485A48C7120148B6FCA25A4815C0
B7FCA3243D7CBC2D>I<EB07FC90383FFF809038F80FE03901E003F839078001FCD80F00
7F000E6D7E001E1580D81F80137F486C14C07FA27F5BA2121F6C5AC8138015FF1600A24A
5AA24A5A5DEC07E04A5A023FC7FCEB1FFCECFF809038000FE0EC07F86E7E6E7E6E7E1680
ED7FC0A216E0153FA216F0A2120C123F487E487EA316E0A249137F6CC713C01278EDFF80
7E6C4913006C495A3907C007FC3903F80FF0C6B55A013F1380D907F8C7FC243F7CBC2D>
I<150E151E153EA2157EA215FE1401A21403EC077E1406140E141CA214381470A214E0EB
01C0A2EB0380EB0700A2130E5BA25B5BA25B5B1201485A90C7FC5A120E120C121C5AA25A
5AB8FCA3C8EAFE00AC4A7E49B6FCA3283E7EBD2D>I<00061403D80780131F01F813FE90
B5FC5D5D5D15C092C7FC14FCEB3FE090C9FCACEB01FE90380FFF8090383E03E090387001
F8496C7E49137E497F90C713800006141FC813C0A216E0150FA316F0A3120C127F7F12FF
A416E090C7121F12FC007015C012780038EC3F80123C6CEC7F00001F14FE6C6C485A6C6C
485A3903F80FE0C6B55A013F90C7FCEB07F8243F7CBC2D>I<EC1FE0ECFFF8903803F03E
90380FC00F90391F000780133E017EEB1FC049133F4848137F12035B12074848EB3F80ED
1F00001F91C7FC5BA2123FA3485AA214FE903887FF8039FF8F07E090389C01F09038B800
FC01B0137E13F0497F16804914C0A2ED1FE0A34914F0A5127FA6123F6D14E0A2121FED3F
C0A26C6C1480A20007EC7F006C6C137E6C6C5B6C6C485A90387E07F06DB45A010F1380D9
03FCC7FC243F7CBC2D>I<1238123C123F90B612FCA316F85A16F016E00078C712010070
EC03C0ED078016005D48141E151C153C5DC8127015F04A5A5D14034A5A92C7FC5C141EA2
5CA2147C147814F8A213015C1303A31307A3130F5CA2131FA6133FAA6D5A0107C8FC2640
7BBD2D>I<EB03FC90381FFF8090387C07E09038F001F83901E0007C48487F48487F48C7
FCED0F80121E16C0003E1407A4123FA26DEB0F807F6C6C131F6D140001FC133E6C6C5B90
38FF80786C6D5A6CEBF3E06CEBFF806C91C7FC133F6D13C06D7F013F13F801787F48486C
7E3903E01FFF48486C1380260F800313C048487E489038007FE0003E143F007E141F007C
EC0FF01507481403A31501A46C15E0007C1403A2007E15C06C14076CEC0F806DEB1F006C
6C133ED807F05B3901FC03F86CB512E0011F1380D903FCC7FC243F7CBC2D>I<EB03FCEB
1FFF90387E07C09038FC03F048486C7E48486C7E4848137C000F147E4848137F81003F15
805B007F15C0A2151F12FF16E0A516F0A5127F153FA36C7EA2001F147F120F6C6C13FF6D
13DF000313013900F8039F90387E0F1FD91FFE13E0EB07F090C7FCA2ED3FC0A41680157F
D80F801400487E486C13FEA24A5A5D49485AEB8007391E000FE0001F495A260FC07FC7FC
3803FFFE6C13F838003FC0243F7CBC2D>I<121EEA7F80A2EAFFC0A4EA7F80A2EA1E00C7
FCB3121EEA7F80A2EAFFC0A4EA7F80A2EA1E000A2779A619>I<121EEA7F80A2EAFFC0A4
EA7F80A2EA1E00C7FCB3121E127FEAFF80A213C0A4127F121E1200A412011380A3120313
005A1206120E120C121C5A1230A20A3979A619>I<007FB912E0BA12F0A26C18E0CDFCAE
007FB912E0BA12F0A26C18E03C167BA147>61 D<EB1FF890B5FC3903E01FC0390F0007F0
001EEB03F848EB01FC4814FE140000FE14FF7E7FA46CC7FC123EC7EA01FEA2EC03FCEC07
F815F0EC0FC0EC1F80EC3F00143E5C147814F85C13015CA2495AA25CAB91C7FC90C8FCA8
EB0780EB1FE0A2497EA46D5AA2EB078020407BBF2B>63 D<15074B7EA34B7EA34B7EA34B
7EA34B7E15E7A2913801C7FC15C3A291380381FEA34AC67EA3020E6D7EA34A6D7EA34A6D
7EA34A6D7EA34A6D7EA349486D7E91B6FCA249819138800001A249C87EA24982010E157F
A2011E82011C153FA2013C820138151FA2017882170F13FC00034C7ED80FFF4B7EB500F0
010FB512F8A33D417DC044>65 D<B712FCEEFF8017F00001903980000FF86C6CC7EA03FE
707E701380EF7FC0EF3FE0A2EF1FF0A218F8A3170F171FA318F0A2EF3FE0177F18C0EFFF
804C1300EE03FCEE0FF8EE7FE091B6C7FC17E091C7EA07FCEE01FE933800FF80EF7FC0EF
3FE0EF1FF018F8170F18FC1707A218FEA718FC170FA2EF1FF818F0173FEF7FE0EFFFC004
03138048486C90380FFE00B85A17E094C7FC373E7DBD40>I<DB3FF01306912603FFFE13
0E020F9038FF801E913A3FF007E03E9139FF8000F8D903FEC7EA7C7ED907F8EC1EFE4948
140FD93FE0140749481403495A91C812014848150012034848167E5B000F173EA2484816
1EA2123F5B180E127FA349160012FFAC127F7F180EA2123FA27F001F171E181C6C7EA200
07173C6D16386C6C1678000117706C6C16F06EEC01E06D6C15C06D6C1403D90FF0EC0780
6D6CEC1F00D903FE143E902600FF8013F891393FF007F0020FB512C0020391C7FC913800
3FF037427BBF42>I<B712FCEEFF8017E000019039C0001FF86C6C48EB03FEEE00FF717E
717EEF0FE084717E717E170184717EA21980187F19C0A3F03FE0A519F0AB19E0A5F07FC0
A21980A218FF19004D5AA24D5A6017074D5A4D5AEF7FC04DC7FCEE03FE48486CEB1FF8B8
5A178004FCC8FC3C3E7DBD45>I<B912E0A300019038C000016C6C48EB001FEF0FF01703
A217011700A31870A418381638A41800A21678A216F81501150791B5FCA3EC8007150115
001678A21638A2180EA3181C93C7FCA4183C1838A21878A318F8EF01F0A21707170F173F
48486CEB03FFB912E0A3373E7DBD3E>I<B91280A300019038C000036C6C48EB007FEF1F
C0170F1707A21703A31701A4EF00E0A21638A31800A31678A216F81501150791B5FCA3EC
8007150115001678A21638A693C8FCAF3801FFE0B612F0A3333E7DBD3B>I<DB3FE0130C
912603FFFE131C021F9038FF803C913A7FF00FC07C9139FF0001F0D903FC90380078FC49
48143DD91FE0141F4948140F4948140701FF15034890C8FC491501485A000716005B000F
177C5B001F173CA2485AA2181C127FA25B95C7FC12FFAB041FB512F0127FA26D9139000F
FE00EF03FC123FA27F121FA26C7EA212077F12036C7E7F6C7F6D6C14076D7E6D6C140FD9
07F8141ED903FEEC3C7C902600FF80EBF83C913A7FF007F01C021FB5EAC00C020391C8FC
9138003FF03C427BBF47>I<B6D8C01FB512F8A3000101E0C7383FFC0026007F80EC0FF0
B3A691B7FCA30280C7120FB3A92601FFE0EC3FFCB6D8C01FB512F8A33D3E7DBD44>I<B6
12F0A3C6EBF000EB3FC0B3B3B2EBFFF0B612F0A31C3E7EBD21>I<011FB512FCA3D90007
13006E5A1401B3B3A6123FEA7F80EAFFC0A44A5A1380D87F005B007C130700385C003C49
5A6C495A6C495A2603E07EC7FC3800FFF8EB3FC026407CBD2F>I<B600C090387FFFFCA3
000101E0C7000F138026007F80913807FE0018F818E0604D5A4DC7FC173E5F5F4C5A4C5A
4C5A4C5A4CC8FC163E5E5E4B5A4B5AED07804B7E151F4B7E4B7E15FF913881EFF8913883
C7FCEC878791388F03FE91389E01FF14BCDAF8007F4A6D7E5C4A6D7E4A6D7EA2707E707E
A2707E707EA2707F717E84173F717E717EA2717E848419802601FFE04A13C0B600C090B6
FCA3403E7DBD47>I<B612F8A3000101E0C9FC38007F80B3B0EF0380A517071800A45FA3
5FA25F5F5F4C5A160748486C133FB8FCA3313E7DBD39>I<B500C093B512C0A300016D4B
EBE000D8007F1880D977F0ED03BFA3D973F8ED073FA3D971FC150EA2D970FE151CA3027F
1538A36E6C1470A36E6C14E0A26E6CEB01C0A36E6CEB0380A36E6CEB0700A26E6C130EA3
6E6C5BA3037F5BA26F6C5AA36F6C5AA392380FE1C0A3923807F380A26FB4C7FCA36F5AA2
13F8486C6D5AD807FFEFFFE0B500F80178017FEBFFC0A34A3E7CBD53>I<B56C91B512F8
8080D8007F030713006EEC01FC6E6E5A1870EB77FCEB73FEA2EB71FF01707FA26E7E6E7E
A26E7E6E7EA26E7E6E7EA26E7E6E7FA26F7E6F7EA26F7E6F7EA26F7E6F7EA26F7E6F1380
A2EE7FC0EE3FE0A2EE1FF0EE0FF8A2EE07FCEE03FEA2EE01FF7013F0A2177F173FA2171F
170FA2170701F81503487ED807FF1501B500F81400A218703D3E7DBD44>I<ED7FE09138
07FFFE91391FC03F8091397E0007E04948EB03F8D907F0EB00FE4948147F49486E7E4948
6E7E49C86C7E01FE6F7E00018349150300038348486F7EA248486F7EA2001F188049167F
003F18C0A3007F18E049163FA300FF18F0AC007F18E06D167FA4003F18C0A26C6CEEFF80
A36C6C4B1300A26C6C4B5A00035F6D150700015F6C6C4B5A6D5E6D6C4A5A6D6C4A5A6D6C
4AC7FC6D6C14FED901FCEB03F8D9007FEB0FE091391FC03F80912607FFFEC8FC9138007F
E03C427BBF47>I<B712F8EEFF8017E000019039C0003FF86C6C48EB07FCEE01FE707EEF
7F80EF3FC018E0A2EF1FF0A218F8A818F0A2EF3FE0A218C0EF7F80EFFF004C5AEE07FCEE
3FF091B612C04CC7FC0280C9FCB3A73801FFE0B612C0A3353E7DBD3E>I<ED7FE0913807
FFFE91391FC03F8091397F000FE0D901FCEB03F8D907F0EB00FE4948147F49486E7E4948
6E7E49C86C7E498248486F7E49150300038348486F7EA2000F834981001F1880A24848EE
7FC0A3007F18E0A249163FA200FF18F0AC007F18E0A26D167FA3003F18C0A26C6CEEFF80
A3000F18006D5D0007DA0F805B6C6C90393FE003FCED70706C6C496C485A6C6C48486C48
5A017FD9800E5BD93F819038061FC0D91FC19038073F80D90FE14AC7FCD907F1EB03FE90
2601FDC013F8903A007EE007E091271FF03FC013180207B5FC9139007FE1E0DB00011438
83711378A2706C13F0EFFF0318FFA27113E0A37113C0711380711300715AEF01F83D527B
BF47>I<B712C016FCEEFF800001D9C00013E06C6C48EB1FF0EE07FCEE01FE707E84717E
A2717EA284A760177F606017FF95C7FCEE01FCEE07F8EE1FE0EEFF8091B500FCC8FC16F0
91388001FCED003FEE1FC0707E707E83160383160183A383A484A4F0C004190EA28218E0
057F131E2601FFE0161CB600C0EB3FF094381FF83805071370CA3801FFE09438003F803F
407DBD43>I<D907FC131890391FFF8038017FEBE0783901FC03F83A03F0007CF8D807C0
133F4848130F001F140748C7FC003E1403007E1401A2007C140012FC1678A46C1538A27E
A26C6C14007F7FEA3FF8EBFF806C13F86CEBFF806C14F06C14FC6C14FF6C15C0013F14E0
010714F0EB007F020713F89138007FFC150FED07FE15031501ED00FFA200E0157FA3163F
A27EA3163E7E167E6C157C6C15FC6C15F86D13016DEB03F06DEB07E0D8F9FCEB0FC03AF0
7F803F8090391FFFFE00D8E00713F839C0007FC028427BBF33>I<003FB91280A3903AF0
007FE001018090393FC0003F48C7ED1FC0007E1707127C00781703A300701701A548EF00
E0A5C81600B3B14B7E4B7E0107B612FEA33B3D7DBC42>I<B600C090B512F8A3000101E0
C70007130026007F80EC01FC715A1870B3B3A4013F16F06E5DA21701011F5E80010F1503
6E4A5A010793C7FC6D6C5C6D6C141E6D6C5C027F14F86E6C485A91390FF00FE00203B512
80020049C8FCED1FF03D407DBD44>I<B500FE017FB5D88007B5FCA3000301C0010101E0
C713F86C90C849EC3FE07148EC0F807E7215006E143F017F190E84A26D6C60A24D7E6D6C
60A2EFE7F86D6C60A2933801C3FC6E18F001076104037F6E0281140101036104077F1700
6D6C4D5AA2040EEB7F806D6C4DC7FCA24CEB3FC0DA7F80160EA24CEB1FE003C0161E023F
171C047814F0DBE070010F133C021F173804F014F84C1307DA0FF05EA2DBF1C0EB03FCDA
07F95EA2DBFB80EB01FEDA03FF6F5AA293C8FCA26E5FA24B157F020094C8FCA24B81037C
153EA20378151E0338151C58407EBD5D>87 D<B66C0103B51280A3000101F0C8EBF8006C
6C48ED3FC0725A013F041EC7FC6D7E606D6C15386D6C1578606D6C5D6E14016D5E6D6D13
03606E6C49C8FC6E6C5B170E6E6C131E171C6E6C5B6E6C137817706E6C13F06F5B6E1301
6EEB83C05FED7FC7DB3FE7C9FC16EFED1FFE5E150F6F5AB3A4ED1FFC020FB512FCA3413E
7FBD44>89 D<EAFFFCA4EAF000B3B3B3B3ABEAFFFCA40E5B77C319>91
D<486C13C00003130101001380481303000EEB070048130E0018130C0038131C00301318
0070133800601330A300E01370481360A400CFEB678039FFC07FE001E013F0A3007F133F
A2003F131F01C013E0390F0007801C1C73BE2D>I<EAFFFCA4EA003CB3B3B3B3ABEAFFFC
A40E5B7FC319>I<EB0FF8EBFFFE3903F01F8039078007E0000F6D7E9038E001F8D81FF0
7F6E7EA3157F6C5AEA0380C8FCA4EC1FFF0103B5FC90381FF87FEB7F803801FC00EA07F8
EA0FE0485A485AA248C7FCEE038012FEA315FFA3007F5BEC03BF3B3F80071F8700261FC0
0E13CF3A07F03C0FFE3A01FFF807FC3A003FC001F0292A7DA82D>97
D<EA01FC12FFA3120712031201B1EC03FC91381FFF8091387C07E09039FDE001F09039FF
C000FC4A137E91C77E49158049141F17C0EE0FE0A217F0A2160717F8AA17F0A2160FA217
E0161F17C06D1580EE3F006D5C6E13FE9039F3C001F89039F1E003F09039E0780FC09026
C03FFFC7FCC7EA07F82D407EBE33>I<49B4FC010F13E090383F00F8017C131E4848131F
4848137F0007ECFF80485A5B121FA24848EB7F00151C007F91C7FCA290C9FC5AAB6C7EA3
003FEC01C07F001F140316806C6C13076C6C14000003140E6C6C131E6C6C137890383F01
F090380FFFC0D901FEC7FC222A7DA828>I<ED01FC15FFA3150715031501B114FF010713
E190381F80F990387E003D49131FD803F81307485A49130348481301121F123F5B127FA2
90C7FCA25AAA7E7FA2123FA26C7E000F14037F000714076C6C497E6C6C497ED8007C0179
13F890383F01F190380FFFC1903A01FE01FC002D407DBE33>I<EB01FE90380FFFC09038
3F03F09038FC01F848486C7E4848137E48487F000F158049131F001F15C04848130FA212
7F16E090C7FCA25AA290B6FCA290C9FCA67EA27F123F16E06C7E1501000F15C06C6C1303
6DEB07806C6C1400C66C131E017E5B90381F80F8903807FFE0010090C7FC232A7EA828>
I<EC1FC0EC7FF8903801F83C903807E07E90380FC0FFEB1FC1EB3F811401137FEC00FE01
FE137C1500AEB6FCA3C648C7FCB3AE487E007F13FFA320407EBF1C>I<167C903903F801
FF903A1FFF078F8090397E0FDE1F9038F803F83803F001A23B07E000FC0600000F6EC7FC
49137E001F147FA8000F147E6D13FE00075C6C6C485AA23901F803E03903FE0FC026071F
FFC8FCEB03F80006CAFC120EA3120FA27F7F6CB512E015FE6C6E7E6C15E06C810003813A
0FC0001FFC48C7EA01FE003E140048157E825A82A46C5D007C153E007E157E6C5D6C6C49
5A6C6C495AD803F0EB0FC0D800FE017FC7FC90383FFFFC010313C0293D7EA82D>I<EA01
FC12FFA3120712031201B1EC01FE913807FFC091381E07E091387803F09138E001F8D9FD
C07F148001FF6D7E91C7FCA25BA25BB3A6486C497EB5D8F87F13FCA32E3F7DBE33>I<EA
01E0EA07F8A2487EA46C5AA2EA01E0C8FCACEA01FC127FA3120712031201B3AC487EB512
F0A3143E7DBD1A>I<1478EB01FEA2EB03FFA4EB01FEA2EB00781400AC147FEB7FFFA313
017F147FB3B3A5123E127F38FF807E14FEA214FCEB81F8EA7F01387C03F0381E07C0380F
FF803801FC00185185BD1C>I<EA01FC12FFA3120712031201B292B51280A392383FFC00
16E0168093C7FC153C5D5D4A5AEC07C04A5A4AC8FC143E147F4A7E13FD9038FFDFC0EC9F
E0140F496C7E01FC7F496C7E1401816E7E81826F7E151F826F7EA282486C14FEB539F07F
FFE0A32B3F7EBE30>I<EA01FC12FFA3120712031201B3B3B1487EB512F8A3153F7DBE1A>
I<2701F801FE14FF00FF902707FFC00313E0913B1E07E00F03F0913B7803F03C01F80007
903BE001F87000FC2603F9C06D487F000101805C01FBD900FF147F91C75B13FF4992C7FC
A2495CB3A6486C496CECFF80B5D8F87FD9FC3F13FEA347287DA74C>I<3901F801FE00FF
903807FFC091381E07E091387803F000079038E001F82603F9C07F0001138001FB6D7E91
C7FC13FF5BA25BB3A6486C497EB5D8F87F13FCA32E287DA733>I<14FF010713E090381F
81F890387E007E01F8131F4848EB0F804848EB07C04848EB03E0000F15F04848EB01F8A2
003F15FCA248C812FEA44815FFA96C15FEA36C6CEB01FCA3001F15F86C6CEB03F0A26C6C
EB07E06C6CEB0FC06C6CEB1F80D8007EEB7E0090383F81FC90380FFFF0010090C7FC282A
7EA82D>I<3901FC03FC00FF90381FFF8091387C0FE09039FDE003F03A07FFC001FC6C49
6C7E6C90C7127F49EC3F805BEE1FC017E0A2EE0FF0A3EE07F8AAEE0FF0A4EE1FE0A2EE3F
C06D1580EE7F007F6E13FE9138C001F89039FDE007F09039FC780FC0DA3FFFC7FCEC07F8
91C9FCAD487EB512F8A32D3A7EA733>I<02FF131C0107EBC03C90381F80F090397F0038
7C01FC131CD803F8130E4848EB0FFC150748481303121F485A1501485AA448C7FCAA6C7E
A36C7EA2001F14036C7E15076C6C130F6C7E6C6C133DD8007E137990383F81F190380FFF
C1903801FE0190C7FCAD4B7E92B512F8A32D3A7DA730>I<3901F807E000FFEB1FF8EC78
7CECE1FE3807F9C100031381EA01FB1401EC00FC01FF1330491300A35BB3A5487EB512FE
A31F287EA724>I<90383FC0603901FFF8E03807C03F381F000F003E1307003C1303127C
0078130112F81400A27E7E7E6D1300EA7FF8EBFFC06C13F86C13FE6C7F6C1480000114C0
D8003F13E0010313F0EB001FEC0FF800E01303A214017E1400A27E15F07E14016C14E06C
EB03C0903880078039F3E01F0038E0FFFC38C01FE01D2A7DA824>I<131CA6133CA4137C
A213FCA2120112031207001FB512C0B6FCA2D801FCC7FCB3A215E0A912009038FE01C0A2
EB7F03013F138090381F8700EB07FEEB01F81B397EB723>I<D801FC14FE00FF147FA300
0714030003140100011400B3A51501A31503120015076DEB06FF017E010E13806D4913FC
90381FC078903807FFE00100903880FE002E297DA733>I<B539E00FFFE0A32707FE0003
13006C48EB00FC5E00015D7F00005DA26D13016D5CA26D6C485AA2ECC007011F91C7FCA2
90380FE00EA2ECF01E0107131CA26D6C5AA2ECFC7801011370A2ECFEF001005BA2EC7FC0
A36E5AA26EC8FCA3140E2B287EA630>I<B53BC3FFFE03FFF8A3290FFE003FE00013C06C
486D48EB3F806C4817006D010F141E00016F131C15076D163C00004A6C1338A2017F5E4B
7E151DD93F805DED3DFC1538D91FC04A5AED78FE9238707E03D90FE0017F5BEDE03F02F0
140701070387C7FC9138F1C01F02F9148F010315CE9138FB800F02FF14DE6D15FCED0007
6D5DA24A1303027E5CA2027C1301023C5C023813003D287EA642>I<B539F01FFFE0A300
03D9C00F1300C690388007F8D97F0013E002805BD93FC05B011F49C7FC90380FE00EECF0
1E6D6C5A01035B6D6C5A6E5AEB00FF6E5A6E5A81141F814A7E81147BECF1FC903801E1FE
ECC0FF01037F49486C7ED90F007F011E6D7E013E130F496D7E01FC80486C80000F4A7EB5
39803FFFF8A32D277FA630>I<B539E00FFFE0A32707FE000313006C48EB01FC6F5A0001
5D7F00005DA2017F495AA2EC8003013F5CA26D6C48C7FCA26E5A010F130EA26D6C5AA2EC
F83C01031338A26D6C5AA2ECFEF001005BA2EC7FC0A36E5AA36EC8FCA2140EA2141E141C
143C1438A2147800181370127EB45BA2495AA248485AD87E07C9FCEA780EEA3C3CEA1FF8
EA07E02B3A7EA630>I<B812F0A22C0280982D>123 D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fm cmr17 17.28 24
/Fm 24 122 df<120FEA3FC0EA7FE012FF13F0A313F8A2127F123FEA0F381200A71378A2
1370A313F013E0A2120113C012031380120713005A121EA25A5A127012300D28748B24>
44 D<4AB4FC021F13F0027F13FC903901FF01FF903A03F8003F80D90FE0EB0FE049486D
7E49486D7E49C76C7E017E140049157E0001167F49810003178049151F000717C049150F
000F17E0A3001F17F0491507A2003F17F8A54848ED03FCA700FF17FEB3A8007F17FCA56D
1507A3003F17F8A4001F17F06D150FA2000F17E0A36C6CED1FC0A2000317806D153F0001
17006D5D6C6C15FE017E5D017F14016D6C495A6D6C495A6D6C495AD903F8EB3F806DB448
B4C7FC9039007FFFFC021F13F0020190C8FC37607BDD42>48 D<EC01C014031407140F14
3F147FEB03FF130F90B5FCB6FCEBFC7F13F01300C7FCB3B3B3B3A24A7EA2010713FCB812
E0A42B5E74DD42>I<EC0FFE91387FFFE00103B512F8010F14FE903A1FE00FFF8090263E
000113E001FC6D6C7ED801F06E7E4848EC0FFC496E7E48486E7E48C81480000E81001E6F
13C0121C003CEE7FE012380078EE3FF01270A3B46CED1FF813E0A27FA66C5A6C5A0006C9
13F0CA123FA318E0177FA2EFFFC0A218805E18004C5A16075F4C5A5F161F4C5A4C5A5F4C
C7FC4B5A4B5A5E4B5A4B5A4B5A4B5A4BC8FC157E5D4A5A4A5A4A5A4A5A4A5A4AC9FC143E
4A15385C495A495A49481570495A49C9FC131E5B4916F05B484816E04848150148481503
48B8FCA25A5A5AB912C0A4355E7ADD42>I<1778A217F81601A216031607A2160F161FA2
163FA2167F16FF16EF1501ED03CF168F1507160F150E151E151C153C1578157015F015E0
EC01C0140315801407EC0F00140E141E141C5C1478147014F0495A5C13035C49C7FC5B13
0E131E5B133813785B5B12015B1203485A90C8FC5A121E121C123C12385A12F0BA12E0A4
C9D80FF8C7FCB34C7EEE7FFF4AB712C0A43B5F7DDE42>52 D<B912F018FF19E019F8C601
FCC8EA7FFED93FF892380FFF80011F04017F9538007FF0F11FF8737EF103FE737E737F74
7E747E747E1A0F87747E1A0387747EA2741380A2F37FC0A21CE01B3FA21CF0A21B1F1CF8
A31CFCA21B0FA41CFEAF1CFCA51B1F1CF8A4F33FF0A21CE0A21B7F1CC01BFF1C80A25013
00A2505A505AA2505A505A505A505A1AFF4F5B4F90C7FCF107FCF11FF8F17FF0953801FF
C0013F04075BD9FFFCDB7FFEC8FCBA12F819E096C9FC18F0576279E165>68
D<BB12FCA4C601FCC8120FD93FF89238007FFE011F171F190719031900A21A7E1A3EA21A
1EA21A1F86A486A6F20380A318E0A297C7FCA61701A417031707170F171F17FF91B7FCA4
02F8C7FC171F170F170717031701A41700A895C9FCB3A580133F90B57EB712E0A4496279
E156>70 D<020FB612FCA4DA0001EBFE009238003FFC5F161FB3B3B3AE1207EA3FE0487E
A2487EA34C5AA35B6C484A5A13800078C8485A6C5E5D6C93C7FC6C4A5A6C6C495AD803E0
495AD801F8EB3FE0D8007FEBFFC06DB5C8FC010713F8010013C036647AE144>74
D<B812FCEFFFE018FCF0FF80C601FCC7000F13E0D93FF89138007FF8011FEE1FFCF007FF
06017F727FF13FE0737E86737E737EA2868587A28587A96361A298C8FC6162624F5A191F
4F5A4F5AF1FF804E90C9FCF007FEF01FF8F0FFE0050F138091B700FCCAFC18E08402F8C7
EA1FFE943801FF80716C7EF03FF0727EF007FC727E85727F8486737EA3737EAA86AA1DE0
86191FA3070F14017414C007071403496C8390B570EC0780B76F9038800F00736D5A9738
3FF03E97380FFFFCCD000313F09738003FC05B6479E162>82 D<EC3FF0903803FFFE010F
6D7E90393FC03FE090397E0007F801F86D7ED801E06D7E48486D7E48486E7E48C86C7E7F
01F06E7E487E6D6E7EA3707EA36C5AEA03E0C9FCA6167FED7FFF020FB5FC91387FF80790
3801FF80903807FC00EB1FF0EB7FC0495AD803FEC7FC485A120F5B485A485AA2484817E0
A312FF5BA2160FA3161F6D141B007F153B16736D913971FC01C06C6C14E1001FEC01C1D8
0FFC903A0780FE03806C6C903A0F00FF07002701FF807E6DB4FC27007FFFF86D5A011F01
E0EB1FF8010190C7EA07E03B417ABF42>97 D<EB03C0EA07FFB5FCA41201EA007FA2133F
B3AAEE7FC0923807FFFC031F13FF92397F007FC003F8EB0FF0DAC3E06D7EDAC780EB01FC
02CFC87E02DE157F02FC6F7E4A824A6F7E180F4A82727E5C727EA2851801A285A3841A80
AD1A0060A461180361A21807616E5E180F6E4B5A6E5E02B8153F023C4B5A6E4BC7FC6E4A
5A90263E0780495A6E6CEB0FF090263C01F0495ADA007EEBFF806FB448C8FC0138010F13
F890C8138041657DE349>I<4AB47E020F13F8023F13FE9139FF007F80D903FCEB07E0D9
07F0EB01F0D91FE0EB007849488049488049C87E48485D4915FF00034B138048485CA248
5AA2485AA2003F6F130049EC007C94C7FC127FA35B12FFAD127F7FA4123F7FA2001FEE01
C07F000F16036D168012076C6C15076D160000015E6C6C151E6D6C5C6D6C5C6D6C5CD90F
F8495AD903FCEB07C0903A00FF803F8091263FFFFEC7FC020F13F80201138032417CBF3A
>I<181EEF3FFEEE07FFA4EE000F1703A21701B3AAEDFF80020F13F8023F13FE9139FF80
3F81903A03FC0007C14948EB01E1D91FE0EB00F94948147D4948143D49C8121F4848150F
491507120348481503491501120F121F5BA2123F5B127FA45B12FFAD127F7FA3123FA27F
121FA26C6C1503A26C6C150712036D150F6C6C151F0000163D137F6D6CECF9FF6D6CEB01
F1D90FF0D903C113C06D6CD90F81EBFF80D901FFEB7F019039007FFFFC021F13E0020101
0091C7FC41657CE349>I<EC03FE91381FFFE091B512F8903901FE03FE903A07F0007F80
49486D7ED93FC06D7E49C76C7E496E7E49140348488148481401000782491400000F8283
485A1880123F49153FA2007F17C0A35BA212FF90B8FCA30180CAFCA9127F7FA3123FA27F
121FEF01C06C7E17036C6C1680A26C6C15070001EE0F006D150E6C6C151E6D6C5C6D6C5C
6D6C5CD907F0EB03E0D903FC495A902700FF803FC7FC91383FFFFC020F13F00201138032
417CBF3A>I<ED0FF0ED7FFC4AB5FC913907F81F8091390FE00FC091381FC03F91393F80
7FE0EC7F005C495A5C0103EC3FC0A24948EB0F0093C7FCA2495AB3A5B712F0A426000FF0
C8FCB3B3B0497EEB3FFE003FB6FCA42B657EE428>I<EB03C0EA07FFB5FCA41201EA007F
A2133FB3AAEE7FE0923803FFFC030F13FFDB3F0013C00378EB1FE04B6D7EDAC1C06D7EDA
C3808002C7C7120302CE81170114DC14D802F86E7E5CA35CA35CB3B3496C4A7F496C4A7F
B6D8F003B612C0A442647DE349>104 D<133C13FF487F487FA66C5B6C90C7FC133C90C8
FCB3A2EB03C0EA07FF127FA41201EA007FA2133FB3B3AC497E497EB612E0A41B5F7DDE23
>I<D903C0EB7FE0D807FF903803FFFCB5010F13FFDB3F0013C00378EB1FE04B6D7E0001
D9C1C06D7E27007FC3808002C7C71203D93FCE81170114DC14D802F86E7E5CA35CA35CB3
B3496C4A7F496C4A7FB6D8F003B612C0A4423F7DBE49>110 D<EDFF80020F13F8023F13
FE9139FF007F80D903FCEB1FE0D907F0EB07F0D90FC0EB01F8D93F80EB00FE49C8127F01
7E81496F7E48486F7E00038349150700078348486F7EA2001F83491501A2003F83A34848
6F7EA400FF1880AC007F1800A26D5DA2003F5FA36C6C4B5AA36C6C4B5A00075FA26C6C4B
5A6C6C4B5AA26C6C4B5A017F4BC7FC6D6C14FE6D6C495AD90FF0EB07F8D903FCEB1FE0D9
00FFEB7F806EB5C8FC020F13F8020113C039417CBF42>I<9039078003F8D807FFEB0FFF
B5013F13C092387C0FE0913881F01F9238E03FF00001EB838039007F8700148FEB3F8E02
9CEB1FE0EE0FC00298EB030002B890C7FCA214B014F0A25CA55CB3B0497EEBFFF8B612FC
A42C3F7CBE33>114 D<9139FFE00180010FEBFC03017FEBFF073A01FF001FCFD803F8EB
03EFD807E0EB01FF48487F4848147F48C8123F003E151F007E150F127CA200FC1507A316
037EA27E7F6C7E6D91C7FC13F8EA3FFE381FFFF06CEBFF806C14F86C14FF6C15C06C6C14
F0011F80010714FED9007F7F02031480DA003F13C01503030013E0167F00E0ED1FF0160F
17F86C15071603A36C1501A37EA26C16F016037E17E06D14076DEC0FC06D1580D8FDF014
1FD8F8F8EC7F00013E14FC3AF01FC00FF80107B512E0D8E001148027C0003FF8C7FC2D41
7DBF34>I<1438A71478A414F8A31301A31303A21307130F131FA2137F13FF1203000F90
B6FCB8FCA3260007F8C8FCB3AE17E0AE6D6CEB01C0A316036D6C148016076D6C14006E6C
5A91383FC01E91381FF07C6EB45A020313E09138007F802B597FD733>I<D903C0150FD8
07FFED1FFFB50203B5FCA40001ED0007D8007F1501A2013F81B3B25FA35FA35F011F1506
6E140E5F130F6E4A7F01075D6D6C494813E0D901FE4948EBFFC0903A00FFC01F8091393F
FFFE00020F13F8020001C0EC800042407DBE49>I<B66C49B512E0A4000101F8C8387FFE
0026007FE0ED1FF819E0013F705A61131F6E93C7FC010F160EA26D6C5DA26E153C010316
38A26D6C5DA26E15F06D5EA26E6C495AA26F1303023F5DA26F1307021F92C8FC6F5B020F
140EA26F131E0207141C6F133C02031438A26F1378020114706F13F06E5CA21681037F5B
16C3033F5BA216E7031F90C9FC16FF6F5AA36F5AA26F5AA36F5AA26F5AA215015E15035E
A2150793CAFC5D150EA2151E151C153CD81F801338487E486C5BA25D14015D49485A383F
80074948CBFC001E133E380FC0FC6CB45A000113E06C6CCCFC435B7FBD46>121
D E
%EndDVIPSBitmapFont
%DVIPSBitmapFont: Fn cmr17 24.88 11
/Fn 11 122 df[<DE1FFE933803FFC00507B500C0037F13FC053F02F00203B6FC4CB600
FC021F15C004079026C007FF913A7FFC007FE0DC1FFEC7287F8001FFC0EB0FF0DC7FF091
261FC00790C7EA03FC922601FFC0912707E01FFC14004B90C82703F03FF0157EDB0FFE6F
6CB448814B48DB00F9496F7E4B480303B548157F4B48031F91C8EA01FF4B484B4903077F
4A494B5B4A494D5D97B55A4A90C9FC4A484E4B7F7A5B4A486086143F4B70496F5B747190
C8FC0807EF00FC4A4895CEFCB3AA9D3801FFE00D3FB5FCC3FCA6C7D87FF0C9000790C912
0F20038CA38CB3B3B3AF4A6C4C6D4B7F496D4C6D4B7F010701FF047F01F0030F13FE001F
B7D8C001B700FC013FB71280A6>145 145 125 272 155 14 D[<1AF04F7E4F7EA34F7E
A34F7EA34F7FA34F7FA34F7FA396B57E19FB06018019F319F106038019E119E006078061
1A7F060F804F7EA2061F814F7EA24E81063E7FA2067E81067C7FA24E8186050182608605
038260860507824E147FA2050F824E80A2051F8395C87EA24D83053E81A24D838705FC83
5F870401845F870403845F870407844D167FA2040F844D82A2041F8594CA7EA2043E8588
047E85167C8804FC855E884BBB7EA34B86A3DB07E0CB7F4C187FA2030F864C84A2031F87
93CC7EA2033E8789037E87157C8903FC875D890201885D890203884B85A20207884B1A7F
A2020F884B86A24ACE808A4A89A24A878C5C8A498A497F010F6D507F496D88017F6D083F
7F0007B500FE4FB612C0B700C095B812F0A6>132 146 123 273
143 65 D[<BF12FEA58AD8001F0280C9120F010349CB123F6D4918071C006D871D1F891D
03777FA2891E7F1E3FA21E1FA3787EA31E07A31E03A38BA21E01A7E003C0811E00A49CC7
FCA61A07A41A0FA21A1FA21A3F1A7FF101FF1907197F92B9FCA603FCC87E19071901F100
7F1A3F1A1FA21A0FA21A07A41A03A4F703C0A4F70780A397CAFCA4F70F00A567A31F1E1F
3EA41F7EA21F7C1FFCA31E01A21E031E07671E0F1E1F1E3F1E7F1EFF651D07535B491B7F
52B5FC496D181F011F6D6C0407B6FCC0FCA267A4>114 141 117
268 130 69 D<ED0FFF92B512F0020314FE020F6E7E91263FF00313E0913AFF80007FF8
D901FCC7EA1FFCD903F0EC07FE49486E6C7E49486E7F49C97F013E707E017E163F017C83
49707EA24848707E13FF02C06F7E80486D6F7F80A3727FA46C5BA238007FC06D5A90CAFC
A8053FB5FC040FB6FC4BB7FC031F1401037F1380913903FFF800020F13C0DA3FFEC7FCEC
FFF8010313E0495B011F90C8FC495A495A495A485B485B485BA2485B4890C9FCA248481A
3CA2127F5BA3485A60A460A3606D160E007F171E606D716C1378003F17786C6C16F06E4A
486C6C13F06C6DEC03C06C6D020790391FF801E06C6DDA1F00EBFC036C6D023E90390FFF
9FC026007FFED901FC6DEBFF8090281FFFE00FF06D1400010790B5486D5B010103806D13
F8D9003F01FCC8EA1FC0020101C092C8FC565E78DB5F>97 D<EE1FFE4BB512E0030F14FC
033F14FF9226FFF00113C00203903980001FF0DA0FFEC7EA03F8DA1FF8EC00FE4A48157F
DAFFE0ED1F8049496F7E49496F7E4990C912034948707E4948707EA24948177C4948EE07
FC01FF171F4A163F484E7E484916FFA25A5C5AA291CAFC48725AA2F11FF04848715A96C8
FCA2127FA35BA312FFAF127F7FA4123FA27FA27EA2806CF10780A26C6D170F1B007E6E5F
6C191E806C6D173E017F606E17786D6C17F8011F606D6C16016D6D4B5A6D6D4B5A6D6D4B
5A6D6D4BC7FC6E6C153EDA1FFE15FC6E6C6C495A020301E0EB0FE0020001FCEB7FC0033F
B6C8FC030F14FC030114E09226001FFEC9FC495E7ADB54>99 D<EE7FFC0307B512C0033F
14F892B612FE02039039E01FFF804AD9000313E0DA1FFC01007FDA3FF0EC3FF84A486E7E
4A48EC07FE4949814990C86C7F49486F7F49486F7F495A013F717E495A737E4948834818
1F5C48854A160F5A864890CAFC85481A80A25B123FA37313C0127FA25BA312FF90BBFCA4
01FCCDFCAB127FA27FA3123FA36C7EA36CF103C0807E1A076C6D1880A26C190F6E18006C
616D6C171E6E173E013F606D6C17786D6C17F801074D5A6D6C4C5A6D6D4B5A6D6D4B5ADA
7FF04BC7FC6E6C157EDA1FFE5D912607FF80EB03F86E01E0EB1FF0020001FEEBFFC0033F
B6C8FC030F14FC030114F0DB001F90C9FC4A5E7BDB54>101 D[<EB07F0497E497E497E49
7E90B57EA76D90C7FC6D5A6D5A6D5A6D5A90C9FCB3ABEC1F8048B5FC127FA6C67E131F7F
7FA27FB3B3B3AF497F497F013F13F8B712F8A6>37 137 121 264
52 105 D[<EC1F800003B5FCB6FCA6C6FC131F7F7FA27FB3B3B3B3B3B3AD497F497F013F
13F8B712FEA6>39 143 121 270 52 108 D<023F913801FFE00003B5021F13FEB6027F
EBFFC04CB612F0932607FC0113FC933A0FC0003FFE4CC7EA0FFF047E02037FC603F86E7F
011F4948826D4A806D49486F7E4B5A6D49C96C7EA2151E031C707E153C15381578037070
7E15F05DA45DA45DB3B3B0496D4C7E496D4C7F013F01F893B512E0B700FE0103B712F8A6
5D5B79DA6A>110 D<DBFFF8EB01C0021F9038FF800391B612E00107EDF807011F903900
07FE0FD93FF0903800FF1FD9FF80EC3F9F4848C8EA0FFF48488148488148488149814848
167F123F49163F181F127F90CA120FA25A1807A47F18037FA27F6C7E7F7F6C6C93C7FC7F
6C13C014F86C13FF6C14F8EDFFC06C15FEC6EDFFC06D15F86D15FE010F6F7E6D16E00101
82D9003F81020715FEDA007F8003031580ED003F040114C0DC003F13E0050F13F0170300
F07013F883187F6CEF3FFC181F180F19FE18077E1803A36C1701A37EA36D17FCA26D1603
A26D17F818076D17F06D160F19E06D161F01BEEE3FC0011FEE7F806EEDFF0026FE0FE04A
5A6D6CEC07FC26FC01FCEC3FF03CF800FFC003FFE0023FB6128048010F4AC7FC020314F0
489026003FFEC8FC3F5E7BDB4A>115 D<B700F0031FB512FEA6C66C01FCC9000714C001
1F01F00401EBFE000107497013F84B715A6D735A646D6D6099C7FC7F6F173E147F1B3C6F
177C023F187881021F60A26F1601020F60811A036E607015076E60821A0F6E95C8FC705D
6E171E821A3E037F163C70157C033F1678821AF8031F5E701401030F5E8219036F5E7113
076F5E83190F6F93C9FC715B6F151E83193E047F143C71137C043F1478A27113F8041F5C
EFFE01040F5CA2EFFF03705C1887705CA218CF7091CAFC18EF7013FEA3715AA2715AA371
5AA2715AA3715AA260A2170F95CBFCA2171EA2173E173CA25FA217F85FA24C5AA216035F
A2D807E04A5AEA1FF8486C140F94CCFC486C5C161E163E163C5E16F8495C003F14014949
5AD81FE0495A90C7485AD80FC0013FCDFCD807F0137E3903FC03FC6CB55A6C6C13E0011F
1380D903FCCEFC5F837ED864>121 D E
%EndDVIPSBitmapFont
end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin

%%EndSetup
%%Page: 1 1
1 0 bop 960 607 a Fn(E\016ciency)60 b(Analysis)838 1716
y @beginspecial 78 @llx 324 @lly 523 @urx 487 @ury 2224
@rwi @setspecial
%%BeginDocument: figure.eps
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(TM) 6.0
%%AI8_CreatorVersion: 8
%%For: (Peter Salamon) (San Diego State University)
%%Title: (Fig.6.2.eps)
%%CreationDate: (10/16/00) (2:47 PM)
%%BoundingBox: 78 324 523 487
%%HiResBoundingBox: 78.3335 324.2788 522.6782 486.979
%%DocumentProcessColors: Black
%%DocumentFonts: Helvetica
%%DocumentNeededFonts: Helvetica
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset Adobe_typography_AI5 1.0 0
%%+ procset Adobe_blend_AI5 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.1 0
%%+ procset Adobe_Illustrator_AI5 1.0 0
%AI5_FileFormat 2.0
%AI3_ColorUsage: Black&White
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 306 396 306 396
%AI3_TileBox: 0 0 552 728
%AI3_DocumentPreview: Macintosh_ColorPic
%AI5_ArtSize: 595.2756 841.8898
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI5_OpenToView: -150 732 1 785 552 18 0 1 7 40 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%%AI3_PaperRect:-30 761 582 -31
%%AI3_Margin:30 -33 -30 31
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset Adobe_typography_AI5 1.0 1
%%Title: (Typography Operators)
%%Version: 1.0 1
%%CreationDate:(03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_typography_AI5 54 dict dup begin
put
/initialize
{
 begin
 begin
	Adobe_typography_AI5 begin
	Adobe_typography_AI5
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
 end
 end
	Adobe_typography_AI5 begin
} def
/terminate
{
	currentdict Adobe_typography_AI5 eq
	{
	 end
	} if
} def
/modifyEncoding
{
	/_tempEncode exch ddef
	/_pntr 0 ddef
	{
		counttomark -1 roll
		dup type dup /marktype eq
		{
			pop pop exit
		}
		{
			/nametype eq
			{
				_tempEncode /_pntr dup load dup 3 1 roll 1 add ddef 3 -1 roll
				put
			}
			{
				/_pntr exch ddef
			} ifelse
		} ifelse
	} loop
	_tempEncode
} def
/TE
{
	StandardEncoding 256 array copy modifyEncoding
	/_nativeEncoding exch def
} def
%
/TZ
{
	dup type /arraytype eq
	{
		/_wv exch def
	}
	{
		/_wv 0 def
	} ifelse
	/_useNativeEncoding exch def
	pop pop
	findfont _wv type /arraytype eq
	{
		_wv makeblendedfont
	} if
	dup length 2 add dict
 begin
	mark exch
	{
		1 index /FID ne
		{
			def
		} if
		cleartomark mark
	} forall
	pop
	/FontName exch def
	counttomark 0 eq
	{
		1 _useNativeEncoding eq
		{
			/Encoding _nativeEncoding def
		} if
		cleartomark
	}
	{
		/Encoding load 256 array copy
		modifyEncoding /Encoding exch def
	} ifelse
	FontName currentdict
 end
	definefont pop
} def
/tr
{
	_ax _ay 3 2 roll
} def
/trj
{
	_cx _cy _sp _ax _ay 6 5 roll
} def
/a0
{
	/Tx
	{
		dup
		currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
	} ddef
	/Tj
	{
		dup
		currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
	} ddef
} def
/a1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		tr _psf
		newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		dup currentpoint 3 2 roll
		trj _pjsf
		newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/e0
{
	/Tx
	{
		tr _psf
	} ddef
	/Tj
	{
		trj _pjsf
	} ddef
} def
/e1
{
	/Tx
	{
		dup currentpoint 4 2 roll gsave
		tr _psf
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll gsave
		trj _pjsf
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/i0
{
	/Tx
	{
		tr sp
	} ddef
	/Tj
	{
		trj jsp
	} ddef
} def
/i1
{
	W N
} def
/o0
{
	/Tx
	{
		tr sw rmoveto
	} ddef
	/Tj
	{
		trj swj rmoveto
	} ddef
} def
/r0
{
	/Tx
	{
		tr _ctm _pss
	} ddef
	/Tj
	{
		trj _ctm _pjss
	} ddef
} def
/r1
{
	/Tx
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		tr _ctm _pss
		grestore 3 1 roll moveto tr sp
	} ddef
	/Tj
	{
		dup currentpoint 4 2 roll currentpoint gsave newpath moveto
		trj _ctm _pjss
		grestore 3 1 roll moveto tr jsp
	} ddef
} def
/To
{
	pop _ctm currentmatrix pop
} def
/TO
{
	iTe _ctm setmatrix newpath
} def
/Tp
{
	pop _tm astore pop _ctm setmatrix
	_tDict begin
	/W
	{
	} def
	/h
	{
	} def
} def
/TP
{
 end
	iTm 0 0 moveto
} def
/Tr
{
	_render 3 le
	{
		currentpoint newpath moveto
	} if
	dup 8 eq
	{
		pop 0
	}
	{
		dup 9 eq
		{
			pop 1
		} if
	} ifelse
	dup /_render exch ddef
	_renderStart exch get load exec
} def
/iTm
{
	_ctm setmatrix _tm concat 0 _rise translate _hs 1 scale
} def
/Tm
{
	_tm astore pop iTm 0 0 moveto
} def
/Td
{
	_mtx translate _tm _tm concatmatrix pop iTm 0 0 moveto
} def
/iTe
{
	_render -1 eq
	{
	}
	{
		_renderEnd _render get dup null ne
		{
			load exec
		}
		{
			pop
		} ifelse
	} ifelse
	/_render -1 ddef
} def
/Ta
{
	pop
} def
/Tf
{
	dup 1000 div /_fScl exch ddef
%
	selectfont
} def
/Tl
{
	pop
	0 exch _leading astore pop
} def
/Tt
{
	pop
} def
/TW
{
	3 npop
} def
/Tw
{
	/_cx exch ddef
} def
/TC
{
	3 npop
} def
/Tc
{
	/_ax exch ddef
} def
/Ts
{
	/_rise exch ddef
	currentpoint
	iTm
	moveto
} def
/Ti
{
	3 npop
} def
/Tz
{
	100 div /_hs exch ddef
	iTm
} def
/TA
{
	pop
} def
/Tq
{
	pop
} def
/Th
{
	pop pop pop pop pop
} def
/TX
{
	pop
} def
/Tk
{
	exch pop _fScl mul neg 0 rmoveto
} def
/TK
{
	2 npop
} def
/T*
{
	_leading aload pop neg Td
} def
/T*-
{
	_leading aload pop Td
} def
/T-
{
	_ax neg 0 rmoveto
	_hyphen Tx
} def
/T+
{
} def
/TR
{
	_ctm currentmatrix pop
	_tm astore pop
	iTm 0 0 moveto
} def
/TS
{
	currentfont 3 1 roll
	/_Symbol_ _fScl 1000 mul selectfont
	
	0 eq
	{
		Tx
	}
	{
		Tj
	} ifelse
	setfont
} def
/Xb
{
	pop pop
} def
/Tb /Xb load def
/Xe
{
	pop pop pop pop
} def
/Te /Xe load def
/XB
{
} def
/TB /XB load def
currentdict readonly pop
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_blend_AI5 1.4 0
%%Title: (Adobe Illustrator (R) Version 5.0 Blend ProcSet)
%%Version: 1.4 0
%%CreationDate: (11/19/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_blend_AI5 70 dict dup begin
put
/bd
{
	bind def
} bind def
/xs
{
	exch store
} bd
/nullProc
{
	{
	}
} def
/initialize
{
	pop pop
	Adobe_blend_AI5 begin
		Adobe_blend_AI5_vars begin
			/_contoneDevice where
			{
				pop
			}
			{
				/_contoneDevice false def	
			} ifelse
					
			/_dpiThreshold where
			{
				pop
			}
			{	
				/_dpiThreshold 600 def
			} ifelse
			
			/_screenFreqThreshold where
			{
				pop
			}
			{	
				/_screenFreqThreshold 150 def
			} ifelse
			
			/tRectOK? deviceDPI _dpiThreshold le currentScreenFreq _screenFreqThreshold le and _contoneDevice not and def
	/invertXfer
	{
		[
		{
			1 exch sub
				} /exec load systemdict/currenttransfer get exec /exec load
				] cvx systemdict/settransfer get exec
			} bd
			/spotDict 3 dict dup begin
				/nSpots 2 def
				/spot1 7 dict def
				/spot2 7 dict def
		 end
			def
			composite?
			{
				/_setgray_ /setgray load def
				/_fill_ /fill load def
				/_image_ /image load def
			}
			{
				/_setgray_ systemdict/setgray get def
				/_fill_ systemdict/fill get def
				/_image_ systemdict/image get def
			} ifelse
		} bd
		/terminate
		{
			currentdict Adobe_blend_AI5_vars eq
			{
		 end
			currentdict Adobe_blend_AI5 eq
			{
		 end
		} if
	} if
} bd
/_compositeSpotDevice where
{
 begin
		_compositeSpotDevice 0 ne {userdict /composite? true put} if
 end
}
{
	/_compositeSpotDevice 0 def	
} ifelse
	
/nullString () def
/d255 256 array def
0 1 255
{
	d255 exch dup 255 div put
} bind for
/d255- 256 array def
0 1 255
{
	d255- exch 1 d255 2 index get sub put
} bind for
/dUserSpace matrix defaultmatrix def
currentdict /Adobe_blend_AI5_vars 89 dict dup begin
put
{
	/f /F /s /S /b /B
}
{
	null def
} bind forall
/byte 1 string def
/sSave null def
/setSSave
{
	save /sSave exch store
} bind def
/Bm null def
/doBlend null def
/startC? false def
/endC? false def
/fCMYK? null def
/startTint 0 def
/endTint 0 def
/bSMatrix matrix def
/bUMatrix matrix def
/dMatrix matrix def
/inLine? true def
/pTState? false def
/bHi? false def
/yHi 0 def
/xHi 0 def
/noImg /lv1Fix where
{
	pop lv1Fix
}
{
	false
} ifelse
def
/ccAry1 5 array def
/ccTint 0 def
/spotColor? false def
/colorimage? true def
[
/tint1Data
/tint2Data
/spotDict
/bAxis
/ubAxis
/pChange
/optimize?
/nSamples
/sInc
/blendProc
/_bn
/xBCInc
/yBCInc
/bInc
/bRender
/cBName
/cBType
/nColors
/color?
/blend?
/colorType
/cData
/cDataLen
/bDataLen
/rampPoint
/midPoint
/endPoint
/blendLength
/blackData
/yeData
/mgData
/cyData
/cnt1
/ndx
/_fill
/tmp
counttomark
{
	null def
} bind
repeat
pop
currentdict
end
currentdict
end
exch
begin
begin
/unitSq
{
	0 0 moveto 0 1 lineto 1 1 lineto 1 0 lineto closepath
} bd
/gMark
{
	counttomark 2 add -1 roll
} bd
/setCustomColor
{
	dup /ccTint exch store
	1 exch sub 6 1 roll
	ccAry1 astore
	exch setcustomcolor
} bd
/currentCustomColor
{
	ccAry1 aload pop ccTint
} bd
/nsetcustomcolor where 
{
	pop
}
{
	/nsetcustomcolor
	{
		pop setcmykcolor	
	} bd
} ifelse
/nsetcustomcolorend where 
{
	pop
}
{
	/nsetcustomcolorend
	{
	} bd
} ifelse
/setBSpace
{
	newpath bUMatrix astore concat unitSq
} bd
/setCStop
{
	dup 0 eq
	{
		pop
		
		spotColor?
			{
			dup 1 exch sub /ccTint exch def
			ccAry1 4 /Black put
			} if
		setgray
	}
	{
		1 eq
		{
			setcmykcolor
		}
		{
			composite? not colorType 2 lt and
			{
				forceCMYK
			}
			{
				setCustomColor
			} ifelse
		} ifelse
	} ifelse
} bd
/makeByte
{
	/tmp 0 store
	255 mul cvi
	8 string 8
	{
		dup tmp 3 index put /tmp tmp 1 add store
	} repeat
	exch pop
} bd
/setImgSpace
{
	cDataLen 1 8
	2 index 0 0 1 0 0 dMatrix astore
} bd
/bwImage
{
	setImgSpace cData /_image_ load
	{
		exec
	} stopped
	{
		$error /errorname get /undefinedresult ne
		{
			stop
		}
		{
			pop pop pop pop pop
		} ifelse
	} if
} bd
level2?
{
	/bFill
	{
		_fill
	} def
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		expandCMYK
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
} if
/expandOne
{
			dup type /stringtype ne
			{
				cDataLen string
				exch
				dup 0 ne
				{
					255 mul cvi
					0 1 cDataLen 1 sub
					{
						3 copy
						exch put pop
					} for
				} if
				pop
			} if
} bd
/expandSpot
{
	spotColor?
	{
		spotDict begin
			spot1 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
			spot2 begin
				tintImage type /nulltype ne
				{
					tintImage expandOne /tintImage exch def
				} if
		  end
	 end
	} if
} bd
/expandCMYK
{
	4
	{
		expandOne 4 1 roll
	} repeat
} bd
/colorimage where dup
{
	exch pop
	
	/ncolorimage where
	{
		pop
	}
	{
		/ncolorimage {pop colorimage} bd
	} ifelse
} if
not
{
	/ncolorimage where 
	{
		pop
	}
	{
		/colorimage? false store
		/ncolorimage
		{
			pop pop pop
	
		setSSave
		/blackData xs
		/yeData xs
		/mgData xs
		/cyData xs
		/cnt1 0 store
		[
		byte dup 0
		cyData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .3 /mul cvx
		}
		{
			.3 mul
		} ifelse
		mgData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .59 /mul cvx
		}
		{
			.59 mul
		} ifelse
		yeData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx .11 /mul cvx
		}
		{
			.11 mul
		} ifelse
		blackData dup type /stringtype eq
		{
			/cnt1 cvx /get cvx d255 /exch cvx /get cvx
		} if
		/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/dup cvx 1 /gt cvx
		{
			pop 1
		} /if cvx
		255 /mul cvx /cvi cvx
		256 /mod cvx
		/dup cvx 0 /lt cvx
		{
			pop 0
		} /if cvx
		/put cvx
		/cnt1 dup cvx 1 /add cvx /store cvx
		] cvx
		bind
			_image_ 
		sSave restore
	} bd
	} ifelse
} if
level2? not
{
	/bCImg
	{
		/cDataLen bDataLen store
		setImgSpace
		setSSave
		expandSpot
		cyData mgData yeData cData
		colorimage? 
		{
			expandCMYK
		} if
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bwFill
	{
		setSSave
		/cDataLen 8 store
		/cData currentgray makeByte store
		bwImage
		sSave restore
	} bd
	/c1ImgFill
	{
		setSSave
		/cDataLen 8 store
		setImgSpace
		spotColor?
		{
			spotDict begin
				spot1 begin
					currentCustomColor makeByte /tintImage exch def
					/name exch def
					/spot_K exch def
					/spot_Y exch def
					/spot_M exch def
					/spot_C exch def
			 end
				spot2 initSpotData
		 end
		} if
		currentcmykcolor
		4
		{
			makeByte 4 1 roll
		} repeat
		true 4 spotDict
		{
			ncolorimage
		} stopped
		{
			$error /errorname get /undefinedresult ne
			{
				stop
			}
			{
				10
				{
					pop
				} repeat
			} ifelse
		} if
		sSave restore
	} bd
	/bFill
	noImg
	{
		{
			_fill
		}
	}
	{
		{
			color?
			{
				c1ImgFill
			}
			{
				bwFill
			} ifelse
		}
	} ifelse
	bd
} if
composite?
{
	/bCFun
	{
		color?
		{
			cyData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			mgData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			yeData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			cData dup type /stringtype eq
			{
				/ndx cvx /get cvx d255 /exch cvx /get cvx
			} if
			spotColor?
			{
				spotDict begin
					/spotDict cvx /begin cvx
					spot1 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
					spot2 begin
						tintImage dup type /stringtype eq
						{
							/ndx cvx /get cvx d255- /exch cvx /get cvx
						}
						{
							dup type /nulltype ne 
							{
								name type /nametype ne {1 exch sub} if
							} if
						} ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/spotDict cvx
				/nsetcustomcolor cvx
			}
			{
				/setcmykcolor cvx
			} ifelse
		}
		{
			cData /ndx cvx /get cvx
			d255 /exch cvx /get cvx
			/setgray cvx
		} ifelse
	} bd
	/Bc
	{
		newpath
		gsave
		setBSpace
		nColors 1 eq
		{
			pop pop
			setCStop
		} if
		bFill
		grestore
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			linImg
		}
		{
			bFill
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		_fill
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			_fill
			blend? bHi? or
			{
				rdBlend
			} if
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/cGetRData
	{
		setCStop
		/blend?
		cData type /stringtype eq
		dup not color? and
		{
			pop
			cyData type /stringtype eq
			mgData type /stringtype eq
			yeData type /stringtype eq
			or or
		} if
		store
	} def
	/cGetRData
} if
/eCStop
{
	mark
	1 index 3 mul 3 add dup 8 gt
	{
		pop 8
	} if
	1 roll
	cleartomark
} bd
composite? not
{
	/knockOut
	level2?
	{
		{
			0 0 0 0 setcmykcolor _fill
		}
	}
	{
		/bFill noImg
		{
			{
				_fill
			}
		}
		{
			{
				_of true eq
				{
					currentgray 1 ne
					{
						bwFill
					} if
				}
				{
					bwFill
				} ifelse
			}
		} ifelse
		def
		/whiteByte 1 makeByte def
		noImg
		{
			{
				0 0 0 0 setcmykcolor _fill
			}
		}
		{
			{
				cBType 0 eq
				{
					setSSave
					/cData whiteByte store
					/cDataLen 8 store
					bwImage
					sSave restore
				}
				{
					_fill
				} ifelse
			}
		} ifelse
	} ifelse
	bd
	/bCFun
	{
		cData dup type /stringtype ne
		{
			color?
			{
				1 exch sub
			} if
		}
		{
			/ndx cvx /get cvx
			color? customColor? not and
			{
				d255-
			}
			{
				d255
			} ifelse
			/exch cvx /get cvx
		} ifelse
		/_setgray_ cvx
	} bd
	/eCCBlend
	{
		dup 3 eq
		{
			pop
			mark 7 1 roll
			6 copy ccThrough? dup /blend? xs
			{
				/startC? true store
				setCustomColor
				customColor?
				{
					/cData tint1Data store
					setCDataLen
				} if
				/endC?
				3 index 3 eq
				{
					4 index 1 ne
				}
				{
					false
				} ifelse
				store
			} if
			cleartomark
			stop
		} if
		1 eq
		{
			pop pop pop
		} if
		pop
		/startC? false store
		6
		{
			8 index
		} repeat
		ccThrough? dup /blend? xs
		{
			/endC? true store
			blend? not
			{
				stop
			} if
			customColor?
			{
				/cData tint1Data store
				setCDataLen
			} if
		} if
	} bd
	/handleOP
	{
		_of not
		{
			knockOut
		} if
	} bd
	/handleROP
	{
		_of not
		{
			0 0 0 0 setcmykcolor _fill
		}
		{
			newpath	
		} ifelse
	} bd
	/rdBm
	{
		/nColors dup load 1 sub store
		blend? 
		{
			_fill
		}
		{
			handleROP
		} ifelse
		gsave
		bUMatrix astore concat
		bHi?
		{
			xHi yHi bUMatrix idtransform /yHi exch store /xHi exch store
			rampPoint 1 lt
			{
				1 rampPoint sub dup xHi mul exch yHi mul translate
			} if
		} if
		nColors
		{
			0 0 rampPoint 0 360 arc
			blend?
			{
				cData type /stringtype ne bHi? not and
				{
					cData color?
					{
						1 exch sub
					} if
					_setgray_ 
					_fill_ 
				}
				{
					cData type /stringtype ne
					{
						/cDataLen 1 store
						/bDataLen 1 store
					} if
					rdBlend
				} ifelse
			}
			{
				
				handleROP
				
				pTState?
				{
					/bAxis rampPoint endPoint sub store
					xHi bAxis mul yHi bAxis mul translate
				} if
			} ifelse
				
			nColors 1 gt
			{
				getRData
			} if
			/nColors dup load 1 sub store
		} repeat
		/nColors 1 store
		grestore
	} bd
	/ccThrough?
	{
		gsave
		pop 0 setCustomColor
		currentcmykcolor
		grestore
		anyColor?
	} bd
	/forceCMYK
	{
		exch pop
		1 exch sub 5 1 roll
		4
		{
			4 index mul 4 1 roll
		} repeat
		0
		cCMYKData dup /cData ne
		{
			dup /yeData eq
			{
				pop 1 add
			}
			{
				/mgData eq
				{
					2
				}
				{
					3
				} ifelse
				add
			} ifelse
			0
		} if
		pop
		index
		0 eq
		{
			pop pop pop pop 0 0 0 0
		} if
		setcmykcolor
		pop
		/fCMYK? true store
	} bd
	/endCapSepBc
	{
		pop pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				colorType 1 eq
				{
					forceCMYK
				}
				{
					fCMYK?
					{
						forceCMYK
					}
					{
						setCustomColor
					} ifelse
				} ifelse
			} ifelse
		} ifelse
		currentcmykcolor anyColor? 
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
		
	} bd
} if
/cCMYKData 0 def
composite? dup not
{
	pop customColor?
} if
not
{
	/cCMYKData
	/cyData /mgData /yeData /cData
	black? not
	{
		yellow?
		{
			exch
		}
		{
			magenta?
			{
				3
			}
			{
				4
			} ifelse
			-1 roll
		} ifelse
	} if
	4 1 roll pop pop pop
	store
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			
			blend? currentcmykcolor anyColor? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cCMYKData load dup type /stringtype eq
			{
				dup length /cDataLen xs
				/cData xs
				gsave
				colorType 0 ne noImg not and
				{
					invertXfer
				} if
				linImg
				grestore
			}
			{
				pop bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/cmykGetRData
	{
		/fCMYK? false store
		blend?
		{
			{
				cmykDataProcs colorType get exec
			} stopped
			pop
			blend?
			{
				/cData cCMYKData load store
				setCDataLen
			} if
		} if
	} def
	/cmykDataProcs
	[
	{
		pop
		black? dup /blend? xs
		{
			setgray
			0
		} if
		pop
	}
	{
		cCMYKData load dup type /stringtype ne
		{
			0 0 0
			cyan? not
			{
				4 magenta?
				{
					1
				}
				{
					yellow?
					{
						2
					}
					{
						3
					} ifelse
				} ifelse
				roll
			} if
			4 copy add add add 0 eq
			{
				/blend? false store
			} if
			
			setcmykcolor
			/startC? true store
			/endC? true store
			eCStop
			stop
		} if
		pop
		dup 0 eq
		{
			pop
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				forceCMYK
			} ifelse
		} ifelse
	} bind
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			black?
			{
				setgray
			}
			{
				0 0 0 4 -1 roll 1 exch sub setcmykcolor
			} ifelse
			black?
			{
				/blend? true store
			} if
			6
			{
				8 index
			} repeat
			ccThrough?
			{
				/blend? true store
			}
			{
				black?
				{
					/cData tint1Data store
					setCDataLen
				}
				{
					/blend? false store
				} ifelse
			} ifelse
		}
		{
			mark 7 1 roll
			6 copy ccThrough?
			{
				forceCMYK
				pop
				stop
			} if
			9 index 0 eq
			{
				black? dup /blend? xs
				{
					pop 1 setgray
					/cData tint2Data store
					setCDataLen
					0
				} if
				pop
			}
			{
				/blend?
				6
				{
					16 index
				} repeat
				ccThrough?
				store
				blend?
				{
					forceCMYK
				} if
			} ifelse
			cleartomark
		} ifelse
	} bind
	] def
	/cmykGetRData
} if
composite? dup not
{
	pop isCMYKSep?
} if
not
{
	/endCapSepBc
	{
		/white? false store
		pop pop
		dup 0 eq
		{
			pop
			/white? 1 index 1 eq store
			setgray
		}
		{
			1 eq
			{
				setcmykcolor
			}
			{
				setCustomColor
			} ifelse
		} ifelse
%
		currentcmykcolor anyColor?
		endC? or
		blend? and
		{
			bFill
		}
		{
			handleOP
		} ifelse
	} bd
	/Bc
	{
		gsave
		setBSpace
		nColors 1 gt
		{
			blend? startC? and
			{
				bFill
			}
			{
				handleOP
			} ifelse
		}
		{
			endCapSepBc
		} ifelse
		grestore
		newpath
	} bd
	/linealBm
	{
		/nColors dup load 1 sub store
		newpath
		gsave
		setBSpace
		blend?
		{
			cData type /stringtype eq
			{
				linImg
			}
			{
				bFill
			} ifelse
		}
		{
			handleOP
		} ifelse
		grestore
		nColors 1 gt
		{
			getRData
		} if
	} bd
	/discardCMY
	{
		counttomark 4 add -3 roll pop pop pop
	} bd
	/testTopCC
	{
		6 copy ccThrough?
	} bd
	/getCRamp
	{
		{
			ccDataProcs colorType 2 sub get exec
		} stopped pop
		blend? cDataLen 0 eq and
		{
			/cDataLen bDataLen store
		} if
	} bd
	/ccGetRData
	{
		/fCMYK? false store
		/startC? false store
		/endC? false store
		colorType 2 lt
		{
			/blend? false def
		} if
		blend?
		{
			getCRamp
		}
		{
			setCStop
		} ifelse
		blend?
		{
			/blend? cData 1 ne store
			blend?
			{
				cData dup type /stringtype ne
				{
					1 exch sub /cData xs 0
				} if
				pop
			} if
		} if
	} def
	/ccDataProcs
	[
	/eCCBlend load
	{
		cBType 1 eq
		{
			tint1Data tint2Data
			/tint1Data xs
			/tint2Data xs
		} if
		0 eq
		{
			/blend? false store
			pop
		}
		{
			mark 7 1 roll
			testTopCC
			{
				/blend? 1 index 1 ne store
				/startC? blend? store
				/endC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint1Data store
				setCDataLen
				setCustomColor
				pop
				stop
			} if
			cleartomark
		} ifelse
		2 index 0 eq
		{
			/blend? false store
		}
		{
			mark 6
			{
				9 index
			} repeat
			testTopCC dup /blend? xs
			{
				/blend? 1 index 1 ne store
				/endC? blend? store
				/startC? false store
				blend? not
				{
					cleartomark stop
				} if
				/cData tint2Data store
				setCDataLen
			} if
			cleartomark
		} ifelse
	} bind
	] def
	/ccGetRData
} if
load Adobe_blend_AI5_vars /getData 3 -1 roll put
/setCDataLen
{
	/cDataLen 0 cData dup type /stringtype eq
	{
		length exch
	} if
	pop store
} bd
/initSpotData
{
 begin
		/name null def
		/tintImage null def
		/tintValue null def
		/spot_C  null def
		/spot_M  null def
		/spot_Y  null def
		/spot_K  null def
 end
} bd
/getRData
{
	/colorType gMark store
	_compositeSpotDevice 0 ne
	{
		spotDict begin
			spot1 initSpotData
			spot2 initSpotData
	 end
		/spotColor? colorType 2 eq colorType 3 eq or def
	} 
	{
		/spotColor? false store
	} ifelse
	/blend? true store
	0 0 0 0 setcmykcolor
	100 div /rampPoint xs
% (between 13 and 87%) 
	100 div /midPoint xs
	dup 0 eq
	{
		2
	}
	{
		dup 1 eq
		{
			5
		}
		{
			_compositeSpotDevice 0 ne
			{
				spotDict begin
					spot1 begin
						/name 3 index def
						/spot_K 4 index def
						/spot_Y 5 index def
						/spot_M 6 index def
						/spot_C 7 index def
				 end
			 end
			} if
			7
		} ifelse
	} ifelse
	/tmp exch def
	tmp index 100 div /endPoint xs
	_compositeSpotDevice 0 ne
	{
		tmp 2 add index 3 eq
		{
			/tmp tmp 4 add def
			tmp index dup 
			spotDict begin
				spot1/name get ne
				{
					spot2 begin
						/name exch def
						/spot_K tmp 2 add index def
						/spot_Y tmp 3 add index def
						/spot_M tmp 4 add index def
						/spot_C tmp 5 add index def
				 end
				}
				{
					pop
				} ifelse
		 end
		} if
	} if
	/color? colorType 0 gt store
	
	colorType 3 eq
	{
		/tint2Data gMark store
	} if
	
	colorType 2 ge
	{
		/tint1Data gMark store
	} if
	_compositeSpotDevice 0 ne
	{
		spotDict begin
		
			colorType 2 ge
			{
				colorType 3 eq
				{
					spot2 begin
						/tintImage cBType 0 eq {tint2Data} {tint1Data} ifelse def
						name null eq {/name /Black def} if
				 end
				} if
				spot1 begin
					/tintImage cBType 0 eq colorType 2 eq or {tint1Data} {tint2Data} ifelse def
					colorType 2 eq 
					{
						name null eq 
						{
							/name spot2/name get def
							spot2/name null put
						} if
					}
					{
						name null eq {/name /Black def} if
					} ifelse
			 end
			} if
	 end
	} if
	
	/cData gMark store
	setCDataLen
	colorType 0 gt
	{
		counttomark 4 add -3 roll
		/yeData xs
		/mgData xs
		/cyData xs
	} if
	blend?
	{
		/bDataLen
		cDataLen dup 0 eq color? and
		{
			[
			cyData mgData yeData
			]
			{
				dup type /stringtype eq
				{
					length exch pop exit
				} if
				pop
			} forall
		} if
		store
		bDataLen 0 eq
		{
			/bDataLen 1 store
		} if
		getData
		blend?
		{
			composite? cDataLen 0 eq and
			{
				/cDataLen bDataLen store
			} if
		} if
	}
	{
		setCStop
	} ifelse
} bd
/Bg
{
	0 0 0 0 setcmykcolor
	6
	{
		pop
	} repeat
	/blendLength xs
	pop pop pop
	/cBName xs
	/bRender xs
	bRender 2 ne
	{
		composite? not
		{
			_of setoverprint
		} if
		_eo {eoclip} {clip} ifelse
		_bn cBName 2 copy known
		{
			get
			mark exch aload pop
			/cBType xs
			/nColors xs
			mark exch aload pop
			0 0
		} if
		pop pop
		getRData
		cBType 0 eq
		{
			/linealBm
		}
		{
			bHi?
			{
				/pTState? nColors 2 gt store
			} if
			/doBlend /rdBlend load store
			/rdBm
		} ifelse
	}
	{
		inLine? not
		{
			mark mark
		} if
		/Bc dup
		{
			cleartomark mark
		} bd
		/nullProc
	} ifelse
	load /Bm xs
} bd
/linImg
noImg
{
	{
		newpath doRctBlend
	}
}
{
	{
		/doBlend
		color? composite? and
		{
			/bCImg
		}
		{
			/bwImage
		} ifelse
		load
		store
	
		0 0 moveto
		tRectOK? composite? and
		{
			{
				mark
				0 1 dtransform atan cvi 90 mod 0 eq
				1 0 dtransform atan cvi 90 mod 0 eq
			} stopped
			{
				cleartomark
			}
			{
				and exch pop
				{
					newpath
					doRctBlend
				}
				{
					doBlend
				} ifelse
			} ifelse
		}
		{
			doBlend
		} ifelse
	} 
} ifelse
bd
/doRctBlend
{
	gsave
	/sInc 1 store
	/nSamples bDataLen store
	/bInc 1 bDataLen div store
	/ubAxis 1 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt store
	/pChange ubAxis 0 eq
	{
		0
	}
	{
		bDataLen ubAxis div
	} ifelse
	store
	pChange .5 gt noImg not and dup /optimize? xs
	{
		/nSamples ubAxis 2 div round cvi dup 1 le
		{
			pop 2
		} if
		store
		/bInc 1 nSamples div store
		/sInc bDataLen 1 sub nSamples 1 sub div store
	} if
	0
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	/rectfill where dup
	{
		exch pop _compositeSpotDevice 1 ne and
	} if
	{
		0 0 bInc 1 /rectfill cvx	
	}
	{
		0 0 /moveto cvx
		bInc 0 /lineto cvx
		bInc 1 /lineto cvx
		0 1 /lineto cvx
		/closepath cvx
		/_fill_ cvx
	} ifelse
	bInc 0 /translate cvx
	sInc /add cvx
	] cvx
	bind
	repeat
	pop
	spotColor? {nsetcustomcolorend} if
	
	grestore
} bd
/rdPrep
{
	/nSamples bDataLen dup 0 eq
	{
		pop 1
	} if
	store
	/sInc -1 store
	/bAxis rampPoint endPoint sub store
	/bInc bAxis bDataLen div neg store
	/optimize? false store
	tRectOK?
	{
		/ubAxis
		bAxis 0 dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		0 bAxis dtransform dUserSpace idtransform dup mul exch dup mul add sqrt
		2 copy lt
		{
			exch
		} if
		pop store
		/pChange ubAxis 0 eq
		{
			0
		}
		{
			bDataLen ubAxis div
		} ifelse
		store
		pChange .5 gt noImg not and dup /optimize? xs
		{
			/nSamples ubAxis 2 div round cvi dup 1 le
			{
				pop 2
			} if
			store
			/bInc bAxis nSamples div neg store
			/sInc bDataLen 1 sub nSamples 1 sub div neg store
		} if
	} if
	bHi?
	{
		/xBCInc xHi bAxis mul nSamples div store
		/yBCInc yHi bAxis mul nSamples div store
	} if
} bd
/rdBlend
{
	newpath
	gsave
	rdPrep
	rampPoint
	bDataLen 1 sub
	nSamples
	[
	/dup cvx
	optimize?
	{
		/round cvx /cvi cvx
	} if
	/ndx /exch cvx /store cvx
	bCFun
	0 0 3 /index cvx 0 360 /arc cvx /_fill_ cvx
	/exch cvx bInc /add cvx /exch cvx
	sInc /add cvx
	bHi?
	{
		xBCInc yBCInc /translate cvx
	} if
	] cvx
	bind
	repeat
	pop pop
	spotColor? {nsetcustomcolorend} if
	grestore
	pTState?
	{
		xHi bAxis mul yHi bAxis mul translate
	} if
} bd
/Bh
{
	pop pop
	/pTState? false store
	2 copy 0 ne exch 0 ne or dup /bHi? xs
	{
		/yHi xs
		/xHi xs
		0 0
	} if
	pop pop
} bd
/BD
{
	inLine? not
	{
		] nColors cBType
		] _bn cBName 3 -1 roll put
 end
} if
} bd
/Bn
{
1 add dict
dup nullString null put
/_bn xs
} bd
/Bd
{
Adobe_blend_AI5_vars begin
	3 -1 roll dup nullString eq dup
	{
		setSSave
	} if
	/inLine? exch def
	/cBName exch def
	/nColors exch def
	/cBType exch def
} bd
/Bb
{
	sSave null eq
	{
		Adobe_blend_AI5_vars begin
		setSSave
	} if
	composite?
	{
		/_fill /fill load store
	}
	{
		/__fill /fill load store
			/_fill
			{
				_of true eq
				{
					currentgray 1 ne
					{
						__fill
					} if
				}
				{
					__fill
				} ifelse
			} def
	} ifelse
	/fill
	{
	} def
	} bd
	/BB
	{
	/cBType xs
	cleartomark cleartomark
	cBType dup
	bRender
	sSave dup type /savetype eq
	{
		restore 0
	} if
	pop
	currentdict Adobe_blend_AI5_vars eq
	{
	 end
	} if
	2 ne exch 0 gt and
	{
		2 eq
		{
			s
		}
		{
			S
		} ifelse
	}
	{
		pop newpath
	} ifelse
} bd
currentdict readonly pop
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.2 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 50 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 40 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/channelcount 0 def
	/sourcecount 0 def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIDataProc null def
	/XIVersion 6 def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
end
currentdict /_colorimage known not {
	/colorimage where {
		/colorimage get /_colorimage exch def
	}{
		/_colorimage null def
	} ifelse
} if
/_image systemdict /image get def
/_currenttransfer systemdict /currenttransfer get def
/FourEqual {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/TestPlateIndex {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 FourEqual { 
				/plateindex 0 def
			}{
				0 1 0 0 FourEqual { 
					/plateindex 1 def
				}{
					0 0 1 0 FourEqual {
						/plateindex 2 def
					}{
						0 0 0 1 FourEqual { 
							/plateindex 3 def
						}{
							0 0 0 0 FourEqual {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/clrspaceissepn {
	type /arraytype eq 
} def
/clrspacegetname {
	dup clrspaceissepn {dup length 2 sub get}{pop ()} ifelse
} def
/clrspacegetalt {
	aload pop pop pop colormake
} def
/clrspacegetcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/clrspacemarksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				/findcmykcustomcolor where {
					pop
					dup length 2 sub get
					0.1 0.1 0.1 0.1 5 -1 roll
					findcmykcustomcolor 1 setcustomcolor
					systemdict /currentgray get exec
					1 ne
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/colormake {
	dup clrspacegetcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/colorexpand {
	dup clrspacegetname exch
	dup clrspaceissepn {
		clrspacegetalt
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				clrspacegetalt colortint colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/WalkRGBString {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/WalkCMYKString
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/StuffRGBIntoGrayString
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/StuffCMYKIntoGrayString
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/RGBToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		dup length 3 idiv string
		dup 3 1 roll 
		
		/StuffRGBIntoGrayString load exch
		WalkRGBString
 end
} def
/CMYKToGrayImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		dup length 4 idiv string
		dup 3 1 roll 
		
		/StuffCMYKIntoGrayString load exch
		WalkCMYKString
 end
} def
/SeparateCMYKImageProc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcecount 0 ne {
			sourcearray plateindex get exec
		}{			
			sourcearray 0 get exec
			
			dup length 4 idiv string
			
			0 2 index
			
			plateindex 4 2 index length 1 sub {
				get 255 exch sub
				
				3 copy put pop 1 add
				
				2 index
			} for
			pop pop exch pop
		} ifelse
 end
} def
	
/ColorImageCompositeEmulator {
	pop true eq {
		Adobe_ColorImage_AI6_Vars /sourcecount get 5 add { pop } repeat
	}{
		Adobe_ColorImage_AI6_Vars /channelcount get 1 ne {
			Adobe_ColorImage_AI6_Vars begin
				sourcearray 0 3 -1 roll put
			
				channelcount 3 eq {/RGBToGrayImageProc}{/CMYKToGrayImageProc} ifelse
				load
		 end
		} if
		image
	} ifelse
} def
/colorimage {
	Adobe_ColorImage_AI6_Vars begin
		/channelcount 1 index def
		/sourcecount 2 index 1 eq { channelcount 1 sub } { 0 } ifelse def
		4 sourcecount add index
 end
	
	dup 8 eq exch 1 eq or not {
		/_colorimage load null ne {
			_colorimage
		}{
			Adobe_ColorImage_AI6_Vars /sourcecount get
			7 add { pop } repeat
		} ifelse
	}{
		dup 3 eq TestPlateIndex dup -1 eq exch 5 eq or or {
			/_colorimage load null eq {
				ColorImageCompositeEmulator
			}{
				dup 1 eq {
					pop pop image
				}{
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						gsave
						
						0 _currenttransfer exec
						1 _currenttransfer exec
						eq
						{ 0 _currenttransfer exec 0.5 lt }
						{ 0 _currenttransfer exec 1 _currenttransfer exec gt } ifelse
						
						{ { pop 0 } } { { pop 1 } } ifelse
						systemdict /settransfer get exec
					} if
					
					_colorimage
					
					Adobe_ColorImage_AI6_Vars /plateindex get 5 eq {
						grestore
					} if
				} ifelse
			} ifelse
		}{
			dup 1 eq {
				pop pop
				image
			}{
				pop pop
				Adobe_ColorImage_AI6_Vars begin
					sourcecount -1 0 {			
						exch sourcearray 3 1 roll put
					} for
					/SeparateCMYKImageProc load
			 end
				systemdict /image get exec
			} ifelse
		} ifelse
	} ifelse
} def
/proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace clrspacegetcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] makeimagedict _image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] makeimagedict _image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} stringapply
			} concatprocs _image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} stringapply
			} concatprocs false _pticomps
			/_colorimage load null eq {7 {pop} repeat}{_colorimage} ifelse
		} ifelse
	} ifelse
} def
/graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray proctintimage
} def
/cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK proctintimage
} def
/rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB proctintimage
} def
/tintimage {
	TestPlateIndex -1 eq {
		colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop graytintimage
		}{
			dup /DeviceRGB eq {
				pop rgbtintimage
			}{
				pop cmyktintimage
			} ifelse
		} ifelse
	}{
		dup clrspacemarksplate {
			plateindex 5 lt {
				colortocmyk plateindex get 1 exch sub
				exch {1 0}{0 1} ifelse () graytintimage
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () graytintimage
			} ifelse
		}{
			pop pop pop
			{pop 1} 0 1 () /DeviceGray proctintimage
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace tintimage
} def
/XIImage {
	0 setgray
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIChannelCount 1 eq {image}{false XIChannelCount colorimage} ifelse
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		XIType 1 eq {
			/_lp /null ddef
			_fc
			/_lp /imagemask ddef
		}
		if
		/XIVersion 7 def
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		/XIVersion 6 def
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEncoding 0 ne XIVersion 6 le and {
			currentfile 128 string readline pop pop
		} if
		XICompression 0 eq {
			/XIBuffer1 XIRowBytes string def
			XIEncoding 0 eq {
				{currentfile XIBuffer1 readhexstring pop}
			}{
				{currentfile XIBuffer1 readstring pop}
			} ifelse
		}{
			/XIBuffer1 256 string def
			/XIBuffer2 XIRowBytes string def
			{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
			/ASCIIHexDecode filter /DCTDecode filter
			/XIFile exch def
			{XIFile XIBuffer2 readstring pop}
		} ifelse
		/XIDataProc exch def
		
		XIVersion 6 le {
			0 0 moveto
			XIImageMatrix concat
			XIImageWidth XIImageHeight scale
			XIType 1 eq {
				/_lp /null ddef
				_fc
				/_lp /imagemask ddef
			} if
		} if
		XIEnable {
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Full Prolog)
%%Version: 1.1 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 81 dict dup begin
put
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_rise 0 def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fScl 0 def
/_cnt 0 def
/_hs 1 def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_wv 0 def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 91 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/sw
{
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
} def
/swj
{
	dup 4 1 roll
	dup length exch stringwidth
	exch 5 -1 roll 3 index mul add
	4 1 roll 3 1 roll mul add
	6 2 roll /_cnt 0 ddef
	{
		1 index eq
		{
			/_cnt _cnt 1 add ddef
		} if
	} forall
	pop
	exch _cnt mul exch _cnt mul 2 index add 4 1 roll 2 index add 4 1 roll pop pop
} def
/ss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put pop
		gsave
		false charpath currentpoint
		4 index setmatrix
		stroke
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	3 npop
} def
/jss
{
	4 1 roll
	{
		2 npop
		(0) exch 2 copy 0 exch put
		gsave
		_sp eq
		{
			exch 6 index 6 index 6 index 5 -1 roll widthshow
			currentpoint
		}
		{
			false charpath currentpoint
			4 index setmatrix stroke
		} ifelse
		grestore
		moveto
		2 copy rmoveto
	} exch cshow
	6 npop
} def
/sp
{
	{
		2 npop (0) exch
		2 copy 0 exch put pop
		false charpath
		2 copy rmoveto
	} exch cshow
	2 npop
} def
/jsp
{
	{
		2 npop
		(0) exch 2 copy 0 exch put
		_sp eq
		{
			exch 5 index 5 index 5 index 5 -1 roll widthshow
		}
		{
			false charpath
		} ifelse
		2 copy rmoveto
	} exch cshow
	5 npop
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		ashow
	} ddef
	/_pjsf
	{
		_fc
		awidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		endString eq
		{
			cleartomark stop
		} if
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer readline not
		{
		stop
		} if
		dup beginString eq
		{
			pop /layerCnt dup load 1 add store
		}
		{
			endString eq
			{
				layerCnt 1 eq
				{
					cleartomark stop
				}
				{
					/layerCnt dup load 1 sub store
				} ifelse
			} if
		} ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	4 npop
	6 1 roll
	pop
	4 1 roll
	pop pop pop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 3 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
end
setpacking
%%EndResource
%%EndProlog
%%BeginSetup
%%IncludeFont: Helvetica
Adobe_level2_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_typography_AI5 /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_blend_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
[
39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
TE
%AI3_BeginEncoding: _Helvetica Helvetica
[/_Helvetica/Helvetica 0 0 0 TZ
%AI3_EndEncoding TrueType
[161/degree 173/notequal 176/infinity/plusminus/lessequal/greaterequal
181/mu/partialdiff/summation/product/pi/integral 189/Omega 
195/radical 197/approxequal 198/Delta 214/divide/lozenge 240/apple
/_Symbol_/Symbol 0 0 0 TZ
1 Bn
%AI5_BeginGradient: (Black & White)
(Black & White) 1 2 Bd
[
0
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1E1F20212223242526
2728292A2B2C2D2E2F30313233333435363738393A3B3C3D3E3F40414142434445464748494A4B4C
4C4D4E4F50515253545555565758595A5B5C5D5D5E5F60616263646565666768696A6B6B6C6D6E6F
7071717273747576777778797A7B7C7C7D7E7F808181828384858586878889898A8B8C8D8E8E8F90
9191929394959596979899999A9B9C9C9D9E9F9FA0A1A2A2A3A4A5A5A6A7A8A8A9AAABABACADADAE
AFB0B0B1B2B2B3B4B5B5B6B7B7B8B9B9BABBBBBCBDBDBEBFBFC0C1C1C2C3C3C4C5C5C6C6C7C8C8C9
CACACBCBCCCDCDCECECFD0D0D1D1D2D2D3D4D4D5D5D6D6D7D7D8D8D9DADADBDBDCDCDDDDDEDEDEDF
DFE0E0E1E1E2E2E2E3E3E4E4E4E5E5E5E6E6E6E7E7E7E8E8E8E8
>
1 %_Br
[
1 0 41 0 %_Bs
0.09 0 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
7 Bn
%AI5_BeginGradient: (Green & Blue)
(Green & Blue) 0 2 Bd
[
<
99999A9A9B9B9B9C9C9D9D9D9E9E9F9F9FA0A0A1A1A1A2A2A3A3A3A4A4A5A5A5A6A6A7A7A7A8A8A9
A9A9AAAAABABABACACADADADAEAEAFAFAFB0B0B1B1B1B2B2B3B3B3B4B4B5B5B5B6B6B7B7B7B8B8B9
B9B9BABABBBBBBBCBCBDBDBDBEBEBFBFBFC0C0C1C1C1C2C2C3C3C3C4C4C5C5C5C6C6C7C7C7C8C8C9
C9C9CACACBCBCBCCCCCDCDCDCECECFCFCFD0D0D1D1D1D2D2D3D3D3D4D4D5D5D5D6D6D7D7D7D8D8D9
D9D9DADADBDBDBDCDCDDDDDDDEDEDFDFDFE0E0E1E1E1E2E2E3E3E3E4E4E5E5E5E6E6E7E7E7E8E8E9
E9E9EAEAEBEBEBECECEDEDEDEEEEEFEFEFF0F0F1F1F1F2F2F3F3F3F4F4F5F5F5F6F6F7F7F7F8F8F9
F9F9FAFAFBFBFBFCFCFDFDFDFEFEFFFF
>
<
000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D
1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353536373838393A3B3B
3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F5050515253535455565657585959
5A5B5C5C5D5E5F5F606162626364656566676868696A6B6B6C6D6E6E6F7071717273747475767777
78797A7A7B7C7D7D7E7F80808182838384858686878889898A8B8C8C8D8E8F8F9091929293949595
96979898999A9B9B9C9D9E9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADADAEAFB0B0B1B2B3B3
B4B5B6B6B7B8B9B9BABBBCBCBDBEBFBF
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
[
1 0.75 0 0 1 50 100 %_Bs
0.6 0 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Pink, Yellow, Green)
(Pink, Yellow, Green) 0 3 Bd
[
<
00000000000000000000000000000000000000010101010101010101010101010101010101010101
01010101010202020202020202020202020202020202020202020203030303030303030303030303
03030303030303030404040404040404040404040404040404040404050505050505050505050505
05050505050505060606060606060606060606060606060606060707070707070707070707070707
07070707080808080808080808080808080808080809090909090909090909090909090909090A0A
0A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C
0C0C0C0C0C0C0C0C0D0D0D0D
>
<
050506060606070708080809090A0A0A0B0B0C0C0D0D0E0E0F0F1010111112121313141415151617
17181819191A1A1B1C1C1D1D1E1F1F202021222223232425252626272828292A2A2B2C2C2D2D2E2F
2F3031313233333435353637373839393A3B3B3C3D3E3E3F4040414242434445454647474849494A
4B4C4C4D4E4F4F505151525354545556575758595A5A5B5C5C5D5E5F5F6061626363646566666768
69696A6B6C6C6D6E6F707071727373747576777778797A7B7B7C7D7E7F7F80818283838485868787
88898A8B8B8C8D8E8F8F9091929394949596979898999A9B9C9D9D9E9FA0A1A2A2A3A4A5A6A7A7A8
A9AAABACADADAEAFB0B1B2B3
>
<
CCCCCBCBCBCACACAC9C9C8C8C7C7C6C6C5C5C4C4C3C2C2C1C1C0C0BFBEBEBDBDBCBBBBBAB9B9B8B7
B7B6B5B5B4B3B3B2B1B1B0AFAFAEADADACABAAAAA9A8A8A7A6A5A5A4A3A2A2A1A0A09F9E9D9C9C9B
9A999998979696959493929291908F8E8E8D8C8B8A8A8988878686858483828181807F7E7D7C7C7B
7A7978777676757473727171706F6E6D6C6B6A6A69686766656463636261605F5E5D5C5B5B5A5958
5756555453525151504F4E4D4C4B4A49484746464544434241403F3E3D3C3B3A3938383736353433
3231302F2E2D2C2B2A29282726252423222221201F1E1D1C1B1A191817161514131211100F0E0D0C
0B0A09080706050403020100
>
0
1 %_Br
<
737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A59585756555453525150504F4E
4D4C4B4A4949484746454443434241403F3E3E3D3C3B3A3A393837363635343333323130302F2E2D
2D2C2B2A2A29282827262525242323222121201F1F1E1D1D1C1C1B1A1A1918181717161615141413
1312121111100F0F0E0E0D0D0C0C0C0B0B0A0A090908080807070606060505050404040303030202
020201010101010000000000
>
<
00000000000000000000000001010101010101010101010101010101010101010101010102020202
02020202020202020202020202020202020202020202030303030303030303030303030303030303
03030303030303030303030303040404040404040404040404040404040404040404040404040404
04040404040404040404050505050505050505050505050505050505050505050505050505050505
050505050505050505050505
>
<
BFBFBFC0C0C0C0C0C0C0C0C0C1C1C1C1C1C1C1C1C1C2C2C2C2C2C2C2C2C2C2C3C3C3C3C3C3C3C3C3
C3C4C4C4C4C4C4C4C4C4C4C5C5C5C5C5C5C5C5C5C5C5C6C6C6C6C6C6C6C6C6C6C6C6C7C7C7C7C7C7
C7C7C7C7C7C7C8C8C8C8C8C8C8C8C8C8C8C8C8C9C9C9C9C9C9C9C9C9C9C9C9C9C9C9CACACACACACA
CACACACACACACACACACACBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCBCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCCCCCC
>
0
1 %_Br
[
0.05 0.7 0 0 1 50 100 %_Bs
0 0.02 0.8 0 1 57 36 %_Bs
0.45 0 0.75 0 1 37 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Purple, Red & Yellow)
(Purple, Red & Yellow) 0 3 Bd
[
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A
>
<
CCCCCCCDCDCDCDCDCECECECECECFCFCFCFD0D0D0D0D0D1D1D1D1D1D2D2D2D2D2D3D3D3D3D3D4D4D4
D4D5D5D5D5D5D6D6D6D6D6D7D7D7D7D7D8D8D8D8D8D9D9D9D9DADADADADADBDBDBDBDBDCDCDCDCDC
DDDDDDDDDDDEDEDEDEDFDFDFDFDFE0E0E0E0E0E1E1E1E1E1E2E2E2E2E2E3E3E3E3E4E4E4E4E4E5E5
E5E5E5E6E6E6E6E6E7E7E7E7E7E8E8E8E8E9E9E9E9E9EAEAEAEAEAEBEBEBEBEBECECECECECEDEDED
EDEEEEEEEEEEEFEFEFEFEFF0F0F0F0F0F1F1F1F1F1F2F2F2F2F3F3F3F3F3F4F4F4F4F4F5F5F5F5F5
F6F6F6F6F6F7F7F7F7F8F8F8F8F8F9F9F9F9F9FAFAFAFAFAFBFBFBFBFBFCFCFCFCFDFDFDFDFDFEFE
FEFEFEFFFFFF
>
0
1 %_Br
<
E6E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBE
BDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A99989796
9594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E
6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A49484746
4544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E
1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100
>
<
E6E6E6E6E6E6E6E6E6E7E7E7E7E7E7E7E7E7E8E8E8E8E8E8E8E8E8E9E9E9E9E9E9E9E9E9EAEAEAEA
EAEAEAEAEAEBEBEBEBEBEBEBEBEBECECECECECECECECECEDEDEDEDEDEDEDEDEDEEEEEEEEEEEEEEEE
EEEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F3F3F3
F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7
F7F7F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFCFC
FCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFFFFFFFFFF
>
<
00010203040405060708090A0B0C0C0D0E0F10111213141415161718191A1B1C1D1D1E1F20212223
242525262728292A2B2C2D2D2E2F30313233343535363738393A3B3C3D3D3E3F4041424344454546
4748494A4B4C4D4E4E4F50515253545556565758595A5B5C5D5E5E5F60616263646566666768696A
6B6C6D6E6E6F70717273747576767778797A7B7C7D7E7E7F80818283848586878788898A8B8C8D8E
8F8F90919293949596979798999A9B9C9D9E9F9FA0A1A2A3A4A5A6A7A7A8A9AAABACADAEAFAFB0B1
B2B3B4B5B6B7B8B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C8C9CACBCC
>
0
1 %_Br
[
0 0.04 1 0 1 50 100 %_Bs
0 1 0.8 0 1 50 50 %_Bs
0.9 0.9 0 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Rainbow)
(Rainbow) 0 6 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
0
1 %_Br
1
<
0708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E
2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F50515253545556
5758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E
7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6
A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCE
CFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6
F7F8F9FAFBFCFDFEFF
>
0
0
1 %_Br
1
<
00000000000000000000000000000000000001010101010101010101010101010101010101010101
01010101010101010101010101010202020202020202020202020202020202020202020202020202
02020202020202020202030303030303030303030303030303030303030303030303030303030303
03030303030304040404040404040404040404040404040404040404040404040404040404040404
04040505050505050505050505050505050505050505050505050505050505050505050505050606
06060606060606060606060606060606060606060606060606060606060606060607070707070707
07070707070707070707070707070707
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0
1 %_Br
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
0
1
0
1 %_Br
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1
0
1 %_Br
[
0 1 0 0 1 50 100 %_Bs
1 1 0 0 1 50 80 %_Bs
1 0.0279 0 0 1 50 60 %_Bs
1 0 1 0 1 50 40 %_Bs
0 0 1 0 1 50 20 %_Bs
0 1 1 0 1 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Steel Bar)
(Steel Bar) 0 3 Bd
[
0
0
0
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
1 %_Br
0
0
0
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
1 %_Br
[
0 0 50 100 %_Bs
1 0 50 70 %_Bs
0 0 50 0 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Orange Radial)
(Yellow & Orange Radial) 1 2 Bd
[
0
<
0001010203040506060708090A0B0C0C0D0E0F10111213131415161718191A1B1C1D1D1E1F202122
232425262728292A2B2B2C2D2E2F303132333435363738393A3B3C3D3E3E3F404142434445464748
494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C
>
<
FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFCFCFCFCFCFCFBFBFBFBFBFBFAFAFAFAFAFAF9F9F9F9F9
F9F8F8F8F8F8F8F7F7F7F7F7F7F6F6F6F6F6F6F5F5F5F5F5F5F4F4F4F4F4F3F3F3F3F3F3F2F2F2F2
F2F2F1F1F1F1F1F0F0F0F0F0F0EFEFEFEFEFEFEEEEEEEEEEEDEDEDEDEDEDECECECECECEBEBEBEBEB
EBEAEAEAEAEAE9E9E9E9E9E9E8E8E8E8E8E8E7E7E7E7E7E6E6E6E6E6E6
>
0
1 %_Br
[
0 0 1 0 1 52 19 %_Bs
0 0.55 0.9 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Yellow & Purple Radial)
(Yellow & Purple Radial) 1 2 Bd
[
<
000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F2021222324252627
28292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F7071727374757677
78797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7
C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
>
<
1415161718191A1B1C1D1E1F1F202122232425262728292A2A2B2C2D2E2F30313233343536363738
393A3B3C3D3E3F40414142434445464748494A4B4C4D4D4E4F50515253545556575858595A5B5C5D
5E5F60616263646465666768696A6B6C6D6E6F6F707172737475767778797A7B7B7C7D7E7F808182
83848586868788898A8B8C8D8E8F90919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A7
A8A9A9AAABACADAEAFB0B1B2B3B4B4B5B6B7B8B9BABBBCBDBEBFC0C0C1C2C3C4C5C6C7C8C9CACBCB
CCCDCECFD0D1D2D3D4D5D6D7D7D8D9DADBDCDDDEDFE0E1E2E2E3E4E5E6E7E8E9EAEBECEDEEEEEFF0
F1F2F3F4F5F6F7F8F9F9FAFBFCFDFEFF
>
<
ABAAAAA9A8A8A7A6A5A5A4A3A3A2A1A1A09F9F9E9D9D9C9B9B9A9999989797969595949393929191
908F8F8E8D8D8C8B8B8A8989888787868585848383828181807F7F7E7D7D7C7B7B7A797978777776
7575747373727171706F6F6E6D6D6C6B6B6A6969686767666564646362626160605F5E5E5D5C5C5B
5A5A5958585756565554545352525150504F4E4E4D4C4C4B4A4A4948484746464544444342424140
403F3E3E3D3C3C3B3A3A3938383736363534343332323130302F2E2E2D2C2C2B2A2A292828272626
25242423222121201F1F1E1D1D1C1B1B1A1919181717161515141313121111100F0F0E0D0D0C0B0B
0A090908070706050504030302010100
>
0
1 %_Br
[
0 0.08 0.67 0 1 50 14 %_Bs
1 1 0 0 1 50 100 %_Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 k
Pc
1 g
Pc
0 g
Pc
0 0 0 0 k
Pc
0.75 g
Pc
0.5 g
Pc
0.25 g
Pc
0 g
Pc
Bb
0 0 0 0 Bh
2 (Black & White) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0 0 0 k
Pc
0.5 0 0 0 k
Pc
0.75 0 0 0 k
Pc
1 0 0 0 k
Pc
0.25 0.25 0 0 k
Pc
0.5 0.5 0 0 k
Pc
0.75 0.75 0 0 k
Pc
1 1 0 0 k
Pc
Bb
2 (Pink, Yellow, Green) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0 0 k
Pc
0 0.5 0 0 k
Pc
0 0.75 0 0 k
Pc
0 1 0 0 k
Pc
0 0.25 0.25 0 k
Pc
0 0.5 0.5 0 k
Pc
0 0.75 0.75 0 k
Pc
0 1 1 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Purple Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0 0.25 0 k
Pc
0 0 0.5 0 k
Pc
0 0 0.75 0 k
Pc
0 0 1 0 k
Pc
0.25 0 0.25 0 k
Pc
0.5 0 0.5 0 k
Pc
0.75 0 0.75 0 k
Pc
1 0 1 0 k
Pc
Bb
2 (Rainbow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0 0 k
Pc
0.5 0.25 0 0 k
Pc
0.75 0.375 0 0 k
Pc
1 0.5 0 0 k
Pc
0.125 0.25 0 0 k
Pc
0.25 0.5 0 0 k
Pc
0.375 0.75 0 0 k
Pc
0.5 1 0 0 k
Pc
Bb
2 (Steel Bar) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0 0.25 0.125 0 k
Pc
0 0.5 0.25 0 k
Pc
0 0.75 0.375 0 k
Pc
0 1 0.5 0 k
Pc
0 0.125 0.25 0 k
Pc
0 0.25 0.5 0 k
Pc
0 0.375 0.75 0 k
Pc
0 0.5 1 0 k
Pc
Bb
2 (Purple, Red & Yellow) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0 0.25 0 k
Pc
0.25 0 0.5 0 k
Pc
0.375 0 0.75 0 k
Pc
0.5 0 1 0 k
Pc
0.25 0 0.125 0 k
Pc
0.5 0 0.25 0 k
Pc
0.75 0 0.375 0 k
Pc
1 0 0.5 0 k
Pc
Bb
2 (Green & Blue) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.25 0.125 0.125 0 k
Pc
0.5 0.25 0.25 0 k
Pc
0.75 0.375 0.375 0 k
Pc
1 0.5 0.5 0 k
Pc
0.25 0.25 0.125 0 k
Pc
0.5 0.5 0.25 0 k
Pc
0.75 0.75 0.375 0 k
Pc
1 1 0.5 0 k
Pc
Bb
0 0 0 0 Bh
2 (Yellow & Orange Radial) -4014 4716 0 0 1 0 0 1 0 0 Bg
0 BB
Pc
0.125 0.25 0.125 0 k
Pc
0.25 0.5 0.25 0 k
Pc
0.375 0.75 0.375 0 k
Pc
0.5 1 0.5 0 k
Pc
0.125 0.25 0.25 0 k
Pc
0.25 0.5 0.5 0 k
Pc
0.375 0.75 0.75 0 k
Pc
0.5 1 1 0 k
Pc
0 0 0 0 k
Pc
0.125 0.125 0.25 0 k
Pc
0.25 0.25 0.5 0 k
Pc
0.375 0.375 0.75 0 k
Pc
0.5 0.5 1 0 k
Pc
0.25 0.125 0.25 0 k
Pc
0.5 0.25 0.5 0 k
Pc
0.75 0.375 0.75 0 k
Pc
1 0.5 1 0 k
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 255 79 79 Lb
(tegn) Ln
0 A
u
1 Ap
0 O
0 R
0 G
800 Ar
0 J 0 j 0.1 w 4 M []0 d
%AI3_Note:
0 D
0 XR
110.6665 365.6445 m
119.2583 365.6445 126.2231 372.6094 126.2231 381.2012 c
126.2231 389.7925 119.2583 396.7573 110.6665 396.7573 c
102.0752 396.7573 95.1104 389.7925 95.1104 381.2012 c
95.1104 372.6094 102.0752 365.6445 110.6665 365.6445 c
Bb
0 0 0 0 Bh
1 (Black & White) 187 410.3335 0 15.6063 1 0 0 1 -76.3333 29.1323 Bg
15.6063 0 0 -15.6063 110.6665 381.2012 Bm
b
2 BB
238 365.6445 m
246.5913 365.6445 253.5562 372.6099 253.5562 381.2012 c
253.5562 389.7925 246.5913 396.7573 238 396.7573 c
229.4087 396.7573 222.4434 389.7925 222.4434 381.2012 c
222.4434 372.6099 229.4087 365.6445 238 365.6445 c
Bb
0 0 0 0 Bh
1 (Black & White) 187 410.3335 0 15.6063 1 0 0 1 51 29.1322 Bg
15.6063 0 0 -15.6063 238 381.2012 Bm
b
2 BB
364.6665 365.6445 m
373.2583 365.6445 380.2231 372.6094 380.2231 381.2012 c
380.2231 389.7925 373.2583 396.7573 364.6665 396.7573 c
356.0752 396.7573 349.1104 389.7925 349.1104 381.2012 c
349.1104 372.6094 356.0752 365.6445 364.6665 365.6445 c
Bb
0 0 0 0 Bh
1 (Black & White) 187 410.3335 0 15.6063 1 0 0 1 177.6667 29.1323 Bg
15.6063 0 0 -15.6063 364.6665 381.2012 Bm
b
2 BB
493.3335 365.6445 m
501.9248 365.6445 508.8896 372.6094 508.8896 381.2012 c
508.8896 389.7925 501.9248 396.7573 493.3335 396.7573 c
484.7417 396.7573 477.7769 389.7925 477.7769 381.2012 c
477.7769 372.6094 484.7417 365.6445 493.3335 365.6445 c
Bb
0 0 0 0 Bh
1 (Black & White) 187 410.3335 0 15.6063 1 0 0 1 306.3333 29.1323 Bg
15.6063 0 0 -15.6063 493.3335 381.2012 Bm
b
2 BB
u
u
u
0 Ap
1.5 w
131 402.979 m
169.6665 424.312 215 406.312 v
S
212.0991 404.377 m
223.2471 403.0757 l
214.2432 409.7764 l
212.0991 404.377 l
s
U
0 O
0 g
214.0518 406.6885 m
213.3457 410.8452 l
213.4902 410.876 l
218.0894 406.5391 l
219.8257 405.3652 221.562 404.1914 223.2983 403.0171 c
221.2295 403.354 219.1606 403.6909 217.0923 404.0278 c
210.7705 404.0273 l
210.6792 404.1294 l
214.0518 406.6885 l
b
U
214.9063 406.3462 m
214.8354 406.7617 l
214.8501 406.7646 l
215.3101 406.3311 l
215.4834 406.2139 215.6572 406.0962 215.8306 405.979 c
215.624 406.0127 215.417 406.0464 215.21 406.0801 c
214.5781 406.0801 l
214.5688 406.0903 l
214.9063 406.3462 l
s
U
u
u
u
255 402.979 m
293.6665 424.312 339 406.312 v
S
336.0991 404.377 m
347.2471 403.0757 l
338.2432 409.7764 l
336.0991 404.377 l
s
U
0 O
0 g
338.0518 406.6885 m
337.3457 410.8452 l
337.4902 410.876 l
342.0894 406.5391 l
343.8257 405.3652 345.562 404.1914 347.2983 403.0171 c
345.2295 403.354 343.1606 403.6909 341.0923 404.0278 c
334.7705 404.0273 l
334.6792 404.1294 l
338.0518 406.6885 l
b
U
338.9063 406.3462 m
338.8354 406.7617 l
338.8501 406.7646 l
339.3101 406.3311 l
339.4834 406.2139 339.6572 406.0962 339.8311 405.979 c
339.624 406.0127 339.417 406.0464 339.21 406.0801 c
338.5781 406.0801 l
338.5688 406.0903 l
338.9063 406.3462 l
s
U
u
u
u
382.3335 402.979 m
421 424.312 466.3335 406.312 v
S
463.4326 404.377 m
474.5801 403.0757 l
465.5767 409.7764 l
463.4326 404.377 l
s
U
0 O
0 g
465.3853 406.6885 m
464.6792 410.8452 l
464.8232 410.876 l
469.4229 406.5391 l
471.1587 405.3652 472.895 404.1914 474.6313 403.0171 c
472.563 403.354 470.4941 403.6909 468.4253 404.0278 c
462.104 404.0273 l
462.0127 404.1294 l
465.3853 406.6885 l
b
U
466.2397 406.3462 m
466.1689 406.7617 l
466.1836 406.7646 l
466.6436 406.3311 l
466.8169 406.2139 466.9907 406.0962 467.1641 405.979 c
466.9575 406.0127 466.7505 406.0464 466.5435 406.0801 c
465.9116 406.0801 l
465.9023 406.0903 l
466.2397 406.3462 l
s
U
u
u
u
223 359.6455 m
184.3335 338.312 139 356.312 v
S
141.9009 358.2476 m
130.7529 359.5488 l
139.7568 352.8481 l
141.9009 358.2476 l
s
U
0 O
0 g
139.9482 355.9355 m
140.6543 351.7788 l
140.5098 351.748 l
135.9106 356.085 l
134.1743 357.2593 132.438 358.4331 130.7021 359.6069 c
132.7705 359.27 134.8394 358.9331 136.9082 358.5967 c
143.2295 358.5972 l
143.3208 358.4951 l
139.9482 355.9355 l
b
U
139.0938 356.2783 m
139.1646 355.8623 l
139.1499 355.8594 l
138.6899 356.293 l
138.5166 356.4106 138.3428 356.5278 138.1694 356.6455 c
138.376 356.6118 138.583 356.5781 138.79 356.5444 c
139.4219 356.5444 l
139.4312 356.5342 l
139.0938 356.2783 l
s
U
u
u
u
352.3335 359.6455 m
313.6665 338.312 268.3335 356.312 v
S
271.2339 358.2476 m
260.0864 359.5488 l
269.0903 352.8481 l
271.2339 358.2476 l
s
U
0 O
0 g
269.2813 355.9355 m
269.9873 351.7788 l
269.8433 351.748 l
265.2441 356.085 l
263.5078 357.2593 261.7715 358.4331 260.0352 359.6069 c
262.104 359.27 264.1729 358.9331 266.2412 358.5967 c
272.5625 358.5972 l
272.6543 358.4951 l
269.2813 355.9355 l
b
U
268.4272 356.2783 m
268.498 355.8623 l
268.4834 355.8594 l
268.0234 356.293 l
267.8496 356.4106 267.6763 356.5278 267.5024 356.6455 c
267.7095 356.6118 267.9165 356.5781 268.123 356.5444 c
268.7554 356.5444 l
268.7646 356.5342 l
268.4272 356.2783 l
s
U
u
u
u
479 359.6455 m
440.3335 338.312 395 356.312 v
S
397.9009 358.2476 m
386.7529 359.5488 l
395.7568 352.8481 l
397.9009 358.2476 l
s
U
0 O
0 g
395.9482 355.9355 m
396.6543 351.7788 l
396.5098 351.748 l
391.9106 356.085 l
390.1743 357.2593 388.438 358.4331 386.7021 359.6069 c
388.7705 359.27 390.8394 358.9331 392.9082 358.5967 c
399.2295 358.5972 l
399.3208 358.4951 l
395.9482 355.9355 l
b
U
395.0938 356.2783 m
395.1646 355.8623 l
395.1499 355.8594 l
394.6899 356.293 l
394.5166 356.4106 394.3428 356.5278 394.1689 356.6455 c
394.376 356.6118 394.583 356.5781 394.79 356.5444 c
395.4219 356.5444 l
395.4312 356.5342 l
395.0938 356.2783 l
s
U
0 To
1 0 0 1 166.3335 332.312 0 Tp
TP
0 Tr
0 O
0 g
1 w
/_Helvetica 18 Tf
0 Ts
100 Tz
0 Tt
1 TA
%_ 10 XL
36 0 Xb
XB
0 0 5 TC
100 100 200 TW
0 0 0 Ti
0 Ta
0 1 2 2 99 Th
0 Tq
0 0 Tl
0 Tc
0 Tw
(.2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 296.3335 332.312 0 Tp
TP
0 Tr
(.04) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 420.3335 417.6455 0 Tp
TP
0 Tr
(.3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 462.3335 372.979 0 Tp
TP
0 Tr
(4) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 78.3335 372.979 0 Tp
TP
0 Tr
(1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 203.6665 372.979 0 Tp
TP
0 Tr
(2) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 331.6665 372.979 0 Tp
TP
0 Tr
(3) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 285.6665 418.312 0 Tp
TP
0 Tr
(.01) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 168.3335 417.6455 0 Tp
TP
0 Tr
(.1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 429.6665 333.6455 0 Tp
TP
0 Tr
(.1) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 126.3335 468.979 0 Tp
TP
0 Tr
(.9) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 507.6665 468.979 0 Tp
TP
0 Tr
(.9) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 379.6665 468.979 0 Tp
TP
0 Tr
(.66) Tx 1 0 Tk
(\r) TX 
TO
0 To
1 0 0 1 251.6665 468.979 0 Tp
TP
0 Tr
(.79) Tx 1 0 Tk
(\r) TX 
TO
u
u
1 Ap
0 R
0 G
1.2 w
101.3335 411.3335 m
88 420.6665 86.5752 436.75 y
85.5752 455.3916 96.5664 466.2271 111.6665 466.2271 c
126.7666 466.2271 140.0083 451.1416 140.0083 435 c
140.6665 425.6665 136.6665 419 v
S
0 Ap
0 O
0 g
1 w
135.2261 422.1758 m
132.1387 411.3853 l
140.2075 419.1865 l
135.2261 422.1758 l
f
U
U
u
u
1 Ap
0 R
0 G
1.2 w
224.3335 411.3335 m
211 420.6665 209.5752 436.75 y
208.5752 455.3916 219.5664 466.2271 234.6665 466.2271 c
249.7666 466.2271 263.0083 451.1416 263.0083 435 c
263.6665 425.6665 259.6665 419 v
S
0 Ap
0 O
0 g
1 w
258.2261 422.1758 m
255.1387 411.3853 l
263.2075 419.1865 l
258.2261 422.1758 l
f
U
U
u
u
1 Ap
0 R
0 G
1.2 w
350.3335 411.3335 m
337 420.6665 335.5752 436.75 y
334.5752 455.3916 345.5664 466.2271 360.6665 466.2271 c
375.7666 466.2271 389.0083 451.1416 389.0083 435 c
389.6665 425.6665 385.6665 419 v
S
0 Ap
0 O
0 g
1 w
384.2261 422.1758 m
381.1387 411.3853 l
389.2075 419.1865 l
384.2261 422.1758 l
f
U
U
u
u
1 Ap
0 R
0 G
1.2 w
480.3335 411.3335 m
467 420.6665 465.5752 436.75 y
464.5752 455.3916 475.5664 466.2271 490.6665 466.2271 c
505.7666 466.2271 519.0083 451.1416 519.0083 435 c
519.6665 425.6665 515.6665 419 v
S
0 Ap
0 O
0 g
1 w
514.2261 422.1758 m
511.1387 411.3853 l
519.2075 419.1865 l
514.2261 422.1758 l
f
U
U
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_blend_AI5 /terminate get exec
Adobe_typography_AI5 /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF

%%EndDocument
 @endspecial 1250 2281 a Fm(b)l(y)43 b(Ric)l(hard)i(F)-11
b(rost)924 2686 y(Draft)42 b(date)i(Jan)l(uary)f(14,)f(2001)p
eop
%%Page: 2 2
2 1 bop 664 555 a Fl(This)33 b(text)j(is)f(under)e(dev)m(elopmen)m(t)i
(b)m(y)g(Ric)m(hard)f(F)-8 b(rost)37 b(at)e(San)g(Diego)h(State)g(Uni-)
664 668 y(v)m(ersit)m(y)-8 b(.)42 b(Questions)29 b(and)h(commen)m(ts)h
(should)d(b)s(e)i(addressed)f(to:)664 872 y(Ric)m(hard)h(F)-8
b(rost)664 985 y(Mathematical)31 b(Sciences)664 1098
y(San)f(Diego)h(State)h(Univ)m(ersit)m(y)664 1211 y(5500)g(Campanile)d
(Driv)m(e)664 1324 y(San)h(Diego,)i(CA)e(92182)664 1437
y Fk(frostr@sdsu.edu)p 664 3622 3537 4 v 664 4955 4 1333
v 692 3710 a Fl(COPYRIGHT)24 b(2001)j(Ric)m(hard)d(F)-8
b(rost;)28 b(San)c(Diego,)j(California,)d(USA)h(referred)f(to)h(herein)
f(as)h("the)692 3823 y(author".)41 b(License)27 b(is)g(not)i(gran)m
(ted)f(for)g(commercial)g(resale,)h(in)d(whole)i(or)g(in)e(part,)j
(without)e(prior)692 3936 y(written)j(p)s(ermission)d(from)j(the)h
(authors.)692 4140 y(The)j(information)e(con)m(tained)h(in)g(these)h
(do)s(cumen)m(ts)f(is)g(pro)m(vided)f(\\AS)i(IS")f(without)g(express)g
(or)692 4253 y(implied)c(w)m(arran)m(t)m(y)j(of)g(an)m(y)g(kind.)42
b(The)32 b(authors)f(and)g(their)f(\014rms,)h(institutes)f(or)i(emplo)m
(y)m(ers)f(dis-)692 4366 y(claim)f(all)f(w)m(arran)m(ties)h(with)f
(regard)i(to)g(these)f(do)s(cumen)m(ts,)h(including)26
b(all)k(implied)d(w)m(arran)m(ties)j(of)692 4479 y(merc)m(han)m
(tabilit)m(y)k(and)f(\014tness;)i(in)e(no)h(ev)m(en)m(t)h(shall)d(the)i
(authors)g(and)f(their)g(\014rms,)h(institutes)e(or)692
4592 y(emplo)m(y)m(ers)k(b)s(e)f(liable)e(for)i(an)m(y)h(sp)s(ecial,)g
(indirect)d(or)j(consequen)m(tial)f(damages)h(or)g(an)m(y)g(damages)692
4705 y(whatso)s(ev)m(er)d(resulting)d(from)i(loss)f(of)h(use,)g(data)h
(or)f(pro\014ts,)g(whether)f(in)g(an)h(action)g(of)g(con)m(tract,)692
4818 y(negligence)h(or)g(other)g(tortious)g(action,)h(arising)d(out)i
(of)g(or)g(in)e(connection)i(with)f(the)h(use)f(or)h(p)s(er-)692
4930 y(formance)e(of)g(information)d(con)m(tained)j(herein.)p
4197 4955 V 664 4958 3537 4 v 2133 5187 a(ii)p eop
%%Page: 3 3
3 2 bop 241 1311 a Fj(Preface)241 1847 y Fl(Represen)m(tation)36
b(of)f(and)g(op)s(erations)g(on)h(basic)f(data)h(structures.)56
b(Arra)m(ys,)37 b(link)m(ed)241 1960 y(lists,)d(stac)m(ks,)j(queues,)e
(orthogonal)f(lists,)g(trees;)j(recursion;)e(graphs;)h(hash)d(tables;)
241 2073 y(dynamic)c(storage)j(managemen)m(t)g(and)d(garbage)j
(collection.)479 2377 y Fk(Column1)237 b(Column2)479
2490 y(-------)g(-------)623 2603 y(x)524 b(A)623 2715
y(y)g(C)623 2828 y(z)g(D)479 2941 y(-------)237 b(-------)1697
5187 y Fl(iii)p eop
%%Page: 4 4
4 3 bop 2122 5187 a Fl(iv)p eop
%%Page: 5 5
5 4 bop 241 1311 a Fj(Con)-6 b(ten)g(ts)241 1938 y Fi(Preface)2562
b(iii)241 2233 y(1)84 b(De\014nitions)2306 b(1)241 2528
y(2)84 b(Using)36 b(the)f(De\014nitions)g(in)g(the)f(Left)h(Direction)
845 b(3)241 2823 y(3)84 b(Examples)2361 b(5)241 3119
y(4)84 b(Analyzing)36 b(E\016ciencies)1806 b(9)241 3414
y(Ac)m(kno)m(wledgemen)m(ts)2016 b(13)241 3709 y(Bibliograph)m(y)2299
b(14)1711 5187 y Fl(v)p eop
%%Page: 6 6
6 5 bop 2122 5187 a Fl(vi)p eop
%%Page: 1 7
1 6 bop 241 1269 a Fh(Chapter)64 b(1)241 1776 y Fj(De\014nitions)406
2403 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55 b(=)h Fg(O)s
Fl(\()p Fg(g)s Fl(\()p Fg(n)p Fl(\)\))84 b Ff(\()-15
b(\))83 b Fe(ther)-5 b(e)38 b(exists)g Fg(g)s Fl(\()p
Fg(n)p Fl(\))p Fg(;)32 b(n)2194 2417 y Fd(0)2258 2403
y Ff(\025)25 b Fl(0)p Fg(;)31 b(c)25 b(>)g Fl(0)31 b
Fe(such)38 b(that)1426 2541 y Fg(T)13 b Fl(\()p Fg(n)p
Fl(\))55 b Ff(\024)h Fg(c)p Ff(\001)p Fg(g)s Fl(\()p
Fg(n)p Fl(\))31 b Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b(>)g(n)2586
2555 y Fd(0)412 2817 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))56
b(=)f(\012\()p Fg(g)s Fl(\()p Fg(n)p Fl(\)\))84 b Ff(\()-15
b(\))83 b Fe(ther)-5 b(e)38 b(exists)g Fg(g)s Fl(\()p
Fg(n)p Fl(\))p Fg(;)32 b(n)2194 2831 y Fd(0)2258 2817
y Ff(\025)25 b Fl(0)p Fg(;)31 b(c)25 b(>)g Fl(0)31 b
Fe(such)38 b(that)1426 2955 y Fg(T)13 b Fl(\()p Fg(n)p
Fl(\))55 b Ff(\025)h Fg(c)p Ff(\001)p Fg(g)s Fl(\()p
Fg(n)p Fl(\))31 b Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b(>)g(n)2586
2969 y Fd(0)407 3230 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))56
b(=)f(\002\()p Fg(g)s Fl(\()p Fg(n)p Fl(\)\))84 b Ff(\()-15
b(\))83 b Fg(T)13 b Fl(\()p Fg(n)p Fl(\))40 b(=)g Fg(O)s
Fl(\()p Fg(g)s Fl(\()p Fg(n)p Fl(\)\))32 b Fe(and)41
b Fg(T)13 b Fl(\()p Fg(n)p Fl(\))40 b(=)g(\012\()p Fg(g)s
Fl(\()p Fg(n)p Fl(\)\))434 3506 y Fg(T)13 b Fl(\()p Fg(n)p
Fl(\))55 b(=)g Fg(o)p Fl(\()p Fg(g)s Fl(\()p Fg(n)p Fl(\)\))85
b Ff(\()-15 b(\))83 b Fe(ther)-5 b(e)38 b(exists)g Fg(g)s
Fl(\()p Fg(n)p Fl(\))p Fg(;)32 b(n)2194 3520 y Fd(0)2258
3506 y Ff(\025)25 b Fl(0)p Fg(;)31 b(c)25 b(>)g Fl(0)31
b Fe(such)38 b(that)1426 3644 y Fg(T)13 b Fl(\()p Fg(n)p
Fl(\))55 b Fg(<)h(c)p Ff(\001)p Fg(g)s Fl(\()p Fg(n)p
Fl(\))31 b Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b(>)g(n)2586
3658 y Fd(0)418 3919 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55
b(=)h Fg(!)s Fl(\()p Fg(g)s Fl(\()p Fg(n)p Fl(\)\))84
b Ff(\()-15 b(\))83 b Fe(ther)-5 b(e)38 b(exists)g Fg(g)s
Fl(\()p Fg(n)p Fl(\))p Fg(;)32 b(n)2194 3933 y Fd(0)2258
3919 y Ff(\025)25 b Fl(0)p Fg(;)31 b(c)25 b(>)g Fl(0)31
b Fe(such)38 b(that)1426 4057 y Fg(T)13 b Fl(\()p Fg(n)p
Fl(\))55 b Fg(>)h(c)p Ff(\001)p Fg(g)s Fl(\()p Fg(n)p
Fl(\))31 b Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b(>)g(n)2586
4071 y Fd(0)1712 5187 y Fl(1)p eop
%%Page: 2 8
2 7 bop 2136 5187 a Fl(2)p eop
%%Page: 3 9
3 8 bop 241 1269 a Fh(Chapter)64 b(2)241 1776 y Fj(Using)76
b(the)i(De\014nitions)f(in)h(the)241 2025 y(Left)f(Direction)241
2561 y Fi(1.)60 b Fl(Supp)s(ose)35 b(y)m(ou)i(ha)m(v)m(e)i(some)e
Fg(T)13 b Fl(\()p Fg(n)p Fl(\),)39 b(for)d(example)h
Fg(T)13 b Fl(\()p Fg(n)p Fl(\))36 b(=)g(3)p Fg(n)2571
2528 y Fd(2)2635 2561 y Ff(\000)24 b Fg(n)37 b Fl(whic)m(h)e(y)m(ou)241
2674 y(kno)m(w)27 b(is)e(less)h(than)h(or)g(equal)f(to)i(3)p
Fg(n)1487 2641 y Fd(2)1553 2674 y Fl(for)e(all)g Fg(n)f
Ff(\025)g Fl(0)i([GAJ86)q(].)40 b(Using)26 b(the)h(de\014nition)241
2787 y(of)36 b Fg(O)s Fl(\(\))g(in)f(the)h Ff(\()g Fl(direction,)g(w)m
(e)g(ha)m(v)m(e)h Fg(g)s Fl(\()p Fg(n)p Fl(\))e(=)g Fg(n)2061
2754 y Fd(2)2100 2787 y Fl(,)i Fg(c)e Fl(=)f(3,)k(and)d
Fg(n)2686 2801 y Fd(0)2759 2787 y Fl(=)g(0)h(so)g(that)241
2900 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))25 b(=)g Fg(O)s
Fl(\()p Fg(n)715 2867 y Fd(2)754 2900 y Fl(\).)241 3286
y Fi(2.)39 b Fl(Supp)s(ose)25 b(y)m(ou)i(ha)m(v)m(e)g(another)g
Fg(T)13 b Fl(\()p Fg(n)p Fl(\),)27 b(for)f(example)g
Fg(T)13 b Fl(\()p Fg(n)p Fl(\))26 b(=)f(5)p Fg(n)p Ff(\001)15
b Fl(log)i Fg(n)12 b Fl(+)g(42)27 b(whic)m(h)241 3399
y(y)m(ou)g(kno)m(w)f(is)g(less)g(than)g(or)h(equal)f(to)h(5)p
Fg(n)p Ff(\001)16 b Fl(log)g Fg(n)27 b Fl(for)f(all)g
Fg(n)e Ff(\025)h Fl(0.)40 b(Using)26 b(the)h(de\014nition)241
3512 y(of)f(\012\(\))h(in)e(the)h Ff(\()g Fl(direction,)g(w)m(e)h(ha)m
(v)m(e)g Fg(g)s Fl(\()p Fg(n)p Fl(\))f(=)f Fg(n)p Ff(\001)15
b Fl(log)i Fg(n)p Fl(,)27 b Fg(c)e Fl(=)g(5,)j(and)e
Fg(n)2724 3526 y Fd(0)2788 3512 y Fl(=)f(0)h(so)h(that)241
3625 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))25 b(=)g(\012\()p
Fg(n)p Ff(\001)15 b Fl(log)i Fg(n)p Fl(\).)241 4011 y
Fi(3.)63 b Fl(Supp)s(ose)36 b(y)m(ou)j(ha)m(v)m(e)g(a)f(third)e
Fg(T)13 b Fl(\()p Fg(n)p Fl(\))38 b(whic)m(h)f(y)m(ou)h(kno)m(w)g(is)f
(in)g Fi(b)s(oth)h Fg(O)s Fl(\()p Fg(n)p Fl(\))g(and)241
4123 y(\012\()p Fg(n)p Fl(\).)i(Using)27 b(the)h(de\014nition)e(of)j
(\002\(\))f(in)f(the)h Ff(\()g Fl(direction,)g(w)m(e)h(ha)m(v)m(e)g
Fg(T)13 b Fl(\()p Fg(n)p Fl(\))25 b(=)g(\002\()p Fg(n)p
Fl(\).)1712 5187 y(3)p eop
%%Page: 4 10
4 9 bop 2136 5187 a Fl(4)p eop
%%Page: 5 11
5 10 bop 241 1269 a Fh(Chapter)64 b(3)241 1776 y Fj(Examples)241
2312 y Fi(1.)40 b Fl(Sho)m(w)30 b(that)1030 2425 y Fg(T)13
b Fl(\()p Fg(n)p Fl(\))56 b(=)f(8)p Ff(\001)q Fg(n)1529
2387 y Fd(2)1588 2425 y Ff(\000)20 b Fl(3)p Ff(\001)p
Fg(n)g Fl(+)g(5)31 b Fe(is)38 b(in)f Fl(\012\()p Fg(n)2366
2387 y Fd(2)2405 2425 y Fl(\))241 2578 y(Pro)s(of)30
b([Kn)m(u81]:)241 2691 y(W)-8 b(e)31 b(are)g(giv)m(en)f
Fg(g)s Fl(\()p Fg(n)p Fl(\))d(=)e Fg(n)1135 2658 y Fd(2)1204
2691 y Fl(but)30 b(w)m(e)g(need)h(to)g(\014nd)d(a)j Fg(c)g
Fl(and)f Fg(n)2387 2705 y Fd(0)2426 2691 y Fl(.)40 b(Notice)32
b(that)1000 2868 y(8)p Ff(\001)p Fg(n)1125 2830 y Fd(2)1185
2868 y Ff(\000)19 b Fl(3)p Ff(\001)q Fg(n)h Fl(+)g(5)56
b Fg(>)f Fl(7)p Ff(\001)q Fg(n)1865 2830 y Fd(2)1934
2868 y Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b Ff(\025)g
Fl(1)p Fg(:)241 3044 y Fl(This)j(means)j(that)g(if)e(w)m(e)i(let)1395
3221 y Fg(c)25 b Fl(=)g(7)31 b Fe(and)41 b Fg(n)1870
3235 y Fd(0)1934 3221 y Fl(=)25 b(0)241 3398 y(w)m(e)31
b(ha)m(v)m(e)1434 3511 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55
b(=)g(\012\()p Fg(n)1962 3473 y Fd(2)2001 3511 y Fl(\))241
3937 y Fi(2.)40 b Fl(Sho)m(w)30 b(that)1027 4050 y Fg(T)13
b Fl(\()p Fg(n)p Fl(\))56 b(=)f(8)p Ff(\001)p Fg(n)1525
4012 y Fd(2)1585 4050 y Ff(\000)20 b Fl(3)p Ff(\001)p
Fg(n)g Fl(+)g(5)31 b Fe(is)38 b(in)f Fg(O)s Fl(\()p Fg(n)2369
4012 y Fd(2)2408 4050 y Fl(\))241 4203 y(Pro)s(of:)241
4316 y(Again)23 b(w)m(e)h(are)g(giv)m(en)g Fg(g)s Fl(\()p
Fg(n)p Fl(\))i(=)f Fg(n)1350 4283 y Fd(2)1413 4316 y
Fl(but)e(w)m(e)h(need)g(to)g(\014nd)e(a)i Fg(c)g Fl(and)f
Fg(n)2542 4330 y Fd(0)2581 4316 y Fl(.)39 b(Exp)s(erimen)m(ting)241
4429 y(a)31 b(little)e(\(try)h(plotting\))g(it)g(turns)f(out)i(that)
1000 4605 y(8)p Ff(\001)p Fg(n)1125 4568 y Fd(2)1185
4605 y Ff(\000)19 b Fl(3)p Ff(\001)q Fg(n)h Fl(+)g(5)56
b Fg(<)f Fl(9)p Ff(\001)q Fg(n)1865 4568 y Fd(2)1934
4605 y Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b Ff(\025)g
Fl(1)p Fg(:)241 4782 y Fl(This)j(means)j(that)g(if)e(w)m(e)i(let)1395
4959 y Fg(c)25 b Fl(=)g(9)31 b Fe(and)41 b Fg(n)1870
4973 y Fd(0)1934 4959 y Fl(=)25 b(0)1712 5187 y(5)p eop
%%Page: 6 12
6 11 bop 664 555 a Fl(w)m(e)31 b(ha)m(v)m(e)1854 669
y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55 b(=)h Fg(O)s Fl(\()p
Fg(n)2389 631 y Fd(2)2428 669 y Fl(\))664 1109 y Fi(3.)41
b Fl(Sho)m(w)30 b(that)1451 1222 y Fg(T)13 b Fl(\()p
Fg(n)p Fl(\))56 b(=)f(8)p Ff(\001)p Fg(n)1949 1185 y
Fd(2)2009 1222 y Ff(\000)20 b Fl(3)p Ff(\001)p Fg(n)g
Fl(+)g(5)31 b Fe(is)38 b(in)f Fl(\002\()p Fg(n)2792 1185
y Fd(2)2831 1222 y Fl(\))664 1390 y(F)-8 b(rom)31 b(our)f(w)m(ork)g(ab)
s(o)m(v)m(e:)1070 1616 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))41
b(=)f Fg(O)s Fl(\()p Fg(n)1575 1578 y Fd(2)1614 1616
y Fl(\))31 b Fe(and)41 b Fg(T)13 b Fl(\()p Fg(n)p Fl(\))40
b(=)g(\012\()p Fg(n)2362 1578 y Fd(2)2401 1616 y Fl(\))56
b Ff(\))f Fg(T)13 b Fl(\()p Fg(n)p Fl(\))56 b(=)f(\002\()p
Fg(n)3172 1578 y Fd(2)3211 1616 y Fl(\))664 2056 y Fi(4.)41
b Fl(Sho)m(w)30 b(that)1217 2261 y Fg(T)13 b Fl(\()p
Fg(n)p Fl(\))55 b(=)h Fg(a)p Ff(\001)p Fl(3)1708 2224
y Fc(n)1776 2261 y Fl(+)19 b Fg(b)p Ff(\001)q Fg(n)1986
2224 y Fd(3)2045 2261 y Fl(+)h Fg(t)30 b Fe(with)38 b
Fg(a)26 b(>)e Fl(0)31 b Fe(is)38 b(in)f Fg(O)s Fl(\(3)3017
2224 y Fc(n)3065 2261 y Fl(\))664 2466 y(Pro)s(of:)664
2579 y(W)-8 b(e)34 b(are)g(giv)m(en)f Fg(g)s Fl(\()p
Fg(n)p Fl(\))d(=)f(3)1564 2546 y Fc(n)1644 2579 y Fl(but)k(as)g(usual)e
(w)m(e)j(need)e(to)i(\014nd)d(a)j Fg(c)f Fl(and)f Fg(n)3202
2593 y Fd(0)3241 2579 y Fl(.)49 b(W)-8 b(e)34 b(ha)m(v)m(e)664
2692 y(to)c(w)m(orry)f(ab)s(out)g(whether)f(or)h(not)h
Fg(b)f Fl(and)f Fg(t)h Fl(are)h(p)s(ositiv)m(e)e(or)h(negativ)m(e.)41
b(Notice)30 b(that)1705 2896 y Fg(b)p Ff(\001)p Fg(n)1824
2859 y Fd(3)1919 2896 y Ff(\024)25 b(j)p Fg(b)p Ff(j\001)p
Fg(n)2184 2859 y Fd(3)2279 2896 y Ff(\024)55 b(j)p Fg(b)p
Ff(j\001)q Fl(3)2565 2859 y Fc(n)664 3101 y Fl(and)1833
3214 y Fg(t)h Ff(\024)25 b(j)p Fg(t)p Ff(j)56 b(\024)f(j)p
Fg(t)p Ff(j\001)p Fl(3)2436 3177 y Fc(n)664 3382 y Fl(so)31
b(that)703 3586 y Fg(a)p Ff(\001)p Fl(3)821 3549 y Fc(n)889
3586 y Fl(+)19 b Fg(b)p Ff(\001)q Fg(n)1099 3549 y Fd(3)1158
3586 y Fl(+)h Fg(t)55 b Ff(\024)g Fg(a)p Ff(\001)q Fl(3)1582
3549 y Fc(n)1649 3586 y Fl(+)20 b Ff(j)p Fg(b)p Ff(j\001)q
Fl(3)1900 3549 y Fc(n)1968 3586 y Fl(+)g Ff(j)p Fg(t)p
Ff(j\001)p Fl(3)2212 3549 y Fc(n)2315 3586 y Fl(=)55
b(\()p Fg(a)21 b Fl(+)f Ff(j)p Fg(b)p Ff(j)h Fl(+)f Ff(j)p
Fg(t)p Ff(j)p Fl(\))p Ff(\001)q Fl(3)3026 3549 y Fc(n)3103
3586 y Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b(>)g Fl(0)664
3791 y(This)k(means)h(that)h(if)e(w)m(e)i(let)1554 3996
y Fg(c)56 b Fl(=)f(\()p Fg(a)20 b Fl(+)g Ff(j)p Fg(b)p
Ff(j)h Fl(+)f Ff(j)p Fg(t)p Ff(j)p Fl(\))31 b Fe(and)41
b Fg(n)2558 4010 y Fd(0)2622 3996 y Fl(=)25 b(0)664 4200
y(w)m(e)31 b(ha)m(v)m(e)1855 4314 y Fg(T)13 b Fl(\()p
Fg(n)p Fl(\))55 b(=)g Fg(O)s Fl(\(3)2379 4276 y Fc(n)2427
4314 y Fl(\))664 4754 y Fi(5.)41 b Fl(Sho)m(w)30 b(that)1220
4959 y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55 b(=)h Fg(a)p
Ff(\001)p Fl(3)1711 4921 y Fc(n)1779 4959 y Fl(+)20 b
Fg(b)p Ff(\001)p Fg(n)1989 4921 y Fd(3)2048 4959 y Fl(+)g
Fg(t)30 b Fe(with)38 b Fg(a)26 b(>)f Fl(0)30 b Fe(is)38
b(in)f Fl(\012\(3)3014 4921 y Fc(n)3062 4959 y Fl(\))2136
5187 y(6)p eop
%%Page: 7 13
7 12 bop 241 555 a Fl(Pro)s(of:)241 668 y(W)-8 b(e)36
b(are)f(giv)m(en)g Fg(g)s Fl(\()p Fg(n)p Fl(\))e(=)g(3)1153
635 y Fc(n)1235 668 y Fl(and)h(w)m(e)h(need)g(to)g(\014nd)f(a)h
Fg(c)g Fl(and)f Fg(n)2463 682 y Fd(0)2537 668 y Fl(for)g(this)g(case.)
55 b(W)-8 b(e)241 781 y(again)32 b(ha)m(v)m(e)h(to)g(w)m(orry)f(ab)s
(out)f(whether)h(or)g(not)g Fg(b)g Fl(and)g Fg(t)f Fl(are)i(p)s(ositiv)
m(e)e(or)h(negativ)m(e.)241 894 y(Let's)f(try)f(to)h(\014nd)e
Fg(c)p Fl(.)41 b(W)-8 b(e)31 b(require:)1056 1083 y Fg(a)p
Ff(\001)p Fl(3)1174 1046 y Fc(n)1242 1083 y Fl(+)20 b
Fg(b)p Ff(\001)p Fg(n)1452 1046 y Fd(3)1511 1083 y Fl(+)g
Fg(t)83 b Ff(\025)g Fg(c)p Ff(\001)p Fl(3)1981 1046 y
Fc(n)2084 1083 y Fg(>)56 b Fl(0)928 1392 y Ff(\))f Fg(a)20
b Fl(+)g Fg(b)p Ff(\001)1308 1330 y Fg(n)1363 1297 y
Fd(3)p 1308 1371 95 4 v 1309 1454 a Fl(3)1354 1428 y
Fc(n)1432 1392 y Fl(+)1562 1330 y Fg(t)p 1533 1371 93
4 v 1533 1454 a Fl(3)1578 1428 y Fc(n)1718 1392 y Ff(\025)83
b Fg(c)56 b(>)f Fl(0)31 b Fe(for)40 b Fg(n)25 b(>)g Fl(0)241
1719 y(Consider)32 b(this)h(last)h(expression)f(in)f(t)m(w)m(o)k
(extreme)f(cases:)49 b(when)33 b Fg(b)h Fl(and)f Fg(t)h
Fl(are)g(b)s(oth)241 1832 y(negativ)m(e)39 b(and)e(when)f
Fg(b)i Fl(and)f Fg(t)h Fl(are)g(b)s(oth)f(p)s(ositiv)m(e.)61
b(F)-8 b(or)39 b Fg(n)e Fl(=)g(1)h(in)f(the)g(\014rst)g(case)241
1945 y(\(b)s(oth)30 b(negativ)m(e\))i(this)d(form)m(ula)h(reduces)g
(to:)1514 2134 y Fg(a)20 b Ff(\000)g(j)p Fg(b)p Ff(j)g(\000)g(j)p
Fg(t)p Ff(j)241 2323 y Fl(This)28 b(v)-5 b(alue)30 b(migh)m(t)g(b)s(e)g
(p)s(ositiv)m(e)f(or)i(negativ)m(e.)241 2436 y(F)-8 b(or)31
b Fg(n)25 b Fl(=)g(1)30 b(in)f(the)i(second)f(case)i(\(b)s(oth)e(p)s
(ositiv)m(e\))g(this)f(form)m(ula)g(will)f(pro)s(duce:)1514
2626 y Fg(a)20 b Fl(+)g Ff(j)p Fg(b)p Ff(j)g Fl(+)g Ff(j)p
Fg(t)p Ff(j)241 2815 y Fl(This)28 b(v)-5 b(alue)30 b(is)g(p)s(ositiv)m
(e.)241 3019 y(Since)g(the)h(terms)g(in)m(v)m(olving)f
Fg(b)h Fl(and)f Fg(t)h Fl(will)d(gro)m(w)k(v)m(ery)f(small)f(as)h
Fg(n)g Fl(gro)m(ws)g(large,)h(w)m(e)241 3132 y(ha)m(v)m(e:)559
3354 y Fg(a)20 b Ff(\000)g(j)p Fg(b)p Ff(j)h(\000)f(j)p
Fg(t)p Ff(j)56 b(\024)f Fg(a)20 b Fl(+)g Fg(b)p Ff(\001)1417
3293 y Fg(n)1472 3260 y Fd(3)p 1417 3333 95 4 v 1418
3417 a Fl(3)1463 3390 y Fc(n)1542 3354 y Fl(+)1672 3293
y Fg(t)p 1642 3333 93 4 v 1642 3417 a Fl(3)1687 3390
y Fc(n)1800 3354 y Ff(\024)56 b Fg(a)20 b Fl(+)g Ff(j)p
Fg(b)p Ff(j)g Fl(+)g Ff(j)p Fg(t)p Ff(j)31 b Fe(for)41
b(al)5 b(l)40 b Fg(n)25 b(>)g Fl(0)241 3570 y(W)-8 b(e)35
b(are)g(lo)s(oking)f(for)g(a)h Fg(c)d(>)g Fl(0)j(that)g(is)e(less)h
(than)g(or)g(equal)g(to)i(the)e(expression)f(\(in)241
3683 y(the)d(middle\))f(for)h(all)f Fg(n)h Fl(ab)s(o)m(v)m(e)i(some)e
Fg(n)1621 3697 y Fd(0)1691 3683 y Fl(to)h(b)s(e)e(determined.)40
b(Notice)31 b(that)1269 3927 y(lim)1240 3977 y Fc(n)p
Fb(!1)1439 3927 y Fg(a)21 b Fl(+)f Fg(b)p Ff(\001)1673
3866 y Fg(n)1728 3833 y Fd(3)p 1673 3906 95 4 v 1674
3990 a Fl(3)1719 3964 y Fc(n)1797 3927 y Fl(+)1928 3866
y Fg(t)p 1898 3906 93 4 v 1898 3990 a Fl(3)1943 3964
y Fc(n)2056 3927 y Fl(=)55 b Fg(a)241 4138 y Fl(If)29
b Fg(b)i Fl(and)e Fg(t)h Fl(are)h(b)s(oth)e(p)s(ositiv)m(e,)h(then)g
(the)g(expression)f(in)g(the)h(limit)e(is)h(greater)j(than)241
4251 y Fg(a)h Fl(for)f(all)g(\014nite)g Fg(n)p Fl(.)47
b(If)33 b Fg(b)g Fl(and)f Fg(t)h Fl(are)g(b)s(oth)f(negativ)m(e,)j
(then)d(the)h(limit)e(approac)m(hes)j Fg(a)241 4364 y
Fl(from)26 b(the)h(left)g(on)g(the)g(n)m(um)m(b)s(er)f(line.)38
b Fi(More)31 b(imp)s(ortan)m(tly)p Fl(,)c(there)g(m)m(ust)g(b)s(e)g(an)
g Fg(n)3191 4378 y Fd(0)241 4476 y Fl(suc)m(h)32 b(that)h(the)f
(expression)f(in)g(the)i(limit)d(exceeds)j(an)m(y)f(p)s(ositiv)m(e)g
(fraction)g(of)g Fg(a)p Fl(.)47 b(So)241 4589 y(let's)32
b(c)m(ho)s(ose)h Fg(c)f Fl(to)g(b)s(e)g(some)g(p)s(ositiv)m(e)f
(fraction)g(of)h Fg(a)p Fl(,)h(sa)m(y)g Fg(a=)p Fl(2,)g(and)e(c)m(ho)s
(ose)i(our)f Fg(n)3191 4603 y Fd(0)241 4702 y Fl(to)f(b)s(e)f(the)g
(\014rst)g(v)-5 b(alue)30 b(of)g Fg(n)g Fl(suc)m(h)g(that)h(the)g
(expression)e(is)g(greater)j(or)e(equal)g(to)h Fg(c)p
Fl(:)664 4942 y Fg(a)20 b Fl(+)g Fg(b)p Ff(\001)897 4880
y Fg(n)952 4894 y Fd(0)991 4848 y(3)p 897 4921 134 4
v 900 5004 a Fl(3)945 4978 y Fc(n)988 4987 y Fa(0)1061
4942 y Fl(+)1209 4880 y Fg(t)p 1162 4921 128 4 v 1162
5004 a Fl(3)1207 4978 y Fc(n)1250 4987 y Fa(0)1354 4942
y Ff(\025)1577 4906 y Fc(a)p 1577 4921 38 4 v 1578 4973
a Fd(2)1766 4942 y Fl(=)55 b Fg(c)h(>)25 b Fl(0)1712
5187 y(7)p eop
%%Page: 8 14
8 13 bop 1045 726 a Ff(\))25 b Fg(a)c Fl(+)e Fg(b)p Ff(\001)1395
664 y Fg(n)1450 631 y Fd(3)p 1395 705 95 4 v 1396 788
a Fl(3)1441 762 y Fc(n)1519 726 y Fl(+)1650 664 y Fg(t)p
1620 705 93 4 v 1620 788 a Fl(3)1665 762 y Fc(n)1778
726 y Ff(\025)2000 690 y Fc(a)p 2000 705 38 4 v 2001
757 a Fd(2)2190 726 y Fl(=)55 b Fg(c)h(>)25 b Fl(0)30
b Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b(>)g(n)3103 740
y Fd(0)1027 1001 y Ff(\))g Fg(a)p Ff(\001)p Fl(3)1261
964 y Fc(n)1329 1001 y Fl(+)20 b Fg(b)p Ff(\001)p Fg(n)1539
964 y Fd(3)1598 1001 y Fl(+)g Fg(t)56 b Ff(\025)1941
966 y Fc(a)p 1941 981 V 1942 1033 a Fd(2)1989 1001 y
Ff(\001)p Fl(3)2059 968 y Fc(n)2190 1001 y Fl(=)f Fg(c)p
Ff(\001)p Fl(3)2425 964 y Fc(n)2528 1001 y Fg(>)h Fl(0)30
b Fe(for)41 b(al)5 b(l)40 b Fg(n)25 b(>)g(n)3251 1015
y Fd(0)664 1343 y Fl(So)30 b(\014nally)-8 b(,)1858 1456
y Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55 b(=)h(\012\(3)2377
1419 y Fc(n)2424 1456 y Fl(\))2136 5187 y(8)p eop
%%Page: 9 15
9 14 bop 241 1269 a Fh(Chapter)64 b(4)241 1776 y Fj(Analyzing)77
b(E\016ciencies)241 2312 y Fi(1.)60 b Fl(Supp)s(ose)35
b(y)m(ou)i(w)m(ork)g(as)g(the)g(IT)f(manager)h(at)h(an)e(accoun)m(ting)
i(\014rm.)58 b(Supp)s(ose)241 2425 y(that)35 b(the)g(nigh)m(tly)f
(accoun)m(ting)i(runs)d(are)i(comp)s(osed)g(of)g(pro)s(cessing)f
Fg(n)g Fl(clien)m(t)h(data)241 2538 y(\014les.)47 b(Y)-8
b(ou'v)m(e)35 b(b)s(een)d(ev)-5 b(aluating)33 b(the)g(run)f(times)g(of)
h(accoun)m(ting)h(runs)d(on)i(y)m(our)g(old)241 2651
y(hardw)m(are)d(and)g(some)g(new)g(hardw)m(are.)40 b(Y)-8
b(ou'v)m(e)32 b(found:)1135 2858 y Fe(Old)40 b(machine)33
b Fl(:)167 b Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55 b(=)h(5)p
Ff(\001)p Fg(n)1105 3134 y Fe(New)39 b(machine)33 b Fl(:)167
b Fg(T)13 b Fl(\()p Fg(n)p Fl(\))55 b(=)h(2)p Ff(\001)p
Fg(n)241 3341 y Fl(It's)45 b(great)h(that)f(the)h(new)e(mac)m(hine)g
(tak)m(es)j(less)d(time)h(to)g(\014nish)e(the)i(pro)s(cessing)241
3454 y(than)37 b(the)g(old)f(mac)m(hine.)61 b(Ho)m(w)m(ev)m(er,)41
b(this)36 b(just)h(means)g(that)g(the)h(nigh)m(t)e(op)s(erators)241
3567 y(are)k(left)g(with)f(nothing)h(to)h(do)f(for)g(part)g(of)g(their)
g(shift.)69 b(Instead,)43 b(y)m(ou'd)d(lik)m(e)g(to)241
3680 y(either)33 b(sa)m(v)m(e)i(money)f(b)m(y)f(cutting)h(bac)m(k)g(on)
f(the)h(op)s(erator)g(lab)s(or)f(hours)f(or)i(\(b)s(etter\))241
3793 y(do)d(more)g(pro)s(cessing)f(in)g(the)i(same)f(amoun)m(t)h(of)g
(time)f(and)f(increase)h(the)h(corp)s(orate)241 3906
y(pro\014ts)d([T)m(\023)-43 b(er88)r(].)41 b(Let's)31
b(lo)s(ok)f(at)h(the)g(latter)f(scenario.)241 4110 y(What)g(w)m(e'd)g
(lik)m(e)f(to)i(do)f(is:)39 b(giv)m(en)30 b(that)g Fg(n)g
Fl(data)g(\014les)f(to)s(ok)h(5)p Ff(\001)q Fg(n)f Fl(time)h(to)g(pro)s
(cess)g(on)241 4223 y(the)k(old)g(mac)m(hine,)h(ho)m(w)g(man)m(y)f
Fg(m)h Fl(\014les)e(can)i(w)m(e)g(pro)s(cess)f(in)f(the)i(same)f(amoun)
m(t)h(of)241 4336 y(time)30 b(on)g(the)h(new)f(mac)m(hine?)40
b(W)-8 b(e)31 b(need:)1479 4544 y(5)p Ff(\001)q Fg(n)82
b Fl(=)h(2)p Ff(\001)q Fg(m)241 4751 y Fl(Righ)m(t)30
b(a)m(w)m(a)m(y)i(w)m(e)f(get)1479 4959 y Fg(m)83 b Fl(=)f(2)p
Fg(:)p Fl(5)p Ff(\001)r Fg(n)1712 5187 y Fl(9)p eop
%%Page: 10 16
10 15 bop 664 555 a Fl(The)30 b(new)g(mac)m(hine)g(can)h(handle)e(2)p
Fg(:)p Fl(5)i(the)g(w)m(orkload)f(of)g(the)h(old)e(mac)m(hine.)664
941 y Fi(2.)39 b Fl(Supp)s(ose)25 b(y)m(ou)h(are)g(ev)-5
b(aluating)25 b(a)i(data)f(pro)s(cessing)f(task)i(on)e(t)m(w)m(o)j(mac)
m(hines.)38 b(The)664 1054 y(task)j(is)e(kno)m(wn)h(to)h(b)s(e)f
(\002\()p Fg(n)1684 1021 y Fd(2)1723 1054 y Fl(\).)71
b(Y)-8 b(ou)40 b(w)m(an)m(t)i(to)f(kno)m(w)f(ho)m(w)g(m)m(uc)m(h)h(w)m
(ork)f(load)g(\(in)664 1167 y(terms)32 b(of)g Fg(n)p
Fl(\))g(y)m(ou)h(can)f(put)g(on)g(mac)m(hine)g(2)g(so)g(that)h(it)f
(tak)m(es)h(the)g(same)f(amoun)m(t)h(of)664 1280 y(time)d(as)h(mac)m
(hine)f(1.)41 b(Y)-8 b(ou'v)m(e)32 b(found:)1377 1458
y Fe(machine)38 b Fl(#)p Fe(1)f Fl(:)167 b Fg(T)13 b
Fl(\(14000\))58 b(=)d(3)31 b Fe(hours)1377 1733 y(machine)38
b Fl(#)p Fe(2)f Fl(:)167 b Fg(T)13 b Fl(\(14000\))58
b(=)d(2)31 b Fe(hours)664 1911 y Fl(Since)d(the)h(task)h(is)e(\002\()p
Fg(n)1500 1878 y Fd(2)1539 1911 y Fl(\),)i(w)m(e)f(kno)m(w)g(that)h
Fg(T)13 b Fl(\()p Fg(n)p Fl(\))25 b Ff(\031)g Fg(c)p
Ff(\001)q Fg(n)2625 1878 y Fd(2)2693 1911 y Fl(for)j(some)i(constan)m
(t)g Fg(c)p Fl(.)41 b(W)-8 b(e)664 2024 y(w)m(an)m(t)36
b(to)f(\014nd)f(the)h(appropriate)f(load)g Fg(m)h Fl(for)f(mac)m(hine)h
(2)g(in)f(terms)g(of)h(the)g Fg(n)g Fl(used)664 2137
y(for)30 b(mac)m(hine)g(1:)1719 2286 y Fg(c)1758 2300
y Fd(1)1798 2286 y Ff(\001)p Fl(14000)2050 2253 y Fd(2)p
1719 2326 371 4 v 1719 2411 a Fg(c)1758 2425 y Fd(2)1798
2411 y Ff(\001)p Fl(14000)2050 2379 y Fd(2)2183 2347
y Fl(=)2346 2286 y(3)p 2346 2326 46 4 v 2346 2409 a(2)1854
2638 y Ff(\))2011 2577 y Fg(c)2050 2591 y Fd(1)p 2011
2617 79 4 v 2011 2701 a Fg(c)2050 2715 y Fd(2)2183 2638
y Fl(=)2346 2577 y(3)p 2346 2617 46 4 v 2346 2701 a(2)1902
2914 y Fg(c)1941 2928 y Fd(1)1980 2914 y Ff(\001)q Fg(n)2061
2876 y Fd(2)2183 2914 y Fl(=)82 b Fg(c)2375 2928 y Fd(2)2415
2914 y Ff(\001)p Fg(m)2520 2876 y Fd(2)1735 3189 y Ff(\))1892
3128 y Fg(c)1931 3142 y Fd(1)p 1892 3168 79 4 v 1892
3252 a Fg(c)1931 3266 y Fd(2)1980 3189 y Ff(\001)q Fg(n)2061
3152 y Fd(2)2183 3189 y Fl(=)g Fg(m)2416 3152 y Fd(2)1873
3465 y Ff(\))56 b Fg(m)83 b Fl(=)f Fg(n)p Ff(\001)2416
3386 y(p)p 2492 3386 117 4 v 79 x Fl(1)p Fg(:)p Fl(5)664
4054 y Fi(3.)39 b Fl(Supp)s(ose)25 b(y)m(ou)h(are)g(ev)-5
b(aluating)25 b(a)i(data)f(pro)s(cessing)f(task)i(on)e(t)m(w)m(o)j(mac)
m(hines.)38 b(The)664 4167 y(task)31 b(is)d Fg(O)s Fl(\()p
Fg(n)1111 4134 y Fd(3)1151 4167 y Fl(\))i(on)f(mac)m(hine)h(1,)g(but)f
(b)s(ecause)h(of)g(new)f(hardw)m(are)h(features)g(is)e
Fg(O)s Fl(\()p Fg(n)3578 4134 y Fd(2)3618 4167 y Fl(\))664
4280 y(on)k(mac)m(hine)g(2.)45 b(Y)-8 b(ou)33 b(w)m(an)m(t)g(to)f(kno)m
(w)g(ho)m(w)g(m)m(uc)m(h)g(w)m(ork)g(load)g(\(in)f(terms)h(of)g
Fg(n)p Fl(\))g(y)m(ou)664 4392 y(can)f(put)f(on)g(mac)m(hine)g(2)h(so)g
(that)g(it)f(tak)m(es)i(the)f(same)g(amoun)m(t)g(of)f(time)g(as)h(mac)m
(hine)664 4505 y(1.)41 b(Y)-8 b(ou'v)m(e)32 b(found:)1377
4683 y Fe(machine)38 b Fl(#)p Fe(1)f Fl(:)167 b Fg(T)13
b Fl(\(10000\))58 b(=)d(6)31 b Fe(hours)1377 4959 y(machine)38
b Fl(#)p Fe(2)f Fl(:)167 b Fg(T)13 b Fl(\(10000\))58
b(=)d(1)31 b Fe(hour)2113 5187 y Fl(10)p eop
%%Page: 11 17
11 16 bop 241 555 a Fl(W)-8 b(e)26 b(w)m(an)m(t)f(to)h(\014nd)d(the)i
(appropriate)f(load)g Fg(m)h Fl(for)f(mac)m(hine)h(2)g(in)e(terms)i(of)
g(the)g Fg(n)f Fl(used)241 668 y(for)32 b(mac)m(hine)f(1.)46
b(Since)31 b(the)i Fg(T)13 b Fl(\()p Fg(n)p Fl(\))32
b(functions)e(are)j(di\013eren)m(t)e(on)h(the)g(t)m(w)m(o)i(mac)m
(hines,)241 781 y(w)m(e)d(ha)m(v)m(e)g(to)g(compute)g(the)g(constan)m
(ts)g(separately:)1206 985 y Fg(c)1245 999 y Fd(1)1285
985 y Ff(\001)p Fl(10000)1537 948 y Fd(3)1660 985 y Fl(=)82
b(6)1351 1261 y Ff(\))56 b Fg(c)1537 1275 y Fd(1)1660
1261 y Fl(=)82 b(6)p Ff(\001)q Fl(10)1974 1223 y Fb(\000)p
Fd(12)1206 1537 y Fg(c)1245 1551 y Fd(2)1285 1537 y Ff(\001)p
Fl(10000)1537 1499 y Fd(2)1660 1537 y Fl(=)g(1)1351 1812
y Ff(\))56 b Fg(c)1537 1826 y Fd(2)1660 1812 y Fl(=)82
b(10)1903 1775 y Fb(\000)p Fd(8)1379 2088 y Fg(c)1418
2102 y Fd(1)1457 2088 y Ff(\001)q Fg(n)1538 2050 y Fd(3)1660
2088 y Fl(=)g Fg(c)1852 2102 y Fd(2)1892 2088 y Ff(\001)p
Fg(m)1997 2050 y Fd(2)1212 2363 y Ff(\))1369 2302 y Fg(c)1408
2316 y Fd(1)p 1369 2342 79 4 v 1369 2426 a Fg(c)1408
2440 y Fd(2)1457 2363 y Ff(\001)q Fg(n)1538 2326 y Fd(3)1660
2363 y Fl(=)g Fg(m)1893 2326 y Fd(2)1350 2639 y Ff(\))56
b Fg(m)83 b Fl(=)1813 2554 y Ff(p)p 1889 2554 376 4 v
85 x Fg(n)1944 2613 y Fd(3)1983 2639 y Ff(\001)p Fl(6)p
Ff(\001)q Fl(10)2169 2613 y Fb(\000)p Fd(4)241 2981 y
Fl(In)29 b(the)i(case)g(of)g Fg(n)25 b Fl(=)g(10000,)33
b Fg(m)25 b Fl(=)g(10000)p Ff(\001)1719 2906 y(p)p 1795
2906 46 4 v 75 x Fl(6)h Ff(\031)f Fl(24500.)241 3094
y(F)-8 b(or)31 b(the)f(case)i(of)e Fg(n)25 b Fl(=)g(100,)32
b Fg(m)25 b Fl(=)1425 3014 y Ff(p)p 1501 3014 202 4 v
80 x Fl(6)p Ff(\001)q Fl(10)1662 3068 y Fd(5)1727 3094
y Ff(\031)g Fl(775.)1690 5187 y(11)p eop
%%Page: 12 18
12 17 bop 2113 5187 a Fl(12)p eop
%%Page: 13 19
13 18 bop 241 1311 a Fj(Ac)-6 b(kno)g(wledgemen)g(ts)241
1847 y Fl(Sp)s(ecial)28 b(thanks)i(to)h(.)16 b(.)f(.)1690
5187 y(13)p eop
%%Page: 14 20
14 19 bop 2113 5187 a Fl(14)p eop
%%Page: 15 21
15 20 bop 241 1311 a Fj(Bibliograph)-6 b(y)241 1793 y
Fl([GAJ86])47 b Fe(G-A)n(nimal's)32 b(Journal)p Fl(,)g(41\(7\),)h(July)
28 b(1986.)42 b(The)30 b(en)m(tire)g(issue)f(is)g(dev)m(oted)614
1906 y(to)c(gnats)f(and)f(gn)m(us)h(\(this)f(en)m(try)i(is)e(a)h
(cross-referenced)g(AR)-8 b(TICLE)24 b(\(jour-)614 2019
y(nal\)\).)241 2207 y([Kn)m(u81])63 b(Donald)41 b(E.)g(Kn)m(uth.)73
b Fe(Seminumeric)-5 b(al)43 b(A)n(lgorithms)p Fl(,)j(v)m(olume)41
b(2)h(of)f Fe(The)614 2319 y(A)n(rt)f(of)g(Computer)i(Pr)-5
b(o)g(gr)g(amming)p Fl(.)68 b(Addison-W)-8 b(esley)g(,)41
b(Reading,)g(Mas-)614 2432 y(sac)m(h)m(usetts,)33 b(second)e(edition,)f
(10)i(Jan)m(uary)f(1981.)44 b(This)30 b(is)g(a)h(full)e(BOOK)614
2545 y(en)m(try)-8 b(.)241 2733 y([T)m(\023)-43 b(er88])92
b(T)-8 b(om)35 b(T)m(\023)-43 b(erri\014c.)52 b(An)34
b Fg(O)s Fl(\()p Fg(n)15 b Fl(log)i Fg(n=)p Fl(log)f(log)h
Fg(n)p Fl(\))34 b(sorting)g(algorithm.)52 b(Wishful)614
2846 y(Researc)m(h)25 b(Result)d(7,)k(F)-8 b(anstord)24
b(Univ)m(ersit)m(y)-8 b(,)25 b(Computer)e(Science)g(Depart-)614
2959 y(men)m(t,)k(F)-8 b(anstord,)27 b(California,)d(Octob)s(er)h
(1988.)34 b(This)24 b(is)g(a)i(full)d(TECHRE-)614 3072
y(POR)-8 b(T)30 b(en)m(try)-8 b(.)1690 5187 y(15)p eop
%%Page: 16 22
16 21 bop 664 1022 a Fj(Index)664 1446 y Fl(compute,)31
b(11)664 1642 y(ortho,)g(iii)664 1755 y(orthogonal,)g(iii)664
1951 y(pro\014ts,)f(9)664 2064 y(Pro)s(of,)g(5{7)664
2259 y(recursion,)f(iii)2113 5187 y(16)p eop
%%Trailer
end
userdict /end-hook known{end-hook}if
%%EOF
