
-help	;		A	N	"" | 	"print list of possible options"
-realO	;		A	N	"" | 	"override the turning down of optimization levels"
-help:%s	save_name(&help_pattern,optargs); 	A	N	"" | 	"print list of possible options that contain given string"
-mbig-endian	toggle(&endian,ENDIAN_BIG);	A	f	self "-EB -TARG:endian=big" | 	""
-mlittle-endian	toggle(&endian,ENDIAN_LITTLE); 	A 	f	self "-EL -TARG:endian=lit" | 	""
-mabi=64	;	A	f	self  | 	""
-mlong64	;	A	f	self  | 	""
-mint64	;	A	f	self  | 	""
-mgp64		;		A	a	self | 	""
-show	{show_flag = TRUE; }	A	F,b,i	self | 	"show phases as they are being invoked"
-show1	{show_flag = TRUE; }	A	N	"" | 	""
-show0	{show_flag = TRUE; execute_flag = FALSE;} A	N	"" | 	"show what phases would be called, but don't invoke anything"
-showt	{time_flag = TRUE; }	A	N	"" | 	"show time taken by each phase"
-showm	{memory_flag ++ ; }	A	N	"" | 	""
-Q 	{quiet_flag = FALSE; }	A	N	"" | 	"suppress timing information (g++) "
-version {show_version = TRUE; show_copyright = TRUE; execute_flag = FALSE;} A	N	"" | 	"Show the version of the compiler being used"
-copyright {show_copyright = TRUE; execute_flag = FALSE;} A	N	"" | 	"Show the copyright for the compiler being used"
-dumpversion {dump_version = TRUE; execute_flag = FALSE;} A	N	"" | 	"Show the version of the compiler being used, and nothing else"
-showd	{show_flag = debug = TRUE; execute_flag = FALSE;} A N "" | 	""
-show_defaults	execute_flag=FALSE; 	A N "" | 	""
-v	{show_flag = TRUE; show_version = TRUE;} A	p,a,l	self "-show" | 	"show phases and version as they are being invoked"
-fullwarn toggle(&msglevel,2);		c,C,f,F,a  p	self "-m2" | 	"give more warnings, especially about missing prototypes"
-w	toggle(&msglevel,0);		A	C,a,K	self "-m0" | 	""
-w0	warn_no_longer_supported2(option_name,"-fullwarn");		A	a,l,f "" | 	""
-w1	warn_no_longer_needed(option_name);		A	N	"" | 	""
-w2			;		f	F	self | 	"warnings count as errors"
-w3			;		f	F	self | 	"supress warnings but exit with error status"
-w66			;		f	F	self | 	"turn off F66 incompatibility warnings"
-66			;		f	F	self | 	"issue errors when non-F66 feature used"
-woff*all	toggle(&msglevel,0);		A	N	"-w -m0" | 	"turn off all warnings"
-woff*options		;		A	N	"" | 	"turn off warnings about options"
-woff%d			;		f,F	F,b	"-woff%d" | 	"turn off named warnings"
-diag_suppress%s	;		c,C	p,C	"-diag_suppress%s" | 	""
-diag_remark%s		;		c,C	p,C	"-diag_remark%s" | 	""
-diag_warning%s		;		c,C	p,C	"-diag_warning%s" | 	""
-diag_error%s		;		c,C	p,C	"-diag_error%s" | 	""
-brief_diagnostics	;		C	p	self | 	"issue one-line diagnostic messages"
-V	warn_ignored("-V");		c	p,f,i,b,l	"" | 	""
-V%d	{warn_ignored("-V <version>");}	c	p,f,i,b,l	"" | 	""
-c	last_phase=(((ipa==TRUE)&&(shared==RELOCATABLE))?P_any_ld:earliest_phase(P_any_as,last_phase));  A	N	"" | 	"produce a .o and stop"
-r	toggle(&shared,RELOCATABLE);last_phase=P_any_ld;  A	 l	self | 	"produce a relocatable .o and stop"
-S	last_phase=earliest_phase(P_be,last_phase);	 c,C,f,F N	"" | 	"produce a .s and stop"
-fe	last_phase=earliest_phase(P_any_fe,last_phase);	 c,C,f,F N	"" | 	"stop after the front end is run"
-F	dash_F_option();	 f	N	"" | 	"stop after RATFOR (f77 only)"
-parse	last_phase=earliest_phase(P_any_fe,last_phase);  c,C C	self | 	""
-I%D		;		A	p	"-I%D -include=%D" | 	"add following directory to the include search path list"
-x%s		;		F	F	"-x%s" | 	"Disable various directives in F90"
I-include=%D  ;		f,F     F,K     "-include=%D" | 	""
-I	;		A	N	"-nostdinc" | 	""
I-ivpad	;		c,C,f,F	l	"-ivpad" | 	"inter-variable padding of common blocks"
-nostdinc	nostdinc=TRUE;		A	p	self | 	"no predefined include search path list"
-stdinc 	nostdinc=FALSE;		A	p	"" | 	"predefined include search path list"
-nostdinc++	nostdinc=TRUE;		C	p	self | 	"Do not search for header files in the standard directories specific to C++"
-nostdlib	;	c,C,f,F	l	"-nostartfiles -nodefaultlibs" | 	"no predefined libraries or startfiles"
-objectlist%s	source_kind=S_o;		c,C,f,F	l	"-objectlist %s" | 	"Read the following file to get a list of files to be linked"
I-split_common	;		c,C,f,F	l	"-split_common" | 	"check split COMMON for inconsistencies and fix them"
-LIST:%s	;		A	b,i	"-LIST:%s" | 	"option group to control listing file and contents"
-LD_%s		;		A	l	"-LD_%s" | 	""
-L%D	add_library_dir(optargs);		c,C,f,F	l	"-L%D" | 	"add following directory to the library search path list"
-L		;		c,C,f,F	l	self | 	""
-G		;		c	l	self | 	""
-G%d	toggle(&gnum,optargd);		A	F,b	"-G%d" | 	""
-Gspace%d	;		A	b	"-TENV:Gspace=%d" | 	""
-keep	keep_flag=TRUE;		A	j	self | 	"keep intermediate files"
-save-temps	keep_flag=TRUE;	A	N	"" | 	""
-K	keep_flag=TRUE;		A	N	"" | 	""
-K*		;		A	N	"" | 	""
-KPIC		;		A	a	self | 	""
-Kminabi 	;		c	N	"-abi" | 	""
-Ksd	toggle(&speed,TRUE);		c	N	"" | 	""
-Ksz	toggle(&speed,FALSE);		c	N	"" | 	""
-Kfpe	toggle(&fpe,TRUE);warn_ignored("-Kfpe"); 	c	N	"" | 	""
-Kmau	toggle(&fpe,FALSE);warn_ignored("-Kmau"); 	c	N	"" | 	""
I-cpp_pic	;		A	N	"-D_PIC -D__DSO__" | 	""
-call_shared	toggle(&shared,CALL_SHARED);	A	N	"-TENV:PIC -pic2" | 	"call-shared PIC code"
-shared 	toggle(&shared,DSO_SHARED);	A	l	"-TENV:PIC -pic2 -shared" | 	"dso-shared PIC code"
-non_shared	toggle(&shared,NON_SHARED); 	A	N	"" | 	"compile non-shared (no DSO's)"
-pic1		;		A	N	-TENV:CPIC | 	""
-pic2		;		A	N	-TENV:PIC | 	""
-xgot		;		A	N	"-TENV:large_GOT" | 	""
-multigot	;		A	N	"" | 	""
-Ofast  Process_Ofast("");		A	N	"" | 	"default fast option configuration"
-Ofast=%s Process_Ofast(optargs);		A	N	"" | 	""
-bigp_off toggle(&big_pages,FALSE);  A N "" |     "Disable large pages"
-bigp_on toggle(&big_pages,TRUE);  A N "" |     "Enable large pages"
-fb_phase=%s Process_fb_phase(optargs);        A     N       "" |         "Option needed to tell compile feedback phase "
-fbgen	Gen_feedback=TRUE;		A	N	"" | 	""
-fbuse%s Process_fbuse(optargs);		A	N	"" | 	""
-fbexe%s Process_fbexe(optargs);        A     N       "" | 	""
-fb_xdir%D Process_fb_xdir(optargs);		A	N	"" | 	""
-fb_cdir%D Process_fb_cdir(optargs);		A	N	"" | 	""
-fb_create%s Process_fb_create(optargs);        A     N       "" |         "Option needed for SPEC feedback file generation"
-fb_opt%s Process_fb_opt(optargs);      A     N       "" |         "Option needed for using SPEC feedback files"
-fb_type=%s Process_fb_type(optargs);   A    N     "" |         "Option need for the type of profiles "
-OPT:%s		Process_Opt_Group(optargs); 	A	f,i,b,j "-OPT:%s" | 	"option group to control optimization"
-DEBUG:%s	;		A	F,b,i	"-DEBUG:%s" | 	"option group to debugging options"
-TENV:%s	;		A	F,b,i	"-TENV:%s" | 	"option group to control target environment"
-TARG:%s	Process_Targ_Group(optargs); 	A	F,b,i	"-TARG:%s" | 	"option group to control compilation target"
-SWP:%s		;		A	b	"-SWP:%s" | 	""
-GRA:%s		;		A	b	"-GRA:%s" | 	"option group to control global register allocation"
-GCM:%s		{warning("-GCM group no longer supported");}	N N	"" | 	""
-CG:%s		;		A	b	"-CG:%s" | 	"option group to control code generation"
-PHASE:%s	;		A	b,i	"-PHASE:%s" | 	""
-WOPT:%s	;		A	b,i	"-WOPT:%s" | 	"option group internal-use WOPT options"
-LNO:%s		;		A	b,l	"-LNO:%s" | 	"option group to control loop nest optimization"
-MP:%s		Process_Mp_Group(optargs);		A	N	"" | 	""
-VHO:%s		;		A	F,b	"-VHO:%s" | 	"option group to control vho lowering"
-CLIST:%s	;		c	b	"-PHASE:clist -CLIST:%s" | 	"option group to control C source listing of compiler intermediate"
-FLIST:%s	;		f,F	b	"-PHASE:flist -FLIST:%s" | 	"option group to control Fortran source listing of compiler intermediate"
-clist	;		c	b	"-PHASE:clist -CLIST:=ON" | 	""
-flist	;		f,F	b	"-PHASE:flist -FLIST:=ON" | 	""
-mplist		;		f,F,c	b	"-mplist" | 	""
-PURPLE:%s	;		f	b	"-PHASE:purple -PURPLE:%s" | 	"option group to control problem isolation slicing tool"
-PROMP:next_id=%d ;		f,F,c,C	b	"-PROMP:next_id=%d" | 	""
-PROMP:%s	;		f,F,c,C	b	"-PHASE:prompf -PROMP:%s" | 	""
-IPA:%s	toggle(&ipa,TRUE);		A	i,j	"-IPA:%s" | 	"option group to control interprocedural optimizations"
-LANG:std toggle(&standard_cplusplus,TRUE);  C    F,b,i  "-LANG:std" |         "Use ISO/ANSI standard-conforming C++ language and library"
-LANG:%s	;		c,C,f,F	F,b,i	"-LANG:%s" | 	"option group to control language features"
-INTERNAL:%s	;		c,C,f,F	F,b,i,j	"-INTERNAL:%s" | 	"option group to control features while testing"
-DEFAULT:%s	Process_Default_Group(optargs);		A	N	"" | 	""
-fverify-tree ;           C     f  "-fverify-tree" |         "Run verification routine before tree-to-whirl conversion"
-LMSG:%s	;		A	l	"-LMSG:%s" | 	"option group to control error/warning messages in ld"
-FE:%s		;		A	F	"-FE:%s" | 	""
I-init%s		;		C	l	"-init %s" | 	""
I-fini%s		;		C	l	"-fini %s" | 	""
-B*dynamic	warn_no_longer_supported(option_name);	c	N	"" | 	""
-B*static	warn_no_longer_supported(option_name);	c	N	"" | 	""
-B*symbolic	warn_no_longer_supported(option_name);	c	N	"" | 	""
-C*		;		A	N	"" | 	"C/C++: keep C comments after cpp; f77: runtime subscript checking"
-check_bounds	;		f,F	F	"-DEBUG:subscript_check" | 	"check bounds"
-ffortran-bounds-check	;	f,F	F	"-DEBUG:subscript_check" | 	"check bounds"
-d*y	toggle(&dynamic,TRUE);		c	l	"-dy" | 	""
-d*n	toggle(&dynamic,FALSE);		c	l	"-dn" | 	""
-abi		;		A	a,l	self "-D_ABI_SOURCE -TARG:pure" | 	"generate strict-abi-compliant object files"
-E	last_phase=P_any_cpp; 	A	N	self | 	"run cpp and send result to standard output"
-P		; 	A	p	self | 	""
-M	last_phase=P_any_cpp; 	A	p	self | 	"run cpp and print list of make dependencies"
-MDupdate%s	;		A	p,l	"-MDupdate %s" | 	"update the following file with make dependencies"
-MDtarget%s	;		A	p	"-MDtarget %s" | 	"use the following as the target for make dependencies"
-MDignore%s	;		A	l	"-MDignore %s" | 	""
-nocpp	nocpp_flag=TRUE;first_phase=P_any_fe; 	f,F	f	self | 	"don't do cpp processing"
-cpp  toggle(&use_ftpp,0);first_phase=P_any_cpp; 	A	N	"" | 	""
-J*sfm	warn_ignored(option_name);		c	N	"" | 	""
-o%-	save_name(&outfile,optargs);check_output_name(optargs);cancel_saved_arg(2);  A N "" | 	"put output in following file name rather than a.out"
-onetrip	;		f	F	"-1" | 	"One trip DO loops"
-1		;		f	F	self | 	"One trip DO loops"
-p0	warn_no_longer_supported2(option_name,"speedshop(1)");		A	N	"" | 	""
-p1	warn_no_longer_supported2(option_name,"speedshop(1)");		A	N	"" | 	""
-p	;		A	l	self "-TENV:call_mcount" | 	""
-pg	;		A	l	self "-lm" "-TENV:call_mcount" | 	""
-q*p	warn_no_longer_supported2(option_name,"speedshop(1)");		c	N	"" | 	""
-q*l	warn_no_longer_supported2(option_name,"speedshop(1)");	 c	N	"" | 	""
-Q*y	toggle(&ident,TRUE);warn_ignored(option_name);  c	N	"" | 	""
-Q*n	toggle(&ident,FALSE);warn_ignored(option_name);  c	N	"" | 	""
-purple	warn_no_longer_supported2(option_name,"-PURPLE:=ON");		A	N	"" | 	""
I-cpp_lp32	;		A	N	"-D_MIPS_SZINT=32 -D_MIPS_SZLONG=32 -D_MIPS_SZPTR=32 -D_SIZE_INT=32 -D_SIZE_LONG=32 -D_SIZE_PTR=32" | 	""
I-cpp_lp64	;		A	N	"-D_MIPS_SZINT=32 -D_MIPS_SZLONG=64 -D_MIPS_SZPTR=64 -D_SIZE_INT=32 -D_SIZE_LONG=64 -D_SIZE_PTR=64" | 	""
I-cpp_i64	;		A	N	"-D_ABI_I64 -D_IA64_ARCH=0" | 	""
I-cpp_i32	;		A	N	"-D_ABI_I32 -D_IA64_ARCH=0" | 	""
-mips1	toggle(&isa,ISA_MIPS1);		A	N	"-mips1" "-D__mips=1 -D_MIPS_ISA=1" "-TARG:isa=mips1" | 	"compile for mips1 instruction set"
-mips2	toggle(&isa,ISA_MIPS2);		A	a,l	"-mips2" "-D__mips=2 -D_MIPS_ISA=2" "-TARG:isa=mips2" | 	"compile for mips2 instruction set"
-mips3	toggle(&isa,ISA_MIPS3); 	A	a,l	"-mips3" "-D__mips=3 -D_MIPS_ISA=3" "-TARG:isa=mips3" | 	"compile for mips3 instruction set"
-mips4	toggle(&isa,ISA_MIPS4); 	A	a,l	"-mips4"  "-TARG:isa=mips4" | 	"compile for mips4 instruction set"
-mips64	toggle(&isa,ISA_MIPS64); 	f,F	l	"-mips64"  "-TARG:isa=mips64" | 	"compile for mips64 instruction set"
-n32	toggle(&abi,ABI_N32); 	A	K	"-n32"  "-TARG:abi=n32" | -32	toggle(&abi,ABI_I32); 	A	K	"-32"  "-TARG:abi=pr32" | 	""
-64     toggle(&abi,ABI_64);       A     K,K,M,a      "-64" "-D_ABI64=3 -D_MIPS_SIM=_ABI64 -D_MIPS_FPSET=32 -D_LP64 -Amodel(lp64)" "-TARG:abi=n64" "-mabi=64 -mlong64" |         "compile for 64-bit ABI"
-i32    toggle(&abi,ABI_I32);       A     K,K,M	"-i32" "-D_ILP32 -Amodel(ilp32)" "-TARG:abi=i32 -D__ia64=1" |         ""
-i64     toggle(&abi,ABI_I64);       A     K,K,M	"-i64" "-D_LP64" "-TARG:abi=i64 -D__ia64=1" |         ""
-ia32   toggle(&abi,ABI_IA32);       A     K,K,M	"-ia32" "-D_ILP32 -Amodel(ilp32)" "-TARG:abi=ia32 -D__ia32=1" |         ""
-itanium toggle(&isa,ISA_IA641);	A	N	"-i64" | 	""
I-cpp_nonansi		;		A	N	"-D_LONGLONG" | 	""
I-cpp_nonansi_svr4	;		A	N	"-D_LONGLONG -D_SGI_SOURCE -D_SVR4_SOURCE" | 	""
I-cpp_extensions	;		A	N	"-D__EXTENSIONS__ -D__MATH_HAS_NO_SIDE_EFFECTS" | 	""
I-cpp_krdefs		;		c	N	"-Dunix -Dsgi -DLANGUAGE_C" | 	""
I-cpp_krdefs_linux	;		c,C	N	"-Dunix -Dlinux" | 	""
-xansi	toggle(&ansi,EXTENDED_ANSI);		c	N	"" "-D__INLINE_INTRINSICS"   | 	"extended ansi C"
-X*a	toggle(&ansi,EXTENDED_ANSI);		c	N	"" "-D__INLINE_INTRINSICS"  | 	"extended ansi C"
-ansi	toggle(&ansi,STRICT_ANSI);		c,f,F	p,f	self "-Xansi -D__STRICT_ANSI__" | 	"strict ansi"
-ansiE		;		f,F,c,C	f	self | 	"issue error message for non standard features"
-ansiW		;		f,F,c,C	f	self | 	"issue warning messages for non standard features"
-X*c	toggle(&ansi,STRICT_ANSI);		c	N	"-Xansi -D__STRICT_ANSI__" | 	"strict ansi C"
-cckr	toggle(&ansi,KR_ANSI);		c	N	"-OPT:alias=cckr_default -Xcckr" "-D__INLINE_INTRINSICS" "-Dunix -Dsgi -DLANGUAGE_C" | 	"K&R compatible C"
-X*t	toggle(&ansi,KR_ANSI);		c	N	"-OPT:alias=cckr_default -Xcckr" "-D__INLINE_INTRINSICS"  "-Dunix -Dsgi -DLANGUAGE_C" | 	"K&R compatible C"
-ansiposix	warn_no_longer_supported(option_name); 	c	N	"" | 	""
-std=c89		;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=iso9899:1990	;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=iso9899:199409	;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=c99		;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=c9x		;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=iso9899:1999	;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=iso9899:199x	;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=gnu89		;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=gnu99		;		c,C	p,f	self | 	"-std option for gcc/g++"
-std=gnu9x		;		c,C	p,f	self | 	"-std option for gcc/g++"
I-lang-c		;		c	p	self | 	""
I-lang-c89		;		c	p	self | 	""
I-lang-c++		;		C	p	self | 	""
I-lang-asm		;		a	p	self | 	""
I-Xansi                 ;       c      M     self |         ""
I-Xcckr                 ;       c      M     self |         ""
I-D_LANGUAGE_C		;	c	p	self | 	""
I-DLANGUAGE_C		;	c	p	self | 	""
I-D__EXTENSIONS__ 	;	C,c	p	self | 	""
I-D__INLINE_INTRINSICS	;	C,c	p	self | 	""
I-D__GNUC__	;	C,c	p	self | 	""
I-cpp_cplus 		;	C	N	 "-D_LANGUAGE_C_PLUS_PLUS=1 -D_MODERN_C" "-D_LONGLONG -D_SGI_SOURCE -D_SVR4_SOURCE" | 	""
I-cpp_cplus_linux	;	C	N	"-D_LANGUAGE_C_PLUS_PLUS=1" | 	""
I-D_LANGUAGE_C_PLUS_PLUS=1 ;	C	p	self | 	""
I-xtendefs		;	C	p,C "-D__INLINE_INTRINSICS" "-D__EXTENSIONS__ -D__MATH_HAS_NO_SIDE_EFFECTS" | 	""
I-xtendefs_linux	;	C	p,C "-D__INLINE_INTRINSICS"  | 	""
I-cpp_assembly		;		a	p	"-D_LANGUAGE_ASSEMBLY -DLANGUAGE_ASSEMBLY" | 	""
I-D_LANGUAGE_ASSEMBLY	;		a	p	self | 	""
I-DLANGUAGE_ASSEMBLY	;		a	p	self | 	""
I-Xdo_linesplice	;		A	p	self | 	""
I-cpp_fortran		;		f,F	p	"-D_LANGUAGE_FORTRAN -DLANGUAGE_FORTRAN" | 	""
I-cpp_fortran90		;		F	p	"-D_LANGUAGE_FORTRAN90 -DLANGUAGE_FORTRAN90" | 	""
I-cpp_fortran77		;		f	p	"-D_LANGUAGE_FORTRAN77 -DLANGUAGE_FORTRAN77" | 	""
I-D_LANGUAGE_FORTRAN	;		f,F	p	self | 	""
I-DLANGUAGE_FORTRAN	;		f,F	p	self | 	""
I-cpp_nonansi_f77	;		f	p	"-Dunix -Dsgi -DLANGUAGE_C" "-D_LONGLONG -D_SGI_SOURCE -D_SVR4_SOURCE"  | 	""
-A%s			;		A	p	"-A%s" | 	"add following cpp assertions"
-D%s			;		A	p	"-D%s" | 	"add following macro define"
-U*		;		A	N	"" | 	""
-U%s			;		A	p	"-U%s" | 	"undefine the following macro"
-l%s			;		c,C,f,F	l	"-l%s" | 	"-l<arg> adds library lib<arg> to link list"
-WB,%s			;		c,C,f,F	l	"-WB,%s" | 	"-WB,<arg> passes <arg> to the back-end via ipacom"
-Wl,%s			;		c,C,f,F	l	"-Wl,%s" | 	"pass comma-separated opts to linker as individual opts"
-Wp,%s			;		A	p	"-Wp,%s" | 	"pass comma-separated opts to preprocessor as individual opts"
-W*			; 	A	N	"" | 	"-W<phase>,<arg> sends arg to phase {p=cpp,f=fe,b=be,a=as,l=ld}"
-Y%s	change_phase_path(optargs); 	A	j	"-Y%s" | 	"-Y<phase>,<path> uses path to find phase {p=cpp,f=fe,b=be,a=as,l=ld,i=inline,I=include,S=startup,L=libraries}"
-O*0	toggle(&olevel,0);		A	f,i,b,p	"-O0" | 	"no optimization"
-O*1	toggle(&olevel,1);		A	f,i,b,p	"-O1 -D__OPTIMIZE__" | 	"minimal optimization"
-O	toggle(&olevel,2);		A	f,i,b,p	"-O2 -D__OPTIMIZE__" | 	"same as -O2"
-O*2	toggle(&olevel,2);		A	f,i,b,p	"-O2 -D__OPTIMIZE__" | 	"global optimization"
-O*3	O3_flag=TRUE;toggle(&olevel,3);	A	f,i,b,p	"-O3 -D__OPTIMIZE__" | 	"full optimization"
-Os	toggle(&ospace,TRUE);	A	f,i,b	"-OPT:space" | 	"Optimize for space"
-mspace toggle(&ospace,TRUE);	A	f,i,b	"-OPT:space" | 	""
-g	toggle(&glevel,2);		A	f,i,b	"-g2" | 	"full debug info"
-g0	toggle(&glevel,0);		A	f,i,b	self | 	"no debug info"
-g1	toggle(&glevel,1);		A	f,i,b	self | 	""
-g2	toggle(&glevel,2);		A	f,i,b	self | 	""
-g3	toggle(&glevel,3);		A	f,i,b	self | 	"add some debugging to optimized code"
-gslim	toggle(&glevel,2);		c,C	f,i,b	self | 	"put out slim class debug info"
-gslim0	toggle(&glevel,2);		c,C	f,i,b	self | 	"put out slim class debug info"
-gslim2	toggle(&glevel,2);		c,C	f,i,b	self | 	"put out slim class debug info"
-gdwarf	warn_ignored(option_name);	A	N	"" | 	"DWARF 1 format not supported"
-gdwarf-1	warn_ignored(option_name);	A	N	"" | 	"DWARF 1 format not supported"
-gdwarf-1+	warn_ignored(option_name);	A	N	"" | 	"DWARF 1 format not supported"
-gdwarf-2	toggle(&glevel,2);	A	f,i,b	"-g2" | 	"Produce debugging information in DWARF version 2 format"
-gdwarf-20	toggle(&glevel,0);	A	f,i,b	"-g0" | 	"Produce DWARF 2 debugging information at debug level 0"
-gdwarf-21	toggle(&glevel,1);	A	f,i,b	"-g1" | 	"Produce DWARF 2 debugging information at debug level 1"
-gdwarf-22	toggle(&glevel,2);	A	f,i,b	"-g2" | 	"Produce DWARF 2 debugging information at debug level 2"
-gdwarf-23	toggle(&glevel,3);	A	f,i,b	"-g3 | 	"Produce DWARF 2 debugging information at debug level 3"
-ggdb	toggle(&glevel,2);		A	f,i,b	"-g2" | 	"Produce debugging information for use by GDB"
-gstabs		warn_ignored(option_name);	A	N	"" | 	"stabs format not supported"
-gstabs+	warn_ignored(option_name);	A	N	"" | 	"stabs format not supported"
-gstabs0	warn_ignored(option_name);	A	N	"" | 	"stabs format not supported"
-gstabs1	warn_ignored(option_name);	A	N	"" | 	"stabs format not supported"
-gstabs2	warn_ignored(option_name);	A	N	"" | 	"stabs format not supported"
-gstabs3	warn_ignored(option_name);	A	N	"" | 	"stabs format not supported"
-EB	toggle(&endian,ENDIAN_BIG);		f,F	l	self "-mbig-endian -TARG:endian=big" | 	""
-EL	toggle(&endian,ENDIAN_LITTLE);		f,F	l	self "-mlittle-endian -TARG:endian=lit" | 	""
-meb		;		A	C	self | 	""
-mel		;		A	C	self | 	""
I-m0		;		A	F,b,i	self | 	""
I-m1		;		A	F,b,i	self | 	""
I-m2		;		A	F,b,i	self | 	""
-medusa	add_library_dir("/usr/ia64-sgi-linux/lib/medusa"); A	N	"" | 	""
-signed		toggle(&signed_char,TRUE);		c,C	C	self | 	"characters are signed by default"
-unsigned	toggle(&signed_char,FALSE);		c,C	C	self | 	"character are unsigned by default"
-float		;		c	C	self | 	"don't automatically promote floats to doubles"
-float_const	;		c	C	self | 	"treat floating point constants as floats rather than doubles"
-common		;		c	N	"" | 	"default:  use relaxed ref/def model"
-dollar		;		c,C,p,a	p,C		self | 	""
I-cpp_version	;		A	p	"-D_SGI_COMPILER_VERSION=XXX" | 	""
I-cpp_sgi	;		A	p	"-D__sgi" | 	""
I-cpp_mips	;		A	p	"-Amachine(mips) -Acpu(mips)" | 	""
I-cpp_ia64	;		A	p	"-Amachine(ia64) -Acpu(ia64)" | 	""
I-cpp_ia32	;		A	p	"-Amachine(ia32) -Acpu(ia32)" | 	""
I-cpp_unix	;		A	p	"-D__unix -D__unix__" | 	""
I-cpp_svr3	;		A	p	"-D__SVR3 -D_SYSTYPE_SYSV" | 	""
I-cpp_svr4	;		A	p	"-D_SYSTYPE_SVR4" | 	""
I-cpp_irix	;		A	p	"-Asystem(unix)" | 	""
I-cpp_linux	;		A	p	"-D__linux -D__linux__ -Asystem(linux)" | 	""
I-cpp_cfe	;		c	p	"-D_MODERN_C" | 	""
I-object		;	A	l	"" | 	""
-elf			;	A	N	"-D__ELF__" | 	""
I-_SYSTYPE_SVR4		;	A	l	self | 	""
-no_unresolved 		warn_ignored(option_name); 	A	N	"" | 	""
-ignore_unresolved 	warn_ignored(option_name); 	A	N	"" | 	""
-transitive_link 	warn_ignored(option_name); 	A	N	"" | 	""
-full_transitive_link 	warn_ignored(option_name); 	A	N	"" | 	""
-no_transitive_link 	warn_ignored(option_name); 	A	N	"" | 	""
-useas	toggle(&skip_as,FALSE);		A	N	"" | 	""
-noas	toggle(&skip_as,TRUE);		A	N	"" | 	""
-usegfe		;		c,C	N	"-INTERNAL:return_val=on -INTERNAL:mldid_mstid=on -INTERNAL:return_info=on" | 	""
-usef90		;		F	N	"-INTERNAL:return_val=on -INTERNAL:mldid_mstid=on -INTERNAL:return_info=on" | 	""
-ddopt	warn_no_longer_supported(option_name);  f,F	N "" | 	""
-ZG	warn_no_longer_supported(option_name);  f,F	N "" | 	""
-Nq%d	warn_no_longer_needed(option_name);  f,F	N self | 	""
-Nx%d	warn_no_longer_needed(option_name);  f,F	N self | 	""
-Ns%d	warn_no_longer_needed(option_name);  f,F	N self | 	""
-Nc%d	warn_no_longer_needed(option_name);  f,F	N self | 	""
-Ne%d	warn_no_longer_needed(option_name);  f,F	N self | 	""
-Nl%d	warn_no_longer_needed(option_name);  f,F	N self | 	""
-NC%d	;  f,F	F "-NC%d" | 	"set max # of continuation lines"
-Nn%d	warn_no_longer_needed(option_name);  f,F	N self | 	""
-j	warn_no_longer_supported("-j");  A	N "" | 	""
-smart%s	warn_no_longer_supported2("-smart","-pch");	 C N "" | 	""
I-cvs		;		f,F	F	self | 	""
I-cvs,%D	;		f,F	F	"-cvs,%D" | 	""
I-cvs_nosrc	;		f,F	F	self | 	""
I-cvs_nosrc,%D	;		f,F	F	"-cvs_nosrc,%D" | 	""
-automatic	toggle(&isstatic,1);		f,F	N	"" | 	""
-auto_use%s	;			F	F	"-auto_use=%s" | 	"Act as if a USE statement is specified in every PU"
-ftpp		toggle(&use_ftpp,1); 	F	N	"" | 	""
-macro_expand	expand_ftpp_macros=TRUE; 	F	N	""	 | 	"expand macros everywhere in ftpp"
-static-data		;		f,F	F	self | 	"treat local data as static"
-static		;		c,C,f,F	l	self	 | 	""
-static_threadprivate		;		f,F	F	self | 	"treat locals as static but not shared among multiple threads"
-dumpspecs	warn_ignored(option_name);	A	f	self | 	""
-backslash	first_phase=P_any_fe;		f	F	self | 	"treat backslash as normal character rather than an escape"
-noexpopt	;		f,F	b	"-OPT:fast_exp=no" | 	"Don't optimize exponentiation operations"
-keepdollar	;		f	F	self | 	"Treat $ as a normal last character in symbol names"  
-chararg1	;		f	F	self | 	""
-nof77	;		f	F	self | 	""
-ff77	warn_ignored(option_name);	f,F	N	"" | 	"Use idiomatic UNIX FORTRAN 77"
-ff90	;		f,F	N	"" | 	"Allow Fortran 90 constructs"
-fsecond-underscore	;		f,F	F	self | 	"Append a second underscore to symbols that already contain an underscore"
-fno-second-underscore	;		f,F	F	self | 	"Don't append a second underscore to symbols that already contain an underscore"
-funderscoring	;		f,F	F	self | 	"Append underscores to symbols"
-fno-underscoring	;		f,F	F	self | 	"Don't append underscores to symbols"
-fcheck-new	;	C	C	self | 	"Check result of operator new for NULL"
-fno-check-new	;	C	C	self | 	"Do not check result of operator new for NULL"
-fuse-cxa-atexit	;	C	C	self | 	"Register static destructors with __cxa_atexit instead of atexit"
-fno-use-cxa-atexit	;	C	C	self | 	"Register static destructors with atexit instead of __cxa_atexit"
-frtti	;	C	C	self | 	"Generate runtime type information"
-fno-rtti	;	C	C	self | 	"Do not generate runtime type information"
-fimplicit-templates	;	C	C	self | 	"Emit code for non-inline templates instantiated implicitly"
-fno-implicit-templates	;	C	C	self | 	"Never emit code for non-inline templates instantiated implicitly"
-fimplicit-inline-templates	;	C	C	self | 	"Emit code for inline templates instantiated implicitly"
-fno-implicit-inline-templates	;	C	C	self | 	"Never emit code for inline templates instantiated implicitly"
-varargs	;		f	F	self | 	"MATRA varargs"
-nocode last_phase=earliest_phase(P_any_fe,last_phase);  f,F F   self |         "do not generate any intermediate code from front-end"
-vms	warn_no_longer_supported2(option_name,"-vms_cc"); 	f,F	N	self | 	""
-vms_cc		;		f	F	self | 	""
-old_rl		;		f	F	self | 	""
-bytereclen	;		f	F	"-old_rl" | 	""
-vms_stdin		;		f	F	self | 	""
-vms_endfile		;		f	F	self | 	""
-vms_library		;		f	F	self | 	""
-usefpidx		;		f	F	self | 	""
-cray_directives	;		f,F	N	self | 	""
-mipslibs	toggle(&use_mipslibs,TRUE);toggle(&use_craylibs,FALSE);		f	N	"" | 	""
-craylibs	toggle(&use_craylibs,TRUE);toggle(&use_mipslibs,FALSE);		f	N	"" | 	""
-cray_mp    toggle(&mpkind,CRAY_MP);	 f,F F self  |     "enable Cray micro-tasking directives"
-dsm			;		f,F,c,C	F,b,i	self | 	""
-mp		toggle(&mpkind,NORMAL_MP);		f,F,c,C	F	self  | 	""
-dsm_clone		;		A	i,b,d	self | 	""
-dsm_check		;		A	b	self | 	""
-dsm_recompile		;		A	F,C,b,i	self | 	""
-memsim			;		A	N	"-LNO:mem_sim=TRUE -lmemsim" | 	""
-memctr			;		A	b	"-memctr" | 	""
-mp_keep warn_no_longer_supported2(option_name,"-CLIST/-FLIST"); 	f,F,c	N	"" | 	""
-mpio			;		f,F	b	self | 	""
-mp_schedtype=%s	;		f,F	K,F 	"-mp_schedtype=%s" | 	""
-chunk=%d		;		f,F	K,F	"-chunk=%d" | 	"Set the MP chunksize"
-mp_chunk=%d		;		f,F	F	"-mp_chunk=%d" | 	""
-mp_use_locks	warn_no_longer_needed(option_name);  f,F N "" | 	""
-mp_use_copy	warn_no_longer_needed(option_name);  f,F N "" | 	""
-listing	keep_listing=TRUE;		f,F	F,K	"" | 	"keep the listing file"
-apo		auto_parallelize=TRUE;		c,C,f,F	b	"-pfa" | 	""
-apo*list	auto_parallelize=TRUE;keep_list=TRUE;		c,C,f,F	b	"-pfa -LNO:prompl" | 	""
-apo*keep	auto_parallelize=TRUE;keep_list=keep_mp=TRUE;Process_Promp();		c,C,f,F	b	"-pfa -LNO:prompl" | 	""
-pfa		auto_parallelize=TRUE;		c,C,f,F	b	"-pfa" | 	""
-pfa*list	auto_parallelize=TRUE;keep_list=TRUE; 	c,C,f,F	b	"-pfa -LNO:prompl" | 	""
-pfa*keep	auto_parallelize=TRUE;keep_list=keep_mp=TRUE;Process_Promp();		c,C,f,F	b	"-pfa -LNO:prompl" | 	""
-pfa,%s		{auto_parallelize=TRUE; warning("options after -pfa, are ignored; should just use -pfa");}		c,C,f,F	b	"-pfa" | 	""
-pfa2	warn_no_longer_supported2(option_name,"-pfa");  A N "" | 	""
I-lo=ocktl	;		f,F	K	self | 	""
-i2	toggle(&iflag,1);		f	F	self | 	"make integer and logical quantities short (2 bytes)"
-noi4	toggle(&iflag,1);		f	F	self | 	"make integer and logical quantities short (2 bytes)"
-i4	toggle(&iflag,2);		f,F	F	self | 	"make integer and logical quantities long (4 bytes)"
-i8	toggle(&iflag,3);		f,F	F	self | 	"make integer and logical quantities long long (8 bytes)"
-r4	toggle(&rflag,1);		f,F	F	self | 	"use REAL*4 and COMPLEX*8 as the defaults for real and complex" 
-r8	toggle(&rflag,2);		f,F	F	self | 	"use REAL*8 and COMPLEX*16 as the defaults for real and complex" 
-r8const 		;		f	F	self | 	""
-d8	toggle(&dflag,1);		f,F	F	self | 	"use double=8 and dcomplex=16"
-d16	toggle(&dflag,2);		f,F	F	self | 	"use double=16 and dcomplex=32"
-d16const 		;		f	F	self | 	""
-dump_input 		;		f	F	self | 	""
-extend_source fortran_line_length=132;		f,F	F	self "-scan=132" | 	"make each source line 132 bytes long"
-d_lines		;		f,F	F	self | 	"compile lines with a D in column 1"
-pad_char_literals		;		F	F	self | 	"blank pad character literal actual arguments to word boundary"
-expand_include		;		f,F	F	self | 	""
-noextend_source fortran_line_length=72;		f,F	F	self "-scan=72" | 	"sets the source statement length to 72 columns"
-col72	fortran_line_length=72;		f,F	F	self "-scan=72" | 	"sets the source statement length to 72 columns"
-col80	fortran_line_length=80;		F	F	self "-scan=80" | 	"sets the source statement length to 80 columns"
-col120	fortran_line_length=120; 	f,F	F	self "-scan=120" | 	"sets the source statement length to 120 columns"
I-scan%s		;		f,F	K	self | 	""
-freeform	toggle(&fortran_form,2);		F	F	"" | 	"sets Fortran 90 free form source statement formatting"
-fixedform	toggle(&fortran_form,1);		F	F	"" | 	"sets Fortran 90 fixed form source statement formatting"
-default64 		;	 	F	 F 	self | 	"Cray compatibility mode for F90"
-INLINE:%s	Process_Inline();	       A     j	"-INLINE:%s" | 	"specify inline processing option group"
-INLINE		Process_Inline();	       A     N    "" | 	"request inline processing"
-inline		Process_Inline();		c,C	N	"-INLINE" | 	"request inline processing"
-noinline	Process_Inline();		c,C	N	"-INLINE:=OFF" | 	"suppress inline processing"
-nobool	;		C 	C	self | 	"disallow bool keyword"
-fprofile-arcs	Process_Profile_Arcs();		A	b	"-OPT:profile_arcs=true" | 	""
-ftest-coverage	Process_Test_Coverage();	A	b	"-CG:test_coverage=true" | 	"turn on test coverage"
-m64	;	A	N	""	 | 	""
-noisam		warn_no_longer_supported(option_name);  f,F N "" | 	""
-Olimit%d	warn_no_longer_supported2(option_name,"-OPT:Olimit=n");  A N self | 	""
-bestGnum	warn_no_longer_supported(option_name);  A N "" | 	""
-volatile	warn_no_longer_supported(option_name);  c,C N "" | 	""
-acpp		warn_no_longer_needed(option_name);  c,C N "" | 	""
-oldcpp		warn_no_longer_supported(option_name);  c,C N "" | 	""
-pch		;		c,C	C	self | 	""
-pch_dir%s		;		c,C	C	"-pch_dir%s" | 	""
-prototypes	warn_no_longer_supported2(option_name,"-fullwarn");  c,C N "" | 	""
-noprototypes	warn_no_longer_supported(option_name);  c,C N "" | 	""
-pedantic		;		c,C	C	self | 	""
-use_readonly_const	;		c,C,f,F	C	self | 	""
-use_readwrite_const	;		c,C,f,F	C	self | 	""
-change_const		;		f,F	N	"" | 	""
-noalias	warn_no_longer_supported2(option_name,"-OPT:alias=restrict");  c N "" | 	""
-strictIEEE	warn_no_longer_supported2(option_name,"-OPT:IEEE_comparisons");  f N "" | 	""
-wlint,%s	warn_nyi("-wlint");		c	C	"" | 	""
-wlint		warn_nyi("-wlint");		c	C	"" | 	""
-sopt,%s warn_no_longer_supported(option_name);	 c,f,F	N	"" | 	""
-sopt	warn_no_longer_supported(option_name);	 c,f,F	N	"" | 	""
-pca		auto_parallelize=TRUE;		c,C,f,F	b	"-pfa" | 	""
-pca*list	auto_parallelize=TRUE;keep_list=TRUE; 	c,C,f,F b "-pfa -LNO:prompl" | 	""
-pca*keep	auto_parallelize=TRUE;keep_list=keep_mp=TRUE;Process_Promp();	 c,f,F b	"-pfa -LNO:prompl" | 	""
-pca,%s		{auto_parallelize=TRUE; warning("options after -pca, are ignored; should just use -pca");}	c,C,f,F	b	"-pfa" | 	""
-jalr		;		A	N	"-TARG:force_jalr" | 	""
-align8		;		c,C,f	f,b	self | 	"align data in common blocks to 8-bit boundaries"
-align16	;		c,C,f	f,b	self | 	"align data in common blocks to 16-bit boundaries"
-align32	;		c,C,f,F	f,b	self | 	"align data in common blocks to 32-bit boundaries"
-align64	;		c,C,f,F	f,b	self | 	"align data in common blocks to 64-bit boundaries"
-align128	;		c,C,f	f,b	self | 	"align data in common blocks to 128-bit boundaries"
-u*		;		A	N	"" | 	""
I-u%s		;		c,C	l	"-u %s" | 	""
-ignore_minor	;		c,C,f,F	l	self | 	""
-require_minor	;		c,C,f,F	l	self | 	""
-aoutkeep	;		c,C,f,F	l	self | 	""
-exact_version	;		c,C,f,F	l	self | 	""
-set_version%s	;		c,C,f,F	l	"-set_version %s" | 	""
-soname%s	;		c,C,f,F	l	"-soname %s" | 	""
-update_registry%s	; 	c,C,f,F	l	"-update_registry %s" | 	""
-check_registry%s	; 	c,C,f,F	l	"-check_registry %s" | 	""
-guarantee_init	;		c,C,f,F	l	self | 	""
-guarantee_start_init	; 	c,C,f,F	l	self | 	""
-ignore_version	;		c,C,f,F	l	self | 	""
-jmpopt		;		c,C,f,F	l	self | 	""
-no_library_replacement	; 	c,C,f,F	l	self | 	""
-rdata_writable	; 	c,C,f,F	l	self | 	""
-rdata_shared	; 	c,C,f,F	l	self | 	""
-no_rqs	; 	c,C,f,F	l	self | 	""
-force_load	; 	c,C,f,F	l	self | 	""
-delay_load	; 	c,C,f,F	l	self | 	""
-default_delay_load	; 	c,C,f,F	l	self | 	""
-exclude%s	;		c,C,f,F	l	"-exclude %s" | 	""
-no_archive	; 	c,C,f,F	l	self | 	""
-quickstart_info	; 	c,C,f,F	l	self | 	""
-no_quickstart_info	; 	c,C,f,F	l	self | 	""
-info	; 	c,C,f,F	l	self | 	""
-no_info	; 	c,C,f,F	l	self | 	""
-s		;		c,C,f,F	l	self | 	""
-e%s		;		c,C,f,F	l	"-e %s" | 	""
-y%s		;		c,C,f,F	l	"-y %s" | 	""
-D%x		;		c,C,f,F	l	"-D %d" | 	""
-T%x		;		c,C,f,F	l	"-T %d" | 	""
-Xnobsschange	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xnosortbss	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xsortbss	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xndblock%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xblock%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xblockrange%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xlocaldata%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xndlocaldata%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xalignbss%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xnoalignbss%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xcachemisalign	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xcachesize%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xcachelinesize%s warn_no_longer_supported(option_name);  A	N self | 	""
-Xdefmovemax%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xsetalign%s	warn_no_longer_supported(option_name);	 A	N self | 	""
-Xdebug		warn_no_longer_supported(option_name);	 A	N self | 	""
-n		;		c,C,f,F	l	self | 	""
-all		;		c,C,f,F	l	--whole-archive | 	""
-none		;		c,C,f,F	l	self | 	""
-notall		;		c,C,f,F	l	--no-whole-archive | 	""
-exports	;		c,C,f,F	l	self | 	""
-exported_symbol%s	;		c,C,f,F	l	"-exported_symbol %s" | 	""
-exports_file%s	;		c,C,f,F	l	"-exports_file %s" | 	""
-hides		;		c,C,f,F	l	self | 	""
-hidden_symbol%s	;		c,C,f,F	l	"-hidden_symbol %s" | 	""
-hides_file%s	;		c,C,f,F	l	"-hides_file %s" | 	""
-warn_unused	;		c,C,f,F	l	self | 	""
-dont_warn_unused	;		c,C,f,F	l	self | 	""
-rpath%s	;		c,C,f,F	l	"-rpath %s" | 	""
--whole-archive		;	c,C,f,F	l	self | 	""
--no-whole-archive	;	c,C,f,F	l	self | 	""
-avoid_gp_overflow	;		A	N	"-G0 -xgot -TENV:large_GOT" | 	""
-cfront		;		C	C	self | 	"cfront-compatible"
-anach		;		C	C	self | 	"allow anachronisms"
-nofilt	warn_ignored(option_name);	 	C	N	"" | 	""
-demangle	;		C	l	self | 	""
-auto_include 	;		C	N	"" | 	""
-no_auto_include ;		C	C	"-no_implicit_template_inclusion" | 	""
I-no_implicit_template_inclusion	;		C	C	self | 	""
-prelink	;		C	N	"" | 	"use prelinker (default)"
-no_prelink	prelink_flag=FALSE;		C	C	self | 	"do not use prelinker (i.e. instantiate all templates immediately)"
-pta		;		C	N	"-template_all" | 	""
-ptall		;		C	N	"-template_all" | 	""
-pte		;		C	N	"" | 	""
-ptnone		;		C	N	"" | 	""
-ptused		;		C	N	"-template_used" | 	""
I-template_all		;		C	C	self | 	""
I-template_used		;		C	C	self | 	""
-ipa	toggle(&ipa,TRUE);		A	j	self | 	"Perform interprocedural analysis and optimization"
-IPA	toggle(&ipa,TRUE);		A	N	"-ipa" | 	"Perform interprocedural analysis and optimization"
-R*		;		A	N	"" | 	"pass flags to RATFOR"
-m	run_m4=TRUE;		f	N	"" | 	"run m4 on each RATFOR source"
-framepointer	warn_no_longer_supported2(option_name,"-TENV:large_stack");  A	N "" | 	""
-trapuv 		;		c,C,f,F	b	"-DEBUG:trap_uninitialized" | 	"trap uninitialized variables"
-H	;		c,C,a	p	self | 	"print name of each header file used"
-t%s	warn_no_longer_supported2(option_name,"-Y");		A	N	self | 	""
-h%s	warn_no_longer_supported2(option_name,"-Y");		A	N	self | 	""
-B%s	warn_no_longer_supported2(option_name,"-Y");		A	N	self | 	""
-ko%s	warn_no_longer_supported(option_name);		A	N	self | 	""
-nokpicopt	warn_no_longer_supported(option_name);		A	N	"" | 	""
-kpicopt	warn_no_longer_supported(option_name);		A	N	"" | 	""
-k%s	warn_no_longer_supported(option_name);		A	N	self | 	""
-cord	toggle(&cordflag,TRUE);		A	N	"" | 	""
-feedback*%s	add_string(feedback_files,optargs);		A	N	"" | 	""
-fb%s	save_name(&internal_fb_file,optargs);		A	N	"" | 	""
-nodeflib	;			A	N	"" | 	""
-r4000          toggle(&proc,4);  A     N    "-TARG:proc=r4000" |         ""
-r5000          toggle(&proc,5);  A     N    "-TARG:proc=r5000" |         ""
-r7000          toggle(&proc,5);  A     N    "-TARG:proc=r5000" |         ""
-r8000          toggle(&proc,8);  A     N    "-TARG:proc=r8000" |         ""
-r10000         toggle(&proc,10);        A     N    "-TARG:proc=r10000" |         ""
-r12000         toggle(&proc,10);        A     N    "-TARG:proc=r10000" |         ""
-r14000         toggle(&proc,10);        A     N    "-TARG:proc=r10000" |         ""
-r16000         toggle(&proc,10);        A     N    "-TARG:proc=r10000" |         ""
I-exp1		toggle(&proc,31);        A     N    "-TARG:proc=exp1" |         ""
I-exp2		toggle(&proc,31);        A     N    "-TARG:proc=exp2" |         ""
I-exp3		toggle(&proc,31);        A     N    "-TARG:proc=exp3" |         ""
-		read_stdin=TRUE;	A	p	"" | 	""
--		check_dashdash();	A	N	"" | 	""
-ignore_suffix	ignore_suffix=TRUE;	A	N	"" | 	"ignore source suffix when determining compiler language"
-cif    keep_cif=TRUE;       F,c,C	f      self |         ""
-cif=%d 	;	c,C	C	"-cif=%d" |         ""
-ar	;		A	N	"" | 	"create an archive (instead of a shared object or executable) using ar"
-experimental warn_no_longer_supported(option_name); 	C	N | 	"Experimental C++ frontend that was supported in 7.1 release"
-promp	;	 	f,F,c,C	 b	"-PHASE:prompf -PROMP:=on" | 	""
-generate_instantiation_info ;  C	C    self | 	"Internal option - Used by the C++ prelinker to the frontend"
-pipe	;		A	N	"" | 	""
--help	;		A	N	"" | 	"print list of possible options"
-flang-isoc9x	;		c,C	f	self | 	""
-fallow-single-precision	;		c,C	f	self | 	"Do not promote floats to double if using -traditional"
-fcond-mismatch	;		c,C	f	self | 	""
-fno-cond-mismatch	;		c,C	f	self | 	"Do not allow different types as args of ? operator"
-fasm	;		c,C	f	self | 	""
-fms-extensions	;		c,C	f	self | 	"Accept broken MFC extensions without warning"
-fno-asm	;		c,C	f	self | 	"Do not recognise the 'asm' keyword"
-fbuiltin	toggle(&fbuiltin,1);		c,C	N	self | 	""
-fno-builtin	toggle(&fbuiltin,0);		c,C	N	self | 	"Do not recognise any built in functions"
-fmath-errno	toggle(&fmath_errno,1);		c,C	N	self | 	""
-fno-math-errno	toggle(&fmath_errno,0);		c,C	N	self | 	"Do not set ERRNO after calling math functions that are executed with a single instruction"
-ffreestanding	;		c,C	f	self | 	""
-fno-freestanding	;		c,C	f	self | 	""
-fhosted	;		c,C	f	self | 	""
-fno-hosted	;		c,C	f	self | 	""
-fsigned-bitfields	;		c,C	f	self | 	""
-fno-signed-bitfields	;		c,C	f	self | 	""
-fsigned-char	;		c,C	f	self  | 	"Make 'char' be signed by default"
-fno-signed-char	;	c,C	f	self "-D__CHAR_UNSIGNED__" | 	""
-funsigned-bitfields	;		c,C	f	self | 	"Make bitfields by unsigned by default"
-fno-unsigned-bitfields	;		c,C	f	self | 	""
-funsigned-char	;		c,C	f	self "-D__CHAR_UNSIGNED__" | 	"Make 'char' be unsigned by default"
-fno-unsigned-char	;	c,C	f	self | 	""
-fwritable-strings	;		c,C	f	self | 	"Attempt to support writable-strings K&R style C"
-fno-writable-strings	;		c,C	f	self | 	""
-ftraditional	;		c,C	f	self | 	""
-fno-traditional ;		c,C	f	self | 	""
-fnotraditional	;		c,C	f	self | 	""
-traditional	;		c,C	p	self | 	"Attempt to support traditional K&R style C"
-no-traditional	;		c,C	f	self | 	""
-traditional-cpp	;		c,C	N	"-traditional" | 	""
-trigraphs	;		c,C	p	self | 	""
-syntax-only	;		c,C	f	self | 	""
-pedantic-errors	;		c,C	f	self | 	"Issue warnings needed by strict compliance to ANSI C"
-W	;		c,C	f	self | 	"Enable extra warnings"
-Wall	;		c,C	f	self | 	"Enable most warning messages"
-Waggregate-return	;		c,C	f	self | 	"Warn about returning structures, unions or arrays"
-Wno-aggregate-return	;		c,C	f	self | 	"Do not warn about returning structures, unions or arrays"
-Wbad-function-cast	;		c,C	f	self | 	"Attempt to support writable-strings K&R style C"
-Wno-bad-function-cast	;		c,C	f	self | 	"Do not warn when a function call is cast to a non-matching type"
-Wcast-align	;		c,C	f	self | 	"Warn about pointer casts which increase alignment"
-Wno-cast-align	;		c,C	f	self | 	"Do not warn about pointer casts which increase alignment"
-Wcast-qual	;		c,C	f	self | 	"Warn about casts which discard qualifiers"
-Wno-cast-qual	;		c,C	f	self | 	"Do not warn about casts which discard qualifiers"
-Wchar-subscripts	;		c,C	f	self | 	"Warn about subscripts whose type is 'char'"
-Wno-char-subscripts	;		c,C	f	self | 	"Do not warn about subscripts whose type is 'char'"
-Wcomment	;		c,C	f	self | 	"Warn if nested comments are detected"
-Wno-comment	;		c,C	f	self | 	"Do not warn if nested comments are detected"
-Wconversion	;		c,C	f	self | 	"Warn about possibly confusing type conversions"
-Wno-conversion	;		c,C	f	self | 	"Do not warn about possibly confusing type conversions"
-Werror		;		c,C	f	self | 	"Make all warnings into errors"
-Wno-error	;		c,C	f	self | 	"Do not make all warnings into errors"
-Wformat	;		c,C	f	self | 	"Warn about printf format anomalies"
-Wno-format	;		c,C	f	self | 	"Do not warn about printf format anomalies"
-Wid-clash%d	;		c,C	f	self | 	"Warn if 2 identifiers have the same first <num> chars"
-Wno-id-clash%d	;		c,C	f	self | 	"Do not warn if 2 identifiers have the same first <num> chars"
-Wimplicit	;		c,C	f	self | 	"Warn about implicit declarations of functions or variables"
-Wno-implicit	;		c,C	f	self |  	"Do not warn about implicit declarations of functions or variables"
-Wimplicit-int	;		c,C	f	self | 	"Warn when a declaration does not specify a type"
-Wno-implicit-int	;		c,C	f	self | 	"Do not warn when a declaration does not specify a type"
-Wimplicit-function-declaration	;		c,C	f	self | 	"Warn when a function is used before being declared"
-Wno-implicit-function-declaration	;		c,C	f	self | 	"Do not warn when a function is used before being declared"
-Werror-implicit-function-declaration	;		c,C	f	self | 	"Give an error when a function is used before being declared"
-Wimport	;		c,C	f	self | 	"Warn about the use of the #import directive"
-Wno-import	;		c,C	f	self | 	"Do not warn about the use of the #import directive"
-Winline	;		c,C	f	self | 	"Warn if a function declared as inline cannot be inlined"
-Wno-inline	;		c,C	f	self | 	"Do not warn if a function declared as inline cannot be inlined"
-Wlarger-than-%d	;		c,C	f	self | 	"Warn if an object is larger than <number> bytes"
-Wno-larger-than-%d	;		c,C	f	self | 	"Do not warn if an object is larger than <number> bytes"
-Wlong-long	;		c,C	f	self | 	"Warn if the long long type is used"
-Wno-long-long	;		c,C	f	self | 	"Do not warn if the long long type is used"
-Wmain	;		c,C	f	self | 	"Warn about suspicious declarations of main"
-Wno-main	;		c,C	f	self | 	"Do not warn about suspicious declarations of main"
-Wmissing-braces	;	c,C	f	self | 	"Warn about possibly missing braces around initialisers"
-Wno-missing-braces	;	c,C	f	self | 	"Do not warn about possibly missing braces around initialisers"
-Wmissing-declarations	;		c,C	f	self | 	"Warn about global funcs without previous declarations"
-Wno-missing-declarations	;		c,C	f	self | 	"Do not warn about global funcs without previous declarations"
-Wmissing-noreturn	;		c,C	f	self | 	"Warn about functions that are candidates for 'noreturn' attribute"
-Wno-missing-noreturn	;		c,C	f	self | 	"Do not warn about functions that are candidates for 'noreturn' attribute"
-Wnonnull	;		c,C	f	self | 	"Warn when passing null to functions requiring non-null pointers"
-Wmissing-prototypes	;		c,C	f	self | 	"Warn about global funcs without prototypes"
-Wno-missing-prototypes	;		c,C	f	self | 	"Do not warn about global funcs without prototypes"
-Wmultichar	;		c,C	f	self | 	"Warn if a multicharacter constant is used"
-Wno-multichar	;		c,C	f	self | 	"Do not warn if a multicharacter constant is used"
-Wnested-externs	;		c,C	f	self | 	"Warn about externs not at file scope level"
-Wno-nested-externs	;		c,C	f	self | 	"Do not warn about externs not at file scope level"
-Wparentheses	;		c,C	f	self | 	"Warn about possible missing parentheses"
-Wno-parentheses	;		c,C	f	self | 	"Do not warn about possible missing parentheses"
-Wpointer-arith	;		c,C	f	self | 	"Warn about function pointer arithmetic"
-Wno-pointer-arith	;		c,C	f	self | 	"Do not warn about function pointer arithmetic"
-Wredundant-decls	;		c,C	f	self | 	"Warn about multiple declarations of the same object"
-Wno-redundant-decls	;		c,C	f	self | 	"Do not warn about multiple declarations of the same object"
-Wreturn-type	;		c,C	f	self | 	"Warn when a function return type defaults to int"
-Wno-return-type	;		c,C	f	self | 	"Do not warn when a function return type defaults to int"
-Wshadow	;		c,C	f	self | 	"Warn when one local variable shadows another"
-Wno-shadow	;		c,C	f	self | 	"Do not warn when one local variable shadows another"
-Wsign-compare	;		c,C	f	self | 	"Warn about signed/unsigned comparisons"
-Wno-sign-compare	;		c,C	f	self | 	"Do not warn about signed/unsigned comparisons"
-Wstrict-prototypes	;		c,C	f	self | 	"Warn about non-prototyped function decls"
-Wno-strict-prototypes	;		c,C	f	self | 	"Do not warn about non-prototyped function decls"
-Wswitch	;		c,C	f	self | 	"Warn when a switch statement is incorrectly indexed with an enum"
-Wswitch-default	;		c,C	f	self | 	"Warn when a switch statement has no default"
-Wswitch-enum	;		c,C	f	self | 	"Warn when a switch statement is missing a case for an enum member"
-Wno-switch	;		c,C	f	self | 	"Do not warn when a switch statement is incorrectly indexed with an enum"
-Wtraditional	;		c,C	f	self | 	"Warn about constructs whoes meaning change in ANSI C"
-Wdeclaration-after-statement	;		c	f	self | 	"Warn about declarations after statements (pre-C99)"
-Wno-traditional	;		c,C	f	self | 	"Do not warn about constructs whoes meaning change in ANSI C"
-Wtrigraphs	;		c,C	f	self | 	"Warn when trigraphs are encountered"
-Wno-trigraphs	;		c,C	f	self | 	"Do not warn when trigraphs are encountered"
-Wundef	;		c,C	f	self | 	"Warn if an undefined identifier appears in a #if directive"
-Wno-undef	;		c,C	f	self | 	"Do not warn if an undefined identifier appears in a #if directive"
-Wuninitialized	;		c,C	f	self | 	"Warn about unitialized automatic variables"
-Wno-uninitialized	;		c,C	f	self | 	"Do not warn about unitialized automatic variables"
-Wunknown-pragmas	;		c,C	f	self | 	"Warn when an unknown #pragma directive is encountered"
-Wno-unknown-pragmas	;		c,C	f	self | 	"Do not warn when an unknown #pragma directive is encountered"
-Wunused	;		c,C	f	self | 	"Warn when a variable is unused"
-Wno-unused	;		c,C	f	self | 	"Do not warn when a variable is unused"
-Wwrite-strings	;		c,C	f	self | 	"Mark strings as 'const char *'"
-Wno-write-strings	;		c,C	f	self | 	"Do not mark strings as 'const char *'"
-Wdeprecated		;		c,C	p	self | 	"Announce deprecation of compiler features"
-Wno-deprecated		;		c,C	p	self | 	"Don't announce deprecation of compiler features"
-Wctor-dtor-privacy	;		C	p	self | 	"Warn when all constructors/destructors are private"
-Wno-ctor-dtor-privacy	;		C	p	self | 	"Do not warn when all constructors/destructors are private"
-Wdiv-by-zero	;		c,C	f	self | 	"Warn about compile-time integer division by zero"
-Wno-div-by-zero	;		c,C	f	self | 	"Suppress warnings about compile-time integer division by zero"
-Wendif-labels	;		c,C	p	self | 	"Warn if #if or #endif is followed by text"
-Wno-endif-labels	;		c,C	p	self | 	"Do not warn if #if or #endif is followed by text"
-Weffc++	;		C	f	self | 	"Warn on `Effective C++' style violations"
-Wno-effc++	;		C	f	self | 	"Do not warn on `Effective C++' style violations"
-Wfloat-equal	;		c,C	f	self | 	"Warn if floating point values are compared for equality"
-Wno-float-equal	;		c,C	f	self | 	"Do not warn if floating point values are compared for equality"
-Wformat-nonliteral	;		c,C	f	self | 	"If -Wformat, warn if format string is not a string literal"
-Wno-format-nonliteral	;		c,C	f	self | 	"Do not warn if format string is not a string literal"
-Wformat-security	;		c,C	f	self | 	"If -Wformat, warn on potentially insecure format functions"
-Wno-format-security	;		c,C	f	self | 	"Do not warn on potentially insecure format functions"
-Wmissing-format-attribute	;		c,C	f	self | 	"If -Wformat, warn on candidates for `format' attributes"
-Wno-missing-format-attribute	;		c,C	f	self | 	"Do not warn on candidates for `format' attributes"
-Wno-deprecated-declarations	;		c,C	f	self | 	"Do not warn about deprecated code"
-Wno-format-extra-args	;		c,C	f	self | 	"Do not warn about extra arguments to printf-like functions"
-Wno-format-y2k	;		c,C	f	self | 	"Do not warn about `strftime' formats that yield two-digit years"
-Wno-globals	;		c,C	f	self | 	"Do not warn about local/global variable inconsistencies"
-Wno-non-template-friend	;		C	f	self | 	"Do not warn about friend functions declared in templates"
-Wno-pmf-conversions	;		C	f	self | 	"Do not warn about converting PMFs to plain pointers"
-Wnon-virtual-dtor	;		C	f	self | 	"Warn when a class declares a dtor that should be virtual"
-Wno-non-virtual-dtor	;		C	f	self | 	"Do not warn when a class declares a dtor that should be virtual"
-Wold-style-cast	;		C	f	self | 	"Warn when a C-style cast to a non-void type is used"
-Wno-old-style-cast	;		C	f	self | 	"Do not warn when a C-style cast to a non-void type is used"
-Woverloaded-virtual	;		C	f	self | 	"Warn when a function declaration hides virtual functions"
-Wno-overloaded-virtual	;		C	f	self | 	"Do not warn when a function declaration hides virtual functions"
-Wpacked	;		c,C	f	self | 	"Warn when packed attribute of a struct has no effect"
-Wno-packed	;		c,C	f	self | 	"Do not warn when packed attribute of a struct has no effect"
-Wpadded	;		c,C	f	self | 	"Warn when padding is included in a struct"
-Wno-padded	;		c,C	f	self | 	"Do not warn when padding is included in a struct"
-Wreorder	;		C	f	self | 	"Warn when reordering member initializers"
-Wno-reorder	;		C	f	self | 	"Do not warn when reordering member initializers"
-Wsequence-point	;		c,C	f	self | 	"Warn about code violating sequence point rules"
-Wno-sequence-point	;		c,C	f	self | 	"Do not warn about code violating sequence point rules"
-Wsign-promo	;		C	f	self | 	"Warn when overload resolution promotes from unsigned to signed"
-Wno-sign-promo	;		C	f	self | 	"Do not warn when overload resolution promotes from unsigned to signed"
-Wsurprising	;		c,C	f	self | 	"Warn about code that might have unexpected semantics"
-Wno-surprising	;		c,C	f	self | 	"Do not warn about code that might have unexpected semantics"
-Wsynth	;		C	f	self | 	"Warn about synthesis that is not backwards compatible with cfront"
-Wno-synth	;		C	f	self | 	"Do not warn about synthesis that is not backwards compatible with cfront"
-Wsystem-headers	;		c,C	f	self | 	"Print warnings for constructs in system header files"
-Wno-system-headers	;		c,C	f	self | 	"Do not print warnings for constructs in system header files"
-Wunreachable-code	;		c,C	f	self | 	"Warn about code that will never be executed"
-Wno-unreachable-code	;		c,C	f	self | 	"Do not warn about code that will never be executed"
-Wunused-function	;		c,C	f	self | 	"Warn about unused static and inline functions"
-Wno-unused-function	;		c,C	f	self | 	"Do not warn about unused static and inline functions"
-Wunused-label	;		c,C	f	self | 	"Warn about unused labels"
-Wno-unused-label	;		c,C	f	self | 	"Do not warn about unused labels"
-Wunused-parameter	;		c,C	f	self | 	"Warn about unused function parameters"
-Wno-unused-parameter	;		c,C	f	self | 	"Do not warn about unused function parameters"
-Wunused-value	;		c,C	f	self | 	"Warn about statements whose results are not used"
-Wno-unused-value	;		c,C	f	self | 	"Do not warn about statements whose results are not used"
-Wunused-variable	;		c,C	f	self | 	"Warn about local and static variables that are not used"
-Wno-unused-variable	;		c,C	f	self | 	"Do not warnarn about local and static variables that are not used"
-Wdisabled-optimization	warn_ignored(option_name);		c,C	N	"" | 	"Warn if a requested optimization pass is disabled"
-Wno-disabled-optimization	;		c,C	f	self | 	"Do not warn if a requested optimization pass is disabled"
-fbranch-probabilities	;		c,C	f	self | 	""
-foptimize-register-moves	;		c,C	f	self | 	""
-fcaller-saves	;		c,C	f	self | 	""
-fcse-follow-jumps	;		c,C	f	self | 	""
-fcse-skip-blocks	;		c,C	f	self | 	""
-fdelayed-branch	;		c,C	f	self | 	""
-fexpensive-optimizations	;		c,C	f	self | 	""
-ffast-math	;		c,C	f	"-OPT:IEEE_arithmetic=2 -fno-math-errno" | 	"Improve FP speed by violating ANSI & IEEE rules"
-ffloat-store	;		c,C	f	"-OPT:IEEE_arithmetic=1" | 	"Do not store floats in registers"
-fforce-addr	;		c,C	f	self | 	""
-fforce-mem	;		c,C	f	self | 	""
-fdata-sections	;		c,C	f	self | 	""
-ffunction-sections	;		c,C	f	self | 	""
-fgcse		;		c,C	f	self | 	""
-finline-functions	;		c,C	f	self | 	"Automatically integrate simple functions into their callers"
-fno-inline-functions	;		c,C	f	self  | 	"Do not automatically integrate simple functions into their callers"
-finline-limit-%d	;		c,C	f	self | 	""
-fkeep-inline-functions	;		c,C	f	self | 	"Generate code for funcs even if they are fully inlined"
-fno-default-inline	;		c,C	f	self | 	""
-fno-defer-pop		;		c,C	f	self | 	""
-fno-function-cse	;		c,C	f	self | 	""
-fno-inline		;		c,C	f	self "-INLINE:=off" | 	""
-fno-peephole		;		c,C	f	self | 	""
-fomit-frame-pointer	;		c,C	f	self | 	"When possible do not generate stack frames"
-fno-omit-frame-pointer	;		c,C	f	self | 	""
-fregmove	;		c,C	f	self | 	""
-frerun-cse-after-loop	;		c,C	f	self | 	""
-frerun-loop-opt	;		c,C	f	self | 	""
-fschedule-insns	;		c,C	f	self | 	""
-fschedule-insns2	;		c,C	f	self | 	""
-fstrength-reduce	;		c,C	f	self | 	"Perform strength reduction optimisations"
-fno-strength-reduce	;		c,C	f	self | 	""
-fthread-jumps	;		c,C	f	self | 	"Perform jump threading optimisations"
-funroll-all-loops	;		c,C	f	self | 	"Peform loop onrolling for all loops"
-funroll-loops	;		c,C	f	self | 	"unroll-loops"
-fmove-all-movables	;		c,C	f	self | 	""
-freduce-all-givs	;		c,C	f	self | 	""
-fstrict-aliasing	;		c,C	f	self | 	"Assume strictest aliasing rules"
-Wstrict-aliasing	;		c,C	f	self | 	"Warn about code that breaks strict aliasing rules"
-fno-strict-aliasing	;		c,C	f	self | 	"Do not assume strict aliasing rules"
-Wno-strict-aliasing	;		c,C	f	self | 	"Do not warn about code that breaks strict aliasing rules"
-dA	warn_ignored(option_name);	c,C	N	self | 	""
-db	warn_ignored(option_name);	c,C	N	self | 	""
-dB	warn_ignored(option_name);	c,C	N	self | 	""
-dc	warn_ignored(option_name);	c,C	N	self | 	""
-dC	warn_ignored(option_name);	c,C	N	self | 	""
-dd	warn_ignored(option_name);	c,C	N	self | 	""
-dD	warn_ignored(option_name);	c,C	N	self | 	""
-de	warn_ignored(option_name);	c,C	N	self | 	""
-dE	warn_ignored(option_name);	c,C	N	self | 	""
-df	warn_ignored(option_name);	c,C	N	self | 	""
-dF	warn_ignored(option_name);	c,C	N	self | 	""
-dg	warn_ignored(option_name);	c,C	N	self | 	""
-dh	warn_ignored(option_name);	c,C	N	self | 	""
-dk	warn_ignored(option_name);	c,C	N	self | 	""
-do	warn_ignored(option_name);	c,C	N	self | 	""
-dG	warn_ignored(option_name);	c,C	N	self | 	""
-di	warn_ignored(option_name);	c,C	N	self | 	""
-dj	warn_ignored(option_name);	c,C	N	self | 	""
-dl	warn_ignored(option_name);	c,C	N	self | 	""
-dL	warn_ignored(option_name);	c,C	N	self | 	""
-dM	warn_ignored(option_name);	c,C	N	self | 	""
-dN	warn_ignored(option_name);	c,C	N	self | 	""
-dr	warn_ignored(option_name);	c,C	N	self | 	""
-dR	warn_ignored(option_name);	c,C	N	self | 	""
-ds	warn_ignored(option_name);	c,C	N	self | 	""
-dS	warn_ignored(option_name);	c,C	N	self | 	""
-dt	warn_ignored(option_name);	c,C	N	self | 	""
-dw	warn_ignored(option_name);	c,C	N	self | 	""
-dX	warn_ignored(option_name);	c,C	N	self | 	""
-dz	warn_ignored(option_name);	c,C	N	self | 	""
-da	warn_ignored(option_name);	c,C	N	self | 	""
-dm	warn_ignored(option_name);	c,C	N	self | 	""
-dp	warn_ignored(option_name);	c,C	N	self | 	""
-dP	warn_ignored(option_name);	c,C	N	self | 	""
-dv	warn_ignored(option_name);	c,C	N	self | 	""
-dx	warn_ignored(option_name);	c,C	N	self | 	""
-idirafter%D	;		c,C,a	p	"-idirafter %D" | 	""
-include%s	;		c,C,a	p	"-include %s" | 	""
-imacros%s	;		c,C,a	p	"-imacros %s" | 	""
-iprefix%s	;		c,C,a	p	"-iprefix %s" | 	""
-iwithprefix%D	;		c,C,a	p	"-iwithprefix %D" | 	""
-iwithprefixbefore%D	;		c,C,a	p	"-iwithprefixbefore %D" | 	""
-isystem%D	;		c,C,a	p	"-isystem %D" | 	""
-MD	;		c,C,a	p	self | 	"Write dependencies to .d output file"
-MF%s	;		c,C,a	p	"-MF %s" | 	"Write dependencies to specified output file"
-MMD	;		c,C,a	p	self | 	"Write user dependencies to .d output file"
-MM	last_phase=P_any_cpp;	c,C,a	p	self | 	"Output user dependencies of source file"
-MG	;		c,C,a	p	self | 	"With -M or -MM, treat missing header files as generated files"
-MT%s	;		c,C,a	p	"-MT %s" | 	"Change the target of the generated dependency rules"
-MQ%s	;		c,C,a	p	"-MQ %s" | 	"Same as -MT, but quote characters that are special to Make"
-MP	;		c,C,a	p	self | 	"With -M or -MM, add phony targets for each dependency"
-aux-info%s     ;       a   C     "-aux-info %s" |         ""
-ff2c-abi%s	;	A	F	"-ff2c-abi %s" | 	""
-undef	;		c,C,a	p	self | 	""
-fcall-saved-%s	;		c,C	N	"" | 	""
-fcall-used-%s	;		c,C	N	"" | 	""
-fexceptions	;	c,C	C	self | 	"Enable exception handling"
-fhandle-exceptions	;	c,C	C	self | 	"Enable exception handling"
-fno-exceptions	;	c,C	C	self | 	"Disable exception handling"
-fno-handle-exceptions	;	c,C	C	self | 	"Disable exception handling"
-ffixed-%s	;		c,C	N	"-TENV:registers_not_allocatable=%s" | 	""
-mfixed-range=%s	;	c,C	N	"-TENV:registers_not_allocatable=%s" | 	""
-funwind-tables	;		c,C	N	"-CG:emit_unwind_info=on" | 	""
-fno-unwind-tables	;	c,C	N	"-CG:emit_unwind_info=off" | 	""
-mconstant-gp	;		c,C	N	"-TENV:constant_gp=on" | 	""
-mno-sdata	;		c,C	N	"-G0" | 	""
-finhibit-size-directive	;		c,C	b	"-CG:inhibit_size_directive=1:emit_asm_dwarf=0" | 	"Do not generate .size directives"
-fcheck-memory-usage	;		c,C	N	"" | 	""
-fprefix-function-name	;		c,C	N	"" | 	"Add a prefix to all function names"
-fno-common	;		c,C	C	self | 	"use strict ref/def initialization model"
-fno-ident	;		c,C	C	self | 	"Ignore #ident directives"
-fno-gnu-linker	;		c,C	N	"" | 	""
-fpcc-struct-return	;		c,C	N	"" | 	""
-fpic	;		A	f	self "-TENV:PIC" | 	"Generate position independent code, if possible"
-fPIC	;		A	f	self "-TENV:PIC" |  	"Generate position independent code, if possible"
-fno-PIC	;		A	f	self |  	"Do not generate position independent code"
-fno-pic	;		A	f	self |  	"Do not generate position independent code"
-freg-struct-return	;		c,C	N	"" | 	""
-fshared-data	;		c,C	N	"" | 	"Mark data as shared rather than private"
-fshort-enums	;		c,C	N	"" | 	"Use the smallest fitting integer to hold enums"
-fshort-double	;		c,C	N	"" | 	"Use the same size for double as for float"
-fvolatile	;		c,C	N	"" | 	"Consider all mem refs through pointers as volatile"
-fvolatile-global	;		c,C	N	"" | 	"Consider all mem refs to global data to be volatile"
-fvolatile-static	;		c,C	N	"" | 	""
-fverbose-asm	;		c,C	N	"" | 	""
-fpack-struct	;		c,C	N	"" | 	"Pack structure members together without holes"
-fstack-check	;		c,C	N	"" | 	""
-fargument-alias	;		c,C	N	"" | 	""
-fargument-noalias	;		c,C	N	"" | 	""
-fargument-noalias-global	;		c,C	N	"" | 	""
-fleading-underscore	;		c,C	N	"" | 	""
-nostartfiles	;		c,C,f,F	N	"" | 	""
-nodefaultlibs	;		c,C,f,F	N	"" | 	""
-Xlinker%s	warn_no_longer_supported2(option_name,"-Wl,");		c,C,f,F	l	self | 	""
-symbolic	;		c,C,f,F	l	self | 	""
-shared-libgcc	;	c,C,f,F	l	self | 	"Force the use of the shared libgcc library"
-static-libgcc	;	c,C,f,F	l	self | 	"Force the use of the static libgcc library"
-I-		;		A	p	self |  	""
-specs=%s	warn_ignored(option_name);		A	N	self | 	""
-b%s	warn_ignored(option_name);		A	N	self | 	""
-m386	warn_ignored(option_name);		A	N	self | 	""
-malign-loops=%d	warn_ignored(option_name); 	A	N	self | 	""
-malign-jumps=%d	warn_ignored(option_name); 	A	N	self | 	""
-malign-functions=%d	warn_ignored(option_name); 	A	N	self | 	""
-mmmx	;		A	N	self | 	"Enable MMX extensions"
-mno-mmx	warn_ignored(option_name);	A	N	self | 	"Disable MMX extensions"
-msse	;		A	N	self | 	"Enable SSE extensions"
-mno-sse	warn_ignored(option_name);	A	N	self | 	"Disable SSE extensions"
-msse2	;		A	N	self | 	"Enable SSE2 extensions"
-mno-sse2	warn_ignored(option_name);	A	N	self | 	"Disable SSE2 extensions"
-m3dnow	;		A	N	self | 	"Enable 3Dnow extensions"
-mno-3dnow	warn_ignored(option_name);	A	N	self | 	"Disable 3Dnow extensions"
-ma-step	;	A	N	"-TARG:ma0_step=on -mb-step" | 	""
-mb-step	;	A	N	"" | 	""
-mvolatile-asm-stop	;	A	N	"-CG:volatile_asm_stop=on" | 	""
-print-file-name=%s	{execute_flag=FALSE; print_file_path(optargs);}	A	N	"" | 	""
-print-libgcc-file-name	;	A	N	"-print-file-name=libgcc.a" | 	""
-print-prog-name=%s	{execute_flag=FALSE; print_file_path(optargs);}	A	N	"" | 	""
-print-search-dirs	{execute_flag=FALSE; warn_ignored(option_name);}	A	N	"" | 	""
-x*c	ignore_suffix=TRUE;default_source_kind=S_c;	A	p "-xc" | 	""
-x*c++	ignore_suffix=TRUE;default_source_kind=S_C;	A	p "-xc++" | 	""
-x*cpp-output	ignore_suffix=TRUE;default_source_kind=S_i;	A N "" | 	""
-x*c++-cpp-output	ignore_suffix=TRUE;default_source_kind=S_ii;	A N "" | 	""
-x*assembler	ignore_suffix=TRUE;default_source_kind=S_s;	A N "" | 	""
-x*assembler-with-cpp	ignore_suffix=TRUE;default_source_kind=S_S;	A p "-xassembler-with-cpp" | 	""
-x*f	ignore_suffix=TRUE;default_source_kind=S_f;	A N "" | 	""
-x*none		ignore_suffix=FALSE;default_source_kind=S_NONE;	A	p "-xnone" | 	""
--all-warnings	;	A	N	"-Wall" | 	""
--ansi		;	A	N	"-ansi" | 	""
--assemble	;	A	N	"-S" | 	""
--assert%s	;	A	N	"-A%s" | 	""
--comments	;	A	N	"-C" | 	""
--compile	;	A	N	"-c" | 	""
--debug		;	A	N	"-g" | 	""
--define-macro%s	;	A	N	"-D%s" | 	""
--dependencies	;	A	N	"-M" | 	""
--extra-warnings	;	A	N	"-W" | 	""
--force-link%s	;	A	N	"-u %s" | 	""
--imacros%s	;	A	N	"-imacros %s" | 	""
--include%s	;	A	N	"-include %s" | 	""
--include-barrier	;	A	N	"-I-" | 	""
--include-directory%D	;	A	N	"-I%D" | 	""
--include-directory-after%D	;	A	N	"-idirafter %D" | 	""
--include-prefix%s	;	A	N	"-iprefix %s" | 	""
--include-with-prefix%D	;	A	N	"-iwithprefix %D" | 	""
--include-with-prefix-before%D	;	A	N	"-iwithprefixbefore %D" | 	""
--library-directory%D	;	A	N	"-L%D" | 	""
--no-line-commands	;	A	N	"-P" | 	""
--no-standard-includes	;	A	N	"-nostdinc" | 	""
--no-standard-libraries	;	A	N	"-nostdlib" | 	""
--no-warnings	;	A	N	"-w" | 	""
--optimize	;	A	N	"-O" | 	""
--output%s	;	A	N	"-o %s" | 	""
--pedantic	;	A	N	"-pedantic" | 	""
--pedantic-errors	;	A	N	"-pedantic-errors" | 	""
--pipe	;	A	N	"-pipe" | 	""
--preprocess	;	A	N	"-E" | 	""
--print-file-name%s	;	A	N	"-print-file-name=%s" | 	""
--print-file-name=%s	;	A	N	"-print-file-name=%s" | 	""
--print-libgcc-file-name	;	A	N	"-print-file-name=libgcc.a" | 	""
--print-search-dirs	;	A	N	"-print-search-dirs" | 	""
--print-missing-file-dependencies	;	A	N	"-MG" | 	""
--print-prog-name%s	;	A	N	"-print-prog-name=%s" | 	""
--print-prog-name=%s	;	A	N	"-print-prog-name=%s" | 	""
--profile	;	A	N	"-p" | 	""
--save-temps	;	A	N	"-save-temps" | 	""
--shared	;	A	N	"-shared" | 	""
--specs%s	;	A	N	"-specs=%s" | 	""
--specs=%s	;	A	N	"-specs=%s" | 	""
--static	;	c,C,f,F	l	self | 	""
--symbolic	;	A	N	"-symbolic" | 	""
--target%s	;	A	N	"-b%s" | 	""
--trace-includes	;	A	N	"-H" | 	""
--traditional	;	A	N	"-traditional" | 	""
--traditional-p	;	A	N	"-traditional-cpp" | 	""
--trigraphs	;	A	N	"-trigraphs" | 	""
--undefine-macro%s	;	A	N	"-U%s" | 	""
--user-dependencies	;	A	N	"-MM" | 	""
--verbose	;	A	N	"-v" | 	""
--version	;	A	N	"-version" | 	""
--write-dependencies	;	A	N	"-MD" | 	""
--write-user-dependencies	;	A	N	"-MMD" | 	""
-subverbose	subverbose=1;	A 	N	"-subverbose" | 	""
-Wabi		warn_ignored(option_name);	A	C	self	"" | 	""
-###		{show_version = TRUE; show_but_not_run = TRUE;}	A	N	"-###" | 	"Like -v, only nothing is run and args are quoted"
-rdynamic			;		c,C,f,F	l	"-Wl,--export-dynamic" | 	""
