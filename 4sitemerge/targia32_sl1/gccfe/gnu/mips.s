	.file	"mips.c"
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.text
.Ltext0:
.globl mips_section_threshold
	.data
	.align 4
	.type	mips_section_threshold, @object
	.size	mips_section_threshold, 4
mips_section_threshold:
	.long	-1
.globl num_source_filenames
	.bss
	.align 4
	.type	num_source_filenames, @object
	.size	num_source_filenames, 4
num_source_filenames:
	.zero	4
.globl sdb_label_count
	.align 4
	.type	sdb_label_count, @object
	.size	sdb_label_count, 4
sdb_label_count:
	.zero	4
.globl sym_lineno
	.align 4
	.type	sym_lineno, @object
	.size	sym_lineno, 4
sym_lineno:
	.zero	4
.globl inside_function
	.align 4
	.type	inside_function, @object
	.size	inside_function, 4
inside_function:
	.zero	4
.globl extern_head
	.align 4
	.type	extern_head, @object
	.size	extern_head, 4
extern_head:
	.zero	4
.globl current_function_file
	.section	.rodata
.LC0:
	.string	""
	.section	.data.rel.local,"aw",@progbits
	.align 4
	.type	current_function_file, @object
	.size	current_function_file, 4
current_function_file:
	.long	.LC0
.globl file_in_function_warning
	.bss
	.align 4
	.type	file_in_function_warning, @object
	.size	file_in_function_warning, 4
file_in_function_warning:
	.zero	4
.globl ignore_line_number
	.align 4
	.type	ignore_line_number, @object
	.size	ignore_line_number, 4
ignore_line_number:
	.zero	4
.globl mips_cache_flush_func
	.section	.rodata
.LC1:
	.string	"_flush_cache"
	.section	.data.rel.local
	.align 4
	.type	mips_cache_flush_func, @object
	.size	mips_cache_flush_func, 4
mips_cache_flush_func:
	.long	.LC1
.globl mips_reg_names
	.data
	.align 32
	.type	mips_reg_names, @object
	.size	mips_reg_names, 1408
mips_reg_names:
	.string	"$0"
	.zero	5
	.string	"$1"
	.zero	5
	.string	"$2"
	.zero	5
	.string	"$3"
	.zero	5
	.string	"$4"
	.zero	5
	.string	"$5"
	.zero	5
	.string	"$6"
	.zero	5
	.string	"$7"
	.zero	5
	.string	"$8"
	.zero	5
	.string	"$9"
	.zero	5
	.string	"$10"
	.zero	4
	.string	"$11"
	.zero	4
	.string	"$12"
	.zero	4
	.string	"$13"
	.zero	4
	.string	"$14"
	.zero	4
	.string	"$15"
	.zero	4
	.string	"$16"
	.zero	4
	.string	"$17"
	.zero	4
	.string	"$18"
	.zero	4
	.string	"$19"
	.zero	4
	.string	"$20"
	.zero	4
	.string	"$21"
	.zero	4
	.string	"$22"
	.zero	4
	.string	"$23"
	.zero	4
	.string	"$24"
	.zero	4
	.string	"$25"
	.zero	4
	.string	"$26"
	.zero	4
	.string	"$27"
	.zero	4
	.string	"$28"
	.zero	4
	.string	"$sp"
	.zero	4
	.string	"$fp"
	.zero	4
	.string	"$31"
	.zero	4
	.string	"$f0"
	.zero	4
	.string	"$f1"
	.zero	4
	.string	"$f2"
	.zero	4
	.string	"$f3"
	.zero	4
	.string	"$f4"
	.zero	4
	.string	"$f5"
	.zero	4
	.string	"$f6"
	.zero	4
	.string	"$f7"
	.zero	4
	.string	"$f8"
	.zero	4
	.string	"$f9"
	.zero	4
	.string	"$f10"
	.zero	3
	.string	"$f11"
	.zero	3
	.string	"$f12"
	.zero	3
	.string	"$f13"
	.zero	3
	.string	"$f14"
	.zero	3
	.string	"$f15"
	.zero	3
	.string	"$f16"
	.zero	3
	.string	"$f17"
	.zero	3
	.string	"$f18"
	.zero	3
	.string	"$f19"
	.zero	3
	.string	"$f20"
	.zero	3
	.string	"$f21"
	.zero	3
	.string	"$f22"
	.zero	3
	.string	"$f23"
	.zero	3
	.string	"$f24"
	.zero	3
	.string	"$f25"
	.zero	3
	.string	"$f26"
	.zero	3
	.string	"$f27"
	.zero	3
	.string	"$f28"
	.zero	3
	.string	"$f29"
	.zero	3
	.string	"$f30"
	.zero	3
	.string	"$f31"
	.zero	3
	.string	"hi"
	.zero	5
	.string	"lo"
	.zero	5
	.string	"accum"
	.zero	2
	.string	"$fcc0"
	.zero	2
	.string	"$fcc1"
	.zero	2
	.string	"$fcc2"
	.zero	2
	.string	"$fcc3"
	.zero	2
	.string	"$fcc4"
	.zero	2
	.string	"$fcc5"
	.zero	2
	.string	"$fcc6"
	.zero	2
	.string	"$fcc7"
	.zero	2
	.string	"$rap"
	.zero	3
	.string	""
	.zero	7
	.string	""
	.zero	7
	.string	""
	.zero	7
	.string	""
	.zero	7
	.string	"$c0r0"
	.zero	2
	.string	"$c0r1"
	.zero	2
	.string	"$c0r2"
	.zero	2
	.string	"$c0r3"
	.zero	2
	.string	"$c0r4"
	.zero	2
	.string	"$c0r5"
	.zero	2
	.string	"$c0r6"
	.zero	2
	.string	"$c0r7"
	.zero	2
	.string	"$c0r8"
	.zero	2
	.string	"$c0r9"
	.zero	2
	.string	"$c0r10"
	.zero	1
	.string	"$c0r11"
	.zero	1
	.string	"$c0r12"
	.zero	1
	.string	"$c0r13"
	.zero	1
	.string	"$c0r14"
	.zero	1
	.string	"$c0r15"
	.zero	1
	.string	"$c0r16"
	.zero	1
	.string	"$c0r17"
	.zero	1
	.string	"$c0r18"
	.zero	1
	.string	"$c0r19"
	.zero	1
	.string	"$c0r20"
	.zero	1
	.string	"$c0r21"
	.zero	1
	.string	"$c0r22"
	.zero	1
	.string	"$c0r23"
	.zero	1
	.string	"$c0r24"
	.zero	1
	.string	"$c0r25"
	.zero	1
	.string	"$c0r26"
	.zero	1
	.string	"$c0r27"
	.zero	1
	.string	"$c0r28"
	.zero	1
	.string	"$c0r29"
	.zero	1
	.string	"$c0r30"
	.zero	1
	.string	"$c0r31"
	.zero	1
	.string	"$c2r0"
	.zero	2
	.string	"$c2r1"
	.zero	2
	.string	"$c2r2"
	.zero	2
	.string	"$c2r3"
	.zero	2
	.string	"$c2r4"
	.zero	2
	.string	"$c2r5"
	.zero	2
	.string	"$c2r6"
	.zero	2
	.string	"$c2r7"
	.zero	2
	.string	"$c2r8"
	.zero	2
	.string	"$c2r9"
	.zero	2
	.string	"$c2r10"
	.zero	1
	.string	"$c2r11"
	.zero	1
	.string	"$c2r12"
	.zero	1
	.string	"$c2r13"
	.zero	1
	.string	"$c2r14"
	.zero	1
	.string	"$c2r15"
	.zero	1
	.string	"$c2r16"
	.zero	1
	.string	"$c2r17"
	.zero	1
	.string	"$c2r18"
	.zero	1
	.string	"$c2r19"
	.zero	1
	.string	"$c2r20"
	.zero	1
	.string	"$c2r21"
	.zero	1
	.string	"$c2r22"
	.zero	1
	.string	"$c2r23"
	.zero	1
	.string	"$c2r24"
	.zero	1
	.string	"$c2r25"
	.zero	1
	.string	"$c2r26"
	.zero	1
	.string	"$c2r27"
	.zero	1
	.string	"$c2r28"
	.zero	1
	.string	"$c2r29"
	.zero	1
	.string	"$c2r30"
	.zero	1
	.string	"$c2r31"
	.zero	1
	.string	"$c3r0"
	.zero	2
	.string	"$c3r1"
	.zero	2
	.string	"$c3r2"
	.zero	2
	.string	"$c3r3"
	.zero	2
	.string	"$c3r4"
	.zero	2
	.string	"$c3r5"
	.zero	2
	.string	"$c3r6"
	.zero	2
	.string	"$c3r7"
	.zero	2
	.string	"$c3r8"
	.zero	2
	.string	"$c3r9"
	.zero	2
	.string	"$c3r10"
	.zero	1
	.string	"$c3r11"
	.zero	1
	.string	"$c3r12"
	.zero	1
	.string	"$c3r13"
	.zero	1
	.string	"$c3r14"
	.zero	1
	.string	"$c3r15"
	.zero	1
	.string	"$c3r16"
	.zero	1
	.string	"$c3r17"
	.zero	1
	.string	"$c3r18"
	.zero	1
	.string	"$c3r19"
	.zero	1
	.string	"$c3r20"
	.zero	1
	.string	"$c3r21"
	.zero	1
	.string	"$c3r22"
	.zero	1
	.string	"$c3r23"
	.zero	1
	.string	"$c3r24"
	.zero	1
	.string	"$c3r25"
	.zero	1
	.string	"$c3r26"
	.zero	1
	.string	"$c3r27"
	.zero	1
	.string	"$c3r28"
	.zero	1
	.string	"$c3r29"
	.zero	1
	.string	"$c3r30"
	.zero	1
	.string	"$c3r31"
	.zero	1
.globl mips_sw_reg_names
	.align 32
	.type	mips_sw_reg_names, @object
	.size	mips_sw_reg_names, 1408
mips_sw_reg_names:
	.string	"$zero"
	.zero	2
	.string	"$at"
	.zero	4
	.string	"$v0"
	.zero	4
	.string	"$v1"
	.zero	4
	.string	"$a0"
	.zero	4
	.string	"$a1"
	.zero	4
	.string	"$a2"
	.zero	4
	.string	"$a3"
	.zero	4
	.string	"$t0"
	.zero	4
	.string	"$t1"
	.zero	4
	.string	"$t2"
	.zero	4
	.string	"$t3"
	.zero	4
	.string	"$t4"
	.zero	4
	.string	"$t5"
	.zero	4
	.string	"$t6"
	.zero	4
	.string	"$t7"
	.zero	4
	.string	"$s0"
	.zero	4
	.string	"$s1"
	.zero	4
	.string	"$s2"
	.zero	4
	.string	"$s3"
	.zero	4
	.string	"$s4"
	.zero	4
	.string	"$s5"
	.zero	4
	.string	"$s6"
	.zero	4
	.string	"$s7"
	.zero	4
	.string	"$t8"
	.zero	4
	.string	"$t9"
	.zero	4
	.string	"$k0"
	.zero	4
	.string	"$k1"
	.zero	4
	.string	"$gp"
	.zero	4
	.string	"$sp"
	.zero	4
	.string	"$fp"
	.zero	4
	.string	"$ra"
	.zero	4
	.string	"$f0"
	.zero	4
	.string	"$f1"
	.zero	4
	.string	"$f2"
	.zero	4
	.string	"$f3"
	.zero	4
	.string	"$f4"
	.zero	4
	.string	"$f5"
	.zero	4
	.string	"$f6"
	.zero	4
	.string	"$f7"
	.zero	4
	.string	"$f8"
	.zero	4
	.string	"$f9"
	.zero	4
	.string	"$f10"
	.zero	3
	.string	"$f11"
	.zero	3
	.string	"$f12"
	.zero	3
	.string	"$f13"
	.zero	3
	.string	"$f14"
	.zero	3
	.string	"$f15"
	.zero	3
	.string	"$f16"
	.zero	3
	.string	"$f17"
	.zero	3
	.string	"$f18"
	.zero	3
	.string	"$f19"
	.zero	3
	.string	"$f20"
	.zero	3
	.string	"$f21"
	.zero	3
	.string	"$f22"
	.zero	3
	.string	"$f23"
	.zero	3
	.string	"$f24"
	.zero	3
	.string	"$f25"
	.zero	3
	.string	"$f26"
	.zero	3
	.string	"$f27"
	.zero	3
	.string	"$f28"
	.zero	3
	.string	"$f29"
	.zero	3
	.string	"$f30"
	.zero	3
	.string	"$f31"
	.zero	3
	.string	"hi"
	.zero	5
	.string	"lo"
	.zero	5
	.string	"accum"
	.zero	2
	.string	"$fcc0"
	.zero	2
	.string	"$fcc1"
	.zero	2
	.string	"$fcc2"
	.zero	2
	.string	"$fcc3"
	.zero	2
	.string	"$fcc4"
	.zero	2
	.string	"$fcc5"
	.zero	2
	.string	"$fcc6"
	.zero	2
	.string	"$fcc7"
	.zero	2
	.string	"$rap"
	.zero	3
	.string	""
	.zero	7
	.string	""
	.zero	7
	.string	""
	.zero	7
	.string	""
	.zero	7
	.string	"$c0r0"
	.zero	2
	.string	"$c0r1"
	.zero	2
	.string	"$c0r2"
	.zero	2
	.string	"$c0r3"
	.zero	2
	.string	"$c0r4"
	.zero	2
	.string	"$c0r5"
	.zero	2
	.string	"$c0r6"
	.zero	2
	.string	"$c0r7"
	.zero	2
	.string	"$c0r8"
	.zero	2
	.string	"$c0r9"
	.zero	2
	.string	"$c0r10"
	.zero	1
	.string	"$c0r11"
	.zero	1
	.string	"$c0r12"
	.zero	1
	.string	"$c0r13"
	.zero	1
	.string	"$c0r14"
	.zero	1
	.string	"$c0r15"
	.zero	1
	.string	"$c0r16"
	.zero	1
	.string	"$c0r17"
	.zero	1
	.string	"$c0r18"
	.zero	1
	.string	"$c0r19"
	.zero	1
	.string	"$c0r20"
	.zero	1
	.string	"$c0r21"
	.zero	1
	.string	"$c0r22"
	.zero	1
	.string	"$c0r23"
	.zero	1
	.string	"$c0r24"
	.zero	1
	.string	"$c0r25"
	.zero	1
	.string	"$c0r26"
	.zero	1
	.string	"$c0r27"
	.zero	1
	.string	"$c0r28"
	.zero	1
	.string	"$c0r29"
	.zero	1
	.string	"$c0r30"
	.zero	1
	.string	"$c0r31"
	.zero	1
	.string	"$c2r0"
	.zero	2
	.string	"$c2r1"
	.zero	2
	.string	"$c2r2"
	.zero	2
	.string	"$c2r3"
	.zero	2
	.string	"$c2r4"
	.zero	2
	.string	"$c2r5"
	.zero	2
	.string	"$c2r6"
	.zero	2
	.string	"$c2r7"
	.zero	2
	.string	"$c2r8"
	.zero	2
	.string	"$c2r9"
	.zero	2
	.string	"$c2r10"
	.zero	1
	.string	"$c2r11"
	.zero	1
	.string	"$c2r12"
	.zero	1
	.string	"$c2r13"
	.zero	1
	.string	"$c2r14"
	.zero	1
	.string	"$c2r15"
	.zero	1
	.string	"$c2r16"
	.zero	1
	.string	"$c2r17"
	.zero	1
	.string	"$c2r18"
	.zero	1
	.string	"$c2r19"
	.zero	1
	.string	"$c2r20"
	.zero	1
	.string	"$c2r21"
	.zero	1
	.string	"$c2r22"
	.zero	1
	.string	"$c2r23"
	.zero	1
	.string	"$c2r24"
	.zero	1
	.string	"$c2r25"
	.zero	1
	.string	"$c2r26"
	.zero	1
	.string	"$c2r27"
	.zero	1
	.string	"$c2r28"
	.zero	1
	.string	"$c2r29"
	.zero	1
	.string	"$c2r30"
	.zero	1
	.string	"$c2r31"
	.zero	1
	.string	"$c3r0"
	.zero	2
	.string	"$c3r1"
	.zero	2
	.string	"$c3r2"
	.zero	2
	.string	"$c3r3"
	.zero	2
	.string	"$c3r4"
	.zero	2
	.string	"$c3r5"
	.zero	2
	.string	"$c3r6"
	.zero	2
	.string	"$c3r7"
	.zero	2
	.string	"$c3r8"
	.zero	2
	.string	"$c3r9"
	.zero	2
	.string	"$c3r10"
	.zero	1
	.string	"$c3r11"
	.zero	1
	.string	"$c3r12"
	.zero	1
	.string	"$c3r13"
	.zero	1
	.string	"$c3r14"
	.zero	1
	.string	"$c3r15"
	.zero	1
	.string	"$c3r16"
	.zero	1
	.string	"$c3r17"
	.zero	1
	.string	"$c3r18"
	.zero	1
	.string	"$c3r19"
	.zero	1
	.string	"$c3r20"
	.zero	1
	.string	"$c3r21"
	.zero	1
	.string	"$c3r22"
	.zero	1
	.string	"$c3r23"
	.zero	1
	.string	"$c3r24"
	.zero	1
	.string	"$c3r25"
	.zero	1
	.string	"$c3r26"
	.zero	1
	.string	"$c3r27"
	.zero	1
	.string	"$c3r28"
	.zero	1
	.string	"$c3r29"
	.zero	1
	.string	"$c3r30"
	.zero	1
	.string	"$c3r31"
	.zero	1
.globl mips_regno_to_class
	.section	.rodata
	.align 32
	.type	mips_regno_to_class, @object
	.size	mips_regno_to_class, 704
mips_regno_to_class:
	.long	5
	.long	5
	.long	1
	.long	1
	.long	2
	.long	2
	.long	2
	.long	2
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	1
	.long	1
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	3
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	5
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	6
	.long	7
	.long	8
	.long	9
	.long	23
	.long	23
	.long	23
	.long	23
	.long	23
	.long	23
	.long	23
	.long	23
	.long	5
	.long	0
	.long	0
	.long	0
	.long	0
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	11
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	12
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
	.long	13
.globl mips_char_to_class
	.bss
	.align 32
	.type	mips_char_to_class, @object
	.size	mips_char_to_class, 1024
mips_char_to_class:
	.zero	1024
.globl mips_cpu_info_table
	.section	.rodata
.LC2:
	.string	"mips1"
.LC3:
	.string	"mips2"
.LC4:
	.string	"mips3"
.LC5:
	.string	"mips4"
.LC6:
	.string	"mips32"
.LC7:
	.string	"mips64"
.LC8:
	.string	"r3000"
.LC9:
	.string	"r2000"
.LC10:
	.string	"r3900"
.LC11:
	.string	"r6000"
.LC12:
	.string	"r4000"
.LC13:
	.string	"vr4100"
.LC14:
	.string	"vr4111"
.LC15:
	.string	"vr4120"
.LC16:
	.string	"vr4300"
.LC17:
	.string	"r4400"
.LC18:
	.string	"r4600"
.LC19:
	.string	"orion"
.LC20:
	.string	"r4650"
.LC21:
	.string	"r8000"
.LC22:
	.string	"vr5000"
.LC23:
	.string	"vr5400"
.LC24:
	.string	"vr5500"
.LC25:
	.string	"4kc"
.LC26:
	.string	"4kp"
.LC27:
	.string	"5kc"
.LC28:
	.string	"20kc"
.LC29:
	.string	"sr71000"
.LC30:
	.string	"sb1"
	.section	.data.rel.ro.local,"aw",@progbits
	.align 32
	.type	mips_cpu_info_table, @object
	.size	mips_cpu_info_table, 360
mips_cpu_info_table:
	.long	.LC2
	.long	1
	.long	1
	.long	.LC3
	.long	3
	.long	2
	.long	.LC4
	.long	4
	.long	3
	.long	.LC5
	.long	14
	.long	4
	.long	.LC6
	.long	15
	.long	32
	.long	.LC7
	.long	16
	.long	64
	.long	.LC8
	.long	1
	.long	1
	.long	.LC9
	.long	1
	.long	1
	.long	.LC10
	.long	2
	.long	1
	.long	.LC11
	.long	3
	.long	2
	.long	.LC12
	.long	4
	.long	3
	.long	.LC13
	.long	5
	.long	3
	.long	.LC14
	.long	6
	.long	3
	.long	.LC15
	.long	7
	.long	3
	.long	.LC16
	.long	8
	.long	3
	.long	.LC17
	.long	4
	.long	3
	.long	.LC18
	.long	9
	.long	3
	.long	.LC19
	.long	9
	.long	3
	.long	.LC20
	.long	10
	.long	3
	.long	.LC21
	.long	14
	.long	4
	.long	.LC22
	.long	11
	.long	4
	.long	.LC23
	.long	12
	.long	4
	.long	.LC24
	.long	13
	.long	4
	.long	.LC25
	.long	15
	.long	32
	.long	.LC26
	.long	15
	.long	32
	.long	.LC27
	.long	16
	.long	64
	.long	.LC28
	.long	17
	.long	64
	.long	.LC29
	.long	18
	.long	64
	.long	.LC30
	.long	19
	.long	64
	.long	0
	.long	0
	.long	0
.globl targetm
	.section	.rodata
.LC31:
	.string	"("
.LC32:
	.string	")"
.LC33:
	.string	"\t.byte\t"
.LC34:
	.string	"\t.half\t"
.LC35:
	.string	"\t.word\t"
.LC36:
	.string	"\t.2byte\t"
.LC37:
	.string	"\t.4byte\t"
.LC38:
	.string	"\t.8byte\t"
	.section	.data.rel,"aw",@progbits
	.align 32
	.type	targetm, @object
	.size	targetm, 252
targetm:
	.long	.LC31
	.long	.LC32
	.long	.LC33
	.long	.LC34
	.long	.LC35
	.long	0
	.long	0
	.long	.LC36
	.long	.LC37
	.long	.LC38
	.long	0
	.long	mips_assemble_integer
	.long	default_globalize_label
	.long	default_assemble_visibility
	.long	mips_output_function_prologue
	.long	no_asm_to_stream
	.long	no_asm_to_stream
	.long	mips_output_function_epilogue
	.long	default_elf_asm_named_section
	.long	default_exception_section
	.long	default_eh_frame_section
	.long	mips_select_section
	.long	mips_select_rtx_section
	.long	mips_unique_section
	.long	default_named_section_asm_out_constructor
	.long	default_named_section_asm_out_destructor
	.long	0
	.long	hook_bool_tree_hwi_hwi_tree_false
	.long	mips_adjust_cost
	.long	0
	.long	mips_issue_rate
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	mips_use_dfa_pipeline_interface
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	merge_decl_attributes
	.long	merge_type_attributes
	.long	0
	.long	hook_int_tree_tree_1
	.long	hook_void_tree
	.long	hook_void_tree_treeptr
	.long	hook_bool_tree_false
	.long	hook_bool_tree_false
	.long	default_init_builtins
	.long	default_expand_builtin
	.long	default_section_type_flags
	.long	hook_bool_void_false
	.long	hook_bool_rtx_false
	.long	hook_bool_tree_false
	.long	default_binds_local_p
	.long	mips_encode_section_info
	.long	default_strip_name_encoding
	.byte	1
	.byte	1
	.byte	0
	.byte	0
	.byte	0
	.zero	3
	.text
.globl uns_arith_operand
	.type	uns_arith_operand, @function
uns_arith_operand:
.LFB15:
	.file 1 "../../../kgccfe/gnu/mips.c"
	.loc 1 679 0
	pushl	%ebp
.LCFI0:
	movl	%esp, %ebp
.LCFI1:
	pushl	%ebx
.LCFI2:
	subl	$36, %esp
.LCFI3:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 680 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L2
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	cmpl	$0, -20(%ebp)
	ja	.L2
	cmpl	$0, -20(%ebp)
	jb	.L5
	cmpl	$65535, -24(%ebp)
	ja	.L2
.L5:
	.loc 1 681 0
	movl	$1, -12(%ebp)
	jmp	.L6
.L2:
	.loc 1 683 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	register_operand@PLT
	movl	%eax, -12(%ebp)
.L6:
	movl	-12(%ebp), %eax
	.loc 1 684 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE15:
	.size	uns_arith_operand, .-uns_arith_operand
.globl arith_operand
	.type	arith_operand, @function
arith_operand:
.LFB16:
	.loc 1 693 0
	pushl	%ebp
.LCFI4:
	movl	%esp, %ebp
.LCFI5:
	pushl	%ebx
.LCFI6:
	subl	$36, %esp
.LCFI7:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 694 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L9
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	cmpl	$0, -20(%ebp)
	ja	.L9
	cmpl	$0, -20(%ebp)
	jb	.L12
	cmpl	$65535, -24(%ebp)
	ja	.L9
.L12:
	.loc 1 695 0
	movl	$1, -12(%ebp)
	jmp	.L13
.L9:
	.loc 1 698 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L14
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L14
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_gp_offset_p@PLT
	testl	%eax, %eax
	je	.L14
	.loc 1 699 0
	movl	$1, -12(%ebp)
	jmp	.L13
.L14:
	.loc 1 701 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	register_operand@PLT
	movl	%eax, -12(%ebp)
.L13:
	movl	-12(%ebp), %eax
	.loc 1 702 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE16:
	.size	arith_operand, .-arith_operand
.globl arith32_operand
	.type	arith32_operand, @function
arith32_operand:
.LFB17:
	.loc 1 711 0
	pushl	%ebp
.LCFI8:
	movl	%esp, %ebp
.LCFI9:
	pushl	%ebx
.LCFI10:
	subl	$20, %esp
.LCFI11:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 712 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L20
	.loc 1 713 0
	movl	$1, -8(%ebp)
	jmp	.L22
.L20:
	.loc 1 715 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	register_operand@PLT
	movl	%eax, -8(%ebp)
.L22:
	movl	-8(%ebp), %eax
	.loc 1 716 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE17:
	.size	arith32_operand, .-arith32_operand
.globl small_int
	.type	small_int, @function
small_int:
.LFB18:
	.loc 1 724 0
	pushl	%ebp
.LCFI12:
	movl	%esp, %ebp
.LCFI13:
	subl	$16, %esp
.LCFI14:
	.loc 1 725 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L25
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -8(%ebp)
	movl	%edx, -4(%ebp)
	cmpl	$0, -4(%ebp)
	ja	.L25
	cmpl	$0, -4(%ebp)
	jb	.L28
	cmpl	$65535, -8(%ebp)
	ja	.L25
.L28:
	movl	$1, -12(%ebp)
	jmp	.L29
.L25:
	movl	$0, -12(%ebp)
.L29:
	movl	-12(%ebp), %eax
	.loc 1 726 0
	leave
	ret
.LFE18:
	.size	small_int, .-small_int
.globl large_int
	.type	large_int, @function
large_int:
.LFB19:
	.loc 1 735 0
	pushl	%ebp
.LCFI15:
	movl	%esp, %ebp
.LCFI16:
	subl	$32, %esp
.LCFI17:
	.loc 1 738 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L32
	.loc 1 739 0
	movl	$0, -28(%ebp)
	jmp	.L34
.L32:
	.loc 1 741 0
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	movl	%edx, -4(%ebp)
	.loc 1 744 0
	movl	-8(%ebp), %eax
	movw	$0, %ax
	movl	-4(%ebp), %edx
	andb	$255, %dh
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L35
	.loc 1 745 0
	movl	$0, -28(%ebp)
	jmp	.L34
.L35:
	.loc 1 748 0
	movl	-8(%ebp), %eax
	movl	-4(%ebp), %edx
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	cmpl	$0, -20(%ebp)
	ja	.L37
	cmpl	$0, -20(%ebp)
	jb	.L39
	cmpl	$32767, -24(%ebp)
	ja	.L37
.L39:
	.loc 1 749 0
	movl	$0, -28(%ebp)
	jmp	.L34
.L37:
	.loc 1 752 0
	movzwl	-8(%ebp),%eax
	movl	-4(%ebp), %edx
	andl	$0, %edx
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L40
	.loc 1 753 0
	movl	$0, -28(%ebp)
	jmp	.L34
.L40:
	.loc 1 755 0
	movl	$1, -28(%ebp)
.L34:
	movl	-28(%ebp), %eax
	.loc 1 756 0
	leave
	ret
.LFE19:
	.size	large_int, .-large_int
.globl reg_or_0_operand
	.type	reg_or_0_operand, @function
reg_or_0_operand:
.LFB20:
	.loc 1 766 0
	pushl	%ebp
.LCFI18:
	movl	%esp, %ebp
.LCFI19:
	pushl	%ebx
.LCFI20:
	subl	$20, %esp
.LCFI21:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 767 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -12(%ebp)
	cmpl	$65, -12(%ebp)
	je	.L46
	cmpl	$65, -12(%ebp)
	ja	.L48
	cmpl	$64, -12(%ebp)
	je	.L45
	jmp	.L44
.L48:
	cmpl	$71, -12(%ebp)
	je	.L47
	cmpl	$73, -12(%ebp)
	je	.L47
	jmp	.L44
.L45:
	.loc 1 770 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L49
	.loc 1 771 0
	movl	$0, -8(%ebp)
	jmp	.L51
.L49:
	.loc 1 772 0
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L51
.L46:
	.loc 1 775 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L52
	.loc 1 776 0
	movl	$0, -8(%ebp)
	jmp	.L51
.L52:
	.loc 1 777 0
	movl	12(%ebp), %edx
	movl	const_tiny_rtx@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	8(%ebp), %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L51
.L47:
	.loc 1 781 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	register_operand@PLT
	movl	%eax, -8(%ebp)
	jmp	.L51
.L44:
	.loc 1 787 0
	movl	$0, -8(%ebp)
.L51:
	movl	-8(%ebp), %eax
	.loc 1 788 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE20:
	.size	reg_or_0_operand, .-reg_or_0_operand
.globl true_reg_or_0_operand
	.type	true_reg_or_0_operand, @function
true_reg_or_0_operand:
.LFB21:
	.loc 1 797 0
	pushl	%ebp
.LCFI22:
	movl	%esp, %ebp
.LCFI23:
	pushl	%ebx
.LCFI24:
	subl	$20, %esp
.LCFI25:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 798 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -12(%ebp)
	cmpl	$65, -12(%ebp)
	je	.L58
	cmpl	$65, -12(%ebp)
	ja	.L60
	cmpl	$64, -12(%ebp)
	je	.L57
	jmp	.L56
.L60:
	cmpl	$71, -12(%ebp)
	je	.L59
	cmpl	$73, -12(%ebp)
	je	.L59
	jmp	.L56
.L57:
	.loc 1 801 0
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L61
.L58:
	.loc 1 804 0
	movl	12(%ebp), %edx
	movl	const_tiny_rtx@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	8(%ebp), %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L61
.L59:
	.loc 1 808 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	register_operand@PLT
	movl	%eax, -8(%ebp)
	jmp	.L61
.L56:
	.loc 1 814 0
	movl	$0, -8(%ebp)
.L61:
	movl	-8(%ebp), %eax
	.loc 1 815 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE21:
	.size	true_reg_or_0_operand, .-true_reg_or_0_operand
.globl mips_const_double_ok
	.type	mips_const_double_ok, @function
mips_const_double_ok:
.LFB22:
	.loc 1 823 0
	pushl	%ebp
.LCFI26:
	movl	%esp, %ebp
.LCFI27:
	subl	$4, %esp
.LCFI28:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 824 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	je	.L64
	.loc 1 825 0
	movl	$0, -4(%ebp)
	jmp	.L66
.L64:
	.loc 1 827 0
	cmpl	$0, 12(%ebp)
	jne	.L67
	.loc 1 828 0
	movl	$1, -4(%ebp)
	jmp	.L66
.L67:
	.loc 1 831 0
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L69
	.loc 1 832 0
	movl	$0, -4(%ebp)
	jmp	.L66
.L69:
	.loc 1 834 0
	cmpl	$15, 12(%ebp)
	je	.L71
	cmpl	$16, 12(%ebp)
	je	.L71
	.loc 1 835 0
	movl	$0, -4(%ebp)
	jmp	.L66
.L71:
	.loc 1 837 0
	movl	12(%ebp), %eax
	movl	const_tiny_rtx@GOT(%ecx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	8(%ebp), %eax
	jne	.L74
	.loc 1 838 0
	movl	$1, -4(%ebp)
	jmp	.L66
.L74:
	.loc 1 840 0
	movl	$0, -4(%ebp)
.L66:
	movl	-4(%ebp), %eax
	.loc 1 841 0
	leave
	ret
.LFE22:
	.size	mips_const_double_ok, .-mips_const_double_ok
.globl const_float_1_operand
	.type	const_float_1_operand, @function
const_float_1_operand:
.LFB23:
	.loc 1 849 0
	pushl	%ebp
.LCFI29:
	movl	%esp, %ebp
.LCFI30:
	pushl	%ebx
.LCFI31:
	subl	$52, %esp
.LCFI32:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 852 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	jne	.L78
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	cmpl	12(%ebp), %eax
	jne	.L78
	cmpl	$16, 12(%ebp)
	je	.L81
	cmpl	$15, 12(%ebp)
	je	.L81
.L78:
	.loc 1 855 0
	movl	$0, -40(%ebp)
	jmp	.L83
.L81:
	.loc 1 857 0
	movl	8(%ebp), %edx
	addl	$4, %edx
	leal	-28(%ebp), %ecx
	movl	(%edx), %eax
	movl	%eax, (%ecx)
	movl	4(%edx), %eax
	movl	%eax, 4(%ecx)
	movl	8(%edx), %eax
	movl	%eax, 8(%ecx)
	movl	12(%edx), %eax
	movl	%eax, 12(%ecx)
	movl	16(%edx), %eax
	movl	%eax, 16(%ecx)
	movl	20(%edx), %eax
	movl	%eax, 20(%ecx)
	.loc 1 859 0
	movl	dconst1@GOT(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$103, (%esp)
	call	real_compare@PLT
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
.L83:
	movl	-40(%ebp), %eax
	.loc 1 860 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE23:
	.size	const_float_1_operand, .-const_float_1_operand
.globl __moddi3
	.type	mips16_simple_memory_operand, @function
mips16_simple_memory_operand:
.LFB24:
	.loc 1 870 0
	pushl	%ebp
.LCFI33:
	movl	%esp, %ebp
.LCFI34:
	pushl	%edi
.LCFI35:
	pushl	%esi
.LCFI36:
	pushl	%ebx
.LCFI37:
	subl	$60, %esp
.LCFI38:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 874 0
	cmpl	$52, 16(%ebp)
	jne	.L86
	.loc 1 879 0
	movl	$0, -52(%ebp)
	jmp	.L88
.L86:
	.loc 1 882 0
	movl	16(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 1 884 0
	movl	12(%ebp), %eax
	movl	4(%eax), %esi
	movl	8(%eax), %edi
	movl	-24(%ebp), %eax
	movl	$0, %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	%esi, (%esp)
	movl	%edi, 4(%esp)
	call	__moddi3@PLT
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L89
	.loc 1 885 0
	movl	$0, -52(%ebp)
	jmp	.L88
.L89:
	.loc 1 886 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	jne	.L91
	movl	16(%ebp), %eax
	movl	mode_size@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$4, %al
	jne	.L91
	.loc 1 887 0
	movl	$256, -20(%ebp)
	.loc 1 886 0
	jmp	.L94
.L91:
	.loc 1 889 0
	movl	$32, -20(%ebp)
.L94:
	.loc 1 890 0
	movl	12(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	testl	%edx, %edx
	js	.L95
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -48(%ebp)
	movl	%ecx, -44(%ebp)
	movl	-20(%ebp), %eax
	imull	-24(%ebp), %eax
	movl	%eax, -40(%ebp)
	movl	$0, -36(%ebp)
	movl	-36(%ebp), %ecx
	cmpl	%ecx, -44(%ebp)
	jg	.L95
	movl	-36(%ebp), %eax
	cmpl	%eax, -44(%ebp)
	jl	.L98
	movl	-40(%ebp), %edx
	cmpl	%edx, -48(%ebp)
	jae	.L95
.L98:
	.loc 1 891 0
	movl	$1, -52(%ebp)
	jmp	.L88
.L95:
	.loc 1 892 0
	movl	$0, -52(%ebp)
.L88:
	movl	-52(%ebp), %eax
	.loc 1 893 0
	addl	$60, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE24:
	.size	mips16_simple_memory_operand, .-mips16_simple_memory_operand
.globl simple_memory_operand
	.type	simple_memory_operand, @function
simple_memory_operand:
.LFB25:
	.loc 1 902 0
	pushl	%ebp
.LCFI39:
	movl	%esp, %ebp
.LCFI40:
	pushl	%esi
.LCFI41:
	pushl	%ebx
.LCFI42:
	subl	$80, %esp
.LCFI43:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 906 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	je	.L101
	.loc 1 907 0
	movl	$0, -64(%ebp)
	jmp	.L103
.L101:
	.loc 1 913 0
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L104
	movl	$8, -56(%ebp)
	jmp	.L106
.L104:
	movl	$4, -56(%ebp)
.L106:
	movl	-56(%ebp), %eax
	cmpl	%eax, -60(%ebp)
	jbe	.L107
	.loc 1 914 0
	movl	$0, -64(%ebp)
	jmp	.L103
.L107:
	.loc 1 917 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 918 0
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -52(%ebp)
	cmpl	$78, -52(%ebp)
	je	.L112
	cmpl	$78, -52(%ebp)
	ja	.L114
	cmpl	$64, -52(%ebp)
	je	.L110
	cmpl	$71, -52(%ebp)
	je	.L111
	jmp	.L109
.L114:
	cmpl	$85, -52(%ebp)
	je	.L113
	cmpl	$145, -52(%ebp)
	je	.L111
	jmp	.L109
.L111:
	.loc 1 922 0
	movl	$1, -64(%ebp)
	jmp	.L103
.L110:
	.loc 1 925 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L115
	.loc 1 926 0
	movl	$0, -64(%ebp)
	jmp	.L103
.L115:
	.loc 1 927 0
	movl	-24(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -48(%ebp)
	movl	%edx, -44(%ebp)
	movl	$1, -64(%ebp)
	cmpl	$0, -44(%ebp)
	jb	.L103
	cmpl	$0, -44(%ebp)
	ja	.L118
	cmpl	$65535, -48(%ebp)
	jbe	.L103
.L118:
	movl	$0, -64(%ebp)
	jmp	.L103
.L113:
	.loc 1 930 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 931 0
	movl	-24(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 932 0
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L119
	movl	-16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L119
	movl	-16(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -40(%ebp)
	movl	%edx, -36(%ebp)
	cmpl	$0, -36(%ebp)
	ja	.L119
	cmpl	$0, -36(%ebp)
	jb	.L123
	cmpl	$65535, -40(%ebp)
	ja	.L119
.L123:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L124
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_simple_memory_operand
	testl	%eax, %eax
	je	.L119
.L124:
	.loc 1 936 0
	movl	$1, -64(%ebp)
	jmp	.L103
.L119:
	.loc 1 938 0
	movl	-16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L126
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L126
	movl	-20(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -32(%ebp)
	movl	%edx, -28(%ebp)
	cmpl	$0, -28(%ebp)
	ja	.L126
	cmpl	$0, -28(%ebp)
	jb	.L130
	cmpl	$65535, -32(%ebp)
	ja	.L126
.L130:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L131
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_simple_memory_operand
	testl	%eax, %eax
	je	.L126
.L131:
	.loc 1 942 0
	movl	$1, -64(%ebp)
	jmp	.L103
.L126:
	.loc 1 945 0
	movl	$0, -64(%ebp)
	jmp	.L103
.L112:
	.loc 1 992 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L133
	movl	-24(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L133
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jle	.L133
.LBB2:
	.loc 1 998 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	68(%eax), %esi
	call	get_pool_size@PLT
	leal	(%esi,%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 999 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$4, %al
	jne	.L137
	.loc 1 1000 0
	cmpl	$1023, -12(%ebp)
	setle	%al
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	jmp	.L103
.L137:
	.loc 1 1001 0
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$8, %al
	jne	.L139
	.loc 1 1002 0
	cmpl	$255, -12(%ebp)
	setle	%al
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	jmp	.L103
.L139:
	.loc 1 1004 0
	movl	$0, -64(%ebp)
	jmp	.L103
.L133:
.LBE2:
	.loc 1 1007 0
	movl	$0, -64(%ebp)
	jmp	.L103
.L109:
	.loc 1 1013 0
	movl	$0, -64(%ebp)
.L103:
	movl	-64(%ebp), %eax
	.loc 1 1014 0
	addl	$80, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE25:
	.size	simple_memory_operand, .-simple_memory_operand
.globl double_memory_operand
	.type	double_memory_operand, @function
double_memory_operand:
.LFB26:
	.loc 1 1023 0
	pushl	%ebp
.LCFI44:
	movl	%esp, %ebp
.LCFI45:
	pushl	%ebx
.LCFI46:
	subl	$116, %esp
.LCFI47:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1024 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L143
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	memory_operand@PLT
	testl	%eax, %eax
	jne	.L145
.L143:
	.loc 1 1032 0
	movl	reload_in_progress@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L146
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L146
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	jbe	.L146
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	testw	%ax, %ax
	jns	.L146
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	reg_equiv_mem@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L146
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	reg_equiv_mem@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	double_memory_operand@PLT
	testl	%eax, %eax
	je	.L146
	.loc 1 1038 0
	movl	$1, -92(%ebp)
	jmp	.L153
.L146:
	.loc 1 1043 0
	movl	reload_in_progress@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L154
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L154
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	je	.L157
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L154
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	jbe	.L154
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	testw	%ax, %ax
	jns	.L154
.L157:
	.loc 1 1049 0
	movl	$1, -92(%ebp)
	jmp	.L153
.L154:
	.loc 1 1051 0
	movl	reload_in_progress@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L161
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L161
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L161
.LBB3:
	.loc 1 1057 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 1062 0
	movl	-16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L165
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L165
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -88(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L168
	movl	$17, -84(%ebp)
	jmp	.L170
.L168:
	movl	$30, -84(%ebp)
.L170:
	movl	-84(%ebp), %eax
	cmpl	%eax, -88(%ebp)
	je	.L171
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	jne	.L165
.L171:
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L173
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -80(%ebp)
	movl	%edx, -76(%ebp)
	cmpl	$0, -76(%ebp)
	ja	.L175
	cmpl	$0, -76(%ebp)
	jb	.L173
	cmpl	$65535, -80(%ebp)
	ja	.L175
.L173:
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L165
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L165
.L175:
	.loc 1 1070 0
	movl	$1, -92(%ebp)
	jmp	.L153
.L165:
	.loc 1 1074 0
	movl	-16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L178
.LBB4:
	.loc 1 1078 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 1079 0
	movl	-12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L178
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L178
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -72(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L182
	movl	$17, -68(%ebp)
	jmp	.L184
.L182:
	movl	$30, -68(%ebp)
.L184:
	movl	-68(%ebp), %eax
	cmpl	%eax, -72(%ebp)
	je	.L185
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	jne	.L178
.L185:
	movl	-12(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L187
	movl	-12(%ebp), %eax
	movl	12(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -64(%ebp)
	movl	%edx, -60(%ebp)
	cmpl	$0, -60(%ebp)
	ja	.L189
	cmpl	$0, -60(%ebp)
	jb	.L187
	cmpl	$65535, -64(%ebp)
	ja	.L189
.L187:
	movl	-12(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L178
	movl	-12(%ebp), %eax
	movl	12(%eax), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L178
.L189:
	.loc 1 1087 0
	movl	$1, -92(%ebp)
	jmp	.L153
.L178:
.LBE4:
	.loc 1 1093 0
	movl	-16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L161
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L161
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L161
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -56(%ebp)
	movl	%edx, -52(%ebp)
	cmpl	$0, -52(%ebp)
	ja	.L161
	cmpl	$0, -52(%ebp)
	jb	.L196
	cmpl	$65535, -56(%ebp)
	ja	.L161
.L196:
	.loc 1 1098 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 1099 0
	movl	-16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L161
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L161
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -48(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L199
	movl	$17, -44(%ebp)
	jmp	.L201
.L199:
	movl	$30, -44(%ebp)
.L201:
	movl	-44(%ebp), %eax
	cmpl	%eax, -48(%ebp)
	je	.L202
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	jne	.L161
.L202:
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L204
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -40(%ebp)
	movl	%edx, -36(%ebp)
	cmpl	$0, -36(%ebp)
	ja	.L206
	cmpl	$0, -36(%ebp)
	jb	.L204
	cmpl	$65535, -40(%ebp)
	ja	.L206
.L204:
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L161
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L161
.L206:
	.loc 1 1107 0
	movl	$1, -92(%ebp)
	jmp	.L153
.L161:
.LBE3:
	.loc 1 1111 0
	movl	$0, -92(%ebp)
	jmp	.L153
.L145:
	.loc 1 1114 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L209
	.loc 1 1117 0
	movl	$1, -92(%ebp)
	jmp	.L153
.L209:
	.loc 1 1123 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L211
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L211
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L211
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L211
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L216
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L218
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	pic_address_needs_scratch@PLT
	testl	%eax, %eax
	jne	.L216
.L218:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L211
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L216
.L211:
	.loc 1 1124 0
	movl	$1, -92(%ebp)
	jmp	.L153
.L216:
	.loc 1 1126 0
	movl	12(%ebp), %eax
	movl	mode_class@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	$1, %eax
	jne	.L221
	movl	$4, -28(%ebp)
	jmp	.L223
.L221:
	movl	$15, -28(%ebp)
.L223:
	movl	$1, 20(%esp)
	movl	$0, 16(%esp)
	movl	$4, 8(%esp)
	movl	$0, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	adjust_address_1@PLT
	movl	%eax, 8(%ebp)
	.loc 1 1128 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	memory_address_p@PLT
	movl	%eax, -92(%ebp)
.L153:
	movl	-92(%ebp), %eax
	.loc 1 1129 0
	addl	$116, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE26:
	.size	double_memory_operand, .-double_memory_operand
.globl equality_op
	.type	equality_op, @function
equality_op:
.LFB27:
	.loc 1 1137 0
	pushl	%ebp
.LCFI48:
	movl	%esp, %ebp
.LCFI49:
	subl	$8, %esp
.LCFI50:
	.loc 1 1138 0
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	cmpl	12(%ebp), %eax
	je	.L226
	.loc 1 1139 0
	movl	$0, -8(%ebp)
	jmp	.L228
.L226:
	.loc 1 1141 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$113, %ax
	je	.L229
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$112, %ax
	jne	.L231
.L229:
	movl	$1, -4(%ebp)
	jmp	.L232
.L231:
	movl	$0, -4(%ebp)
.L232:
	movl	-4(%ebp), %eax
	movl	%eax, -8(%ebp)
.L228:
	movl	-8(%ebp), %eax
	.loc 1 1142 0
	leave
	ret
.LFE27:
	.size	equality_op, .-equality_op
.globl cmp_op
	.type	cmp_op, @function
cmp_op:
.LFB28:
	.loc 1 1150 0
	pushl	%ebp
.LCFI51:
	movl	%esp, %ebp
.LCFI52:
	subl	$4, %esp
.LCFI53:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1151 0
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	cmpl	12(%ebp), %eax
	je	.L235
	.loc 1 1152 0
	movl	$0, -4(%ebp)
	jmp	.L237
.L235:
	.loc 1 1154 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ecx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$60, %al
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -4(%ebp)
.L237:
	movl	-4(%ebp), %eax
	.loc 1 1155 0
	leave
	ret
.LFE28:
	.size	cmp_op, .-cmp_op
.globl trap_cmp_op
	.type	trap_cmp_op, @function
trap_cmp_op:
.LFB29:
	.loc 1 1166 0
	pushl	%ebp
.LCFI54:
	movl	%esp, %ebp
.LCFI55:
	subl	$8, %esp
.LCFI56:
	.loc 1 1167 0
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	cmpl	12(%ebp), %eax
	je	.L240
	.loc 1 1168 0
	movl	$0, -4(%ebp)
	jmp	.L242
.L240:
	.loc 1 1170 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	subl	$112, %eax
	movl	%eax, -8(%ebp)
	cmpl	$9, -8(%ebp)
	ja	.L243
	movl	$1, %eax
	movzbl	-8(%ebp), %ecx
	sall	%cl, %eax
	andl	$615, %eax
	testl	%eax, %eax
	jne	.L244
	jmp	.L243
.L244:
	.loc 1 1178 0
	movl	$1, -4(%ebp)
	jmp	.L242
.L243:
	.loc 1 1181 0
	movl	$0, -4(%ebp)
.L242:
	movl	-4(%ebp), %eax
	.loc 1 1183 0
	leave
	ret
.LFE29:
	.size	trap_cmp_op, .-trap_cmp_op
.globl pc_or_label_operand
	.type	pc_or_label_operand, @function
pc_or_label_operand:
.LFB30:
	.loc 1 1191 0
	pushl	%ebp
.LCFI57:
	movl	%esp, %ebp
.LCFI58:
	subl	$4, %esp
.LCFI59:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1192 0
	movl	global_rtl@GOT(%ecx), %eax
	movl	(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L247
	.loc 1 1193 0
	movl	$1, -4(%ebp)
	jmp	.L249
.L247:
	.loc 1 1195 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	jne	.L250
	.loc 1 1196 0
	movl	$1, -4(%ebp)
	jmp	.L249
.L250:
	.loc 1 1198 0
	movl	$0, -4(%ebp)
.L249:
	movl	-4(%ebp), %eax
	.loc 1 1199 0
	leave
	ret
.LFE30:
	.size	pc_or_label_operand, .-pc_or_label_operand
.globl call_insn_operand
	.type	call_insn_operand, @function
call_insn_operand:
.LFB31:
	.loc 1 1210 0
	pushl	%ebp
.LCFI60:
	movl	%esp, %ebp
.LCFI61:
	pushl	%ebx
.LCFI62:
	subl	$20, %esp
.LCFI63:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1211 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L254
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L254
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L254
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L254
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L259
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L261
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pic_address_needs_scratch@PLT
	testl	%eax, %eax
	jne	.L259
.L261:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L254
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L254
.L259:
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L264
	movl	global_rtl@GOT(%ebx), %eax
	movl	20(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L264
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	jbe	.L254
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$180, %eax
	jbe	.L264
.L254:
	movl	$1, -8(%ebp)
	jmp	.L268
.L264:
	movl	$0, -8(%ebp)
.L268:
	movl	-8(%ebp), %eax
	.loc 1 1215 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE31:
	.size	call_insn_operand, .-call_insn_operand
.globl move_operand
	.type	move_operand, @function
move_operand:
.LFB32:
	.loc 1 1224 0
	pushl	%ebp
.LCFI64:
	movl	%esp, %ebp
.LCFI65:
	pushl	%ebx
.LCFI66:
	subl	$20, %esp
.LCFI67:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1228 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	general_operand@PLT
	testl	%eax, %eax
	je	.L271
	movl	mips_split_addresses@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L273
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_check_split@PLT
	testl	%eax, %eax
	je	.L273
	movl	reload_in_progress@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L273
	movl	reload_completed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L271
.L273:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L277
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L277
	movl	$0, 12(%esp)
	movl	$1, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_constant@PLT
	testl	%eax, %eax
	je	.L271
.L277:
	movl	$1, -8(%ebp)
	jmp	.L280
.L271:
	movl	$0, -8(%ebp)
.L280:
	movl	-8(%ebp), %eax
	.loc 1 1234 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE32:
	.size	move_operand, .-move_operand
.globl movdi_operand
	.type	movdi_operand, @function
movdi_operand:
.LFB33:
	.loc 1 1248 0
	pushl	%ebp
.LCFI68:
	movl	%esp, %ebp
.LCFI69:
	pushl	%ebx
.LCFI70:
	subl	$36, %esp
.LCFI71:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1249 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L283
	cmpl	$5, 12(%ebp)
	jne	.L283
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L283
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$5, %al
	jne	.L283
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 4(%esp)
	movl	%eax, (%esp)
	call	move_operand@PLT
	testl	%eax, %eax
	je	.L283
	.loc 1 1254 0
	movl	$1, -12(%ebp)
	jmp	.L289
.L283:
	.loc 1 1256 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	general_operand@PLT
	testl	%eax, %eax
	je	.L290
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L292
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L292
	movl	$0, 12(%esp)
	movl	$1, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_constant@PLT
	testl	%eax, %eax
	je	.L290
.L292:
	movl	$1, -8(%ebp)
	jmp	.L295
.L290:
	movl	$0, -8(%ebp)
.L295:
	movl	-8(%ebp), %eax
	movl	%eax, -12(%ebp)
.L289:
	movl	-12(%ebp), %eax
	.loc 1 1260 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE33:
	.size	movdi_operand, .-movdi_operand
.globl se_register_operand
	.type	se_register_operand, @function
se_register_operand:
.LFB34:
	.loc 1 1270 0
	pushl	%ebp
.LCFI72:
	movl	%esp, %ebp
.LCFI73:
	pushl	%ebx
.LCFI74:
	subl	$20, %esp
.LCFI75:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1271 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L298
	cmpl	$5, 12(%ebp)
	jne	.L298
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L298
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$5, %al
	jne	.L298
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	cmpb	$4, %al
	jne	.L298
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 4(%esp)
	movl	%eax, (%esp)
	call	register_operand@PLT
	testl	%eax, %eax
	je	.L298
	.loc 1 1277 0
	movl	$1, -8(%ebp)
	jmp	.L305
.L298:
	.loc 1 1279 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	register_operand@PLT
	movl	%eax, -8(%ebp)
.L305:
	movl	-8(%ebp), %eax
	.loc 1 1280 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE34:
	.size	se_register_operand, .-se_register_operand
.globl se_reg_or_0_operand
	.type	se_reg_or_0_operand, @function
se_reg_or_0_operand:
.LFB35:
	.loc 1 1290 0
	pushl	%ebp
.LCFI76:
	movl	%esp, %ebp
.LCFI77:
	pushl	%ebx
.LCFI78:
	subl	$20, %esp
.LCFI79:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1291 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L308
	cmpl	$5, 12(%ebp)
	jne	.L308
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L308
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$5, %al
	jne	.L308
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	cmpb	$4, %al
	jne	.L308
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 4(%esp)
	movl	%eax, (%esp)
	call	register_operand@PLT
	testl	%eax, %eax
	je	.L308
	.loc 1 1297 0
	movl	$1, -8(%ebp)
	jmp	.L315
.L308:
	.loc 1 1299 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	reg_or_0_operand@PLT
	movl	%eax, -8(%ebp)
.L315:
	movl	-8(%ebp), %eax
	.loc 1 1300 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE35:
	.size	se_reg_or_0_operand, .-se_reg_or_0_operand
.globl se_uns_arith_operand
	.type	se_uns_arith_operand, @function
se_uns_arith_operand:
.LFB36:
	.loc 1 1310 0
	pushl	%ebp
.LCFI80:
	movl	%esp, %ebp
.LCFI81:
	pushl	%ebx
.LCFI82:
	subl	$20, %esp
.LCFI83:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1311 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L318
	cmpl	$5, 12(%ebp)
	jne	.L318
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L318
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$5, %al
	jne	.L318
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	cmpb	$4, %al
	jne	.L318
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 4(%esp)
	movl	%eax, (%esp)
	call	register_operand@PLT
	testl	%eax, %eax
	je	.L318
	.loc 1 1317 0
	movl	$1, -8(%ebp)
	jmp	.L325
.L318:
	.loc 1 1319 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	uns_arith_operand@PLT
	movl	%eax, -8(%ebp)
.L325:
	movl	-8(%ebp), %eax
	.loc 1 1320 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE36:
	.size	se_uns_arith_operand, .-se_uns_arith_operand
.globl se_arith_operand
	.type	se_arith_operand, @function
se_arith_operand:
.LFB37:
	.loc 1 1330 0
	pushl	%ebp
.LCFI84:
	movl	%esp, %ebp
.LCFI85:
	pushl	%ebx
.LCFI86:
	subl	$20, %esp
.LCFI87:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1331 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L328
	cmpl	$5, 12(%ebp)
	jne	.L328
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L328
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$5, %al
	jne	.L328
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	cmpb	$4, %al
	jne	.L328
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 4(%esp)
	movl	%eax, (%esp)
	call	register_operand@PLT
	testl	%eax, %eax
	je	.L328
	.loc 1 1337 0
	movl	$1, -8(%ebp)
	jmp	.L335
.L328:
	.loc 1 1339 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	arith_operand@PLT
	movl	%eax, -8(%ebp)
.L335:
	movl	-8(%ebp), %eax
	.loc 1 1340 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE37:
	.size	se_arith_operand, .-se_arith_operand
.globl se_nonmemory_operand
	.type	se_nonmemory_operand, @function
se_nonmemory_operand:
.LFB38:
	.loc 1 1350 0
	pushl	%ebp
.LCFI88:
	movl	%esp, %ebp
.LCFI89:
	pushl	%ebx
.LCFI90:
	subl	$20, %esp
.LCFI91:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1351 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L338
	cmpl	$5, 12(%ebp)
	jne	.L338
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L338
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$5, %al
	jne	.L338
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	cmpb	$4, %al
	jne	.L338
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 4(%esp)
	movl	%eax, (%esp)
	call	register_operand@PLT
	testl	%eax, %eax
	je	.L338
	.loc 1 1357 0
	movl	$1, -8(%ebp)
	jmp	.L345
.L338:
	.loc 1 1359 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	nonmemory_operand@PLT
	movl	%eax, -8(%ebp)
.L345:
	movl	-8(%ebp), %eax
	.loc 1 1360 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE38:
	.size	se_nonmemory_operand, .-se_nonmemory_operand
.globl consttable_operand
	.type	consttable_operand, @function
consttable_operand:
.LFB39:
	.loc 1 1371 0
	pushl	%ebp
.LCFI92:
	movl	%esp, %ebp
.LCFI93:
	subl	$4, %esp
.LCFI94:
	.loc 1 1372 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L348
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L348
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L348
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	je	.L348
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L348
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L348
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$66, %ax
	je	.L348
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$150, %ax
	jne	.L356
.L348:
	movl	$1, -4(%ebp)
	jmp	.L357
.L356:
	movl	$0, -4(%ebp)
.L357:
	movl	-4(%ebp), %eax
	.loc 1 1373 0
	leave
	ret
.LFE39:
	.size	consttable_operand, .-consttable_operand
.globl coprocessor_operand
	.type	coprocessor_operand, @function
coprocessor_operand:
.LFB40:
	.loc 1 1382 0
	pushl	%ebp
.LCFI95:
	movl	%esp, %ebp
.LCFI96:
	subl	$4, %esp
.LCFI97:
	.loc 1 1383 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L360
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$79, %eax
	jbe	.L360
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L360
	movl	$1, -4(%ebp)
	jmp	.L364
.L360:
	movl	$0, -4(%ebp)
.L364:
	movl	-4(%ebp), %eax
	.loc 1 1386 0
	leave
	ret
.LFE40:
	.size	coprocessor_operand, .-coprocessor_operand
.globl coprocessor2_operand
	.type	coprocessor2_operand, @function
coprocessor2_operand:
.LFB41:
	.loc 1 1392 0
	pushl	%ebp
.LCFI98:
	movl	%esp, %ebp
.LCFI99:
	subl	$4, %esp
.LCFI100:
	.loc 1 1393 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L367
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$111, %eax
	jbe	.L367
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$143, %eax
	ja	.L367
	movl	$1, -4(%ebp)
	jmp	.L371
.L367:
	movl	$0, -4(%ebp)
.L371:
	movl	-4(%ebp), %eax
	.loc 1 1396 0
	leave
	ret
.LFE41:
	.size	coprocessor2_operand, .-coprocessor2_operand
.globl symbolic_operand
	.type	symbolic_operand, @function
symbolic_operand:
.LFB42:
	.loc 1 1405 0
	pushl	%ebp
.LCFI101:
	movl	%esp, %ebp
.LCFI102:
	subl	$4, %esp
.LCFI103:
	.loc 1 1406 0
	cmpl	$0, 12(%ebp)
	je	.L374
	movl	8(%ebp), %edx
	movzbl	2(%edx), %eax
	testb	%al, %al
	je	.L374
	movl	8(%ebp), %edx
	movzbl	2(%edx), %eax
	movzbl	%al, %eax
	cmpl	12(%ebp), %eax
	je	.L374
	.loc 1 1407 0
	movl	$0, -4(%ebp)
	jmp	.L378
.L374:
	.loc 1 1408 0
	movl	8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$78, %ax
	je	.L379
	movl	8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$77, %ax
	jne	.L381
.L379:
	.loc 1 1409 0
	movl	$1, -4(%ebp)
	jmp	.L378
.L381:
	.loc 1 1410 0
	movl	8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$68, %ax
	jne	.L382
	movl	8(%ebp), %edx
	movl	4(%edx), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L382
	movl	8(%ebp), %edx
	movl	4(%edx), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L382
	movl	8(%ebp), %edx
	movl	4(%edx), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L382
	.loc 1 1414 0
	movl	$1, -4(%ebp)
	jmp	.L378
.L382:
	.loc 1 1415 0
	movl	$0, -4(%ebp)
.L378:
	movl	-4(%ebp), %eax
	.loc 1 1416 0
	leave
	ret
.LFE42:
	.size	symbolic_operand, .-symbolic_operand
.globl mips_check_split
	.type	mips_check_split, @function
mips_check_split:
.LFB43:
	.loc 1 1438 0
	pushl	%ebp
.LCFI104:
	movl	%esp, %ebp
.LCFI105:
	subl	$12, %esp
.LCFI106:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1441 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ecx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L389
	movl	$8, -8(%ebp)
	jmp	.L391
.L389:
	movl	$4, -8(%ebp)
.L391:
	movl	-8(%ebp), %eax
	cmpl	%eax, -12(%ebp)
	jbe	.L392
	.loc 1 1442 0
	movl	$0, -4(%ebp)
	jmp	.L394
.L392:
	.loc 1 1444 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L395
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L397
.L395:
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L398
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L398
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L397
.L398:
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	jne	.L401
.L397:
	.loc 1 1449 0
	movl	$1, -4(%ebp)
	jmp	.L394
.L401:
	.loc 1 1451 0
	movl	$0, -4(%ebp)
.L394:
	movl	-4(%ebp), %eax
	.loc 1 1452 0
	leave
	ret
.LFE43:
	.size	mips_check_split, .-mips_check_split
.globl mips_reg_mode_ok_for_base_p
	.type	mips_reg_mode_ok_for_base_p, @function
mips_reg_mode_ok_for_base_p:
.LFB44:
	.loc 1 1461 0
	pushl	%ebp
.LCFI107:
	movl	%esp, %ebp
.LCFI108:
	subl	$24, %esp
.LCFI109:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1462 0
	cmpl	$0, 16(%ebp)
	je	.L404
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L406
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L408
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$1, %eax
	jle	.L410
	jmp	.L412
.L408:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$1, %ax
	jle	.L410
.L412:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L413
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$7, %eax
	jle	.L415
	jmp	.L410
.L413:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$7, %ax
	jle	.L415
.L410:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L416
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$16, %eax
	je	.L415
	jmp	.L419
.L416:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$16, %ax
	je	.L415
.L419:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L420
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$17, %eax
	je	.L415
	jmp	.L423
.L420:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$17, %ax
	je	.L415
.L423:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L424
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$1, %eax
	je	.L415
	jmp	.L427
.L424:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$1, %ax
	je	.L415
.L427:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L428
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L415
	jmp	.L431
.L428:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	testw	%ax, %ax
	je	.L415
.L431:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L432
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	jne	.L434
	jmp	.L436
.L432:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$29, %ax
	jne	.L434
.L436:
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ecx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$4, %al
	je	.L415
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ecx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$8, %al
	jne	.L434
.L415:
	movl	$1, -16(%ebp)
	jmp	.L438
.L434:
	movl	$0, -16(%ebp)
.L438:
	movl	-16(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L439
.L406:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L440
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$31, %eax
	setbe	%al
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	jmp	.L442
.L440:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	movl	%eax, %edx
	movl	reg_renumber@GOT(%ecx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movzwl	(%eax), %eax
	cwtl
	cmpl	$31, %eax
	setbe	%al
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
.L442:
	movl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
.L439:
	movl	-20(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L443
.L404:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$175, %eax
	ja	.L444
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L446
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$1, %eax
	jbe	.L448
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$7, %eax
	jbe	.L450
.L448:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$16, %eax
	je	.L450
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$17, %eax
	je	.L450
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$1, %eax
	je	.L450
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L450
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	jne	.L455
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ecx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$4, %al
	je	.L450
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ecx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$8, %al
	jne	.L455
.L450:
	movl	$1, -4(%ebp)
	jmp	.L458
.L455:
	movl	$0, -4(%ebp)
.L458:
	movzbl	-4(%ebp), %eax
	testb	%al, %al
	jne	.L444
	jmp	.L459
.L446:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$31, %eax
	ja	.L459
.L444:
	movl	$1, -8(%ebp)
	jmp	.L460
.L459:
	movl	$0, -8(%ebp)
.L460:
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
.L443:
	movl	-24(%ebp), %eax
	.loc 1 1465 0
	leave
	ret
.LFE44:
	.size	mips_reg_mode_ok_for_base_p, .-mips_reg_mode_ok_for_base_p
.globl mips_legitimate_address_p
	.type	mips_legitimate_address_p, @function
mips_legitimate_address_p:
.LFB45:
	.loc 1 1477 0
	pushl	%ebp
.LCFI110:
	movl	%esp, %ebp
.LCFI111:
	pushl	%edi
.LCFI112:
	pushl	%esi
.LCFI113:
	pushl	%ebx
.LCFI114:
	subl	$60, %esp
.LCFI115:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1487 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L463
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L463
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L463
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L463
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L478
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L470
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	pic_address_needs_scratch@PLT
	testl	%eax, %eax
	jne	.L478
.L470:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L463
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L478
.L463:
	movl	mips_split_addresses@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L473
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_check_split@PLT
	testl	%eax, %eax
	jne	.L478
.L473:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L475
	movl	$0, 12(%esp)
	movl	$1, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_constant@PLT
	testl	%eax, %eax
	je	.L478
.L475:
	.loc 1 1490 0
	movl	$1, -52(%ebp)
	jmp	.L477
.L479:
	.loc 1 1493 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 12(%ebp)
.L478:
	.loc 1 1492 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$73, %ax
	je	.L479
	.loc 1 1497 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L481
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_reg_mode_ok_for_base_p@PLT
	testl	%eax, %eax
	je	.L481
	.loc 1 1499 0
	movl	$1, -52(%ebp)
	jmp	.L477
.L481:
	.loc 1 1501 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$145, %ax
	jne	.L484
	movl	mips_split_addresses@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L484
.LBB5:
	.loc 1 1503 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 1504 0
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 1506 0
	jmp	.L487
.L488:
	.loc 1 1507 0
	movl	-40(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -40(%ebp)
.L487:
	.loc 1 1506 0
	movl	-40(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$73, %ax
	je	.L488
	.loc 1 1508 0
	movl	-40(%ebp), %ecx
	movzwl	(%ecx), %eax
	cmpw	$71, %ax
	jne	.L484
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_reg_mode_ok_for_base_p@PLT
	testl	%eax, %eax
	je	.L484
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %edx
	movl	%edx, (%esp)
	call	mips_check_split@PLT
	testl	%eax, %eax
	je	.L484
	.loc 1 1511 0
	movl	$1, -52(%ebp)
	jmp	.L477
.L484:
.LBE5:
	.loc 1 1514 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L493
.LBB6:
	.loc 1 1516 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 1517 0
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1521 0
	jmp	.L495
.L496:
	.loc 1 1522 0
	movl	-32(%ebp), %ecx
	movl	4(%ecx), %ecx
	movl	%ecx, -32(%ebp)
.L495:
	.loc 1 1521 0
	movl	-32(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$73, %ax
	je	.L496
	.loc 1 1523 0
	movl	-32(%ebp), %ecx
	movzwl	(%ecx), %eax
	movzwl	%ax, %eax
	movl	%eax, -24(%ebp)
	.loc 1 1525 0
	jmp	.L498
.L499:
	.loc 1 1526 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
.L498:
	.loc 1 1525 0
	movl	-28(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$73, %ax
	je	.L499
	.loc 1 1527 0
	movl	-28(%ebp), %ecx
	movzwl	(%ecx), %eax
	movzwl	%ax, %eax
	movl	%eax, -20(%ebp)
	.loc 1 1531 0
	cmpl	$71, -24(%ebp)
	jne	.L493
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_reg_mode_ok_for_base_p@PLT
	testl	%eax, %eax
	je	.L493
	.loc 1 1534 0
	cmpl	$64, -20(%ebp)
	jne	.L503
	movl	-28(%ebp), %ecx
	movl	4(%ecx), %eax
	movl	8(%ecx), %edx
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -48(%ebp)
	movl	%edx, -44(%ebp)
	cmpl	$0, -44(%ebp)
	ja	.L503
	cmpl	$0, -44(%ebp)
	jb	.L506
	cmpl	$65535, -48(%ebp)
	ja	.L503
.L506:
	.loc 1 1535 0
	movl	$1, -52(%ebp)
	jmp	.L477
.L503:
	.loc 1 1540 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L507
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_gp_offset_p@PLT
	testl	%eax, %eax
	je	.L507
	.loc 1 1542 0
	movl	$1, -52(%ebp)
	jmp	.L477
.L507:
	.loc 1 1562 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L510
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L510
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L493
.L510:
	movl	-28(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$77, %ax
	je	.L513
	movl	-28(%ebp), %ecx
	movzwl	(%ecx), %eax
	cmpw	$78, %ax
	je	.L513
	movl	-28(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$64, %ax
	je	.L513
	movl	-28(%ebp), %ecx
	movzwl	(%ecx), %eax
	cmpw	$144, %ax
	je	.L513
	movl	-28(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$68, %ax
	jne	.L493
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L519
	movl	-28(%ebp), %ecx
	movl	%ecx, (%esp)
	call	pic_address_needs_scratch@PLT
	testl	%eax, %eax
	jne	.L493
.L519:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L513
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L493
.L513:
	movl	mips_split_addresses@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L493
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L523
	cmpl	$68, -20(%ebp)
	jne	.L523
	movl	-28(%ebp), %edx
	movl	4(%edx), %eax
	movzwl	(%eax), %eax
	cmpw	$86, %ax
	je	.L493
.L523:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L526
	cmpl	$64, -20(%ebp)
	jne	.L493
	movl	-28(%ebp), %ecx
	movl	4(%ecx), %eax
	movl	8(%ecx), %edx
	movl	$4, 8(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	trunc_int_for_mode@PLT
	movl	%eax, %esi
	movl	%edx, %edi
	movl	-28(%ebp), %ecx
	movl	4(%ecx), %eax
	movl	8(%ecx), %edx
	movl	%edi, %ecx
	xorl	%edx, %ecx
	xorl	%esi, %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	jne	.L493
.L526:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L493
	.loc 1 1580 0
	movl	$1, -52(%ebp)
	jmp	.L477
.L493:
.LBE6:
	.loc 1 1588 0
	movl	$0, -52(%ebp)
.L477:
	movl	-52(%ebp), %eax
	.loc 1 1589 0
	addl	$60, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE45:
	.size	mips_legitimate_address_p, .-mips_legitimate_address_p
	.type	m16_check_op, @function
m16_check_op:
.LFB46:
	.loc 1 1603 0
	pushl	%ebp
.LCFI116:
	movl	%esp, %ebp
.LCFI117:
	pushl	%edi
.LCFI118:
	pushl	%esi
.LCFI119:
	subl	$48, %esp
.LCFI120:
	.loc 1 1604 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L532
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -48(%ebp)
	movl	%ecx, -44(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -40(%ebp)
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	%ecx, -36(%ebp)
	movl	-36(%ebp), %eax
	cmpl	%eax, -44(%ebp)
	jl	.L532
	movl	-36(%ebp), %edx
	cmpl	%edx, -44(%ebp)
	jg	.L535
	movl	-40(%ebp), %ecx
	cmpl	%ecx, -48(%ebp)
	jb	.L532
.L535:
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -32(%ebp)
	movl	%ecx, -28(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -24(%ebp)
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	%ecx, -20(%ebp)
	movl	-20(%ebp), %eax
	cmpl	%eax, -28(%ebp)
	jg	.L532
	movl	-20(%ebp), %edx
	cmpl	%edx, -28(%ebp)
	jl	.L537
	movl	-24(%ebp), %ecx
	cmpl	%ecx, -32(%ebp)
	ja	.L532
.L537:
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -16(%ebp)
	movl	%ecx, -12(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, %esi
	movl	%eax, %edi
	sarl	$31, %edi
	movl	-16(%ebp), %eax
	andl	%esi, %eax
	movl	-12(%ebp), %edx
	andl	%edi, %edx
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L532
	movl	$1, -52(%ebp)
	jmp	.L539
.L532:
	movl	$0, -52(%ebp)
.L539:
	movl	-52(%ebp), %eax
	.loc 1 1608 0
	addl	$48, %esp
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE46:
	.size	m16_check_op, .-m16_check_op
.globl m16_uimm3_b
	.type	m16_uimm3_b, @function
m16_uimm3_b:
.LFB47:
	.loc 1 1614 0
	pushl	%ebp
.LCFI121:
	movl	%esp, %ebp
.LCFI122:
	subl	$16, %esp
.LCFI123:
	.loc 1 1615 0
	movl	$0, 12(%esp)
	movl	$8, 8(%esp)
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1616 0
	leave
	ret
.LFE47:
	.size	m16_uimm3_b, .-m16_uimm3_b
.globl m16_simm4_1
	.type	m16_simm4_1, @function
m16_simm4_1:
.LFB48:
	.loc 1 1622 0
	pushl	%ebp
.LCFI124:
	movl	%esp, %ebp
.LCFI125:
	subl	$16, %esp
.LCFI126:
	.loc 1 1623 0
	movl	$0, 12(%esp)
	movl	$7, 8(%esp)
	movl	$-8, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1624 0
	leave
	ret
.LFE48:
	.size	m16_simm4_1, .-m16_simm4_1
.globl m16_nsimm4_1
	.type	m16_nsimm4_1, @function
m16_nsimm4_1:
.LFB49:
	.loc 1 1630 0
	pushl	%ebp
.LCFI127:
	movl	%esp, %ebp
.LCFI128:
	subl	$16, %esp
.LCFI129:
	.loc 1 1631 0
	movl	$0, 12(%esp)
	movl	$8, 8(%esp)
	movl	$-7, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1632 0
	leave
	ret
.LFE49:
	.size	m16_nsimm4_1, .-m16_nsimm4_1
.globl m16_simm5_1
	.type	m16_simm5_1, @function
m16_simm5_1:
.LFB50:
	.loc 1 1638 0
	pushl	%ebp
.LCFI130:
	movl	%esp, %ebp
.LCFI131:
	subl	$16, %esp
.LCFI132:
	.loc 1 1639 0
	movl	$0, 12(%esp)
	movl	$15, 8(%esp)
	movl	$-16, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1640 0
	leave
	ret
.LFE50:
	.size	m16_simm5_1, .-m16_simm5_1
.globl m16_nsimm5_1
	.type	m16_nsimm5_1, @function
m16_nsimm5_1:
.LFB51:
	.loc 1 1646 0
	pushl	%ebp
.LCFI133:
	movl	%esp, %ebp
.LCFI134:
	subl	$16, %esp
.LCFI135:
	.loc 1 1647 0
	movl	$0, 12(%esp)
	movl	$16, 8(%esp)
	movl	$-15, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1648 0
	leave
	ret
.LFE51:
	.size	m16_nsimm5_1, .-m16_nsimm5_1
.globl m16_uimm5_4
	.type	m16_uimm5_4, @function
m16_uimm5_4:
.LFB52:
	.loc 1 1654 0
	pushl	%ebp
.LCFI136:
	movl	%esp, %ebp
.LCFI137:
	subl	$16, %esp
.LCFI138:
	.loc 1 1655 0
	movl	$3, 12(%esp)
	movl	$60, 8(%esp)
	movl	$-64, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1656 0
	leave
	ret
.LFE52:
	.size	m16_uimm5_4, .-m16_uimm5_4
.globl m16_nuimm5_4
	.type	m16_nuimm5_4, @function
m16_nuimm5_4:
.LFB53:
	.loc 1 1662 0
	pushl	%ebp
.LCFI139:
	movl	%esp, %ebp
.LCFI140:
	subl	$16, %esp
.LCFI141:
	.loc 1 1663 0
	movl	$3, 12(%esp)
	movl	$64, 8(%esp)
	movl	$-60, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1664 0
	leave
	ret
.LFE53:
	.size	m16_nuimm5_4, .-m16_nuimm5_4
.globl m16_simm8_1
	.type	m16_simm8_1, @function
m16_simm8_1:
.LFB54:
	.loc 1 1670 0
	pushl	%ebp
.LCFI142:
	movl	%esp, %ebp
.LCFI143:
	subl	$16, %esp
.LCFI144:
	.loc 1 1671 0
	movl	$0, 12(%esp)
	movl	$127, 8(%esp)
	movl	$-128, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1672 0
	leave
	ret
.LFE54:
	.size	m16_simm8_1, .-m16_simm8_1
.globl m16_nsimm8_1
	.type	m16_nsimm8_1, @function
m16_nsimm8_1:
.LFB55:
	.loc 1 1678 0
	pushl	%ebp
.LCFI145:
	movl	%esp, %ebp
.LCFI146:
	subl	$16, %esp
.LCFI147:
	.loc 1 1679 0
	movl	$0, 12(%esp)
	movl	$128, 8(%esp)
	movl	$-127, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1680 0
	leave
	ret
.LFE55:
	.size	m16_nsimm8_1, .-m16_nsimm8_1
.globl m16_uimm8_1
	.type	m16_uimm8_1, @function
m16_uimm8_1:
.LFB56:
	.loc 1 1686 0
	pushl	%ebp
.LCFI148:
	movl	%esp, %ebp
.LCFI149:
	subl	$16, %esp
.LCFI150:
	.loc 1 1687 0
	movl	$0, 12(%esp)
	movl	$255, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1688 0
	leave
	ret
.LFE56:
	.size	m16_uimm8_1, .-m16_uimm8_1
.globl m16_nuimm8_1
	.type	m16_nuimm8_1, @function
m16_nuimm8_1:
.LFB57:
	.loc 1 1694 0
	pushl	%ebp
.LCFI151:
	movl	%esp, %ebp
.LCFI152:
	subl	$16, %esp
.LCFI153:
	.loc 1 1695 0
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	$-255, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1696 0
	leave
	ret
.LFE57:
	.size	m16_nuimm8_1, .-m16_nuimm8_1
.globl m16_uimm8_m1_1
	.type	m16_uimm8_m1_1, @function
m16_uimm8_m1_1:
.LFB58:
	.loc 1 1702 0
	pushl	%ebp
.LCFI154:
	movl	%esp, %ebp
.LCFI155:
	subl	$16, %esp
.LCFI156:
	.loc 1 1703 0
	movl	$0, 12(%esp)
	movl	$254, 8(%esp)
	movl	$-1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1704 0
	leave
	ret
.LFE58:
	.size	m16_uimm8_m1_1, .-m16_uimm8_m1_1
.globl m16_uimm8_4
	.type	m16_uimm8_4, @function
m16_uimm8_4:
.LFB59:
	.loc 1 1710 0
	pushl	%ebp
.LCFI157:
	movl	%esp, %ebp
.LCFI158:
	subl	$16, %esp
.LCFI159:
	.loc 1 1711 0
	movl	$3, 12(%esp)
	movl	$1020, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1712 0
	leave
	ret
.LFE59:
	.size	m16_uimm8_4, .-m16_uimm8_4
.globl m16_nuimm8_4
	.type	m16_nuimm8_4, @function
m16_nuimm8_4:
.LFB60:
	.loc 1 1718 0
	pushl	%ebp
.LCFI160:
	movl	%esp, %ebp
.LCFI161:
	subl	$16, %esp
.LCFI162:
	.loc 1 1719 0
	movl	$3, 12(%esp)
	movl	$0, 8(%esp)
	movl	$-1020, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1720 0
	leave
	ret
.LFE60:
	.size	m16_nuimm8_4, .-m16_nuimm8_4
.globl m16_simm8_8
	.type	m16_simm8_8, @function
m16_simm8_8:
.LFB61:
	.loc 1 1726 0
	pushl	%ebp
.LCFI163:
	movl	%esp, %ebp
.LCFI164:
	subl	$16, %esp
.LCFI165:
	.loc 1 1727 0
	movl	$7, 12(%esp)
	movl	$1016, 8(%esp)
	movl	$-1024, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1728 0
	leave
	ret
.LFE61:
	.size	m16_simm8_8, .-m16_simm8_8
.globl m16_nsimm8_8
	.type	m16_nsimm8_8, @function
m16_nsimm8_8:
.LFB62:
	.loc 1 1734 0
	pushl	%ebp
.LCFI166:
	movl	%esp, %ebp
.LCFI167:
	subl	$16, %esp
.LCFI168:
	.loc 1 1735 0
	movl	$7, 12(%esp)
	movl	$1024, 8(%esp)
	movl	$-1016, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	m16_check_op
	.loc 1 1736 0
	leave
	ret
.LFE62:
	.size	m16_nsimm8_8, .-m16_nsimm8_8
	.section	.rodata
.LC39:
	.string	"$"
	.text
.globl m16_usym8_4
	.type	m16_usym8_4, @function
m16_usym8_4:
.LFB63:
	.loc 1 1748 0
	pushl	%ebp
.LCFI169:
	movl	%esp, %ebp
.LCFI170:
	pushl	%esi
.LCFI171:
	pushl	%ebx
.LCFI172:
	subl	$32, %esp
.LCFI173:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1749 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L574
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L574
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jle	.L574
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$42, %al
	jne	.L574
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	leal	.LC39@GOTOFF(%ebx), %eax
	movzbl	(%eax), %eax
	cmpb	%al, %dl
	jne	.L574
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	68(%eax), %esi
	call	get_pool_size@PLT
	leal	(%esi,%eax), %edx
	movl	mips_string_length@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	cmpl	$1023, %eax
	jg	.L574
.LBB7:
	.loc 1 1763 0
	movl	string_constants@GOTOFF(%ebx), %eax
	movl	%eax, -12(%ebp)
	jmp	.L581
.L582:
	.loc 1 1764 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L583
	.loc 1 1765 0
	movl	$1, -28(%ebp)
	jmp	.L585
.L583:
	.loc 1 1763 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L581:
	cmpl	$0, -12(%ebp)
	jne	.L582
.L574:
.LBE7:
	.loc 1 1768 0
	movl	$0, -28(%ebp)
.L585:
	movl	-28(%ebp), %eax
	.loc 1 1769 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE63:
	.size	m16_usym8_4, .-m16_usym8_4
.globl m16_usym5_4
	.type	m16_usym5_4, @function
m16_usym5_4:
.LFB64:
	.loc 1 1775 0
	pushl	%ebp
.LCFI174:
	movl	%esp, %ebp
.LCFI175:
	pushl	%esi
.LCFI176:
	pushl	%ebx
.LCFI177:
	subl	$32, %esp
.LCFI178:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1776 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L588
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L588
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jle	.L588
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$42, %al
	jne	.L588
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	leal	.LC39@GOTOFF(%ebx), %eax
	movzbl	(%eax), %eax
	cmpb	%al, %dl
	jne	.L588
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	68(%eax), %esi
	call	get_pool_size@PLT
	leal	(%esi,%eax), %edx
	movl	mips_string_length@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	cmpl	$127, %eax
	jg	.L588
.LBB8:
	.loc 1 1790 0
	movl	string_constants@GOTOFF(%ebx), %eax
	movl	%eax, -12(%ebp)
	jmp	.L595
.L596:
	.loc 1 1791 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L597
	.loc 1 1792 0
	movl	$1, -28(%ebp)
	jmp	.L599
.L597:
	.loc 1 1790 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L595:
	cmpl	$0, -12(%ebp)
	jne	.L596
.L588:
.LBE8:
	.loc 1 1795 0
	movl	$0, -28(%ebp)
.L599:
	movl	-28(%ebp), %eax
	.loc 1 1796 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE64:
	.size	m16_usym5_4, .-m16_usym5_4
.globl mips_fill_delay_slot
	.type	mips_fill_delay_slot, @function
mips_fill_delay_slot:
.LFB65:
	.loc 1 1816 0
	pushl	%ebp
.LCFI179:
	movl	%esp, %ebp
.LCFI180:
	pushl	%ebx
.LCFI181:
	subl	$52, %esp
.LCFI182:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1819 0
	cmpl	$0, 20(%ebp)
	je	.L602
	jmp	.L604
.L602:
.L604:
	.loc 1 1822 0
	cmpl	$1, 12(%ebp)
	je	.L605
	cmpl	$3, 12(%ebp)
	jne	.L607
.L605:
	.loc 1 1823 0
	movl	$1, -8(%ebp)
	.loc 1 1822 0
	jmp	.L608
.L607:
	.loc 1 1825 0
	cmpl	$2, 12(%ebp)
	jne	.L609
	.loc 1 1826 0
	movl	$2, -8(%ebp)
	jmp	.L608
.L609:
	.loc 1 1829 0
	movl	$0, -8(%ebp)
.L608:
	.loc 1 1832 0
	movl	20(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 1833 0
	jmp	.L611
.L612:
	.loc 1 1834 0
	movl	-12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -12(%ebp)
.L611:
	.loc 1 1833 0
	cmpl	$0, -12(%ebp)
	je	.L613
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$47, %ax
	je	.L612
.L613:
	.loc 1 1836 0
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	-8(%ebp), %ecx
	leal	(%eax,%ecx), %edx
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 1837 0
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L615
	cmpl	$0, 12(%ebp)
	je	.L615
	cmpl	$0, 16(%ebp)
	je	.L615
	cmpl	$0, 20(%ebp)
	je	.L615
	cmpl	$0, -12(%ebp)
	je	.L615
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$46, %ax
	je	.L615
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	cmpl	$0, -16(%ebp)
	jne	.L622
.L615:
	.loc 1 1846 0
	movl	dslots_number_nops@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 1847 0
	movl	mips_load_reg@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 1848 0
	movl	mips_load_reg2@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 1849 0
	movl	mips_load_reg3@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 1850 0
	movl	mips_load_reg4@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 1851 0
	movl	8(%ebp), %ecx
	movl	%ecx, -36(%ebp)
	jmp	.L623
.L622:
	.loc 1 1854 0
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 1855 0
	cmpl	$0, -16(%ebp)
	jne	.L626
	.loc 1 1856 0
	movl	8(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L623
.L627:
	.loc 1 1859 0
	movl	-16(%ebp), %edx
	movl	4(%edx), %edx
	movl	%edx, -16(%ebp)
.L626:
	.loc 1 1858 0
	movl	-16(%ebp), %ecx
	movzwl	(%ecx), %eax
	cmpw	$73, %ax
	je	.L627
	.loc 1 1861 0
	movl	-16(%ebp), %edx
	movzbl	2(%edx), %eax
	movzbl	%al, %edx
	.loc 1 1862 0
	movl	dslots_number_nops@GOT(%ebx), %eax
	movl	-8(%ebp), %ecx
	movl	%ecx, (%eax)
	.loc 1 1863 0
	movl	mips_load_reg@GOT(%ebx), %eax
	movl	-16(%ebp), %ecx
	movl	%ecx, (%eax)
	.loc 1 1864 0
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	movl	-16(%ebp), %edx
	movl	4(%edx), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L629
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L631
	movl	$8, -24(%ebp)
	jmp	.L633
.L631:
	movl	$4, -24(%ebp)
.L633:
	movl	-24(%ebp), %ecx
	movl	%ecx, -28(%ebp)
	jmp	.L634
.L629:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L635
	movl	$8, -20(%ebp)
	jmp	.L637
.L635:
	movl	$4, -20(%ebp)
.L637:
	movl	-20(%ebp), %eax
	movl	%eax, -28(%ebp)
.L634:
	movl	-28(%ebp), %edx
	cmpl	%edx, -32(%ebp)
	jbe	.L638
	.loc 1 1866 0
	movl	-16(%ebp), %ecx
	movl	4(%ecx), %eax
	addl	$1, %eax
	movl	%eax, 4(%esp)
	movl	$4, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, %edx
	movl	mips_load_reg2@GOT(%ebx), %eax
	movl	%edx, (%eax)
	jmp	.L640
.L638:
	.loc 1 1868 0
	movl	mips_load_reg2@GOT(%ebx), %eax
	movl	$0, (%eax)
.L640:
	.loc 1 1870 0
	cmpl	$2, 12(%ebp)
	jne	.L641
	.loc 1 1872 0
	movl	$64, 4(%esp)
	movl	$4, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, %edx
	movl	mips_load_reg3@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 1873 0
	movl	$65, 4(%esp)
	movl	$4, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, %edx
	movl	mips_load_reg4@GOT(%ebx), %eax
	movl	%edx, (%eax)
	jmp	.L643
.L641:
	.loc 1 1877 0
	movl	mips_load_reg3@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 1878 0
	movl	mips_load_reg4@GOT(%ebx), %eax
	movl	$0, (%eax)
.L643:
	.loc 1 1881 0
	movl	8(%ebp), %eax
	movl	%eax, -36(%ebp)
.L623:
	movl	-36(%ebp), %eax
	.loc 1 1882 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE65:
	.size	mips_fill_delay_slot, .-mips_fill_delay_slot
.globl mips_count_memory_refs
	.type	mips_count_memory_refs, @function
mips_count_memory_refs:
.LFB66:
	.loc 1 1893 0
	pushl	%ebp
.LCFI183:
	movl	%esp, %ebp
.LCFI184:
	pushl	%ebx
.LCFI185:
	subl	$44, %esp
.LCFI186:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1894 0
	movl	$0, -36(%ebp)
	.loc 1 1895 0
	movl	$0, -32(%ebp)
	.loc 1 1907 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L646
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L648
.L646:
	movl	8(%ebp), %eax
	movl	%eax, -48(%ebp)
.L648:
	movl	-48(%ebp), %eax
	movl	%eax, -28(%ebp)
.L649:
	.loc 1 1912 0
	movl	$0, -8(%ebp)
	.loc 1 1913 0
	movl	-28(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -44(%ebp)
	cmpl	$77, -44(%ebp)
	je	.L653
	cmpl	$77, -44(%ebp)
	ja	.L656
	cmpl	$68, -44(%ebp)
	je	.L652
	cmpl	$71, -44(%ebp)
	je	.L650
	jmp	.L650
.L656:
	cmpl	$85, -44(%ebp)
	je	.L655
	cmpl	$145, -44(%ebp)
	je	.L650
	cmpl	$78, -44(%ebp)
	je	.L654
	jmp	.L650
.L655:
	.loc 1 1921 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 1922 0
	movl	-28(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 1923 0
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -16(%ebp)
	.loc 1 1924 0
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -12(%ebp)
	.loc 1 1926 0
	cmpl	$71, -16(%ebp)
	jne	.L657
	.loc 1 1928 0
	addl	$1, -36(%ebp)
	.loc 1 1929 0
	movl	-20(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1930 0
	movl	$1, -8(%ebp)
	.loc 1 1931 0
	jmp	.L650
.L657:
	.loc 1 1934 0
	cmpl	$64, -16(%ebp)
	jne	.L659
	.loc 1 1936 0
	movl	-20(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1937 0
	movl	$1, -8(%ebp)
	.loc 1 1938 0
	jmp	.L650
.L659:
	.loc 1 1941 0
	cmpl	$71, -12(%ebp)
	jne	.L661
	.loc 1 1943 0
	addl	$1, -36(%ebp)
	.loc 1 1944 0
	movl	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1945 0
	movl	$1, -8(%ebp)
	.loc 1 1946 0
	jmp	.L650
.L661:
	.loc 1 1949 0
	cmpl	$64, -12(%ebp)
	jne	.L663
	.loc 1 1951 0
	movl	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1952 0
	movl	$1, -8(%ebp)
	.loc 1 1953 0
	jmp	.L650
.L663:
	.loc 1 1956 0
	cmpl	$78, -16(%ebp)
	je	.L665
	cmpl	$77, -16(%ebp)
	je	.L665
	cmpl	$68, -16(%ebp)
	jne	.L668
.L665:
	.loc 1 1958 0
	movl	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1959 0
	movl	$1, -8(%ebp)
	.loc 1 1960 0
	jmp	.L650
.L668:
	.loc 1 1963 0
	cmpl	$78, -12(%ebp)
	je	.L669
	cmpl	$77, -12(%ebp)
	je	.L669
	cmpl	$68, -12(%ebp)
	jne	.L650
.L669:
	.loc 1 1965 0
	movl	-20(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1966 0
	movl	$1, -8(%ebp)
	.loc 1 1967 0
	jmp	.L650
.L653:
	.loc 1 1973 0
	movl	$2, -32(%ebp)
	.loc 1 1974 0
	jmp	.L650
.L652:
	.loc 1 1977 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 1978 0
	movl	$1, -8(%ebp)
	.loc 1 1979 0
	jmp	.L650
.L654:
	.loc 1 1982 0
	movl	-28(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L673
	movl	$1, -40(%ebp)
	jmp	.L675
.L673:
	movl	$2, -40(%ebp)
.L675:
	movl	-40(%ebp), %eax
	movl	%eax, -32(%ebp)
.L650:
	.loc 1 1989 0
	cmpl	$0, -8(%ebp)
	jne	.L649
	.loc 1 1991 0
	cmpl	$0, -32(%ebp)
	je	.L681
	.loc 1 1994 0
	movl	-36(%ebp), %eax
	addl	%eax, -32(%ebp)
	.loc 1 1995 0
	cmpl	$3, -32(%ebp)
	jle	.L679
	.loc 1 1996 0
	movl	$3, -32(%ebp)
.L679:
	.loc 1 1998 0
	movl	-32(%ebp), %ecx
	subl	$1, %ecx
	movl	-32(%ebp), %edx
	subl	$1, %edx
	movl	num_refs@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%eax, %edx
	addl	12(%ebp), %edx
	movl	num_refs@GOT(%ebx), %eax
	movl	%edx, (%eax,%ecx,4)
.L681:
	.loc 1 1999 0
	addl	$44, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE66:
	.size	mips_count_memory_refs, .-mips_count_memory_refs
.globl embedded_pic_fnaddr_reg
	.type	embedded_pic_fnaddr_reg, @function
embedded_pic_fnaddr_reg:
.LFB67:
	.loc 1 2008 0
	pushl	%ebp
.LCFI187:
	movl	%esp, %ebp
.LCFI188:
	pushl	%ebx
.LCFI189:
	subl	$36, %esp
.LCFI190:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2009 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L683
.LBB9:
	.loc 1 2013 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	%eax, -32(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L685
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L685
	movl	$5, -28(%ebp)
	jmp	.L688
.L685:
	movl	$4, -28(%ebp)
.L688:
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	-32(%ebp), %edx
	movl	%eax, (%edx)
	.loc 1 2023 0
	call	start_sequence@PLT
	.loc 1 2024 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L689
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L691
.L689:
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -24(%ebp)
.L691:
	movl	-24(%ebp), %eax
	movl	4(%eax), %edx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_get_fnaddr@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 2026 0
	call	get_insns@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2027 0
	call	end_sequence@PLT
	.loc 1 2028 0
	call	push_topmost_sequence@PLT
	.loc 1 2029 0
	call	get_insns@PLT
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_insn_after@PLT
	.loc 1 2030 0
	call	pop_topmost_sequence@PLT
.L683:
.LBE9:
	.loc 1 2033 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	(%eax), %eax
	.loc 1 2034 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE67:
	.size	embedded_pic_fnaddr_reg, .-embedded_pic_fnaddr_reg
.globl embedded_pic_offset
	.type	embedded_pic_offset, @function
embedded_pic_offset:
.LFB68:
	.loc 1 2042 0
	pushl	%ebp
.LCFI191:
	movl	%esp, %ebp
.LCFI192:
	pushl	%ebx
.LCFI193:
	subl	$36, %esp
.LCFI194:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2044 0
	call	embedded_pic_fnaddr_reg@PLT
	.loc 1 2046 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L694
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L696
.L694:
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -24(%ebp)
.L696:
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L697
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L697
	movl	$5, -16(%ebp)
	jmp	.L700
.L697:
	movl	$4, -16(%ebp)
.L700:
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$86, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, -12(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L701
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L701
	movl	$5, -8(%ebp)
	jmp	.L704
.L701:
	movl	$4, -8(%ebp)
.L704:
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$68, (%esp)
	call	gen_rtx_fmt_e@PLT
	.loc 1 2050 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE68:
	.size	embedded_pic_offset, .-embedded_pic_offset
	.data
	.type	retval.16537, @object
	.size	retval.16537, 11
retval.16537:
	.string	"swc_\t%1,%0"
	.type	retval.16524, @object
	.size	retval.16524, 11
retval.16524:
	.string	"lwc_\t%0,%1"
	.type	retval.16515, @object
	.size	retval.16515, 11
retval.16515:
	.string	"mtc_\t%1,%0"
	.type	retval.16514, @object
	.size	retval.16514, 11
retval.16514:
	.string	"mfc_\t%0,%1"
	.section	.rodata
	.type	__FUNCTION__.16527, @object
	.size	__FUNCTION__.16527, 16
__FUNCTION__.16527:
	.string	"mips_move_1word"
.LC40:
	.string	"move\t%0,%1"
.LC41:
	.string	"mf%1\t%0"
.LC42:
	.string	"mflo\t%0"
.LC43:
	.string	"li\t%0,1\n\tmovf\t%0,%.,%1"
.LC44:
	.string	"mfc1\t%0,%1"
.LC45:
	.string	"cfc1\t%0,$31"
.LC46:
	.string	"mtc1\t%1,%0"
.LC47:
	.string	"mov.s\t%0,%1"
.LC48:
	.string	"mt%0\t%1"
.LC49:
	.string	"ctc1\t%0,$31"
	.align 4
.LC50:
	.string	"mtc0 not supported; it disturbs virtual address translation"
.LC51:
	.string	"lw\t%0,%1"
.LC52:
	.string	"lwu\t%0,%1"
.LC53:
	.string	"lhu\t%0,%1"
.LC54:
	.string	"lh\t%0,%1"
.LC55:
	.string	"lbu\t%0,%1"
.LC56:
	.string	"lb\t%0,%1"
.LC57:
	.string	"l.s\t%0,%1"
	.align 4
.LC58:
	.string	"loads from memory to COP0 are illegal"
.LC59:
	.string	"../../../kgccfe/gnu/mips.c"
.LC60:
	.string	"%%{%s%%}"
.LC61:
	.string	"move\t%0,%z1"
.LC62:
	.string	"mtc1\t%z1,%0"
.LC63:
	.string	"mt%0\t%."
.LC64:
	.string	"li\t%0,%1\t\t\t# %X1"
.LC65:
	.string	"li\t%0,%1"
.LC66:
	.string	"li\t%0,%n1\n\tneg\t%0"
.LC67:
	.string	"move\t%0,%."
.LC68:
	.string	"mtc1\t%.,%0"
.LC69:
	.string	"li.s\t%0,%1"
.LC70:
	.string	"la\t%0,%a1"
.LC71:
	.string	"move\t%0,%+"
	.align 4
.LC72:
	.string	"move\t%0,%+\n\taddu\t%0,%%gprel(%a1)"
.LC73:
	.string	"add%:\t%0,%2,%3"
.LC74:
	.string	"lui\t%0,%%hi(%1)"
.LC75:
	.string	"sw\t%1,%0"
.LC76:
	.string	"sh\t%1,%0"
.LC77:
	.string	"sb\t%1,%0"
.LC78:
	.string	"s.s\t%1,%0"
.LC79:
	.string	"sw\t%z1,%0"
.LC80:
	.string	"sh\t%z1,%0"
.LC81:
	.string	"sb\t%z1,%0"
.LC82:
	.string	"sw\t%.,%0"
.LC83:
	.string	"sh\t%.,%0"
.LC84:
	.string	"sb\t%.,%0"
.LC85:
	.string	"bad move"
	.text
.globl mips_move_1word
	.type	mips_move_1word, @function
mips_move_1word:
.LFB69:
	.loc 1 2059 0
	pushl	%ebp
.LCFI195:
	movl	%esp, %ebp
.LCFI196:
	pushl	%edi
.LCFI197:
	pushl	%esi
.LCFI198:
	pushl	%ebx
.LCFI199:
	subl	$172, %esp
.LCFI200:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2060 0
	movl	$0, -84(%ebp)
	.loc 1 2061 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -80(%ebp)
	.loc 1 2062 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	%eax, -76(%ebp)
	.loc 1 2063 0
	movl	-80(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -72(%ebp)
	.loc 1 2064 0
	movl	-76(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -68(%ebp)
	.loc 1 2065 0
	movl	-80(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	.loc 1 2066 0
	movl	$0, -60(%ebp)
	.loc 1 2067 0
	movl	$0, -56(%ebp)
	.loc 1 2068 0
	movl	$0, -52(%ebp)
	.loc 1 2070 0
	jmp	.L707
.L708:
	.loc 1 2072 0
	movl	-80(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	-80(%ebp), %eax
	movl	12(%eax), %ecx
	movl	-80(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %esi
	movl	-80(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	subreg_regno_offset@PLT
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 1 2076 0
	movl	-80(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -80(%ebp)
	.loc 1 2077 0
	movl	-80(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -72(%ebp)
.L707:
	.loc 1 2070 0
	cmpl	$73, -72(%ebp)
	je	.L708
	.loc 1 2080 0
	jmp	.L710
.L711:
	.loc 1 2082 0
	movl	-76(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	-76(%ebp), %eax
	movl	12(%eax), %ecx
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %esi
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	subreg_regno_offset@PLT
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 2086 0
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -76(%ebp)
	.loc 1 2087 0
	movl	-76(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -68(%ebp)
.L710:
	.loc 1 2080 0
	cmpl	$73, -68(%ebp)
	je	.L711
	.loc 1 2091 0
	cmpl	$53, -64(%ebp)
	jne	.L713
	.loc 1 2092 0
	movl	$4, -64(%ebp)
.L713:
	.loc 1 2094 0
	cmpl	$71, -72(%ebp)
	jne	.L715
.LBB10:
	.loc 1 2096 0
	movl	-80(%ebp), %eax
	movl	4(%eax), %edx
	movl	-60(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 2098 0
	cmpl	$71, -68(%ebp)
	jne	.L717
.LBB11:
	.loc 1 2100 0
	movl	-76(%ebp), %eax
	movl	4(%eax), %edx
	movl	-56(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 2104 0
	movl	-48(%ebp), %eax
	cmpl	-44(%ebp), %eax
	jne	.L719
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L719
	.loc 1 2105 0
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2104 0
	jmp	.L896
.L719:
	.loc 1 2107 0
	movl	-48(%ebp), %eax
	cmpl	$31, %eax
	ja	.L723
	.loc 1 2109 0
	movl	-44(%ebp), %eax
	cmpl	$31, %eax
	ja	.L725
	.loc 1 2110 0
	leal	.LC40@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L725:
	.loc 1 2112 0
	movl	-44(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L728
	.loc 1 2114 0
	movl	$2, -52(%ebp)
	.loc 1 2115 0
	cmpl	$66, -44(%ebp)
	je	.L730
	.loc 1 2116 0
	leal	.LC41@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L730:
	.loc 1 2118 0
	leal	.LC42@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L728:
	.loc 1 2121 0
	movl	-44(%ebp), %eax
	subl	$67, %eax
	cmpl	$7, %eax
	ja	.L733
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L735
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L735
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	jne	.L733
.L735:
	.loc 1 2122 0
	leal	.LC43@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2121 0
	jmp	.L896
.L733:
	.loc 1 2126 0
	movl	$1, -52(%ebp)
	.loc 1 2127 0
	movl	-44(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L738
	.loc 1 2128 0
	leal	.LC44@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L738:
	.loc 1 2129 0
	movl	-44(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L740
.LBB12:
	.loc 1 2133 0
	movl	-44(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L742
	movl	-44(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L744
	movl	-44(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L746
	movb	$51, -144(%ebp)
	jmp	.L748
.L746:
	movb	$63, -144(%ebp)
.L748:
	movzbl	-144(%ebp), %eax
	movb	%al, -145(%ebp)
	jmp	.L749
.L744:
	movb	$50, -145(%ebp)
.L749:
	movzbl	-145(%ebp), %edx
	movb	%dl, -146(%ebp)
	jmp	.L750
.L742:
	movb	$48, -146(%ebp)
.L750:
	movzbl	-146(%ebp), %ecx
	movb	%cl, 3+retval.16514@GOTOFF(%ebx)
	.loc 1 2134 0
	leal	retval.16514@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L740:
.LBE12:
	.loc 1 2136 0
	cmpl	$67, -44(%ebp)
	jne	.L896
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L896
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L896
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L896
	.loc 1 2137 0
	leal	.LC45@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L723:
	.loc 1 2141 0
	movl	-48(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L755
	.loc 1 2143 0
	movl	-44(%ebp), %eax
	cmpl	$31, %eax
	ja	.L757
	.loc 1 2145 0
	movl	$1, -52(%ebp)
	.loc 1 2146 0
	leal	.LC46@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
.L757:
	.loc 1 2149 0
	movl	-44(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L896
	.loc 1 2150 0
	leal	.LC47@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L755:
	.loc 1 2153 0
	movl	-48(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L761
	.loc 1 2155 0
	movl	-44(%ebp), %eax
	cmpl	$31, %eax
	ja	.L896
	.loc 1 2157 0
	movl	$2, -52(%ebp)
	.loc 1 2158 0
	cmpl	$66, -48(%ebp)
	je	.L896
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L896
	.loc 1 2159 0
	leal	.LC48@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L761:
	.loc 1 2163 0
	cmpl	$67, -48(%ebp)
	jne	.L767
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L767
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L767
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L767
	.loc 1 2165 0
	movl	-44(%ebp), %eax
	cmpl	$31, %eax
	ja	.L896
	.loc 1 2167 0
	movl	$1, -52(%ebp)
	.loc 1 2168 0
	leal	.LC49@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2163 0
	jmp	.L896
.L767:
	.loc 1 2171 0
	movl	-48(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L896
	.loc 1 2173 0
	movl	-44(%ebp), %eax
	cmpl	$31, %eax
	ja	.L896
.LBB13:
	.loc 1 2176 0
	movl	-48(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L776
	movl	-48(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L778
	movl	-48(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L780
	movb	$51, -141(%ebp)
	jmp	.L782
.L780:
	movb	$63, -141(%ebp)
.L782:
	movzbl	-141(%ebp), %eax
	movb	%al, -142(%ebp)
	jmp	.L783
.L778:
	movb	$50, -142(%ebp)
.L783:
	movzbl	-142(%ebp), %edx
	movb	%dl, -143(%ebp)
	jmp	.L784
.L776:
	movb	$48, -143(%ebp)
.L784:
	movzbl	-143(%ebp), %ecx
	movb	%cl, -18(%ebp)
	.loc 1 2178 0
	cmpb	$48, -18(%ebp)
	jne	.L785
	.loc 1 2179 0
	leal	.LC50@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L785:
	.loc 1 2181 0
	movl	$1, -52(%ebp)
	.loc 1 2182 0
	movzbl	-18(%ebp), %eax
	movb	%al, 3+retval.16515@GOTOFF(%ebx)
	.loc 1 2183 0
	leal	retval.16515@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L717:
.LBE13:
.LBE11:
	.loc 1 2188 0
	cmpl	$76, -68(%ebp)
	jne	.L788
	.loc 1 2190 0
	movl	$1, -52(%ebp)
	.loc 1 2192 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L790
	.loc 1 2193 0
	movl	$1, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L790:
	.loc 1 2195 0
	movl	-48(%ebp), %eax
	cmpl	$31, %eax
	ja	.L792
	.loc 1 2199 0
	movl	-76(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -140(%ebp)
	cmpl	$4, -140(%ebp)
	je	.L797
	cmpl	$4, -140(%ebp)
	ja	.L799
	cmpl	$2, -140(%ebp)
	je	.L795
	cmpl	$3, -140(%ebp)
	je	.L796
	jmp	.L811
.L799:
	cmpl	$15, -140(%ebp)
	je	.L798
	cmpl	$53, -140(%ebp)
	je	.L797
	.loc 1 2202 0
	jmp	.L811
.L798:
	.loc 1 2204 0
	leal	.LC51@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2205 0
	jmp	.L811
.L797:
	.loc 1 2208 0
	cmpl	$0, 16(%ebp)
	je	.L801
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L801
	leal	.LC52@GOTOFF(%ebx), %edi
	movl	%edi, -136(%ebp)
	jmp	.L804
.L801:
	leal	.LC51@GOTOFF(%ebx), %eax
	movl	%eax, -136(%ebp)
.L804:
	movl	-136(%ebp), %edx
	movl	%edx, -84(%ebp)
	.loc 1 2211 0
	jmp	.L811
.L796:
	.loc 1 2213 0
	cmpl	$0, 16(%ebp)
	je	.L805
	leal	.LC53@GOTOFF(%ebx), %ecx
	movl	%ecx, -132(%ebp)
	jmp	.L807
.L805:
	leal	.LC54@GOTOFF(%ebx), %edi
	movl	%edi, -132(%ebp)
.L807:
	movl	-132(%ebp), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2214 0
	jmp	.L811
.L795:
	.loc 1 2216 0
	cmpl	$0, 16(%ebp)
	je	.L808
	leal	.LC55@GOTOFF(%ebx), %edx
	movl	%edx, -128(%ebp)
	jmp	.L810
.L808:
	leal	.LC56@GOTOFF(%ebx), %ecx
	movl	%ecx, -128(%ebp)
.L810:
	movl	-128(%ebp), %edi
	movl	%edi, -84(%ebp)
	jmp	.L811
.L792:
	.loc 1 2221 0
	movl	-48(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L812
	cmpl	$4, -64(%ebp)
	je	.L814
	cmpl	$15, -64(%ebp)
	jne	.L812
.L814:
	.loc 1 2222 0
	leal	.LC57@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2221 0
	jmp	.L811
.L812:
	.loc 1 2224 0
	movl	-48(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L811
.LBB14:
	.loc 1 2227 0
	movl	-48(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L817
	movl	-48(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L819
	movl	-48(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L821
	movb	$51, -121(%ebp)
	jmp	.L823
.L821:
	movb	$63, -121(%ebp)
.L823:
	movzbl	-121(%ebp), %eax
	movb	%al, -122(%ebp)
	jmp	.L824
.L819:
	movb	$50, -122(%ebp)
.L824:
	movzbl	-122(%ebp), %edx
	movb	%dl, -123(%ebp)
	jmp	.L825
.L817:
	movb	$48, -123(%ebp)
.L825:
	movzbl	-123(%ebp), %ecx
	movb	%cl, -17(%ebp)
	.loc 1 2229 0
	cmpb	$48, -17(%ebp)
	jne	.L826
	.loc 1 2230 0
	leal	.LC58@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L826:
	.loc 1 2232 0
	movl	$1, -52(%ebp)
	.loc 1 2233 0
	movzbl	-17(%ebp), %eax
	movb	%al, 3+retval.16524@GOTOFF(%ebx)
	.loc 1 2234 0
	leal	retval.16524@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
.L811:
.LBE14:
	.loc 1 2237 0
	cmpl	$0, -84(%ebp)
	je	.L896
	movl	-76(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L896
.LBB15:
	.loc 1 2239 0
	movl	-84(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -152(%ebp)
	movl	$0, %eax
	cld
	movl	-152(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	movl	%eax, -40(%ebp)
	.loc 1 2240 0
	cmpl	$55, -40(%ebp)
	jbe	.L831
	.loc 1 2241 0
	leal	__FUNCTION__.16527@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2241, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L831:
	.loc 1 2243 0
	movl	-84(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC60@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 2244 0
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L788:
.LBE15:
	.loc 1 2248 0
	cmpl	$64, -68(%ebp)
	je	.L833
	cmpl	$65, -68(%ebp)
	jne	.L835
	movl	-76(%ebp), %eax
	movzbl	2(%eax), %eax
	testb	%al, %al
	jne	.L835
.L833:
	.loc 1 2252 0
	cmpl	$65, -68(%ebp)
	jne	.L837
	.loc 1 2257 0
	movl	8(%ebp), %esi
	addl	$4, %esi
	movl	-76(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -76(%ebp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esi)
.L837:
	.loc 1 2260 0
	movl	-76(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L839
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L839
	.loc 1 2262 0
	movl	-48(%ebp), %eax
	cmpl	$31, %eax
	ja	.L842
	.loc 1 2263 0
	leal	.LC61@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L842:
	.loc 1 2265 0
	movl	-48(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L845
	.loc 1 2267 0
	movl	$1, -52(%ebp)
	.loc 1 2268 0
	leal	.LC62@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L845:
	.loc 1 2271 0
	movl	-48(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L896
	.loc 1 2273 0
	movl	$2, -52(%ebp)
	.loc 1 2274 0
	leal	.LC63@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2260 0
	jmp	.L896
.L839:
	.loc 1 2278 0
	movl	-48(%ebp), %eax
	cmpl	$31, %eax
	ja	.L896
	.loc 1 2282 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L850
	.loc 1 2283 0
	leal	.LC64@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L850:
	.loc 1 2286 0
	movl	-76(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	testl	%edx, %edx
	js	.L852
	movl	-76(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -120(%ebp)
	movl	%ecx, -116(%ebp)
	cmpl	$0, -116(%ebp)
	jg	.L852
	cmpl	$0, -116(%ebp)
	js	.L855
	cmpl	$65535, -120(%ebp)
	ja	.L852
.L855:
	.loc 1 2287 0
	leal	.LC65@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2286 0
	jmp	.L896
.L852:
	.loc 1 2288 0
	movl	-76(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	testl	%edx, %edx
	jns	.L896
	movl	-76(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -112(%ebp)
	movl	%ecx, -108(%ebp)
	cmpl	$-1, -108(%ebp)
	jl	.L896
	cmpl	$-1, -108(%ebp)
	jg	.L858
	cmpl	$-65535, -112(%ebp)
	jb	.L896
.L858:
	.loc 1 2289 0
	leal	.LC66@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2248 0
	jmp	.L896
.L835:
	.loc 1 2294 0
	cmpl	$65, -68(%ebp)
	jne	.L859
	cmpl	$15, -64(%ebp)
	jne	.L859
	.loc 1 2296 0
	movl	const_tiny_rtx@GOT(%ebx), %eax
	movl	60(%eax), %eax
	cmpl	-76(%ebp), %eax
	jne	.L862
	.loc 1 2298 0
	movl	-48(%ebp), %eax
	cmpl	$31, %eax
	ja	.L864
	.loc 1 2299 0
	leal	.LC67@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L864:
	.loc 1 2301 0
	movl	-48(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L896
	.loc 1 2303 0
	movl	$1, -52(%ebp)
	.loc 1 2304 0
	leal	.LC68@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L862:
	.loc 1 2310 0
	movl	$1, -52(%ebp)
	.loc 1 2311 0
	leal	.LC69@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2294 0
	jmp	.L896
.L859:
	.loc 1 2315 0
	cmpl	$77, -68(%ebp)
	jne	.L869
	.loc 1 2317 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L871
	.loc 1 2318 0
	movl	$1, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L871:
	.loc 1 2320 0
	leal	.LC70@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L869:
	.loc 1 2323 0
	cmpl	$78, -68(%ebp)
	je	.L873
	cmpl	$68, -68(%ebp)
	jne	.L875
.L873:
	.loc 1 2325 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L876
	cmpl	$68, -68(%ebp)
	jne	.L876
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L876
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$28, %eax
	jne	.L876
	.loc 1 2332 0
	leal	.LC71@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2325 0
	jmp	.L896
.L876:
	.loc 1 2334 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L882
	cmpl	$78, -68(%ebp)
	jne	.L882
	movl	-76(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L882
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$42, %al
	jne	.L886
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	leal	.LC39@GOTOFF(%ebx), %eax
	movzbl	(%eax), %eax
	cmpb	%al, %dl
	je	.L882
.L886:
	.loc 1 2344 0
	leal	.LC72@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2334 0
	jmp	.L896
.L882:
	.loc 1 2348 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L888
	.loc 1 2349 0
	movl	$1, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L888:
	.loc 1 2351 0
	leal	.LC70@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2323 0
	jmp	.L896
.L875:
	.loc 1 2355 0
	cmpl	$85, -68(%ebp)
	jne	.L890
.LBB16:
	.loc 1 2357 0
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 2358 0
	movl	-76(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 2360 0
	movl	-76(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L892
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L892
	.loc 1 2362 0
	movl	-76(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -36(%ebp)
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
.L892:
	.loc 1 2364 0
	movl	8(%ebp), %edx
	addl	$8, %edx
	movl	-36(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 2365 0
	movl	8(%ebp), %edx
	addl	$12, %edx
	movl	-32(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 2366 0
	leal	.LC73@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L890:
.LBE16:
	.loc 1 2369 0
	cmpl	$144, -68(%ebp)
	jne	.L896
	.loc 1 2371 0
	movl	8(%ebp), %edx
	addl	$4, %edx
	movl	-76(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%edx)
	.loc 1 2372 0
	leal	.LC74@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L896
.L715:
.LBE10:
	.loc 1 2376 0
	cmpl	$76, -72(%ebp)
	jne	.L896
	.loc 1 2378 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L898
	.loc 1 2379 0
	movl	$1, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L898:
	.loc 1 2381 0
	cmpl	$71, -68(%ebp)
	jne	.L900
.LBB17:
	.loc 1 2383 0
	movl	-76(%ebp), %eax
	movl	4(%eax), %edx
	movl	-56(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 2385 0
	movl	-28(%ebp), %eax
	cmpl	$31, %eax
	ja	.L902
	.loc 1 2387 0
	movl	-64(%ebp), %ecx
	movl	%ecx, -156(%ebp)
	cmpl	$3, -156(%ebp)
	je	.L906
	cmpl	$3, -156(%ebp)
	ja	.L909
	cmpl	$2, -156(%ebp)
	je	.L905
	jmp	.L925
.L909:
	cmpl	$4, -156(%ebp)
	je	.L907
	cmpl	$15, -156(%ebp)
	je	.L908
	jmp	.L925
.L908:
	.loc 1 2389 0
	leal	.LC75@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L907:
	.loc 1 2390 0
	leal	.LC75@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L906:
	.loc 1 2391 0
	leal	.LC76@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L905:
	.loc 1 2392 0
	leal	.LC77@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L902:
	.loc 1 2397 0
	movl	-28(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L911
	cmpl	$4, -64(%ebp)
	je	.L913
	cmpl	$15, -64(%ebp)
	jne	.L911
.L913:
	.loc 1 2398 0
	leal	.LC78@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2397 0
	jmp	.L925
.L911:
	.loc 1 2399 0
	movl	-28(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L925
.LBB18:
	.loc 1 2403 0
	movl	-28(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L916
	movl	-28(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L918
	movl	-28(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L920
	movb	$51, -101(%ebp)
	jmp	.L922
.L920:
	movb	$63, -101(%ebp)
.L922:
	movzbl	-101(%ebp), %eax
	movb	%al, -102(%ebp)
	jmp	.L923
.L918:
	movb	$50, -102(%ebp)
.L923:
	movzbl	-102(%ebp), %edx
	movb	%dl, -103(%ebp)
	jmp	.L924
.L916:
	movb	$48, -103(%ebp)
.L924:
	movzbl	-103(%ebp), %ecx
	movb	%cl, 3+retval.16537@GOTOFF(%ebx)
	.loc 1 2404 0
	leal	retval.16537@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L900:
.LBE18:
.LBE17:
	.loc 1 2408 0
	cmpl	$64, -68(%ebp)
	jne	.L926
	movl	-76(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L926
	.loc 1 2410 0
	movl	-64(%ebp), %edi
	movl	%edi, -160(%ebp)
	cmpl	$3, -160(%ebp)
	je	.L931
	cmpl	$3, -160(%ebp)
	ja	.L934
	cmpl	$2, -160(%ebp)
	je	.L930
	jmp	.L925
.L934:
	cmpl	$4, -160(%ebp)
	je	.L932
	cmpl	$15, -160(%ebp)
	je	.L933
	jmp	.L925
.L933:
	.loc 1 2412 0
	leal	.LC79@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L932:
	.loc 1 2413 0
	leal	.LC79@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L931:
	.loc 1 2414 0
	leal	.LC80@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L930:
	.loc 1 2415 0
	leal	.LC81@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	.loc 1 2408 0
	jmp	.L925
.L926:
	.loc 1 2420 0
	cmpl	$65, -68(%ebp)
	jne	.L925
	movl	-64(%ebp), %eax
	movl	const_tiny_rtx@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	-76(%ebp), %eax
	jne	.L925
	.loc 1 2422 0
	movl	-64(%ebp), %eax
	movl	%eax, -164(%ebp)
	cmpl	$3, -164(%ebp)
	je	.L938
	cmpl	$3, -164(%ebp)
	ja	.L941
	cmpl	$2, -164(%ebp)
	je	.L937
	jmp	.L925
.L941:
	cmpl	$4, -164(%ebp)
	je	.L939
	cmpl	$15, -164(%ebp)
	je	.L940
	jmp	.L925
.L940:
	.loc 1 2424 0
	leal	.LC82@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L939:
	.loc 1 2425 0
	leal	.LC82@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L938:
	.loc 1 2426 0
	leal	.LC83@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
	jmp	.L925
.L937:
	.loc 1 2427 0
	leal	.LC84@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
.L925:
	.loc 1 2432 0
	cmpl	$0, -84(%ebp)
	je	.L896
	movl	-80(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L896
.LBB19:
	.loc 1 2434 0
	movl	-84(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -168(%ebp)
	movl	$0, %eax
	cld
	movl	-168(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 1 2436 0
	cmpl	$55, -24(%ebp)
	jbe	.L944
	.loc 1 2437 0
	leal	__FUNCTION__.16527@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2437, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L944:
	.loc 1 2439 0
	movl	-84(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC60@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 2440 0
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, -84(%ebp)
.L896:
.LBE19:
	.loc 1 2444 0
	cmpl	$0, -84(%ebp)
	jne	.L946
	.loc 1 2446 0
	leal	.LC85@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L946:
	.loc 1 2450 0
	cmpl	$0, -52(%ebp)
	je	.L948
	.loc 1 2451 0
	movl	12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_fill_delay_slot@PLT
	movl	%eax, -100(%ebp)
	jmp	.L950
.L948:
	.loc 1 2453 0
	movl	-84(%ebp), %eax
	movl	%eax, -100(%ebp)
.L950:
	movl	-100(%ebp), %eax
	.loc 1 2454 0
	addl	$172, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE69:
	.size	mips_move_1word, .-mips_move_1word
.globl mips_restore_gp
	.type	mips_restore_gp, @function
mips_restore_gp:
.LFB70:
	.loc 1 2466 0
	pushl	%ebp
.LCFI201:
	movl	%esp, %ebp
.LCFI202:
	pushl	%ebx
.LCFI203:
	subl	$36, %esp
.LCFI204:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2469 0
	movl	pic_offset_table_rtx@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 2470 0
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L953
	.loc 1 2471 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L955
.L953:
	.loc 1 2473 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -8(%ebp)
.L955:
	.loc 1 2474 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2475 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -28(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L956
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L956
	movl	$5, -24(%ebp)
	jmp	.L959
.L956:
	movl	$4, -24(%ebp)
.L959:
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %edx
	movl	%edx, (%esp)
	call	gen_rtx_MEM@PLT
	movl	-28(%ebp), %edx
	movl	%eax, (%edx)
	.loc 1 2477 0
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_move_1word@PLT
	.loc 1 2478 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE70:
	.size	mips_restore_gp, .-mips_restore_gp
.globl mips_sign_extend
	.type	mips_sign_extend, @function
mips_sign_extend:
.LFB71:
	.loc 1 2486 0
	pushl	%ebp
.LCFI205:
	movl	%esp, %ebp
.LCFI206:
	pushl	%ebx
.LCFI207:
	subl	$148, %esp
.LCFI208:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2489 0
	movl	$4, 4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	register_operand@PLT
	testl	%eax, %eax
	je	.L962
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	true_regnum@PLT
	subl	$32, %eax
	cmpl	$31, %eax
	jbe	.L964
.L962:
	movl	$4, 4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	memory_operand@PLT
	testl	%eax, %eax
	je	.L965
.L964:
	.loc 1 2495 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$4, (%esp)
	call	gen_lowpart_SUBREG@PLT
	movl	%eax, -124(%ebp)
	.loc 1 2496 0
	movl	16(%ebp), %eax
	movl	%eax, -120(%ebp)
	.loc 1 2497 0
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-124(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_move_1word@PLT
	movl	%eax, -136(%ebp)
	jmp	.L966
.L965:
	.loc 1 2501 0
	movl	12(%ebp), %eax
	movl	%eax, -124(%ebp)
	.loc 1 2502 0
	movl	16(%ebp), %eax
	movl	%eax, -120(%ebp)
	.loc 1 2503 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-124(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_move_2words@PLT
	movl	%eax, -136(%ebp)
.L966:
	movl	-136(%ebp), %eax
	.loc 1 2505 0
	addl	$148, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE71:
	.size	mips_sign_extend, .-mips_sign_extend
	.data
	.type	retval.17078, @object
	.size	retval.17078, 11
retval.17078:
	.string	"sdc_\t%1,%0"
	.type	retval.17073, @object
	.size	retval.17073, 11
retval.17073:
	.string	"ldc_\t%0,%1"
	.type	retval.17071, @object
	.size	retval.17071, 12
retval.17071:
	.string	"dmtc_\t%1,%0"
	.type	retval.17070, @object
	.size	retval.17070, 12
retval.17070:
	.string	"dmfc_\t%0,%1"
	.section	.rodata
	.type	__FUNCTION__.17076, @object
	.size	__FUNCTION__.17076, 17
__FUNCTION__.17076:
	.string	"mips_move_2words"
.LC86:
	.string	"mov.d\t%0,%1"
.LC87:
	.string	"dmtc1\t%1,%0"
.LC88:
	.string	"mtc1\t%L1,%0\n\tmtc1\t%M1,%D0"
.LC89:
	.string	"dmfc1\t%0,%1"
.LC90:
	.string	"mfc1\t%L0,%1\n\tmfc1\t%M0,%D1"
.LC91:
	.string	"mtlo\t%.\n\tmthi\t%."
.LC92:
	.string	"mthi\t%M1\n\tmtlo\t%L1"
.LC93:
	.string	"mfhi\t%M0\n\tmflo\t%L0"
	.align 4
.LC94:
	.string	"dmtc0 not supported; it disturbs virtual address translation"
.LC95:
	.string	"move\t%0,%1\n\tmove\t%D0,%D1"
.LC96:
	.string	"move\t%D0,%D1\n\tmove\t%0,%1"
.LC97:
	.string	"li\t%0,%2\n\tli\t%D0,%3"
.LC98:
	.string	"li.d\t%0,%1"
.LC99:
	.string	"dli\t%0,%1"
.LC100:
	.string	"move\t%0,%.\n\tmove\t%D0,%."
.LC101:
	.string	"dmtc1\t%.,%0"
.LC102:
	.string	"mtc1\t%.,%0\n\tmtc1\t%.,%D0"
.LC103:
	.string	"mt%0\t%.\n"
.LC104:
	.string	"li\t%0,%1\t\t# %X1"
.LC105:
	.string	"dli\t%0,%X1\t\t# %1"
.LC106:
	.string	"li\t%M0,%2\n\tli\t%L0,%1"
	.align 4
.LC107:
	.string	"li\t%M0,%2\n\tneg\t%M0\n\tli\t%L0,%n1\n\tneg\t%L0"
.LC108:
	.string	"l.d\t%0,%1"
.LC109:
	.string	"ld\t%0,%1"
.LC110:
	.string	"lw\t%D0,%D1\n\tlw\t%0,%1"
.LC111:
	.string	"lw\t%0,%1\n\tlw\t%D0,%D1"
.LC112:
	.string	"la\t%0,%1"
.LC113:
	.string	"dla\t%0,%a1"
.LC114:
	.string	"s.d\t%1,%0"
.LC115:
	.string	"sd\t%1,%0"
.LC116:
	.string	"sw\t%1,%0\n\tsw\t%D1,%D0"
.LC117:
	.string	"sd\t%.,%0"
.LC118:
	.string	"sw\t%.,%0\n\tsw\t%.,%D0"
	.text
.globl mips_move_2words
	.type	mips_move_2words, @function
mips_move_2words:
.LFB72:
	.loc 1 2513 0
	pushl	%ebp
.LCFI209:
	movl	%esp, %ebp
.LCFI210:
	pushl	%edi
.LCFI211:
	pushl	%esi
.LCFI212:
	pushl	%ebx
.LCFI213:
	subl	$188, %esp
.LCFI214:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2514 0
	movl	$0, -72(%ebp)
	.loc 1 2515 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -68(%ebp)
	.loc 1 2516 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 1 2517 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -60(%ebp)
	.loc 1 2518 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -56(%ebp)
	.loc 1 2519 0
	movl	$0, -52(%ebp)
	.loc 1 2520 0
	movl	$0, -48(%ebp)
	.loc 1 2521 0
	movl	$0, -44(%ebp)
	.loc 1 2523 0
	cmpl	$130, -56(%ebp)
	jne	.L972
	.loc 1 2524 0
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_sign_extend@PLT
	movl	%eax, -164(%ebp)
	jmp	.L971
.L973:
	.loc 1 2528 0
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	-68(%ebp), %eax
	movl	12(%eax), %ecx
	movl	-68(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %esi
	movl	-68(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	subreg_regno_offset@PLT
	movl	%eax, %edx
	movl	-52(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 1 2532 0
	movl	-68(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -68(%ebp)
	.loc 1 2533 0
	movl	-68(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -60(%ebp)
.L972:
	.loc 1 2526 0
	cmpl	$73, -60(%ebp)
	je	.L973
	.loc 1 2536 0
	jmp	.L975
.L976:
	.loc 1 2538 0
	movl	-64(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	-64(%ebp), %eax
	movl	12(%eax), %ecx
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %esi
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	subreg_regno_offset@PLT
	movl	%eax, %edx
	movl	-48(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 2542 0
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 1 2543 0
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -56(%ebp)
.L975:
	.loc 1 2536 0
	cmpl	$73, -56(%ebp)
	je	.L976
	.loc 1 2546 0
	cmpl	$71, -60(%ebp)
	jne	.L978
.LBB20:
	.loc 1 2548 0
	movl	-68(%ebp), %eax
	movl	4(%eax), %edx
	movl	-52(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 2550 0
	cmpl	$71, -56(%ebp)
	jne	.L980
.LBB21:
	.loc 1 2552 0
	movl	-64(%ebp), %eax
	movl	4(%eax), %edx
	movl	-48(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 2556 0
	movl	-40(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jne	.L982
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L982
	.loc 1 2557 0
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2556 0
	jmp	.L1193
.L982:
	.loc 1 2559 0
	movl	-40(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L986
	.loc 1 2561 0
	movl	-36(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L988
	.loc 1 2562 0
	leal	.LC86@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L988:
	.loc 1 2566 0
	movl	$1, -44(%ebp)
	.loc 1 2567 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L991
	.loc 1 2569 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L993
	.loc 1 2570 0
	leal	.LC85@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L993:
	.loc 1 2577 0
	leal	.LC87@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L991:
	.loc 1 2580 0
	leal	.LC88@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L986:
	.loc 1 2584 0
	movl	-36(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L995
	.loc 1 2586 0
	movl	$1, -44(%ebp)
	.loc 1 2587 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L997
	.loc 1 2589 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L999
	.loc 1 2590 0
	leal	.LC85@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L999:
	.loc 1 2597 0
	leal	.LC89@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L997:
	.loc 1 2600 0
	leal	.LC90@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L995:
	.loc 1 2603 0
	movl	-40(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L1002
	movl	-36(%ebp), %eax
	cmpl	$31, %eax
	ja	.L1002
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1002
	.loc 1 2605 0
	movl	$2, -44(%ebp)
	.loc 1 2606 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1006
	.loc 1 2608 0
	cmpl	$66, -40(%ebp)
	je	.L1008
	.loc 1 2609 0
	leal	.LC48@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1008:
	.loc 1 2610 0
	cmpl	$0, -36(%ebp)
	jne	.L1193
	.loc 1 2611 0
	leal	.LC91@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1006:
	.loc 1 2614 0
	leal	.LC92@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2603 0
	jmp	.L1193
.L1002:
	.loc 1 2617 0
	movl	-40(%ebp), %eax
	cmpl	$31, %eax
	ja	.L1013
	movl	-36(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L1013
	.loc 1 2619 0
	movl	$2, -44(%ebp)
	.loc 1 2620 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1016
	.loc 1 2622 0
	cmpl	$66, -36(%ebp)
	je	.L1193
	.loc 1 2623 0
	leal	.LC41@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1016:
	.loc 1 2626 0
	leal	.LC93@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2617 0
	jmp	.L1193
.L1013:
	.loc 1 2628 0
	movl	-40(%ebp), %eax
	cmpl	$31, %eax
	ja	.L1021
	movl	-36(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L1021
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1021
.LBB22:
	.loc 1 2633 0
	movl	$1, -44(%ebp)
	.loc 1 2634 0
	movl	-36(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L1025
	movl	-36(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L1027
	movl	-36(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L1029
	movb	$51, -156(%ebp)
	jmp	.L1031
.L1029:
	movb	$63, -156(%ebp)
.L1031:
	movzbl	-156(%ebp), %eax
	movb	%al, -157(%ebp)
	jmp	.L1032
.L1027:
	movb	$50, -157(%ebp)
.L1032:
	movzbl	-157(%ebp), %edx
	movb	%dl, -158(%ebp)
	jmp	.L1033
.L1025:
	movb	$48, -158(%ebp)
.L1033:
	movzbl	-158(%ebp), %ecx
	movb	%cl, 4+retval.17070@GOTOFF(%ebx)
	.loc 1 2635 0
	leal	retval.17070@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2628 0
	jmp	.L1193
.L1021:
.LBE22:
	.loc 1 2637 0
	movl	-40(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L1034
	movl	-36(%ebp), %eax
	cmpl	$31, %eax
	ja	.L1034
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1034
.LBB23:
	.loc 1 2641 0
	movl	-40(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L1038
	movl	-40(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L1040
	movl	-40(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L1042
	movb	$51, -153(%ebp)
	jmp	.L1044
.L1042:
	movb	$63, -153(%ebp)
.L1044:
	movzbl	-153(%ebp), %eax
	movb	%al, -154(%ebp)
	jmp	.L1045
.L1040:
	movb	$50, -154(%ebp)
.L1045:
	movzbl	-154(%ebp), %edx
	movb	%dl, -155(%ebp)
	jmp	.L1046
.L1038:
	movb	$48, -155(%ebp)
.L1046:
	movzbl	-155(%ebp), %ecx
	movb	%cl, -18(%ebp)
	.loc 1 2643 0
	cmpb	$48, -18(%ebp)
	jne	.L1047
	.loc 1 2644 0
	leal	.LC94@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L1047:
	.loc 1 2646 0
	movl	$1, -44(%ebp)
	.loc 1 2647 0
	movzbl	-18(%ebp), %eax
	movb	%al, 4+retval.17071@GOTOFF(%ebx)
	.loc 1 2648 0
	leal	retval.17071@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2637 0
	jmp	.L1193
.L1034:
.LBE23:
	.loc 1 2650 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1049
	.loc 1 2651 0
	leal	.LC40@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1049:
	.loc 1 2653 0
	movl	-36(%ebp), %eax
	addl	$1, %eax
	cmpl	-40(%ebp), %eax
	je	.L1051
	.loc 1 2654 0
	leal	.LC95@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1051:
	.loc 1 2657 0
	leal	.LC96@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L980:
.LBE21:
	.loc 1 2660 0
	cmpl	$65, -56(%ebp)
	jne	.L1054
	.loc 1 2664 0
	movl	-64(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	const_tiny_rtx@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	-64(%ebp), %eax
	jne	.L1056
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L1058
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L1058
	movl	-40(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L1058
.L1056:
	.loc 1 2667 0
	movl	-64(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$16, %al
	jne	.L1061
	.loc 1 2669 0
	movl	$1, -44(%ebp)
	.loc 1 2688 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L1063
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L1063
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	jne	.L1066
.L1063:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L1066
	movl	-40(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	jbe	.L1066
	.loc 1 2692 0
	movl	8(%ebp), %eax
	addl	$12, %eax
	movl	8(%ebp), %edx
	addl	$8, %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	split_double@PLT
	.loc 1 2693 0
	leal	.LC97@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2688 0
	jmp	.L1193
.L1066:
	.loc 1 2696 0
	leal	.LC98@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1061:
	.loc 1 2699 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1071
	.loc 1 2701 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1193
	.loc 1 2702 0
	leal	.LC99@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1071:
	.loc 1 2707 0
	movl	8(%ebp), %eax
	addl	$12, %eax
	movl	8(%ebp), %edx
	addl	$8, %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	split_double@PLT
	.loc 1 2708 0
	leal	.LC97@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2664 0
	jmp	.L1193
.L1058:
	.loc 1 2714 0
	movl	-40(%ebp), %eax
	cmpl	$31, %eax
	ja	.L1076
	.loc 1 2715 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1078
	leal	.LC67@GOTOFF(%ebx), %edi
	movl	%edi, -152(%ebp)
	jmp	.L1080
.L1078:
	leal	.LC100@GOTOFF(%ebx), %eax
	movl	%eax, -152(%ebp)
.L1080:
	movl	-152(%ebp), %edx
	movl	%edx, -72(%ebp)
	jmp	.L1193
.L1076:
	.loc 1 2722 0
	movl	-40(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L1193
	.loc 1 2724 0
	movl	$1, -44(%ebp)
	.loc 1 2725 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1082
	leal	.LC101@GOTOFF(%ebx), %ecx
	movl	%ecx, -148(%ebp)
	jmp	.L1084
.L1082:
	leal	.LC102@GOTOFF(%ebx), %edi
	movl	%edi, -148(%ebp)
.L1084:
	movl	-148(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1054:
	.loc 1 2732 0
	cmpl	$64, -56(%ebp)
	jne	.L1085
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L1085
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1085
	.loc 1 2734 0
	movl	-40(%ebp), %eax
	cmpl	$31, %eax
	ja	.L1089
	.loc 1 2735 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1091
	leal	.LC67@GOTOFF(%ebx), %edx
	movl	%edx, -144(%ebp)
	jmp	.L1093
.L1091:
	leal	.LC100@GOTOFF(%ebx), %ecx
	movl	%ecx, -144(%ebp)
.L1093:
	movl	-144(%ebp), %edi
	movl	%edi, -72(%ebp)
	jmp	.L1193
.L1089:
	.loc 1 2739 0
	movl	-40(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L1095
	.loc 1 2741 0
	movl	$1, -44(%ebp)
	.loc 1 2742 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L1097
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L1099
	leal	.LC98@GOTOFF(%ebx), %eax
	movl	%eax, -136(%ebp)
	jmp	.L1101
.L1099:
	leal	.LC102@GOTOFF(%ebx), %edx
	movl	%edx, -136(%ebp)
.L1101:
	movl	-136(%ebp), %ecx
	movl	%ecx, -140(%ebp)
	jmp	.L1102
.L1097:
	leal	.LC101@GOTOFF(%ebx), %edi
	movl	%edi, -140(%ebp)
.L1102:
	movl	-140(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1095:
	.loc 1 2748 0
	movl	-40(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L1193
	.loc 1 2750 0
	movl	$2, -44(%ebp)
	.loc 1 2751 0
	cmpl	$66, -40(%ebp)
	jne	.L1104
	leal	.LC91@GOTOFF(%ebx), %edx
	movl	%edx, -132(%ebp)
	jmp	.L1106
.L1104:
	leal	.LC103@GOTOFF(%ebx), %ecx
	movl	%ecx, -132(%ebp)
.L1106:
	movl	-132(%ebp), %edi
	movl	%edi, -72(%ebp)
	.loc 1 2732 0
	jmp	.L1193
.L1085:
	.loc 1 2757 0
	cmpl	$64, -56(%ebp)
	jne	.L1107
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$5, %al
	jne	.L1107
	movl	-40(%ebp), %eax
	cmpl	$31, %eax
	ja	.L1107
	.loc 1 2760 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1111
	.loc 1 2762 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L1113
	.loc 1 2764 0
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	testl	%edx, %edx
	js	.L1115
	movl	-64(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -128(%ebp)
	movl	%ecx, -124(%ebp)
	cmpl	$0, -124(%ebp)
	jg	.L1115
	cmpl	$0, -124(%ebp)
	js	.L1118
	cmpl	$65535, -128(%ebp)
	ja	.L1115
.L1118:
	.loc 1 2765 0
	leal	.LC65@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2764 0
	jmp	.L1193
.L1115:
	.loc 1 2766 0
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	testl	%edx, %edx
	jns	.L1193
	movl	-64(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -120(%ebp)
	movl	%ecx, -116(%ebp)
	cmpl	$-1, -116(%ebp)
	jl	.L1193
	cmpl	$-1, -116(%ebp)
	jg	.L1122
	cmpl	$-65535, -120(%ebp)
	jb	.L1193
.L1122:
	.loc 1 2767 0
	leal	.LC66@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1113:
	.loc 1 2769 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L1124
	.loc 1 2770 0
	leal	.LC104@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1124:
	.loc 1 2780 0
	leal	.LC105@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1111:
	.loc 1 2802 0
	movl	8(%ebp), %esi
	addl	$8, %esi
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%edx, %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, (%esi)
	.loc 1 2803 0
	movl	8(%ebp), %esi
	addl	$4, %esi
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, %edx
	movl	$0, %eax
	movl	%edx, %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, (%esi)
	.loc 1 2805 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L1127
	.loc 1 2807 0
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	testl	%edx, %edx
	js	.L1129
	movl	-64(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -112(%ebp)
	movl	%ecx, -108(%ebp)
	cmpl	$0, -108(%ebp)
	jg	.L1129
	cmpl	$0, -108(%ebp)
	js	.L1132
	cmpl	$65535, -112(%ebp)
	ja	.L1129
.L1132:
	.loc 1 2808 0
	leal	.LC106@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2807 0
	jmp	.L1193
.L1129:
	.loc 1 2809 0
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	testl	%edx, %edx
	jns	.L1193
	movl	-64(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -104(%ebp)
	movl	%ecx, -100(%ebp)
	cmpl	$-1, -100(%ebp)
	jl	.L1193
	cmpl	$-1, -100(%ebp)
	jg	.L1136
	cmpl	$-65535, -104(%ebp)
	jb	.L1193
.L1136:
	.loc 1 2811 0
	movl	8(%ebp), %esi
	addl	$8, %esi
	movl	$1, 4(%esp)
	movl	$0, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, (%esi)
	.loc 1 2812 0
	leal	.LC107@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1127:
	.loc 1 2816 0
	leal	.LC106@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2757 0
	jmp	.L1193
.L1107:
	.loc 1 2820 0
	cmpl	$76, -56(%ebp)
	jne	.L1137
	.loc 1 2822 0
	movl	$1, -44(%ebp)
	.loc 1 2824 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1139
	.loc 1 2825 0
	movl	$2, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1139:
	.loc 1 2827 0
	movl	-40(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L1141
	.loc 1 2828 0
	leal	.LC108@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1143
.L1141:
	.loc 1 2830 0
	movl	-40(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L1144
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1144
.LBB24:
	.loc 1 2833 0
	movl	-40(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L1147
	movl	-40(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L1149
	movl	-40(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L1151
	movb	$51, -89(%ebp)
	jmp	.L1153
.L1151:
	movb	$63, -89(%ebp)
.L1153:
	movzbl	-89(%ebp), %ecx
	movb	%cl, -90(%ebp)
	jmp	.L1154
.L1149:
	movb	$50, -90(%ebp)
.L1154:
	movzbl	-90(%ebp), %eax
	movb	%al, -91(%ebp)
	jmp	.L1155
.L1147:
	movb	$48, -91(%ebp)
.L1155:
	movzbl	-91(%ebp), %edx
	movb	%dl, -17(%ebp)
	.loc 1 2835 0
	cmpb	$48, -17(%ebp)
	jne	.L1156
	.loc 1 2836 0
	leal	.LC58@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L1156:
	.loc 1 2838 0
	movl	$1, -44(%ebp)
	.loc 1 2839 0
	movzbl	-17(%ebp), %eax
	movb	%al, 3+retval.17073@GOTOFF(%ebx)
	.loc 1 2840 0
	leal	retval.17073@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2830 0
	jmp	.L1143
.L1144:
.LBE24:
	.loc 1 2843 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1158
	.loc 1 2853 0
	leal	.LC109@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1143
.L1158:
	.loc 1 2856 0
	movl	-64(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	double_memory_operand@PLT
	testl	%eax, %eax
	je	.L1143
	.loc 1 2857 0
	movl	-64(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	je	.L1161
	leal	.LC110@GOTOFF(%ebx), %ecx
	movl	%ecx, -88(%ebp)
	jmp	.L1163
.L1161:
	leal	.LC111@GOTOFF(%ebx), %edi
	movl	%edi, -88(%ebp)
.L1163:
	movl	-88(%ebp), %eax
	movl	%eax, -72(%ebp)
.L1143:
	.loc 1 2861 0
	cmpl	$0, -72(%ebp)
	je	.L1193
	movl	-64(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1193
.LBB25:
	.loc 1 2863 0
	movl	-72(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -168(%ebp)
	movl	$0, %eax
	cld
	movl	-168(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	movl	%eax, -32(%ebp)
	.loc 1 2865 0
	cmpl	$55, -32(%ebp)
	jbe	.L1167
	.loc 1 2866 0
	leal	__FUNCTION__.17076@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2866, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1167:
	.loc 1 2868 0
	movl	-72(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC60@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 2869 0
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1137:
.LBE25:
	.loc 1 2873 0
	cmpl	$77, -56(%ebp)
	jne	.L1169
	.loc 1 2875 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1171
	.loc 1 2876 0
	movl	$2, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1171:
	.loc 1 2878 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L1173
	.loc 1 2883 0
	leal	.LC112@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1173:
	.loc 1 2885 0
	leal	.LC113@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1169:
	.loc 1 2887 0
	cmpl	$78, -56(%ebp)
	je	.L1176
	cmpl	$68, -56(%ebp)
	jne	.L1193
.L1176:
	.loc 1 2889 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L1178
	cmpl	$68, -56(%ebp)
	jne	.L1178
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L1178
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$28, %eax
	jne	.L1178
	.loc 1 2896 0
	leal	.LC71@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2889 0
	jmp	.L1193
.L1178:
	.loc 1 2898 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L1183
	cmpl	$78, -56(%ebp)
	jne	.L1183
	movl	-64(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1183
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$42, %al
	jne	.L1187
	movl	-64(%ebp), %eax
	movl	4(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	leal	.LC39@GOTOFF(%ebx), %eax
	movzbl	(%eax), %eax
	cmpb	%al, %dl
	je	.L1183
.L1187:
	.loc 1 2908 0
	leal	.LC72@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2898 0
	jmp	.L1193
.L1183:
	.loc 1 2912 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1189
	.loc 1 2913 0
	movl	$2, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1189:
	.loc 1 2915 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L1191
	.loc 1 2920 0
	leal	.LC112@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L1191:
	.loc 1 2922 0
	leal	.LC113@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1193
.L978:
.LBE20:
	.loc 1 2927 0
	cmpl	$76, -60(%ebp)
	jne	.L1193
	.loc 1 2929 0
	cmpl	$71, -56(%ebp)
	jne	.L1195
.LBB26:
	.loc 1 2931 0
	movl	-64(%ebp), %eax
	movl	4(%eax), %edx
	movl	-48(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 2933 0
	movl	-28(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L1197
	.loc 1 2934 0
	leal	.LC114@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1215
.L1197:
	.loc 1 2936 0
	movl	-28(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L1200
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1200
.LBB27:
	.loc 1 2940 0
	movl	-28(%ebp), %eax
	subl	$80, %eax
	cmpl	$31, %eax
	jbe	.L1203
	movl	-28(%ebp), %eax
	subl	$112, %eax
	cmpl	$31, %eax
	jbe	.L1205
	movl	-28(%ebp), %eax
	subl	$144, %eax
	cmpl	$31, %eax
	ja	.L1207
	movb	$51, -81(%ebp)
	jmp	.L1209
.L1207:
	movb	$63, -81(%ebp)
.L1209:
	movzbl	-81(%ebp), %eax
	movb	%al, -82(%ebp)
	jmp	.L1210
.L1205:
	movb	$50, -82(%ebp)
.L1210:
	movzbl	-82(%ebp), %edx
	movb	%dl, -83(%ebp)
	jmp	.L1211
.L1203:
	movb	$48, -83(%ebp)
.L1211:
	movzbl	-83(%ebp), %ecx
	movb	%cl, 3+retval.17078@GOTOFF(%ebx)
	.loc 1 2941 0
	leal	retval.17078@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	.loc 1 2936 0
	jmp	.L1215
.L1200:
.LBE27:
	.loc 1 2943 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1212
	.loc 1 2951 0
	leal	.LC115@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1215
.L1212:
	.loc 1 2954 0
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	double_memory_operand@PLT
	testl	%eax, %eax
	je	.L1215
	.loc 1 2955 0
	leal	.LC116@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1215
.L1195:
.LBE26:
	.loc 1 2958 0
	cmpl	$64, -56(%ebp)
	jne	.L1216
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L1218
.L1216:
	cmpl	$65, -56(%ebp)
	jne	.L1215
	movl	-64(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	const_tiny_rtx@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	-64(%ebp), %eax
	jne	.L1215
.L1218:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L1220
	movl	-68(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	double_memory_operand@PLT
	testl	%eax, %eax
	je	.L1215
.L1220:
	.loc 1 2964 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1222
	.loc 1 2965 0
	leal	.LC117@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1215
.L1222:
	.loc 1 2967 0
	leal	.LC118@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
.L1215:
	.loc 1 2970 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1224
	.loc 1 2971 0
	movl	$2, 4(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1224:
	.loc 1 2973 0
	cmpl	$0, -72(%ebp)
	je	.L1193
	movl	-68(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1193
.LBB28:
	.loc 1 2975 0
	movl	-72(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -172(%ebp)
	movl	$0, %eax
	cld
	movl	-172(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 1 2977 0
	cmpl	$55, -24(%ebp)
	jbe	.L1228
	.loc 1 2978 0
	leal	__FUNCTION__.17076@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2978, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1228:
	.loc 1 2980 0
	movl	-72(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC60@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 2981 0
	leal	volatile_buffer@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
.L1193:
.LBE28:
	.loc 1 2985 0
	cmpl	$0, -72(%ebp)
	jne	.L1230
	.loc 1 2987 0
	leal	.LC85@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L1230:
	.loc 1 2991 0
	cmpl	$0, -44(%ebp)
	je	.L1232
	.loc 1 2992 0
	movl	12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_fill_delay_slot@PLT
	movl	%eax, -164(%ebp)
	jmp	.L971
.L1232:
	.loc 1 2994 0
	movl	-72(%ebp), %eax
	movl	%eax, -164(%ebp)
.L971:
	movl	-164(%ebp), %eax
	.loc 1 2995 0
	addl	$188, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE72:
	.size	mips_move_2words, .-mips_move_2words
.globl mips_address_cost
	.type	mips_address_cost, @function
mips_address_cost:
.LFB73:
	.loc 1 3003 0
	pushl	%ebp
.LCFI215:
	movl	%esp, %ebp
.LCFI216:
	pushl	%ebx
.LCFI217:
	subl	$84, %esp
.LCFI218:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3004 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -72(%ebp)
	cmpl	$78, -72(%ebp)
	je	.L1239
	cmpl	$78, -72(%ebp)
	ja	.L1242
	cmpl	$68, -72(%ebp)
	je	.L1237
	cmpl	$77, -72(%ebp)
	je	.L1238
	jmp	.L1236
.L1242:
	cmpl	$85, -72(%ebp)
	je	.L1240
	cmpl	$145, -72(%ebp)
	je	.L1241
	jmp	.L1236
.L1241:
	.loc 1 3007 0
	movl	$1, -68(%ebp)
	jmp	.L1243
.L1238:
	.loc 1 3010 0
	movl	$2, -68(%ebp)
	jmp	.L1243
.L1237:
.LBB29:
	.loc 1 3014 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 3015 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	leal	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	eliminate_constant_term@PLT
	movl	%eax, 8(%ebp)
	.loc 1 3016 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	jne	.L1244
	.loc 1 3017 0
	movl	$2, -68(%ebp)
	jmp	.L1243
.L1244:
	.loc 1 3019 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L1246
	.loc 1 3020 0
	movl	$4, -68(%ebp)
	jmp	.L1243
.L1246:
	.loc 1 3022 0
	movl	-12(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -64(%ebp)
	movl	%edx, -60(%ebp)
	cmpl	$0, -60(%ebp)
	jb	.L1239
	cmpl	$0, -60(%ebp)
	ja	.L1249
	cmpl	$65535, -64(%ebp)
	jbe	.L1239
.L1249:
	.loc 1 3023 0
	movl	$2, -68(%ebp)
	jmp	.L1243
.L1239:
.LBE29:
	.loc 1 3029 0
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1250
	movl	$1, -52(%ebp)
	jmp	.L1252
.L1250:
	movl	$2, -52(%ebp)
.L1252:
	movl	-52(%ebp), %eax
	movl	%eax, -68(%ebp)
	jmp	.L1243
.L1240:
.LBB30:
	.loc 1 3033 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3034 0
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 3036 0
	movl	-32(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$71, %ax
	je	.L1253
	movl	-28(%ebp), %ecx
	movzwl	(%ecx), %eax
	cmpw	$71, %ax
	jne	.L1253
	.loc 1 3037 0
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -32(%ebp)
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
.L1253:
	.loc 1 3039 0
	movl	-32(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$71, %ax
	jne	.L1236
	.loc 1 3042 0
	movl	-28(%ebp), %ecx
	movzwl	(%ecx), %eax
	movzwl	%ax, %eax
	movl	%eax, -48(%ebp)
	cmpl	$78, -48(%ebp)
	ja	.L1259
	cmpl	$77, -48(%ebp)
	jae	.L1258
	cmpl	$64, -48(%ebp)
	je	.L1257
	cmpl	$68, -48(%ebp)
	je	.L1258
	jmp	.L1236
.L1259:
	movl	-48(%ebp), %eax
	subl	$144, %eax
	cmpl	$1, %eax
	ja	.L1236
	jmp	.L1258
.L1257:
	.loc 1 3045 0
	movl	-28(%ebp), %ecx
	movl	4(%ecx), %eax
	movl	8(%ecx), %edx
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -40(%ebp)
	movl	%edx, -36(%ebp)
	cmpl	$0, -36(%ebp)
	ja	.L1260
	cmpl	$0, -36(%ebp)
	jb	.L1262
	cmpl	$65535, -40(%ebp)
	ja	.L1260
.L1262:
	movl	$1, -44(%ebp)
	jmp	.L1263
.L1260:
	movl	$2, -44(%ebp)
.L1263:
	movl	-44(%ebp), %eax
	movl	%eax, -68(%ebp)
	jmp	.L1243
.L1258:
	.loc 1 3052 0
	movl	-28(%ebp), %edx
	movl	%edx, (%esp)
	call	mips_address_cost@PLT
	addl	$1, %eax
	movl	%eax, -68(%ebp)
	jmp	.L1243
.L1236:
.LBE30:
	.loc 1 3063 0
	movl	$4, -68(%ebp)
.L1243:
	movl	-68(%ebp), %eax
	.loc 1 3064 0
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE73:
	.size	mips_address_cost, .-mips_address_cost
.globl pic_address_needs_scratch
	.type	pic_address_needs_scratch, @function
pic_address_needs_scratch:
.LFB74:
	.loc 1 3072 0
	pushl	%ebp
.LCFI219:
	movl	%esp, %ebp
.LCFI220:
	subl	$16, %esp
.LCFI221:
	.loc 1 3074 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L1266
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L1266
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L1266
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1266
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	12(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -16(%ebp)
	movl	%edx, -12(%ebp)
	cmpl	$0, -12(%ebp)
	jb	.L1266
	cmpl	$0, -12(%ebp)
	ja	.L1272
	cmpl	$65535, -16(%ebp)
	jbe	.L1266
.L1272:
	.loc 1 3078 0
	movl	$1, -4(%ebp)
	jmp	.L1273
.L1266:
	.loc 1 3080 0
	movl	$0, -4(%ebp)
.L1273:
	movl	-4(%ebp), %eax
	.loc 1 3081 0
	leave
	ret
.LFE74:
	.size	pic_address_needs_scratch, .-pic_address_needs_scratch
	.type	map_test_to_internal_test, @function
map_test_to_internal_test:
.LFB75:
	.loc 1 3088 0
	pushl	%ebp
.LCFI222:
	movl	%esp, %ebp
.LCFI223:
	subl	$20, %esp
.LCFI224:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 3089 0
	movl	$10, -4(%ebp)
	.loc 1 3091 0
	movl	8(%ebp), %eax
	subl	$112, %eax
	movl	%eax, -20(%ebp)
	cmpl	$9, -20(%ebp)
	ja	.L1276
	movl	-20(%ebp), %eax
	sall	$2, %eax
	movl	.L1287@GOTOFF(%eax,%ecx), %eax
	addl	%ecx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L1287:
	.long	.L1277@GOTOFF
	.long	.L1278@GOTOFF
	.long	.L1279@GOTOFF
	.long	.L1280@GOTOFF
	.long	.L1281@GOTOFF
	.long	.L1282@GOTOFF
	.long	.L1283@GOTOFF
	.long	.L1284@GOTOFF
	.long	.L1285@GOTOFF
	.long	.L1286@GOTOFF
	.text
.L1278:
	.loc 1 3093 0
	movl	$0, -4(%ebp)
	jmp	.L1276
.L1277:
	.loc 1 3094 0
	movl	$1, -4(%ebp)
	jmp	.L1276
.L1280:
	.loc 1 3095 0
	movl	$2, -4(%ebp)
	jmp	.L1276
.L1279:
	.loc 1 3096 0
	movl	$3, -4(%ebp)
	jmp	.L1276
.L1282:
	.loc 1 3097 0
	movl	$4, -4(%ebp)
	jmp	.L1276
.L1281:
	.loc 1 3098 0
	movl	$5, -4(%ebp)
	jmp	.L1276
.L1284:
	.loc 1 3099 0
	movl	$6, -4(%ebp)
	jmp	.L1276
.L1283:
	.loc 1 3100 0
	movl	$7, -4(%ebp)
	jmp	.L1276
.L1286:
	.loc 1 3101 0
	movl	$8, -4(%ebp)
	jmp	.L1276
.L1285:
	.loc 1 3102 0
	movl	$9, -4(%ebp)
.L1276:
	.loc 1 3106 0
	movl	-4(%ebp), %eax
	.loc 1 3107 0
	leave
	ret
.LFE75:
	.size	map_test_to_internal_test, .-map_test_to_internal_test
	.section	.rodata
	.type	__FUNCTION__.17824, @object
	.size	__FUNCTION__.17824, 19
__FUNCTION__.17824:
	.string	"gen_int_relational"
	.align 32
	.type	info.17815, @object
	.size	info.17815, 320
info.17815:
	.long	95
	.long	0
	.long	65535
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	95
	.long	0
	.long	65535
	.long	0
	.long	0
	.long	1
	.long	1
	.long	0
	.long	117
	.long	-32769
	.long	32766
	.long	1
	.long	1
	.long	1
	.long	0
	.long	0
	.long	117
	.long	-32768
	.long	32767
	.long	0
	.long	0
	.long	1
	.long	1
	.long	0
	.long	117
	.long	-32768
	.long	32767
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.long	117
	.long	-32769
	.long	32766
	.long	1
	.long	1
	.long	0
	.long	1
	.long	0
	.long	121
	.long	-32769
	.long	32766
	.long	1
	.long	1
	.long	1
	.long	0
	.long	1
	.long	121
	.long	-32768
	.long	32767
	.long	0
	.long	0
	.long	1
	.long	1
	.long	1
	.long	121
	.long	-32768
	.long	32767
	.long	0
	.long	0
	.long	0
	.long	0
	.long	1
	.long	121
	.long	-32769
	.long	32766
	.long	1
	.long	1
	.long	0
	.long	1
	.long	1
	.text
.globl gen_int_relational
	.type	gen_int_relational, @function
gen_int_relational:
.LFB76:
	.loc 1 3139 0
	pushl	%ebp
.LCFI225:
	movl	%esp, %ebp
.LCFI226:
	pushl	%edi
.LCFI227:
	pushl	%esi
.LCFI228:
	pushl	%ebx
.LCFI229:
	subl	$156, %esp
.LCFI230:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3175 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	map_test_to_internal_test
	movl	%eax, -56(%ebp)
	.loc 1 3176 0
	cmpl	$10, -56(%ebp)
	jne	.L1290
	.loc 1 3177 0
	leal	__FUNCTION__.17824@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$3177, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1290:
	.loc 1 3179 0
	movl	-56(%ebp), %eax
	sall	$5, %eax
	movl	%eax, %edx
	leal	info.17815@GOTOFF(%ebx), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 3180 0
	movl	-48(%ebp), %eax
	movl	(%eax), %eax
	cmpl	$95, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	.loc 1 3182 0
	movl	16(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
	.loc 1 3183 0
	cmpl	$0, -52(%ebp)
	jne	.L1292
	.loc 1 3184 0
	movl	20(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
.L1292:
	.loc 1 3187 0
	cmpl	$0, 12(%ebp)
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -44(%ebp)
	.loc 1 3188 0
	cmpl	$0, -44(%ebp)
	je	.L1294
	.loc 1 3190 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	je	.L1296
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$73, %ax
	jne	.L1298
.L1296:
	.loc 1 3193 0
	movl	20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1299
	movl	20(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L1299
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L1302
	cmpl	$0, -40(%ebp)
	je	.L1299
.L1302:
	.loc 1 3195 0
	movl	$0, -148(%ebp)
	jmp	.L1304
.L1299:
	.loc 1 3198 0
	cmpl	$0, -40(%ebp)
	je	.L1298
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1298
	.loc 1 3199 0
	movl	$0, -148(%ebp)
	jmp	.L1304
.L1298:
	.loc 1 3203 0
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, 12(%ebp)
.L1294:
	.loc 1 3207 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1307
	.loc 1 3208 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, 16(%ebp)
.L1307:
	.loc 1 3210 0
	movl	20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1309
.LBB31:
	.loc 1 3212 0
	movl	20(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -72(%ebp)
	movl	%edx, -68(%ebp)
	.loc 1 3214 0
	movl	-48(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -144(%ebp)
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%edx, -140(%ebp)
	movl	-140(%ebp), %ecx
	cmpl	-68(%ebp), %ecx
	jg	.L1311
	movl	-140(%ebp), %eax
	cmpl	-68(%ebp), %eax
	jl	.L1313
	movl	-144(%ebp), %edx
	cmpl	-72(%ebp), %edx
	ja	.L1311
.L1313:
	movl	-48(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -136(%ebp)
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	%ecx, -132(%ebp)
	movl	-132(%ebp), %eax
	cmpl	-68(%ebp), %eax
	jg	.L1309
	movl	-132(%ebp), %edx
	cmpl	-68(%ebp), %edx
	jl	.L1311
	movl	-136(%ebp), %ecx
	cmpl	-72(%ebp), %ecx
	jae	.L1309
.L1311:
	.loc 1 3225 0
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, 20(%ebp)
.L1309:
.LBE31:
	.loc 1 3229 0
	movl	20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1315
	movl	-48(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -128(%ebp)
	jmp	.L1317
.L1315:
	movl	-48(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -128(%ebp)
.L1317:
	movl	-128(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 1 3232 0
	cmpl	$0, 24(%ebp)
	je	.L1318
	.loc 1 3234 0
	movl	24(%ebp), %edx
	movl	-36(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 3235 0
	movl	$0, -36(%ebp)
.L1318:
	.loc 1 3240 0
	movl	20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1320
	.loc 1 3242 0
	movl	-48(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L1336
.LBB32:
	.loc 1 3244 0
	movl	20(%ebp), %eax
	movl	4(%eax), %esi
	movl	8(%eax), %edi
	movl	-48(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	addl	%esi, %eax
	adcl	%edi, %edx
	movl	%eax, -64(%ebp)
	movl	%edx, -60(%ebp)
	.loc 1 3249 0
	movl	-48(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L1324
	movl	-64(%ebp), %edx
	movl	-60(%ebp), %ecx
	movl	%edx, -120(%ebp)
	movl	%ecx, -116(%ebp)
	movl	20(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -112(%ebp)
	movl	%edx, -108(%ebp)
	movl	$1, -124(%ebp)
	movl	-108(%ebp), %ecx
	cmpl	%ecx, -116(%ebp)
	ja	.L1328
	movl	-108(%ebp), %eax
	cmpl	%eax, -116(%ebp)
	jb	.L1327
	movl	-112(%ebp), %edx
	cmpl	%edx, -120(%ebp)
	ja	.L1328
.L1327:
	movl	$0, -124(%ebp)
	jmp	.L1328
.L1324:
	movl	20(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -104(%ebp)
	movl	%ecx, -100(%ebp)
	movl	$1, -124(%ebp)
	movl	-100(%ebp), %ecx
	cmpl	-60(%ebp), %ecx
	jl	.L1328
	movl	-100(%ebp), %eax
	cmpl	-60(%ebp), %eax
	jg	.L1330
	movl	-104(%ebp), %edx
	cmpl	-64(%ebp), %edx
	jb	.L1328
.L1330:
	movl	$0, -124(%ebp)
.L1328:
	movl	-48(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	setg	%al
	movzbl	%al, %eax
	cmpl	%eax, -124(%ebp)
	je	.L1331
	.loc 1 3258 0
	cmpl	$0, -36(%ebp)
	je	.L1333
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -96(%ebp)
	jmp	.L1335
.L1333:
	movl	const_true_rtx@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -96(%ebp)
.L1335:
	movl	-96(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 3259 0
	movl	12(%ebp), %eax
	movl	%eax, -148(%ebp)
	jmp	.L1304
.L1331:
	.loc 1 3262 0
	movl	-64(%ebp), %eax
	movl	-60(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, 20(%ebp)
	jmp	.L1336
.L1320:
.LBE32:
	.loc 1 3266 0
	movl	-48(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L1336
.LBB33:
	.loc 1 3268 0
	movl	16(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 3269 0
	movl	20(%ebp), %eax
	movl	%eax, 16(%ebp)
	.loc 1 3270 0
	movl	-24(%ebp), %eax
	movl	%eax, 20(%ebp)
.L1336:
.LBE33:
	.loc 1 3273 0
	cmpl	$1, -56(%ebp)
	jne	.L1338
	movl	20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1338
	movl	20(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L1338
	.loc 1 3274 0
	movl	16(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3273 0
	jmp	.L1342
.L1338:
	.loc 1 3277 0
	cmpl	$0, -36(%ebp)
	jne	.L1343
	cmpl	$0, -40(%ebp)
	je	.L1345
.L1343:
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -92(%ebp)
	jmp	.L1346
.L1345:
	movl	12(%ebp), %edx
	movl	%edx, -92(%ebp)
.L1346:
	movl	-92(%ebp), %ecx
	movl	%ecx, -32(%ebp)
	.loc 1 3278 0
	movl	-48(%ebp), %eax
	movl	(%eax), %edx
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	gen_rtx@PLT
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	convert_move@PLT
.L1342:
	.loc 1 3281 0
	cmpl	$1, -56(%ebp)
	jne	.L1347
	.loc 1 3283 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1349
	.loc 1 3285 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$119, (%esp)
	call	gen_rtx@PLT
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	convert_move@PLT
	.loc 1 3286 0
	cmpl	$0, 24(%ebp)
	je	.L1351
	.loc 1 3287 0
	movl	24(%ebp), %eax
	movl	$0, (%eax)
.L1351:
	.loc 1 3288 0
	movl	$0, -36(%ebp)
	jmp	.L1357
.L1349:
	.loc 1 3292 0
	cmpl	$0, -36(%ebp)
	je	.L1354
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -88(%ebp)
	jmp	.L1356
.L1354:
	movl	12(%ebp), %eax
	movl	%eax, -88(%ebp)
.L1356:
	movl	-88(%ebp), %edx
	movl	%edx, -28(%ebp)
	.loc 1 3293 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	260(%eax), %eax
	movl	%eax, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$121, (%esp)
	call	gen_rtx@PLT
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	convert_move@PLT
	.loc 1 3294 0
	movl	-28(%ebp), %eax
	movl	%eax, -32(%ebp)
	jmp	.L1357
.L1347:
	.loc 1 3298 0
	cmpl	$0, -56(%ebp)
	jne	.L1357
	.loc 1 3300 0
	cmpl	$0, -36(%ebp)
	je	.L1359
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -84(%ebp)
	jmp	.L1361
.L1359:
	movl	12(%ebp), %ecx
	movl	%ecx, -84(%ebp)
.L1361:
	movl	-84(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 3301 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	260(%eax), %eax
	movl	%eax, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$121, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	convert_move@PLT
	.loc 1 3302 0
	movl	-28(%ebp), %eax
	movl	%eax, -32(%ebp)
.L1357:
	.loc 1 3305 0
	cmpl	$0, -36(%ebp)
	je	.L1362
.LBB34:
	.loc 1 3309 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1364
	.loc 1 3310 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	260(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L1366
.L1364:
	.loc 1 3316 0
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -28(%ebp)
	.loc 1 3317 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 3318 0
	movl	-28(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3319 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	260(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -20(%ebp)
.L1366:
	.loc 1 3321 0
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$95, (%esp)
	call	gen_rtx@PLT
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	convert_move@PLT
.L1362:
.LBE34:
	.loc 1 3324 0
	movl	12(%ebp), %edx
	movl	%edx, -148(%ebp)
.L1304:
	movl	-148(%ebp), %eax
	.loc 1 3325 0
	addl	$156, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE76:
	.size	gen_int_relational, .-gen_int_relational
	.type	get_float_compare_codes, @function
get_float_compare_codes:
.LFB77:
	.loc 1 3336 0
	pushl	%ebp
.LCFI231:
	movl	%esp, %ebp
.LCFI232:
	pushl	%ebx
.LCFI233:
	subl	$20, %esp
.LCFI234:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3337 0
	movl	8(%ebp), %eax
	subl	$112, %eax
	movl	%eax, -8(%ebp)
	cmpl	$17, -8(%ebp)
	ja	.L1369
	movl	$1, %eax
	movzbl	-8(%ebp), %ecx
	sall	%cl, %eax
	andl	$157697, %eax
	testl	%eax, %eax
	jne	.L1370
	jmp	.L1369
.L1370:
	.loc 1 3344 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	reverse_condition_maybe_unordered@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 3345 0
	movl	16(%ebp), %eax
	movl	$113, (%eax)
	.loc 1 3346 0
	jmp	.L1372
.L1369:
	.loc 1 3349 0
	movl	12(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%edx, (%eax)
	.loc 1 3350 0
	movl	16(%ebp), %eax
	movl	$112, (%eax)
.L1372:
	.loc 1 3353 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE77:
	.size	get_float_compare_codes, .-get_float_compare_codes
	.section	.rodata
.LC119:
	.string	"bad test"
	.text
.globl gen_conditional_branch
	.type	gen_conditional_branch, @function
gen_conditional_branch:
.LFB78:
	.loc 1 3363 0
	pushl	%ebp
.LCFI235:
	movl	%esp, %ebp
.LCFI236:
	pushl	%ebx
.LCFI237:
	subl	$84, %esp
.LCFI238:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3364 0
	movl	branch_type@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3365 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 3366 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 3373 0
	movl	-32(%ebp), %eax
	movl	%eax, -60(%ebp)
	cmpl	$1, -60(%ebp)
	jbe	.L1375
	cmpl	$3, -60(%ebp)
	ja	.L1374
	jmp	.L1376
.L1375:
	.loc 1 3377 0
	cmpl	$0, -32(%ebp)
	jne	.L1377
	movl	$4, -56(%ebp)
	jmp	.L1379
.L1377:
	movl	$5, -56(%ebp)
.L1379:
	movl	-56(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 3378 0
	movl	$0, -40(%ebp)
	.loc 1 3379 0
	movl	12(%ebp), %edx
	leal	-40(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	gen_int_relational@PLT
	movl	%eax, -16(%ebp)
	.loc 1 3381 0
	cmpl	$0, -16(%ebp)
	je	.L1380
	.loc 1 3383 0
	movl	-16(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 3384 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 3385 0
	movl	$112, 12(%ebp)
	jmp	.L1385
.L1380:
	.loc 1 3387 0
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1385
	movl	-24(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L1385
	.loc 1 3390 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -24(%ebp)
	.loc 1 3392 0
	jmp	.L1385
.L1376:
	.loc 1 3396 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L1386
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L1386
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L1386
	.loc 1 3397 0
	movl	$67, 4(%esp)
	movl	$53, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -16(%ebp)
	.loc 1 3396 0
	jmp	.L1390
.L1386:
	.loc 1 3399 0
	movl	$53, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -16(%ebp)
.L1390:
	.loc 1 3401 0
	movl	12(%ebp), %edx
	leal	12(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	get_float_compare_codes
	.loc 1 3402 0
	movl	-36(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$53, 4(%esp)
	movl	%edx, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3405 0
	movl	$53, -20(%ebp)
	.loc 1 3406 0
	movl	-16(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 3407 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 3408 0
	movl	$0, -40(%ebp)
	.loc 1 3409 0
	jmp	.L1385
.L1374:
	.loc 1 3412 0
	movl	12(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	leal	.LC119@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	abort_with_insn
.L1385:
	.loc 1 3417 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$77, (%esp)
	call	gen_rtx_fmt_u00@PLT
	movl	%eax, -12(%ebp)
	.loc 1 3418 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 3420 0
	movl	-40(%ebp), %eax
	testl	%eax, %eax
	je	.L1391
	.loc 1 3422 0
	movl	-12(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 3423 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L1391:
	.loc 1 3426 0
	movl	12(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	$82, (%esp)
	call	gen_rtx_fmt_eee@PLT
	movl	%eax, %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, (%esp)
	call	emit_jump_insn@PLT
	.loc 1 3431 0
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE78:
	.size	gen_conditional_branch, .-gen_conditional_branch
	.section	.rodata
	.type	__FUNCTION__.18072, @object
	.size	__FUNCTION__.18072, 21
__FUNCTION__.18072:
	.string	"gen_conditional_move"
	.text
.globl gen_conditional_move
	.type	gen_conditional_move, @function
gen_conditional_move:
.LFB79:
	.loc 1 3439 0
	pushl	%ebp
.LCFI239:
	movl	%esp, %ebp
.LCFI240:
	pushl	%edi
.LCFI241:
	pushl	%esi
.LCFI242:
	pushl	%ebx
.LCFI243:
	subl	$60, %esp
.LCFI244:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3440 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 3441 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3442 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
	.loc 1 3443 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -40(%ebp)
	.loc 1 3444 0
	movl	$112, -44(%ebp)
	.loc 1 3445 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 1 3449 0
	movl	-28(%ebp), %edx
	movl	mode_class@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	$2, %eax
	je	.L1395
	.loc 1 3451 0
	movl	-40(%ebp), %eax
	subl	$112, %eax
	movl	%eax, -48(%ebp)
	cmpl	$9, -48(%ebp)
	ja	.L1397
	movl	-48(%ebp), %eax
	sall	$2, %eax
	movl	.L1408@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L1408:
	.long	.L1398@GOTOFF
	.long	.L1399@GOTOFF
	.long	.L1400@GOTOFF
	.long	.L1401@GOTOFF
	.long	.L1402@GOTOFF
	.long	.L1410@GOTOFF
	.long	.L1404@GOTOFF
	.long	.L1405@GOTOFF
	.long	.L1406@GOTOFF
	.long	.L1410@GOTOFF
	.text
.L1399:
	.loc 1 3454 0
	movl	$95, -40(%ebp)
	.loc 1 3455 0
	movl	$113, -44(%ebp)
	.loc 1 3456 0
	jmp	.L1410
.L1398:
	.loc 1 3458 0
	movl	$95, -40(%ebp)
	.loc 1 3459 0
	jmp	.L1410
.L1400:
	.loc 1 3463 0
	movl	$117, -40(%ebp)
	.loc 1 3464 0
	movl	$113, -44(%ebp)
	.loc 1 3465 0
	jmp	.L1410
.L1401:
	.loc 1 3467 0
	movl	$117, -40(%ebp)
	.loc 1 3468 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -36(%ebp)
	.loc 1 3469 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3470 0
	jmp	.L1410
.L1402:
	.loc 1 3472 0
	movl	$117, -40(%ebp)
	.loc 1 3473 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -36(%ebp)
	.loc 1 3474 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3475 0
	movl	$113, -44(%ebp)
	.loc 1 3476 0
	jmp	.L1410
.L1404:
	.loc 1 3480 0
	movl	$121, -40(%ebp)
	.loc 1 3481 0
	movl	$113, -44(%ebp)
	.loc 1 3482 0
	jmp	.L1410
.L1405:
	.loc 1 3484 0
	movl	$121, -40(%ebp)
	.loc 1 3485 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -36(%ebp)
	.loc 1 3486 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3487 0
	jmp	.L1410
.L1406:
	.loc 1 3489 0
	movl	$121, -40(%ebp)
	.loc 1 3490 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -36(%ebp)
	.loc 1 3491 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3492 0
	movl	$113, -44(%ebp)
	.loc 1 3493 0
	jmp	.L1410
.L1397:
	.loc 1 3495 0
	leal	__FUNCTION__.18072@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$3495, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1395:
	.loc 1 3499 0
	movl	-40(%ebp), %eax
	leal	-44(%ebp), %edx
	movl	%edx, 8(%esp)
	leal	-40(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	get_float_compare_codes
.L1410:
	.loc 1 3501 0
	cmpl	$4, -28(%ebp)
	je	.L1411
	cmpl	$5, -28(%ebp)
	jne	.L1413
.L1411:
	.loc 1 3502 0
	movl	-28(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 3501 0
	jmp	.L1414
.L1413:
	.loc 1 3503 0
	cmpl	$15, -28(%ebp)
	je	.L1415
	cmpl	$16, -28(%ebp)
	jne	.L1417
.L1415:
	.loc 1 3504 0
	movl	$53, -20(%ebp)
	.loc 1 3503 0
	jmp	.L1414
.L1417:
	.loc 1 3506 0
	leal	__FUNCTION__.18072@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$3506, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1414:
	.loc 1 3508 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -16(%ebp)
	.loc 1 3509 0
	movl	-40(%ebp), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3512 0
	movl	8(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %esi
	movl	8(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %edi
	movl	const_tiny_rtx@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	-44(%ebp), %edx
	movl	%eax, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	gen_rtx@PLT
	movl	%esi, 16(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$82, (%esp)
	call	gen_rtx_fmt_eee@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3518 0
	addl	$60, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE79:
	.size	gen_conditional_move, .-gen_conditional_move
.globl mips_gen_conditional_trap
	.type	mips_gen_conditional_trap, @function
mips_gen_conditional_trap:
.LFB80:
	.loc 1 3526 0
	pushl	%ebp
.LCFI245:
	movl	%esp, %ebp
.LCFI246:
	pushl	%esi
.LCFI247:
	pushl	%ebx
.LCFI248:
	subl	$48, %esp
.LCFI249:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3528 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -16(%ebp)
	.loc 1 3529 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 1 3534 0
	movl	-16(%ebp), %eax
	movl	%eax, -36(%ebp)
	cmpl	$116, -36(%ebp)
	je	.L1422
	cmpl	$116, -36(%ebp)
	ja	.L1425
	cmpl	$115, -36(%ebp)
	je	.L1421
	jmp	.L1420
.L1425:
	cmpl	$119, -36(%ebp)
	je	.L1423
	cmpl	$120, -36(%ebp)
	je	.L1424
	jmp	.L1420
.L1421:
	.loc 1 3536 0
	movl	$117, -16(%ebp)
	jmp	.L1420
.L1422:
	.loc 1 3537 0
	movl	$114, -16(%ebp)
	jmp	.L1420
.L1423:
	.loc 1 3538 0
	movl	$121, -16(%ebp)
	jmp	.L1420
.L1424:
	.loc 1 3539 0
	movl	$118, -16(%ebp)
.L1420:
	.loc 1 3542 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	cmpl	-16(%ebp), %eax
	jne	.L1426
	.loc 1 3544 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -24(%ebp)
	.loc 1 3545 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L1428
.L1426:
	.loc 1 3549 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -24(%ebp)
	.loc 1 3550 0
	movl	branch_cmp@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
.L1428:
	.loc 1 3552 0
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L1429
	movl	-20(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -32(%ebp)
	movl	%edx, -28(%ebp)
	cmpl	$0, -28(%ebp)
	jb	.L1429
	cmpl	$0, -28(%ebp)
	ja	.L1432
	cmpl	$65535, -32(%ebp)
	jbe	.L1429
.L1432:
	.loc 1 3553 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	force_reg@PLT
	movl	%eax, -20(%ebp)
.L1429:
	.loc 1 3555 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %esi
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx@PLT
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$62, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3558 0
	addl	$48, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE80:
	.size	mips_gen_conditional_trap, .-mips_gen_conditional_trap
.globl fcc_register_operand
	.type	fcc_register_operand, @function
fcc_register_operand:
.LFB81:
	.loc 1 3567 0
	pushl	%ebp
.LCFI250:
	movl	%esp, %ebp
.LCFI251:
	pushl	%ebx
.LCFI252:
	subl	$20, %esp
.LCFI253:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3568 0
	cmpl	$0, 12(%ebp)
	je	.L1435
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	cmpl	12(%ebp), %eax
	jne	.L1437
.L1435:
	movl	reload_in_progress@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L1438
	movl	reload_completed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1437
.L1438:
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	je	.L1440
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$73, %ax
	jne	.L1437
.L1440:
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	true_regnum@PLT
	subl	$67, %eax
	cmpl	$7, %eax
	ja	.L1437
	movl	$1, -8(%ebp)
	jmp	.L1443
.L1437:
	movl	$0, -8(%ebp)
.L1443:
	movl	-8(%ebp), %eax
	.loc 1 3572 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE81:
	.size	fcc_register_operand, .-fcc_register_operand
.globl mips_emit_fcc_reload
	.type	mips_emit_fcc_reload, @function
mips_emit_fcc_reload:
.LFB82:
	.loc 1 3588 0
	pushl	%ebp
.LCFI254:
	movl	%esp, %ebp
.LCFI255:
	pushl	%esi
.LCFI256:
	pushl	%ebx
.LCFI257:
	subl	$48, %esp
.LCFI258:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3592 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L1446
	.loc 1 3593 0
	movl	$1, 20(%esp)
	movl	$1, 16(%esp)
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$15, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	adjust_address_1@PLT
	movl	%eax, 12(%ebp)
	jmp	.L1448
.L1446:
	.loc 1 3594 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	je	.L1449
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$73, %ax
	jne	.L1448
.L1449:
	.loc 1 3595 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	true_regnum@PLT
	movl	%eax, 4(%esp)
	movl	$15, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, 12(%ebp)
.L1448:
	.loc 1 3597 0
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$15, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -16(%ebp)
	.loc 1 3598 0
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L1451
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L1453
.L1451:
	movl	$1, -28(%ebp)
	jmp	.L1454
.L1453:
	movl	$2, -28(%ebp)
.L1454:
	movl	-32(%ebp), %eax
	addl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$15, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -12(%ebp)
	.loc 1 3600 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_rtx@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_move_insn@PLT
	.loc 1 3601 0
	movl	const_tiny_rtx@GOT(%ebx), %eax
	movl	60(%eax), %esi
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_rtx@PLT
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 3602 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_slt_sf@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3603 0
	addl	$48, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE82:
	.size	mips_emit_fcc_reload, .-mips_emit_fcc_reload
	.section	.rodata
	.type	__FUNCTION__.18230, @object
	.size	__FUNCTION__.18230, 24
__FUNCTION__.18230:
	.string	"mips_set_return_address"
	.text
.globl mips_set_return_address
	.type	mips_set_return_address, @function
mips_set_return_address:
.LFB83:
	.loc 1 3612 0
	pushl	%ebp
.LCFI259:
	movl	%esp, %ebp
.LCFI260:
	pushl	%ebx
.LCFI261:
	subl	$36, %esp
.LCFI262:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3615 0
	call	get_frame_size@PLT
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	compute_frame_size@PLT
	.loc 1 3616 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	sarl	$31, %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L1457
	.loc 1 3617 0
	leal	__FUNCTION__.18230@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$3617, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1457:
	.loc 1 3618 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	48(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -16(%ebp)
	movl	%edx, -12(%ebp)
	.loc 1 3621 0
	cmpl	$0, -12(%ebp)
	jg	.L1459
	cmpl	$0, -12(%ebp)
	js	.L1461
	cmpl	$32767, -16(%ebp)
	ja	.L1459
.L1461:
	.loc 1 3622 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	%ecx, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, 12(%ebp)
	jmp	.L1462
.L1459:
	.loc 1 3625 0
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 3626 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1463
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1463
	.loc 1 3627 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3626 0
	jmp	.L1462
.L1463:
	.loc 1 3629 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L1462:
	.loc 1 3632 0
	movl	8(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_move_insn@PLT
	.loc 1 3633 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE83:
	.size	mips_set_return_address, .-mips_set_return_address
	.section	.rodata
	.type	__FUNCTION__.18278, @object
	.size	__FUNCTION__.18278, 16
__FUNCTION__.18278:
	.string	"block_move_loop"
	.text
	.type	block_move_loop, @function
block_move_loop:
.LFB84:
	.loc 1 3669 0
	pushl	%ebp
.LCFI263:
	movl	%esp, %ebp
.LCFI264:
	pushl	%ebx
.LCFI265:
	subl	$84, %esp
.LCFI266:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3670 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	24(%ebp), %eax
	movl	%eax, (%esp)
	call	replace_equiv_address@PLT
	movl	%eax, -36(%ebp)
	.loc 1 3671 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	call	replace_equiv_address@PLT
	movl	%eax, -32(%ebp)
	.loc 1 3672 0
	movl	20(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -28(%ebp)
	.loc 1 3678 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1468
	movl	$64, -60(%ebp)
	jmp	.L1470
.L1468:
	movl	$32, -60(%ebp)
.L1470:
	movl	-60(%ebp), %eax
	cmpl	16(%ebp), %eax
	jbe	.L1471
	.loc 1 3679 0
	leal	__FUNCTION__.18278@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$3679, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1471:
	.loc 1 3681 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1473
	movl	$32, -56(%ebp)
	jmp	.L1475
.L1473:
	movl	$16, -56(%ebp)
.L1475:
	movl	16(%ebp), %eax
	movl	$0, %edx
	divl	-56(%ebp)
	movl	%edx, %eax
	movl	%eax, -12(%ebp)
	.loc 1 3682 0
	movl	-12(%ebp), %eax
	subl	%eax, 16(%ebp)
	.loc 1 3684 0
	call	gen_label_rtx@PLT
	movl	%eax, -24(%ebp)
	.loc 1 3685 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1476
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1476
	movl	$5, -52(%ebp)
	jmp	.L1479
.L1476:
	movl	$4, -52(%ebp)
.L1479:
	movl	-52(%ebp), %edx
	movl	%edx, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -20(%ebp)
	.loc 1 3686 0
	movl	16(%ebp), %eax
	movl	$0, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -16(%ebp)
	.loc 1 3688 0
	cmpl	$32767, 16(%ebp)
	jbe	.L1480
	.loc 1 3690 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1482
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1482
	.loc 1 3692 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_movdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3693 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3690 0
	jmp	.L1486
.L1482:
	.loc 1 3697 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_movsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3698 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	jmp	.L1486
.L1480:
	.loc 1 3703 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1487
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1487
	.loc 1 3704 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3703 0
	jmp	.L1486
.L1487:
	.loc 1 3706 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L1486:
	.loc 1 3709 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_label@PLT
	.loc 1 3711 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1490
	movl	$32, -48(%ebp)
	movl	$0, -44(%ebp)
	jmp	.L1492
.L1490:
	movl	$16, -48(%ebp)
	movl	$0, -44(%ebp)
.L1492:
	movl	-48(%ebp), %eax
	movl	-44(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -16(%ebp)
	.loc 1 3712 0
	movl	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_movstrsi_internal@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3714 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1493
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1493
	.loc 1 3716 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3717 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3718 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_cmpdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3714 0
	jmp	.L1496
.L1493:
	.loc 1 3722 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3723 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3724 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_cmpsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L1496:
	.loc 1 3727 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_bne@PLT
	movl	%eax, (%esp)
	call	emit_jump_insn@PLT
	.loc 1 3729 0
	cmpl	$0, -12(%ebp)
	je	.L1499
	.loc 1 3730 0
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, %edx
	movl	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_movstrsi_internal@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L1499:
	.loc 1 3732 0
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE84:
	.size	block_move_loop, .-block_move_loop
	.section	.rodata
.LC120:
	.string	"memcpy"
	.text
	.type	block_move_call, @function
block_move_call:
.LFB85:
	.loc 1 3741 0
	pushl	%ebp
.LCFI267:
	movl	%esp, %ebp
.LCFI268:
	pushl	%ebx
.LCFI269:
	subl	$84, %esp
.LCFI270:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3744 0
	movl	16(%ebp), %eax
	movzbl	2(%eax), %eax
	testb	%al, %al
	je	.L1501
	movl	16(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -36(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1503
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1503
	movl	$5, -32(%ebp)
	jmp	.L1506
.L1503:
	movl	$4, -32(%ebp)
.L1506:
	movl	-32(%ebp), %eax
	cmpl	%eax, -36(%ebp)
	je	.L1501
	.loc 1 3746 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1508
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1508
	movl	$5, -28(%ebp)
	jmp	.L1511
.L1508:
	movl	$4, -28(%ebp)
.L1511:
	movl	$1, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	convert_to_mode@PLT
	movl	%eax, 16(%ebp)
.L1501:
	.loc 1 3749 0
	movl	sizetype_tab@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	movl	sizetype_tab@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	9(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	movzbl	%al, %ecx
	movl	sizetype_tab@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %edx
	movl	%ecx, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	convert_to_mode@PLT
	movl	%eax, -20(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1512
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1512
	movl	$5, -16(%ebp)
	jmp	.L1515
.L1512:
	movl	$4, -16(%ebp)
.L1515:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1516
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1516
	movl	$5, -12(%ebp)
	jmp	.L1519
.L1516:
	movl	$4, -12(%ebp)
.L1519:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1520
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1520
	movl	$5, -8(%ebp)
	jmp	.L1523
.L1520:
	movl	$4, -8(%ebp)
.L1523:
	leal	.LC120@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$78, (%esp)
	call	gen_rtx_fmt_s@PLT
	movl	%eax, %edx
	movl	-24(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	$3, 12(%esp)
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	emit_library_call@PLT
	.loc 1 3761 0
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE85:
	.size	block_move_call, .-block_move_call
.globl __umoddi3
.globl expand_block_move
	.type	expand_block_move, @function
expand_block_move:
.LFB86:
	.loc 1 3773 0
	pushl	%ebp
.LCFI271:
	movl	%esp, %ebp
.LCFI272:
	pushl	%edi
.LCFI273:
	pushl	%esi
.LCFI274:
	pushl	%ebx
.LCFI275:
	subl	$172, %esp
.LCFI276:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3774 0
	movl	8(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 1 3775 0
	movl	8(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 1 3776 0
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -56(%ebp)
	.loc 1 3777 0
	cmpl	$0, -56(%ebp)
	je	.L1526
	movl	-64(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -160(%ebp)
	movl	%edx, -156(%ebp)
	jmp	.L1528
.L1526:
	movl	$0, -160(%ebp)
	movl	$0, -156(%ebp)
.L1528:
	movl	-160(%ebp), %eax
	movl	-156(%ebp), %edx
	movl	%eax, -72(%ebp)
	movl	%edx, -68(%ebp)
	.loc 1 3778 0
	movl	-60(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 1 3779 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 3780 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 3784 0
	cmpl	$0, -56(%ebp)
	je	.L1529
	movl	-72(%ebp), %eax
	orl	-68(%ebp), %eax
	testl	%eax, %eax
	je	.L1595
.L1529:
	.loc 1 3787 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1532
	movl	$8, -152(%ebp)
	jmp	.L1534
.L1532:
	movl	$4, -152(%ebp)
.L1534:
	movl	-152(%ebp), %edx
	cmpl	-52(%ebp), %edx
	jae	.L1535
	.loc 1 3788 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1537
	movl	$8, -148(%ebp)
	jmp	.L1539
.L1537:
	movl	$4, -148(%ebp)
.L1539:
	movl	-148(%ebp), %esi
	movl	%esi, -52(%ebp)
.L1535:
	.loc 1 3791 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	copy_addr_to_reg@PLT
	movl	%eax, -36(%ebp)
	.loc 1 3792 0
	movl	-48(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	copy_addr_to_reg@PLT
	movl	%eax, -40(%ebp)
	.loc 1 3794 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L1540
	.loc 1 3795 0
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	block_move_call
	jmp	.L1595
.L1540:
	.loc 1 3797 0
	cmpl	$0, -56(%ebp)
	je	.L1542
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1544
	movl	$64, -144(%ebp)
	movl	$0, -140(%ebp)
	jmp	.L1546
.L1544:
	movl	$32, -144(%ebp)
	movl	$0, -140(%ebp)
.L1546:
	movl	-140(%ebp), %edi
	cmpl	-68(%ebp), %edi
	jb	.L1542
	movl	-140(%ebp), %eax
	cmpl	-68(%ebp), %eax
	ja	.L1548
	movl	-144(%ebp), %edx
	cmpl	-72(%ebp), %edx
	jb	.L1542
.L1548:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1549
	movl	$8, -136(%ebp)
	jmp	.L1551
.L1549:
	movl	$4, -136(%ebp)
.L1551:
	movl	-136(%ebp), %esi
	cmpl	-52(%ebp), %esi
	jne	.L1542
	.loc 1 3799 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1553
	movl	$64, -132(%ebp)
	jmp	.L1555
.L1553:
	movl	$32, -132(%ebp)
.L1555:
	movl	-132(%ebp), %eax
	imull	-52(%ebp), %eax
	movl	$0, 20(%esp)
	movl	%eax, 16(%esp)
	movl	-72(%ebp), %eax
	movl	-68(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	move_by_pieces@PLT
	.loc 1 3797 0
	jmp	.L1595
.L1542:
	.loc 1 3801 0
	cmpl	$0, -56(%ebp)
	je	.L1556
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1558
	movl	$64, -128(%ebp)
	movl	$0, -124(%ebp)
	jmp	.L1560
.L1558:
	movl	$32, -128(%ebp)
	movl	$0, -124(%ebp)
.L1560:
	movl	-124(%ebp), %edi
	cmpl	-68(%ebp), %edi
	jb	.L1556
	movl	-124(%ebp), %eax
	cmpl	-68(%ebp), %eax
	ja	.L1562
	movl	-128(%ebp), %edx
	cmpl	-72(%ebp), %edx
	jb	.L1556
.L1562:
	.loc 1 3802 0
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	replace_equiv_address@PLT
	movl	%eax, %esi
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	replace_equiv_address@PLT
	movl	%eax, %edx
	movl	-60(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%edx, (%esp)
	call	gen_movstrsi_internal@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3801 0
	jmp	.L1595
.L1556:
	.loc 1 3808 0
	cmpl	$0, -56(%ebp)
	je	.L1563
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1565
	movl	$8, -120(%ebp)
	jmp	.L1567
.L1565:
	movl	$4, -120(%ebp)
.L1567:
	movl	-120(%ebp), %esi
	cmpl	-52(%ebp), %esi
	ja	.L1563
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1563
	.loc 1 3809 0
	movl	-52(%ebp), %edx
	movl	-72(%ebp), %ecx
	movl	-48(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	block_move_loop
	.loc 1 3808 0
	jmp	.L1595
.L1563:
	.loc 1 3811 0
	cmpl	$0, -56(%ebp)
	je	.L1570
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1570
.LBB35:
	.loc 1 3817 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1573
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1573
	movl	$5, -116(%ebp)
	jmp	.L1576
.L1573:
	movl	$4, -116(%ebp)
.L1576:
	movl	-116(%ebp), %edi
	movl	%edi, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -32(%ebp)
	.loc 1 3818 0
	call	gen_label_rtx@PLT
	movl	%eax, -28(%ebp)
	.loc 1 3819 0
	call	gen_label_rtx@PLT
	movl	%eax, -24(%ebp)
	.loc 1 3820 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1577
	movl	$32, -112(%ebp)
	movl	$0, -108(%ebp)
	jmp	.L1579
.L1577:
	movl	$16, -112(%ebp)
	movl	$0, -108(%ebp)
.L1579:
	movl	-72(%ebp), %eax
	movl	-68(%ebp), %edx
	movl	-112(%ebp), %esi
	movl	-108(%ebp), %edi
	movl	%esi, 8(%esp)
	movl	%edi, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__umoddi3@PLT
	movl	%eax, -20(%ebp)
	.loc 1 3822 0
	movl	-20(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	subl	%eax, -72(%ebp)
	sbbl	%edx, -68(%ebp)
	.loc 1 3824 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1580
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1580
	.loc 1 3826 0
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_iordi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3827 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1583
	movl	$7, -104(%ebp)
	movl	$0, -100(%ebp)
	jmp	.L1585
.L1583:
	movl	$3, -104(%ebp)
	movl	$0, -100(%ebp)
.L1585:
	movl	-104(%ebp), %eax
	movl	-100(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_anddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3828 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_cmpdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3824 0
	jmp	.L1586
.L1580:
	.loc 1 3832 0
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_iorsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3833 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1587
	movl	$7, -96(%ebp)
	movl	$0, -92(%ebp)
	jmp	.L1589
.L1587:
	movl	$3, -96(%ebp)
	movl	$0, -92(%ebp)
.L1589:
	movl	-96(%ebp), %esi
	movl	-92(%ebp), %edi
	movl	%esi, 4(%esp)
	movl	%edi, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_andsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3834 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_cmpsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L1586:
	.loc 1 3837 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_beq@PLT
	movl	%eax, (%esp)
	call	emit_jump_insn@PLT
	.loc 1 3840 0
	movl	-72(%ebp), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	$1, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	block_move_loop
	.loc 1 3841 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_jump@PLT
	movl	%eax, (%esp)
	call	emit_jump_insn@PLT
	.loc 1 3842 0
	call	emit_barrier@PLT
	.loc 1 3845 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_label@PLT
	.loc 1 3846 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1590
	movl	$8, -88(%ebp)
	jmp	.L1592
.L1590:
	movl	$4, -88(%ebp)
.L1592:
	movl	-72(%ebp), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-88(%ebp), %edi
	movl	%edi, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	block_move_loop
	.loc 1 3848 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_label@PLT
	.loc 1 3851 0
	cmpl	$0, -20(%ebp)
	je	.L1595
	.loc 1 3852 0
	movl	-52(%ebp), %eax
	movl	$0, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, %edi
	movl	-20(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -84(%ebp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	replace_equiv_address@PLT
	movl	%eax, %esi
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	replace_equiv_address@PLT
	movl	%edi, 12(%esp)
	movl	-84(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	gen_movstrsi_internal@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 3811 0
	jmp	.L1595
.L1570:
.LBE35:
	.loc 1 3861 0
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	block_move_call
.L1595:
	.loc 1 3862 0
	addl	$172, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE86:
	.size	expand_block_move, .-expand_block_move
	.section	.rodata
	.type	__FUNCTION__.18642, @object
	.size	__FUNCTION__.18642, 18
__FUNCTION__.18642:
	.string	"output_block_move"
.LC121:
	.string	"dla\t%0,%1"
.LC122:
	.string	"daddiu\t%0,%1,%%lo(%2)"
.LC123:
	.string	"addiu\t%0,%1,%%lo(%2)"
	.align 4
.LC124:
	.string	"cannot do block move, not enough scratch registers"
.LC125:
	.string	"ld\t%0,%1%#"
.LC126:
	.string	"sd\t%0,%1"
.LC127:
	.string	"ldl\t%0,%1\n\tldr\t%0,%2"
.LC128:
	.string	"ldl\t%0,%1\n\tldr\t%0,%2%#"
.LC129:
	.string	"sdl\t%0,%1\n\tsdr\t%0,%2"
.LC130:
	.string	"sdr\t%0,%2"
.LC131:
	.string	"sdl\t%0,%1"
.LC132:
	.string	"ldl\t%0,%2\n\tldr\t%0,%1"
.LC133:
	.string	"ldl\t%0,%2\n\tldr\t%0,%1%#"
.LC134:
	.string	"sdl\t%0,%2\n\tsdr\t%0,%1"
.LC135:
	.string	"sdr\t%0,%1"
.LC136:
	.string	"sdl\t%0,%2"
.LC137:
	.string	"lw\t%0,%1%#"
.LC138:
	.string	"sw\t%0,%1"
.LC139:
	.string	"lwl\t%0,%1\n\tlwr\t%0,%2"
.LC140:
	.string	"lwl\t%0,%1\n\tlwr\t%0,%2%#"
.LC141:
	.string	"swl\t%0,%1\n\tswr\t%0,%2"
.LC142:
	.string	"swr\t%0,%2"
.LC143:
	.string	"swl\t%0,%1"
.LC144:
	.string	"lwl\t%0,%2\n\tlwr\t%0,%1"
.LC145:
	.string	"lwl\t%0,%2\n\tlwr\t%0,%1%#"
.LC146:
	.string	"swl\t%0,%2\n\tswr\t%0,%1"
.LC147:
	.string	"swr\t%0,%1"
.LC148:
	.string	"swl\t%0,%2"
.LC149:
	.string	"lh\t%0,%1%#"
.LC150:
	.string	"sh\t%0,%1"
.LC151:
	.string	"lb\t%0,%1%#"
.LC152:
	.string	"sb\t%0,%1"
	.text
.globl output_block_move
	.type	output_block_move, @function
output_block_move:
.LFB87:
	.loc 1 3886 0
	pushl	%ebp
.LCFI277:
	movl	%esp, %ebp
.LCFI278:
	pushl	%esi
.LCFI279:
	pushl	%ebx
.LCFI280:
	subl	$272, %esp
.LCFI281:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3887 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 1 3888 0
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 1 3889 0
	movl	12(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -72(%ebp)
	movl	%edx, -68(%ebp)
	.loc 1 3890 0
	movl	12(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 3891 0
	movl	$0, -52(%ebp)
	.loc 1 3892 0
	movl	$0, -48(%ebp)
	.loc 1 3893 0
	movl	$0, -44(%ebp)
	.loc 1 3894 0
	movl	16(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -40(%ebp)
	.loc 1 3895 0
	movl	$4, -36(%ebp)
	.loc 1 3912 0
	movl	$4, -32(%ebp)
	jmp	.L1597
.L1598:
	.loc 1 3913 0
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	jne	.L1599
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %edx
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	jne	.L1599
	.loc 1 3915 0
	movl	-36(%ebp), %edx
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -112(%ebp,%edx,4)
	addl	$1, -36(%ebp)
.L1599:
	.loc 1 3912 0
	addl	$1, -32(%ebp)
.L1597:
	movl	-32(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	.L1602
	cmpl	$9, -36(%ebp)
	jle	.L1598
.L1602:
	.loc 1 3917 0
	movl	-36(%ebp), %eax
	cmpl	-40(%ebp), %eax
	jge	.L1604
	.loc 1 3919 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -112(%ebp)
	.loc 1 3920 0
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	%eax, -108(%ebp)
	.loc 1 3921 0
	movl	12(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %eax
	movl	%eax, -104(%ebp)
	.loc 1 3922 0
	movl	12(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	movl	%eax, -100(%ebp)
	.loc 1 3923 0
	movl	-36(%ebp), %edx
	subl	$4, %edx
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	output_block_move@PLT
	movl	%eax, -252(%ebp)
	jmp	.L1606
.L1604:
	.loc 1 3933 0
	cmpl	$2, 16(%ebp)
	jle	.L1607
	movl	-56(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, -248(%ebp)
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%edx, -244(%ebp)
	movl	-244(%ebp), %eax
	cmpl	-68(%ebp), %eax
	jl	.L1609
	movl	-244(%ebp), %edx
	cmpl	-68(%ebp), %edx
	jg	.L1611
	movl	-248(%ebp), %eax
	cmpl	-72(%ebp), %eax
	jb	.L1609
.L1611:
	cmpl	$0, 20(%ebp)
	jne	.L1609
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	je	.L1609
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L1609
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L1607
.L1609:
	.loc 1 3938 0
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L1615
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L1615
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L1615
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	je	.L1615
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L1615
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L1615
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$66, %ax
	je	.L1615
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$150, %ax
	jne	.L1623
.L1615:
	.loc 1 3940 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1624
	.loc 1 3941 0
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1624:
	.loc 1 3943 0
	movl	16(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
	subl	$1, 16(%ebp)
	.loc 1 3944 0
	cmpl	$2, 20(%ebp)
	je	.L1623
	.loc 1 3946 0
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	%eax, -108(%ebp)
	.loc 1 3947 0
	movl	-60(%ebp), %eax
	movl	%eax, -112(%ebp)
	.loc 1 3948 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1627
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1627
	.loc 1 3949 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC121@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
	.loc 1 3948 0
	jmp	.L1623
.L1627:
	.loc 1 3951 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC112@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
.L1623:
	.loc 1 3955 0
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L1630
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L1630
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L1630
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	je	.L1630
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L1630
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L1630
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$66, %ax
	je	.L1630
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$150, %ax
	jne	.L1607
.L1630:
	.loc 1 3957 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1638
	.loc 1 3958 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1638:
	.loc 1 3960 0
	movl	16(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	subl	$1, 16(%ebp)
	.loc 1 3961 0
	cmpl	$2, 20(%ebp)
	je	.L1607
	.loc 1 3963 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -108(%ebp)
	.loc 1 3964 0
	movl	-64(%ebp), %eax
	movl	%eax, -112(%ebp)
	.loc 1 3965 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1641
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1641
	.loc 1 3966 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC121@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
	.loc 1 3965 0
	jmp	.L1607
.L1641:
	.loc 1 3968 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC112@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
.L1607:
	.loc 1 3979 0
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$145, %ax
	jne	.L1644
	.loc 1 3981 0
	movl	16(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
	subl	$1, 16(%ebp)
	.loc 1 3982 0
	cmpl	$2, 20(%ebp)
	je	.L1644
	.loc 1 3984 0
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, -104(%ebp)
	.loc 1 3985 0
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -108(%ebp)
	.loc 1 3986 0
	movl	-60(%ebp), %eax
	movl	%eax, -112(%ebp)
	.loc 1 3987 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1647
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1647
	.loc 1 3988 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC122@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
	.loc 1 3987 0
	jmp	.L1644
.L1647:
	.loc 1 3990 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC123@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
.L1644:
	.loc 1 3994 0
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$145, %ax
	jne	.L1650
	.loc 1 3996 0
	movl	16(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	subl	$1, 16(%ebp)
	.loc 1 3997 0
	cmpl	$2, 20(%ebp)
	je	.L1650
	.loc 1 3999 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, -104(%ebp)
	.loc 1 4000 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -108(%ebp)
	.loc 1 4001 0
	movl	-64(%ebp), %eax
	movl	%eax, -112(%ebp)
	.loc 1 4002 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L1653
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1653
	.loc 1 4003 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC122@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
	.loc 1 4002 0
	jmp	.L1650
.L1653:
	.loc 1 4005 0
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC123@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
.L1650:
	.loc 1 4009 0
	cmpl	$4, 16(%ebp)
	jle	.L1656
	.loc 1 4010 0
	movl	$4, 16(%ebp)
	jmp	.L1751
.L1656:
	.loc 1 4012 0
	cmpl	$0, 16(%ebp)
	jg	.L1751
	.loc 1 4013 0
	leal	.LC124@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L1661:
	.loc 1 4018 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-196(%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 4020 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1662
	cmpl	$0, -68(%ebp)
	js	.L1662
	cmpl	$0, -68(%ebp)
	jg	.L1665
	cmpl	$7, -72(%ebp)
	jbe	.L1662
.L1665:
	cmpl	$7, -56(%ebp)
	jle	.L1662
	.loc 1 4022 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC109@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4023 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC125@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4024 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC126@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4025 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC126@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4026 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$204, %eax
	movl	$0, (%eax)
	.loc 1 4027 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	$5, (%eax)
	.loc 1 4028 0
	addl	$8, -48(%ebp)
	.loc 1 4029 0
	addl	$-8, -72(%ebp)
	adcl	$-1, -68(%ebp)
	.loc 1 4020 0
	jmp	.L1667
.L1662:
	.loc 1 4033 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1668
	cmpl	$0, -68(%ebp)
	js	.L1668
	cmpl	$0, -68(%ebp)
	jg	.L1671
	cmpl	$7, -72(%ebp)
	jbe	.L1668
.L1671:
	movl	mips_arch@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$18, %eax
	je	.L1668
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1668
	.loc 1 4037 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L1674
	.loc 1 4039 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC127@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4040 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC128@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4041 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC129@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4042 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC130@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4043 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-204(%eax), %edx
	leal	.LC131@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	jmp	.L1676
.L1674:
	.loc 1 4047 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC132@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4048 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC133@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4049 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC134@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4050 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC135@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4051 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-204(%eax), %edx
	leal	.LC136@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
.L1676:
	.loc 1 4054 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	$5, (%eax)
	.loc 1 4055 0
	addl	$8, -48(%ebp)
	.loc 1 4056 0
	addl	$-8, -72(%ebp)
	adcl	$-1, -68(%ebp)
	.loc 1 4057 0
	movl	$1, -44(%ebp)
	.loc 1 4033 0
	jmp	.L1667
.L1668:
	.loc 1 4060 0
	cmpl	$0, -68(%ebp)
	js	.L1677
	cmpl	$0, -68(%ebp)
	jg	.L1679
	cmpl	$3, -72(%ebp)
	jbe	.L1677
.L1679:
	cmpl	$3, -56(%ebp)
	jle	.L1677
	.loc 1 4062 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC51@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4063 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC137@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4064 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC138@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4065 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC138@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4066 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$204, %eax
	movl	$0, (%eax)
	.loc 1 4067 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	$4, (%eax)
	.loc 1 4068 0
	addl	$4, -48(%ebp)
	.loc 1 4069 0
	addl	$-4, -72(%ebp)
	adcl	$-1, -68(%ebp)
	.loc 1 4060 0
	jmp	.L1667
.L1677:
	.loc 1 4072 0
	cmpl	$0, -68(%ebp)
	js	.L1681
	cmpl	$0, -68(%ebp)
	jg	.L1683
	cmpl	$3, -72(%ebp)
	jbe	.L1681
.L1683:
	movl	mips_arch@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$18, %eax
	je	.L1681
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L1681
	.loc 1 4076 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L1686
	.loc 1 4078 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC139@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4079 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC140@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4080 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC141@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4081 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC142@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4082 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-204(%eax), %edx
	leal	.LC143@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	jmp	.L1688
.L1686:
	.loc 1 4086 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC144@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4087 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC145@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4088 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC146@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4089 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC147@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4090 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-204(%eax), %edx
	leal	.LC148@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
.L1688:
	.loc 1 4093 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	$4, (%eax)
	.loc 1 4094 0
	addl	$4, -48(%ebp)
	.loc 1 4095 0
	addl	$-4, -72(%ebp)
	adcl	$-1, -68(%ebp)
	.loc 1 4096 0
	movl	$1, -44(%ebp)
	.loc 1 4072 0
	jmp	.L1667
.L1681:
	.loc 1 4099 0
	cmpl	$0, -68(%ebp)
	js	.L1689
	cmpl	$0, -68(%ebp)
	jg	.L1691
	cmpl	$1, -72(%ebp)
	jbe	.L1689
.L1691:
	cmpl	$1, -56(%ebp)
	jle	.L1689
	.loc 1 4101 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC54@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4102 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC149@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4103 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC150@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4104 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC150@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4105 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$204, %eax
	movl	$0, (%eax)
	.loc 1 4106 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	$3, (%eax)
	.loc 1 4107 0
	addl	$2, -48(%ebp)
	.loc 1 4108 0
	addl	$-2, -72(%ebp)
	adcl	$-1, -68(%ebp)
	.loc 1 4099 0
	jmp	.L1667
.L1689:
	.loc 1 4112 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-216(%eax), %edx
	leal	.LC56@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4113 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-212(%eax), %edx
	leal	.LC151@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4114 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-208(%eax), %edx
	leal	.LC152@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4115 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	leal	-200(%eax), %edx
	leal	.LC152@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 4116 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$204, %eax
	movl	$0, (%eax)
	.loc 1 4117 0
	movl	-52(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	$2, (%eax)
	.loc 1 4118 0
	addl	$1, -48(%ebp)
	.loc 1 4119 0
	addl	$-1, -72(%ebp)
	adcl	$-1, -68(%ebp)
.L1667:
	.loc 1 4122 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1693
	cmpl	$2, 20(%ebp)
	je	.L1693
	.loc 1 4124 0
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 4125 0
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 4127 0
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L1696
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L1696
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L1696
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	je	.L1696
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L1696
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L1696
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$66, %ax
	je	.L1696
	movl	-60(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$150, %ax
	jne	.L1704
.L1696:
	.loc 1 4128 0
	movl	$1, 4(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1704:
	.loc 1 4130 0
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L1705
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L1705
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L1705
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	je	.L1705
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L1705
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L1705
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$66, %ax
	je	.L1705
	movl	-64(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$150, %ax
	jne	.L1693
.L1705:
	.loc 1 4131 0
	movl	$1, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_count_memory_refs@PLT
.L1693:
	.loc 1 4137 0
	addl	$1, -52(%ebp)
	movl	-52(%ebp), %eax
	cmpl	16(%ebp), %eax
	je	.L1713
	movl	-72(%ebp), %eax
	orl	-68(%ebp), %eax
	testl	%eax, %eax
	jne	.L1660
.L1713:
	.loc 1 4140 0
	cmpl	$1, -52(%ebp)
	jne	.L1715
	.loc 1 4142 0
	movl	-220(%ebp), %eax
	movl	%eax, -224(%ebp)
	.loc 1 4143 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L1715
	cmpl	$2, 20(%ebp)
	je	.L1715
	.loc 1 4144 0
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	-1(%eax), %edx
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L1715:
	.loc 1 4147 0
	cmpl	$2, 20(%ebp)
	je	.L1719
	.loc 1 4149 0
	movl	$0, -32(%ebp)
	jmp	.L1721
.L1722:
.LBB36:
	.loc 1 4153 0
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$16, %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L1723
	.loc 1 4154 0
	leal	__FUNCTION__.18642@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$4154, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1723:
	.loc 1 4156 0
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$16, %eax
	movl	(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %ecx
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	cmpl	%eax, %ecx
	je	.L1725
	.loc 1 4157 0
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	leal	16(%eax), %esi
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$16, %eax
	movl	(%eax), %eax
	movl	4(%eax), %ecx
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, (%esi)
.L1725:
	.loc 1 4160 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$196, %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 4161 0
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$16, %eax
	movl	(%eax), %eax
	movl	%eax, -112(%ebp)
	.loc 1 4162 0
	movl	-28(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%eax, -108(%ebp)
	.loc 1 4165 0
	cmpl	$0, -44(%ebp)
	je	.L1727
.LBB37:
	.loc 1 4168 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 1 4170 0
	movl	-28(%ebp), %eax
	addl	-24(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%eax, -104(%ebp)
.L1727:
.LBE37:
	.loc 1 4176 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$216, %eax
	movl	(%eax), %edx
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	output_asm_insn@PLT
.LBE36:
	.loc 1 4149 0
	addl	$1, -32(%ebp)
.L1721:
	movl	-32(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jl	.L1722
.L1719:
	.loc 1 4180 0
	movl	$0, -32(%ebp)
	jmp	.L1729
.L1730:
.LBB38:
	.loc 1 4182 0
	movl	-52(%ebp), %eax
	subl	$1, %eax
	cmpl	-32(%ebp), %eax
	jne	.L1731
	movl	-72(%ebp), %eax
	orl	-68(%ebp), %eax
	testl	%eax, %eax
	jne	.L1731
	movl	$1, -236(%ebp)
	jmp	.L1734
.L1731:
	movl	$0, -236(%ebp)
.L1734:
	movl	-236(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 4183 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$196, %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 4185 0
	movl	-32(%ebp), %eax
	sall	$2, %eax
	addl	12(%ebp), %eax
	addl	$16, %eax
	movl	(%eax), %eax
	movl	%eax, -112(%ebp)
	.loc 1 4186 0
	movl	-16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%eax, -108(%ebp)
	.loc 1 4190 0
	cmpl	$0, -44(%ebp)
	je	.L1735
.LBB39:
	.loc 1 4192 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
	.loc 1 4193 0
	movl	-16(%ebp), %eax
	addl	-12(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, %ecx
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$192, %eax
	movl	(%eax), %eax
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%eax, -104(%ebp)
.L1735:
.LBE39:
	.loc 1 4199 0
	cmpl	$0, 20(%ebp)
	jne	.L1737
	.loc 1 4200 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$208, %eax
	movl	(%eax), %edx
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	output_asm_insn@PLT
	jmp	.L1739
.L1737:
	.loc 1 4202 0
	cmpl	$1, 20(%ebp)
	jne	.L1740
	.loc 1 4204 0
	cmpl	$0, -20(%ebp)
	jne	.L1742
	.loc 1 4205 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$208, %eax
	movl	(%eax), %edx
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	output_asm_insn@PLT
	jmp	.L1739
.L1742:
	.loc 1 4207 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$204, %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1739
	.loc 1 4208 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$204, %eax
	movl	(%eax), %edx
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	output_asm_insn@PLT
	jmp	.L1739
.L1740:
	.loc 1 4211 0
	cmpl	$0, -20(%ebp)
	je	.L1739
	.loc 1 4212 0
	movl	-32(%ebp), %eax
	leal	0(,%eax,4), %edx
	leal	0(,%edx,8), %eax
	subl	%edx, %eax
	leal	-8(%ebp), %edx
	addl	%edx, %eax
	subl	$200, %eax
	movl	(%eax), %edx
	leal	-112(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	output_asm_insn@PLT
.L1739:
.LBE38:
	.loc 1 4180 0
	addl	$1, -32(%ebp)
.L1729:
	movl	-32(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jl	.L1730
	.loc 1 4215 0
	movl	$0, -52(%ebp)
	.loc 1 4216 0
	movl	$0, -44(%ebp)
.L1660:
.L1751:
	.loc 1 4016 0
	cmpl	$0, -68(%ebp)
	jg	.L1661
	cmpl	$0, -68(%ebp)
	js	.L1749
	cmpl	$0, -72(%ebp)
	ja	.L1661
.L1749:
	.loc 1 4220 0
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -252(%ebp)
.L1606:
	movl	-252(%ebp), %eax
	.loc 1 4221 0
	addl	$272, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE87:
	.size	output_block_move, .-output_block_move
	.local	zero_cum.19121
	.comm	zero_cum.19121,64,32
.globl init_cumulative_args
	.type	init_cumulative_args, @function
init_cumulative_args:
.LFB88:
	.loc 1 4232 0
	pushl	%ebp
.LCFI282:
	movl	%esp, %ebp
.LCFI283:
	subl	$24, %esp
.LCFI284:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 4253 0
	movl	8(%ebp), %eax
	movl	zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, (%eax)
	movl	4+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 4(%eax)
	movl	8+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 8(%eax)
	movl	12+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 12(%eax)
	movl	16+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 16(%eax)
	movl	20+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 20(%eax)
	movl	24+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 24(%eax)
	movl	28+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 28(%eax)
	movl	32+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 32(%eax)
	movl	36+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 36(%eax)
	movl	40+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 40(%eax)
	movl	44+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 44(%eax)
	movl	48+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 48(%eax)
	movl	52+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 52(%eax)
	movl	56+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 56(%eax)
	movl	60+zero_cum.19121@GOTOFF(%ecx), %edx
	movl	%edx, 60(%eax)
	.loc 1 4254 0
	cmpl	$0, 12(%ebp)
	je	.L1753
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L1753
	movl	$1, -24(%ebp)
	jmp	.L1756
.L1753:
	movl	$0, -24(%ebp)
.L1756:
	movl	8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 24(%eax)
	.loc 1 4261 0
	cmpl	$0, 12(%ebp)
	je	.L1757
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L1759
.L1757:
	movl	$0, -20(%ebp)
.L1759:
	movl	-20(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 4262 0
	jmp	.L1760
.L1761:
	.loc 1 4264 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 4265 0
	cmpl	$0, -4(%ebp)
	jne	.L1762
	movl	-8(%ebp), %eax
	movl	20(%eax), %edx
	movl	global_trees@GOT(%ecx), %eax
	movl	108(%eax), %eax
	cmpl	%eax, %edx
	je	.L1762
	.loc 1 4266 0
	movl	8(%ebp), %eax
	movl	$1, (%eax)
.L1762:
	.loc 1 4262 0
	movl	-4(%ebp), %eax
	movl	%eax, -8(%ebp)
.L1760:
	cmpl	$0, -8(%ebp)
	jne	.L1761
	.loc 1 4268 0
	leave
	ret
.LFE88:
	.size	init_cumulative_args, .-init_cumulative_args
	.type	mips_arg_info, @function
mips_arg_info:
.LFB89:
	.loc 1 4277 0
	pushl	%ebp
.LCFI285:
	movl	%esp, %ebp
.LCFI286:
	pushl	%ebx
.LCFI287:
	subl	$116, %esp
.LCFI288:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4281 0
	cmpl	$0, 16(%ebp)
	je	.L1768
	movl	16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L1770
	movl	16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	je	.L1770
	movl	16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$23, %al
	jne	.L1768
.L1770:
	movl	$1, -112(%ebp)
	jmp	.L1773
.L1768:
	movl	$0, -112(%ebp)
.L1773:
	movzbl	-112(%ebp), %edx
	movl	24(%ebp), %eax
	movb	%dl, (%eax)
	.loc 1 4289 0
	movl	24(%ebp), %eax
	movb	$0, 1(%eax)
	.loc 1 4290 0
	movl	12(%ebp), %edx
	movl	mode_class@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	$2, %eax
	jne	.L1774
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -108(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L1776
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L1778
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L1780
.L1778:
	movl	$16, -100(%ebp)
	jmp	.L1781
.L1780:
	movl	$8, -100(%ebp)
.L1781:
	movl	-100(%ebp), %eax
	movl	%eax, -104(%ebp)
	jmp	.L1782
.L1776:
	movl	$0, -104(%ebp)
.L1782:
	movl	-104(%ebp), %edx
	cmpl	%edx, -108(%ebp)
	jg	.L1774
	.loc 1 4293 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -96(%ebp)
	cmpl	$3, -96(%ebp)
	je	.L1786
	cmpl	$3, -96(%ebp)
	jg	.L1788
	cmpl	$0, -96(%ebp)
	je	.L1785
	jmp	.L1784
.L1788:
	cmpl	$4, -96(%ebp)
	je	.L1785
	cmpl	$5, -96(%ebp)
	je	.L1787
	jmp	.L1784
.L1785:
	.loc 1 4297 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L1789
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$1, %eax
	ja	.L1789
	movl	$1, -92(%ebp)
	jmp	.L1792
.L1789:
	movl	$0, -92(%ebp)
.L1792:
	movzbl	-92(%ebp), %edx
	movl	24(%ebp), %eax
	movb	%dl, 1(%eax)
	.loc 1 4298 0
	jmp	.L1774
.L1786:
	.loc 1 4301 0
	movl	24(%ebp), %eax
	movb	$1, 1(%eax)
	.loc 1 4302 0
	jmp	.L1774
.L1787:
	.loc 1 4308 0
	cmpl	$0, 20(%ebp)
	je	.L1793
	cmpl	$15, 12(%ebp)
	jne	.L1795
	movl	24(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L1793
.L1795:
	movl	$1, -88(%ebp)
	jmp	.L1797
.L1793:
	movl	$0, -88(%ebp)
.L1797:
	movzbl	-88(%ebp), %edx
	movl	24(%ebp), %eax
	movb	%dl, 1(%eax)
	.loc 1 4309 0
	jmp	.L1774
.L1784:
	.loc 1 4312 0
	cmpl	$0, 20(%ebp)
	setne	%dl
	movl	24(%ebp), %eax
	movb	%dl, 1(%eax)
.L1774:
	.loc 1 4319 0
	movb	$0, -5(%ebp)
	.loc 1 4320 0
	movl	24(%ebp), %eax
	movzbl	1(%eax), %eax
	testb	%al, %al
	je	.L1798
	.loc 1 4326 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -80(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L1800
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L1802
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L1804
.L1802:
	movl	$1, -72(%ebp)
	jmp	.L1805
.L1804:
	movl	$2, -72(%ebp)
.L1805:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L1806
	movl	$8, -68(%ebp)
	jmp	.L1808
.L1806:
	movl	$4, -68(%ebp)
.L1808:
	movl	-72(%ebp), %ecx
	imull	-68(%ebp), %ecx
	movl	%ecx, -76(%ebp)
	jmp	.L1809
.L1800:
	movl	$0, -76(%ebp)
.L1809:
	movl	-76(%ebp), %eax
	cmpl	%eax, -80(%ebp)
	jg	.L1810
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L1812
	cmpl	$15, 12(%ebp)
	je	.L1810
.L1812:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L1814
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	jne	.L1814
.L1810:
	movl	$1, -84(%ebp)
	jmp	.L1816
.L1814:
	movl	$0, -84(%ebp)
.L1816:
	movzbl	-84(%ebp), %edx
	movb	%dl, -5(%ebp)
	jmp	.L1817
.L1798:
	.loc 1 4330 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1818
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L1818
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L1817
.L1818:
	.loc 1 4332 0
	movl	12(%ebp), %eax
	movl	mode_class@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	$1, %eax
	je	.L1821
	movl	12(%ebp), %eax
	movl	mode_class@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	$2, %eax
	jne	.L1823
.L1821:
	.loc 1 4334 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1824
	movl	$8, -60(%ebp)
	jmp	.L1826
.L1824:
	movl	$4, -60(%ebp)
.L1826:
	movl	-60(%ebp), %ecx
	cmpl	%ecx, -64(%ebp)
	setg	%al
	movb	%al, -5(%ebp)
	.loc 1 4332 0
	jmp	.L1817
.L1823:
	.loc 1 4336 0
	cmpl	$0, 16(%ebp)
	je	.L1817
	movl	16(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -56(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1828
	movl	$64, -52(%ebp)
	jmp	.L1830
.L1828:
	movl	$32, -52(%ebp)
.L1830:
	movl	-52(%ebp), %eax
	cmpl	%eax, -56(%ebp)
	jbe	.L1817
	.loc 1 4337 0
	movb	$1, -5(%ebp)
.L1817:
	.loc 1 4343 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L1832
	movl	24(%ebp), %eax
	movzbl	1(%eax), %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L1832
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L1835
.L1832:
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -48(%ebp)
.L1835:
	movl	24(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%edx, 12(%eax)
	.loc 1 4347 0
	cmpb	$0, -5(%ebp)
	je	.L1836
	.loc 1 4348 0
	movl	24(%ebp), %eax
	movl	12(%eax), %edx
	movl	24(%ebp), %eax
	movl	12(%eax), %eax
	andl	$1, %eax
	addl	%eax, %edx
	movl	24(%ebp), %eax
	movl	%edx, 12(%eax)
.L1836:
	.loc 1 4351 0
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	movl	24(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 4352 0
	cmpb	$0, -5(%ebp)
	je	.L1838
	.loc 1 4353 0
	movl	24(%ebp), %eax
	movl	20(%eax), %edx
	movl	24(%ebp), %eax
	movl	20(%eax), %eax
	andl	$1, %eax
	addl	%eax, %edx
	movl	24(%ebp), %eax
	movl	%edx, 20(%eax)
.L1838:
	.loc 1 4355 0
	cmpl	$52, 12(%ebp)
	jne	.L1840
	.loc 1 4356 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, %edx
	movl	24(%ebp), %eax
	movl	%edx, 4(%eax)
	jmp	.L1842
.L1840:
	.loc 1 4358 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %edx
	movl	24(%ebp), %eax
	movl	%edx, 4(%eax)
.L1842:
	.loc 1 4360 0
	movl	24(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -44(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1843
	movl	$8, -40(%ebp)
	jmp	.L1845
.L1843:
	movl	$4, -40(%ebp)
.L1845:
	movl	-44(%ebp), %eax
	addl	-40(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -36(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1846
	movl	$8, -32(%ebp)
	jmp	.L1848
.L1846:
	movl	$4, -32(%ebp)
.L1848:
	movl	-36(%ebp), %eax
	movl	$0, %edx
	divl	-32(%ebp)
	movl	%eax, -16(%ebp)
	.loc 1 4361 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1849
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L1851
.L1849:
	movl	$4, -28(%ebp)
	jmp	.L1852
.L1851:
	movl	$8, -28(%ebp)
.L1852:
	movl	24(%ebp), %eax
	movl	12(%eax), %eax
	movl	-28(%ebp), %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -12(%ebp)
	.loc 1 4364 0
	movl	-16(%ebp), %eax
	movl	%eax, -116(%ebp)
	movl	-12(%ebp), %edx
	movl	%edx, -24(%ebp)
	movl	-116(%ebp), %ecx
	cmpl	%ecx, -24(%ebp)
	jbe	.L1853
	movl	-116(%ebp), %eax
	movl	%eax, -24(%ebp)
.L1853:
	movl	24(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 1 4365 0
	movl	24(%ebp), %eax
	movl	8(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, %ecx
	subl	%edx, %ecx
	movl	%ecx, %edx
	movl	24(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 1 4366 0
	addl	$116, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE89:
	.size	mips_arg_info, .-mips_arg_info
.globl function_arg_advance
	.type	function_arg_advance, @function
function_arg_advance:
.LFB90:
	.loc 1 4377 0
	pushl	%ebp
.LCFI289:
	movl	%esp, %ebp
.LCFI290:
	pushl	%esi
.LCFI291:
	pushl	%ebx
.LCFI292:
	subl	$80, %esp
.LCFI293:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4380 0
	leal	-40(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_arg_info
	.loc 1 4397 0
	movzbl	-40(%ebp), %eax
	testb	%al, %al
	je	.L1856
	movl	-32(%ebp), %eax
	cmpl	$1, %eax
	jne	.L1856
	movl	-36(%ebp), %eax
	movl	%eax, -68(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1859
	movl	$8, -64(%ebp)
	jmp	.L1861
.L1859:
	movl	$4, -64(%ebp)
.L1861:
	movl	-64(%ebp), %edx
	cmpl	%edx, -68(%ebp)
	jae	.L1856
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L1856
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L1856
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	je	.L1856
.LBB40:
	.loc 1 4404 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1866
	movl	$64, -60(%ebp)
	jmp	.L1868
.L1866:
	movl	$32, -60(%ebp)
.L1868:
	movl	-36(%ebp), %eax
	sall	$3, %eax
	movl	-60(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	$0, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4405 0
	movl	-28(%ebp), %eax
	leal	4(%eax), %edx
	movl	word_mode@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -12(%ebp)
	.loc 1 4407 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1869
	.loc 1 4408 0
	movl	8(%ebp), %eax
	movl	28(%eax), %esi
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_ashldi3@PLT
	movl	44(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 32(%eax,%esi,4)
	leal	1(%esi), %edx
	movl	8(%ebp), %eax
	movl	%edx, 28(%eax)
	jmp	.L1856
.L1869:
	.loc 1 4410 0
	movl	8(%ebp), %eax
	movl	28(%eax), %esi
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_ashlsi3@PLT
	movl	44(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 32(%eax,%esi,4)
	leal	1(%esi), %edx
	movl	8(%ebp), %eax
	movl	%edx, 28(%eax)
.L1856:
.LBE40:
	.loc 1 4413 0
	movzbl	-39(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L1871
	.loc 1 4414 0
	movl	8(%ebp), %eax
	movl	$1, (%eax)
.L1871:
	.loc 1 4419 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$1, %eax
	ja	.L1873
	movzbl	-39(%ebp), %eax
	testb	%al, %al
	je	.L1873
	.loc 1 4420 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -56(%ebp)
	cmpl	$15, 12(%ebp)
	jne	.L1876
	movl	$1, -52(%ebp)
	jmp	.L1878
.L1876:
	movl	$2, -52(%ebp)
.L1878:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	addl	%eax, %eax
	subl	$2, %eax
	movl	%eax, %ecx
	movl	-52(%ebp), %eax
	sall	%cl, %eax
	movl	-56(%ebp), %edx
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 20(%eax)
.L1873:
	.loc 1 4422 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L1879
	movzbl	-39(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L1881
.L1879:
	.loc 1 4423 0
	movl	-28(%ebp), %edx
	movl	-32(%ebp), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 4422 0
	jmp	.L1882
.L1881:
	.loc 1 4424 0
	movl	-32(%ebp), %eax
	testl	%eax, %eax
	je	.L1882
	.loc 1 4425 0
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -48(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L1884
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L1886
.L1884:
	movl	$1, -44(%ebp)
	jmp	.L1887
.L1886:
	movl	$2, -44(%ebp)
.L1887:
	movl	-48(%ebp), %edx
	addl	-44(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%edx, 12(%eax)
.L1882:
	.loc 1 4427 0
	movl	-24(%ebp), %eax
	testl	%eax, %eax
	je	.L1888
	.loc 1 4428 0
	movl	-20(%ebp), %edx
	movl	-24(%ebp), %eax
	addl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 16(%eax)
.L1888:
	.loc 1 4430 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 4431 0
	addl	$80, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE90:
	.size	function_arg_advance, .-function_arg_advance
.globl function_arg
	.type	function_arg, @function
function_arg:
.LFB91:
	.loc 1 4442 0
	pushl	%ebp
.LCFI294:
	movl	%esp, %ebp
.LCFI295:
	pushl	%edi
.LCFI296:
	pushl	%esi
.LCFI297:
	pushl	%ebx
.LCFI298:
	subl	$172, %esp
.LCFI299:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4451 0
	cmpl	$0, 12(%ebp)
	jne	.L1892
	.loc 1 4453 0
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L1894
	.loc 1 4454 0
	movl	8(%ebp), %edx
	addl	$32, %edx
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtvec_v@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -132(%ebp)
	jmp	.L1896
.L1894:
	.loc 1 4458 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L1897
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L1897
	.loc 1 4459 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -132(%ebp)
	jmp	.L1896
.L1897:
	.loc 1 4462 0
	movl	$0, -132(%ebp)
	jmp	.L1896
.L1892:
	.loc 1 4465 0
	leal	-64(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_arg_info
	.loc 1 4468 0
	movl	-52(%ebp), %eax
	movl	%eax, -128(%ebp)
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1900
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L1902
.L1900:
	movl	$4, -124(%ebp)
	jmp	.L1903
.L1902:
	movl	$8, -124(%ebp)
.L1903:
	movl	-124(%ebp), %edx
	cmpl	%edx, -128(%ebp)
	jne	.L1904
	.loc 1 4469 0
	movl	$0, -132(%ebp)
	jmp	.L1896
.L1904:
	.loc 1 4471 0
	cmpl	$0, 16(%ebp)
	je	.L1906
	movl	16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	jne	.L1906
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L1909
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L1906
.L1909:
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L1906
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	host_integerp@PLT
	testl	%eax, %eax
	je	.L1906
	cmpl	$0, 20(%ebp)
	je	.L1906
	cmpl	$16, 12(%ebp)
	je	.L1906
.LBB41:
	.loc 1 4485 0
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L1915
.L1916:
	.loc 1 4486 0
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	jne	.L1917
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	jne	.L1917
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %eax
	movl	%eax, -120(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1920
	movl	$64, -116(%ebp)
	jmp	.L1922
.L1920:
	movl	$32, -116(%ebp)
.L1922:
	movl	-116(%ebp), %ecx
	cmpl	%ecx, -120(%ebp)
	jne	.L1917
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	bit_position@PLT
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	host_integerp@PLT
	testl	%eax, %eax
	je	.L1917
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	int_bit_position@PLT
	movl	%eax, -112(%ebp)
	movl	%edx, -108(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1925
	movl	$64, -104(%ebp)
	movl	$0, -100(%ebp)
	jmp	.L1927
.L1925:
	movl	$32, -104(%ebp)
	movl	$0, -100(%ebp)
.L1927:
	movl	-104(%ebp), %eax
	movl	-100(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-112(%ebp), %edx
	movl	-108(%ebp), %ecx
	movl	%edx, (%esp)
	movl	%ecx, 4(%esp)
	call	__moddi3@PLT
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L1928
.L1917:
	.loc 1 4485 0
	movl	-32(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
.L1915:
	cmpl	$0, -32(%ebp)
	jne	.L1916
.L1928:
	.loc 1 4493 0
	cmpl	$0, -32(%ebp)
	je	.L1906
.LBB42:
	.loc 1 4504 0
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	rtvec_alloc@PLT
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -24(%ebp)
	.loc 1 4506 0
	movl	$0, -40(%ebp)
	movl	$0, -36(%ebp)
	.loc 1 4507 0
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 4508 0
	movl	$0, -28(%ebp)
	jmp	.L1930
.L1933:
.LBB43:
	.loc 1 4513 0
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	jne	.L1934
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	int_bit_position@PLT
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	movl	-92(%ebp), %ecx
	cmpl	-36(%ebp), %ecx
	jg	.L1936
	movl	-92(%ebp), %eax
	cmpl	-36(%ebp), %eax
	jl	.L1934
	movl	-96(%ebp), %edx
	cmpl	-40(%ebp), %edx
	jae	.L1936
.L1934:
	.loc 1 4512 0
	movl	-32(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
.L1932:
	cmpl	$0, -32(%ebp)
	jne	.L1933
.L1936:
	.loc 1 4517 0
	cmpl	$0, -32(%ebp)
	je	.L1938
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	int_bit_position@PLT
	movl	%edx, %ecx
	xorl	-36(%ebp), %ecx
	xorl	-40(%ebp), %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	jne	.L1938
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	jne	.L1938
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L1938
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %eax
	movl	%eax, -88(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1943
	movl	$64, -84(%ebp)
	jmp	.L1945
.L1943:
	movl	$32, -84(%ebp)
.L1945:
	movl	-84(%ebp), %ecx
	cmpl	%ecx, -88(%ebp)
	jne	.L1938
	.loc 1 4522 0
	movl	-52(%ebp), %eax
	addl	-28(%ebp), %eax
	addl	$44, %eax
	movl	%eax, 4(%esp)
	movl	$16, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -20(%ebp)
	.loc 1 4517 0
	jmp	.L1947
.L1938:
	.loc 1 4524 0
	movl	-52(%ebp), %eax
	addl	-28(%ebp), %eax
	addl	$4, %eax
	movl	%eax, 4(%esp)
	movl	$5, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -20(%ebp)
.L1947:
	.loc 1 4526 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -80(%ebp)
	movl	-28(%ebp), %eax
	movl	%eax, -76(%ebp)
	movl	-40(%ebp), %edx
	movl	-36(%ebp), %ecx
	movl	%edx, -144(%ebp)
	movl	%ecx, -140(%ebp)
	movl	-140(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -152(%ebp)
	movl	%edx, -148(%ebp)
	movl	-152(%ebp), %esi
	movl	-148(%ebp), %edi
	movl	%edi, %edi
	sarl	$31, %edi
	movl	%edi, %esi
	movl	%esi, %eax
	andl	$7, %eax
	movl	%edi, %edx
	andl	$0, %edx
	addl	-144(%ebp), %eax
	adcl	-140(%ebp), %edx
	shrdl	$3, %edx, %eax
	sarl	$3, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	-76(%ebp), %edx
	movl	-80(%ebp), %ecx
	movl	%eax, 4(%ecx,%edx,4)
	.loc 1 4530 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1948
	movl	$64, -72(%ebp)
	movl	$0, -68(%ebp)
	jmp	.L1950
.L1948:
	movl	$32, -72(%ebp)
	movl	$0, -68(%ebp)
.L1950:
	movl	-72(%ebp), %eax
	movl	-68(%ebp), %edx
	addl	%eax, -40(%ebp)
	adcl	%edx, -36(%ebp)
.LBE43:
	.loc 1 4508 0
	addl	$1, -28(%ebp)
.L1930:
	movl	-56(%ebp), %eax
	cmpl	-28(%ebp), %eax
	ja	.L1932
	.loc 1 4532 0
	movl	-24(%ebp), %edx
	movl	%edx, -132(%ebp)
	jmp	.L1896
.L1906:
.LBE42:
.LBE41:
	.loc 1 4536 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	jne	.L1952
	movzbl	-63(%ebp), %eax
	testb	%al, %al
	je	.L1952
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	jne	.L1952
	.loc 1 4540 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %esi
	movl	-52(%ebp), %eax
	addl	$44, %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, %edi
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %esi
	movl	-52(%ebp), %eax
	addl	$4, %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%edi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$2, (%esp)
	call	gen_rtvec@PLT
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -132(%ebp)
	jmp	.L1896
.L1952:
	.loc 1 4555 0
	movzbl	-63(%ebp), %eax
	testb	%al, %al
	je	.L1956
	.loc 1 4556 0
	movl	-52(%ebp), %eax
	addl	$44, %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -132(%ebp)
	jmp	.L1896
.L1956:
	.loc 1 4558 0
	movl	-52(%ebp), %eax
	addl	$4, %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -132(%ebp)
.L1896:
	movl	-132(%ebp), %eax
	.loc 1 4559 0
	addl	$172, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE91:
	.size	function_arg, .-function_arg
.globl function_arg_partial_nregs
	.type	function_arg_partial_nregs, @function
function_arg_partial_nregs:
.LFB92:
	.loc 1 4567 0
	pushl	%ebp
.LCFI300:
	movl	%esp, %ebp
.LCFI301:
	subl	$56, %esp
.LCFI302:
	.loc 1 4570 0
	leal	-24(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_arg_info
	.loc 1 4571 0
	movl	-8(%ebp), %eax
	testl	%eax, %eax
	je	.L1960
	movl	-16(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L1962
.L1960:
	movl	$0, -36(%ebp)
.L1962:
	movl	-36(%ebp), %eax
	.loc 1 4572 0
	leave
	ret
.LFE92:
	.size	function_arg_partial_nregs, .-function_arg_partial_nregs
.globl mips_setup_incoming_varargs
	.type	mips_setup_incoming_varargs, @function
mips_setup_incoming_varargs:
.LFB93:
	.loc 1 4580 0
	pushl	%ebp
.LCFI303:
	movl	%esp, %ebp
.LCFI304:
	pushl	%esi
.LCFI305:
	pushl	%ebx
.LCFI306:
	subl	$208, %esp
.LCFI307:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4584 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1965
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L1967
.L1965:
	.loc 1 4585 0
	movl	$0, -196(%ebp)
	jmp	.L1968
.L1967:
	.loc 1 4591 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	%edx, -104(%ebp)
	movl	4(%eax), %edx
	movl	%edx, -100(%ebp)
	movl	8(%eax), %edx
	movl	%edx, -96(%ebp)
	movl	12(%eax), %edx
	movl	%edx, -92(%ebp)
	movl	16(%eax), %edx
	movl	%edx, -88(%ebp)
	movl	20(%eax), %edx
	movl	%edx, -84(%ebp)
	movl	24(%eax), %edx
	movl	%edx, -80(%ebp)
	movl	28(%eax), %edx
	movl	%edx, -76(%ebp)
	movl	32(%eax), %edx
	movl	%edx, -72(%ebp)
	movl	36(%eax), %edx
	movl	%edx, -68(%ebp)
	movl	40(%eax), %edx
	movl	%edx, -64(%ebp)
	movl	44(%eax), %edx
	movl	%edx, -60(%ebp)
	movl	48(%eax), %edx
	movl	%edx, -56(%ebp)
	movl	52(%eax), %edx
	movl	%edx, -52(%ebp)
	movl	56(%eax), %edx
	movl	%edx, -48(%ebp)
	movl	60(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 4592 0
	movl	$1, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-104(%ebp), %eax
	movl	%eax, (%esp)
	call	function_arg_advance@PLT
	.loc 1 4595 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1969
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L1971
.L1969:
	movl	$4, -192(%ebp)
	jmp	.L1972
.L1971:
	movl	$8, -192(%ebp)
.L1972:
	movl	-96(%ebp), %eax
	movl	-192(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -40(%ebp)
	.loc 1 4596 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L1973
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L1975
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L1977
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L1979
.L1977:
	movl	$16, -180(%ebp)
	jmp	.L1980
.L1979:
	movl	$8, -180(%ebp)
.L1980:
	movl	-180(%ebp), %eax
	movl	%eax, -184(%ebp)
	jmp	.L1981
.L1975:
	movl	$0, -184(%ebp)
.L1981:
	movl	global_trees@GOT(%ebx), %eax
	movl	100(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$29, %eax
	addl	%edx, %eax
	sarl	$3, %eax
	cmpl	%eax, -184(%ebp)
	jl	.L1973
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1983
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L1985
.L1983:
	movl	$4, -176(%ebp)
	jmp	.L1986
.L1985:
	movl	$8, -176(%ebp)
.L1986:
	movl	-92(%ebp), %eax
	movl	-176(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -188(%ebp)
	jmp	.L1987
.L1973:
	movl	$0, -188(%ebp)
.L1987:
	movl	-188(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 1 4600 0
	cmpl	$0, 20(%ebp)
	jne	.L1988
	.loc 1 4602 0
	cmpl	$0, -40(%ebp)
	jle	.L1990
.LBB44:
	.loc 1 4606 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 4607 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L1992
	.loc 1 4608 0
	movl	-40(%ebp), %eax
	movl	%eax, %edx
	negl	%edx
	movl	%edx, -172(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L1994
	movl	$8, -168(%ebp)
	jmp	.L1996
.L1994:
	movl	$4, -168(%ebp)
.L1996:
	movl	-172(%ebp), %eax
	imull	-168(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, -32(%ebp)
.L1992:
	.loc 1 4609 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$52, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%eax, -28(%ebp)
	.loc 1 4615 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L1997
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L1997
	.loc 1 4616 0
	movl	-28(%ebp), %edx
	movzbl	3(%edx), %eax
	orl	$16, %eax
	movb	%al, 3(%edx)
	movl	-28(%ebp), %edx
	movzbl	3(%edx), %eax
	andl	$127, %eax
	movb	%al, 3(%edx)
.L1997:
	.loc 1 4618 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2000
	movl	$8, -164(%ebp)
	jmp	.L2002
.L2000:
	movl	$4, -164(%ebp)
.L2002:
	movl	-164(%ebp), %edx
	imull	-40(%ebp), %edx
	movl	-96(%ebp), %eax
	addl	$4, %eax
	movl	%eax, %ecx
	movl	%edx, 12(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	move_block_from_reg@PLT
.L1990:
.LBE44:
	.loc 1 4621 0
	cmpl	$0, -36(%ebp)
	jle	.L1988
.LBB45:
	.loc 1 4631 0
	movl	-40(%ebp), %eax
	movl	%eax, %edx
	negl	%edx
	movl	%edx, -160(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2004
	movl	$8, -156(%ebp)
	jmp	.L2006
.L2004:
	movl	$4, -156(%ebp)
.L2006:
	movl	-160(%ebp), %eax
	imull	-156(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 4632 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2007
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2009
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2011
.L2009:
	movl	$-16, -148(%ebp)
	jmp	.L2012
.L2011:
	movl	$-8, -148(%ebp)
.L2012:
	movl	-148(%ebp), %eax
	movl	%eax, -152(%ebp)
	jmp	.L2013
.L2007:
	movl	$0, -152(%ebp)
.L2013:
	movl	-152(%ebp), %edx
	andl	%edx, -20(%ebp)
	.loc 1 4633 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2014
	movl	$8, -144(%ebp)
	jmp	.L2016
.L2014:
	movl	$4, -144(%ebp)
.L2016:
	movl	-144(%ebp), %eax
	imull	-36(%ebp), %eax
	subl	%eax, -20(%ebp)
	.loc 1 4635 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L2017
	movl	$15, -140(%ebp)
	jmp	.L2019
.L2017:
	movl	$16, -140(%ebp)
.L2019:
	movl	-140(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 4637 0
	movl	-92(%ebp), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2020
.L2021:
.LBB46:
	.loc 1 4639 0
	movl	-20(%ebp), %eax
	movl	%eax, %edx
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	global_rtl@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%ecx, 8(%esp)
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, -12(%ebp)
	.loc 1 4640 0
	movl	-16(%ebp), %eax
	addl	$44, %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, %esi
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 4642 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2022
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L2024
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L2026
.L2024:
	movl	$1, -132(%ebp)
	jmp	.L2027
.L2026:
	movl	$2, -132(%ebp)
.L2027:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2028
	movl	$8, -128(%ebp)
	jmp	.L2030
.L2028:
	movl	$4, -128(%ebp)
.L2030:
	movl	-132(%ebp), %edx
	imull	-128(%ebp), %edx
	movl	%edx, -136(%ebp)
	jmp	.L2031
.L2022:
	movl	$0, -136(%ebp)
.L2031:
	movl	-136(%ebp), %eax
	addl	%eax, -20(%ebp)
.LBE46:
	.loc 1 4637 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L2032
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L2034
.L2032:
	movl	$1, -124(%ebp)
	jmp	.L2035
.L2034:
	movl	$2, -124(%ebp)
.L2035:
	movl	-124(%ebp), %edx
	addl	%edx, -16(%ebp)
.L2020:
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2036
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L2038
.L2036:
	movl	$4, -120(%ebp)
	jmp	.L2039
.L2038:
	movl	$8, -120(%ebp)
.L2039:
	movl	-120(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jg	.L2021
.L1988:
.LBE45:
	.loc 1 4646 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2040
	movl	$8, -116(%ebp)
	jmp	.L2042
.L2040:
	movl	$4, -116(%ebp)
.L2042:
	movl	-116(%ebp), %edx
	imull	-40(%ebp), %edx
	movl	%edx, -112(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2043
	movl	$8, -108(%ebp)
	jmp	.L2045
.L2043:
	movl	$4, -108(%ebp)
.L2045:
	movl	-108(%ebp), %eax
	imull	-36(%ebp), %eax
	movl	-112(%ebp), %edx
	addl	%eax, %edx
	movl	%edx, -196(%ebp)
.L1968:
	movl	-196(%ebp), %eax
	.loc 1 4647 0
	addl	$208, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE93:
	.size	mips_setup_incoming_varargs, .-mips_setup_incoming_varargs
	.section	.rodata
.LC153:
	.string	"__overflow_argptr"
.LC154:
	.string	"__gpr_top"
.LC155:
	.string	"__fpr_top"
.LC156:
	.string	"__gpr_offset"
.LC157:
	.string	"__fpr_offset"
	.text
.globl mips_build_va_list
	.type	mips_build_va_list, @function
mips_build_va_list:
.LFB94:
	.loc 1 4672 0
	pushl	%ebp
.LCFI308:
	movl	%esp, %ebp
.LCFI309:
	pushl	%esi
.LCFI310:
	pushl	%ebx
.LCFI311:
	subl	$64, %esp
.LCFI312:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4673 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L2048
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2050
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2052
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2054
.L2052:
	movl	$16, -48(%ebp)
	jmp	.L2055
.L2054:
	movl	$8, -48(%ebp)
.L2055:
	movl	-48(%ebp), %eax
	movl	%eax, -52(%ebp)
	jmp	.L2056
.L2050:
	movl	$0, -52(%ebp)
.L2056:
	movl	global_trees@GOT(%ebx), %eax
	movl	100(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$29, %eax
	addl	%edx, %eax
	sarl	$3, %eax
	cmpl	%eax, -52(%ebp)
	jl	.L2048
.LBB47:
	.loc 1 4677 0
	movl	$21, (%esp)
	call	make_node@PLT
	movl	%eax, -12(%ebp)
	.loc 1 4679 0
	movl	global_trees@GOT(%ebx), %eax
	movl	112(%eax), %esi
	movl	$17, 4(%esp)
	leal	.LC153@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -32(%ebp)
	.loc 1 4681 0
	movl	global_trees@GOT(%ebx), %eax
	movl	112(%eax), %esi
	movl	$9, 4(%esp)
	leal	.LC154@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -28(%ebp)
	.loc 1 4683 0
	movl	global_trees@GOT(%ebx), %eax
	movl	112(%eax), %esi
	movl	$9, 4(%esp)
	leal	.LC155@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -24(%ebp)
	.loc 1 4685 0
	movl	integer_types@GOT(%ebx), %eax
	movl	8(%eax), %esi
	movl	$12, 4(%esp)
	leal	.LC156@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -20(%ebp)
	.loc 1 4687 0
	movl	integer_types@GOT(%ebx), %eax
	movl	8(%eax), %esi
	movl	$12, 4(%esp)
	leal	.LC157@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4691 0
	movl	-32(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 4692 0
	movl	-28(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 4693 0
	movl	-24(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 4694 0
	movl	-20(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 4695 0
	movl	-16(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 4697 0
	movl	-12(%ebp), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 16(%edx)
	.loc 1 4698 0
	movl	-32(%ebp), %edx
	movl	-28(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 4699 0
	movl	-28(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 4700 0
	movl	-24(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 4701 0
	movl	-20(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 4703 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
	.loc 1 4704 0
	movl	-12(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2058
.L2048:
.LBE47:
	.loc 1 4707 0
	movl	global_trees@GOT(%ebx), %eax
	movl	112(%eax), %eax
	movl	%eax, -44(%ebp)
.L2058:
	movl	-44(%ebp), %eax
	.loc 1 4708 0
	addl	$64, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE94:
	.size	mips_build_va_list, .-mips_build_va_list
.globl mips_va_start
	.type	mips_va_start, @function
mips_va_start:
.LFB95:
	.loc 1 4716 0
	pushl	%ebp
.LCFI313:
	movl	%esp, %ebp
.LCFI314:
	pushl	%ebx
.LCFI315:
	subl	$148, %esp
.LCFI316:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4717 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$52, %eax
	movl	%eax, -64(%ebp)
	.loc 1 4723 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2061
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L2061
	.loc 1 4724 0
	jmp	.L2064
.L2065:
	.loc 1 4726 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	movl	40(%eax), %edx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	movl	40(%eax), %eax
	movzbl	(%eax), %eax
	shrb	%al
	movb	%al, (%edx)
.L2064:
	.loc 1 4724 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	40(%eax), %eax
	leal	0(,%eax,8), %edx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	movl	40(%eax), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	subl	$1, %eax
	andl	%edx, %eax
	testl	%eax, %eax
	jne	.L2065
.L2061:
	.loc 1 4728 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L2066
.LBB48:
	.loc 1 4732 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2068
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L2070
.L2068:
	movl	$4, -124(%ebp)
	jmp	.L2071
.L2070:
	movl	$8, -124(%ebp)
.L2071:
	movl	-64(%ebp), %eax
	movl	8(%eax), %eax
	movl	-124(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, -120(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2072
	movl	$8, -116(%ebp)
	jmp	.L2074
.L2072:
	movl	$4, -116(%ebp)
.L2074:
	movl	-120(%ebp), %eax
	imull	-116(%ebp), %eax
	movl	%eax, -60(%ebp)
	.loc 1 4735 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L2075
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2077
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2079
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2081
.L2079:
	movl	$16, -108(%ebp)
	jmp	.L2082
.L2081:
	movl	$8, -108(%ebp)
.L2082:
	movl	-108(%ebp), %eax
	movl	%eax, -112(%ebp)
	jmp	.L2083
.L2077:
	movl	$0, -112(%ebp)
.L2083:
	movl	global_trees@GOT(%ebx), %eax
	movl	100(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$29, %eax
	addl	%edx, %eax
	sarl	$3, %eax
	cmpl	%eax, -112(%ebp)
	jl	.L2075
.LBB49:
	.loc 1 4743 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 4744 0
	movl	-56(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 1 4745 0
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 4746 0
	movl	-48(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 4747 0
	movl	-44(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 4749 0
	movl	-56(%ebp), %eax
	movl	4(%eax), %edx
	movl	-56(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -36(%ebp)
	.loc 1 4750 0
	movl	-52(%ebp), %eax
	movl	4(%eax), %edx
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -32(%ebp)
	.loc 1 4751 0
	movl	-48(%ebp), %eax
	movl	4(%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -28(%ebp)
	.loc 1 4752 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -24(%ebp)
	.loc 1 4753 0
	movl	-40(%ebp), %eax
	movl	4(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -20(%ebp)
	.loc 1 4758 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	24(%eax), %edx
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	make_tree@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4759 0
	movl	-64(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L2085
	.loc 1 4760 0
	movl	-64(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -104(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2087
	movl	$8, -100(%ebp)
	jmp	.L2089
.L2087:
	movl	$4, -100(%ebp)
.L2089:
	movl	-104(%ebp), %eax
	imull	-100(%ebp), %eax
	movl	$0, %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$60, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
.L2085:
	.loc 1 4762 0
	movl	-36(%ebp), %eax
	movl	4(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4763 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	.loc 1 4766 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	24(%eax), %edx
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	make_tree@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4767 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4768 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	.loc 1 4773 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	24(%eax), %edx
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	make_tree@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4774 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2090
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2092
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2094
.L2092:
	movl	$16, -92(%ebp)
	jmp	.L2095
.L2094:
	movl	$8, -92(%ebp)
.L2095:
	movl	-92(%ebp), %edx
	movl	%edx, -96(%ebp)
	jmp	.L2096
.L2090:
	movl	$0, -96(%ebp)
.L2096:
	movl	-96(%ebp), %eax
	addl	-60(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
	.loc 1 4775 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2097
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2099
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2101
.L2099:
	movl	$-16, -84(%ebp)
	jmp	.L2102
.L2101:
	movl	$-8, -84(%ebp)
.L2102:
	movl	-84(%ebp), %eax
	movl	%eax, -88(%ebp)
	jmp	.L2103
.L2097:
	movl	$0, -88(%ebp)
.L2103:
	movl	-88(%ebp), %edx
	andl	%edx, -12(%ebp)
	.loc 1 4776 0
	cmpl	$0, -12(%ebp)
	je	.L2104
	.loc 1 4777 0
	movl	-12(%ebp), %eax
	negl	%eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	$-1, 8(%esp)
	movl	$-1, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-28(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$60, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
.L2104:
	.loc 1 4779 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4780 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	.loc 1 4784 0
	movl	-60(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-24(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4786 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	.loc 1 4790 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2106
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L2108
.L2106:
	movl	$4, -80(%ebp)
	jmp	.L2109
.L2108:
	movl	$8, -80(%ebp)
.L2109:
	movl	-64(%ebp), %eax
	movl	12(%eax), %eax
	movl	-80(%ebp), %edx
	subl	%eax, %edx
	movl	%edx, -76(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2110
	movl	$8, -72(%ebp)
	jmp	.L2112
.L2110:
	movl	$4, -72(%ebp)
.L2112:
	movl	-76(%ebp), %eax
	imull	-72(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 4792 0
	movl	-8(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4794 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	.loc 1 4735 0
	jmp	.L2115
.L2075:
.LBE49:
	.loc 1 4800 0
	movl	-60(%ebp), %eax
	negl	%eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, 12(%ebp)
	.loc 1 4801 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	std_expand_builtin_va_start@PLT
	jmp	.L2115
.L2066:
.LBE48:
	.loc 1 4805 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	std_expand_builtin_va_start@PLT
.L2115:
	.loc 1 4806 0
	addl	$148, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE95:
	.size	mips_va_start, .-mips_va_start
.globl mips_va_arg
	.type	mips_va_arg, @function
mips_va_arg:
.LFB96:
	.loc 1 4813 0
	pushl	%ebp
.LCFI317:
	movl	%esp, %ebp
.LCFI318:
	pushl	%edi
.LCFI319:
	pushl	%esi
.LCFI320:
	pushl	%ebx
.LCFI321:
	subl	$316, %esp
.LCFI322:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4818 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -104(%ebp)
	movl	%edx, -100(%ebp)
	.loc 1 4819 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2117
	movl	$8, -280(%ebp)
	movl	$0, -276(%ebp)
	jmp	.L2119
.L2117:
	movl	$4, -280(%ebp)
	movl	$0, -276(%ebp)
.L2119:
	movl	-280(%ebp), %eax
	movl	-276(%ebp), %edx
	addl	-104(%ebp), %eax
	adcl	-100(%ebp), %edx
	movl	%eax, %esi
	movl	%edx, %edi
	addl	$-1, %esi
	adcl	$-1, %edi
	movl	%esi, -272(%ebp)
	movl	%edi, -268(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2120
	movl	$-8, -264(%ebp)
	movl	$-1, -260(%ebp)
	jmp	.L2122
.L2120:
	movl	$-4, -264(%ebp)
	movl	$-1, -260(%ebp)
.L2122:
	movl	-272(%ebp), %eax
	andl	-264(%ebp), %eax
	movl	%eax, -96(%ebp)
	movl	-268(%ebp), %eax
	andl	-260(%ebp), %eax
	movl	%eax, -92(%ebp)
	.loc 1 4821 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L2123
.LBB50:
	.loc 1 4826 0
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %edx
	movl	$0, 12(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	call	function_arg_pass_by_reference@PLT
	testl	%eax, %eax
	setne	%al
	movb	%al, -17(%ebp)
	.loc 1 4829 0
	cmpb	$0, -17(%ebp)
	je	.L2125
	.loc 1 4831 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2127
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2127
	movl	$8, -256(%ebp)
	movl	$0, -252(%ebp)
	jmp	.L2130
.L2127:
	movl	$4, -256(%ebp)
	movl	$0, -252(%ebp)
.L2130:
	movl	-256(%ebp), %eax
	movl	-252(%ebp), %edx
	movl	%eax, -104(%ebp)
	movl	%edx, -100(%ebp)
	.loc 1 4832 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2131
	movl	$8, -248(%ebp)
	movl	$0, -244(%ebp)
	jmp	.L2133
.L2131:
	movl	$4, -248(%ebp)
	movl	$0, -244(%ebp)
.L2133:
	movl	-248(%ebp), %esi
	movl	-244(%ebp), %edi
	movl	%esi, -96(%ebp)
	movl	%edi, -92(%ebp)
.L2125:
	.loc 1 4835 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2134
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2134
	movl	$5, -236(%ebp)
	jmp	.L2137
.L2134:
	movl	$4, -236(%ebp)
.L2137:
	movl	-236(%ebp), %edi
	movl	%edi, (%esp)
	call	gen_reg_rtx@PLT
	movl	%eax, -80(%ebp)
	.loc 1 4837 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L2138
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2140
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2142
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2144
.L2142:
	movl	$16, -228(%ebp)
	jmp	.L2145
.L2144:
	movl	$8, -228(%ebp)
.L2145:
	movl	-228(%ebp), %eax
	movl	%eax, -232(%ebp)
	jmp	.L2146
.L2140:
	movl	$0, -232(%ebp)
.L2146:
	movl	global_trees@GOT(%ebx), %eax
	movl	100(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$29, %eax
	addl	%edx, %eax
	sarl	$3, %eax
	cmpl	%eax, -232(%ebp)
	jge	.L2147
.L2138:
.LBB51:
	.loc 1 4842 0
	movl	8(%ebp), %eax
	movl	%eax, -68(%ebp)
	.loc 1 4843 0
	movzbl	-17(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L2148
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L2148
	movl	12(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -224(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2151
	movl	$64, -220(%ebp)
	jmp	.L2153
.L2151:
	movl	$32, -220(%ebp)
.L2153:
	movl	-220(%ebp), %edx
	cmpl	%edx, -224(%ebp)
	jbe	.L2148
	.loc 1 4849 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2155
	movl	$15, -216(%ebp)
	movl	$0, -212(%ebp)
	jmp	.L2157
.L2155:
	movl	$7, -216(%ebp)
	movl	$0, -212(%ebp)
.L2157:
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	-216(%ebp), %esi
	movl	-212(%ebp), %edi
	movl	%esi, (%esp)
	movl	%edi, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-68(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$60, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4851 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2158
	movl	$-16, -208(%ebp)
	movl	$-1, -204(%ebp)
	jmp	.L2160
.L2158:
	movl	$-8, -208(%ebp)
	movl	$-1, -204(%ebp)
.L2160:
	movl	$-1, 8(%esp)
	movl	$-1, 12(%esp)
	movl	-208(%ebp), %eax
	movl	-204(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-76(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$90, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4853 0
	movl	-68(%ebp), %eax
	movl	4(%eax), %edx
	movl	-76(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4854 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
.L2148:
	.loc 1 4860 0
	movl	$0, 8(%esp)
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	size_int_wide@PLT
	movl	%eax, %edx
	movl	-68(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$134, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4862 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2161
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2161
	movl	$5, -196(%ebp)
	jmp	.L2164
.L2161:
	movl	$4, -196(%ebp)
.L2164:
	movl	$0, 12(%esp)
	movl	-196(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	movl	%eax, -72(%ebp)
	.loc 1 4863 0
	movl	-72(%ebp), %eax
	cmpl	-80(%ebp), %eax
	je	.L2165
	.loc 1 4864 0
	movl	-72(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
.L2165:
	.loc 1 4867 0
	call	emit_queue@PLT
	.loc 1 4837 0
	jmp	.L2167
.L2147:
.LBE51:
.LBB52:
	.loc 1 4875 0
	movl	$0, -32(%ebp)
	.loc 1 4878 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 1 4879 0
	movl	-64(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 1 4880 0
	movl	-60(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 4881 0
	movl	-56(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 1 4882 0
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 4914 0
	call	gen_label_rtx@PLT
	movl	%eax, -28(%ebp)
	.loc 1 4915 0
	call	gen_label_rtx@PLT
	movl	%eax, -32(%ebp)
	.loc 1 4917 0
	movl	-64(%ebp), %eax
	movl	4(%eax), %edx
	movl	-64(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -44(%ebp)
	.loc 1 4919 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	jne	.L2168
	.loc 1 4921 0
	movl	-56(%ebp), %eax
	movl	4(%eax), %edx
	movl	-56(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -40(%ebp)
	.loc 1 4922 0
	movl	-48(%ebp), %eax
	movl	4(%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -36(%ebp)
	.loc 1 4927 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2170
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L2172
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L2174
.L2172:
	movl	$1, -184(%ebp)
	jmp	.L2175
.L2174:
	movl	$2, -184(%ebp)
.L2175:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2176
	movl	$8, -180(%ebp)
	jmp	.L2178
.L2176:
	movl	$4, -180(%ebp)
.L2178:
	movl	-184(%ebp), %eax
	imull	-180(%ebp), %eax
	movl	%eax, -192(%ebp)
	movl	%eax, %esi
	sarl	$31, %esi
	movl	%esi, -188(%ebp)
	jmp	.L2179
.L2170:
	movl	$0, -192(%ebp)
	movl	$0, -188(%ebp)
.L2179:
	movl	-192(%ebp), %eax
	movl	-188(%ebp), %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	jmp	.L2180
.L2168:
	.loc 1 4931 0
	movl	-60(%ebp), %eax
	movl	4(%eax), %edx
	movl	-60(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -40(%ebp)
	.loc 1 4932 0
	movl	-52(%ebp), %eax
	movl	4(%eax), %edx
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$40, (%esp)
	call	build@PLT
	movl	%eax, -36(%ebp)
	.loc 1 4933 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2181
	movl	$8, -176(%ebp)
	movl	$0, -172(%ebp)
	jmp	.L2183
.L2181:
	movl	$4, -176(%ebp)
	movl	$0, -172(%ebp)
.L2183:
	movl	-172(%ebp), %edx
	cmpl	-92(%ebp), %edx
	jg	.L2180
	movl	-172(%ebp), %esi
	cmpl	-92(%ebp), %esi
	jl	.L2185
	movl	-176(%ebp), %edi
	cmpl	-96(%ebp), %edi
	jae	.L2180
.L2185:
	.loc 1 4936 0
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	negl	%eax
	adcl	$0, %edx
	negl	%edx
	movl	$-1, 8(%esp)
	movl	$-1, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$90, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4938 0
	movl	-36(%ebp), %eax
	movl	4(%eax), %edx
	movl	-76(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4939 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
.L2180:
	.loc 1 4948 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2186
	movl	$8, -160(%ebp)
	movl	$0, -156(%ebp)
	jmp	.L2188
.L2186:
	movl	$4, -160(%ebp)
	movl	$0, -156(%ebp)
.L2188:
	movl	-156(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jl	.L2189
	movl	-156(%ebp), %edx
	cmpl	-92(%ebp), %edx
	jg	.L2191
	movl	-160(%ebp), %esi
	cmpl	-96(%ebp), %esi
	jb	.L2189
.L2191:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2192
	movl	$8, -152(%ebp)
	movl	$0, -148(%ebp)
	jmp	.L2194
.L2192:
	movl	$4, -152(%ebp)
	movl	$0, -148(%ebp)
.L2194:
	movl	-152(%ebp), %eax
	movl	-148(%ebp), %edx
	movl	%eax, -168(%ebp)
	movl	%edx, -164(%ebp)
	jmp	.L2195
.L2189:
	movl	-96(%ebp), %esi
	movl	-92(%ebp), %edi
	movl	%esi, -168(%ebp)
	movl	%edi, -164(%ebp)
.L2195:
	movl	-168(%ebp), %eax
	movl	-164(%ebp), %edx
	movl	%eax, -88(%ebp)
	movl	%edx, -84(%ebp)
	.loc 1 4951 0
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %eax
	movl	$0, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	movl	%eax, -72(%ebp)
	.loc 1 4953 0
	movl	-72(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	260(%eax), %ecx
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %esi
	movl	-28(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	$1, 20(%esp)
	movl	%edx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	$113, 8(%esp)
	movl	%esi, 4(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_cmp_and_jump_insns@PLT
	.loc 1 4957 0
	movl	-40(%ebp), %eax
	movl	4(%eax), %edx
	movl	-36(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$61, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4958 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2196
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2196
	movl	$5, -140(%ebp)
	jmp	.L2199
.L2196:
	movl	$4, -140(%ebp)
.L2199:
	movl	$0, 12(%esp)
	movl	-140(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	movl	%eax, -72(%ebp)
	.loc 1 4959 0
	movl	-72(%ebp), %eax
	cmpl	-80(%ebp), %eax
	je	.L2200
	.loc 1 4960 0
	movl	-72(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
.L2200:
	.loc 1 4963 0
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$61, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4964 0
	movl	-36(%ebp), %eax
	movl	4(%eax), %edx
	movl	-76(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4965 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	.loc 1 4969 0
	call	emit_queue@PLT
	.loc 1 4970 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_jump@PLT
	.loc 1 4971 0
	call	emit_barrier@PLT
	.loc 1 4972 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_label@PLT
	.loc 1 4974 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2202
	movl	$8, -136(%ebp)
	movl	$0, -132(%ebp)
	jmp	.L2204
.L2202:
	movl	$4, -136(%ebp)
	movl	$0, -132(%ebp)
.L2204:
	movl	-132(%ebp), %esi
	cmpl	-84(%ebp), %esi
	jg	.L2205
	movl	-132(%ebp), %edi
	cmpl	-84(%ebp), %edi
	jl	.L2207
	movl	-136(%ebp), %eax
	cmpl	-88(%ebp), %eax
	jae	.L2205
.L2207:
	.loc 1 4977 0
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	addl	$-1, %eax
	adcl	$-1, %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$60, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4979 0
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	negl	%eax
	adcl	$0, %edx
	negl	%edx
	movl	$-1, 8(%esp)
	movl	$-1, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$90, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4981 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %edx
	movl	-76(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4982 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
.L2205:
	.loc 1 4988 0
	movl	$0, 8(%esp)
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	size_int_wide@PLT
	movl	%eax, %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$134, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 4990 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L2208
	movl	-88(%ebp), %esi
	movl	-84(%ebp), %edi
	movl	%esi, -288(%ebp)
	movl	%edi, -284(%ebp)
	movl	-284(%ebp), %edi
	cmpl	-92(%ebp), %edi
	jl	.L2208
	movl	-284(%ebp), %eax
	cmpl	-92(%ebp), %eax
	jg	.L2211
	movl	-288(%ebp), %edx
	cmpl	-96(%ebp), %edx
	jbe	.L2208
.L2211:
	.loc 1 4991 0
	movl	-96(%ebp), %esi
	movl	-92(%ebp), %edi
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	subl	%esi, %eax
	sbbl	%edi, %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-76(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$60, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
.L2208:
	.loc 1 4993 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2212
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2212
	movl	$5, -128(%ebp)
	jmp	.L2215
.L2212:
	movl	$4, -128(%ebp)
.L2215:
	movl	$0, 12(%esp)
	movl	-128(%ebp), %esi
	movl	%esi, 8(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	movl	%eax, -72(%ebp)
	.loc 1 4994 0
	movl	-72(%ebp), %eax
	cmpl	-80(%ebp), %eax
	je	.L2216
	.loc 1 4995 0
	movl	-72(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
.L2216:
	.loc 1 4997 0
	call	emit_queue@PLT
	.loc 1 4998 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_label@PLT
.L2167:
.LBE52:
	.loc 1 5000 0
	cmpb	$0, -17(%ebp)
	je	.L2218
	.loc 1 5002 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2220
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2220
	movl	$5, -124(%ebp)
	jmp	.L2223
.L2220:
	movl	$4, -124(%ebp)
.L2223:
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-124(%ebp), %edi
	movl	%edi, (%esp)
	call	force_reg@PLT
	movl	%eax, -80(%ebp)
	.loc 1 5003 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2224
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2224
	movl	$5, -120(%ebp)
	jmp	.L2227
.L2224:
	movl	$4, -120(%ebp)
.L2227:
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%eax, -72(%ebp)
	.loc 1 5004 0
	call	get_varargs_alias_set@PLT
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	set_mem_alias_set@PLT
	.loc 1 5005 0
	movl	-72(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	jmp	.L2228
.L2218:
	.loc 1 5009 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L2228
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	movl	%edx, %ecx
	xorl	-100(%ebp), %ecx
	xorl	-104(%ebp), %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	je	.L2228
	.loc 1 5010 0
	movl	-104(%ebp), %esi
	movl	-100(%ebp), %edi
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	subl	%esi, %eax
	sbbl	%edi, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, -80(%ebp)
.L2228:
	.loc 1 5012 0
	movl	-80(%ebp), %edx
	movl	%edx, -116(%ebp)
	jmp	.L2231
.L2123:
.LBE50:
.LBB53:
	.loc 1 5023 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2232
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2234
.L2232:
	movl	12(%ebp), %eax
	movl	44(%eax), %eax
	cmpl	$64, %eax
	jbe	.L2234
	.loc 1 5025 0
	movl	$16, -24(%ebp)
	.loc 1 5023 0
	jmp	.L2236
.L2234:
	.loc 1 5026 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2237
	.loc 1 5027 0
	movl	$8, -24(%ebp)
	jmp	.L2236
.L2237:
	.loc 1 5028 0
	movl	12(%ebp), %eax
	movl	44(%eax), %eax
	cmpl	$32, %eax
	jbe	.L2239
	.loc 1 5029 0
	movl	$8, -24(%ebp)
	jmp	.L2236
.L2239:
	.loc 1 5031 0
	movl	$4, -24(%ebp)
.L2236:
	.loc 1 5033 0
	movl	-24(%ebp), %eax
	subl	$1, %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$60, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 5035 0
	movl	-24(%ebp), %eax
	negl	%eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	$-1, 8(%esp)
	movl	$-1, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	-76(%ebp), %eax
	movl	4(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$90, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 5036 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	-76(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$49, (%esp)
	call	build@PLT
	movl	%eax, -76(%ebp)
	.loc 1 5037 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_expr@PLT
	.loc 1 5040 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	std_expand_builtin_va_arg@PLT
	movl	%eax, -116(%ebp)
.L2231:
	movl	-116(%ebp), %eax
.LBE53:
	.loc 1 5042 0
	addl	$316, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE96:
	.size	mips_va_arg, .-mips_va_arg
	.section	.rodata
	.type	__FUNCTION__.20475, @object
	.size	__FUNCTION__.20475, 16
__FUNCTION__.20475:
	.string	"abort_with_insn"
	.text
	.type	abort_with_insn, @function
abort_with_insn:
.LFB97:
	.loc 1 5050 0
	pushl	%ebp
.LCFI323:
	movl	%esp, %ebp
.LCFI324:
	pushl	%ebx
.LCFI325:
	subl	$20, %esp
.LCFI326:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5051 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5052 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	debug_rtx@PLT
	.loc 1 5053 0
	leal	__FUNCTION__.20475@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$5053, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.LFE97:
	.size	abort_with_insn, .-abort_with_insn
	.type	mips_set_architecture, @function
mips_set_architecture:
.LFB98:
	.loc 1 5062 0
	pushl	%ebp
.LCFI327:
	movl	%esp, %ebp
.LCFI328:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 5063 0
	cmpl	$0, 8(%ebp)
	je	.L2247
	.loc 1 5065 0
	movl	mips_arch_info@GOT(%ecx), %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 5066 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	mips_arch@GOT(%ecx), %eax
	movl	%edx, (%eax)
	.loc 1 5067 0
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	mips_isa@GOT(%ecx), %eax
	movl	%edx, (%eax)
.L2247:
	.loc 1 5069 0
	popl	%ebp
	ret
.LFE98:
	.size	mips_set_architecture, .-mips_set_architecture
	.type	mips_set_tune, @function
mips_set_tune:
.LFB99:
	.loc 1 5077 0
	pushl	%ebp
.LCFI329:
	movl	%esp, %ebp
.LCFI330:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 5078 0
	cmpl	$0, 8(%ebp)
	je	.L2251
	.loc 1 5080 0
	movl	mips_tune_info@GOT(%ecx), %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 5081 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	mips_tune@GOT(%ecx), %eax
	movl	%edx, (%eax)
.L2251:
	.loc 1 5083 0
	popl	%ebp
	ret
.LFE99:
	.size	mips_set_tune, .-mips_set_tune
	.section	.rodata
.LC158:
	.string	"32"
.LC159:
	.string	"o64"
.LC160:
	.string	"n32"
.LC161:
	.string	"64"
.LC162:
	.string	"eabi"
.LC163:
	.string	"meabi"
	.align 4
.LC164:
	.string	"bad value (%s) for -mabi= switch"
.LC165:
	.string	"-march"
.LC166:
	.string	"-mtune"
	.align 4
.LC167:
	.string	"-mips%d conflicts with the other architecture options, which specify a MIPS%d processor"
	.align 4
.LC168:
	.string	"bad value (%s) for -mips switch"
.LC169:
	.string	"from-abi"
.LC170:
	.string	"default CPU"
	.align 4
.LC171:
	.string	"-march=%s is not compatible with the selected ABI"
	.align 4
.LC172:
	.string	"-mgp64 used with a 32-bit processor"
.LC173:
	.string	"-mgp32 used with a 64-bit ABI"
.LC174:
	.string	"-mgp64 used with a 32-bit ABI"
.LC175:
	.string	"-mgp64 -mfp32 -mdouble-float"
.LC176:
	.string	"unsupported combination: %s"
.LC177:
	.string	"-mgp32 -mfp64"
.LC178:
	.string	"-mfp64 -msingle-float"
	.align 4
.LC179:
	.string	"generation of Branch Likely instructions enabled, but not supported by architecture"
	.align 4
.LC180:
	.string	"-G is incompatible with PIC code which is the default"
	.align 4
.LC181:
	.string	"-membedded-pic and -mabicalls are incompatible"
	.align 4
.LC182:
	.string	"-G and -membedded-pic are incompatible"
.LC183:
	.string	"invalid option `entry%s'"
	.align 4
.LC184:
	.string	"-mentry is only meaningful with -mips-16"
	.text
.globl override_options
	.type	override_options, @function
override_options:
.LFB100:
	.loc 1 5091 0
	pushl	%ebp
.LCFI331:
	movl	%esp, %ebp
.LCFI332:
	pushl	%esi
.LCFI333:
	pushl	%ebx
.LCFI334:
	addl	$-128, %esp
.LCFI335:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5095 0
	movl	g_switch_set@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2253
	movl	g_switch_value@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -124(%ebp)
	jmp	.L2255
.L2253:
	movl	$0, -124(%ebp)
.L2255:
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	-124(%ebp), %edx
	movl	%edx, (%eax)
	.loc 1 5097 0
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jg	.L2256
	.loc 1 5098 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	andl	$-9, %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
	jmp	.L2258
.L2256:
	.loc 1 5099 0
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2258
	.loc 1 5100 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	orl	$8, %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2258:
	.loc 1 5107 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L2260
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L2260
	.loc 1 5108 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2260:
	.loc 1 5112 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 5113 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2263
	.loc 1 5115 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %edx
	leal	.LC158@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L2265
	.loc 1 5116 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	$0, (%eax)
	jmp	.L2263
.L2265:
	.loc 1 5117 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %edx
	leal	.LC159@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L2267
	.loc 1 5118 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	$4, (%eax)
	jmp	.L2263
.L2267:
	.loc 1 5119 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %edx
	leal	.LC160@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L2269
	.loc 1 5120 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	$1, (%eax)
	jmp	.L2263
.L2269:
	.loc 1 5121 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %edx
	leal	.LC161@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L2271
	.loc 1 5122 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	$2, (%eax)
	jmp	.L2263
.L2271:
	.loc 1 5123 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %edx
	leal	.LC162@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L2273
	.loc 1 5124 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	$3, (%eax)
	jmp	.L2263
.L2273:
	.loc 1 5125 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %edx
	leal	.LC163@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L2275
	.loc 1 5126 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	$5, (%eax)
	jmp	.L2263
.L2275:
	.loc 1 5128 0
	movl	mips_abi_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC164@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fatal_error@PLT
.L2263:
	.loc 1 5135 0
	movl	mips_arch_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2277
	.loc 1 5136 0
	movl	mips_arch_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC165@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	mips_parse_cpu
	movl	%eax, (%esp)
	call	mips_set_architecture
.L2277:
	.loc 1 5138 0
	movl	mips_tune_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2279
	.loc 1 5139 0
	movl	mips_tune_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC166@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	mips_parse_cpu
	movl	%eax, (%esp)
	call	mips_set_tune
.L2279:
	.loc 1 5141 0
	movl	mips_isa_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2281
.LBB54:
	.loc 1 5144 0
	movl	mips_isa_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	atoi@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5145 0
	cmpl	$16, -12(%ebp)
	jne	.L2283
	.loc 1 5149 0
	movl	mips_no_mips16_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2281
	.loc 1 5150 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	orl	$1048576, %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
	jmp	.L2281
.L2283:
	.loc 1 5152 0
	movl	mips_arch_info@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2287
	.loc 1 5157 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-12(%ebp), %eax
	je	.L2281
	.loc 1 5158 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC167@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2281
.L2287:
	.loc 1 5163 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_cpu_info_from_isa
	movl	%eax, (%esp)
	call	mips_set_architecture
	.loc 1 5164 0
	movl	mips_arch_info@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2281
	.loc 1 5165 0
	movl	mips_isa_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC168@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2281:
.LBE54:
	.loc 1 5169 0
	movl	mips_arch_info@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2292
	.loc 1 5172 0
	leal	.LC169@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC170@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	mips_parse_cpu
	movl	%eax, (%esp)
	call	mips_set_architecture
.L2292:
	.loc 1 5179 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	je	.L2294
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2294
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2297
.L2294:
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L2297
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2297
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L2297
	.loc 1 5180 0
	movl	mips_arch_info@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC171@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2297:
	.loc 1 5184 0
	movl	mips_tune_info@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2301
	.loc 1 5185 0
	movl	mips_arch_info@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	mips_set_tune
.L2301:
	.loc 1 5187 0
	movl	target_flags_explicit@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2303
	.loc 1 5191 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2305
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L2305
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2305
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L2305
	.loc 1 5192 0
	leal	.LC172@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5191 0
	jmp	.L2318
.L2305:
	.loc 1 5193 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L2311
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	je	.L2313
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2313
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2311
.L2313:
	.loc 1 5194 0
	leal	.LC173@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5193 0
	jmp	.L2318
.L2311:
	.loc 1 5195 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2318
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2318
	.loc 1 5196 0
	leal	.LC174@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2318
.L2303:
	.loc 1 5203 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2319
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L2321
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2321
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L2321
.L2319:
	.loc 1 5204 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	andb	$223, %dh
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 5203 0
	jmp	.L2318
.L2321:
	.loc 1 5206 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	orb	$32, %dh
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2318:
	.loc 1 5209 0
	movl	target_flags_explicit@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2324
	.loc 1 5213 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2326
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	jne	.L2326
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L2326
	.loc 1 5214 0
	leal	.LC175@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC176@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5213 0
	jmp	.L2336
.L2326:
	.loc 1 5215 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L2331
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2331
	.loc 1 5216 0
	leal	.LC177@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC176@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5215 0
	jmp	.L2336
.L2331:
	.loc 1 5217 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L2336
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2336
	.loc 1 5218 0
	leal	.LC178@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC176@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2336
.L2324:
	.loc 1 5224 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2337
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	jne	.L2337
	.loc 1 5225 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	orb	$2, %dh
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 5224 0
	jmp	.L2336
.L2337:
	.loc 1 5227 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	andb	$253, %dh
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2336:
	.loc 1 5232 0
	movl	target_flags_explicit@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L2340
	.loc 1 5238 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L2342
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L2344
.L2342:
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2345
.L2344:
	.loc 1 5239 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	orl	$2, %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 5238 0
	jmp	.L2340
.L2345:
	.loc 1 5241 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	andl	$-3, %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2340:
	.loc 1 5262 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2346
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2346
	.loc 1 5263 0
	movl	flag_pcc_struct_return@GOT(%ebx), %eax
	movl	$0, (%eax)
.L2346:
	.loc 1 5265 0
	movl	target_flags_explicit@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$33554432, %eax
	testl	%eax, %eax
	jne	.L2349
	.loc 1 5282 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2351
	movl	mips_arch@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$13, %eax
	je	.L2351
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L2351
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L2351
	.loc 1 5283 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	orl	$33554432, %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 5282 0
	jmp	.L2349
.L2351:
	.loc 1 5285 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	andl	$-33554433, %edx
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2349:
	.loc 1 5287 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$33554432, %eax
	testl	%eax, %eax
	je	.L2356
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2358
	movl	mips_arch@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$13, %eax
	jne	.L2356
.L2358:
	.loc 1 5288 0
	leal	.LC179@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L2356:
	.loc 1 5294 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L2360
	.loc 1 5296 0
	movl	mips_abicalls@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 5297 0
	movl	flag_pic@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 5298 0
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jle	.L2364
	.loc 1 5299 0
	leal	.LC180@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	jmp	.L2364
.L2360:
	.loc 1 5302 0
	movl	mips_abicalls@GOT(%ebx), %eax
	movl	$0, (%eax)
.L2364:
	.loc 1 5311 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L2365
	.loc 1 5313 0
	movl	flag_pic@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 5314 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L2367
	.loc 1 5315 0
	leal	.LC181@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L2367:
	.loc 1 5317 0
	movl	g_switch_set@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2369
	.loc 1 5318 0
	leal	.LC182@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L2369:
	.loc 1 5325 0
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	$2147483647, (%eax)
.L2365:
	.loc 1 5335 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L2371
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L2371
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$4, %eax
	testl	%eax, %eax
	je	.L2371
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2371
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2371
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2377
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L2371
.L2377:
	.loc 1 5337 0
	movl	mips_split_addresses@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 5335 0
	jmp	.L2379
.L2371:
	.loc 1 5339 0
	movl	mips_split_addresses@GOT(%ebx), %eax
	movl	$0, (%eax)
.L2379:
	.loc 1 5346 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$32, %eax
	testl	%eax, %eax
	je	.L2380
	.loc 1 5347 0
	movl	mips_reg_names@GOT(%ebx), %eax
	movl	mips_sw_reg_names@GOT(%ebx), %edx
	movl	%eax, %ecx
	movl	$1408, %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	memcpy@PLT
.L2380:
	.loc 1 5351 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2382
	.loc 1 5353 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L2384
	.loc 1 5354 0
	movl	mips16_hard_float@GOT(%ebx), %eax
	movl	$0, (%eax)
	jmp	.L2386
.L2384:
	.loc 1 5356 0
	movl	mips16_hard_float@GOT(%ebx), %eax
	movl	$1, (%eax)
.L2386:
	.loc 1 5357 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	orb	$1, %dh
	movl	target_flags@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 5361 0
	movl	flag_schedule_insns@GOT(%ebx), %eax
	movl	$0, (%eax)
.L2382:
	.loc 1 5366 0
	movl	mips_entry_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2387
	.loc 1 5368 0
	movl	mips_entry_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	.L2389
	.loc 1 5369 0
	movl	mips_entry_string@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC183@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2389:
	.loc 1 5371 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L2391
	.loc 1 5372 0
	leal	.LC184@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	jmp	.L2387
.L2391:
	.loc 1 5374 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	$1, (%eax)
.L2387:
	.loc 1 5379 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2393
	.loc 1 5380 0
	movl	mips16@GOT(%ebx), %eax
	movl	$1, (%eax)
	jmp	.L2395
.L2393:
	.loc 1 5382 0
	movl	mips16@GOT(%ebx), %eax
	movl	$0, (%eax)
.L2395:
	.loc 1 5388 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 63(%eax)
	.loc 1 5389 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 35(%eax)
	.loc 1 5390 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 38(%eax)
	.loc 1 5391 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 33(%eax)
	.loc 1 5392 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 42(%eax)
	.loc 1 5393 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 64(%eax)
	.loc 1 5394 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 46(%eax)
	.loc 1 5395 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 40(%eax)
	.loc 1 5396 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 41(%eax)
	.loc 1 5397 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 91(%eax)
	.loc 1 5398 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 93(%eax)
	.loc 1 5399 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 60(%eax)
	.loc 1 5400 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 62(%eax)
	.loc 1 5401 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 123(%eax)
	.loc 1 5402 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 125(%eax)
	.loc 1 5403 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 94(%eax)
	.loc 1 5404 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 36(%eax)
	.loc 1 5405 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 43(%eax)
	.loc 1 5406 0
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movb	$1, 126(%eax)
	.loc 1 5408 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2396
	movl	$2, -120(%ebp)
	jmp	.L2398
.L2396:
	movl	$5, -120(%ebp)
.L2398:
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	-120(%ebp), %edx
	movl	%edx, 400(%eax)
	.loc 1 5409 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$1, 404(%eax)
	.loc 1 5410 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$3, 464(%eax)
	.loc 1 5411 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2399
	movl	$6, -116(%ebp)
	jmp	.L2401
.L2399:
	movl	$0, -116(%ebp)
.L2401:
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	-116(%ebp), %edx
	movl	%edx, 408(%eax)
	.loc 1 5412 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$7, 416(%eax)
	.loc 1 5413 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$8, 432(%eax)
	.loc 1 5414 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$9, 388(%eax)
	.loc 1 5415 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$10, 480(%eax)
	.loc 1 5416 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$24, 392(%eax)
	.loc 1 5417 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$5, 484(%eax)
	.loc 1 5418 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$23, 488(%eax)
	.loc 1 5419 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$11, 264(%eax)
	.loc 1 5420 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$12, 268(%eax)
	.loc 1 5421 0
	movl	mips_char_to_class@GOT(%ebx), %eax
	movl	$13, 272(%eax)
	.loc 1 5426 0
	movl	$0, -28(%ebp)
	jmp	.L2402
.L2403:
	.loc 1 5427 0
	movl	-28(%ebp), %edx
	movl	mips_dbx_regno@GOT(%ebx), %eax
	movl	$-1, (%eax,%edx,4)
	.loc 1 5426 0
	addl	$1, -28(%ebp)
.L2402:
	cmpl	$175, -28(%ebp)
	jle	.L2403
	.loc 1 5429 0
	movl	$0, -24(%ebp)
	.loc 1 5430 0
	movl	$0, -28(%ebp)
	jmp	.L2405
.L2406:
	.loc 1 5431 0
	movl	-28(%ebp), %ecx
	movl	-24(%ebp), %eax
	movl	-28(%ebp), %edx
	addl	%eax, %edx
	movl	mips_dbx_regno@GOT(%ebx), %eax
	movl	%edx, (%eax,%ecx,4)
	.loc 1 5430 0
	addl	$1, -28(%ebp)
.L2405:
	cmpl	$31, -28(%ebp)
	jle	.L2406
	.loc 1 5433 0
	movl	write_symbols@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2408
	movl	$6, -112(%ebp)
	jmp	.L2410
.L2408:
	movl	$0, -112(%ebp)
.L2410:
	movl	-112(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 5434 0
	movl	$32, -28(%ebp)
	jmp	.L2411
.L2412:
	.loc 1 5435 0
	movl	-28(%ebp), %ecx
	movl	-24(%ebp), %eax
	movl	-28(%ebp), %edx
	addl	%eax, %edx
	movl	mips_dbx_regno@GOT(%ebx), %eax
	movl	%edx, (%eax,%ecx,4)
	.loc 1 5434 0
	addl	$1, -28(%ebp)
.L2411:
	cmpl	$63, -28(%ebp)
	jle	.L2412
	.loc 1 5444 0
	movl	$0, -16(%ebp)
	.loc 1 5445 0
	jmp	.L2414
.L2415:
.LBB55:
	.loc 1 5448 0
	movl	-16(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -52(%ebp)
	.loc 1 5449 0
	movl	-16(%ebp), %edx
	movl	mode_class@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edx
	movl	%edx, -48(%ebp)
	.loc 1 5451 0
	movl	$0, -20(%ebp)
	jmp	.L2416
.L2417:
.LBB56:
	.loc 1 5455 0
	cmpl	$53, -16(%ebp)
	jne	.L2418
	.loc 1 5457 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2420
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L2420
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L2420
	.loc 1 5458 0
	cmpl	$67, -20(%ebp)
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -44(%ebp)
	.loc 1 5457 0
	jmp	.L2430
.L2420:
	.loc 1 5460 0
	movl	-20(%ebp), %eax
	subl	$67, %eax
	cmpl	$7, %eax
	jbe	.L2425
	movl	-20(%ebp), %eax
	cmpl	$31, %eax
	jbe	.L2425
	movl	-20(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L2428
.L2425:
	movl	$1, -108(%ebp)
	jmp	.L2429
.L2428:
	movl	$0, -108(%ebp)
.L2429:
	movl	-108(%ebp), %edx
	movl	%edx, -44(%ebp)
	jmp	.L2430
.L2418:
	.loc 1 5464 0
	movl	-20(%ebp), %eax
	cmpl	$31, %eax
	ja	.L2431
	.loc 1 5465 0
	movl	-20(%ebp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	je	.L2433
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2435
	movl	$8, -100(%ebp)
	jmp	.L2437
.L2435:
	movl	$4, -100(%ebp)
.L2437:
	movl	-52(%ebp), %eax
	cmpl	%eax, -100(%ebp)
	jl	.L2438
.L2433:
	movl	$1, -104(%ebp)
	jmp	.L2439
.L2438:
	movl	$0, -104(%ebp)
.L2439:
	movl	-104(%ebp), %edx
	movl	%edx, -44(%ebp)
	jmp	.L2430
.L2431:
	.loc 1 5467 0
	movl	-20(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L2440
	.loc 1 5468 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L2442
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L2444
.L2442:
	movl	$1, -92(%ebp)
	jmp	.L2445
.L2444:
	movl	$2, -92(%ebp)
.L2445:
	movl	-20(%ebp), %edx
	movl	%edx, %eax
	sarl	$31, %edx
	idivl	-92(%ebp)
	movl	%edx, %eax
	testl	%eax, %eax
	je	.L2446
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	jne	.L2448
	cmpl	$4, -52(%ebp)
	jg	.L2448
.L2446:
	cmpl	$2, -48(%ebp)
	je	.L2450
	cmpl	$6, -48(%ebp)
	jne	.L2452
.L2450:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L2453
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2455
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2457
.L2455:
	movl	$16, -84(%ebp)
	jmp	.L2458
.L2457:
	movl	$8, -84(%ebp)
.L2458:
	movl	-84(%ebp), %eax
	movl	%eax, -88(%ebp)
	jmp	.L2459
.L2453:
	movl	$0, -88(%ebp)
.L2459:
	movl	-52(%ebp), %edx
	cmpl	%edx, -88(%ebp)
	jge	.L2460
.L2452:
	cmpl	$1, -48(%ebp)
	jne	.L2461
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L2463
	movl	$8, -80(%ebp)
	jmp	.L2465
.L2463:
	movl	$4, -80(%ebp)
.L2465:
	movl	-52(%ebp), %eax
	cmpl	%eax, -80(%ebp)
	jge	.L2460
.L2461:
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2466
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L2466
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	jne	.L2448
.L2466:
	cmpl	$18, -16(%ebp)
	jne	.L2448
.L2460:
	movl	$1, -96(%ebp)
	jmp	.L2469
.L2448:
	movl	$0, -96(%ebp)
.L2469:
	movl	-96(%ebp), %edx
	movl	%edx, -44(%ebp)
	jmp	.L2430
.L2440:
	.loc 1 5485 0
	movl	-20(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L2470
	.loc 1 5486 0
	cmpl	$1, -48(%ebp)
	jne	.L2472
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2474
	movl	$8, -72(%ebp)
	jmp	.L2476
.L2474:
	movl	$4, -72(%ebp)
.L2476:
	movl	-52(%ebp), %eax
	cmpl	%eax, -72(%ebp)
	jge	.L2477
	cmpl	$64, -20(%ebp)
	jne	.L2472
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2480
	movl	$16, -68(%ebp)
	jmp	.L2482
.L2480:
	movl	$8, -68(%ebp)
.L2482:
	movl	-52(%ebp), %edx
	cmpl	%edx, -68(%ebp)
	jne	.L2472
.L2477:
	movl	$1, -76(%ebp)
	jmp	.L2483
.L2472:
	movl	$0, -76(%ebp)
.L2483:
	movl	-76(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2430
.L2470:
	.loc 1 5491 0
	movl	-20(%ebp), %eax
	subl	$80, %eax
	cmpl	$95, %eax
	ja	.L2484
	.loc 1 5492 0
	cmpl	$1, -48(%ebp)
	jne	.L2486
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2488
	movl	$8, -60(%ebp)
	jmp	.L2490
.L2488:
	movl	$4, -60(%ebp)
.L2490:
	movl	-52(%ebp), %edx
	cmpl	%edx, -60(%ebp)
	jl	.L2486
	movl	$1, -64(%ebp)
	jmp	.L2492
.L2486:
	movl	$0, -64(%ebp)
.L2492:
	movl	-64(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2430
.L2484:
	.loc 1 5494 0
	movl	$0, -44(%ebp)
.L2430:
	.loc 1 5496 0
	movl	-16(%ebp), %eax
	movl	-20(%ebp), %ecx
	movzbl	-44(%ebp), %esi
	movl	mips_hard_regno_mode_ok@GOT(%ebx), %edx
	imull	$176, %eax, %eax
	addl	%edx, %eax
	movl	%esi, %edx
	movb	%dl, (%eax,%ecx)
.LBE56:
	.loc 1 5451 0
	addl	$1, -20(%ebp)
.L2416:
	cmpl	$175, -20(%ebp)
	jle	.L2417
.LBE55:
	.loc 1 5446 0
	movl	-16(%ebp), %eax
	addl	$1, %eax
	movl	%eax, -16(%ebp)
.L2414:
	.loc 1 5445 0
	cmpl	$54, -16(%ebp)
	jne	.L2415
	.loc 1 5502 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2495
	movl	$5, -56(%ebp)
	jmp	.L2497
.L2495:
	movl	$4, -56(%ebp)
.L2497:
	movl	-56(%ebp), %eax
	movl	%eax, gpr_mode@GOTOFF(%ebx)
	.loc 1 5505 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2498
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L2498
	.loc 1 5507 0
	movl	align_loops@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2501
	.loc 1 5508 0
	movl	align_loops@GOT(%ebx), %eax
	movl	$8, (%eax)
.L2501:
	.loc 1 5509 0
	movl	align_jumps@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2503
	.loc 1 5510 0
	movl	align_jumps@GOT(%ebx), %eax
	movl	$8, (%eax)
.L2503:
	.loc 1 5511 0
	movl	align_functions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2498
	.loc 1 5512 0
	movl	align_functions@GOT(%ebx), %eax
	movl	$8, (%eax)
.L2498:
	.loc 1 5516 0
	movl	init_machine_status@GOT(%ebx), %edx
	leal	mips_init_machine_status@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 5517 0
	subl	$-128, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE100:
	.size	override_options, .-override_options
.globl mips_conditional_register_usage
	.type	mips_conditional_register_usage, @function
mips_conditional_register_usage:
.LFB101:
	.loc 1 5523 0
	pushl	%ebp
.LCFI336:
	movl	%esp, %ebp
.LCFI337:
	pushl	%ebx
.LCFI338:
	subl	$16, %esp
.LCFI339:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5524 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L2508
.LBB57:
	.loc 1 5528 0
	movl	$32, -20(%ebp)
	jmp	.L2510
.L2511:
	.loc 1 5529 0
	movl	-20(%ebp), %ecx
	movl	-20(%ebp), %edx
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, (%eax,%edx)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, (%eax,%ecx)
	.loc 1 5528 0
	addl	$1, -20(%ebp)
.L2510:
	cmpl	$63, -20(%ebp)
	jle	.L2511
	.loc 1 5530 0
	movl	$67, -20(%ebp)
	jmp	.L2513
.L2514:
	.loc 1 5531 0
	movl	-20(%ebp), %ecx
	movl	-20(%ebp), %edx
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, (%eax,%edx)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, (%eax,%ecx)
	.loc 1 5530 0
	addl	$1, -20(%ebp)
.L2513:
	cmpl	$74, -20(%ebp)
	jle	.L2514
	jmp	.L2516
.L2508:
.LBE57:
	.loc 1 5533 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2516
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$32, %eax
	je	.L2516
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$64, %eax
	je	.L2516
.LBB58:
	.loc 1 5540 0
	movl	$67, -16(%ebp)
	jmp	.L2520
.L2521:
	.loc 1 5541 0
	movl	-16(%ebp), %ecx
	movl	-16(%ebp), %edx
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, (%eax,%edx)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, (%eax,%ecx)
	.loc 1 5540 0
	addl	$1, -16(%ebp)
.L2520:
	cmpl	$74, -16(%ebp)
	jle	.L2521
.L2516:
.LBE58:
	.loc 1 5547 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2522
	.loc 1 5549 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 18(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	18(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 18(%eax)
	.loc 1 5550 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 19(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	19(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 19(%eax)
	.loc 1 5551 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 20(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	20(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 20(%eax)
	.loc 1 5552 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 21(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	21(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 21(%eax)
	.loc 1 5553 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 22(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	22(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 22(%eax)
	.loc 1 5554 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 23(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	23(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 23(%eax)
	.loc 1 5555 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 26(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	26(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 26(%eax)
	.loc 1 5556 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 27(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	27(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 27(%eax)
	.loc 1 5557 0
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, 30(%eax)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	30(%eax), %edx
	movl	fixed_regs@GOT(%ebx), %eax
	movb	%dl, 30(%eax)
.L2522:
	.loc 1 5560 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L2524
.LBB59:
	.loc 1 5563 0
	movl	$52, -12(%ebp)
	jmp	.L2526
.L2527:
	.loc 1 5564 0
	movl	-12(%ebp), %ecx
	movl	-12(%ebp), %edx
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, (%eax,%edx)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %edx
	movl	call_really_used_regs@GOT(%ebx), %eax
	movb	%dl, (%eax,%ecx)
	.loc 1 5563 0
	addl	$1, -12(%ebp)
.L2526:
	cmpl	$55, -12(%ebp)
	jle	.L2527
.L2524:
.LBE59:
	.loc 1 5567 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L2528
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	jne	.L2533
.L2528:
.LBB60:
	.loc 1 5570 0
	movl	$53, -8(%ebp)
	jmp	.L2531
.L2532:
	.loc 1 5571 0
	movl	-8(%ebp), %ecx
	movl	-8(%ebp), %edx
	movl	call_used_regs@GOT(%ebx), %eax
	movb	$1, (%eax,%edx)
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %edx
	movl	call_really_used_regs@GOT(%ebx), %eax
	movb	%dl, (%eax,%ecx)
	.loc 1 5570 0
	addl	$2, -8(%ebp)
.L2531:
	cmpl	$63, -8(%ebp)
	jle	.L2532
.L2533:
.LBE60:
	.loc 1 5573 0
	addl	$16, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE101:
	.size	mips_conditional_register_usage, .-mips_conditional_register_usage
	.type	mips_init_machine_status, @function
mips_init_machine_status:
.LFB102:
	.loc 1 5578 0
	pushl	%ebp
.LCFI340:
	movl	%esp, %ebp
.LCFI341:
	pushl	%ebx
.LCFI342:
	subl	$4, %esp
.LCFI343:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5579 0
	movl	$72, (%esp)
	call	ggc_alloc_cleared@PLT
	.loc 1 5581 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE102:
	.size	mips_init_machine_status, .-mips_init_machine_status
.globl mips_order_regs_for_local_alloc
	.type	mips_order_regs_for_local_alloc, @function
mips_order_regs_for_local_alloc:
.LFB103:
	.loc 1 5590 0
	pushl	%ebp
.LCFI344:
	movl	%esp, %ebp
.LCFI345:
	pushl	%ebx
.LCFI346:
	subl	$4, %esp
.LCFI347:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5593 0
	movl	$0, -8(%ebp)
	jmp	.L2537
.L2538:
	.loc 1 5594 0
	movl	-8(%ebp), %edx
	movl	reg_alloc_order@GOT(%ebx), %eax
	movl	-8(%ebp), %ecx
	movl	%ecx, (%eax,%edx,4)
	.loc 1 5593 0
	addl	$1, -8(%ebp)
.L2537:
	cmpl	$175, -8(%ebp)
	jle	.L2538
	.loc 1 5596 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2542
	.loc 1 5600 0
	movl	reg_alloc_order@GOT(%ebx), %eax
	movl	$24, (%eax)
	.loc 1 5601 0
	movl	reg_alloc_order@GOT(%ebx), %eax
	movl	$0, 96(%eax)
.L2542:
	.loc 1 5603 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE103:
	.size	mips_order_regs_for_local_alloc, .-mips_order_regs_for_local_alloc
.globl mips_debugger_offset
	.type	mips_debugger_offset, @function
mips_debugger_offset:
.LFB104:
	.loc 1 5619 0
	pushl	%ebp
.LCFI348:
	movl	%esp, %ebp
.LCFI349:
	pushl	%ebx
.LCFI350:
	subl	$52, %esp
.LCFI351:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	12(%ebp), %eax
	movl	%eax, -32(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 5620 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 5621 0
	leal	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	eliminate_constant_term@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5623 0
	movl	-32(%ebp), %eax
	orl	-28(%ebp), %eax
	testl	%eax, %eax
	jne	.L2544
	.loc 1 5624 0
	movl	-16(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	movl	%edx, -28(%ebp)
.L2544:
	.loc 1 5626 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	cmpl	-12(%ebp), %eax
	je	.L2546
	movl	global_rtl@GOT(%ebx), %eax
	movl	12(%eax), %eax
	cmpl	-12(%ebp), %eax
	je	.L2546
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L2549
.L2546:
.LBB61:
	.loc 1 5631 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L2550
	call	get_frame_size@PLT
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	compute_frame_size@PLT
	movl	%eax, -40(%ebp)
	movl	%edx, -36(%ebp)
	jmp	.L2552
.L2550:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -40(%ebp)
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%edx, -36(%ebp)
.L2552:
	movl	-40(%ebp), %eax
	movl	-36(%ebp), %edx
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	.loc 1 5634 0
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2553
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2553
	.loc 1 5635 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	subl	%eax, -24(%ebp)
	sbbl	%edx, -20(%ebp)
.L2553:
	.loc 1 5637 0
	movl	-24(%ebp), %eax
	movl	-20(%ebp), %edx
	subl	%eax, -32(%ebp)
	sbbl	%edx, -28(%ebp)
.L2549:
.LBE61:
	.loc 1 5646 0
	movl	-32(%ebp), %eax
	movl	-28(%ebp), %edx
	.loc 1 5647 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE104:
	.size	mips_debugger_offset, .-mips_debugger_offset
	.section	.rodata
	.type	__FUNCTION__.21240, @object
	.size	__FUNCTION__.21240, 14
__FUNCTION__.21240:
	.string	"print_operand"
.LC185:
	.string	".set\tnoreorder\n\t"
.LC186:
	.string	".set\tnomacro\n\t"
.LC187:
	.string	"\n\t.set\tnomacro"
.LC188:
	.string	"\n\tnop"
.LC189:
	.string	"\n\t#nop"
	.align 4
.LC190:
	.string	"internal error: %%) found without a %%( in assembler pattern"
.LC191:
	.string	"\n\t.set\treorder"
.LC192:
	.string	".set\tnoat\n\t"
	.align 4
.LC193:
	.string	"internal error: %%] found without a %%[ in assembler pattern"
.LC194:
	.string	"\n\t.set\tat"
	.align 4
.LC195:
	.string	"internal error: %%> found without a %%< in assembler pattern"
.LC196:
	.string	"\n\t.set\tmacro"
.LC197:
	.string	"#"
.LC198:
	.string	"%s.set\tvolatile\n\t"
	.align 4
.LC199:
	.string	"internal error: %%} found without a %%{ in assembler pattern"
.LC200:
	.string	"\n\t%s.set\tnovolatile"
.LC201:
	.string	"\t.align\t%d\n"
	.align 4
.LC202:
	.string	"PRINT_OPERAND: unknown punctuation '%c'"
.LC203:
	.string	"PRINT_OPERAND null pointer"
.LC204:
	.string	"eq"
.LC205:
	.string	"ne"
.LC206:
	.string	"gt"
.LC207:
	.string	"ge"
.LC208:
	.string	"lt"
.LC209:
	.string	"le"
.LC210:
	.string	"gtu"
.LC211:
	.string	"geu"
.LC212:
	.string	"ltu"
.LC213:
	.string	"leu"
	.align 4
.LC214:
	.string	"PRINT_OPERAND, invalid insn for %%C"
	.align 4
.LC215:
	.string	"PRINT_OPERAND, invalid insn for %%N"
.LC216:
	.string	"c1f"
.LC217:
	.string	"c1t"
	.align 4
.LC218:
	.string	"PRINT_OPERAND, invalid insn for %%F"
	.align 4
.LC219:
	.string	"PRINT_OPERAND, invalid insn for %%W"
.LC220:
	.string	"LS"
.LC221:
	.string	"*%s%s%ld"
.LC222:
	.string	"%s,"
.LC223:
	.string	"0x%llx"
.LC224:
	.string	"%lld"
	.align 4
.LC225:
	.string	"invalid use of %%d, %%x, or %%X"
.LC226:
	.string	"z"
.LC227:
	.string	"n"
.LC228:
	.string	"f"
.LC229:
	.string	"t"
.LC230:
	.string	"%gprel("
	.text
.globl print_operand
	.type	print_operand, @function
print_operand:
.LFB105:
	.loc 1 5713 0
	pushl	%ebp
.LCFI352:
	movl	%esp, %ebp
.LCFI353:
	pushl	%edi
.LCFI354:
	pushl	%esi
.LCFI355:
	pushl	%ebx
.LCFI356:
	subl	$188, %esp
.LCFI357:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -128(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -132(%ebp)
	.loc 1 5713 0
	movl	%gs:20, %eax
	movl	%eax, -16(%ebp)
	xorl	%eax, %eax
	.loc 1 5716 0
	movl	16(%ebp), %edx
	movl	mips_print_operand_punct@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	testb	%al, %al
	je	.L2558
	.loc 1 5718 0
	movl	16(%ebp), %eax
	subl	$33, %eax
	movl	%eax, -172(%ebp)
	cmpl	$93, -172(%ebp)
	ja	.L2560
	movl	-172(%ebp), %eax
	sall	$2, %eax
	movl	.L2580@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L2580:
	.long	.L2561@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2562@GOTOFF
	.long	.L2563@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2564@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2565@GOTOFF
	.long	.L2566@GOTOFF
	.long	.L2567@GOTOFF
	.long	.L2568@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2569@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2570@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2571@GOTOFF
	.long	.L2572@GOTOFF
	.long	.L2573@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2574@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2575@GOTOFF
	.long	.L2576@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2577@GOTOFF
	.long	.L2560@GOTOFF
	.long	.L2578@GOTOFF
	.long	.L2579@GOTOFF
	.text
.L2572:
	.loc 1 5721 0
	movl	mips_branch_likely@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2752
	.loc 1 5722 0
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$108, (%esp)
	call	putc_unlocked@PLT
	.loc 1 5723 0
	jmp	.L2752
.L2573:
	.loc 1 5726 0
	movl	reg_names@GOT(%ebx), %eax
	movl	4(%eax), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 5727 0
	jmp	.L2752
.L2576:
	.loc 1 5730 0
	movl	reg_names@GOT(%ebx), %eax
	movl	100(%eax), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 5731 0
	jmp	.L2752
.L2569:
	.loc 1 5734 0
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 5735 0
	jmp	.L2752
.L2563:
	.loc 1 5738 0
	movl	reg_names@GOT(%ebx), %eax
	movl	116(%eax), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 5739 0
	jmp	.L2752
.L2568:
	.loc 1 5742 0
	movl	reg_names@GOT(%ebx), %eax
	movl	112(%eax), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 5743 0
	jmp	.L2752
.L2564:
	.loc 1 5746 0
	movl	final_sequence@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2752
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_noreorder@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2752
	.loc 1 5747 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$16, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC185@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5748 0
	jmp	.L2752
.L2567:
	.loc 1 5751 0
	movl	final_sequence@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2752
	.loc 1 5753 0
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_noreorder@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2589
	.loc 1 5754 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$16, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC185@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
.L2589:
	.loc 1 5756 0
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_nomacro@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2752
	.loc 1 5757 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC186@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5759 0
	jmp	.L2752
.L2561:
	.loc 1 5762 0
	movl	final_sequence@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2752
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_nomacro@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2752
	.loc 1 5763 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC187@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5764 0
	jmp	.L2752
.L2562:
	.loc 1 5767 0
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2595
	.loc 1 5768 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$5, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC188@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2595:
	.loc 1 5769 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L2752
	.loc 1 5770 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$6, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC189@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5772 0
	jmp	.L2752
.L2565:
	.loc 1 5775 0
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_noreorder@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2752
	.loc 1 5776 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$16, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC185@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5777 0
	jmp	.L2752
.L2566:
	.loc 1 5780 0
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2601
	.loc 1 5781 0
	leal	.LC190@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2752
.L2601:
	.loc 1 5783 0
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	-1(%eax), %edx
	movl	set_noreorder@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_noreorder@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2752
	.loc 1 5784 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC191@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5786 0
	jmp	.L2752
.L2574:
	.loc 1 5789 0
	movl	set_noat@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_noat@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_noat@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2752
	.loc 1 5790 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$11, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC192@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5791 0
	jmp	.L2752
.L2575:
	.loc 1 5794 0
	movl	set_noat@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2607
	.loc 1 5795 0
	leal	.LC193@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2752
.L2607:
	.loc 1 5796 0
	movl	set_noat@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	-1(%eax), %edx
	movl	set_noat@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_noat@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2752
	.loc 1 5797 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$9, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC194@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5799 0
	jmp	.L2752
.L2570:
	.loc 1 5802 0
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_nomacro@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2752
	.loc 1 5803 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC186@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5804 0
	jmp	.L2752
.L2571:
	.loc 1 5807 0
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2613
	.loc 1 5808 0
	leal	.LC195@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2752
.L2613:
	.loc 1 5809 0
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	-1(%eax), %edx
	movl	set_nomacro@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_nomacro@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2752
	.loc 1 5810 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$12, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC196@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5812 0
	jmp	.L2752
.L2577:
	.loc 1 5815 0
	movl	set_volatile@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	set_volatile@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_volatile@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2752
	.loc 1 5816 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2619
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -168(%ebp)
	jmp	.L2621
.L2619:
	leal	.LC197@GOTOFF(%ebx), %eax
	movl	%eax, -168(%ebp)
.L2621:
	movl	-168(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC198@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 5817 0
	jmp	.L2752
.L2578:
	.loc 1 5820 0
	movl	set_volatile@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2622
	.loc 1 5821 0
	leal	.LC199@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2752
.L2622:
	.loc 1 5822 0
	movl	set_volatile@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	-1(%eax), %edx
	movl	set_volatile@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	set_volatile@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2752
	.loc 1 5823 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2626
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -164(%ebp)
	jmp	.L2628
.L2626:
	leal	.LC197@GOTOFF(%ebx), %eax
	movl	%eax, -164(%ebp)
.L2628:
	movl	-164(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC200@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 5825 0
	jmp	.L2752
.L2579:
	.loc 1 5829 0
	movl	align_labels_log@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jle	.L2752
	.loc 1 5830 0
	movl	align_labels_log@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC201@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 5832 0
	jmp	.L2752
.L2560:
	.loc 1 5835 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC202@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5839 0
	jmp	.L2752
.L2558:
	.loc 1 5842 0
	cmpl	$0, -132(%ebp)
	jne	.L2632
	.loc 1 5844 0
	leal	.LC203@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5845 0
	jmp	.L2752
.L2632:
	.loc 1 5848 0
	movl	-132(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -144(%ebp)
	.loc 1 5850 0
	cmpl	$130, -144(%ebp)
	jne	.L2634
	.loc 1 5851 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -132(%ebp)
	movl	-132(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -144(%ebp)
.L2634:
	.loc 1 5853 0
	cmpl	$67, 16(%ebp)
	jne	.L2636
	.loc 1 5854 0
	movl	-144(%ebp), %eax
	subl	$112, %eax
	movl	%eax, -176(%ebp)
	cmpl	$9, -176(%ebp)
	ja	.L2638
	movl	-176(%ebp), %eax
	sall	$2, %eax
	movl	.L2649@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L2649:
	.long	.L2639@GOTOFF
	.long	.L2640@GOTOFF
	.long	.L2641@GOTOFF
	.long	.L2642@GOTOFF
	.long	.L2643@GOTOFF
	.long	.L2644@GOTOFF
	.long	.L2645@GOTOFF
	.long	.L2646@GOTOFF
	.long	.L2647@GOTOFF
	.long	.L2648@GOTOFF
	.text
.L2640:
	.loc 1 5856 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC204@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2639:
	.loc 1 5857 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC205@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2642:
	.loc 1 5858 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC206@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2641:
	.loc 1 5859 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC207@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2644:
	.loc 1 5860 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC208@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2643:
	.loc 1 5861 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC209@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2646:
	.loc 1 5862 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC210@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2645:
	.loc 1 5863 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC211@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2648:
	.loc 1 5864 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC212@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2647:
	.loc 1 5865 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC213@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2638:
	.loc 1 5867 0
	leal	.LC214@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2636:
	.loc 1 5870 0
	cmpl	$78, 16(%ebp)
	jne	.L2651
	.loc 1 5871 0
	movl	-144(%ebp), %eax
	subl	$112, %eax
	movl	%eax, -180(%ebp)
	cmpl	$9, -180(%ebp)
	ja	.L2653
	movl	-180(%ebp), %eax
	sall	$2, %eax
	movl	.L2664@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L2664:
	.long	.L2654@GOTOFF
	.long	.L2655@GOTOFF
	.long	.L2656@GOTOFF
	.long	.L2657@GOTOFF
	.long	.L2658@GOTOFF
	.long	.L2659@GOTOFF
	.long	.L2660@GOTOFF
	.long	.L2661@GOTOFF
	.long	.L2662@GOTOFF
	.long	.L2663@GOTOFF
	.text
.L2655:
	.loc 1 5873 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC205@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2654:
	.loc 1 5874 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC204@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2657:
	.loc 1 5875 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC209@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2656:
	.loc 1 5876 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC208@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2659:
	.loc 1 5877 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC207@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2658:
	.loc 1 5878 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC206@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2661:
	.loc 1 5879 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC213@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2660:
	.loc 1 5880 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC212@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2663:
	.loc 1 5881 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC211@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2662:
	.loc 1 5882 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC210@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2653:
	.loc 1 5884 0
	leal	.LC215@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2651:
	.loc 1 5887 0
	cmpl	$70, 16(%ebp)
	jne	.L2666
	.loc 1 5888 0
	cmpl	$112, -144(%ebp)
	je	.L2669
	cmpl	$113, -144(%ebp)
	je	.L2670
	jmp	.L2668
.L2670:
	.loc 1 5890 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC216@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2669:
	.loc 1 5891 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC217@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2668:
	.loc 1 5893 0
	leal	.LC218@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2666:
	.loc 1 5896 0
	cmpl	$87, 16(%ebp)
	jne	.L2672
	.loc 1 5897 0
	cmpl	$112, -144(%ebp)
	je	.L2675
	cmpl	$113, -144(%ebp)
	je	.L2676
	jmp	.L2674
.L2676:
	.loc 1 5899 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC217@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2675:
	.loc 1 5900 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$3, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC216@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2674:
	.loc 1 5902 0
	leal	.LC219@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2672:
	.loc 1 5905 0
	cmpl	$83, 16(%ebp)
	jne	.L2678
.LBB62:
	.loc 1 5909 0
	movl	-132(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, 16(%esp)
	leal	.LC220@GOTOFF(%ebx), %eax
	movl	%eax, 12(%esp)
	leal	.LC39@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC221@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	-116(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 5910 0
	leal	-116(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	assemble_name@PLT
	jmp	.L2752
.L2678:
.LBE62:
	.loc 1 5913 0
	cmpl	$90, 16(%ebp)
	jne	.L2680
.LBB63:
	.loc 1 5917 0
	cmpl	$71, -144(%ebp)
	je	.L2682
	.loc 1 5918 0
	leal	__FUNCTION__.21240@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$5918, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2682:
	.loc 1 5920 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -140(%ebp)
	.loc 1 5921 0
	movl	-140(%ebp), %eax
	subl	$67, %eax
	cmpl	$7, %eax
	jbe	.L2684
	.loc 1 5922 0
	leal	__FUNCTION__.21240@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$5922, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2684:
	.loc 1 5924 0
	cmpl	$67, -140(%ebp)
	je	.L2752
	.loc 1 5925 0
	movl	-140(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%eax, 8(%esp)
	leal	.LC222@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	jmp	.L2752
.L2680:
.LBE63:
	.loc 1 5928 0
	cmpl	$71, -144(%ebp)
	je	.L2688
	cmpl	$73, -144(%ebp)
	jne	.L2690
.L2688:
.LBB64:
	.loc 1 5932 0
	cmpl	$71, -144(%ebp)
	jne	.L2691
	.loc 1 5933 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -136(%ebp)
	jmp	.L2693
.L2691:
	.loc 1 5935 0
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	call	true_regnum@PLT
	movl	%eax, -136(%ebp)
.L2693:
	.loc 1 5937 0
	cmpl	$77, 16(%ebp)
	jne	.L2694
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L2696
.L2694:
	cmpl	$76, 16(%ebp)
	jne	.L2697
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	jne	.L2696
.L2697:
	cmpl	$68, 16(%ebp)
	jne	.L2699
.L2696:
	.loc 1 5940 0
	addl	$1, -136(%ebp)
.L2699:
	.loc 1 5942 0
	movl	-136(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs@PLT
	.loc 1 5928 0
	jmp	.L2752
.L2690:
.LBE64:
	.loc 1 5945 0
	cmpl	$76, -144(%ebp)
	jne	.L2700
	.loc 1 5947 0
	cmpl	$68, 16(%ebp)
	jne	.L2702
	.loc 1 5948 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 4(%esp)
	movl	$0, 8(%esp)
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, (%esp)
	call	output_address@PLT
	jmp	.L2752
.L2702:
	.loc 1 5950 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	output_address@PLT
	jmp	.L2752
.L2700:
	.loc 1 5953 0
	cmpl	$65, -144(%ebp)
	jne	.L2705
	movl	-132(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_class@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	$2, %eax
	jne	.L2705
.LBB65:
	.loc 1 5958 0
	movl	-132(%ebp), %eax
	addl	$4, %eax
	movl	$1, 16(%esp)
	movl	$0, 12(%esp)
	movl	$60, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-116(%ebp), %eax
	movl	%eax, (%esp)
	call	real_to_decimal@PLT
	.loc 1 5959 0
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-116(%ebp), %eax
	movl	%eax, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 5953 0
	jmp	.L2752
.L2705:
.LBE65:
	.loc 1 5962 0
	cmpl	$120, 16(%ebp)
	jne	.L2708
	movl	-132(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L2708
	.loc 1 5963 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %esi
	movl	8(%eax), %edi
	movl	%esi, %eax
	andl	$65535, %eax
	movl	%edi, %edx
	andl	$0, %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	leal	.LC223@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 5962 0
	jmp	.L2752
.L2708:
	.loc 1 5965 0
	cmpl	$88, 16(%ebp)
	jne	.L2711
	movl	-132(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L2711
	.loc 1 5966 0
	movl	-132(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	leal	.LC223@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 5965 0
	jmp	.L2752
.L2711:
	.loc 1 5968 0
	cmpl	$100, 16(%ebp)
	jne	.L2714
	movl	-132(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L2714
	.loc 1 5969 0
	movl	-132(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	leal	.LC224@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 5968 0
	jmp	.L2752
.L2714:
	.loc 1 5971 0
	cmpl	$122, 16(%ebp)
	jne	.L2717
	movl	-132(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L2717
	movl	-132(%ebp), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L2717
	.loc 1 5972 0
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 5971 0
	jmp	.L2752
.L2717:
	.loc 1 5974 0
	cmpl	$100, 16(%ebp)
	je	.L2721
	cmpl	$120, 16(%ebp)
	je	.L2721
	cmpl	$88, 16(%ebp)
	jne	.L2724
.L2721:
	.loc 1 5975 0
	leal	.LC225@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_operand_lossage@PLT
	.loc 1 5974 0
	jmp	.L2752
.L2724:
	.loc 1 5977 0
	cmpl	$66, 16(%ebp)
	jne	.L2725
	.loc 1 5978 0
	cmpl	$113, -144(%ebp)
	jne	.L2727
	leal	.LC226@GOTOFF(%ebx), %eax
	movl	%eax, -160(%ebp)
	jmp	.L2729
.L2727:
	leal	.LC227@GOTOFF(%ebx), %eax
	movl	%eax, -160(%ebp)
.L2729:
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	movl	-160(%ebp), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2725:
	.loc 1 5979 0
	cmpl	$98, 16(%ebp)
	jne	.L2730
	.loc 1 5980 0
	cmpl	$113, -144(%ebp)
	jne	.L2732
	leal	.LC227@GOTOFF(%ebx), %eax
	movl	%eax, -156(%ebp)
	jmp	.L2734
.L2732:
	leal	.LC226@GOTOFF(%ebx), %eax
	movl	%eax, -156(%ebp)
.L2734:
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	movl	-156(%ebp), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2730:
	.loc 1 5981 0
	cmpl	$84, 16(%ebp)
	jne	.L2735
	.loc 1 5982 0
	cmpl	$113, -144(%ebp)
	jne	.L2737
	leal	.LC228@GOTOFF(%ebx), %eax
	movl	%eax, -152(%ebp)
	jmp	.L2739
.L2737:
	leal	.LC229@GOTOFF(%ebx), %eax
	movl	%eax, -152(%ebp)
.L2739:
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2735:
	.loc 1 5983 0
	cmpl	$116, 16(%ebp)
	jne	.L2740
	.loc 1 5984 0
	cmpl	$113, -144(%ebp)
	jne	.L2742
	leal	.LC229@GOTOFF(%ebx), %eax
	movl	%eax, -148(%ebp)
	jmp	.L2744
.L2742:
	leal	.LC228@GOTOFF(%ebx), %eax
	movl	%eax, -148(%ebp)
.L2744:
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	movl	-148(%ebp), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	jmp	.L2752
.L2740:
	.loc 1 5986 0
	cmpl	$68, -144(%ebp)
	jne	.L2745
	movl	-132(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L2745
	.loc 1 5989 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %edx
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	print_operand@PLT
	.loc 1 5986 0
	jmp	.L2752
.L2745:
	.loc 1 5992 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2748
	cmpl	$68, -144(%ebp)
	jne	.L2748
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_gp_offset_p@PLT
	testl	%eax, %eax
	je	.L2748
	.loc 1 5994 0
	movl	-128(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$7, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC230@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 5995 0
	movl	-132(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_output_gp_offset
	.loc 1 5996 0
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$41, (%esp)
	call	fputc_unlocked@PLT
	.loc 1 5992 0
	jmp	.L2752
.L2748:
	.loc 1 6000 0
	movl	-132(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	output_addr_const@PLT
.L2752:
	.loc 1 6001 0
	movl	-16(%ebp), %eax
	xorl	%gs:20, %eax
	je	.L2753
	call	__stack_chk_fail_local
.L2753:
	addl	$188, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE105:
	.size	print_operand, .-print_operand
	.section	.rodata
	.align 4
.LC231:
	.string	"PRINT_OPERAND_ADDRESS, null pointer"
.LC232:
	.string	"arg pointer not eliminated"
.LC233:
	.string	"0(%s)"
	.align 4
.LC234:
	.string	"PRINT_OPERAND_ADDRESS, Spurious LO_SUM"
	.align 4
.LC235:
	.string	"PRINT_OPERAND_ADDRESS, LO_SUM with #1 not REG"
.LC236:
	.string	"%%lo("
.LC237:
	.string	")(%s)"
.LC238:
	.string	"PRINT_OPERAND_ADDRESS, 2 regs"
	.align 4
.LC239:
	.string	"PRINT_OPERAND_ADDRESS, no regs"
	.align 4
.LC240:
	.string	"PRINT_OPERAND_ADDRESS, invalid insn #2"
.LC241:
	.string	"(%s)"
	.align 4
.LC242:
	.string	"PRINT_OPERAND_ADDRESS, invalid insn #1"
	.text
.globl print_operand_address
	.type	print_operand_address, @function
print_operand_address:
.LFB106:
	.loc 1 6011 0
	pushl	%ebp
.LCFI358:
	movl	%esp, %ebp
.LCFI359:
	pushl	%ebx
.LCFI360:
	subl	$52, %esp
.LCFI361:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6012 0
	cmpl	$0, 12(%ebp)
	jne	.L2755
	.loc 1 6013 0
	leal	.LC231@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2811
.L2755:
	.loc 1 6016 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -32(%ebp)
	cmpl	$78, -32(%ebp)
	ja	.L2763
	cmpl	$77, -32(%ebp)
	jae	.L2759
	cmpl	$68, -32(%ebp)
	je	.L2759
	cmpl	$71, -32(%ebp)
	je	.L2760
	cmpl	$64, -32(%ebp)
	je	.L2759
	jmp	.L2758
.L2763:
	cmpl	$85, -32(%ebp)
	je	.L2761
	cmpl	$145, -32(%ebp)
	je	.L2762
	jmp	.L2758
.L2760:
	.loc 1 6019 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L2764
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L2764
	.loc 1 6020 0
	leal	.LC232@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2764:
	.loc 1 6022 0
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%eax, 8(%esp)
	leal	.LC233@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 6023 0
	jmp	.L2811
.L2762:
.LBB66:
	.loc 1 6027 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 6028 0
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 6030 0
	movl	mips_split_addresses@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2767
	.loc 1 6031 0
	leal	.LC234@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2767:
	.loc 1 6033 0
	movl	-28(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$71, %ax
	je	.L2769
	.loc 1 6034 0
	leal	.LC235@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2769:
	.loc 1 6037 0
	leal	.LC236@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 6038 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	print_operand_address@PLT
	.loc 1 6039 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%eax, 8(%esp)
	leal	.LC237@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 6041 0
	jmp	.L2811
.L2761:
.LBE66:
.LBB67:
	.loc 1 6047 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 6048 0
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6050 0
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$71, %ax
	jne	.L2771
	.loc 1 6052 0
	movl	-12(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 6053 0
	movl	-8(%ebp), %edx
	movl	%edx, -16(%ebp)
	.loc 1 6054 0
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$71, %ax
	jne	.L2775
	.loc 1 6055 0
	leal	.LC238@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2771:
	.loc 1 6058 0
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$71, %ax
	jne	.L2776
	.loc 1 6059 0
	movl	-8(%ebp), %eax
	movl	%eax, -20(%ebp)
	movl	-12(%ebp), %edx
	movl	%edx, -16(%ebp)
	jmp	.L2775
.L2776:
	.loc 1 6060 0
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$77, %ax
	je	.L2778
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$78, %ax
	je	.L2778
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$64, %ax
	je	.L2778
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$65, %ax
	je	.L2778
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$68, %ax
	je	.L2778
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$144, %ax
	je	.L2778
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$66, %ax
	je	.L2778
	movl	-12(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$150, %ax
	jne	.L2786
.L2778:
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$77, %ax
	je	.L2787
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$78, %ax
	je	.L2787
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$64, %ax
	je	.L2787
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$65, %ax
	je	.L2787
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$68, %ax
	je	.L2787
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$144, %ax
	je	.L2787
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$66, %ax
	je	.L2787
	movl	-8(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$150, %ax
	jne	.L2786
.L2787:
	.loc 1 6062 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	output_addr_const@PLT
	.loc 1 6063 0
	jmp	.L2811
.L2786:
	.loc 1 6066 0
	leal	.LC239@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2775:
	.loc 1 6068 0
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$77, %ax
	je	.L2795
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$78, %ax
	je	.L2795
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$64, %ax
	je	.L2795
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$65, %ax
	je	.L2795
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$68, %ax
	je	.L2795
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$144, %ax
	je	.L2795
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$66, %ax
	je	.L2795
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$150, %ax
	je	.L2795
	.loc 1 6069 0
	leal	.LC240@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2795:
	.loc 1 6071 0
	movl	-20(%ebp), %edx
	movl	4(%edx), %eax
	testl	%eax, %eax
	jne	.L2804
	.loc 1 6072 0
	leal	.LC232@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2804:
	.loc 1 6074 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2806
	movl	-16(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$68, %ax
	jne	.L2806
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_gp_offset_p@PLT
	testl	%eax, %eax
	je	.L2806
	.loc 1 6078 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$7, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC230@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6079 0
	movl	-16(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_output_gp_offset
	.loc 1 6080 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$41, (%esp)
	call	fputc_unlocked@PLT
	.loc 1 6074 0
	jmp	.L2810
.L2806:
	.loc 1 6083 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	output_addr_const@PLT
.L2810:
	.loc 1 6084 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%eax, 8(%esp)
	leal	.LC241@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 6086 0
	jmp	.L2811
.L2759:
.LBE67:
	.loc 1 6092 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	output_addr_const@PLT
	.loc 1 6093 0
	jmp	.L2811
.L2758:
	.loc 1 6096 0
	leal	.LC242@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L2811:
	.loc 1 6099 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE106:
	.size	print_operand_address, .-print_operand_address
	.section	.rodata
.LC243:
	.string	"\t.dword\t"
	.text
	.type	mips_assemble_integer, @function
mips_assemble_integer:
.LFB107:
	.loc 1 6110 0
	pushl	%ebp
.LCFI362:
	movl	%esp, %ebp
.LCFI363:
	pushl	%ebx
.LCFI364:
	subl	$20, %esp
.LCFI365:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6111 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L2813
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L2815
.L2813:
	cmpl	$8, 12(%ebp)
	jne	.L2815
	cmpl	$0, 16(%ebp)
	je	.L2815
	.loc 1 6113 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$8, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC243@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6114 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L2818
	.loc 1 6115 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	output_addr_const@PLT
	jmp	.L2820
.L2818:
	.loc 1 6117 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	$88, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	print_operand@PLT
.L2820:
	.loc 1 6118 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc_unlocked@PLT
	.loc 1 6119 0
	movl	$1, -8(%ebp)
	jmp	.L2821
.L2815:
	.loc 1 6121 0
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	default_assemble_integer@PLT
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
.L2821:
	movl	-8(%ebp), %eax
	.loc 1 6122 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE107:
	.size	mips_assemble_integer, .-mips_assemble_integer
	.section	.rodata
.LC244:
	.string	".sbss"
.LC245:
	.string	".sdata"
	.text
.globl mips_output_external
	.type	mips_output_external, @function
mips_output_external:
.LFB108:
	.loc 1 6140 0
	pushl	%ebp
.LCFI366:
	movl	%esp, %ebp
.LCFI367:
	pushl	%ebx
.LCFI368:
	subl	$36, %esp
.LCFI369:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6145 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8, %eax
	testl	%eax, %eax
	je	.L2824
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L2824
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L2824
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -12(%ebp)
	cmpl	$0, -12(%ebp)
	jle	.L2824
	movl	12(%ebp), %eax
	movl	80(%eax), %eax
	movl	%eax, -8(%ebp)
	cmpl	$0, -8(%ebp)
	je	.L2829
	movl	-8(%ebp), %eax
	movl	24(%eax), %edx
	leal	.LC244@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	je	.L2829
	movl	-8(%ebp), %eax
	movl	24(%eax), %edx
	leal	.LC245@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L2824
.L2829:
	.loc 1 6153 0
	movl	$12, (%esp)
	call	xmalloc@PLT
	movl	%eax, %edx
	.loc 1 6154 0
	movl	extern_head@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%edx)
	.loc 1 6155 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 6156 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 6157 0
	movl	extern_head@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2824:
	.loc 1 6177 0
	movl	$0, %eax
	.loc 1 6178 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE108:
	.size	mips_output_external, .-mips_output_external
	.data
	.align 4
	.type	first_time.21708, @object
	.size	first_time.21708, 4
first_time.21708:
	.long	1
	.section	.rodata
.LC246:
	.string	"\t.file\t%d "
.LC247:
	.string	"\t#@stabs\n"
.LC248:
	.string	"Ltext"
.LC249:
	.string	"\t.stabs\t"
.LC250:
	.string	" #.stabs\t"
.LC251:
	.string	",%d,0,0,%s\n"
	.align 4
.LC252:
	.string	"MIPS ECOFF format does not allow changing filenames within functions with #line"
	.text
.globl mips_output_filename
	.type	mips_output_filename, @function
mips_output_filename:
.LFB109:
	.loc 1 6206 0
	pushl	%ebp
.LCFI370:
	movl	%esp, %ebp
.LCFI371:
	pushl	%ebx
.LCFI372:
	subl	$148, %esp
.LCFI373:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -120(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -124(%ebp)
	.loc 1 6206 0
	movl	%gs:20, %eax
	movl	%eax, -8(%ebp)
	xorl	%eax, %eax
	.loc 1 6212 0
	movl	write_symbols@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2853
	.loc 1 6214 0
	movl	first_time.21708@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L2836
	.loc 1 6216 0
	movl	$0, first_time.21708@GOTOFF(%ebx)
	.loc 1 6217 0
	movl	num_source_filenames@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	num_source_filenames@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 6218 0
	movl	current_function_file@GOT(%ebx), %edx
	movl	-124(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 6219 0
	movl	num_source_filenames@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC246@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	movl	-124(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, (%esp)
	call	output_quoted_string@PLT
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc_unlocked@PLT
	.loc 1 6221 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2853
	movl	write_symbols@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2853
	.loc 1 6222 0
	movl	-120(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$9, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC247@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	jmp	.L2853
.L2836:
	.loc 1 6225 0
	movl	write_symbols@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2841
	.loc 1 6227 0
	movl	$0, 16(%esp)
	leal	.LC248@GOTOFF(%ebx), %eax
	movl	%eax, 12(%esp)
	leal	.LC39@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC221@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	-108(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 6228 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L2843
	leal	.LC249@GOTOFF(%ebx), %eax
	movl	%eax, -128(%ebp)
	jmp	.L2845
.L2843:
	leal	.LC250@GOTOFF(%ebx), %eax
	movl	%eax, -128(%ebp)
.L2845:
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-128(%ebp), %eax
	movl	%eax, (%esp)
	call	fputs@PLT
	.loc 1 6229 0
	movl	-124(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, (%esp)
	call	output_quoted_string@PLT
	.loc 1 6230 0
	leal	-108(%ebp), %eax
	addl	$1, %eax
	movl	%eax, 12(%esp)
	movl	$132, 8(%esp)
	leal	.LC251@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	jmp	.L2853
.L2841:
	.loc 1 6233 0
	movl	current_function_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -124(%ebp)
	je	.L2853
	movl	current_function_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-124(%ebp), %eax
	movl	%eax, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	je	.L2853
	.loc 1 6236 0
	movl	inside_function@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2848
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2848
	.loc 1 6238 0
	movl	file_in_function_warning@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2853
	.loc 1 6240 0
	movl	file_in_function_warning@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 6241 0
	movl	ignore_line_number@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 6242 0
	leal	.LC252@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 6236 0
	jmp	.L2853
.L2848:
	.loc 1 6247 0
	movl	num_source_filenames@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	num_source_filenames@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 6248 0
	movl	current_function_file@GOT(%ebx), %edx
	movl	-124(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 6249 0
	movl	num_source_filenames@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC246@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	movl	-124(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, (%esp)
	call	output_quoted_string@PLT
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc_unlocked@PLT
.L2853:
	.loc 1 6252 0
	movl	-8(%ebp), %eax
	xorl	%gs:20, %eax
	je	.L2854
	call	__stack_chk_fail_local
.L2854:
	addl	$148, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE109:
	.size	mips_output_filename, .-mips_output_filename
	.section	.rodata
.LC253:
	.string	"\t.stabn\t"
.LC254:
	.string	" #.stabn\t"
.LC255:
	.string	"%sLM%d:\n%s%d,0,%d,%sLM%d\n"
.LC256:
	.string	"\n\t%s.loc\t%d %d\n"
	.text
.globl mips_output_lineno
	.type	mips_output_lineno, @function
mips_output_lineno:
.LFB110:
	.loc 1 6263 0
	pushl	%ebp
.LCFI374:
	movl	%esp, %ebp
.LCFI375:
	pushl	%ebx
.LCFI376:
	subl	$52, %esp
.LCFI377:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6264 0
	movl	write_symbols@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L2856
	.loc 1 6266 0
	movl	sym_lineno@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	sym_lineno@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 6267 0
	movl	sym_lineno@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L2858
	leal	.LC253@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2860
.L2858:
	leal	.LC254@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
.L2860:
	movl	sym_lineno@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 32(%esp)
	leal	.LC39@GOTOFF(%ebx), %eax
	movl	%eax, 28(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	$68, 20(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%edx, 12(%esp)
	leal	.LC39@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC255@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	jmp	.L2865
.L2856:
	.loc 1 6273 0
	movl	num_source_filenames@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	movl	ignore_line_number@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2862
	leal	.LC197@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2864
.L2862:
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
.L2864:
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC256@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L2865:
	.loc 1 6279 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE110:
	.size	mips_output_lineno, .-mips_output_lineno
	.section	.rodata
.LC257:
	.string	"\t.ascii\t\""
.LC258:
	.string	"\\n"
.LC259:
	.string	"\\t"
.LC260:
	.string	"\\f"
.LC261:
	.string	"\\b"
.LC262:
	.string	"\\r"
.LC263:
	.string	"\\%03o"
.LC264:
	.string	"\"\n\t.ascii\t\""
.LC265:
	.string	"\"\n"
	.text
.globl mips_output_ascii
	.type	mips_output_ascii, @function
mips_output_ascii:
.LFB111:
	.loc 1 6288 0
	pushl	%ebp
.LCFI378:
	movl	%esp, %ebp
.LCFI379:
	pushl	%ebx
.LCFI380:
	subl	$52, %esp
.LCFI381:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6290 0
	movl	$17, -8(%ebp)
	.loc 1 6292 0
	movl	12(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 6294 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$9, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC257@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 6295 0
	movl	$0, -12(%ebp)
	jmp	.L2867
.L2868:
.LBB68:
	.loc 1 6297 0
	movl	-12(%ebp), %eax
	addl	-28(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 1 6299 0
	cmpl	$12, -24(%ebp)
	je	.L2873
	cmpl	$12, -24(%ebp)
	jg	.L2876
	cmpl	$9, -24(%ebp)
	je	.L2871
	cmpl	$10, -24(%ebp)
	je	.L2872
	cmpl	$8, -24(%ebp)
	je	.L2870
	jmp	.L2869
.L2876:
	cmpl	$34, -24(%ebp)
	je	.L2875
	cmpl	$92, -24(%ebp)
	je	.L2875
	cmpl	$13, -24(%ebp)
	je	.L2874
	jmp	.L2869
.L2875:
	.loc 1 6303 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$92, (%esp)
	call	putc_unlocked@PLT
	.loc 1 6304 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	putc_unlocked@PLT
	.loc 1 6305 0
	addl	$2, -8(%ebp)
	.loc 1 6306 0
	jmp	.L2877
.L2872:
	.loc 1 6309 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC258@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6310 0
	movl	-12(%ebp), %eax
	addl	$1, %eax
	cmpl	16(%ebp), %eax
	jae	.L2878
	movl	-12(%ebp), %eax
	addl	-28(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	cmpl	$31, -24(%ebp)
	jle	.L2880
	cmpl	$126, -24(%ebp)
	jle	.L2882
.L2880:
	cmpl	$9, -24(%ebp)
	jne	.L2878
.L2882:
	.loc 1 6313 0
	movl	$32767, -8(%ebp)
	.loc 1 6310 0
	jmp	.L2877
.L2878:
	.loc 1 6315 0
	addl	$2, -8(%ebp)
	.loc 1 6316 0
	jmp	.L2877
.L2871:
	.loc 1 6319 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC259@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6320 0
	addl	$2, -8(%ebp)
	.loc 1 6321 0
	jmp	.L2877
.L2873:
	.loc 1 6324 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC260@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6325 0
	addl	$2, -8(%ebp)
	.loc 1 6326 0
	jmp	.L2877
.L2870:
	.loc 1 6329 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC261@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6330 0
	addl	$2, -8(%ebp)
	.loc 1 6331 0
	jmp	.L2877
.L2874:
	.loc 1 6334 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC262@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6335 0
	addl	$2, -8(%ebp)
	.loc 1 6336 0
	jmp	.L2877
.L2869:
	.loc 1 6339 0
	cmpl	$31, -24(%ebp)
	jle	.L2884
	cmpl	$126, -24(%ebp)
	jg	.L2884
	.loc 1 6341 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	putc_unlocked@PLT
	.loc 1 6342 0
	addl	$1, -8(%ebp)
	.loc 1 6339 0
	jmp	.L2877
.L2884:
	.loc 1 6346 0
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC263@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 6347 0
	addl	$4, -8(%ebp)
.L2877:
	.loc 1 6351 0
	cmpl	$72, -8(%ebp)
	jle	.L2887
	movl	-12(%ebp), %eax
	addl	$1, %eax
	cmpl	16(%ebp), %eax
	jae	.L2887
	.loc 1 6353 0
	movl	$17, -8(%ebp)
	.loc 1 6354 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$11, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC264@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L2887:
.LBE68:
	.loc 1 6295 0
	addl	$1, -12(%ebp)
.L2867:
	movl	-12(%ebp), %eax
	cmpl	16(%ebp), %eax
	jb	.L2868
	.loc 1 6357 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC265@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 6358 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE111:
	.size	mips_output_ascii, .-mips_output_ascii
	.section	.rodata
.LC266:
	.string	"\t#nop\n"
	.text
.globl final_prescan_insn
	.type	final_prescan_insn, @function
final_prescan_insn:
.LFB112:
	.loc 1 6381 0
	pushl	%ebp
.LCFI382:
	movl	%esp, %ebp
.LCFI383:
	pushl	%ebx
.LCFI384:
	subl	$36, %esp
.LCFI385:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6382 0
	movl	dslots_number_nops@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jle	.L2893
.LBB69:
	.loc 1 6384 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 6385 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	get_attr_length@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6388 0
	cmpl	$0, -8(%ebp)
	je	.L2895
	movl	mips_load_reg@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2897
	movl	mips_load_reg@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	jne	.L2895
.L2897:
	movl	mips_load_reg2@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2899
	movl	mips_load_reg2@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	jne	.L2895
.L2899:
	movl	mips_load_reg3@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2901
	movl	mips_load_reg3@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	jne	.L2895
.L2901:
	movl	mips_load_reg4@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2903
	movl	mips_load_reg4@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	je	.L2903
.L2895:
	.loc 1 6394 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$6, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC266@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6388 0
	jmp	.L2906
.L2903:
	.loc 1 6397 0
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 6399 0
	jmp	.L2906
.L2907:
	.loc 1 6400 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$6, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC266@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
.L2906:
	.loc 1 6399 0
	movl	dslots_number_nops@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	-1(%eax), %edx
	movl	dslots_number_nops@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	dslots_number_nops@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jg	.L2907
	.loc 1 6402 0
	movl	mips_load_reg@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 6403 0
	movl	mips_load_reg2@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 6404 0
	movl	mips_load_reg3@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 6405 0
	movl	mips_load_reg4@GOT(%ebx), %eax
	movl	$0, (%eax)
.L2893:
.LBE69:
	.loc 1 6408 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L2913
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$43, %ax
	je	.L2911
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$44, %ax
	jne	.L2913
.L2911:
	.loc 1 6410 0
	movl	dslots_jump_total@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	dslots_jump_total@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2913:
	.loc 1 6411 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE112:
	.size	final_prescan_insn, .-final_prescan_insn
	.section	.rodata
	.type	__FUNCTION__.21895, @object
	.size	__FUNCTION__.21895, 20
__FUNCTION__.21895:
	.string	"mips_asm_file_start"
.LC267:
	.string	"\t.set\tnobopt\n"
.LC268:
	.string	"abi32"
.LC269:
	.string	"abiN32"
.LC270:
	.string	"abi64"
.LC271:
	.string	"abiO64"
.LC272:
	.string	"eabi64"
.LC273:
	.string	"eabi32"
.LC274:
	.string	"meabi64"
.LC275:
	.string	"meabi32"
.LC276:
	.string	"\t.section .mdebug.%s\n"
.LC277:
	.string	"\t.previous\n"
.LC278:
	.string	"\t.abicalls"
.LC279:
	.string	"%s\n"
.LC280:
	.string	"\t.set\tmips16\n"
.LC281:
	.string	" #"
	.align 4
.LC282:
	.string	"\n%s -G value = %d, Arch = %s, ISA = %d\n"
	.text
.globl mips_asm_file_start
	.type	mips_asm_file_start, @function
mips_asm_file_start:
.LFB113:
	.loc 1 6424 0
	pushl	%ebp
.LCFI386:
	movl	%esp, %ebp
.LCFI387:
	pushl	%ebx
.LCFI388:
	subl	$52, %esp
.LCFI389:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6425 0
	movl	main_input_filename@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_output_filename@PLT
	.loc 1 6432 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2915
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2915
	movl	flag_delayed_branch@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2915
	.loc 1 6433 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$13, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC267@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L2915:
	.loc 1 6435 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L2919
.LBB70:
	.loc 1 6445 0
	movl	$0, -8(%ebp)
	.loc 1 6447 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	cmpl	$5, -32(%ebp)
	ja	.L2921
	movl	-32(%ebp), %eax
	sall	$2, %eax
	movl	.L2928@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L2928:
	.long	.L2922@GOTOFF
	.long	.L2923@GOTOFF
	.long	.L2924@GOTOFF
	.long	.L2925@GOTOFF
	.long	.L2926@GOTOFF
	.long	.L2927@GOTOFF
	.text
.L2922:
	.loc 1 6449 0
	leal	.LC268@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2929
.L2923:
	.loc 1 6450 0
	leal	.LC269@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2929
.L2924:
	.loc 1 6451 0
	leal	.LC270@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2929
.L2926:
	.loc 1 6452 0
	leal	.LC271@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2929
.L2925:
	.loc 1 6453 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2930
	leal	.LC272@GOTOFF(%ebx), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2932
.L2930:
	leal	.LC273@GOTOFF(%ebx), %eax
	movl	%eax, -28(%ebp)
.L2932:
	movl	-28(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2929
.L2927:
	.loc 1 6454 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2933
	leal	.LC274@GOTOFF(%ebx), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2935
.L2933:
	leal	.LC275@GOTOFF(%ebx), %eax
	movl	%eax, -24(%ebp)
.L2935:
	movl	-24(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2929
.L2921:
	.loc 1 6456 0
	leal	__FUNCTION__.21895@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$6456, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2929:
	.loc 1 6462 0
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC276@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 6465 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$11, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC277@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L2919:
.LBE70:
	.loc 1 6475 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L2936
	.loc 1 6477 0
	leal	.LC278@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC279@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L2936:
	.loc 1 6479 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L2938
	.loc 1 6480 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$13, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC280@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L2938:
	.loc 1 6485 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8, %eax
	testl	%eax, %eax
	je	.L2940
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2940
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L2940
	.loc 1 6487 0
	movl	asm_out_data_file@GOT(%ebx), %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 6488 0
	call	tmpfile@PLT
	movl	%eax, %edx
	movl	asm_out_text_file@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 6485 0
	jmp	.L2944
.L2940:
	.loc 1 6491 0
	movl	asm_out_text_file@GOT(%ebx), %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	movl	asm_out_text_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	asm_out_data_file@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L2944:
	.loc 1 6493 0
	movl	flag_verbose_asm@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2947
	.loc 1 6494 0
	movl	mips_isa@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	mips_arch_info@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%ecx, 20(%esp)
	movl	%edx, 16(%esp)
	movl	%eax, 12(%esp)
	leal	.LC281@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC282@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L2947:
	.loc 1 6497 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE113:
	.size	mips_asm_file_start, .-mips_asm_file_start
	.section	.rodata
.LC283:
	.string	"\t.extern\t"
.LC284:
	.string	", %d\n"
.LC285:
	.string	"\n\t.text\n"
	.text
.globl mips_asm_file_end
	.type	mips_asm_file_end, @function
mips_asm_file_end:
.LFB114:
	.loc 1 6507 0
	pushl	%ebp
.LCFI390:
	movl	%esp, %ebp
.LCFI391:
	pushl	%ebx
.LCFI392:
	subl	$36, %esp
.LCFI393:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6511 0
	movl	extern_head@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2949
	.loc 1 6513 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc_unlocked@PLT
	.loc 1 6515 0
	movl	extern_head@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2951
.L2952:
	.loc 1 6517 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, -12(%ebp)
	.loc 1 6520 0
	movl	-12(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	jne	.L2953
	.loc 1 6522 0
	movl	-12(%ebp), %edx
	movzbl	9(%edx), %eax
	orl	$64, %eax
	movb	%al, 9(%edx)
	.loc 1 6529 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$9, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC283@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 6530 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	assemble_name@PLT
	.loc 1 6531 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC284@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L2953:
	.loc 1 6515 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L2951:
	cmpl	$0, -8(%ebp)
	jne	.L2952
.L2949:
	.loc 1 6537 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8, %eax
	testl	%eax, %eax
	je	.L2959
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2959
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L2959
	.loc 1 6539 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$8, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC285@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 6540 0
	movl	asm_out_text_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_file_data
.L2959:
	.loc 1 6542 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE114:
	.size	mips_asm_file_end, .-mips_asm_file_end
	.section	.rodata
.LC286:
	.string	"can't rewind temp file"
.LC287:
	.string	"can't write to output file"
.LC288:
	.string	"can't read from temp file"
.LC289:
	.string	"can't close temp file"
	.text
	.type	copy_file_data, @function
copy_file_data:
.LFB115:
	.loc 1 6547 0
	pushl	%ebp
.LCFI394:
	movl	%esp, %ebp
.LCFI395:
	pushl	%ebx
.LCFI396:
	subl	$8244, %esp
.LCFI397:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -8216(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -8220(%ebp)
	.loc 1 6547 0
	movl	%gs:20, %eax
	movl	%eax, -8(%ebp)
	xorl	%eax, %eax
	.loc 1 6550 0
	movl	-8220(%ebp), %eax
	movl	%eax, (%esp)
	call	rewind@PLT
	.loc 1 6551 0
	movl	-8220(%ebp), %eax
	movl	%eax, (%esp)
	call	ferror@PLT
	testl	%eax, %eax
	je	.L2963
	.loc 1 6552 0
	leal	.LC286@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fatal_io_error@PLT
.L2964:
	.loc 1 6555 0
	movl	-8216(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-8204(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$1, 4(%esp)
	leal	-8200(%ebp), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	cmpl	-8204(%ebp), %eax
	je	.L2963
	.loc 1 6556 0
	leal	.LC287@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fatal_io_error@PLT
.L2963:
	.loc 1 6554 0
	movl	-8220(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$8192, 8(%esp)
	movl	$1, 4(%esp)
	leal	-8200(%ebp), %eax
	movl	%eax, (%esp)
	call	fread@PLT
	movl	%eax, -8204(%ebp)
	cmpl	$0, -8204(%ebp)
	jne	.L2964
	.loc 1 6558 0
	movl	-8220(%ebp), %eax
	movl	%eax, (%esp)
	call	ferror@PLT
	testl	%eax, %eax
	je	.L2967
	.loc 1 6559 0
	leal	.LC288@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fatal_io_error@PLT
.L2967:
	.loc 1 6561 0
	movl	-8220(%ebp), %eax
	movl	%eax, (%esp)
	call	fclose@PLT
	testl	%eax, %eax
	je	.L2971
	.loc 1 6562 0
	leal	.LC289@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fatal_io_error@PLT
.L2971:
	.loc 1 6563 0
	movl	-8(%ebp), %eax
	xorl	%gs:20, %eax
	je	.L2972
	call	__stack_chk_fail_local
.L2972:
	addl	$8244, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE115:
	.size	copy_file_data, .-copy_file_data
	.section	.rodata
.LC290:
	.string	"\n"
.LC291:
	.string	"%llu"
.LC292:
	.string	":\n\t.space\t"
.LC293:
	.string	",%u\n"
.LC294:
	.string	","
.LC295:
	.string	"\n\t.comm\t"
	.text
.globl mips_output_aligned_decl_common
	.type	mips_output_aligned_decl_common, @function
mips_output_aligned_decl_common:
.LFB116:
	.loc 1 6576 0
	pushl	%ebp
.LCFI398:
	movl	%esp, %ebp
.LCFI399:
	pushl	%ebx
.LCFI400:
	subl	$84, %esp
.LCFI401:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -28(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -32(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -36(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, -48(%ebp)
	movl	24(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 6576 0
	movl	%gs:20, %eax
	movl	%eax, -12(%ebp)
	xorl	%eax, %eax
	.loc 1 6581 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L2974
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8388608, %eax
	testl	%eax, %eax
	je	.L2974
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L2974
	movl	-32(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L2974
	movl	-32(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L2979
	movl	-32(%ebp), %eax
	movl	68(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L2974
.L2979:
	.loc 1 6585 0
	movl	-32(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L2981
	movl	-32(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L2981
	.loc 1 6586 0
	movl	targetm@GOT(%ebx), %eax
	movl	48(%eax), %edx
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	*%edx
.L2981:
	.loc 1 6588 0
	call	readonly_data_section@PLT
	.loc 1 6589 0
	movl	28(%ebp), %eax
	shrl	$3, %eax
	movl	$0, %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	floor_log2_wide@PLT
	movl	%eax, 8(%esp)
	leal	.LC201@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 6591 0
	movl	$0, 12(%esp)
	leal	.LC290@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC291@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC292@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	concat_length@PLT
	addl	$1, %eax
	addl	$15, %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	subl	%eax, %esp
	leal	28(%esp), %eax
	movl	%eax, -56(%ebp)
	movl	-56(%ebp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -56(%ebp)
	movl	-56(%ebp), %edx
	movl	libiberty_concat_ptr@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	$0, 12(%esp)
	leal	.LC290@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC291@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC292@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	concat_copy2@PLT
	movl	%eax, -16(%ebp)
	.loc 1 6593 0
	movl	-48(%ebp), %eax
	movl	-44(%ebp), %edx
	movl	%eax, 16(%esp)
	movl	%edx, 20(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_declare_object@PLT
	.loc 1 6581 0
	jmp	.L2985
.L2974:
	.loc 1 6608 0
	movl	$0, 12(%esp)
	leal	.LC293@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC291@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC294@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	concat_length@PLT
	addl	$1, %eax
	addl	$15, %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	subl	%eax, %esp
	leal	28(%esp), %eax
	movl	%eax, -52(%ebp)
	movl	-52(%ebp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -52(%ebp)
	movl	-52(%ebp), %edx
	movl	libiberty_concat_ptr@GOT(%ebx), %eax
	movl	%edx, (%eax)
	movl	$0, 12(%esp)
	leal	.LC293@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC291@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC294@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	concat_copy2@PLT
	movl	%eax, -16(%ebp)
	.loc 1 6609 0
	movl	28(%ebp), %eax
	shrl	$3, %eax
	movl	%eax, 24(%esp)
	movl	-48(%ebp), %eax
	movl	-44(%ebp), %edx
	movl	%eax, 16(%esp)
	movl	%edx, 20(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	.LC295@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_declare_object@PLT
.L2985:
	.loc 1 6612 0
	movl	-12(%ebp), %eax
	xorl	%gs:20, %eax
	je	.L2986
	call	__stack_chk_fail_local
.L2986:
	movl	-4(%ebp), %ebx
	leave
	ret
.LFE116:
	.size	mips_output_aligned_decl_common, .-mips_output_aligned_decl_common
.globl mips_declare_object
	.type	mips_declare_object, @function
mips_declare_object:
.LFB117:
	.loc 1 6625 0
	pushl	%ebp
.LCFI402:
	movl	%esp, %ebp
.LCFI403:
	pushl	%ebx
.LCFI404:
	subl	$36, %esp
.LCFI405:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
.LBB71:
	.loc 1 6626 0
	leal	24(%ebp), %eax
	movl	%eax, -12(%ebp)
.LBB72:
	.loc 1 6632 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	fputs_unlocked@PLT
	.loc 1 6633 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	assemble_name@PLT
	.loc 1 6634 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	vfprintf@PLT
	.loc 1 6636 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8, %eax
	testl	%eax, %eax
	je	.L2990
.LBB73:
	.loc 1 6638 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6639 0
	movl	-8(%ebp), %edx
	movzbl	9(%edx), %eax
	orl	$64, %eax
	movb	%al, 9(%edx)
.L2990:
.LBE73:
.LBE72:
.LBE71:
	.loc 1 6643 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE117:
	.size	mips_declare_object, .-mips_declare_object
.globl __divdi3
.globl compute_frame_size
	.type	compute_frame_size, @function
compute_frame_size:
.LFB118:
	.loc 1 6701 0
	pushl	%ebp
.LCFI406:
	movl	%esp, %ebp
.LCFI407:
	pushl	%ebx
.LCFI408:
	subl	$308, %esp
.LCFI409:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -112(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -108(%ebp)
	.loc 1 6714 0
	movl	$0, -56(%ebp)
	movl	$0, -52(%ebp)
	.loc 1 6715 0
	movl	$0, -48(%ebp)
	movl	$0, -44(%ebp)
	.loc 1 6716 0
	movl	$0, -32(%ebp)
	.loc 1 6717 0
	movl	$0, -28(%ebp)
	.loc 1 6718 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2992
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L2992
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L2995
.L2992:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L2996
	movl	$8, -280(%ebp)
	movl	$0, -276(%ebp)
	jmp	.L2998
.L2996:
	movl	$0, -280(%ebp)
	movl	$0, -276(%ebp)
.L2998:
	movl	-280(%ebp), %eax
	movl	-276(%ebp), %edx
	movl	%eax, -288(%ebp)
	movl	%edx, -284(%ebp)
	jmp	.L2999
.L2995:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3000
	movl	$16, -272(%ebp)
	movl	$0, -268(%ebp)
	jmp	.L3002
.L3000:
	movl	$0, -272(%ebp)
	movl	$0, -268(%ebp)
.L3002:
	movl	-272(%ebp), %edx
	movl	-268(%ebp), %ecx
	movl	%edx, -288(%ebp)
	movl	%ecx, -284(%ebp)
.L2999:
	movl	-288(%ebp), %eax
	movl	-284(%ebp), %edx
	movl	%eax, -72(%ebp)
	movl	%edx, -68(%ebp)
	.loc 1 6719 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3003
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3003
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L3006
.L3003:
	movl	-112(%ebp), %eax
	movl	-108(%ebp), %edx
	addl	$7, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-8, %ecx
	movl	%ecx, -264(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -260(%ebp)
	movl	-264(%ebp), %eax
	movl	-260(%ebp), %edx
	movl	%eax, -264(%ebp)
	movl	%edx, -260(%ebp)
	jmp	.L3007
.L3006:
	movl	-112(%ebp), %eax
	movl	-108(%ebp), %edx
	addl	$15, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-16, %ecx
	movl	%ecx, -264(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -260(%ebp)
	movl	-264(%ebp), %eax
	movl	-260(%ebp), %edx
	movl	%eax, -264(%ebp)
	movl	%edx, -260(%ebp)
.L3007:
	movl	-264(%ebp), %edx
	movl	-260(%ebp), %ecx
	movl	%edx, -88(%ebp)
	movl	%ecx, -84(%ebp)
	.loc 1 6720 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3008
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3008
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L3011
.L3008:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	addl	$7, %eax
	movl	%eax, %ecx
	andl	$-8, %ecx
	movl	%ecx, -252(%ebp)
	jmp	.L3012
.L3011:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	addl	$15, %eax
	movl	%eax, %edx
	andl	$-16, %edx
	movl	%edx, -252(%ebp)
.L3012:
	movl	-252(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -296(%ebp)
	movl	%edx, -292(%ebp)
	movl	-296(%ebp), %edx
	movl	-292(%ebp), %ecx
	movl	%edx, -80(%ebp)
	movl	%ecx, -76(%ebp)
	.loc 1 6727 0
	movl	-80(%ebp), %eax
	orl	-76(%ebp), %eax
	testl	%eax, %eax
	jne	.L3013
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L3013
	.loc 1 6728 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3016
	movl	$32, -248(%ebp)
	movl	$0, -244(%ebp)
	jmp	.L3018
.L3016:
	movl	$16, -248(%ebp)
	movl	$0, -244(%ebp)
.L3018:
	movl	-248(%ebp), %eax
	movl	-244(%ebp), %edx
	movl	%eax, -80(%ebp)
	movl	%edx, -76(%ebp)
.L3013:
	.loc 1 6730 0
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	addl	-88(%ebp), %eax
	adcl	-84(%ebp), %edx
	addl	-72(%ebp), %eax
	adcl	-68(%ebp), %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	.loc 1 6731 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 6734 0
	movl	$0, -36(%ebp)
	jmp	.L3019
.L3020:
	.loc 1 6742 0
	movl	-36(%ebp), %eax
	movl	regs_ever_live@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	testb	%al, %al
	je	.L3021
	movl	-36(%ebp), %eax
	movl	call_used_regs@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	testb	%al, %al
	je	.L3023
.L3021:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3024
	movl	$17, -240(%ebp)
	jmp	.L3026
.L3024:
	movl	$30, -240(%ebp)
.L3026:
	movl	-240(%ebp), %edx
	cmpl	-36(%ebp), %edx
	jne	.L3027
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3023
.L3027:
	cmpl	$31, -36(%ebp)
	jne	.L3029
	movl	regs_ever_live@GOT(%ebx), %eax
	movzbl	31(%eax), %eax
	testb	%al, %al
	jne	.L3023
.L3029:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3031
	cmpl	$18, -36(%ebp)
	jne	.L3031
	movl	-36(%ebp), %eax
	movl	regs_ever_live@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	testb	%al, %al
	jne	.L3023
.L3031:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3034
	cmpl	$31, -36(%ebp)
	jne	.L3034
	movl	mips16_hard_float@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3034
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3034
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	aggregate_value_p@PLT
	testl	%eax, %eax
	jne	.L3034
	movl	-24(%ebp), %eax
	movzbl	32(%eax), %eax
	movzbl	%al, %edx
	movl	mode_class@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	$2, %eax
	jne	.L3034
	movl	-24(%ebp), %eax
	movzbl	32(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -236(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L3041
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L3043
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L3045
.L3043:
	movl	$16, -228(%ebp)
	jmp	.L3046
.L3045:
	movl	$8, -228(%ebp)
.L3046:
	movl	-228(%ebp), %ecx
	movl	%ecx, -232(%ebp)
	jmp	.L3047
.L3041:
	movl	$0, -232(%ebp)
.L3047:
	movl	-232(%ebp), %eax
	cmpl	%eax, -236(%ebp)
	jg	.L3034
.L3023:
	.loc 1 6754 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %ecx
	movzbl	%cl, %eax
	movl	$0, %edx
	addl	%eax, -56(%ebp)
	adcl	%edx, -52(%ebp)
	.loc 1 6755 0
	movl	-36(%ebp), %ecx
	movl	$1, %eax
	sall	%cl, %eax
	orl	%eax, -32(%ebp)
	.loc 1 6759 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3034
	cmpl	$17, -36(%ebp)
	jne	.L3034
	movl	regs_ever_live@GOT(%ebx), %eax
	movzbl	16(%eax), %eax
	testb	%al, %al
	je	.L3050
	movl	call_used_regs@GOT(%ebx), %eax
	movzbl	16(%eax), %eax
	testb	%al, %al
	je	.L3034
.L3050:
	.loc 1 6763 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3052
	movl	$8, -224(%ebp)
	movl	$0, -220(%ebp)
	jmp	.L3054
.L3052:
	movl	$4, -224(%ebp)
	movl	$0, -220(%ebp)
.L3054:
	movl	-224(%ebp), %edx
	movl	-220(%ebp), %ecx
	addl	%edx, -56(%ebp)
	adcl	%ecx, -52(%ebp)
	.loc 1 6764 0
	orl	$65536, -32(%ebp)
.L3034:
	.loc 1 6734 0
	addl	$1, -36(%ebp)
.L3019:
	cmpl	$31, -36(%ebp)
	jbe	.L3020
	.loc 1 6770 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L3056
.LBB74:
	.loc 1 6773 0
	movl	$0, -20(%ebp)
.L3058:
	.loc 1 6775 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3059
	movl	$2, -208(%ebp)
	jmp	.L3061
.L3059:
	movl	$4, -208(%ebp)
.L3061:
	movl	-208(%ebp), %ecx
	cmpl	-20(%ebp), %ecx
	jbe	.L3062
	movl	-20(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -212(%ebp)
	jmp	.L3064
.L3062:
	movl	$-1, -212(%ebp)
.L3064:
	movl	-212(%ebp), %edx
	movl	%edx, -36(%ebp)
	.loc 1 6776 0
	cmpl	$-1, -36(%ebp)
	je	.L3056
	.loc 1 6778 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %ecx
	movzbl	%cl, %eax
	movl	$0, %edx
	addl	%eax, -56(%ebp)
	adcl	%edx, -52(%ebp)
	.loc 1 6779 0
	movl	-36(%ebp), %ecx
	movl	$1, %eax
	sall	%cl, %eax
	orl	%eax, -32(%ebp)
	.loc 1 6773 0
	addl	$1, -20(%ebp)
	.loc 1 6780 0
	jmp	.L3058
.L3056:
.LBE74:
	.loc 1 6785 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3066
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3068
.L3066:
	movl	$63, -204(%ebp)
	jmp	.L3069
.L3068:
	movl	$62, -204(%ebp)
.L3069:
	movl	-204(%ebp), %ecx
	movl	%ecx, -36(%ebp)
	.loc 1 6786 0
	jmp	.L3070
.L3071:
	.loc 1 6789 0
	movl	-36(%ebp), %eax
	movl	regs_ever_live@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	testb	%al, %al
	je	.L3072
	movl	-36(%ebp), %eax
	movl	call_used_regs@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	testb	%al, %al
	jne	.L3072
	.loc 1 6791 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3075
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3077
.L3075:
	movl	$1, -200(%ebp)
	jmp	.L3078
.L3077:
	movl	$2, -200(%ebp)
.L3078:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3079
	movl	$8, -196(%ebp)
	jmp	.L3081
.L3079:
	movl	$4, -196(%ebp)
.L3081:
	movl	-200(%ebp), %eax
	imull	-196(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	addl	%eax, -48(%ebp)
	adcl	%edx, -44(%ebp)
	.loc 1 6792 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3082
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3084
.L3082:
	movl	$1, -192(%ebp)
	jmp	.L3085
.L3084:
	movl	$3, -192(%ebp)
.L3085:
	movl	-36(%ebp), %eax
	subl	$32, %eax
	movl	%eax, %ecx
	movl	-192(%ebp), %eax
	sall	%cl, %eax
	orl	%eax, -28(%ebp)
.L3072:
	.loc 1 6787 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3086
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3088
.L3086:
	movl	$1, -188(%ebp)
	jmp	.L3089
.L3088:
	movl	$2, -188(%ebp)
.L3089:
	movl	-188(%ebp), %eax
	subl	%eax, -36(%ebp)
.L3070:
	.loc 1 6786 0
	cmpl	$31, -36(%ebp)
	ja	.L3071
	.loc 1 6796 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3091
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3091
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L3094
.L3091:
	movl	-56(%ebp), %eax
	movl	-52(%ebp), %edx
	addl	$7, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-8, %ecx
	movl	%ecx, -184(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -180(%ebp)
	movl	-184(%ebp), %eax
	movl	-180(%ebp), %edx
	movl	%eax, -184(%ebp)
	movl	%edx, -180(%ebp)
	jmp	.L3095
.L3094:
	movl	-56(%ebp), %eax
	movl	-52(%ebp), %edx
	addl	$15, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-16, %ecx
	movl	%ecx, -184(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -180(%ebp)
	movl	-184(%ebp), %eax
	movl	-180(%ebp), %edx
	movl	%eax, -184(%ebp)
	movl	%edx, -180(%ebp)
.L3095:
	movl	-184(%ebp), %edx
	movl	-180(%ebp), %ecx
	movl	%edx, -64(%ebp)
	movl	%ecx, -60(%ebp)
	.loc 1 6797 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3096
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3096
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L3099
.L3096:
	movl	-48(%ebp), %eax
	movl	-44(%ebp), %edx
	addl	$7, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-8, %ecx
	movl	%ecx, -176(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -172(%ebp)
	movl	-176(%ebp), %eax
	movl	-172(%ebp), %edx
	movl	%eax, -176(%ebp)
	movl	%edx, -172(%ebp)
	jmp	.L3100
.L3099:
	movl	-48(%ebp), %eax
	movl	-44(%ebp), %edx
	addl	$15, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-16, %ecx
	movl	%ecx, -176(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -172(%ebp)
	movl	-176(%ebp), %eax
	movl	-172(%ebp), %edx
	movl	%eax, -176(%ebp)
	movl	%edx, -172(%ebp)
.L3100:
	movl	-176(%ebp), %eax
	movl	-172(%ebp), %edx
	addl	-64(%ebp), %eax
	adcl	-60(%ebp), %edx
	addl	%eax, -96(%ebp)
	adcl	%edx, -92(%ebp)
	.loc 1 6804 0
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	movl	%edx, %ecx
	xorl	-68(%ebp), %ecx
	xorl	-72(%ebp), %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	jne	.L3101
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3103
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3103
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L3101
.L3103:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	298(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3101
	.loc 1 6807 0
	movl	$0, -72(%ebp)
	movl	$0, -68(%ebp)
	movl	-72(%ebp), %eax
	movl	-68(%ebp), %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	.loc 1 6804 0
	jmp	.L3107
.L3101:
	.loc 1 6808 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3107
	.loc 1 6811 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3109
	movl	$8, -168(%ebp)
	movl	$0, -164(%ebp)
	jmp	.L3111
.L3109:
	movl	$4, -168(%ebp)
	movl	$0, -164(%ebp)
.L3111:
	movl	-168(%ebp), %edx
	movl	-164(%ebp), %ecx
	addl	%edx, -56(%ebp)
	adcl	%ecx, -52(%ebp)
	.loc 1 6812 0
	orl	$268435456, -32(%ebp)
	.loc 1 6813 0
	movl	-64(%ebp), %eax
	movl	-60(%ebp), %edx
	subl	%eax, -96(%ebp)
	sbbl	%edx, -92(%ebp)
	.loc 1 6814 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3112
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3112
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L3115
.L3112:
	movl	-56(%ebp), %eax
	movl	-52(%ebp), %edx
	addl	$7, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-8, %ecx
	movl	%ecx, -160(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -156(%ebp)
	movl	-160(%ebp), %eax
	movl	-156(%ebp), %edx
	movl	%eax, -160(%ebp)
	movl	%edx, -156(%ebp)
	jmp	.L3116
.L3115:
	movl	-56(%ebp), %eax
	movl	-52(%ebp), %edx
	addl	$15, %eax
	adcl	$0, %edx
	movl	%eax, %ecx
	andl	$-16, %ecx
	movl	%ecx, -160(%ebp)
	movl	%edx, %ecx
	andb	$255, %ch
	movl	%ecx, -156(%ebp)
	movl	-160(%ebp), %eax
	movl	-156(%ebp), %edx
	movl	%eax, -160(%ebp)
	movl	%edx, -156(%ebp)
.L3116:
	movl	-160(%ebp), %edx
	movl	-156(%ebp), %ecx
	movl	%edx, -64(%ebp)
	movl	%ecx, -60(%ebp)
	.loc 1 6815 0
	movl	-64(%ebp), %eax
	movl	-60(%ebp), %edx
	addl	%eax, -96(%ebp)
	adcl	%edx, -92(%ebp)
.L3107:
	.loc 1 6820 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3117
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3117
	.loc 1 6821 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3120
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3120
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L3123
.L3120:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	40(%eax), %eax
	addl	$7, %eax
	movl	%eax, %ecx
	andl	$-8, %ecx
	movl	%ecx, -152(%ebp)
	jmp	.L3124
.L3123:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	40(%eax), %eax
	addl	$15, %eax
	movl	%eax, %edx
	andl	$-16, %edx
	movl	%edx, -152(%ebp)
.L3124:
	movl	-152(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -296(%ebp)
	movl	%edx, -292(%ebp)
	movl	-296(%ebp), %edx
	movl	-292(%ebp), %ecx
	addl	%edx, -96(%ebp)
	adcl	%ecx, -92(%ebp)
.L3117:
	.loc 1 6824 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3125
	cmpl	$0, -92(%ebp)
	js	.L3125
	cmpl	$0, -92(%ebp)
	jg	.L3128
	cmpl	$0, -96(%ebp)
	jbe	.L3125
.L3128:
	cmpl	$0, -92(%ebp)
	jg	.L3125
	cmpl	$0, -92(%ebp)
	js	.L3130
	cmpl	$31, -96(%ebp)
	ja	.L3125
.L3130:
	.loc 1 6825 0
	movl	$32, -96(%ebp)
	movl	$0, -92(%ebp)
.L3125:
	.loc 1 6828 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-96(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 6829 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-88(%ebp), %eax
	movl	%eax, 12(%edx)
	.loc 1 6830 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-80(%ebp), %eax
	movl	%eax, 16(%edx)
	.loc 1 6831 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-72(%ebp), %eax
	movl	%eax, 20(%edx)
	.loc 1 6832 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-56(%ebp), %eax
	movl	%eax, 24(%edx)
	.loc 1 6833 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 28(%edx)
	.loc 1 6834 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 32(%edx)
	.loc 1 6835 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%eax, 36(%edx)
	.loc 1 6836 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	reload_completed@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 56(%edx)
	.loc 1 6837 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	%eax, -148(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3131
	movl	$8, -144(%ebp)
	movl	$0, -140(%ebp)
	jmp	.L3133
.L3131:
	movl	$4, -144(%ebp)
	movl	$0, -140(%ebp)
.L3133:
	movl	-144(%ebp), %eax
	movl	-140(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-56(%ebp), %eax
	movl	-52(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__divdi3@PLT
	movl	-148(%ebp), %edx
	movl	%eax, 60(%edx)
	.loc 1 6838 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	%eax, -136(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3134
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3136
.L3134:
	movl	$1, -132(%ebp)
	jmp	.L3137
.L3136:
	movl	$2, -132(%ebp)
.L3137:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3138
	movl	$8, -128(%ebp)
	jmp	.L3140
.L3138:
	movl	$4, -128(%ebp)
.L3140:
	movl	-132(%ebp), %eax
	imull	-128(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-48(%ebp), %eax
	movl	-44(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__divdi3@PLT
	movl	-136(%ebp), %ecx
	movl	%eax, 64(%ecx)
	.loc 1 6840 0
	cmpl	$0, -32(%ebp)
	je	.L3141
.LBB75:
	.loc 1 6846 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3143
	.loc 1 6847 0
	movl	-80(%ebp), %edx
	movl	-72(%ebp), %eax
	addl	%eax, %edx
	movl	-88(%ebp), %eax
	addl	%eax, %edx
	movl	-56(%ebp), %eax
	leal	(%edx,%eax), %ecx
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%ecx, %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -16(%ebp)
	jmp	.L3145
.L3143:
	.loc 1 6850 0
	movl	-96(%ebp), %ecx
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%ecx, %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, -16(%ebp)
.L3145:
	.loc 1 6852 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 48(%edx)
	.loc 1 6853 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %ecx
	movl	-96(%ebp), %edx
	movl	-16(%ebp), %eax
	subl	%edx, %eax
	movl	%eax, 40(%ecx)
	jmp	.L3146
.L3141:
.LBE75:
	.loc 1 6857 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	$0, 48(%eax)
	.loc 1 6858 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	$0, 40(%eax)
.L3146:
	.loc 1 6861 0
	cmpl	$0, -28(%ebp)
	je	.L3147
.LBB76:
	.loc 1 6865 0
	movl	-80(%ebp), %edx
	movl	-72(%ebp), %eax
	addl	%eax, %edx
	movl	-88(%ebp), %eax
	addl	%eax, %edx
	movl	-64(%ebp), %eax
	addl	%eax, %edx
	movl	-48(%ebp), %eax
	addl	%eax, %edx
	movl	%edx, -124(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3149
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3151
.L3149:
	movl	$1, -120(%ebp)
	jmp	.L3152
.L3151:
	movl	$2, -120(%ebp)
.L3152:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3153
	movl	$8, -116(%ebp)
	jmp	.L3155
.L3153:
	movl	$4, -116(%ebp)
.L3155:
	movl	-120(%ebp), %eax
	imull	-116(%ebp), %eax
	movl	-124(%ebp), %ecx
	subl	%eax, %ecx
	movl	%ecx, %eax
	movl	%eax, -12(%ebp)
	.loc 1 6866 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 52(%edx)
	.loc 1 6867 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %ecx
	movl	-96(%ebp), %edx
	movl	-12(%ebp), %eax
	subl	%edx, %eax
	movl	%eax, 44(%ecx)
	jmp	.L3156
.L3147:
.LBE76:
	.loc 1 6871 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	$0, 52(%eax)
	.loc 1 6872 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	$0, 44(%eax)
.L3156:
	.loc 1 6876 0
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	.loc 1 6877 0
	addl	$308, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE118:
	.size	compute_frame_size, .-compute_frame_size
	.section	.rodata
	.align 32
	.type	__FUNCTION__.22546, @object
	.size	__FUNCTION__.22546, 32
__FUNCTION__.22546:
	.string	"mips_initial_elimination_offset"
	.text
.globl mips_initial_elimination_offset
	.type	mips_initial_elimination_offset, @function
mips_initial_elimination_offset:
.LFB119:
	.loc 1 6886 0
	pushl	%ebp
.LCFI410:
	movl	%esp, %ebp
.LCFI411:
	pushl	%ebx
.LCFI412:
	subl	$52, %esp
.LCFI413:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6890 0
	movl	8(%ebp), %eax
	movl	%eax, -36(%ebp)
	cmpl	$1, -36(%ebp)
	je	.L3161
	cmpl	$75, -36(%ebp)
	je	.L3162
	cmpl	$0, -36(%ebp)
	je	.L3160
	jmp	.L3159
.L3161:
	.loc 1 6893 0
	movl	$0, -8(%ebp)
	.loc 1 6894 0
	jmp	.L3163
.L3160:
	.loc 1 6897 0
	call	get_frame_size@PLT
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	compute_frame_size@PLT
	.loc 1 6898 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6899 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L3164
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	je	.L3164
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	jne	.L3163
.L3164:
	.loc 1 6900 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	40(%eax), %eax
	subl	%eax, -8(%ebp)
	.loc 1 6901 0
	jmp	.L3163
.L3162:
	.loc 1 6904 0
	call	get_frame_size@PLT
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	compute_frame_size@PLT
	.loc 1 6905 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	48(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6906 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L3163
	.loc 1 6907 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3170
	movl	$8, -32(%ebp)
	jmp	.L3172
.L3170:
	movl	$4, -32(%ebp)
.L3172:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3173
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3173
	movl	$8, -28(%ebp)
	jmp	.L3176
.L3173:
	movl	$4, -28(%ebp)
.L3176:
	movl	-32(%ebp), %eax
	subl	-28(%ebp), %eax
	addl	%eax, -8(%ebp)
	.loc 1 6908 0
	jmp	.L3163
.L3159:
	.loc 1 6911 0
	leal	__FUNCTION__.22546@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$6911, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3163:
	.loc 1 6914 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3177
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3179
	movl	$17, -24(%ebp)
	jmp	.L3181
.L3179:
	movl	$30, -24(%ebp)
.L3181:
	movl	-24(%ebp), %eax
	cmpl	12(%ebp), %eax
	jne	.L3177
	.loc 1 6915 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	subl	%eax, -8(%ebp)
.L3177:
	.loc 1 6917 0
	movl	-8(%ebp), %eax
	.loc 1 6918 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE119:
	.size	mips_initial_elimination_offset, .-mips_initial_elimination_offset
	.type	mips_add_large_offset_to_sp, @function
mips_add_large_offset_to_sp:
.LFB120:
	.loc 1 6937 0
	pushl	%ebp
.LCFI414:
	movl	%esp, %ebp
.LCFI415:
	pushl	%ebx
.LCFI416:
	subl	$52, %esp
.LCFI417:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -32(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 6938 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3185
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3185
	movl	$5, -36(%ebp)
	jmp	.L3188
.L3185:
	movl	$4, -36(%ebp)
.L3188:
	movl	$13, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -16(%ebp)
	.loc 1 6939 0
	movl	-32(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -12(%ebp)
	.loc 1 6941 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 6942 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3189
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3189
	.loc 1 6943 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 6942 0
	jmp	.L3192
.L3189:
	.loc 1 6945 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3192:
	.loc 1 6946 0
	movl	-16(%ebp), %eax
	.loc 1 6947 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE120:
	.size	mips_add_large_offset_to_sp, .-mips_add_large_offset_to_sp
	.type	mips_annotate_frame_insn, @function
mips_annotate_frame_insn:
.LFB121:
	.loc 1 6955 0
	pushl	%ebp
.LCFI418:
	movl	%esp, %ebp
.LCFI419:
	pushl	%ebx
.LCFI420:
	subl	$20, %esp
.LCFI421:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6956 0
	movl	8(%ebp), %edx
	movzbl	3(%edx), %eax
	orl	$-128, %eax
	movb	%al, 3(%edx)
	.loc 1 6957 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$20, (%esp)
	call	alloc_EXPR_LIST@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 68(%eax)
	.loc 1 6960 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE121:
	.size	mips_annotate_frame_insn, .-mips_annotate_frame_insn
	.type	mips_frame_set, @function
mips_frame_set:
.LFB122:
	.loc 1 6970 0
	pushl	%ebp
.LCFI422:
	movl	%esp, %ebp
.LCFI423:
	pushl	%esi
.LCFI424:
	pushl	%ebx
.LCFI425:
	subl	$32, %esp
.LCFI426:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6971 0
	movl	16(%ebp), %eax
	movl	%eax, %edx
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%ecx, 8(%esp)
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, -16(%ebp)
	.loc 1 6972 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, %esi
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_MEM@PLT
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, -12(%ebp)
	.loc 1 6975 0
	movl	-12(%ebp), %edx
	movzbl	3(%edx), %eax
	orl	$-128, %eax
	movb	%al, 3(%edx)
	.loc 1 6976 0
	movl	-12(%ebp), %eax
	.loc 1 6977 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE122:
	.size	mips_frame_set, .-mips_frame_set
	.type	mips_emit_frame_related_store, @function
mips_emit_frame_related_store:
.LFB123:
	.loc 1 6989 0
	pushl	%ebp
.LCFI427:
	movl	%esp, %ebp
.LCFI428:
	pushl	%ebx
.LCFI429:
	subl	$84, %esp
.LCFI430:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	16(%ebp), %eax
	movl	%eax, -48(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 6992 0
	movl	12(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$16, %al
	jne	.L3199
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3199
.LBB77:
	.loc 1 6998 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L3202
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	addl	$1, %eax
	movl	%eax, -60(%ebp)
	jmp	.L3204
.L3202:
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -60(%ebp)
.L3204:
	movl	-60(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 6999 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L3205
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -56(%ebp)
	jmp	.L3207
.L3205:
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	addl	$1, %eax
	movl	%eax, -56(%ebp)
.L3207:
	movl	-56(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 7000 0
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$15, (%esp)
	call	mips_frame_set
	movl	%eax, -16(%ebp)
	.loc 1 7001 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3208
	movl	$8, -52(%ebp)
	jmp	.L3210
.L3208:
	movl	$4, -52(%ebp)
.L3210:
	movl	-48(%ebp), %eax
	addl	-52(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$15, (%esp)
	call	mips_frame_set
	movl	%eax, -12(%ebp)
	.loc 1 7002 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$2, (%esp)
	call	gen_rtvec@PLT
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -28(%ebp)
	.loc 1 6992 0
	jmp	.L3211
.L3199:
.LBE77:
	.loc 1 7005 0
	movl	-48(%ebp), %ecx
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%ecx, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	mips_frame_set
	movl	%eax, -28(%ebp)
.L3211:
	.loc 1 7007 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	movl	%eax, %edx
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	mips_annotate_frame_insn
	.loc 1 7008 0
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE123:
	.size	mips_emit_frame_related_store, .-mips_emit_frame_related_store
	.section	.rodata
	.type	__FUNCTION__.22721, @object
	.size	__FUNCTION__.22721, 19
__FUNCTION__.22721:
	.string	"save_restore_insns"
	.align 4
.LC296:
	.string	"gp_offset (%ld) or end_offset (%ld) is less than zero"
	.align 4
.LC297:
	.string	"fp_offset (%ld) or end_offset (%ld) is less than zero"
	.text
	.type	save_restore_insns, @function
save_restore_insns:
.LFB124:
	.loc 1 7015 0
	pushl	%ebp
.LCFI431:
	movl	%esp, %ebp
.LCFI432:
	pushl	%edi
.LCFI433:
	pushl	%esi
.LCFI434:
	pushl	%ebx
.LCFI435:
	subl	$252, %esp
.LCFI436:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7016 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 1 7017 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	36(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 7018 0
	movl	-60(%ebp), %eax
	movl	%eax, -52(%ebp)
	.loc 1 7027 0
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3214
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3216
	movl	$131072, -228(%ebp)
	jmp	.L3218
.L3216:
	movl	$1073741824, -228(%ebp)
.L3218:
	movl	-228(%ebp), %eax
	andl	-60(%ebp), %eax
	testl	%eax, %eax
	jne	.L3214
	.loc 1 7029 0
	leal	__FUNCTION__.22721@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$7029, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3214:
	.loc 1 7032 0
	cmpl	$0, 8(%ebp)
	jne	.L3220
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3220
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3223
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L3220
.L3223:
	.loc 1 7035 0
	andl	$-268435457, -60(%ebp)
.L3220:
	.loc 1 7037 0
	cmpl	$0, -60(%ebp)
	jne	.L3225
	cmpl	$0, -56(%ebp)
	je	.L3368
.L3225:
	.loc 1 7046 0
	cmpl	$0, -60(%ebp)
	je	.L3228
	.loc 1 7054 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	48(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -88(%ebp)
	movl	%edx, -84(%ebp)
	.loc 1 7055 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	24(%eax), %ecx
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%ecx, %edx
	subl	%eax, %edx
	movl	%edx, %eax
	movl	%eax, %esi
	movl	%eax, %edi
	sarl	$31, %edi
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	subl	%esi, %eax
	sbbl	%edi, %edx
	movl	%eax, -72(%ebp)
	movl	%edx, -68(%ebp)
	.loc 1 7059 0
	cmpl	$0, -84(%ebp)
	js	.L3230
	cmpl	$0, -68(%ebp)
	jns	.L3232
.L3230:
	.loc 1 7060 0
	movl	-72(%ebp), %eax
	movl	-88(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC296@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	internal_error@PLT
.L3232:
	.loc 1 7066 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3233
	cmpl	$32767, 16(%ebp)
	jle	.L3233
	.loc 1 7067 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -44(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	.loc 1 7066 0
	jmp	.L3236
.L3233:
	.loc 1 7069 0
	cmpl	$0, -84(%ebp)
	jg	.L3237
	cmpl	$0, -84(%ebp)
	js	.L3239
	cmpl	$32767, -88(%ebp)
	ja	.L3237
.L3239:
	.loc 1 7070 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -44(%ebp)
	movl	$0, -96(%ebp)
	movl	$0, -92(%ebp)
	jmp	.L3236
.L3237:
	.loc 1 7072 0
	cmpl	$0, 12(%ebp)
	je	.L3240
	movl	16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	subl	-88(%ebp), %eax
	sbbl	-84(%ebp), %edx
	movl	%eax, -224(%ebp)
	movl	%edx, -220(%ebp)
	cmpl	$0, -220(%ebp)
	ja	.L3240
	cmpl	$0, -220(%ebp)
	jb	.L3243
	cmpl	$32767, -224(%ebp)
	ja	.L3240
.L3243:
	movl	16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	subl	-72(%ebp), %eax
	sbbl	-68(%ebp), %edx
	movl	%eax, -216(%ebp)
	movl	%edx, -212(%ebp)
	cmpl	$0, -212(%ebp)
	ja	.L3240
	cmpl	$0, -212(%ebp)
	jb	.L3245
	cmpl	$32767, -216(%ebp)
	ja	.L3240
.L3245:
	.loc 1 7076 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3246
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3246
	movl	$5, -204(%ebp)
	jmp	.L3249
.L3246:
	movl	$4, -204(%ebp)
.L3249:
	movl	$13, 4(%esp)
	movl	-204(%ebp), %esi
	movl	%esi, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -44(%ebp)
	.loc 1 7077 0
	movl	16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	.loc 1 7078 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3250
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3250
	.loc 1 7079 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -40(%ebp)
	.loc 1 7078 0
	jmp	.L3236
.L3250:
	.loc 1 7082 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -40(%ebp)
	.loc 1 7072 0
	jmp	.L3236
.L3240:
	.loc 1 7087 0
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	.loc 1 7088 0
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	mips_add_large_offset_to_sp
	movl	%eax, -44(%ebp)
.L3236:
	.loc 1 7098 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3254
	cmpl	$0, 8(%ebp)
	jne	.L3254
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3254
	cmpl	$32767, 16(%ebp)
	jg	.L3254
	.loc 1 7102 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	addl	%eax, -96(%ebp)
	adcl	%edx, -92(%ebp)
.L3254:
	.loc 1 7104 0
	movl	$31, -48(%ebp)
	jmp	.L3259
.L3260:
	.loc 1 7106 0
	movl	-48(%ebp), %ecx
	movl	-60(%ebp), %eax
	sarl	%cl, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3261
.LBB78:
	.loc 1 7112 0
	movl	-96(%ebp), %esi
	movl	-92(%ebp), %edi
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	subl	%esi, %eax
	sbbl	%edi, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -200(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3263
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3263
	movl	$5, -196(%ebp)
	jmp	.L3266
.L3263:
	movl	$4, -196(%ebp)
.L3266:
	movl	-200(%ebp), %edi
	movl	%edi, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-196(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$85, (%esp)
	call	gen_rtx@PLT
	movl	gpr_mode@GOTOFF(%ebx), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$76, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -32(%ebp)
	.loc 1 7114 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L3267
	.loc 1 7115 0
	movl	-32(%ebp), %eax
	movzbl	3(%eax), %edx
	orl	$4, %edx
	movb	%dl, 3(%eax)
.L3267:
	.loc 1 7120 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3269
	cmpl	$0, 8(%ebp)
	jne	.L3269
	cmpl	$31, -48(%ebp)
	jne	.L3269
	.loc 1 7121 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	$7, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -36(%ebp)
	.loc 1 7120 0
	jmp	.L3273
.L3269:
	.loc 1 7123 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3274
	cmpl	$31, -48(%ebp)
	je	.L3274
	cmpl	$1, -48(%ebp)
	jle	.L3277
	cmpl	$7, -48(%ebp)
	jle	.L3274
.L3277:
	cmpl	$16, -48(%ebp)
	je	.L3274
	cmpl	$17, -48(%ebp)
	je	.L3274
	.loc 1 7127 0
	cmpl	$0, 8(%ebp)
	jne	.L3281
	.loc 1 7128 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	$6, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -36(%ebp)
	jmp	.L3273
.L3281:
	.loc 1 7131 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	$3, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -36(%ebp)
	.loc 1 7132 0
	movl	gpr_mode@GOTOFF(%ebx), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7123 0
	jmp	.L3273
.L3274:
	.loc 1 7137 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	-48(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -36(%ebp)
.L3273:
	.loc 1 7139 0
	cmpl	$0, 8(%ebp)
	je	.L3284
	.loc 1 7140 0
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_emit_frame_related_store
	jmp	.L3261
.L3284:
	.loc 1 7143 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7144 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3261
	cmpl	$31, -48(%ebp)
	je	.L3261
	cmpl	$1, -48(%ebp)
	jle	.L3288
	cmpl	$7, -48(%ebp)
	jle	.L3261
.L3288:
	cmpl	$16, -48(%ebp)
	je	.L3261
	cmpl	$17, -48(%ebp)
	je	.L3261
	.loc 1 7147 0
	movl	gpr_mode@GOTOFF(%ebx), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_move_insn@PLT
.L3261:
.LBE78:
	.loc 1 7153 0
	movl	-48(%ebp), %ecx
	movl	-52(%ebp), %eax
	sarl	%cl, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3292
	.loc 1 7154 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %ecx
	movzbl	%cl, %eax
	movl	$0, %edx
	subl	%eax, -88(%ebp)
	sbbl	%edx, -84(%ebp)
.L3292:
	.loc 1 7104 0
	subl	$1, -48(%ebp)
.L3259:
	cmpl	$0, -48(%ebp)
	jns	.L3260
	jmp	.L3295
.L3228:
	.loc 1 7158 0
	movl	$0, -44(%ebp)
	movl	$0, -96(%ebp)
	movl	$0, -92(%ebp)
.L3295:
	.loc 1 7161 0
	cmpl	$0, -56(%ebp)
	je	.L3368
	.loc 1 7164 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	52(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -80(%ebp)
	movl	%edx, -76(%ebp)
	.loc 1 7165 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	28(%eax), %eax
	movl	%eax, -192(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L3297
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3299
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3301
.L3299:
	movl	$1, -184(%ebp)
	jmp	.L3302
.L3301:
	movl	$2, -184(%ebp)
.L3302:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3303
	movl	$8, -180(%ebp)
	jmp	.L3305
.L3303:
	movl	$4, -180(%ebp)
.L3305:
	movl	-184(%ebp), %edx
	imull	-180(%ebp), %edx
	movl	%edx, -188(%ebp)
	jmp	.L3306
.L3297:
	movl	$0, -188(%ebp)
.L3306:
	movl	-192(%ebp), %eax
	subl	-188(%ebp), %eax
	movl	%eax, %esi
	movl	%eax, %edi
	sarl	$31, %edi
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	subl	%esi, %eax
	sbbl	%edi, %edx
	movl	%eax, -72(%ebp)
	movl	%edx, -68(%ebp)
	.loc 1 7168 0
	cmpl	$0, -76(%ebp)
	js	.L3307
	cmpl	$0, -68(%ebp)
	jns	.L3309
.L3307:
	.loc 1 7169 0
	movl	-72(%ebp), %eax
	movl	-80(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC297@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	internal_error@PLT
.L3309:
	.loc 1 7173 0
	cmpl	$0, -76(%ebp)
	jg	.L3310
	cmpl	$0, -76(%ebp)
	js	.L3312
	cmpl	$32767, -80(%ebp)
	ja	.L3310
.L3312:
	.loc 1 7174 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -44(%ebp)
	movl	$0, -96(%ebp)
	movl	$0, -92(%ebp)
	jmp	.L3313
.L3310:
	.loc 1 7176 0
	cmpl	$0, -44(%ebp)
	je	.L3314
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	-96(%ebp), %esi
	movl	-92(%ebp), %edi
	movl	%esi, -240(%ebp)
	movl	%edi, -236(%ebp)
	movl	-240(%ebp), %esi
	movl	-236(%ebp), %edi
	subl	%eax, %esi
	sbbl	%edx, %edi
	movl	%esi, %eax
	movl	%edi, %edx
	movl	%eax, -176(%ebp)
	movl	%edx, -172(%ebp)
	cmpl	$0, -172(%ebp)
	ja	.L3314
	cmpl	$0, -172(%ebp)
	jb	.L3317
	cmpl	$32767, -176(%ebp)
	ja	.L3314
.L3317:
	movl	-72(%ebp), %eax
	movl	-68(%ebp), %edx
	movl	-96(%ebp), %esi
	movl	-92(%ebp), %edi
	movl	%esi, -240(%ebp)
	movl	%edi, -236(%ebp)
	movl	-240(%ebp), %esi
	movl	-236(%ebp), %edi
	subl	%eax, %esi
	sbbl	%edx, %edi
	movl	%esi, %eax
	movl	%edi, %edx
	movl	%eax, -168(%ebp)
	movl	%edx, -164(%ebp)
	cmpl	$0, -164(%ebp)
	ja	.L3314
	cmpl	$0, -164(%ebp)
	jb	.L3313
	cmpl	$32767, -168(%ebp)
	ja	.L3314
	jmp	.L3313
.L3314:
	.loc 1 7181 0
	cmpl	$0, 12(%ebp)
	je	.L3320
	movl	16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	subl	-80(%ebp), %eax
	sbbl	-76(%ebp), %edx
	movl	%eax, -160(%ebp)
	movl	%edx, -156(%ebp)
	cmpl	$0, -156(%ebp)
	ja	.L3320
	cmpl	$0, -156(%ebp)
	jb	.L3323
	cmpl	$32767, -160(%ebp)
	ja	.L3320
.L3323:
	movl	16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	subl	-72(%ebp), %eax
	sbbl	-68(%ebp), %edx
	movl	%eax, -152(%ebp)
	movl	%edx, -148(%ebp)
	cmpl	$0, -148(%ebp)
	ja	.L3320
	cmpl	$0, -148(%ebp)
	jb	.L3325
	cmpl	$32767, -152(%ebp)
	ja	.L3320
.L3325:
	.loc 1 7185 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3326
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3326
	movl	$5, -140(%ebp)
	jmp	.L3329
.L3326:
	movl	$4, -140(%ebp)
.L3329:
	movl	$13, 4(%esp)
	movl	-140(%ebp), %edi
	movl	%edi, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -44(%ebp)
	.loc 1 7186 0
	movl	16(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	.loc 1 7187 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3330
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3330
	.loc 1 7188 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -40(%ebp)
	.loc 1 7187 0
	jmp	.L3313
.L3330:
	.loc 1 7191 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -40(%ebp)
	.loc 1 7181 0
	jmp	.L3313
.L3320:
	.loc 1 7196 0
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	.loc 1 7197 0
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	mips_add_large_offset_to_sp
	movl	%eax, -44(%ebp)
.L3313:
	.loc 1 7202 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3334
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3336
.L3334:
	movl	$63, -136(%ebp)
	jmp	.L3337
.L3336:
	movl	$62, -136(%ebp)
.L3337:
	movl	-136(%ebp), %eax
	movl	%eax, -48(%ebp)
	.loc 1 7203 0
	jmp	.L3338
.L3339:
	.loc 1 7205 0
	movl	-48(%ebp), %ecx
	subl	$32, %ecx
	movl	-56(%ebp), %eax
	sarl	%cl, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3340
.LBB79:
	.loc 1 7207 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3342
	movl	$15, -132(%ebp)
	jmp	.L3344
.L3342:
	movl	$16, -132(%ebp)
.L3344:
	movl	-132(%ebp), %edx
	movl	%edx, -28(%ebp)
	.loc 1 7208 0
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -24(%ebp)
	.loc 1 7211 0
	movl	-96(%ebp), %esi
	movl	-92(%ebp), %edi
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	subl	%esi, %eax
	sbbl	%edi, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -128(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3345
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3345
	movl	$5, -124(%ebp)
	jmp	.L3348
.L3345:
	movl	$4, -124(%ebp)
.L3348:
	movl	-128(%ebp), %esi
	movl	%esi, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-124(%ebp), %edi
	movl	%edi, 4(%esp)
	movl	$85, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$76, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7213 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L3349
	.loc 1 7214 0
	movl	-20(%ebp), %eax
	movzbl	3(%eax), %edx
	orl	$4, %edx
	movb	%dl, 3(%eax)
.L3349:
	.loc 1 7216 0
	cmpl	$0, 8(%ebp)
	je	.L3351
	.loc 1 7217 0
	movl	-80(%ebp), %eax
	movl	-76(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_emit_frame_related_store
	jmp	.L3353
.L3351:
	.loc 1 7219 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
.L3353:
	.loc 1 7221 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L3354
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3356
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3358
.L3356:
	movl	$1, -108(%ebp)
	jmp	.L3359
.L3358:
	movl	$2, -108(%ebp)
.L3359:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3360
	movl	$8, -104(%ebp)
	jmp	.L3362
.L3360:
	movl	$4, -104(%ebp)
.L3362:
	movl	-108(%ebp), %eax
	imull	-104(%ebp), %eax
	movl	%eax, -120(%ebp)
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%edx, -116(%ebp)
	jmp	.L3363
.L3354:
	movl	$0, -120(%ebp)
	movl	$0, -116(%ebp)
.L3363:
	movl	-120(%ebp), %esi
	movl	-116(%ebp), %edi
	subl	%esi, -80(%ebp)
	sbbl	%edi, -76(%ebp)
.L3340:
.LBE79:
	.loc 1 7204 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3364
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3366
.L3364:
	movl	$1, -100(%ebp)
	jmp	.L3367
.L3366:
	movl	$2, -100(%ebp)
.L3367:
	movl	-100(%ebp), %edi
	subl	%edi, -48(%ebp)
.L3338:
	.loc 1 7203 0
	cmpl	$31, -48(%ebp)
	jg	.L3339
.L3368:
	.loc 1 7224 0
	addl	$252, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE124:
	.size	save_restore_insns, .-save_restore_insns
	.section	.rodata
	.align 4
.LC298:
	.string	"\t.frame\t%s,%ld,%s\t\t# vars= %ld, regs= %d/%d, args= %d, extra= %ld\n"
	.align 4
.LC299:
	.string	"\t.mask\t0x%08lx,%ld\n\t.fmask\t0x%08lx,%ld\n"
.LC300:
	.string	"\tentry\t"
.LC301:
	.string	"%s-%s"
.LC302:
	.string	"-%s"
	.align 4
.LC303:
	.string	"\t.set\tnoreorder\n\t.cpload\t%s\n\t.set\treorder\n"
.LC304:
	.string	"dsubu"
.LC305:
	.string	"subu"
.LC306:
	.string	"\t%s\t%s,%s,%ld\n"
.LC307:
	.string	"\t.cprestore %ld\n"
	.text
	.type	mips_output_function_prologue, @function
mips_output_function_prologue:
.LFB125:
	.loc 1 7232 0
	pushl	%ebp
.LCFI437:
	movl	%esp, %ebp
.LCFI438:
	pushl	%edi
.LCFI439:
	pushl	%esi
.LCFI440:
	pushl	%ebx
.LCFI441:
	subl	$236, %esp
.LCFI442:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	12(%ebp), %eax
	movl	%eax, -88(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -84(%ebp)
	.loc 1 7236 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -80(%ebp)
	movl	%edx, -76(%ebp)
	.loc 1 7241 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L3370
	.loc 1 7242 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_output_filename@PLT
.L3370:
	.loc 1 7253 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3372
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L3372
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	72(%eax), %eax
	testl	%eax, %eax
	je	.L3372
	.loc 1 7255 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_mips16_function_stub
.L3372:
	.loc 1 7257 0
	movl	inside_function@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 7276 0
	movl	flag_inhibit_size_directive@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3376
	.loc 1 7279 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, -188(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, -184(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	64(%eax), %eax
	movl	%eax, -180(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	60(%eax), %eax
	movl	%eax, -176(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, -172(%ebp)
	movl	reg_names@GOT(%ebx), %eax
	movl	124(%eax), %eax
	movl	%eax, -168(%ebp)
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3378
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3378
	movl	-80(%ebp), %edx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%edx, %ecx
	subl	%eax, %ecx
	movl	%ecx, -164(%ebp)
	jmp	.L3381
.L3378:
	movl	-80(%ebp), %esi
	movl	%esi, -164(%ebp)
.L3381:
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3382
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3384
	movl	$17, -156(%ebp)
	jmp	.L3386
.L3384:
	movl	$30, -156(%ebp)
.L3386:
	movl	-156(%ebp), %edi
	movl	%edi, -160(%ebp)
	jmp	.L3387
.L3382:
	movl	$29, -160(%ebp)
.L3387:
	movl	-160(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	-188(%ebp), %edx
	movl	%edx, 36(%esp)
	movl	-184(%ebp), %ecx
	movl	%ecx, 32(%esp)
	movl	-180(%ebp), %esi
	movl	%esi, 28(%esp)
	movl	-176(%ebp), %edi
	movl	%edi, 24(%esp)
	movl	-172(%ebp), %edx
	movl	%edx, 20(%esp)
	movl	-168(%ebp), %ecx
	movl	%ecx, 16(%esp)
	movl	-164(%ebp), %esi
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	leal	.LC298@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 7294 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	44(%eax), %esi
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	36(%eax), %edx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	40(%eax), %ecx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	movl	%esi, 20(%esp)
	movl	%edx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%eax, 8(%esp)
	leal	.LC299@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L3376:
	.loc 1 7305 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3388
	call	mips_can_use_return_insn@PLT
	testl	%eax, %eax
	jne	.L3388
.LBB80:
	.loc 1 7307 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	.loc 1 7308 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
	.loc 1 7309 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	shrl	$31, %eax
	movl	%eax, -56(%ebp)
	.loc 1 7310 0
	movl	$0, -52(%ebp)
	.loc 1 7318 0
	call	get_insns@PLT
	movl	%eax, -48(%ebp)
	jmp	.L3391
.L3392:
.LBB81:
	.loc 1 7323 0
	movl	-48(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$46, %ax
	je	.L3393
	movl	-48(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$43, %ax
	je	.L3393
	movl	-48(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$44, %ax
	je	.L3393
	.loc 1 7327 0
	movl	-48(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$42, %ax
	jne	.L3397
	.loc 1 7329 0
	movl	-48(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 7330 0
	movl	-40(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L3397
	.loc 1 7335 0
	movl	$0, 8(%esp)
	movl	$3, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	find_reg_note@PLT
	movl	%eax, -44(%ebp)
	.loc 1 7336 0
	cmpl	$0, -44(%ebp)
	je	.L3397
	.loc 1 7338 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	reg_mentioned_p@PLT
	testl	%eax, %eax
	je	.L3397
	.loc 1 7341 0
	movl	-40(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 7342 0
	movl	-36(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L3397
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$3, %eax
	jbe	.L3397
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$7, %eax
	ja	.L3397
	.loc 1 7347 0
	movl	-40(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 7348 0
	movl	-32(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L3397
	.loc 1 7350 0
	movl	-32(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -152(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3406
	movl	$8, -148(%ebp)
	jmp	.L3408
.L3406:
	movl	$4, -148(%ebp)
.L3408:
	movl	-148(%ebp), %edi
	cmpl	%edi, -152(%ebp)
	je	.L3409
	.loc 1 7352 0
	movl	-32(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -144(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3411
	movl	$16, -140(%ebp)
	jmp	.L3413
.L3411:
	movl	$8, -140(%ebp)
.L3413:
	movl	-140(%ebp), %eax
	cmpl	%eax, -144(%ebp)
	jne	.L3397
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$6, %eax
	ja	.L3397
.L3409:
	.loc 1 7357 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -68(%ebp)
	.loc 1 7358 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %edx
	leal	-68(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	eliminate_constant_term@PLT
	movl	%eax, -28(%ebp)
	.loc 1 7359 0
	movl	-28(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L3397
	movl	-68(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L3397
	.loc 1 7362 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	jne	.L3417
	movl	-68(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -136(%ebp)
	movl	%ecx, -132(%ebp)
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	subl	$4, %eax
	movl	%eax, -128(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3419
	movl	$8, -124(%ebp)
	jmp	.L3421
.L3419:
	movl	$4, -124(%ebp)
.L3421:
	movl	-128(%ebp), %eax
	imull	-124(%ebp), %eax
	movl	$0, %edx
	addl	-80(%ebp), %eax
	adcl	-76(%ebp), %edx
	movl	-132(%ebp), %ecx
	xorl	%edx, %ecx
	xorl	-136(%ebp), %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	jne	.L3417
	jmp	.L3423
.L3417:
	.loc 1 7365 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -120(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3424
	movl	$17, -116(%ebp)
	jmp	.L3426
.L3424:
	movl	$30, -116(%ebp)
.L3426:
	movl	-116(%ebp), %ecx
	cmpl	%ecx, -120(%ebp)
	jne	.L3397
	movl	-68(%ebp), %eax
	movl	4(%eax), %esi
	movl	8(%eax), %edi
	movl	%esi, -112(%ebp)
	movl	%edi, -108(%ebp)
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	subl	$4, %eax
	movl	%eax, -104(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3428
	movl	$8, -100(%ebp)
	jmp	.L3430
.L3428:
	movl	$4, -100(%ebp)
.L3430:
	movl	-104(%ebp), %eax
	imull	-100(%ebp), %eax
	movl	$0, %edx
	movl	%eax, %esi
	movl	%edx, %edi
	addl	-80(%ebp), %esi
	adcl	-76(%ebp), %edi
	movl	%esi, -200(%ebp)
	movl	%edi, -196(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	-200(%ebp), %esi
	movl	-196(%ebp), %edi
	subl	%eax, %esi
	sbbl	%edx, %edi
	movl	%esi, %eax
	movl	%edi, %edx
	movl	-108(%ebp), %ecx
	xorl	%edx, %ecx
	xorl	-112(%ebp), %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	jne	.L3397
.L3423:
	.loc 1 7378 0
	movl	-48(%ebp), %eax
	movw	$47, (%eax)
	.loc 1 7379 0
	movl	-48(%ebp), %eax
	movl	$-99, 44(%eax)
	.loc 1 7380 0
	movl	-48(%ebp), %eax
	movl	$0, 36(%eax)
	.loc 1 7382 0
	movl	-36(%ebp), %eax
	movl	4(%eax), %esi
	movl	-32(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	mips_hard_regno_nregs@PLT
	leal	(%esi,%eax), %eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	.loc 1 7385 0
	movl	-24(%ebp), %eax
	cmpl	-52(%ebp), %eax
	jle	.L3397
	.loc 1 7386 0
	movl	-24(%ebp), %eax
	movl	%eax, -52(%ebp)
.L3397:
.LBE81:
	.loc 1 7318 0
	movl	-48(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -48(%ebp)
.L3391:
	cmpl	$0, -48(%ebp)
	jne	.L3392
.L3393:
	.loc 1 7391 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	298(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3432
	.loc 1 7392 0
	movl	$7, -52(%ebp)
.L3432:
	.loc 1 7394 0
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$7, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC300@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 7395 0
	cmpl	$0, -52(%ebp)
	jle	.L3434
	.loc 1 7397 0
	cmpl	$4, -52(%ebp)
	jne	.L3436
	.loc 1 7398 0
	movl	-52(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs@PLT
	jmp	.L3434
.L3436:
	.loc 1 7400 0
	movl	-52(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	leal	.LC301@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L3434:
	.loc 1 7403 0
	cmpl	$0, -64(%ebp)
	jne	.L3438
	cmpl	$0, -60(%ebp)
	je	.L3440
.L3438:
	.loc 1 7405 0
	cmpl	$0, -52(%ebp)
	jle	.L3441
	.loc 1 7406 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$44, (%esp)
	call	fputc@PLT
.L3441:
	.loc 1 7407 0
	movl	reg_names@GOT(%ebx), %eax
	movl	64(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs@PLT
	.loc 1 7408 0
	cmpl	$0, -60(%ebp)
	je	.L3440
	.loc 1 7409 0
	movl	reg_names@GOT(%ebx), %eax
	movl	68(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC302@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L3440:
	.loc 1 7411 0
	cmpl	$0, -56(%ebp)
	je	.L3444
	.loc 1 7413 0
	cmpl	$0, -52(%ebp)
	jg	.L3446
	cmpl	$0, -64(%ebp)
	jne	.L3446
	cmpl	$0, -60(%ebp)
	je	.L3449
.L3446:
	.loc 1 7414 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$44, (%esp)
	call	fputc@PLT
.L3449:
	.loc 1 7415 0
	movl	reg_names@GOT(%ebx), %eax
	movl	124(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fputs@PLT
.L3444:
	.loc 1 7417 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
.L3388:
.LBE80:
	.loc 1 7420 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3462
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3452
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L3462
.L3452:
.LBB82:
	.loc 1 7422 0
	movl	reg_names@GOT(%ebx), %eax
	movl	116(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 7424 0
	movl	reg_names@GOT(%ebx), %eax
	movl	100(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC303@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 7426 0
	cmpl	$0, -76(%ebp)
	js	.L3454
	cmpl	$0, -76(%ebp)
	jg	.L3456
	cmpl	$0, -80(%ebp)
	jbe	.L3454
.L3456:
	.loc 1 7428 0
	movl	-80(%ebp), %edi
	movl	%edi, -96(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3457
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3457
	leal	.LC304@GOTOFF(%ebx), %eax
	movl	%eax, -92(%ebp)
	jmp	.L3460
.L3457:
	leal	.LC305@GOTOFF(%ebx), %edx
	movl	%edx, -92(%ebp)
.L3460:
	movl	-96(%ebp), %ecx
	movl	%ecx, 20(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-92(%ebp), %esi
	movl	%esi, 8(%esp)
	leal	.LC306@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 7431 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC307@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L3454:
	.loc 1 7434 0
	call	dwarf2out_do_frame@PLT
	testl	%eax, %eax
	je	.L3462
	.loc 1 7435 0
	movl	-80(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$29, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	dwarf2out_def_cfa@PLT
.L3462:
.LBE82:
	.loc 1 7437 0
	addl	$236, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE125:
	.size	mips_output_function_prologue, .-mips_output_function_prologue
	.section	.rodata
	.type	__FUNCTION__.23414, @object
	.size	__FUNCTION__.23414, 21
__FUNCTION__.23414:
	.string	"mips_expand_prologue"
.LC308:
	.string	"__builtin_va_alist"
.LC309:
	.string	"va_alist"
.LC310:
	.string	"insn is not a shift"
	.text
.globl mips_expand_prologue
	.type	mips_expand_prologue, @function
mips_expand_prologue:
.LFB126:
	.loc 1 7443 0
	pushl	%ebp
.LCFI443:
	movl	%esp, %ebp
.LCFI444:
	pushl	%esi
.LCFI445:
	pushl	%ebx
.LCFI446:
	subl	$336, %esp
.LCFI447:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7446 0
	movl	$0, -148(%ebp)
	.loc 1 7447 0
	movl	$0, -144(%ebp)
	.loc 1 7448 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -140(%ebp)
	.loc 1 7449 0
	movl	-140(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -136(%ebp)
	.loc 1 7450 0
	movl	-140(%ebp), %eax
	movl	60(%eax), %eax
	movl	%eax, -132(%ebp)
	.loc 1 7456 0
	movl	$0, -112(%ebp)
	.loc 1 7458 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3464
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L3466
.L3464:
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3467
	call	mips_can_use_return_insn@PLT
	testl	%eax, %eax
	je	.L3466
.L3467:
	movl	$1, -324(%ebp)
	jmp	.L3469
.L3466:
	movl	$0, -324(%ebp)
.L3469:
	movl	-324(%ebp), %eax
	movl	%eax, -108(%ebp)
	.loc 1 7461 0
	movl	-140(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, (%esp)
	call	aggregate_value_p@PLT
	testl	%eax, %eax
	je	.L3470
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3470
	movl	struct_value_incoming_rtx@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3470
.LBB83:
	.loc 1 7465 0
	movl	-136(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -104(%ebp)
	.loc 1 7466 0
	movl	-104(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$36, (%esp)
	call	build_decl@PLT
	movl	%eax, -100(%ebp)
	.loc 1 7468 0
	movl	-100(%ebp), %edx
	movl	-104(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 7469 0
	movl	-100(%ebp), %edx
	movl	-132(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 7470 0
	movl	-100(%ebp), %eax
	movl	%eax, -132(%ebp)
.L3470:
.LBE83:
	.loc 1 7481 0
	movl	$0, 8(%esp)
	movl	-136(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-224(%ebp), %eax
	movl	%eax, (%esp)
	call	init_cumulative_args@PLT
	.loc 1 7482 0
	movl	$4, -152(%ebp)
	.loc 1 7484 0
	movl	-132(%ebp), %eax
	movl	%eax, -116(%ebp)
	jmp	.L3474
.L3475:
.LBB84:
	.loc 1 7486 0
	movl	-116(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, -96(%ebp)
	.loc 1 7487 0
	movl	-96(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %eax
	movl	%eax, -92(%ebp)
	.loc 1 7490 0
	movl	-96(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3476
	.loc 1 7492 0
	movl	-96(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -96(%ebp)
	.loc 1 7493 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3478
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3478
	movl	$5, -320(%ebp)
	jmp	.L3481
.L3478:
	movl	$4, -320(%ebp)
.L3481:
	movl	-320(%ebp), %edx
	movl	%edx, -92(%ebp)
.L3476:
	.loc 1 7496 0
	movl	$1, 12(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-224(%ebp), %eax
	movl	%eax, (%esp)
	call	function_arg@PLT
	movl	%eax, -88(%ebp)
	.loc 1 7498 0
	movl	$1, 12(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-224(%ebp), %eax
	movl	%eax, (%esp)
	call	function_arg_advance@PLT
	.loc 1 7499 0
	movl	-116(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -120(%ebp)
	.loc 1 7501 0
	cmpl	$0, -88(%ebp)
	je	.L3482
	cmpl	$0, -108(%ebp)
	je	.L3482
	.loc 1 7503 0
	cmpl	$0, -120(%ebp)
	jne	.L3485
	movl	-116(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L3485
	movl	-116(%ebp), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, %edx
	leal	.LC308@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	je	.L3488
	movl	-116(%ebp), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, %edx
	leal	.LC309@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L3485
.L3488:
	.loc 1 7510 0
	movl	$1, -144(%ebp)
	.loc 1 7511 0
	movl	-88(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L3490
	.loc 1 7512 0
	movl	-88(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -152(%ebp)
	jmp	.L3497
.L3490:
	.loc 1 7514 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3493
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L3495
.L3493:
	movl	$8, -316(%ebp)
	jmp	.L3496
.L3495:
	movl	$12, -316(%ebp)
.L3496:
	movl	-316(%ebp), %eax
	movl	%eax, -152(%ebp)
	.loc 1 7515 0
	jmp	.L3497
.L3485:
	.loc 1 7518 0
	movl	-216(%ebp), %eax
	addl	$4, %eax
	movl	%eax, -152(%ebp)
.LBE84:
	.loc 1 7484 0
	movl	-120(%ebp), %eax
	movl	%eax, -116(%ebp)
	jmp	.L3474
.L3482:
.LBB85:
	.loc 1 7522 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3498
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L3500
.L3498:
	movl	$8, -312(%ebp)
	jmp	.L3501
.L3500:
	movl	$12, -312(%ebp)
.L3501:
	movl	-312(%ebp), %edx
	movl	%edx, -152(%ebp)
	.loc 1 7523 0
	jmp	.L3497
.L3474:
.LBE85:
	.loc 1 7484 0
	cmpl	$0, -116(%ebp)
	jne	.L3475
.L3497:
	.loc 1 7533 0
	movl	global_trees@GOT(%ebx), %eax
	movl	108(%eax), %eax
	movl	$1, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	leal	-224(%ebp), %eax
	movl	%eax, (%esp)
	call	function_arg@PLT
	movl	%eax, -128(%ebp)
	.loc 1 7534 0
	cmpl	$0, -128(%ebp)
	je	.L3502
	movl	-128(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$49, %ax
	jne	.L3502
.LBB86:
	.loc 1 7536 0
	movl	-128(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -84(%ebp)
	.loc 1 7537 0
	movl	-84(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -80(%ebp)
	.loc 1 7539 0
	movl	$0, -124(%ebp)
	jmp	.L3505
.L3506:
.LBB87:
	.loc 1 7543 0
	movl	-124(%ebp), %edx
	movl	-84(%ebp), %eax
	movl	4(%eax,%edx,4), %eax
	movl	%eax, -72(%ebp)
	.loc 1 7544 0
	movl	-72(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L3507
	movl	-72(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$97, %ax
	je	.L3509
.L3507:
	.loc 1 7546 0
	leal	.LC310@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	abort_with_insn
.L3509:
	.loc 1 7547 0
	movl	-72(%ebp), %eax
	movl	12(%eax), %eax
	movw	$99, (%eax)
	.loc 1 7549 0
	movl	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -76(%ebp)
	.loc 1 7555 0
	movl	-76(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$0, 8(%esp)
	movl	$24, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, %edx
	movl	-76(%ebp), %eax
	movl	%edx, 68(%eax)
.LBE87:
	.loc 1 7539 0
	addl	$1, -124(%ebp)
.L3505:
	movl	-124(%ebp), %eax
	cmpl	-80(%ebp), %eax
	jl	.L3506
.L3502:
.LBE86:
	.loc 1 7560 0
	call	get_frame_size@PLT
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	compute_frame_size@PLT
	movl	%eax, -160(%ebp)
	movl	%edx, -156(%ebp)
	.loc 1 7564 0
	cmpl	$0, -108(%ebp)
	je	.L3510
	movl	-136(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3512
	movl	-136(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	tree_last@PLT
	movl	20(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	108(%eax), %eax
	cmpl	%eax, %edx
	jne	.L3514
.L3512:
	cmpl	$0, -144(%ebp)
	je	.L3510
.L3514:
.LBB88:
	.loc 1 7570 0
	movl	-152(%ebp), %eax
	subl	$4, %eax
	movl	%eax, -308(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3515
	movl	$8, -304(%ebp)
	jmp	.L3517
.L3515:
	movl	$4, -304(%ebp)
.L3517:
	movl	-308(%ebp), %eax
	imull	-304(%ebp), %eax
	movl	%eax, -68(%ebp)
	.loc 1 7571 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 1 7574 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3520
	.loc 1 7575 0
	movl	-160(%ebp), %eax
	movl	-68(%ebp), %edx
	addl	%edx, %eax
	movl	%eax, -68(%ebp)
	.loc 1 7577 0
	jmp	.L3520
.L3521:
	.loc 1 7579 0
	cmpl	$0, -68(%ebp)
	je	.L3522
	.loc 1 7580 0
	movl	-68(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -300(%ebp)
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -296(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3524
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3524
	movl	$5, -292(%ebp)
	jmp	.L3527
.L3524:
	movl	$4, -292(%ebp)
.L3527:
	movl	-300(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-296(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-292(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	$85, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -64(%ebp)
.L3522:
	.loc 1 7581 0
	movl	gpr_mode@GOTOFF(%ebx), %edx
	movl	-152(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %esi
	movl	gpr_mode@GOTOFF(%ebx), %edx
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$76, (%esp)
	call	gen_rtx@PLT
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7584 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	addl	%eax, -68(%ebp)
	.loc 1 7577 0
	addl	$1, -152(%ebp)
.L3520:
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3528
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L3530
.L3528:
	movl	$7, -288(%ebp)
	jmp	.L3531
.L3530:
	movl	$11, -288(%ebp)
.L3531:
	movl	-288(%ebp), %eax
	cmpl	-152(%ebp), %eax
	jge	.L3521
.L3510:
.LBE88:
	.loc 1 7592 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3532
	call	mips_can_use_return_insn@PLT
	testl	%eax, %eax
	jne	.L3532
	.loc 1 7594 0
	cmpl	$0, -156(%ebp)
	js	.L3535
	cmpl	$0, -156(%ebp)
	jg	.L3537
	cmpl	$0, -160(%ebp)
	jbe	.L3535
.L3537:
	cmpl	$0, -156(%ebp)
	jg	.L3535
	cmpl	$0, -156(%ebp)
	js	.L3539
	cmpl	$32, -160(%ebp)
	ja	.L3535
.L3539:
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3535
.LBB89:
	.loc 1 7601 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3541
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L3541
.LBB90:
	.loc 1 7603 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -56(%ebp)
	.loc 1 7604 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3544
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3544
	.loc 1 7605 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -60(%ebp)
	.loc 1 7604 0
	jmp	.L3548
.L3544:
	.loc 1 7609 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -60(%ebp)
	.loc 1 7601 0
	jmp	.L3548
.L3541:
.LBE90:
	.loc 1 7613 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3549
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3549
	.loc 1 7614 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_movdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -60(%ebp)
	.loc 1 7613 0
	jmp	.L3548
.L3549:
	.loc 1 7617 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_movsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -60(%ebp)
.L3548:
	.loc 1 7620 0
	movl	-60(%ebp), %eax
	movzbl	3(%eax), %edx
	orl	$-128, %edx
	movb	%dl, 3(%eax)
.L3535:
.LBE89:
	.loc 1 7627 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3552
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	andl	$262144, %eax
	testl	%eax, %eax
	je	.L3552
.LBB91:
	.loc 1 7629 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	$3, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -52(%ebp)
	.loc 1 7632 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	48(%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 7633 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L3555
	.loc 1 7634 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3557
	movl	$8, -284(%ebp)
	jmp	.L3559
.L3557:
	movl	$4, -284(%ebp)
.L3559:
	movl	-284(%ebp), %edx
	subl	%edx, -48(%ebp)
.L3555:
	.loc 1 7635 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3560
	.loc 1 7636 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3562
	movl	$8, -280(%ebp)
	jmp	.L3564
.L3562:
	movl	$4, -280(%ebp)
.L3564:
	movl	-280(%ebp), %eax
	subl	%eax, -48(%ebp)
.L3560:
	.loc 1 7637 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	jns	.L3565
	.loc 1 7638 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3567
	movl	$8, -276(%ebp)
	jmp	.L3569
.L3567:
	movl	$4, -276(%ebp)
.L3569:
	movl	-276(%ebp), %edx
	subl	%edx, -48(%ebp)
.L3565:
	.loc 1 7639 0
	cmpl	$0, -156(%ebp)
	js	.L3570
	cmpl	$0, -156(%ebp)
	jg	.L3572
	cmpl	$32767, -160(%ebp)
	jbe	.L3570
.L3572:
	.loc 1 7640 0
	movl	-160(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L3573
.L3570:
	.loc 1 7642 0
	movl	$0, -44(%ebp)
.L3573:
	.loc 1 7643 0
	call	start_sequence@PLT
	.loc 1 7644 0
	movl	gpr_mode@GOTOFF(%ebx), %eax
	movl	$18, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7646 0
	movl	-44(%ebp), %edx
	movl	-48(%ebp), %eax
	subl	%edx, %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -272(%ebp)
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -268(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3574
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3574
	movl	$5, -264(%ebp)
	jmp	.L3577
.L3574:
	movl	$4, -264(%ebp)
.L3577:
	movl	-272(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-268(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-264(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$85, (%esp)
	call	gen_rtx@PLT
	movl	gpr_mode@GOTOFF(%ebx), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$76, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7651 0
	call	get_insns@PLT
	movl	%eax, -112(%ebp)
	.loc 1 7652 0
	call	end_sequence@PLT
.L3552:
.LBE91:
	.loc 1 7655 0
	cmpl	$0, -156(%ebp)
	js	.L3578
	cmpl	$0, -156(%ebp)
	jg	.L3580
	cmpl	$32, -160(%ebp)
	jbe	.L3578
.L3580:
	.loc 1 7656 0
	addl	$-32, -160(%ebp)
	adcl	$-1, -156(%ebp)
	jmp	.L3532
.L3578:
	.loc 1 7659 0
	movl	$0, -160(%ebp)
	movl	$0, -156(%ebp)
	.loc 1 7660 0
	cmpl	$0, -112(%ebp)
	je	.L3532
	.loc 1 7661 0
	movl	-112(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3532:
	.loc 1 7665 0
	cmpl	$0, -156(%ebp)
	js	.L3582
	cmpl	$0, -156(%ebp)
	jg	.L3584
	cmpl	$0, -160(%ebp)
	jbe	.L3582
.L3584:
.LBB92:
	.loc 1 7667 0
	movl	-160(%ebp), %eax
	movl	-156(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -40(%ebp)
	.loc 1 7672 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3585
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3587
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3587
.L3585:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3589
	cmpl	$0, -156(%ebp)
	jg	.L3587
	cmpl	$0, -156(%ebp)
	js	.L3589
	cmpl	$32767, -160(%ebp)
	ja	.L3587
.L3589:
.LBB93:
	.loc 1 7677 0
	cmpl	$0, -156(%ebp)
	js	.L3592
	cmpl	$0, -156(%ebp)
	jg	.L3594
	cmpl	$32767, -160(%ebp)
	jbe	.L3592
.L3594:
	.loc 1 7679 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3595
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3595
	movl	$5, -260(%ebp)
	jmp	.L3598
.L3595:
	movl	$4, -260(%ebp)
.L3598:
	movl	$12, 8(%esp)
	movl	-260(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -36(%ebp)
	.loc 1 7680 0
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	jmp	.L3599
.L3592:
	.loc 1 7683 0
	movl	-40(%ebp), %eax
	movl	%eax, -36(%ebp)
.L3599:
	.loc 1 7685 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3600
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3600
	.loc 1 7686 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_subdi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -32(%ebp)
	.loc 1 7685 0
	jmp	.L3603
.L3600:
	.loc 1 7689 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_subsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -32(%ebp)
.L3603:
	.loc 1 7692 0
	movl	-160(%ebp), %eax
	movl	-156(%ebp), %edx
	movl	%edx, %ecx
	movl	%eax, %edx
	negl	%edx
	adcl	$0, %ecx
	negl	%ecx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%ecx, 8(%esp)
	movl	%eax, (%esp)
	call	plus_constant_wide@PLT
	movl	%eax, -256(%ebp)
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -252(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3604
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3604
	movl	$5, -248(%ebp)
	jmp	.L3607
.L3604:
	movl	$4, -248(%ebp)
.L3607:
	movl	-256(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-252(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-248(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, -28(%ebp)
	.loc 1 7696 0
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_annotate_frame_insn
.L3587:
.LBE93:
	.loc 1 7699 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3608
	.loc 1 7700 0
	movl	-160(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-148(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$1, (%esp)
	call	save_restore_insns
	jmp	.L3610
.L3608:
	.loc 1 7701 0
	cmpl	$0, -112(%ebp)
	je	.L3610
	.loc 1 7702 0
	movl	-112(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3610:
	.loc 1 7704 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3612
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3614
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3614
.L3612:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3614
	cmpl	$0, -156(%ebp)
	js	.L3614
	cmpl	$0, -156(%ebp)
	jg	.L3618
	cmpl	$32767, -160(%ebp)
	jbe	.L3614
.L3618:
.LBB94:
	.loc 1 7710 0
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3619
	.loc 1 7711 0
	leal	__FUNCTION__.23414@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$7711, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3619:
	.loc 1 7713 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3621
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3621
	movl	$5, -244(%ebp)
	jmp	.L3624
.L3621:
	movl	$4, -244(%ebp)
.L3624:
	movl	$3, 8(%esp)
	movl	-244(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -24(%ebp)
	.loc 1 7714 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7715 0
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7716 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3625
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3625
	.loc 1 7717 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_subdi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 7716 0
	jmp	.L3628
.L3625:
	.loc 1 7721 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_subsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3628:
	.loc 1 7724 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
.L3614:
.LBE94:
	.loc 1 7727 0
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3629
.LBB95:
	.loc 1 7729 0
	movl	$0, -20(%ebp)
	.loc 1 7735 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3631
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3633
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3633
.L3631:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3633
	cmpl	$0, -156(%ebp)
	js	.L3633
	cmpl	$0, -156(%ebp)
	jg	.L3637
	cmpl	$32767, -160(%ebp)
	jbe	.L3633
.L3637:
	.loc 1 7742 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L3643
.LBB96:
	.loc 1 7744 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -16(%ebp)
	.loc 1 7745 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3640
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3640
	.loc 1 7746 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7745 0
	jmp	.L3643
.L3640:
	.loc 1 7750 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7735 0
	jmp	.L3643
.L3633:
.LBE96:
	.loc 1 7755 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3644
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L3644
.LBB97:
	.loc 1 7757 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -12(%ebp)
	.loc 1 7758 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3647
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3647
	.loc 1 7759 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7758 0
	jmp	.L3643
.L3647:
	.loc 1 7763 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7755 0
	jmp	.L3643
.L3644:
.LBE97:
	.loc 1 7767 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3651
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3651
	.loc 1 7768 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_movdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7767 0
	jmp	.L3643
.L3651:
	.loc 1 7771 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_movsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	movl	%eax, -20(%ebp)
.L3643:
	.loc 1 7774 0
	cmpl	$0, -20(%ebp)
	je	.L3629
	.loc 1 7775 0
	movl	-20(%ebp), %eax
	movzbl	3(%eax), %edx
	orl	$-128, %edx
	movb	%dl, 3(%eax)
.L3629:
.LBE95:
	.loc 1 7778 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3582
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3582
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3582
	.loc 1 7779 0
	movl	$25, 4(%esp)
	movl	$5, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -240(%ebp)
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L3658
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -236(%ebp)
	jmp	.L3660
.L3658:
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -236(%ebp)
.L3660:
	movl	-236(%ebp), %edx
	movl	4(%edx), %eax
	movl	-240(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_loadgp@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3582:
.LBE92:
	.loc 1 7786 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	298(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3663
	.loc 1 7787 0
	call	gen_blockage@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3663:
	.loc 1 7788 0
	addl	$336, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE126:
	.size	mips_expand_prologue, .-mips_expand_prologue
	.section	.rodata
	.align 4
.LC311:
	.string	"%-20s fp=%c leaf=%c alloca=%c setjmp=%c stack=%4ld arg=%3d reg=%2d/%d delay=%3d/%3dL %3d/%3dJ refs=%3d/%3d/%3d"
	.text
	.type	mips_output_function_epilogue, @function
mips_output_function_epilogue:
.LFB127:
	.loc 1 7800 0
	pushl	%ebp
.LCFI448:
	movl	%esp, %ebp
.LCFI449:
	pushl	%ebx
.LCFI450:
	subl	$180, %esp
.LCFI451:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	12(%ebp), %eax
	movl	%eax, -48(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 7801 0
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -36(%ebp)
	.loc 1 7818 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L3665
.LBB98:
	.loc 1 7820 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	24(%eax), %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$30, %eax
	addl	%edx, %eax
	sarl	$2, %eax
	movl	%eax, -28(%ebp)
	.loc 1 7821 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	28(%eax), %edx
	movl	%edx, %eax
	sarl	$31, %eax
	shrl	$29, %eax
	addl	%edx, %eax
	sarl	$3, %eax
	movl	%eax, -24(%ebp)
	.loc 1 7822 0
	movl	-24(%ebp), %eax
	addl	-28(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 7823 0
	movl	-36(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 7825 0
	movl	-16(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$42, %al
	jne	.L3667
	.loc 1 7826 0
	addl	$1, -16(%ebp)
.L3667:
	.loc 1 7828 0
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	addl	-20(%ebp), %edx
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 7830 0
	movl	num_refs@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -100(%ebp)
	movl	num_refs@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, -96(%ebp)
	movl	num_refs@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -92(%ebp)
	movl	dslots_jump_filled@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -88(%ebp)
	movl	dslots_jump_total@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -84(%ebp)
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -80(%ebp)
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -76(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, -72(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -68(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3669
	movl	$121, -64(%ebp)
	jmp	.L3671
.L3669:
	movl	$110, -64(%ebp)
.L3671:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L3672
	movl	$121, -60(%ebp)
	jmp	.L3674
.L3672:
	movl	$110, -60(%ebp)
.L3674:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	jns	.L3675
	movl	$110, -56(%ebp)
	jmp	.L3677
.L3675:
	movl	$121, -56(%ebp)
.L3677:
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3678
	movl	$121, -52(%ebp)
	jmp	.L3680
.L3678:
	movl	$110, -52(%ebp)
.L3680:
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-100(%ebp), %eax
	movl	%eax, 68(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, 64(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, 60(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, 56(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 52(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, 48(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 44(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC311@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fprintf@PLT
	.loc 1 7842 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc_unlocked@PLT
.L3665:
.LBE98:
	.loc 1 7846 0
	movl	inside_function@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7847 0
	movl	ignore_line_number@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7848 0
	movl	dslots_load_total@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7849 0
	movl	dslots_jump_total@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7850 0
	movl	dslots_load_filled@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7851 0
	movl	dslots_jump_filled@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7852 0
	movl	num_refs@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7853 0
	movl	num_refs@GOT(%ebx), %eax
	movl	$0, 4(%eax)
	.loc 1 7854 0
	movl	num_refs@GOT(%ebx), %eax
	movl	$0, 8(%eax)
	.loc 1 7855 0
	movl	mips_load_reg@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7856 0
	movl	mips_load_reg2@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7858 0
	jmp	.L3681
.L3682:
.LBB99:
	.loc 1 7862 0
	movl	string_constants@GOTOFF(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 7863 0
	movl	string_constants@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	free@PLT
	.loc 1 7864 0
	movl	-12(%ebp), %eax
	movl	%eax, string_constants@GOTOFF(%ebx)
.L3681:
.LBE99:
	.loc 1 7858 0
	movl	string_constants@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	jne	.L3682
	.loc 1 7874 0
	movl	mips16_strings@GOTOFF(%ebx), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3684
.L3685:
	.loc 1 7875 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %edx
	movzbl	3(%edx), %eax
	andl	$-9, %eax
	movb	%al, 3(%edx)
	.loc 1 7874 0
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -32(%ebp)
.L3684:
	cmpl	$0, -32(%ebp)
	jne	.L3685
	.loc 1 7876 0
	leal	mips16_strings@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	free_EXPR_LIST_list@PLT
	.loc 1 7881 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8, %eax
	testl	%eax, %eax
	je	.L3691
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L3691
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L3691
	.loc 1 7883 0
	movl	asm_out_data_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 7884 0
	call	data_section@PLT
.L3691:
	.loc 1 7886 0
	addl	$180, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE127:
	.size	mips_output_function_epilogue, .-mips_output_function_epilogue
	.section	.rodata
	.type	__FUNCTION__.24026, @object
	.size	__FUNCTION__.24026, 21
__FUNCTION__.24026:
	.string	"mips_expand_epilogue"
	.text
.globl mips_expand_epilogue
	.type	mips_expand_epilogue, @function
mips_expand_epilogue:
.LFB128:
	.loc 1 7892 0
	pushl	%ebp
.LCFI452:
	movl	%esp, %ebp
.LCFI453:
	pushl	%ebx
.LCFI454:
	subl	$84, %esp
.LCFI455:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7893 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%eax, -40(%ebp)
	movl	%edx, -36(%ebp)
	.loc 1 7894 0
	movl	-40(%ebp), %eax
	movl	-36(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -32(%ebp)
	.loc 1 7895 0
	movl	$0, -28(%ebp)
	.loc 1 7897 0
	call	mips_can_use_return_insn@PLT
	testl	%eax, %eax
	je	.L3693
	.loc 1 7899 0
	call	gen_return@PLT
	movl	%eax, (%esp)
	call	emit_jump_insn@PLT
	.loc 1 7900 0
	jmp	.L3775
.L3693:
	.loc 1 7903 0
	movl	mips_entry@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3696
	call	mips_can_use_return_insn@PLT
	testl	%eax, %eax
	jne	.L3696
	.loc 1 7904 0
	addl	$-32, -40(%ebp)
	adcl	$-1, -36(%ebp)
.L3696:
	.loc 1 7906 0
	cmpl	$0, -36(%ebp)
	js	.L3699
	cmpl	$0, -36(%ebp)
	jg	.L3701
	cmpl	$32767, -40(%ebp)
	jbe	.L3699
.L3701:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L3699
	.loc 1 7908 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3703
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3703
	movl	$5, -64(%ebp)
	jmp	.L3706
.L3703:
	movl	$4, -64(%ebp)
.L3706:
	movl	$12, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -28(%ebp)
	.loc 1 7909 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7910 0
	movl	-28(%ebp), %eax
	movl	%eax, -32(%ebp)
.L3699:
	.loc 1 7913 0
	cmpl	$0, -36(%ebp)
	js	.L3707
	cmpl	$0, -36(%ebp)
	jg	.L3709
	cmpl	$0, -40(%ebp)
	jbe	.L3707
.L3709:
.LBB100:
	.loc 1 7915 0
	movl	-40(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 7917 0
	movl	frame_pointer_needed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3710
	.loc 1 7919 0
	call	gen_blockage@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 7925 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3712
	.loc 1 7927 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	subl	%eax, -40(%ebp)
	sbbl	%edx, -36(%ebp)
	.loc 1 7932 0
	cmpl	$32767, -24(%ebp)
	jle	.L3714
.LBB101:
	.loc 1 7934 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3716
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3716
	movl	$5, -60(%ebp)
	jmp	.L3719
.L3716:
	movl	$4, -60(%ebp)
.L3719:
	movl	$6, 8(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7936 0
	movl	-40(%ebp), %eax
	movl	-36(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_move_insn@PLT
	.loc 1 7937 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3720
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3720
	.loc 1 7938 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 7937 0
	jmp	.L3723
.L3720:
	.loc 1 7942 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %ecx
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3723:
	.loc 1 7945 0
	movl	$0, -40(%ebp)
	movl	$0, -36(%ebp)
.L3714:
.LBE101:
	.loc 1 7948 0
	movl	-40(%ebp), %eax
	orl	-36(%ebp), %eax
	testl	%eax, %eax
	je	.L3712
	movl	-24(%ebp), %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	%edx, %ecx
	xorl	-36(%ebp), %ecx
	xorl	-40(%ebp), %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	je	.L3712
	.loc 1 7949 0
	movl	-40(%ebp), %eax
	movl	-36(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -32(%ebp)
.L3712:
	.loc 1 7952 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3726
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3726
	.loc 1 7953 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_movdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 7952 0
	jmp	.L3730
.L3726:
	.loc 1 7955 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	16(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	gen_movsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	jmp	.L3730
.L3710:
	.loc 1 7961 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L3730
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3730
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3730
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	andl	$268435456, %eax
	testl	%eax, %eax
	je	.L3730
	.loc 1 7964 0
	call	gen_blockage@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3730:
	.loc 1 7966 0
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	save_restore_insns
	.loc 1 7972 0
	cmpl	$0, -36(%ebp)
	js	.L3735
	cmpl	$0, -36(%ebp)
	jg	.L3737
	cmpl	$32767, -40(%ebp)
	jbe	.L3735
.L3737:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3735
	.loc 1 7973 0
	leal	__FUNCTION__.24026@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$7973, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3735:
	.loc 1 7975 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L3739
.LBB102:
	.loc 1 7977 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3741
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3741
	movl	$5, -56(%ebp)
	jmp	.L3744
.L3741:
	movl	$4, -56(%ebp)
.L3744:
	movl	$3, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -16(%ebp)
	.loc 1 7978 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3745
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3745
	.loc 1 7979 0
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 7978 0
	jmp	.L3748
.L3745:
	.loc 1 7981 0
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3748:
	.loc 1 7982 0
	movl	-16(%ebp), %eax
	movl	%eax, -32(%ebp)
.L3739:
.LBE102:
	.loc 1 7985 0
	call	gen_blockage@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 7987 0
	movl	-40(%ebp), %eax
	orl	-36(%ebp), %eax
	testl	%eax, %eax
	jne	.L3749
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L3707
.L3749:
	.loc 1 7989 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L3751
	.loc 1 7991 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3753
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3753
	.loc 1 7992 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 7991 0
	jmp	.L3707
.L3753:
	.loc 1 7995 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	jmp	.L3707
.L3751:
.LBB103:
	.loc 1 8004 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3757
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3757
	movl	$5, -52(%ebp)
	jmp	.L3760
.L3757:
	movl	$4, -52(%ebp)
.L3760:
	movl	$6, 8(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -12(%ebp)
	.loc 1 8006 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3761
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3761
	.loc 1 8008 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_movdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 8009 0
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_adddi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 8010 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	gen_movdi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 8006 0
	jmp	.L3707
.L3761:
	.loc 1 8014 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_movsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 8015 0
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_addsi3@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
	.loc 1 8016 0
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	gen_movsi@PLT
	movl	%eax, (%esp)
	call	emit_insn@PLT
.L3707:
.LBE103:
.LBE100:
	.loc 1 8024 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3764
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	jns	.L3764
	.loc 1 8025 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3767
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3767
	movl	$5, -48(%ebp)
	jmp	.L3770
.L3767:
	movl	$4, -48(%ebp)
.L3770:
	movl	$7, 8(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, (%esp)
	call	gen_return_internal@PLT
	movl	%eax, (%esp)
	call	emit_jump_insn@PLT
	.loc 1 8024 0
	jmp	.L3775
.L3764:
	.loc 1 8028 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L3771
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L3771
	movl	$5, -44(%ebp)
	jmp	.L3774
.L3771:
	movl	$4, -44(%ebp)
.L3774:
	movl	$31, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, (%esp)
	call	gen_return_internal@PLT
	movl	%eax, (%esp)
	call	emit_jump_insn@PLT
.L3775:
	.loc 1 8030 0
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE128:
	.size	mips_expand_epilogue, .-mips_expand_epilogue
.globl mips_can_use_return_insn
	.type	mips_can_use_return_insn, @function
mips_can_use_return_insn:
.LFB129:
	.loc 1 8038 0
	pushl	%ebp
.LCFI456:
	movl	%esp, %ebp
.LCFI457:
	pushl	%ebx
.LCFI458:
	subl	$52, %esp
.LCFI459:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8041 0
	movl	reload_completed@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3777
	.loc 1 8042 0
	movl	$0, -36(%ebp)
	jmp	.L3779
.L3777:
	.loc 1 8044 0
	movl	regs_ever_live@GOT(%ebx), %eax
	movzbl	31(%eax), %eax
	testb	%al, %al
	jne	.L3780
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	298(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3782
.L3780:
	.loc 1 8045 0
	movl	$0, -36(%ebp)
	jmp	.L3779
.L3782:
	.loc 1 8047 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 8052 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3783
	movl	mips16_hard_float@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3783
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	aggregate_value_p@PLT
	testl	%eax, %eax
	jne	.L3783
	movl	-8(%ebp), %eax
	movzbl	32(%eax), %eax
	movzbl	%al, %edx
	movl	mode_class@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	$2, %eax
	jne	.L3783
	movl	-8(%ebp), %eax
	movzbl	32(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L3788
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L3790
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L3792
.L3790:
	movl	$16, -24(%ebp)
	jmp	.L3793
.L3792:
	movl	$8, -24(%ebp)
.L3793:
	movl	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	jmp	.L3794
.L3788:
	movl	$0, -28(%ebp)
.L3794:
	movl	-28(%ebp), %eax
	cmpl	%eax, -32(%ebp)
	jg	.L3783
	.loc 1 8057 0
	movl	$0, -36(%ebp)
	jmp	.L3779
.L3783:
	.loc 1 8059 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L3796
	.loc 1 8060 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -36(%ebp)
	jmp	.L3779
.L3796:
	.loc 1 8062 0
	call	get_frame_size@PLT
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	compute_frame_size@PLT
	orl	%edx, %eax
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -36(%ebp)
.L3779:
	movl	-36(%ebp), %eax
	.loc 1 8063 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE129:
	.size	mips_can_use_return_insn, .-mips_can_use_return_insn
	.type	symbolic_expression_p, @function
symbolic_expression_p:
.LFB130:
	.loc 1 8070 0
	pushl	%ebp
.LCFI460:
	movl	%esp, %ebp
.LCFI461:
	pushl	%ebx
.LCFI462:
	subl	$12, %esp
.LCFI463:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8071 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L3800
	.loc 1 8072 0
	movl	$1, -12(%ebp)
	jmp	.L3802
.L3800:
	.loc 1 8074 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L3803
	.loc 1 8075 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	symbolic_expression_p
	movl	%eax, -12(%ebp)
	jmp	.L3802
.L3803:
	.loc 1 8077 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$49, %al
	jne	.L3805
	.loc 1 8078 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	symbolic_expression_p
	movl	%eax, -12(%ebp)
	jmp	.L3802
.L3805:
	.loc 1 8080 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$99, %al
	je	.L3807
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$50, %al
	jne	.L3809
.L3807:
	.loc 1 8082 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	symbolic_expression_p
	testl	%eax, %eax
	jne	.L3810
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	symbolic_expression_p
	testl	%eax, %eax
	je	.L3812
.L3810:
	movl	$1, -8(%ebp)
	jmp	.L3813
.L3812:
	movl	$0, -8(%ebp)
.L3813:
	movl	-8(%ebp), %eax
	movl	%eax, -12(%ebp)
	jmp	.L3802
.L3809:
	.loc 1 8085 0
	movl	$0, -12(%ebp)
.L3802:
	movl	-12(%ebp), %eax
	.loc 1 8086 0
	addl	$12, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE130:
	.size	symbolic_expression_p, .-symbolic_expression_p
	.section	.rodata
.LC312:
	.string	".data.rel.ro"
	.text
	.type	mips_select_rtx_section, @function
mips_select_rtx_section:
.LFB131:
	.loc 1 8096 0
	pushl	%ebp
.LCFI464:
	movl	%esp, %ebp
.LCFI465:
	pushl	%ebx
.LCFI466:
	subl	$36, %esp
.LCFI467:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	16(%ebp), %eax
	movl	%eax, -16(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 8097 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3816
	.loc 1 8102 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	function_section@PLT
	jmp	.L3830
.L3816:
	.loc 1 8104 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L3819
	.loc 1 8108 0
	movl	$0, 12(%esp)
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mergeable_constant_section@PLT
	jmp	.L3830
.L3819:
	.loc 1 8116 0
	movl	8(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %edx
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	ja	.L3821
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jle	.L3821
	.loc 1 8118 0
	call	sdata_section@PLT
	.loc 1 8116 0
	jmp	.L3830
.L3821:
	.loc 1 8119 0
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3824
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	symbolic_expression_p
	testl	%eax, %eax
	je	.L3824
	.loc 1 8121 0
	movl	targetm@GOT(%ebx), %eax
	movzbl	244(%eax), %eax
	testb	%al, %al
	je	.L3827
	.loc 1 8122 0
	movl	$3, 8(%esp)
	leal	.LC312@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	named_section@PLT
	jmp	.L3830
.L3827:
	.loc 1 8124 0
	call	data_section@PLT
	.loc 1 8119 0
	jmp	.L3830
.L3824:
	.loc 1 8127 0
	movl	$0, 12(%esp)
	movl	-16(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mergeable_constant_section@PLT
.L3830:
	.loc 1 8129 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE131:
	.size	mips_select_rtx_section, .-mips_select_rtx_section
	.type	mips_select_section, @function
mips_select_section:
.LFB132:
	.loc 1 8151 0
	pushl	%ebp
.LCFI468:
	movl	%esp, %ebp
.LCFI469:
	pushl	%ebx
.LCFI470:
	subl	$36, %esp
.LCFI471:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	16(%ebp), %eax
	movl	%eax, -32(%ebp)
	movl	20(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 8152 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -12(%ebp)
	.loc 1 8154 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	jne	.L3832
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3834
.L3832:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L3834
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3834
	.loc 1 8161 0
	call	text_section@PLT
	.loc 1 8154 0
	jmp	.L3871
.L3834:
	.loc 1 8162 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L3838
	.loc 1 8167 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3840
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3840
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3840
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3840
	movl	8(%ebp), %eax
	movl	68(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L3845
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3845
.L3840:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L3847
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L3845
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3847
.L3845:
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3850
	cmpl	$0, 12(%ebp)
	jne	.L3847
.L3850:
	.loc 1 8177 0
	call	readonly_data_section@PLT
	.loc 1 8167 0
	jmp	.L3871
.L3847:
	.loc 1 8178 0
	cmpl	$0, -12(%ebp)
	jle	.L3853
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -12(%ebp)
	jg	.L3853
	.loc 1 8179 0
	call	sdata_section@PLT
	.loc 1 8178 0
	jmp	.L3871
.L3853:
	.loc 1 8181 0
	call	data_section@PLT
	jmp	.L3871
.L3838:
	.loc 1 8188 0
	cmpl	$0, -12(%ebp)
	jle	.L3856
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -12(%ebp)
	jg	.L3856
	.loc 1 8189 0
	call	sdata_section@PLT
	.loc 1 8188 0
	jmp	.L3871
.L3856:
	.loc 1 8190 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3859
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3859
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3859
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3859
	movl	8(%ebp), %eax
	movl	68(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L3864
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3864
.L3859:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L3866
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L3864
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3866
.L3864:
	movl	flag_pic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3869
	cmpl	$0, 12(%ebp)
	jne	.L3866
.L3869:
	.loc 1 8200 0
	call	readonly_data_section@PLT
	.loc 1 8190 0
	jmp	.L3871
.L3866:
	.loc 1 8202 0
	call	data_section@PLT
.L3871:
	.loc 1 8204 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE132:
	.size	mips_select_section, .-mips_select_section
	.type	mips_encode_section_info, @function
mips_encode_section_info:
.LFB133:
	.loc 1 8237 0
	pushl	%ebp
.LCFI472:
	movl	%esp, %ebp
.LCFI473:
	pushl	%ebx
.LCFI474:
	subl	$52, %esp
.LCFI475:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8238 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3873
	.loc 1 8240 0
	cmpl	$0, 12(%ebp)
	je	.L3873
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L3873
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3873
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3878
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	35(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3873
.L3878:
.LBB104:
	.loc 1 8258 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 8259 0
	movl	mips16_strings@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	alloc_EXPR_LIST@PLT
	movl	%eax, mips16_strings@GOTOFF(%ebx)
	.loc 1 8260 0
	movl	-12(%ebp), %edx
	movzbl	3(%edx), %eax
	orl	$8, %eax
	movb	%al, 3(%edx)
	.loc 1 8261 0
	movl	8(%ebp), %eax
	movl	20(%eax), %edx
	movl	mips_string_length@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	%eax, %edx
	movl	mips_string_length@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L3873:
.LBE104:
	.loc 1 8265 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L3880
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3880
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3880
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3880
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3885
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L3880
.L3885:
	.loc 1 8271 0
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L3887
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L3889
.L3887:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -40(%ebp)
.L3889:
	movl	-40(%ebp), %edx
	movl	4(%edx), %eax
	movzbl	3(%eax), %edx
	andl	$-9, %edx
	movb	%dl, 3(%eax)
	.loc 1 8265 0
	jmp	.L3928
.L3880:
	.loc 1 8274 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L3891
	.loc 1 8276 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3893
	.loc 1 8277 0
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L3895
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L3897
.L3895:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -36(%ebp)
.L3897:
	movl	-36(%ebp), %edx
	movl	4(%edx), %eax
	movzbl	3(%eax), %edx
	orl	$8, %edx
	movb	%dl, 3(%eax)
	jmp	.L3928
.L3893:
	.loc 1 8278 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3899
	.loc 1 8279 0
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L3901
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3903
.L3901:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -32(%ebp)
.L3903:
	movl	-32(%ebp), %edx
	movl	4(%edx), %eax
	movzbl	3(%eax), %edx
	andl	$-9, %edx
	movb	%dl, 3(%eax)
	jmp	.L3928
.L3899:
	.loc 1 8280 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L3904
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3904
	.loc 1 8282 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	4(%eax), %edx
	movzbl	3(%edx), %eax
	andl	$-9, %eax
	movb	%al, 3(%edx)
	.loc 1 8280 0
	jmp	.L3928
.L3904:
	.loc 1 8284 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	4(%eax), %edx
	movzbl	3(%edx), %eax
	orl	$8, %eax
	movb	%al, 3(%edx)
	jmp	.L3928
.L3891:
	.loc 1 8287 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3907
	movl	8(%ebp), %eax
	movl	80(%eax), %eax
	testl	%eax, %eax
	je	.L3907
	movl	8(%ebp), %eax
	movl	80(%eax), %eax
	movl	24(%eax), %edx
	leal	.LC245@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	je	.L3910
	movl	8(%ebp), %eax
	movl	80(%eax), %eax
	movl	24(%eax), %edx
	leal	.LC244@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L3907
.L3910:
	.loc 1 8294 0
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L3912
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L3914
.L3912:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -28(%ebp)
.L3914:
	movl	-28(%ebp), %edx
	movl	4(%edx), %eax
	movzbl	3(%eax), %edx
	orl	$8, %edx
	movb	%dl, 3(%eax)
	.loc 1 8287 0
	jmp	.L3928
.L3907:
	.loc 1 8300 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8, %eax
	testl	%eax, %eax
	je	.L3928
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3928
	movl	8(%ebp), %eax
	movl	80(%eax), %eax
	testl	%eax, %eax
	jne	.L3928
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L3918
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L3918
	movl	8(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	jne	.L3928
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3928
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L3928
.L3918:
.LBB105:
	.loc 1 8307 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -8(%ebp)
	.loc 1 8309 0
	cmpl	$0, -8(%ebp)
	jle	.L3928
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -8(%ebp)
	jg	.L3928
	.loc 1 8310 0
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L3925
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3927
.L3925:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -24(%ebp)
.L3927:
	movl	-24(%ebp), %edx
	movl	4(%edx), %eax
	movzbl	3(%eax), %edx
	orl	$8, %edx
	movb	%dl, 3(%eax)
.L3928:
.LBE105:
	.loc 1 8313 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE133:
	.size	mips_encode_section_info, .-mips_encode_section_info
.globl mips_function_value
	.type	mips_function_value, @function
mips_function_value:
.LFB134:
	.loc 1 8323 0
	pushl	%ebp
.LCFI476:
	movl	%esp, %ebp
.LCFI477:
	pushl	%ebx
.LCFI478:
	subl	$196, %esp
.LCFI479:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8324 0
	movl	$2, -40(%ebp)
	.loc 1 8326 0
	movl	$1, -44(%ebp)
	.loc 1 8328 0
	cmpl	$0, 8(%ebp)
	je	.L3930
	.loc 1 8330 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %eax
	movl	%eax, 16(%ebp)
	.loc 1 8331 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	movzbl	%al, %eax
	movl	%eax, -44(%ebp)
	.loc 1 8335 0
	movl	$1, 12(%esp)
	leal	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	promote_mode@PLT
	movl	%eax, 16(%ebp)
.L3930:
	.loc 1 8337 0
	movl	16(%ebp), %eax
	movl	mode_class@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	movl	%eax, -36(%ebp)
	.loc 1 8339 0
	cmpl	$2, -36(%ebp)
	jne	.L3932
	movl	16(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -184(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L3934
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3936
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3938
.L3936:
	movl	$1, -176(%ebp)
	jmp	.L3939
.L3938:
	movl	$2, -176(%ebp)
.L3939:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3940
	movl	$8, -172(%ebp)
	jmp	.L3942
.L3940:
	movl	$4, -172(%ebp)
.L3942:
	movl	-176(%ebp), %eax
	imull	-172(%ebp), %eax
	movl	%eax, -180(%ebp)
	jmp	.L3943
.L3934:
	movl	$0, -180(%ebp)
.L3943:
	movl	-180(%ebp), %edx
	cmpl	%edx, -184(%ebp)
	jg	.L3932
	.loc 1 8340 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L3945
	movl	$2, -168(%ebp)
	jmp	.L3947
.L3945:
	movl	$32, -168(%ebp)
.L3947:
	movl	-168(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 1 8339 0
	jmp	.L3948
.L3932:
	.loc 1 8342 0
	cmpl	$2, -36(%ebp)
	jne	.L3949
	cmpl	$18, 16(%ebp)
	jne	.L3949
	.loc 1 8346 0
	movl	16(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movl	%eax, %ecx
	shrb	%cl
	movzbl	%cl, %eax
	movl	$0, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -160(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L3952
	movl	$4, -156(%ebp)
	jmp	.L3954
.L3952:
	movl	$34, -156(%ebp)
.L3954:
	movl	-156(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	$5, (%esp)
	call	gen_rtx_REG@PLT
	movl	-160(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, -152(%ebp)
	movl	$0, 4(%esp)
	movl	$0, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -148(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L3955
	movl	$2, -144(%ebp)
	jmp	.L3957
.L3955:
	movl	$32, -144(%ebp)
.L3957:
	movl	-144(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$5, (%esp)
	call	gen_rtx_REG@PLT
	movl	-148(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	-152(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$2, (%esp)
	call	gen_rtvec@PLT
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -164(%ebp)
	jmp	.L3958
.L3949:
	.loc 1 8357 0
	cmpl	$6, -36(%ebp)
	jne	.L3959
	movl	16(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -140(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L3961
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3963
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3965
.L3963:
	movl	$1, -132(%ebp)
	jmp	.L3966
.L3965:
	movl	$2, -132(%ebp)
.L3966:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L3967
	movl	$8, -128(%ebp)
	jmp	.L3969
.L3967:
	movl	$4, -128(%ebp)
.L3969:
	movl	-132(%ebp), %eax
	imull	-128(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, -136(%ebp)
	jmp	.L3970
.L3961:
	movl	$0, -136(%ebp)
.L3970:
	movl	-136(%ebp), %eax
	cmpl	%eax, -140(%ebp)
	jg	.L3959
.LBB106:
	.loc 1 8360 0
	movl	16(%ebp), %edx
	movl	inner_mode_array@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%eax, -32(%ebp)
	.loc 1 8362 0
	movl	-32(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %ecx
	movzbl	%cl, %eax
	movl	$0, %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -124(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L3972
	movl	$2, -120(%ebp)
	jmp	.L3974
.L3972:
	movl	$32, -120(%ebp)
.L3974:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L3975
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L3977
.L3975:
	movl	$1, -116(%ebp)
	jmp	.L3978
.L3977:
	movl	$2, -116(%ebp)
.L3978:
	movl	-120(%ebp), %eax
	addl	-116(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	-124(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, -112(%ebp)
	movl	$0, 4(%esp)
	movl	$0, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -108(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L3979
	movl	$2, -104(%ebp)
	jmp	.L3981
.L3979:
	movl	$32, -104(%ebp)
.L3981:
	movl	-104(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	-108(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	-112(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$2, (%esp)
	call	gen_rtvec@PLT
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -164(%ebp)
	jmp	.L3958
.L3959:
.LBE106:
	.loc 1 8373 0
	cmpl	$0, 8(%ebp)
	je	.L3948
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	jne	.L3948
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3948
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L3948
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L3948
.LBB107:
	.loc 1 8383 0
	movl	$0, -24(%ebp)
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L3987
.L3988:
	.loc 1 8386 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	jne	.L3989
	.loc 1 8389 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	jne	.L3991
	cmpl	$1, -24(%ebp)
	jg	.L3991
	.loc 1 8392 0
	movl	-24(%ebp), %edx
	movl	-28(%ebp), %eax
	movl	%eax, -72(%ebp,%edx,4)
	addl	$1, -24(%ebp)
.L3989:
	.loc 1 8384 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
.L3987:
	.loc 1 8383 0
	cmpl	$0, -28(%ebp)
	jne	.L3988
.L3991:
	.loc 1 8396 0
	cmpl	$0, -28(%ebp)
	jne	.L3948
	.loc 1 8398 0
	cmpl	$1, -24(%ebp)
	jne	.L3995
.LBB108:
	.loc 1 8403 0
	movl	-72(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 1 8405 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -100(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L3997
	movl	$2, -96(%ebp)
	jmp	.L3999
.L3997:
	movl	$32, -96(%ebp)
.L3999:
	movl	-96(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	-100(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, 4(%esp)
	movl	$1, (%esp)
	call	gen_rtvec@PLT
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -164(%ebp)
	jmp	.L3958
.L3995:
.LBE108:
	.loc 1 8414 0
	cmpl	$2, -24(%ebp)
	jne	.L3948
.LBB109:
	.loc 1 8417 0
	movl	-72(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 1 8419 0
	movl	-68(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 1 8420 0
	movl	-72(%ebp), %eax
	movl	%eax, (%esp)
	call	int_byte_position@PLT
	movl	%eax, -64(%ebp)
	movl	%edx, -60(%ebp)
	.loc 1 8421 0
	movl	-68(%ebp), %eax
	movl	%eax, (%esp)
	call	int_byte_position@PLT
	movl	%eax, -56(%ebp)
	movl	%edx, -52(%ebp)
	.loc 1 8423 0
	movl	-56(%ebp), %eax
	movl	-52(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -92(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L4001
	movl	$4, -88(%ebp)
	jmp	.L4003
.L4001:
	movl	$34, -88(%ebp)
.L4003:
	movl	-88(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	-92(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	%eax, -84(%ebp)
	movl	-64(%ebp), %eax
	movl	-60(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, 8(%esp)
	movl	$0, (%esp)
	call	gen_rtx_CONST_INT@PLT
	movl	%eax, -80(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L4004
	movl	$2, -76(%ebp)
	jmp	.L4006
.L4004:
	movl	$32, -76(%ebp)
.L4006:
	movl	-76(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	-80(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx_fmt_ee@PLT
	movl	-84(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$2, (%esp)
	call	gen_rtvec@PLT
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$49, (%esp)
	call	gen_rtx_fmt_E@PLT
	movl	%eax, -164(%ebp)
	jmp	.L3958
.L3948:
.LBE109:
.LBE107:
	.loc 1 8438 0
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_rtx_REG@PLT
	movl	%eax, -164(%ebp)
.L3958:
	movl	-164(%ebp), %eax
	.loc 1 8439 0
	addl	$196, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE134:
	.size	mips_function_value, .-mips_function_value
.globl function_arg_pass_by_reference
	.type	function_arg_pass_by_reference, @function
function_arg_pass_by_reference:
.LFB135:
	.loc 1 8450 0
	pushl	%ebp
.LCFI480:
	movl	%esp, %ebp
.LCFI481:
	pushl	%ebx
.LCFI482:
	subl	$116, %esp
.LCFI483:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8453 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4009
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L4011
.L4009:
	.loc 1 8454 0
	movl	$0, -100(%ebp)
	jmp	.L4012
.L4011:
	.loc 1 8465 0
	cmpl	$0, 8(%ebp)
	je	.L4013
	cmpl	$0, 16(%ebp)
	je	.L4013
	movl	16(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$26, %al
	jne	.L4016
	movl	16(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L4016
	cmpl	$52, 12(%ebp)
	jne	.L4013
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4013
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4013
	cmpl	$0, 16(%ebp)
	je	.L4022
	movl	16(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$26, %al
	jne	.L4022
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -96(%ebp)
	movl	%edx, -92(%ebp)
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4025
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L4025
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	je	.L4025
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L4029
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4029
.L4025:
	movl	$8, -88(%ebp)
	movl	$0, -84(%ebp)
	jmp	.L4031
.L4029:
	movl	$4, -88(%ebp)
	movl	$0, -84(%ebp)
.L4031:
	movl	-88(%ebp), %eax
	movl	-84(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 12(%esp)
	movl	-96(%ebp), %eax
	movl	-92(%ebp), %edx
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	__moddi3@PLT
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L4013
.L4022:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L4032
	cmpl	$52, 12(%ebp)
	jne	.L4034
	cmpl	$0, 16(%ebp)
	je	.L4036
	movl	16(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$26, %al
	jne	.L4036
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -64(%ebp)
	movl	%edx, -60(%ebp)
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4039
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L4039
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	je	.L4039
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L4043
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4043
.L4039:
	movl	$8, -56(%ebp)
	movl	$0, -52(%ebp)
	jmp	.L4045
.L4043:
	movl	$4, -56(%ebp)
	movl	$0, -52(%ebp)
.L4045:
	movl	-52(%ebp), %edx
	cmpl	%edx, -60(%ebp)
	jg	.L4036
	movl	-52(%ebp), %eax
	cmpl	%eax, -60(%ebp)
	jl	.L4047
	movl	-56(%ebp), %edx
	cmpl	%edx, -64(%ebp)
	jae	.L4036
.L4047:
	movl	$1, -68(%ebp)
	jmp	.L4048
.L4036:
	movl	$0, -68(%ebp)
.L4048:
	movzbl	-68(%ebp), %eax
	movb	%al, -69(%ebp)
	jmp	.L4049
.L4034:
	movl	12(%ebp), %edx
	movl	mode_bitsize@GOT(%ebx), %eax
	movzwl	(%eax,%edx,2), %eax
	movzwl	%ax, %eax
	movl	%eax, -44(%ebp)
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4050
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L4050
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	je	.L4050
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	jne	.L4054
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4054
.L4050:
	movl	$64, -40(%ebp)
	jmp	.L4056
.L4054:
	movl	$32, -40(%ebp)
.L4056:
	movl	-40(%ebp), %edx
	cmpl	%edx, -44(%ebp)
	jge	.L4057
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4059
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4059
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L4059
	movl	12(%ebp), %eax
	movl	mode_class@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	$1, %eax
	jne	.L4057
.L4059:
	movl	$1, -48(%ebp)
	jmp	.L4063
.L4057:
	movl	$0, -48(%ebp)
.L4063:
	movzbl	-48(%ebp), %eax
	movb	%al, -69(%ebp)
.L4049:
	cmpb	$0, -69(%ebp)
	je	.L4064
	movl	$2, -76(%ebp)
	jmp	.L4066
.L4064:
	movl	$1, -76(%ebp)
.L4066:
	movl	-76(%ebp), %edx
	movl	%edx, -80(%ebp)
	jmp	.L4067
.L4032:
	movl	$1, -80(%ebp)
.L4067:
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L4068
	movl	$1, -36(%ebp)
	jmp	.L4070
.L4068:
	movl	$2, -36(%ebp)
.L4070:
	movl	-36(%ebp), %eax
	cmpl	%eax, -80(%ebp)
	jne	.L4013
.L4016:
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	je	.L4013
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	function_arg@PLT
	testl	%eax, %eax
	je	.L4013
	.loc 1 8468 0
	movl	$1, -100(%ebp)
	jmp	.L4012
.L4013:
	.loc 1 8471 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$3, %eax
	je	.L4073
	.loc 1 8472 0
	movl	$0, -100(%ebp)
	jmp	.L4012
.L4073:
	.loc 1 8475 0
	cmpl	$0, 16(%ebp)
	je	.L4075
	cmpl	$5, 12(%ebp)
	je	.L4075
	cmpl	$16, 12(%ebp)
	jne	.L4078
.L4075:
	.loc 1 8476 0
	movl	$0, -100(%ebp)
	jmp	.L4012
.L4078:
	.loc 1 8478 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -12(%ebp)
	.loc 1 8479 0
	cmpl	$-1, -12(%ebp)
	je	.L4079
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4081
	movl	$8, -28(%ebp)
	jmp	.L4083
.L4081:
	movl	$4, -28(%ebp)
.L4083:
	movl	-28(%ebp), %edx
	cmpl	-12(%ebp), %edx
	jge	.L4084
.L4079:
	movl	$1, -32(%ebp)
	jmp	.L4085
.L4084:
	movl	$0, -32(%ebp)
.L4085:
	movl	-32(%ebp), %eax
	movl	%eax, -100(%ebp)
.L4012:
	movl	-100(%ebp), %eax
	.loc 1 8480 0
	addl	$116, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE135:
	.size	function_arg_pass_by_reference, .-function_arg_pass_by_reference
.globl mips_cannot_change_mode_class
	.type	mips_cannot_change_mode_class, @function
mips_cannot_change_mode_class:
.LFB136:
	.loc 1 8503 0
	pushl	%ebp
.LCFI484:
	movl	%esp, %ebp
.LCFI485:
	pushl	%ebx
.LCFI486:
	subl	$20, %esp
.LCFI487:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8504 0
	movl	8(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %ecx
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	%al, %cl
	je	.L4088
	.loc 1 8506 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L4090
	.loc 1 8507 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$6, (%esp)
	call	reg_classes_intersect_p@PLT
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L4092
.L4090:
	.loc 1 8508 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L4093
	.loc 1 8509 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$17, (%esp)
	call	reg_classes_intersect_p@PLT
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L4092
.L4093:
	.loc 1 8510 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$7, (%esp)
	call	reg_classes_intersect_p@PLT
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L4092
.L4088:
	.loc 1 8512 0
	movl	$0, -8(%ebp)
.L4092:
	movl	-8(%ebp), %eax
	.loc 1 8513 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE136:
	.size	mips_cannot_change_mode_class, .-mips_cannot_change_mode_class
.globl mips_secondary_reload_class
	.type	mips_secondary_reload_class, @function
mips_secondary_reload_class:
.LFB137:
	.loc 1 8527 0
	pushl	%ebp
.LCFI488:
	movl	%esp, %ebp
.LCFI489:
	pushl	%esi
.LCFI490:
	pushl	%ebx
.LCFI491:
	subl	$96, %esp
.LCFI492:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8528 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4097
	movl	$2, -76(%ebp)
	jmp	.L4099
.L4097:
	movl	$5, -76(%ebp)
.L4099:
	movl	-76(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 8529 0
	movl	$-1, -20(%ebp)
	.loc 1 8532 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$130, %ax
	jne	.L4100
.LBB110:
	.loc 1 8534 0
	movl	$0, -12(%ebp)
	.loc 1 8536 0
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 16(%ebp)
	.loc 1 8540 0
	movl	reg_renumber@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4105
	.loc 1 8541 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	true_regnum@PLT
	movl	%eax, -20(%ebp)
	jmp	.L4104
.L4106:
	.loc 1 8546 0
	movl	16(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	16(%ebp), %eax
	movl	12(%eax), %ecx
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %esi
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	subreg_regno_offset@PLT
	movl	%eax, %edx
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 8550 0
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 16(%ebp)
.L4105:
	.loc 1 8544 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$73, %ax
	je	.L4106
	.loc 1 8553 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4104
	.loc 1 8554 0
	movl	16(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -20(%ebp)
.L4104:
	.loc 1 8561 0
	movl	-20(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L4109
	.loc 1 8562 0
	cmpl	$5, 8(%ebp)
	jne	.L4111
	movl	$0, -68(%ebp)
	jmp	.L4113
.L4111:
	movl	$5, -68(%ebp)
.L4113:
	movl	-68(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4109:
	.loc 1 8566 0
	cmpl	$6, 8(%ebp)
	jne	.L4120
	.loc 1 8567 0
	movl	-20(%ebp), %eax
	cmpl	$31, %eax
	ja	.L4117
	movl	$0, -64(%ebp)
	jmp	.L4119
.L4117:
	movl	$5, -64(%ebp)
.L4119:
	movl	-64(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4100:
.LBE110:
	.loc 1 8570 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	je	.L4121
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$73, %ax
	jne	.L4120
.L4121:
	.loc 1 8571 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	true_regnum@PLT
	movl	%eax, -20(%ebp)
.L4120:
	.loc 1 8573 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4123
	cmpl	$1, -20(%ebp)
	jle	.L4125
	cmpl	$7, -20(%ebp)
	jle	.L4127
.L4125:
	cmpl	$16, -20(%ebp)
	je	.L4127
	cmpl	$17, -20(%ebp)
	jne	.L4129
.L4127:
	movl	$1, -56(%ebp)
	jmp	.L4130
.L4129:
	movl	$0, -56(%ebp)
.L4130:
	movl	-56(%ebp), %eax
	movl	%eax, -60(%ebp)
	jmp	.L4131
.L4123:
	movl	-20(%ebp), %eax
	cmpl	$31, %eax
	setbe	%al
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
.L4131:
	movl	-60(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 8578 0
	cmpl	$9, 8(%ebp)
	jne	.L4132
	cmpl	$0, -20(%ebp)
	je	.L4132
	.loc 1 8579 0
	cmpl	$0, 20(%ebp)
	jne	.L4135
	cmpl	$0, -16(%ebp)
	je	.L4135
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	4(%eax), %eax
	cmpb	%al, %dl
	jbe	.L4138
.L4135:
	movl	-24(%ebp), %eax
	movl	%eax, -52(%ebp)
	jmp	.L4139
.L4138:
	movl	$0, -52(%ebp)
.L4139:
	movl	-52(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4132:
	.loc 1 8583 0
	cmpl	$66, -20(%ebp)
	jne	.L4140
	.loc 1 8584 0
	cmpl	$0, 20(%ebp)
	je	.L4142
	movl	8(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jne	.L4142
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	4(%eax), %eax
	cmpb	%al, %dl
	jbe	.L4145
.L4142:
	movl	-24(%ebp), %eax
	movl	%eax, -48(%ebp)
	jmp	.L4146
.L4145:
	movl	$0, -48(%ebp)
.L4146:
	movl	-48(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4140:
	.loc 1 8591 0
	cmpl	$7, 8(%ebp)
	je	.L4147
	cmpl	$8, 8(%ebp)
	je	.L4147
	cmpl	$10, 8(%ebp)
	jne	.L4150
.L4147:
	.loc 1 8593 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4151
	cmpl	$0, 20(%ebp)
	je	.L4151
	.loc 1 8596 0
	movl	$2, -72(%ebp)
	jmp	.L4114
.L4151:
	.loc 1 8598 0
	cmpl	$0, -16(%ebp)
	jne	.L4154
	movl	-24(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L4156
.L4154:
	movl	$0, -44(%ebp)
.L4156:
	movl	-44(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4150:
	.loc 1 8600 0
	movl	-20(%ebp), %eax
	subl	$64, %eax
	cmpl	$2, %eax
	ja	.L4157
	.loc 1 8602 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4159
	cmpl	$0, 20(%ebp)
	jne	.L4159
	.loc 1 8605 0
	movl	$2, -72(%ebp)
	jmp	.L4114
.L4159:
	.loc 1 8607 0
	movl	8(%ebp), %eax
	cmpl	-24(%ebp), %eax
	je	.L4162
	movl	-24(%ebp), %eax
	movl	%eax, -40(%ebp)
	jmp	.L4164
.L4162:
	movl	$0, -40(%ebp)
.L4164:
	movl	-40(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4157:
	.loc 1 8614 0
	cmpl	$23, 8(%ebp)
	jne	.L4165
	.loc 1 8616 0
	cmpl	$0, 20(%ebp)
	je	.L4167
	.loc 1 8617 0
	movl	$6, -72(%ebp)
	jmp	.L4114
.L4167:
	.loc 1 8618 0
	movl	-20(%ebp), %eax
	cmpl	$31, %eax
	ja	.L4169
	movl	$0, -36(%ebp)
	jmp	.L4171
.L4169:
	movl	$5, -36(%ebp)
.L4171:
	movl	-36(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4165:
	.loc 1 8620 0
	movl	-20(%ebp), %eax
	subl	$67, %eax
	cmpl	$7, %eax
	ja	.L4172
	.loc 1 8622 0
	cmpl	$0, 20(%ebp)
	jne	.L4174
	.loc 1 8623 0
	movl	$6, -72(%ebp)
	jmp	.L4114
.L4174:
	.loc 1 8624 0
	cmpl	$5, 8(%ebp)
	jne	.L4176
	movl	$0, -32(%ebp)
	jmp	.L4178
.L4176:
	movl	$5, -32(%ebp)
.L4178:
	movl	-32(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4172:
	.loc 1 8627 0
	cmpl	$6, 8(%ebp)
	jne	.L4179
	.loc 1 8629 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L4181
	.loc 1 8632 0
	movl	$0, -72(%ebp)
	jmp	.L4114
.L4181:
	.loc 1 8634 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	je	.L4183
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L4183
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	je	.L4183
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$65, %ax
	je	.L4183
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L4183
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$144, %ax
	je	.L4183
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$66, %ax
	je	.L4183
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$150, %ax
	jne	.L4191
.L4183:
	movl	12(%ebp), %eax
	movl	mode_class@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	$2, %eax
	jne	.L4191
	.loc 1 8639 0
	movl	$0, -72(%ebp)
	jmp	.L4114
.L4191:
	.loc 1 8641 0
	movl	-20(%ebp), %eax
	cmpl	$31, %eax
	jbe	.L4193
	movl	12(%ebp), %eax
	movl	const_tiny_rtx@GOT(%ebx), %edx
	movl	(%edx,%eax,4), %eax
	cmpl	16(%ebp), %eax
	jne	.L4195
.L4193:
	.loc 1 8644 0
	movl	$0, -72(%ebp)
	jmp	.L4114
.L4195:
	.loc 1 8646 0
	movl	-20(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	ja	.L4196
	.loc 1 8649 0
	movl	$0, -72(%ebp)
	jmp	.L4114
.L4196:
	.loc 1 8654 0
	movl	$5, -72(%ebp)
	jmp	.L4114
.L4179:
	.loc 1 8660 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4198
	.loc 1 8662 0
	cmpl	$2, 8(%ebp)
	je	.L4200
	cmpl	$1, 8(%ebp)
	je	.L4200
	.loc 1 8664 0
	cmpl	$0, -16(%ebp)
	je	.L4203
	.loc 1 8665 0
	movl	$0, -72(%ebp)
	jmp	.L4114
.L4203:
	.loc 1 8666 0
	movl	$2, -72(%ebp)
	jmp	.L4114
.L4200:
	.loc 1 8668 0
	cmpl	$0, -16(%ebp)
	jne	.L4198
	.loc 1 8677 0
	movl	16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L4206
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4206
	movl	16(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4206
	movl	16(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	cmpl	%eax, %edx
	je	.L4210
	movl	16(%ebp), %eax
	movl	12(%eax), %edx
	movl	global_rtl@GOT(%ebx), %eax
	movl	8(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4206
.L4210:
	.loc 1 8681 0
	cmpl	$2, 8(%ebp)
	jne	.L4212
	movl	$1, -28(%ebp)
	jmp	.L4214
.L4212:
	movl	$2, -28(%ebp)
.L4214:
	movl	-28(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4114
.L4206:
	.loc 1 8683 0
	cmpl	$2, 8(%ebp)
	je	.L4215
	cmpl	$1, 8(%ebp)
	jne	.L4217
.L4215:
	.loc 1 8684 0
	movl	$0, -72(%ebp)
	jmp	.L4114
.L4217:
	.loc 1 8685 0
	movl	$2, -72(%ebp)
	jmp	.L4114
.L4198:
	.loc 1 8689 0
	movl	$0, -72(%ebp)
.L4114:
	movl	-72(%ebp), %eax
	.loc 1 8690 0
	addl	$96, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE137:
	.size	mips_secondary_reload_class, .-mips_secondary_reload_class
.globl mips_class_max_nregs
	.type	mips_class_max_nregs, @function
mips_class_max_nregs:
.LFB138:
	.loc 1 8699 0
	pushl	%ebp
.LCFI493:
	movl	%esp, %ebp
.LCFI494:
	subl	$24, %esp
.LCFI495:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 8700 0
	cmpl	$6, 8(%ebp)
	jne	.L4220
	.loc 1 8701 0
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	jne	.L4222
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$131072, %eax
	testl	%eax, %eax
	je	.L4224
.L4222:
	movl	$1, -20(%ebp)
	jmp	.L4225
.L4224:
	movl	$2, -20(%ebp)
.L4225:
	movl	-20(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L4226
.L4220:
	.loc 1 8703 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ecx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4227
	movl	$8, -12(%ebp)
	jmp	.L4229
.L4227:
	movl	$4, -12(%ebp)
.L4229:
	movl	-16(%ebp), %eax
	addl	-12(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -8(%ebp)
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4230
	movl	$8, -4(%ebp)
	jmp	.L4232
.L4230:
	movl	$4, -4(%ebp)
.L4232:
	movl	-8(%ebp), %edx
	movl	%edx, %eax
	sarl	$31, %edx
	idivl	-4(%ebp)
	movl	%eax, -24(%ebp)
.L4226:
	movl	-24(%ebp), %eax
	.loc 1 8704 0
	leave
	ret
.LFE138:
	.size	mips_class_max_nregs, .-mips_class_max_nregs
.globl mips16_gp_pseudo_reg
	.type	mips16_gp_pseudo_reg, @function
mips16_gp_pseudo_reg:
.LFB139:
	.loc 1 8712 0
	pushl	%ebp
.LCFI496:
	movl	%esp, %ebp
.LCFI497:
	pushl	%ebx
.LCFI498:
	subl	$52, %esp
.LCFI499:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8713 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L4235
.LBB111:
	.loc 1 8718 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	%eax, -40(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4237
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4237
	movl	$5, -36(%ebp)
	jmp	.L4240
.L4237:
	movl	$4, -36(%ebp)
.L4240:
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_reg_rtx@PLT
	movl	-40(%ebp), %edx
	movl	%eax, 4(%edx)
	.loc 1 8719 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	4(%eax), %edx
	movzbl	3(%edx), %eax
	orl	$4, %eax
	movb	%al, 3(%edx)
	.loc 1 8723 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4241
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4241
	movl	$5, -32(%ebp)
	jmp	.L4244
.L4241:
	movl	$4, -32(%ebp)
.L4244:
	movl	$28, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -28(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4245
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4245
	movl	$5, -24(%ebp)
	jmp	.L4248
.L4245:
	movl	$4, -24(%ebp)
.L4248:
	movl	-28(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$68, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -16(%ebp)
	.loc 1 8726 0
	call	start_sequence@PLT
	.loc 1 8727 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	4(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_move_insn@PLT
	.loc 1 8729 0
	call	get_insns@PLT
	movl	%eax, -12(%ebp)
	.loc 1 8730 0
	call	end_sequence@PLT
	.loc 1 8732 0
	call	push_topmost_sequence@PLT
	.loc 1 8735 0
	call	get_insns@PLT
	movl	%eax, -8(%ebp)
	jmp	.L4249
.L4250:
	.loc 1 8736 0
	movl	-8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$47, %ax
	jne	.L4251
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	cmpl	$-87, %eax
	je	.L4253
.L4251:
	.loc 1 8735 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -8(%ebp)
.L4249:
	cmpl	$0, -8(%ebp)
	jne	.L4250
.L4253:
	.loc 1 8739 0
	cmpl	$0, -8(%ebp)
	jne	.L4254
	.loc 1 8740 0
	call	get_insns@PLT
	movl	%eax, -8(%ebp)
.L4254:
	.loc 1 8741 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_insn_after@PLT
	movl	%eax, -12(%ebp)
	.loc 1 8742 0
	call	pop_topmost_sequence@PLT
.L4235:
.LBE111:
	.loc 1 8745 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %eax
	movl	4(%eax), %eax
	.loc 1 8746 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE139:
	.size	mips16_gp_pseudo_reg, .-mips16_gp_pseudo_reg
	.section	.rodata
	.type	__FUNCTION__.25359, @object
	.size	__FUNCTION__.25359, 17
__FUNCTION__.25359:
	.string	"mips16_gp_offset"
.LC313:
	.string	"__mips16_gp_value"
	.text
.globl mips16_gp_offset
	.type	mips16_gp_offset, @function
mips16_gp_offset:
.LFB140:
	.loc 1 8755 0
	pushl	%ebp
.LCFI500:
	movl	%esp, %ebp
.LCFI501:
	pushl	%ebx
.LCFI502:
	subl	$68, %esp
.LCFI503:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8758 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L4258
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L4260
.L4258:
	.loc 1 8760 0
	leal	__FUNCTION__.25359@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8760, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4260:
	.loc 1 8764 0
	movl	$17, 4(%esp)
	leal	.LC313@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%eax, -8(%ebp)
	.loc 1 8766 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -44(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4261
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4261
	movl	$5, -40(%ebp)
	jmp	.L4264
.L4261:
	movl	$4, -40(%ebp)
.L4264:
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$78, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -36(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4265
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4265
	movl	$5, -32(%ebp)
	jmp	.L4268
.L4265:
	movl	$4, -32(%ebp)
.L4268:
	movl	-36(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$86, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -28(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4269
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4269
	movl	$5, -24(%ebp)
	jmp	.L4272
.L4269:
	movl	$4, -24(%ebp)
.L4272:
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$68, (%esp)
	call	gen_rtx@PLT
	.loc 1 8770 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE140:
	.size	mips16_gp_offset, .-mips16_gp_offset
.globl mips16_gp_offset_p
	.type	mips16_gp_offset_p, @function
mips16_gp_offset_p:
.LFB141:
	.loc 1 8778 0
	pushl	%ebp
.LCFI504:
	movl	%esp, %ebp
.LCFI505:
	pushl	%ebx
.LCFI506:
	subl	$52, %esp
.LCFI507:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8779 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L4275
	.loc 1 8780 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%ebp)
.L4275:
	.loc 1 8783 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L4277
	.loc 1 8785 0
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L4279
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -40(%ebp)
	movl	%edx, -36(%ebp)
	cmpl	$0, -36(%ebp)
	ja	.L4279
	cmpl	$0, -36(%ebp)
	jb	.L4282
	cmpl	$65535, -40(%ebp)
	ja	.L4279
.L4282:
	.loc 1 8787 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	mips16_gp_offset_p@PLT
	movl	%eax, -28(%ebp)
	jmp	.L4283
.L4279:
	.loc 1 8788 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$64, %ax
	jne	.L4284
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	addl	$32768, %eax
	adcl	$0, %edx
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	cmpl	$0, -20(%ebp)
	ja	.L4284
	cmpl	$0, -20(%ebp)
	jb	.L4287
	cmpl	$65535, -24(%ebp)
	ja	.L4284
.L4287:
	.loc 1 8790 0
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	mips16_gp_offset_p@PLT
	movl	%eax, -28(%ebp)
	jmp	.L4283
.L4284:
	.loc 1 8791 0
	movl	$0, -28(%ebp)
	jmp	.L4283
.L4277:
	.loc 1 8795 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$86, %ax
	jne	.L4288
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L4288
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4288
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L4288
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %edx
	leal	.LC313@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L4288
	movl	$1, -12(%ebp)
	jmp	.L4294
.L4288:
	movl	$0, -12(%ebp)
.L4294:
	movl	-12(%ebp), %eax
	movl	%eax, -28(%ebp)
.L4283:
	movl	-28(%ebp), %eax
	.loc 1 8800 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE141:
	.size	mips16_gp_offset_p, .-mips16_gp_offset_p
	.type	mips16_output_gp_offset, @function
mips16_output_gp_offset:
.LFB142:
	.loc 1 8810 0
	pushl	%ebp
.LCFI508:
	movl	%esp, %ebp
.LCFI509:
	pushl	%ebx
.LCFI510:
	subl	$20, %esp
.LCFI511:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8811 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L4297
	.loc 1 8812 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 12(%ebp)
.L4297:
	.loc 1 8814 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L4299
	.loc 1 8816 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_output_gp_offset
	.loc 1 8817 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$43, (%esp)
	call	fputc_unlocked@PLT
	.loc 1 8818 0
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_output_gp_offset
	.loc 1 8819 0
	jmp	.L4306
.L4299:
	.loc 1 8822 0
	movl	12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$86, %ax
	jne	.L4302
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L4302
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %edx
	leal	.LC313@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L4302
	.loc 1 8826 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_output_gp_offset
	.loc 1 8827 0
	jmp	.L4306
.L4302:
	.loc 1 8830 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	output_addr_const@PLT
.L4306:
	.loc 1 8831 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE142:
	.size	mips16_output_gp_offset, .-mips16_output_gp_offset
.globl mips16_constant_after_function_p
	.type	mips16_constant_after_function_p, @function
mips16_constant_after_function_p:
.LFB143:
	.loc 1 8849 0
	pushl	%ebp
.LCFI512:
	movl	%esp, %ebp
.LCFI513:
	pushl	%ebx
.LCFI514:
	subl	$36, %esp
.LCFI515:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8850 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L4308
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4308
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4308
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	34(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L4308
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	33(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4313
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L4315
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L4315
	movl	flag_keep_inline_functions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4308
.L4315:
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L4308
.L4313:
.LBB112:
	.loc 1 8862 0
	movl	$8, (%esp)
	call	xmalloc@PLT
	movl	%eax, -8(%ebp)
	.loc 1 8863 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 8864 0
	movl	string_constants@GOTOFF(%ebx), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8865 0
	movl	-8(%ebp), %eax
	movl	%eax, string_constants@GOTOFF(%ebx)
	.loc 1 8867 0
	movl	$1, -24(%ebp)
	jmp	.L4318
.L4308:
.LBE112:
	.loc 1 8870 0
	movl	$0, -24(%ebp)
.L4318:
	movl	-24(%ebp), %eax
	.loc 1 8871 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE143:
	.size	mips16_constant_after_function_p, .-mips16_constant_after_function_p
.globl mips16_constant
	.type	mips16_constant, @function
mips16_constant:
.LFB144:
	.loc 1 8884 0
	pushl	%ebp
.LCFI516:
	movl	%esp, %ebp
.LCFI517:
	pushl	%ebx
.LCFI518:
	subl	$76, %esp
.LCFI519:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8885 0
	jmp	.L4321
.L4322:
	.loc 1 8886 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%ebp)
.L4321:
	.loc 1 8885 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L4322
	.loc 1 8888 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	subl	$64, %eax
	movl	%eax, -64(%ebp)
	cmpl	$21, -64(%ebp)
	ja	.L4324
	movl	-64(%ebp), %eax
	sall	$2, %eax
	movl	.L4330@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L4330:
	.long	.L4325@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4326@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4327@GOTOFF
	.long	.L4328@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4324@GOTOFF
	.long	.L4329@GOTOFF
	.text
.L4324:
	.loc 1 8891 0
	movl	$0, -60(%ebp)
	jmp	.L4331
.L4329:
	.loc 1 8894 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	$1, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	mips16_constant@PLT
	testl	%eax, %eax
	je	.L4332
	movl	8(%ebp), %eax
	movl	12(%eax), %edx
	movl	$1, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	mips16_constant@PLT
	testl	%eax, %eax
	je	.L4332
	movl	$1, -56(%ebp)
	jmp	.L4335
.L4332:
	movl	$0, -56(%ebp)
.L4335:
	movl	-56(%ebp), %eax
	movl	%eax, -60(%ebp)
	jmp	.L4331
.L4328:
	.loc 1 8898 0
	cmpl	$0, 16(%ebp)
	je	.L4336
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$4, %al
	je	.L4336
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$8, %al
	je	.L4336
	.loc 1 8899 0
	movl	$0, -60(%ebp)
	jmp	.L4331
.L4336:
	.loc 1 8900 0
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L4340
	.loc 1 8901 0
	movl	$1, -60(%ebp)
	jmp	.L4331
.L4340:
	.loc 1 8908 0
	cmpl	$0, 16(%ebp)
	jne	.L4342
	cmpl	$0, 20(%ebp)
	jne	.L4342
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4342
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4346
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4346
	movl	$5, -52(%ebp)
	jmp	.L4349
.L4346:
	movl	$4, -52(%ebp)
.L4349:
	movl	-52(%ebp), %edx
	cmpl	12(%ebp), %edx
	jne	.L4342
	.loc 1 8912 0
	movl	$1, -60(%ebp)
	jmp	.L4331
.L4342:
	.loc 1 8919 0
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4351
.LBB113:
	.loc 1 8921 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 8923 0
	movl	-12(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$42, %al
	jne	.L4353
	movl	-12(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %edx
	leal	.LC39@GOTOFF(%ebx), %eax
	movzbl	(%eax), %eax
	cmpb	%al, %dl
	jne	.L4353
	movl	$1, -48(%ebp)
	jmp	.L4356
.L4353:
	movl	$0, -48(%ebp)
.L4356:
	movl	-48(%ebp), %ecx
	movl	%ecx, -60(%ebp)
	jmp	.L4331
.L4351:
.LBE113:
	.loc 1 8928 0
	movl	$0, -60(%ebp)
	jmp	.L4331
.L4327:
	.loc 1 8931 0
	cmpl	$0, 16(%ebp)
	je	.L4357
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$4, %al
	je	.L4357
	movl	12(%ebp), %eax
	movl	mode_size@GOT(%ebx), %edx
	movzbl	(%edx,%eax), %eax
	cmpb	$8, %al
	je	.L4357
	.loc 1 8932 0
	movl	$0, -60(%ebp)
	jmp	.L4331
.L4357:
	.loc 1 8933 0
	movl	$1, -60(%ebp)
	jmp	.L4331
.L4325:
	.loc 1 8936 0
	cmpl	$0, 16(%ebp)
	je	.L4361
	cmpl	$0, 20(%ebp)
	jne	.L4361
	.loc 1 8937 0
	movl	$0, -60(%ebp)
	jmp	.L4331
.L4361:
	.loc 1 8938 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -40(%ebp)
	movl	%ecx, -36(%ebp)
	cmpl	$-1, -36(%ebp)
	jl	.L4364
	cmpl	$-1, -36(%ebp)
	jg	.L4366
	cmpl	$-65536, -40(%ebp)
	jbe	.L4364
.L4366:
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%eax), %ecx
	movl	%edx, -32(%ebp)
	movl	%ecx, -28(%ebp)
	cmpl	$0, -28(%ebp)
	jg	.L4364
	cmpl	$0, -28(%ebp)
	js	.L4368
	cmpl	$65535, -32(%ebp)
	ja	.L4364
.L4368:
	movl	$1, -44(%ebp)
	jmp	.L4369
.L4364:
	movl	$0, -44(%ebp)
.L4369:
	movl	-44(%ebp), %ecx
	movl	%ecx, -60(%ebp)
	jmp	.L4331
.L4326:
	.loc 1 8943 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$28, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
.L4331:
	movl	-60(%ebp), %eax
	.loc 1 8945 0
	addl	$76, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE144:
	.size	mips16_constant, .-mips16_constant
	.section	.rodata
	.type	__FUNCTION__.25634, @object
	.size	__FUNCTION__.25634, 15
__FUNCTION__.25634:
	.string	"mips16_fp_args"
.LC314:
	.string	"mfc1"
.LC315:
	.string	"mtc1"
.LC316:
	.string	"\t%s\t%s,%s\n"
.LC317:
	.string	"\td%s\t%s,%s\n"
.LC318:
	.string	"\t%s\t%s,%s\n\t%s\t%s,%s\n"
	.text
	.type	mips16_fp_args, @function
mips16_fp_args:
.LFB145:
	.loc 1 8958 0
	pushl	%ebp
.LCFI520:
	movl	%esp, %ebp
.LCFI521:
	pushl	%edi
.LCFI522:
	pushl	%esi
.LCFI523:
	pushl	%ebx
.LCFI524:
	subl	$60, %esp
.LCFI525:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8964 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4372
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4372
	.loc 1 8965 0
	leal	__FUNCTION__.25634@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8965, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4372:
	.loc 1 8967 0
	cmpl	$0, 16(%ebp)
	je	.L4375
	.loc 1 8968 0
	leal	.LC314@GOTOFF(%ebx), %eax
	movl	%eax, -28(%ebp)
	jmp	.L4377
.L4375:
	.loc 1 8970 0
	leal	.LC315@GOTOFF(%ebx), %eax
	movl	%eax, -28(%ebp)
.L4377:
	.loc 1 8971 0
	movl	$4, -24(%ebp)
	.loc 1 8972 0
	movl	$44, -20(%ebp)
	.loc 1 8973 0
	movl	12(%ebp), %eax
	movl	%eax, -16(%ebp)
	jmp	.L4378
.L4379:
	.loc 1 8975 0
	movl	-16(%ebp), %eax
	andl	$3, %eax
	cmpl	$1, %eax
	jne	.L4380
	.loc 1 8977 0
	movl	-20(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4382
	.loc 1 8978 0
	addl	$1, -20(%ebp)
.L4382:
	.loc 1 8979 0
	movl	-20(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %ecx
	movl	-24(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%ecx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC316@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	jmp	.L4384
.L4380:
	.loc 1 8982 0
	movl	-16(%ebp), %eax
	andl	$3, %eax
	cmpl	$2, %eax
	jne	.L4385
	.loc 1 8984 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4387
	.loc 1 8985 0
	movl	-20(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %ecx
	movl	-24(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	movl	%ecx, 16(%esp)
	movl	%eax, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC317@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	jmp	.L4384
.L4387:
	.loc 1 8989 0
	movl	-20(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4390
	.loc 1 8990 0
	addl	$1, -20(%ebp)
.L4390:
	.loc 1 8991 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L4392
	.loc 1 8992 0
	movl	-20(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %ecx
	movl	-24(%ebp), %edx
	addl	$1, %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %esi
	movl	-20(%ebp), %edx
	addl	$1, %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edi
	movl	-24(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edx
	movl	%ecx, 28(%esp)
	movl	%esi, 24(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	%edi, 16(%esp)
	movl	%edx, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC318@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	jmp	.L4394
.L4392:
	.loc 1 8996 0
	movl	-20(%ebp), %edx
	addl	$1, %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %ecx
	movl	-24(%ebp), %edx
	addl	$1, %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %esi
	movl	-20(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edi
	movl	-24(%ebp), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %edx
	movl	%ecx, 28(%esp)
	movl	%esi, 24(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	%edi, 16(%esp)
	movl	%edx, 12(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC318@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
.L4394:
	.loc 1 8999 0
	addl	$1, -24(%ebp)
	.loc 1 9000 0
	addl	$1, -20(%ebp)
	jmp	.L4384
.L4385:
	.loc 1 9004 0
	leal	__FUNCTION__.25634@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9004, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4384:
	.loc 1 9006 0
	addl	$1, -24(%ebp)
	.loc 1 9007 0
	addl	$1, -20(%ebp)
	.loc 1 8973 0
	shrl	$2, -16(%ebp)
.L4378:
	cmpl	$0, -16(%ebp)
	jne	.L4379
	.loc 1 9009 0
	addl	$60, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE145:
	.size	mips16_fp_args, .-mips16_fp_args
	.section	.rodata
.LC319:
	.string	".mips16.fn.%s"
.LC320:
	.string	"__fn_stub_%s"
.LC321:
	.string	"\t# Stub function for %s ("
.LC322:
	.string	"float"
.LC323:
	.string	"double"
.LC324:
	.string	", "
.LC325:
	.string	"%s%s"
.LC326:
	.string	")\n"
.LC327:
	.string	"\t.set\tnomips16\n"
.LC328:
	.string	":\n"
.LC329:
	.string	"\t.set\tnoreorder\n"
.LC330:
	.string	"\t.set\tnoat\n"
.LC331:
	.string	"\tla\t%s,"
.LC332:
	.string	"\tjr\t%s\n"
.LC333:
	.string	"\t.set\tat\n"
.LC334:
	.string	"\tnop\n"
.LC335:
	.string	"\t.set\treorder\n"
	.text
	.type	build_mips16_function_stub, @function
build_mips16_function_stub:
.LFB146:
	.loc 1 9019 0
	pushl	%ebp
.LCFI526:
	movl	%esp, %ebp
.LCFI527:
	pushl	%edi
.LCFI528:
	pushl	%ebx
.LCFI529:
	subl	$96, %esp
.LCFI530:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 9019 0
	movl	%gs:20, %eax
	movl	%eax, -12(%ebp)
	xorl	%eax, %eax
	.loc 1 9026 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L4398
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -64(%ebp)
	jmp	.L4400
.L4398:
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	88(%eax), %eax
	movl	%eax, -64(%ebp)
.L4400:
	movl	-64(%ebp), %edx
	movl	4(%edx), %eax
	movl	4(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 9027 0
	movl	-40(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -68(%ebp)
	movl	$0, %eax
	cld
	movl	-68(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	addl	$20, %eax
	addl	$15, %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	subl	%eax, %esp
	leal	16(%esp), %eax
	movl	%eax, -60(%ebp)
	movl	-60(%ebp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -60(%ebp)
	movl	-60(%ebp), %edx
	movl	%edx, -36(%ebp)
	.loc 1 9028 0
	movl	-40(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC319@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 9029 0
	movl	-40(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -72(%ebp)
	movl	$0, %eax
	cld
	movl	-72(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	addl	$20, %eax
	addl	$15, %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	subl	%eax, %esp
	leal	16(%esp), %eax
	movl	%eax, -56(%ebp)
	movl	-56(%ebp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -56(%ebp)
	movl	-56(%ebp), %edx
	movl	%edx, -32(%ebp)
	.loc 1 9030 0
	movl	-40(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC320@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 9031 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, -28(%ebp)
	.loc 1 9032 0
	movl	global_trees@GOT(%ebx), %eax
	movl	108(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$31, (%esp)
	call	build_decl@PLT
	movl	%eax, -24(%ebp)
	.loc 1 9034 0
	movl	-36(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -76(%ebp)
	movl	$0, %eax
	cld
	movl	-76(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_string@PLT
	movl	%eax, %edx
	movl	-24(%ebp), %eax
	movl	%edx, 80(%eax)
	.loc 1 9036 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC321@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 9037 0
	movl	$0, -20(%ebp)
	.loc 1 9038 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	72(%eax), %eax
	movl	%eax, -16(%ebp)
	jmp	.L4401
.L4402:
	.loc 1 9040 0
	movl	-16(%ebp), %eax
	andl	$3, %eax
	cmpl	$1, %eax
	jne	.L4403
	leal	.LC322@GOTOFF(%ebx), %eax
	movl	%eax, -52(%ebp)
	jmp	.L4405
.L4403:
	leal	.LC323@GOTOFF(%ebx), %edx
	movl	%edx, -52(%ebp)
.L4405:
	cmpl	$0, -20(%ebp)
	je	.L4406
	leal	.LC324@GOTOFF(%ebx), %edi
	movl	%edi, -48(%ebp)
	jmp	.L4408
.L4406:
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -48(%ebp)
.L4408:
	movl	-52(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-48(%ebp), %edi
	movl	%edi, 8(%esp)
	leal	.LC325@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 9043 0
	movl	$1, -20(%ebp)
	.loc 1 9038 0
	shrl	$2, -16(%ebp)
.L4401:
	cmpl	$0, -16(%ebp)
	jne	.L4402
	.loc 1 9045 0
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC326@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9047 0
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$15, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC327@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9048 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	function_section@PLT
	.loc 1 9049 0
	movl	$4, (%esp)
	movl	$0, 4(%esp)
	call	floor_log2_wide@PLT
	movl	%eax, 8(%esp)
	leal	.LC201@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	fprintf@PLT
	.loc 1 9059 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	assemble_name@PLT
	.loc 1 9060 0
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC328@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	.loc 1 9063 0
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$16, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC329@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9065 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	72(%eax), %eax
	movl	$1, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_fp_args
	.loc 1 9067 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$11, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC330@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9068 0
	movl	reg_names@GOT(%ebx), %eax
	movl	4(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC331@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 9069 0
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	assemble_name@PLT
	.loc 1 9070 0
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
	.loc 1 9071 0
	movl	reg_names@GOT(%ebx), %eax
	movl	4(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC332@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 9072 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$9, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC333@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9079 0
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$5, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC334@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9081 0
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC335@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9089 0
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$13, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC280@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9091 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	function_section@PLT
	.loc 1 9092 0
	movl	-12(%ebp), %eax
	xorl	%gs:20, %eax
	je	.L4411
	call	__stack_chk_fail_local
.L4411:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%edi
	popl	%ebp
	ret
.LFE146:
	.size	build_mips16_function_stub, .-build_mips16_function_stub
	.section	.rodata
	.type	__FUNCTION__.25778, @object
	.size	__FUNCTION__.25778, 23
__FUNCTION__.25778:
	.string	"build_mips16_call_stub"
.LC336:
	.string	"__mips16_"
.LC337:
	.string	"sf_"
.LC338:
	.string	"df_"
.LC339:
	.string	"__mips16_call_stub_%s%d"
.LC340:
	.string	"fp."
.LC341:
	.string	".mips16.call.%s%s"
.LC342:
	.string	"fp_"
.LC343:
	.string	"__call_stub_%s%s"
.LC344:
	.string	"float "
.LC345:
	.string	"double "
	.align 4
.LC346:
	.string	"\t# Stub function to call %s%s ("
.LC347:
	.string	"\tla\t%s,%s\n"
.LC348:
	.string	"\tmove\t%s,%s\n"
.LC349:
	.string	"\tjal\t%s\n"
.LC350:
	.string	"\tmfc1\t%s,%s\n"
.LC351:
	.string	"\tj\t%s\n"
.LC352:
	.string	"\t.end\t"
	.align 4
.LC353:
	.string	"can not handle inconsistent calls to `%s'"
	.text
.globl build_mips16_call_stub
	.type	build_mips16_call_stub, @function
build_mips16_call_stub:
.LFB147:
	.loc 1 9129 0
	pushl	%ebp
.LCFI531:
	movl	%esp, %ebp
.LCFI532:
	pushl	%edi
.LCFI533:
	pushl	%esi
.LCFI534:
	pushl	%ebx
.LCFI535:
	subl	$236, %esp
.LCFI536:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -112(%ebp)
	movl	12(%ebp), %eax
	movl	%eax, -116(%ebp)
	movl	16(%ebp), %eax
	movl	%eax, -120(%ebp)
	.loc 1 9129 0
	movl	%gs:20, %eax
	movl	%eax, -16(%ebp)
	xorl	%eax, %eax
	.loc 1 9141 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4413
	movl	mips16_hard_float@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4415
.L4413:
	.loc 1 9142 0
	movl	$0, -204(%ebp)
	jmp	.L4416
.L4415:
	.loc 1 9146 0
	cmpl	$0, -112(%ebp)
	je	.L4417
	movl	-112(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_class@GOT(%ebx), %eax
	movl	(%eax,%edx,4), %eax
	cmpl	$2, %eax
	jne	.L4417
	movl	-112(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -196(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$256, %eax
	testl	%eax, %eax
	jne	.L4420
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L4422
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L4424
.L4422:
	movl	$16, -188(%ebp)
	jmp	.L4425
.L4424:
	movl	$8, -188(%ebp)
.L4425:
	movl	-188(%ebp), %edx
	movl	%edx, -192(%ebp)
	jmp	.L4426
.L4420:
	movl	$0, -192(%ebp)
.L4426:
	movl	-192(%ebp), %ecx
	cmpl	%ecx, -196(%ebp)
	jg	.L4417
	movl	$1, -200(%ebp)
	jmp	.L4428
.L4417:
	movl	$0, -200(%ebp)
.L4428:
	movl	-200(%ebp), %esi
	movl	%esi, -108(%ebp)
	.loc 1 9153 0
	cmpl	$0, 20(%ebp)
	jne	.L4429
	cmpl	$0, -108(%ebp)
	jne	.L4429
	.loc 1 9154 0
	movl	$0, -204(%ebp)
	jmp	.L4416
.L4429:
	.loc 1 9156 0
	movl	-116(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	je	.L4432
	.loc 1 9157 0
	leal	__FUNCTION__.25778@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9157, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4432:
	.loc 1 9158 0
	movl	-116(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -104(%ebp)
	.loc 1 9162 0
	movl	-104(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	jne	.L4434
	movl	-104(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -208(%ebp)
	leal	.LC336@GOTOFF(%ebx), %edi
	movl	%edi, -212(%ebp)
	movl	$9, -216(%ebp)
	cld
	movl	-208(%ebp), %esi
	movl	-212(%ebp), %edi
	movl	-216(%ebp), %ecx
	repz
	cmpsb
	seta	%dl
	setb	%al
	movl	%edx, %ecx
	subb	%al, %cl
	movl	%ecx, %eax
	movsbl	%al,%eax
	testl	%eax, %eax
	jne	.L4434
	.loc 1 9164 0
	movl	$0, -204(%ebp)
	jmp	.L4416
.L4434:
	.loc 1 9168 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4437
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4437
	.loc 1 9169 0
	leal	__FUNCTION__.25778@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9169, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4437:
	.loc 1 9173 0
	cmpl	$0, -108(%ebp)
	je	.L4440
	movl	-112(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$15, %al
	je	.L4440
	movl	-112(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$16, %al
	je	.L4440
	.loc 1 9174 0
	leal	__FUNCTION__.25778@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9174, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4440:
	.loc 1 9181 0
	movl	-104(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L4444
.LBB114:
	.loc 1 9190 0
	cmpl	$0, -108(%ebp)
	je	.L4446
	movl	-112(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$15, %al
	jne	.L4448
	leal	.LC337@GOTOFF(%ebx), %esi
	movl	%esi, -180(%ebp)
	jmp	.L4450
.L4448:
	leal	.LC338@GOTOFF(%ebx), %edi
	movl	%edi, -180(%ebp)
.L4450:
	movl	-180(%ebp), %eax
	movl	%eax, -184(%ebp)
	jmp	.L4451
.L4446:
	leal	.LC0@GOTOFF(%ebx), %edx
	movl	%edx, -184(%ebp)
.L4451:
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-184(%ebp), %ecx
	movl	%ecx, 8(%esp)
	leal	.LC339@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	-46(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 9195 0
	leal	-46(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, -68(%ebp)
	.loc 1 9196 0
	movl	-68(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -176(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4452
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4452
	movl	$5, -172(%ebp)
	jmp	.L4455
.L4452:
	movl	$4, -172(%ebp)
.L4455:
	movl	-176(%ebp), %esi
	movl	%esi, 8(%esp)
	movl	-172(%ebp), %edi
	movl	%edi, 4(%esp)
	movl	$78, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -64(%ebp)
	.loc 1 9197 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4456
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4456
	movl	$5, -168(%ebp)
	jmp	.L4459
.L4456:
	movl	$4, -168(%ebp)
.L4459:
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-168(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$76, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -60(%ebp)
	.loc 1 9199 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4460
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4460
	movl	$5, -164(%ebp)
	jmp	.L4463
.L4460:
	movl	$4, -164(%ebp)
.L4463:
	movl	$2, 8(%esp)
	movl	-164(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-104(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_move_insn@PLT
	.loc 1 9201 0
	cmpl	$0, -112(%ebp)
	jne	.L4464
	.loc 1 9202 0
	movl	$31, 8(%esp)
	movl	$4, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 8(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_call_internal0@PLT
	movl	%eax, -56(%ebp)
	jmp	.L4466
.L4464:
	.loc 1 9206 0
	movl	$31, 8(%esp)
	movl	$4, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 12(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-112(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_call_value_internal0@PLT
	movl	%eax, -56(%ebp)
.L4466:
	.loc 1 9209 0
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_call_insn@PLT
	movl	%eax, -56(%ebp)
	.loc 1 9212 0
	movl	-56(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$44, %ax
	je	.L4467
	.loc 1 9213 0
	leal	__FUNCTION__.25778@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9213, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4467:
	.loc 1 9214 0
	movl	-56(%ebp), %eax
	movl	76(%eax), %eax
	movl	%eax, -160(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4469
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4469
	movl	$5, -156(%ebp)
	jmp	.L4472
.L4469:
	movl	$4, -156(%ebp)
.L4472:
	movl	$2, 8(%esp)
	movl	-156(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$58, (%esp)
	call	gen_rtx@PLT
	movl	-160(%ebp), %esi
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	movl	%edx, 76(%eax)
	.loc 1 9224 0
	cmpl	$0, -108(%ebp)
	je	.L4473
	.loc 1 9225 0
	movl	-56(%ebp), %eax
	movl	76(%eax), %esi
	movl	word_mode@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$18, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$58, (%esp)
	call	gen_rtx@PLT
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	movl	%edx, 76(%eax)
.L4473:
	.loc 1 9232 0
	movl	$1, -204(%ebp)
	jmp	.L4416
.L4444:
.LBE114:
	.loc 1 9238 0
	movl	-104(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -100(%ebp)
	.loc 1 9239 0
	movl	mips16_stubs@GOTOFF(%ebx), %eax
	movl	%eax, -88(%ebp)
	jmp	.L4475
.L4476:
	.loc 1 9240 0
	movl	-88(%ebp), %eax
	movl	4(%eax), %edx
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	je	.L4477
	.loc 1 9239 0
	movl	-88(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -88(%ebp)
.L4475:
	cmpl	$0, -88(%ebp)
	jne	.L4476
.L4477:
	.loc 1 9243 0
	cmpl	$0, -88(%ebp)
	jne	.L4479
	.loc 1 9264 0
	movl	-100(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -220(%ebp)
	movl	$0, %eax
	cld
	movl	-220(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	addl	$40, %eax
	addl	$15, %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	subl	%eax, %esp
	leal	16(%esp), %eax
	movl	%eax, -152(%ebp)
	movl	-152(%ebp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -152(%ebp)
	movl	-152(%ebp), %edx
	movl	%edx, -96(%ebp)
	.loc 1 9265 0
	cmpl	$0, -108(%ebp)
	je	.L4481
	leal	.LC340@GOTOFF(%ebx), %ecx
	movl	%ecx, -148(%ebp)
	jmp	.L4483
.L4481:
	leal	.LC0@GOTOFF(%ebx), %esi
	movl	%esi, -148(%ebp)
.L4483:
	movl	-100(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-148(%ebp), %edi
	movl	%edi, 8(%esp)
	leal	.LC341@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-96(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 9268 0
	movl	-100(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -224(%ebp)
	movl	$0, %eax
	cld
	movl	-224(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	addl	$20, %eax
	addl	$15, %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	subl	%eax, %esp
	leal	16(%esp), %eax
	movl	%eax, -144(%ebp)
	movl	-144(%ebp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -144(%ebp)
	movl	-144(%ebp), %edx
	movl	%edx, -92(%ebp)
	.loc 1 9269 0
	cmpl	$0, -108(%ebp)
	je	.L4484
	leal	.LC342@GOTOFF(%ebx), %ecx
	movl	%ecx, -140(%ebp)
	jmp	.L4486
.L4484:
	leal	.LC0@GOTOFF(%ebx), %esi
	movl	%esi, -140(%ebp)
.L4486:
	movl	-100(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-140(%ebp), %edi
	movl	%edi, 8(%esp)
	leal	.LC343@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-92(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 9272 0
	movl	-92(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, -84(%ebp)
	.loc 1 9273 0
	movl	global_trees@GOT(%ebx), %eax
	movl	108(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, 8(%esp)
	movl	-84(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$31, (%esp)
	call	build_decl@PLT
	movl	%eax, -80(%ebp)
	.loc 1 9275 0
	movl	-96(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -228(%ebp)
	movl	$0, %eax
	cld
	movl	-228(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	movl	%eax, %edx
	movl	-96(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_string@PLT
	movl	%eax, %edx
	movl	-80(%ebp), %eax
	movl	%edx, 80(%eax)
	.loc 1 9277 0
	cmpl	$0, -108(%ebp)
	je	.L4487
	movl	-112(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$15, %al
	jne	.L4489
	leal	.LC344@GOTOFF(%ebx), %eax
	movl	%eax, -132(%ebp)
	jmp	.L4491
.L4489:
	leal	.LC345@GOTOFF(%ebx), %edx
	movl	%edx, -132(%ebp)
.L4491:
	movl	-132(%ebp), %ecx
	movl	%ecx, -136(%ebp)
	jmp	.L4492
.L4487:
	leal	.LC0@GOTOFF(%ebx), %esi
	movl	%esi, -136(%ebp)
.L4492:
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-100(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-136(%ebp), %edi
	movl	%edi, 8(%esp)
	leal	.LC346@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fprintf@PLT
	.loc 1 9282 0
	movl	$0, -76(%ebp)
	.loc 1 9283 0
	movl	20(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L4493
.L4494:
	.loc 1 9285 0
	movl	-72(%ebp), %eax
	andl	$3, %eax
	cmpl	$1, %eax
	jne	.L4495
	leal	.LC322@GOTOFF(%ebx), %eax
	movl	%eax, -128(%ebp)
	jmp	.L4497
.L4495:
	leal	.LC323@GOTOFF(%ebx), %edx
	movl	%edx, -128(%ebp)
.L4497:
	cmpl	$0, -76(%ebp)
	je	.L4498
	leal	.LC324@GOTOFF(%ebx), %ecx
	movl	%ecx, -124(%ebp)
	jmp	.L4500
.L4498:
	leal	.LC0@GOTOFF(%ebx), %esi
	movl	%esi, -124(%ebp)
.L4500:
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-128(%ebp), %edi
	movl	%edi, 12(%esp)
	movl	-124(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC325@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fprintf@PLT
	.loc 1 9288 0
	movl	$1, -76(%ebp)
	.loc 1 9283 0
	shrl	$2, -72(%ebp)
.L4493:
	cmpl	$0, -72(%ebp)
	jne	.L4494
	.loc 1 9290 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC326@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9292 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$15, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC327@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9293 0
	movl	-92(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	assemble_start_function@PLT
	.loc 1 9309 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$16, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC329@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9311 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	$0, 8(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	mips16_fp_args
	.loc 1 9313 0
	cmpl	$0, -108(%ebp)
	jne	.L4502
	.loc 1 9315 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$11, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC330@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9316 0
	movl	reg_names@GOT(%ebx), %eax
	movl	4(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	-100(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	leal	.LC347@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 9318 0
	movl	reg_names@GOT(%ebx), %eax
	movl	4(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC332@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 9319 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$9, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC333@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9325 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$5, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC334@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	jmp	.L4504
.L4502:
	.loc 1 9329 0
	movl	reg_names@GOT(%ebx), %eax
	movl	124(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	72(%eax), %ecx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	leal	.LC348@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%esi, (%esp)
	call	fprintf@PLT
	.loc 1 9331 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-100(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC349@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fprintf@PLT
	.loc 1 9333 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$5, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC334@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9334 0
	movl	-112(%ebp), %eax
	movzbl	2(%eax), %eax
	cmpb	$15, %al
	jne	.L4505
	.loc 1 9335 0
	movl	reg_names@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	leal	.LC350@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%esi, (%esp)
	call	fprintf@PLT
	jmp	.L4507
.L4505:
	.loc 1 9339 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L4508
	.loc 1 9341 0
	movl	reg_names@GOT(%ebx), %eax
	movl	132(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	leal	.LC350@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%esi, (%esp)
	call	fprintf@PLT
	.loc 1 9344 0
	movl	reg_names@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	12(%eax), %ecx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	leal	.LC350@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%esi, (%esp)
	call	fprintf@PLT
	jmp	.L4507
.L4508:
	.loc 1 9350 0
	movl	reg_names@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	8(%eax), %ecx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	leal	.LC350@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%esi, (%esp)
	call	fprintf@PLT
	.loc 1 9353 0
	movl	reg_names@GOT(%ebx), %eax
	movl	132(%eax), %edx
	movl	reg_names@GOT(%ebx), %eax
	movl	12(%eax), %ecx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	leal	.LC350@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%esi, (%esp)
	call	fprintf@PLT
.L4507:
	.loc 1 9358 0
	movl	reg_names@GOT(%ebx), %eax
	movl	72(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC351@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 9360 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$5, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC334@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L4504:
	.loc 1 9363 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC335@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9366 0
	movl	flag_inhibit_size_directive@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4510
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$6, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC352@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite_unlocked@PLT
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-92(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	assemble_name@PLT
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	putc_unlocked@PLT
.L4510:
	.loc 1 9375 0
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$13, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC280@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 9378 0
	movl	$12, (%esp)
	call	xmalloc@PLT
	movl	%eax, -88(%ebp)
	.loc 1 9379 0
	movl	-100(%ebp), %eax
	movl	%eax, (%esp)
	call	xstrdup@PLT
	movl	%eax, %edx
	movl	-88(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 9380 0
	movl	-88(%ebp), %edx
	movl	-108(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 9381 0
	movl	mips16_stubs@GOTOFF(%ebx), %edx
	movl	-88(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 9382 0
	movl	-88(%ebp), %eax
	movl	%eax, mips16_stubs@GOTOFF(%ebx)
.L4479:
	.loc 1 9392 0
	cmpl	$0, -108(%ebp)
	je	.L4512
	movl	-88(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	jne	.L4512
	.loc 1 9393 0
	movl	-100(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC353@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4512:
	.loc 1 9401 0
	movl	-88(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L4515
.LBB115:
	.loc 1 9405 0
	cmpl	$0, -112(%ebp)
	jne	.L4517
	.loc 1 9406 0
	movl	$31, 8(%esp)
	movl	$4, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 8(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-116(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_call_internal0@PLT
	movl	%eax, -52(%ebp)
	jmp	.L4519
.L4517:
	.loc 1 9410 0
	movl	$31, 8(%esp)
	movl	$4, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 12(%esp)
	movl	-120(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-116(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-112(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_call_value_internal0@PLT
	movl	%eax, -52(%ebp)
.L4519:
	.loc 1 9413 0
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_call_insn@PLT
	movl	%eax, -52(%ebp)
	.loc 1 9415 0
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$44, %ax
	je	.L4520
	.loc 1 9416 0
	leal	__FUNCTION__.25778@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9416, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4520:
	.loc 1 9418 0
	movl	-52(%ebp), %eax
	movl	76(%eax), %esi
	movl	word_mode@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$18, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$58, (%esp)
	call	gen_rtx@PLT
	movl	%esi, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$3, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-52(%ebp), %eax
	movl	%edx, 76(%eax)
	.loc 1 9425 0
	movl	$1, -204(%ebp)
	jmp	.L4416
.L4515:
.LBE115:
	.loc 1 9429 0
	movl	$0, -204(%ebp)
.L4416:
	movl	-204(%ebp), %eax
	.loc 1 9430 0
	movl	-16(%ebp), %edx
	xorl	%gs:20, %edx
	je	.L4523
	call	__stack_chk_fail_local
.L4523:
	leal	-12(%ebp), %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE147:
	.size	build_mips16_call_stub, .-build_mips16_call_stub
	.section	.rodata
	.type	__FUNCTION__.26078, @object
	.size	__FUNCTION__.26078, 19
__FUNCTION__.26078:
	.string	"mips16_optimize_gp"
	.text
	.type	mips16_optimize_gp, @function
mips16_optimize_gp:
.LFB148:
	.loc 1 9448 0
	pushl	%ebp
.LCFI537:
	movl	%esp, %ebp
.LCFI538:
	pushl	%ebx
.LCFI539:
	subl	$132, %esp
.LCFI540:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9458 0
	movl	$0, -44(%ebp)
	.loc 1 9459 0
	movl	$0, -40(%ebp)
	.loc 1 9460 0
	movl	8(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L4525
.L4526:
.LBB116:
	.loc 1 9464 0
	movl	-36(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$105, %al
	jne	.L4527
	.loc 1 9467 0
	movl	-36(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 9473 0
	movl	-32(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L4527
	.loc 1 9476 0
	cmpl	$0, -44(%ebp)
	jne	.L4530
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L4530
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4530
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$28, %eax
	jne	.L4530
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4530
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -112(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4536
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4536
	movl	$5, -108(%ebp)
	jmp	.L4539
.L4536:
	movl	$4, -108(%ebp)
.L4539:
	movl	-108(%ebp), %eax
	cmpl	%eax, -112(%ebp)
	jne	.L4530
	.loc 1 9482 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 9476 0
	jmp	.L4527
.L4530:
	.loc 1 9483 0
	cmpl	$0, -40(%ebp)
	jne	.L4541
	cmpl	$0, -44(%ebp)
	je	.L4541
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L4541
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4541
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4541
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -104(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4547
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4547
	movl	$5, -100(%ebp)
	jmp	.L4550
.L4547:
	movl	$4, -100(%ebp)
.L4550:
	movl	-100(%ebp), %eax
	cmpl	%eax, -104(%ebp)
	jne	.L4541
.LBB117:
	.loc 1 9492 0
	movl	const_int_rtx@GOT(%ebx), %eax
	movl	256(%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 9493 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	leal	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	eliminate_constant_term@PLT
	movl	%eax, -28(%ebp)
	.loc 1 9494 0
	movl	-28(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4527
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$29, %eax
	je	.L4554
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	$1, %eax
	jne	.L4527
.L4554:
	.loc 1 9497 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 9483 0
	jmp	.L4527
.L4541:
.LBE117:
	.loc 1 9499 0
	cmpl	$0, -44(%ebp)
	je	.L4556
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	je	.L4558
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$73, %ax
	jne	.L4556
.L4558:
	movl	-32(%ebp), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	reg_overlap_mentioned_p@PLT
	testl	%eax, %eax
	je	.L4556
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4561
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4561
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -96(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4564
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4564
	movl	$5, -92(%ebp)
	jmp	.L4567
.L4564:
	movl	$4, -92(%ebp)
.L4567:
	movl	-92(%ebp), %eax
	cmpl	%eax, -96(%ebp)
	jne	.L4561
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L4569
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4569
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$28, %eax
	je	.L4556
.L4569:
	movl	-32(%ebp), %eax
	movl	12(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	rtx_equal_p@PLT
	testl	%eax, %eax
	je	.L4561
.L4556:
	.loc 1 9512 0
	cmpl	$0, -40(%ebp)
	je	.L4527
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L4527
	movl	-32(%ebp), %eax
	movl	4(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	rtx_equal_p@PLT
	testl	%eax, %eax
	je	.L4527
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4561
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4561
.L4527:
.LBE116:
	.loc 1 9460 0
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	next_active_insn@PLT
	movl	%eax, -36(%ebp)
.L4525:
	cmpl	$0, -36(%ebp)
	jne	.L4526
.L4561:
	.loc 1 9536 0
	cmpl	$0, -36(%ebp)
	jne	.L4576
	cmpl	$0, -44(%ebp)
	je	.L4576
	cmpl	$0, -40(%ebp)
	jne	.L4579
.L4576:
.LBB118:
	.loc 1 9542 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4580
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	jne	.L4644
.L4580:
	.loc 1 9545 0
	movl	8(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L4583
.L4584:
.LBB119:
	.loc 1 9549 0
	movl	-36(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L4645
.L4585:
.L4645:
	.loc 1 9552 0
	movl	-24(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 9558 0
	cmpl	$0, -24(%ebp)
	je	.L4586
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$47, %ax
	je	.L4585
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$42, %ax
	jne	.L4586
	movl	-24(%ebp), %eax
	movl	44(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$58, %ax
	je	.L4585
	movl	-24(%ebp), %eax
	movl	44(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$59, %ax
	je	.L4585
.L4586:
	.loc 1 9560 0
	cmpl	$0, -24(%ebp)
	je	.L4644
	.loc 1 9563 0
	movl	-36(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$105, %al
	jne	.L4593
	.loc 1 9566 0
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$105, %al
	jne	.L4593
	.loc 1 9569 0
	movl	-36(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 9570 0
	movl	-20(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L4593
	.loc 1 9572 0
	movl	-24(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 9573 0
	movl	-16(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L4593
	.loc 1 9576 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4593
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	jne	.L4593
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4593
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	cmpl	$28, %eax
	jne	.L4593
	movl	-16(%ebp), %eax
	movl	4(%eax), %edx
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	rtx_equal_p@PLT
	testl	%eax, %eax
	je	.L4593
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L4593
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %edx
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	rtx_equal_p@PLT
	testl	%eax, %eax
	je	.L4593
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	mips16_gp_offset_p@PLT
	testl	%eax, %eax
	je	.L4593
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$86, %ax
	jne	.L4593
.LBB120:
	.loc 1 9591 0
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 9592 0
	movl	-12(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L4607
	.loc 1 9593 0
	leal	__FUNCTION__.26078@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9593, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4607:
	.loc 1 9594 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4609
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4609
	movl	$5, -88(%ebp)
	jmp	.L4612
.L4609:
	movl	$4, -88(%ebp)
.L4612:
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-88(%ebp), %eax
	movl	%eax, (%esp)
	call	force_const_mem@PLT
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_insn_after@PLT
	.loc 1 9598 0
	movl	-36(%ebp), %eax
	movw	$47, (%eax)
	.loc 1 9599 0
	movl	-36(%ebp), %eax
	movl	$-99, 44(%eax)
	.loc 1 9600 0
	movl	-36(%ebp), %eax
	movl	$0, 36(%eax)
	.loc 1 9602 0
	movl	-24(%ebp), %eax
	movw	$47, (%eax)
	.loc 1 9603 0
	movl	-24(%ebp), %eax
	movl	$-99, 44(%eax)
	.loc 1 9604 0
	movl	-24(%ebp), %eax
	movl	$0, 36(%eax)
.L4593:
.LBE120:
.LBE119:
	.loc 1 9545 0
	movl	-24(%ebp), %eax
	movl	%eax, -36(%ebp)
.L4583:
	cmpl	$0, -36(%ebp)
	jne	.L4584
	.loc 1 9608 0
	jmp	.L4644
.L4579:
.LBE118:
	.loc 1 9615 0
	movl	8(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L4613
.L4614:
.LBB121:
	.loc 1 9619 0
	movl	-36(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %edx
	movl	rtx_class@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$105, %al
	jne	.L4615
	.loc 1 9622 0
	movl	-36(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 9623 0
	movl	-8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L4615
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -84(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4618
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4618
	movl	$5, -80(%ebp)
	jmp	.L4621
.L4618:
	movl	$4, -80(%ebp)
.L4621:
	movl	-80(%ebp), %eax
	cmpl	%eax, -84(%ebp)
	jne	.L4615
	.loc 1 9627 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L4623
	movl	-8(%ebp), %eax
	movl	4(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	rtx_equal_p@PLT
	testl	%eax, %eax
	je	.L4623
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4623
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4623
	.loc 1 9632 0
	movl	-36(%ebp), %eax
	movw	$47, (%eax)
	.loc 1 9633 0
	movl	-36(%ebp), %eax
	movl	$-99, 44(%eax)
	.loc 1 9634 0
	movl	-36(%ebp), %eax
	movl	$0, 36(%eax)
	.loc 1 9627 0
	jmp	.L4615
.L4623:
	.loc 1 9636 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$71, %ax
	jne	.L4615
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4615
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L4615
	movl	-8(%ebp), %eax
	movl	12(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	rtx_equal_p@PLT
	testl	%eax, %eax
	je	.L4615
	.loc 1 9641 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4632
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4632
	movl	$5, -76(%ebp)
	jmp	.L4635
.L4632:
	movl	$4, -76(%ebp)
.L4635:
	movl	$28, 8(%esp)
	movl	-76(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$71, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -72(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4636
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4636
	movl	$5, -68(%ebp)
	jmp	.L4639
.L4636:
	movl	$4, -68(%ebp)
.L4639:
	movl	-72(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$68, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -64(%ebp)
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -60(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4640
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4640
	movl	$5, -56(%ebp)
	jmp	.L4643
.L4640:
	movl	$4, -56(%ebp)
.L4643:
	movl	-64(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-60(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_insn_after@PLT
	.loc 1 9646 0
	movl	-36(%ebp), %eax
	movw	$47, (%eax)
	.loc 1 9647 0
	movl	-36(%ebp), %eax
	movl	$-99, 44(%eax)
	.loc 1 9648 0
	movl	-36(%ebp), %eax
	movl	$0, 36(%eax)
.L4615:
.LBE121:
	.loc 1 9615 0
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	next_active_insn@PLT
	movl	%eax, -36(%ebp)
.L4613:
	cmpl	$0, -36(%ebp)
	jne	.L4614
.L4644:
	.loc 1 9651 0
	addl	$132, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE148:
	.size	mips16_optimize_gp, .-mips16_optimize_gp
	.type	add_constant, @function
add_constant:
.LFB149:
	.loc 1 9671 0
	pushl	%ebp
.LCFI541:
	movl	%esp, %ebp
.LCFI542:
	pushl	%ebx
.LCFI543:
	subl	$36, %esp
.LCFI544:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9674 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L4647
.L4648:
	.loc 1 9675 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	16(%ebp), %eax
	jne	.L4649
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	rtx_equal_p@PLT
	testl	%eax, %eax
	je	.L4649
	.loc 1 9676 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L4652
.L4649:
	.loc 1 9674 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L4647:
	cmpl	$0, -8(%ebp)
	jne	.L4648
	.loc 1 9678 0
	movl	$16, (%esp)
	call	xmalloc@PLT
	movl	%eax, -8(%ebp)
	.loc 1 9679 0
	movl	-8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 9680 0
	movl	-8(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, 12(%edx)
	.loc 1 9681 0
	call	gen_label_rtx@PLT
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 9682 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 9683 0
	movl	8(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 9684 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -24(%ebp)
.L4652:
	movl	-24(%ebp), %eax
	.loc 1 9685 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE149:
	.size	add_constant, .-add_constant
	.section	.rodata
	.type	__FUNCTION__.26450, @object
	.size	__FUNCTION__.26450, 15
__FUNCTION__.26450:
	.string	"dump_constants"
	.text
	.type	dump_constants, @function
dump_constants:
.LFB150:
	.loc 1 9693 0
	pushl	%ebp
.LCFI545:
	movl	%esp, %ebp
.LCFI546:
	pushl	%ebx
.LCFI547:
	subl	$36, %esp
.LCFI548:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9697 0
	movl	8(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 9698 0
	movl	$0, -16(%ebp)
	.loc 1 9699 0
	jmp	.L4656
.L4657:
.LBB122:
	.loc 1 9704 0
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
	cmpl	$2, -28(%ebp)
	je	.L4660
	cmpl	$4, -28(%ebp)
	je	.L4661
	cmpl	$1, -28(%ebp)
	je	.L4659
	jmp	.L4658
.L4659:
	.loc 1 9707 0
	movl	$0, -16(%ebp)
	.loc 1 9708 0
	jmp	.L4662
.L4660:
	.loc 1 9710 0
	cmpl	$0, -16(%ebp)
	jg	.L4663
	.loc 1 9711 0
	call	gen_align_2@PLT
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	emit_insn_after@PLT
	movl	%eax, 12(%ebp)
.L4663:
	.loc 1 9712 0
	movl	$1, -16(%ebp)
	.loc 1 9713 0
	jmp	.L4662
.L4661:
	.loc 1 9715 0
	cmpl	$1, -16(%ebp)
	jg	.L4665
	.loc 1 9716 0
	call	gen_align_4@PLT
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	emit_insn_after@PLT
	movl	%eax, 12(%ebp)
.L4665:
	.loc 1 9717 0
	movl	$2, -16(%ebp)
	.loc 1 9718 0
	jmp	.L4662
.L4658:
	.loc 1 9720 0
	cmpl	$2, -16(%ebp)
	jg	.L4667
	.loc 1 9721 0
	call	gen_align_8@PLT
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	emit_insn_after@PLT
	movl	%eax, 12(%ebp)
.L4667:
	.loc 1 9722 0
	movl	$3, -16(%ebp)
.L4662:
	.loc 1 9726 0
	movl	-20(%ebp), %eax
	movl	8(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_label_after@PLT
	movl	%eax, 12(%ebp)
	.loc 1 9728 0
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -24(%ebp)
	cmpl	$16, -24(%ebp)
	ja	.L4669
	movl	-24(%ebp), %eax
	sall	$2, %eax
	movl	.L4676@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L4676:
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4670@GOTOFF
	.long	.L4671@GOTOFF
	.long	.L4672@GOTOFF
	.long	.L4673@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4669@GOTOFF
	.long	.L4674@GOTOFF
	.long	.L4675@GOTOFF
	.text
.L4670:
	.loc 1 9731 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gen_consttable_qi@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9732 0
	jmp	.L4677
.L4671:
	.loc 1 9734 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gen_consttable_hi@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9735 0
	jmp	.L4677
.L4672:
	.loc 1 9737 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gen_consttable_si@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9738 0
	jmp	.L4677
.L4674:
	.loc 1 9740 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gen_consttable_sf@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9741 0
	jmp	.L4677
.L4673:
	.loc 1 9743 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gen_consttable_di@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9744 0
	jmp	.L4677
.L4675:
	.loc 1 9746 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gen_consttable_df@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9747 0
	jmp	.L4677
.L4669:
	.loc 1 9749 0
	leal	__FUNCTION__.26450@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9749, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4677:
	.loc 1 9752 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_insn_after@PLT
	movl	%eax, 12(%ebp)
	.loc 1 9754 0
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 9755 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	free@PLT
	.loc 1 9756 0
	movl	-8(%ebp), %eax
	movl	%eax, -20(%ebp)
.L4656:
.LBE122:
	.loc 1 9699 0
	cmpl	$0, -20(%ebp)
	jne	.L4657
	.loc 1 9759 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_barrier_after@PLT
	.loc 1 9760 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE150:
	.size	dump_constants, .-dump_constants
	.type	mips_find_symbol, @function
mips_find_symbol:
.LFB151:
	.loc 1 9767 0
	pushl	%ebp
.LCFI549:
	movl	%esp, %ebp
.LCFI550:
	subl	$24, %esp
.LCFI551:
	.loc 1 9768 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$76, %ax
	jne	.L4683
	.loc 1 9769 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 9770 0
	jmp	.L4683
.L4684:
	.loc 1 9771 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%ebp)
.L4683:
	.loc 1 9770 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$68, %ax
	je	.L4684
	.loc 1 9772 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$78, %ax
	je	.L4686
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$77, %ax
	jne	.L4688
.L4686:
	.loc 1 9773 0
	movl	8(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L4689
.L4688:
	.loc 1 9774 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$85, %ax
	jne	.L4690
.LBB123:
	.loc 1 9778 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	mips_find_symbol
	movl	%eax, -8(%ebp)
	.loc 1 9779 0
	movl	8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	mips_find_symbol
	movl	%eax, -4(%ebp)
	.loc 1 9780 0
	cmpl	$0, -8(%ebp)
	je	.L4692
	cmpl	$0, -4(%ebp)
	jne	.L4692
	.loc 1 9781 0
	movl	-8(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L4689
.L4692:
	.loc 1 9782 0
	cmpl	$0, -8(%ebp)
	jne	.L4690
	cmpl	$0, -4(%ebp)
	je	.L4690
	.loc 1 9783 0
	movl	-4(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L4689
.L4690:
.LBE123:
	.loc 1 9785 0
	movl	$0, -20(%ebp)
.L4689:
	movl	-20(%ebp), %eax
	.loc 1 9786 0
	leave
	ret
.LFE151:
	.size	mips_find_symbol, .-mips_find_symbol
.globl machine_dependent_reorg
	.type	machine_dependent_reorg, @function
machine_dependent_reorg:
.LFB152:
	.loc 1 9796 0
	pushl	%ebp
.LCFI552:
	movl	%esp, %ebp
.LCFI553:
	pushl	%esi
.LCFI554:
	pushl	%ebx
.LCFI555:
	subl	$112, %esp
.LCFI556:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9801 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4765
	.loc 1 9806 0
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4701
	.loc 1 9807 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips16_optimize_gp
.L4701:
	.loc 1 9815 0
	movl	$0, -76(%ebp)
	.loc 1 9816 0
	movl	8(%ebp), %eax
	movl	%eax, -56(%ebp)
	jmp	.L4703
.L4704:
	.loc 1 9818 0
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	get_attr_length@PLT
	addl	%eax, -76(%ebp)
	.loc 1 9823 0
	movl	-56(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$43, %ax
	jne	.L4705
.LBB124:
	.loc 1 9827 0
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 1 9828 0
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$54, %ax
	je	.L4707
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$55, %ax
	jne	.L4709
.L4707:
	.loc 1 9829 0
	movl	-52(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$55, %ax
	sete	%al
	movzbl	%al, %edx
	movl	-52(%ebp), %eax
	movl	4(%eax,%edx,8), %eax
	movl	(%eax), %ecx
	movl	-52(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	imull	%ecx, %eax
	addl	%eax, -76(%ebp)
.L4709:
	.loc 1 9831 0
	movl	-52(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	addl	-76(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -76(%ebp)
.L4705:
.LBE124:
	.loc 1 9816 0
	movl	-56(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -56(%ebp)
.L4703:
	cmpl	$0, -56(%ebp)
	jne	.L4704
	.loc 1 9837 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	276(%eax), %edx
	movl	-76(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 9839 0
	call	get_pool_size@PLT
	movl	%eax, -68(%ebp)
	.loc 1 9840 0
	movl	-68(%ebp), %eax
	movl	-76(%ebp), %edx
	addl	%eax, %edx
	movl	mips_string_length@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	cmpl	$32767, %eax
	jle	.L4765
	.loc 1 9845 0
	movl	$0, -72(%ebp)
	.loc 1 9846 0
	movl	8(%ebp), %eax
	movl	%eax, -56(%ebp)
	jmp	.L4712
.L4713:
	.loc 1 9848 0
	movl	-56(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$42, %ax
	jne	.L4714
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L4714
.LBB125:
	.loc 1 9853 0
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	mips_find_symbol
	movl	%eax, -48(%ebp)
	.loc 1 9854 0
	cmpl	$0, -48(%ebp)
	je	.L4714
	.loc 1 9856 0
	movl	-48(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L4718
	.loc 1 9857 0
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	get_pool_mode@PLT
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	addl	%eax, -72(%ebp)
	jmp	.L4714
.L4718:
	.loc 1 9858 0
	movl	-48(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4714
	.loc 1 9859 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4721
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4721
	movl	$5, -100(%ebp)
	jmp	.L4724
.L4721:
	movl	$4, -100(%ebp)
.L4724:
	movl	-100(%ebp), %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	addl	%eax, -72(%ebp)
.L4714:
.LBE125:
	.loc 1 9846 0
	movl	-56(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -56(%ebp)
.L4712:
	cmpl	$0, -56(%ebp)
	jne	.L4713
	.loc 1 9863 0
	movl	$0, -80(%ebp)
	.loc 1 9864 0
	movl	$0, -64(%ebp)
	.loc 1 9865 0
	movl	$-1, -60(%ebp)
	.loc 1 9867 0
	movl	8(%ebp), %eax
	movl	%eax, -56(%ebp)
	jmp	.L4726
.L4727:
	.loc 1 9869 0
	movl	-56(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$42, %ax
	jne	.L4728
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movzwl	(%eax), %eax
	cmpw	$57, %ax
	jne	.L4728
.LBB126:
	.loc 1 9873 0
	movl	$0, -36(%ebp)
	.loc 1 9875 0
	movl	$0, -44(%ebp)
	.loc 1 9876 0
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	mips_find_symbol
	movl	%eax, -40(%ebp)
	.loc 1 9877 0
	cmpl	$0, -40(%ebp)
	je	.L4731
	movl	-40(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L4731
	.loc 1 9883 0
	movl	-64(%ebp), %edx
	movl	-76(%ebp), %eax
	subl	%edx, %eax
	movl	%eax, %esi
	addl	-72(%ebp), %esi
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	get_pool_offset@PLT
	leal	(%esi,%eax), %eax
	cmpl	$32767, %eax
	jle	.L4734
	.loc 1 9888 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	get_pool_constant@PLT
	movl	%eax, -44(%ebp)
	.loc 1 9889 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	get_pool_mode@PLT
	movl	%eax, -36(%ebp)
.L4734:
	.loc 1 9891 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	get_pool_mode@PLT
	movl	%eax, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	subl	%eax, -72(%ebp)
	.loc 1 9877 0
	jmp	.L4736
.L4731:
	.loc 1 9893 0
	cmpl	$0, -40(%ebp)
	je	.L4736
	movl	-40(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4736
	.loc 1 9897 0
	movl	-64(%ebp), %edx
	movl	-76(%ebp), %eax
	subl	%edx, %eax
	addl	-72(%ebp), %eax
	movl	%eax, %edx
	addl	-68(%ebp), %edx
	movl	mips_string_length@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	cmpl	$32767, %eax
	jle	.L4739
	.loc 1 9903 0
	movl	-40(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 9904 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4741
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4741
	movl	$5, -96(%ebp)
	jmp	.L4744
.L4741:
	movl	$4, -96(%ebp)
.L4744:
	movl	-96(%ebp), %eax
	movl	%eax, -36(%ebp)
.L4739:
	.loc 1 9906 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4745
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4745
	movl	$5, -92(%ebp)
	jmp	.L4748
.L4745:
	movl	$4, -92(%ebp)
.L4748:
	movl	-92(%ebp), %eax
	subl	%eax, -72(%ebp)
.L4736:
	.loc 1 9909 0
	cmpl	$0, -44(%ebp)
	je	.L4728
.LBB127:
	.loc 1 9918 0
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-80(%ebp), %eax
	movl	%eax, (%esp)
	call	add_constant
	movl	%eax, -32(%ebp)
	.loc 1 9919 0
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$77, (%esp)
	call	gen_rtx@PLT
	movl	%eax, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$76, (%esp)
	call	gen_rtx@PLT
	movl	%eax, -28(%ebp)
	.loc 1 9921 0
	movl	-28(%ebp), %edx
	movzbl	3(%edx), %eax
	orl	$4, %eax
	movb	%al, 3(%edx)
	.loc 1 9922 0
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movl	4(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	$57, (%esp)
	call	gen_rtx@PLT
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	movl	%edx, 44(%eax)
	.loc 1 9925 0
	movl	-56(%ebp), %eax
	movl	$-1, 52(%eax)
	.loc 1 9927 0
	cmpl	$0, -60(%ebp)
	jns	.L4728
	.loc 1 9928 0
	movl	-64(%ebp), %eax
	movl	%eax, -60(%ebp)
.L4728:
.LBE127:
.LBE126:
	.loc 1 9932 0
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	get_attr_length@PLT
	addl	%eax, -64(%ebp)
	.loc 1 9937 0
	movl	-56(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$43, %ax
	jne	.L4751
.LBB128:
	.loc 1 9941 0
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 9942 0
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$54, %ax
	je	.L4753
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$55, %ax
	jne	.L4755
.L4753:
	.loc 1 9943 0
	movl	-24(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$55, %ax
	sete	%al
	movzbl	%al, %edx
	movl	-24(%ebp), %eax
	movl	4(%eax,%edx,8), %eax
	movl	(%eax), %ecx
	movl	-24(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	imull	%ecx, %eax
	addl	%eax, -64(%ebp)
.L4755:
	.loc 1 9945 0
	movl	-24(%ebp), %eax
	movzbl	2(%eax), %eax
	movzbl	%al, %edx
	movl	mode_size@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	addl	-64(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -64(%ebp)
.L4751:
.LBE128:
	.loc 1 9948 0
	movl	-56(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$45, %ax
	jne	.L4756
	.loc 1 9957 0
	movl	-80(%ebp), %eax
	testl	%eax, %eax
	je	.L4758
	.loc 1 9958 0
	movl	-80(%ebp), %edx
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	dump_constants
.L4758:
	.loc 1 9959 0
	movl	$0, -80(%ebp)
	.loc 1 9960 0
	movl	$-1, -60(%ebp)
.L4756:
	.loc 1 9963 0
	movl	-80(%ebp), %eax
	testl	%eax, %eax
	je	.L4760
	movl	-56(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L4762
	cmpl	$0, -60(%ebp)
	js	.L4760
	movl	-60(%ebp), %edx
	movl	-64(%ebp), %eax
	subl	%edx, %eax
	addl	-68(%ebp), %eax
	cmpl	$32763, %eax
	jle	.L4760
.L4762:
.LBB129:
	.loc 1 9978 0
	call	gen_label_rtx@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9979 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gen_jump@PLT
	movl	%eax, %edx
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	emit_jump_insn_after@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9980 0
	movl	-16(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 76(%edx)
	.loc 1 9981 0
	movl	-20(%ebp), %eax
	movl	$1, 36(%eax)
	.loc 1 9982 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_barrier_after@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9983 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	emit_label_after@PLT
	.loc 1 9984 0
	movl	$-1, -60(%ebp)
.L4760:
.LBE129:
	.loc 1 9867 0
	movl	-56(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -56(%ebp)
.L4726:
	cmpl	$0, -56(%ebp)
	jne	.L4727
.L4765:
	.loc 1 9991 0
	addl	$112, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE152:
	.size	machine_dependent_reorg, .-machine_dependent_reorg
.globl extend_operator
	.type	extend_operator, @function
extend_operator:
.LFB153:
	.loc 1 9998 0
	pushl	%ebp
.LCFI557:
	movl	%esp, %ebp
.LCFI558:
	subl	$20, %esp
.LCFI559:
	.loc 1 9999 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -4(%ebp)
	.loc 1 10000 0
	cmpl	$130, -4(%ebp)
	je	.L4767
	cmpl	$131, -4(%ebp)
	jne	.L4769
.L4767:
	movl	$1, -20(%ebp)
	jmp	.L4770
.L4769:
	movl	$0, -20(%ebp)
.L4770:
	movl	-20(%ebp), %eax
	.loc 1 10001 0
	leave
	ret
.LFE153:
	.size	extend_operator, .-extend_operator
.globl highpart_shift_operator
	.type	highpart_shift_operator, @function
highpart_shift_operator:
.LFB154:
	.loc 1 10011 0
	pushl	%ebp
.LCFI560:
	movl	%esp, %ebp
.LCFI561:
	subl	$20, %esp
.LCFI562:
	.loc 1 10012 0
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -4(%ebp)
	.loc 1 10013 0
	cmpl	$100, -4(%ebp)
	je	.L4773
	cmpl	$99, -4(%ebp)
	je	.L4773
	cmpl	$101, -4(%ebp)
	je	.L4773
	cmpl	$98, -4(%ebp)
	jne	.L4777
.L4773:
	movl	$1, -20(%ebp)
	jmp	.L4778
.L4777:
	movl	$0, -20(%ebp)
.L4778:
	movl	-20(%ebp), %eax
	.loc 1 10017 0
	leave
	ret
.LFE154:
	.size	highpart_shift_operator, .-highpart_shift_operator
.globl mips_register_move_cost
	.type	mips_register_move_cost, @function
mips_register_move_cost:
.LFB155:
	.loc 1 10054 0
	pushl	%ebp
.LCFI563:
	movl	%esp, %ebp
.LCFI564:
	subl	$4, %esp
.LCFI565:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 10055 0
	cmpl	$2, 16(%ebp)
	jne	.L4781
	cmpl	$5, 12(%ebp)
	je	.L4783
	cmpl	$2, 12(%ebp)
	je	.L4783
	cmpl	$3, 12(%ebp)
	je	.L4783
	cmpl	$4, 12(%ebp)
	je	.L4783
	cmpl	$1, 12(%ebp)
	jne	.L4781
.L4783:
	.loc 1 10056 0
	movl	$2, -4(%ebp)
	jmp	.L4788
.L4781:
	.loc 1 10057 0
	cmpl	$1, 16(%ebp)
	jne	.L4789
	cmpl	$5, 12(%ebp)
	je	.L4791
	cmpl	$2, 12(%ebp)
	je	.L4791
	cmpl	$3, 12(%ebp)
	je	.L4791
	cmpl	$4, 12(%ebp)
	je	.L4791
	cmpl	$1, 12(%ebp)
	jne	.L4789
.L4791:
	.loc 1 10058 0
	movl	$2, -4(%ebp)
	jmp	.L4788
.L4789:
	.loc 1 10059 0
	cmpl	$5, 16(%ebp)
	je	.L4796
	cmpl	$2, 16(%ebp)
	je	.L4796
	cmpl	$3, 16(%ebp)
	je	.L4796
	cmpl	$4, 16(%ebp)
	je	.L4796
	cmpl	$1, 16(%ebp)
	jne	.L4801
.L4796:
	.loc 1 10061 0
	cmpl	$2, 12(%ebp)
	jne	.L4802
	.loc 1 10062 0
	movl	$2, -4(%ebp)
	jmp	.L4788
.L4802:
	.loc 1 10063 0
	cmpl	$1, 12(%ebp)
	jne	.L4804
	.loc 1 10064 0
	movl	$2, -4(%ebp)
	jmp	.L4788
.L4804:
	.loc 1 10065 0
	cmpl	$5, 12(%ebp)
	je	.L4806
	cmpl	$2, 12(%ebp)
	je	.L4806
	cmpl	$3, 12(%ebp)
	je	.L4806
	cmpl	$4, 12(%ebp)
	je	.L4806
	cmpl	$1, 12(%ebp)
	jne	.L4811
.L4806:
	.loc 1 10067 0
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4812
	.loc 1 10068 0
	movl	$4, -4(%ebp)
	jmp	.L4788
.L4812:
	.loc 1 10070 0
	movl	$2, -4(%ebp)
	jmp	.L4788
.L4811:
	.loc 1 10072 0
	cmpl	$6, 12(%ebp)
	jne	.L4814
	.loc 1 10073 0
	movl	$4, -4(%ebp)
	jmp	.L4788
.L4814:
	.loc 1 10074 0
	cmpl	$7, 12(%ebp)
	je	.L4816
	cmpl	$8, 12(%ebp)
	je	.L4816
	cmpl	$10, 12(%ebp)
	je	.L4816
	cmpl	$9, 12(%ebp)
	jne	.L4820
.L4816:
	.loc 1 10077 0
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4821
	.loc 1 10078 0
	movl	$12, -4(%ebp)
	jmp	.L4788
.L4821:
	.loc 1 10080 0
	movl	$6, -4(%ebp)
	jmp	.L4788
.L4820:
	.loc 1 10082 0
	cmpl	$11, 12(%ebp)
	je	.L4823
	cmpl	$12, 12(%ebp)
	je	.L4823
	cmpl	$13, 12(%ebp)
	jne	.L4827
.L4823:
	.loc 1 10084 0
	movl	$5, -4(%ebp)
	jmp	.L4788
.L4801:
	.loc 1 10087 0
	cmpl	$6, 16(%ebp)
	jne	.L4828
	.loc 1 10089 0
	cmpl	$5, 12(%ebp)
	je	.L4830
	cmpl	$2, 12(%ebp)
	je	.L4830
	cmpl	$3, 12(%ebp)
	je	.L4830
	cmpl	$4, 12(%ebp)
	je	.L4830
	cmpl	$1, 12(%ebp)
	jne	.L4835
.L4830:
	.loc 1 10090 0
	movl	$4, -4(%ebp)
	jmp	.L4788
.L4835:
	.loc 1 10091 0
	cmpl	$6, 12(%ebp)
	jne	.L4836
	.loc 1 10092 0
	movl	$2, -4(%ebp)
	jmp	.L4788
.L4836:
	.loc 1 10093 0
	cmpl	$23, 12(%ebp)
	jne	.L4827
	.loc 1 10094 0
	movl	$8, -4(%ebp)
	jmp	.L4788
.L4828:
	.loc 1 10096 0
	cmpl	$7, 16(%ebp)
	je	.L4840
	cmpl	$8, 16(%ebp)
	je	.L4840
	cmpl	$10, 16(%ebp)
	je	.L4840
	cmpl	$9, 16(%ebp)
	jne	.L4844
.L4840:
	.loc 1 10099 0
	cmpl	$5, 12(%ebp)
	je	.L4845
	cmpl	$2, 12(%ebp)
	je	.L4845
	cmpl	$3, 12(%ebp)
	je	.L4845
	cmpl	$4, 12(%ebp)
	je	.L4845
	cmpl	$1, 12(%ebp)
	jne	.L4827
.L4845:
	.loc 1 10101 0
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4851
	.loc 1 10102 0
	movl	$12, -4(%ebp)
	jmp	.L4788
.L4851:
	.loc 1 10104 0
	movl	$6, -4(%ebp)
	jmp	.L4788
.L4844:
	.loc 1 10107 0
	cmpl	$23, 16(%ebp)
	jne	.L4853
	cmpl	$5, 12(%ebp)
	je	.L4855
	cmpl	$2, 12(%ebp)
	je	.L4855
	cmpl	$3, 12(%ebp)
	je	.L4855
	cmpl	$4, 12(%ebp)
	je	.L4855
	cmpl	$1, 12(%ebp)
	jne	.L4853
.L4855:
	.loc 1 10108 0
	movl	$4, -4(%ebp)
	jmp	.L4788
.L4853:
	.loc 1 10109 0
	cmpl	$11, 16(%ebp)
	je	.L4860
	cmpl	$12, 16(%ebp)
	je	.L4860
	cmpl	$13, 16(%ebp)
	jne	.L4827
.L4860:
	.loc 1 10111 0
	movl	$5, -4(%ebp)
	jmp	.L4788
.L4827:
	.loc 1 10116 0
	movl	$12, -4(%ebp)
.L4788:
	movl	-4(%ebp), %eax
	.loc 1 10117 0
	leave
	ret
.LFE155:
	.size	mips_register_move_cost, .-mips_register_move_cost
.globl mips_adjust_insn_length
	.type	mips_adjust_insn_length, @function
mips_adjust_insn_length:
.LFB156:
	.loc 1 10126 0
	pushl	%ebp
.LCFI566:
	movl	%esp, %ebp
.LCFI567:
	pushl	%ebx
.LCFI568:
	subl	$4, %esp
.LCFI569:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10130 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	simplejump_p@PLT
	testl	%eax, %eax
	jne	.L4865
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	jne	.L4867
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$43, %ax
	je	.L4865
	movl	8(%ebp), %eax
	movzwl	(%eax), %eax
	cmpw	$44, %ax
	jne	.L4867
.L4865:
	.loc 1 10133 0
	addl	$4, 12(%ebp)
.L4867:
	.loc 1 10136 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4870
	.loc 1 10137 0
	movl	12(%ebp), %edx
	movl	%edx, %eax
	shrl	$31, %eax
	addl	%edx, %eax
	sarl	%eax
	movl	%eax, 12(%ebp)
.L4870:
	.loc 1 10139 0
	movl	12(%ebp), %eax
	.loc 1 10140 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE156:
	.size	mips_adjust_insn_length, .-mips_adjust_insn_length
	.section	.rodata
	.align 4
	.type	__FUNCTION__.26913, @object
	.size	__FUNCTION__.26913, 31
__FUNCTION__.26913:
	.string	"mips_output_conditional_branch"
	.local	buffer.26889
	.comm	buffer.26889,200,32
.LC354:
	.string	"%z2"
.LC355:
	.string	",%z3"
.LC356:
	.string	",%."
.LC357:
	.string	"%F0"
.LC358:
	.string	"%C0"
.LC359:
	.string	"%W0"
.LC360:
	.string	"%N0"
.LC361:
	.string	"%."
.LC362:
	.string	"%%*b%s%%?\t%%Z2%%1"
.LC363:
	.string	"%%*b%s%s%%?\t%s%s,%%1"
.LC364:
	.string	"%%*b%s\t%%Z2%%1"
.LC365:
	.string	"%%*b%s%s\t%s%s,%%1"
.LC366:
	.string	"%#"
.LC367:
	.string	"j\t%0"
.LC368:
	.string	"%[dla\t%@,%0\n\tjr\t%@%]"
.LC369:
	.string	"%[la\t%@,%0\n\tjr\t%@%]"
.LC370:
	.string	"L"
.LC371:
	.string	"%s%s%d:\n"
	.text
.globl mips_output_conditional_branch
	.type	mips_output_conditional_branch, @function
mips_output_conditional_branch:
.LFB157:
	.loc 1 10169 0
	pushl	%ebp
.LCFI570:
	movl	%esp, %ebp
.LCFI571:
	pushl	%ebx
.LCFI572:
	subl	$132, %esp
.LCFI573:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10172 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movzwl	(%eax), %eax
	movzwl	%ax, %eax
	movl	%eax, -40(%ebp)
	.loc 1 10178 0
	leal	.LC354@GOTOFF(%ebx), %eax
	movl	%eax, -32(%ebp)
	.loc 1 10182 0
	cmpl	$0, 16(%ebp)
	je	.L4874
	leal	.LC355@GOTOFF(%ebx), %eax
	movl	%eax, -100(%ebp)
	jmp	.L4876
.L4874:
	leal	.LC356@GOTOFF(%ebx), %edx
	movl	%edx, -100(%ebp)
.L4876:
	movl	-100(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 10184 0
	cmpl	$0, 20(%ebp)
	je	.L4877
	leal	.LC357@GOTOFF(%ebx), %edx
	movl	%edx, -96(%ebp)
	jmp	.L4879
.L4877:
	leal	.LC358@GOTOFF(%ebx), %eax
	movl	%eax, -96(%ebp)
.L4879:
	movl	-96(%ebp), %edx
	movl	%edx, -24(%ebp)
	.loc 1 10186 0
	cmpl	$0, 20(%ebp)
	je	.L4880
	leal	.LC359@GOTOFF(%ebx), %eax
	movl	%eax, -92(%ebp)
	jmp	.L4882
.L4880:
	leal	.LC360@GOTOFF(%ebx), %edx
	movl	%edx, -92(%ebp)
.L4882:
	movl	-92(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 10192 0
	movl	final_sequence@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4883
	movl	8(%ebp), %eax
	movzbl	3(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L4883
	movl	$1, -88(%ebp)
	jmp	.L4886
.L4883:
	movl	$0, -88(%ebp)
.L4886:
	movl	mips_branch_likely@GOT(%ebx), %eax
	movl	-88(%ebp), %edx
	movl	%edx, (%eax)
	.loc 1 10194 0
	cmpl	$0, 16(%ebp)
	jne	.L4887
	.loc 1 10202 0
	movl	-40(%ebp), %eax
	movl	%eax, -104(%ebp)
	cmpl	$119, -104(%ebp)
	je	.L4890
	cmpl	$119, -104(%ebp)
	ja	.L4893
	cmpl	$118, -104(%ebp)
	je	.L4889
	jmp	.L4887
.L4893:
	cmpl	$120, -104(%ebp)
	je	.L4891
	cmpl	$121, -104(%ebp)
	je	.L4892
	jmp	.L4887
.L4890:
	.loc 1 10205 0
	movl	$112, -40(%ebp)
	.loc 1 10206 0
	jmp	.L4887
.L4891:
	.loc 1 10209 0
	movl	$113, -40(%ebp)
	.loc 1 10210 0
	jmp	.L4887
.L4889:
	.loc 1 10214 0
	movl	$113, -40(%ebp)
	.loc 1 10215 0
	leal	.LC361@GOTOFF(%ebx), %eax
	movl	%eax, -32(%ebp)
	.loc 1 10216 0
	jmp	.L4887
.L4892:
	.loc 1 10220 0
	movl	$112, -40(%ebp)
	.loc 1 10221 0
	leal	.LC361@GOTOFF(%ebx), %eax
	movl	%eax, -32(%ebp)
.L4887:
	.loc 1 10233 0
	cmpl	$0, 20(%ebp)
	jne	.L4894
	cmpl	$113, -40(%ebp)
	je	.L4894
	cmpl	$112, -40(%ebp)
	je	.L4894
	movl	$1, -84(%ebp)
	jmp	.L4898
.L4894:
	movl	$0, -84(%ebp)
.L4898:
	movl	-84(%ebp), %edx
	movl	%edx, -36(%ebp)
	.loc 1 10236 0
	cmpl	$0, -36(%ebp)
	je	.L4899
	.loc 1 10237 0
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -28(%ebp)
.L4899:
	.loc 1 10241 0
	movb	$0, buffer.26889@GOTOFF(%ebx)
	.loc 1 10243 0
	cmpl	$28, 28(%ebp)
	ja	.L4901
	movl	28(%ebp), %ecx
	movl	$1, %eax
	movl	%eax, %edx
	sall	%cl, %edx
	movl	%edx, -108(%ebp)
	movl	-108(%ebp), %eax
	andl	$285282304, %eax
	testl	%eax, %eax
	jne	.L4903
	movl	-108(%ebp), %eax
	andl	$272, %eax
	testl	%eax, %eax
	jne	.L4902
	jmp	.L4901
.L4902:
	.loc 1 10248 0
	cmpl	$0, 20(%ebp)
	je	.L4904
	.loc 1 10249 0
	cmpl	$0, 24(%ebp)
	je	.L4906
	movl	-20(%ebp), %eax
	movl	%eax, -80(%ebp)
	jmp	.L4908
.L4906:
	movl	-24(%ebp), %edx
	movl	%edx, -80(%ebp)
.L4908:
	movl	-80(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC362@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	buffer.26889@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	jmp	.L4909
.L4904:
	.loc 1 10252 0
	cmpl	$0, -36(%ebp)
	je	.L4910
	leal	.LC226@GOTOFF(%ebx), %edx
	movl	%edx, -76(%ebp)
	jmp	.L4912
.L4910:
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -76(%ebp)
.L4912:
	cmpl	$0, 24(%ebp)
	je	.L4913
	movl	-20(%ebp), %edx
	movl	%edx, -72(%ebp)
	jmp	.L4915
.L4913:
	movl	-24(%ebp), %eax
	movl	%eax, -72(%ebp)
.L4915:
	movl	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-76(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC363@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	buffer.26889@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
.L4909:
	.loc 1 10257 0
	leal	buffer.26889@GOTOFF(%ebx), %edx
	movl	%edx, -68(%ebp)
	jmp	.L4916
.L4903:
.LBB130:
	.loc 1 10303 0
	call	gen_label_rtx@PLT
	movl	%eax, -16(%ebp)
	.loc 1 10305 0
	movl	12(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 10306 0
	movl	12(%ebp), %edx
	addl	$4, %edx
	movl	-16(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 10309 0
	cmpl	$0, 20(%ebp)
	je	.L4917
	.loc 1 10310 0
	cmpl	$0, 24(%ebp)
	je	.L4919
	movl	-24(%ebp), %eax
	movl	%eax, -64(%ebp)
	jmp	.L4921
.L4919:
	movl	-20(%ebp), %edx
	movl	%edx, -64(%ebp)
.L4921:
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC364@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	buffer.26889@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	jmp	.L4922
.L4917:
	.loc 1 10313 0
	cmpl	$0, -36(%ebp)
	je	.L4923
	leal	.LC226@GOTOFF(%ebx), %edx
	movl	%edx, -60(%ebp)
	jmp	.L4925
.L4923:
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, -60(%ebp)
.L4925:
	cmpl	$0, 24(%ebp)
	je	.L4926
	movl	-24(%ebp), %edx
	movl	%edx, -56(%ebp)
	jmp	.L4928
.L4926:
	movl	-20(%ebp), %eax
	movl	%eax, -56(%ebp)
.L4928:
	movl	-28(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-60(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC365@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	buffer.26889@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
.L4922:
	.loc 1 10318 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	buffer.26889@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
	.loc 1 10320 0
	cmpl	$16, 28(%ebp)
	je	.L4929
	cmpl	$28, 28(%ebp)
	je	.L4929
	movl	mips_branch_likely@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4929
.LBB131:
	.loc 1 10323 0
	movl	final_sequence@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 10324 0
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	8(%eax), %eax
	movl	$1, 16(%esp)
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	final_scan_insn@PLT
	.loc 1 10326 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	8(%eax), %edx
	movzbl	3(%edx), %eax
	orl	$8, %eax
	movb	%al, 3(%edx)
	.loc 1 10320 0
	jmp	.L4933
.L4929:
.LBE131:
	.loc 1 10329 0
	movl	$0, 4(%esp)
	leal	.LC366@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
.L4933:
	.loc 1 10331 0
	cmpl	$16, 28(%ebp)
	jg	.L4934
	.loc 1 10332 0
	leal	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC367@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
	jmp	.L4936
.L4934:
	.loc 1 10335 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4937
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4937
	.loc 1 10336 0
	leal	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC368@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
	.loc 1 10335 0
	jmp	.L4936
.L4937:
	.loc 1 10338 0
	leal	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC369@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
.L4936:
	.loc 1 10341 0
	cmpl	$16, 28(%ebp)
	je	.L4940
	cmpl	$28, 28(%ebp)
	je	.L4940
	movl	mips_branch_likely@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4940
.LBB132:
	.loc 1 10344 0
	movl	final_sequence@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 10345 0
	movl	optimize@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	8(%eax), %eax
	movl	$1, 16(%esp)
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	final_scan_insn@PLT
	.loc 1 10347 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	8(%eax), %edx
	movzbl	3(%edx), %eax
	orl	$8, %eax
	movb	%al, 3(%edx)
	.loc 1 10341 0
	jmp	.L4944
.L4940:
.LBE132:
	.loc 1 10350 0
	movl	$0, 4(%esp)
	leal	.LC366@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	output_asm_insn@PLT
.L4944:
	.loc 1 10352 0
	movl	-16(%ebp), %eax
	movl	52(%eax), %edx
	movl	asm_out_file@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 16(%esp)
	leal	.LC370@GOTOFF(%ebx), %eax
	movl	%eax, 12(%esp)
	leal	.LC39@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	.LC371@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 10355 0
	leal	.LC0@GOTOFF(%ebx), %edx
	movl	%edx, -68(%ebp)
	jmp	.L4916
.L4901:
.LBE130:
	.loc 1 10448 0
	leal	__FUNCTION__.26913@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$10448, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4916:
	movl	-68(%ebp), %eax
	.loc 1 10453 0
	addl	$132, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE157:
	.size	mips_output_conditional_branch, .-mips_output_conditional_branch
	.section	.rodata
.LC372:
	.string	"000"
.LC373:
	.string	"k"
	.text
	.type	mips_strict_matching_cpu_name_p, @function
mips_strict_matching_cpu_name_p:
.LFB158:
	.loc 1 10463 0
	pushl	%ebp
.LCFI574:
	movl	%esp, %ebp
.LCFI575:
	pushl	%ebx
.LCFI576:
	subl	$20, %esp
.LCFI577:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10464 0
	jmp	.L4947
.L4948:
	.loc 1 10465 0
	addl	$1, 12(%ebp)
	addl	$1, 8(%ebp)
.L4947:
	.loc 1 10464 0
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	.L4949
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %ecx
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	%al, %cl
	je	.L4948
.L4949:
	.loc 1 10467 0
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	jne	.L4951
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	.L4953
.L4951:
	leal	.LC372@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	strcmp@PLT
	testl	%eax, %eax
	jne	.L4954
	leal	.LC373@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	strcasecmp@PLT
	testl	%eax, %eax
	jne	.L4954
.L4953:
	movl	$1, -8(%ebp)
	jmp	.L4956
.L4954:
	movl	$0, -8(%ebp)
.L4956:
	movzbl	-8(%ebp), %eax
	movzbl	%al, %eax
	.loc 1 10469 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE158:
	.size	mips_strict_matching_cpu_name_p, .-mips_strict_matching_cpu_name_p
	.type	mips_matching_cpu_name_p, @function
mips_matching_cpu_name_p:
.LFB159:
	.loc 1 10480 0
	pushl	%ebp
.LCFI578:
	movl	%esp, %ebp
.LCFI579:
	pushl	%ebx
.LCFI580:
	subl	$20, %esp
.LCFI581:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10483 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_strict_matching_cpu_name_p
	testb	%al, %al
	je	.L4959
	.loc 1 10484 0
	movl	$1, -8(%ebp)
	jmp	.L4961
.L4959:
	.loc 1 10488 0
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$114, %al
	jne	.L4962
	.loc 1 10489 0
	addl	$1, 12(%ebp)
.L4962:
	.loc 1 10490 0
	movl	12(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_istable@GOT(%ebx), %eax
	movzwl	(%eax,%edx,2), %eax
	movzwl	%ax, %eax
	andl	$4, %eax
	testl	%eax, %eax
	jne	.L4964
	.loc 1 10491 0
	movl	$0, -8(%ebp)
	jmp	.L4961
.L4964:
	.loc 1 10495 0
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$118, %al
	jne	.L4966
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$114, %al
	jne	.L4966
	.loc 1 10496 0
	addl	$2, 8(%ebp)
	.loc 1 10495 0
	jmp	.L4969
.L4966:
	.loc 1 10497 0
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$114, %al
	jne	.L4970
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$109, %al
	jne	.L4970
	.loc 1 10498 0
	addl	$2, 8(%ebp)
	.loc 1 10497 0
	jmp	.L4969
.L4970:
	.loc 1 10499 0
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_tolower@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$114, %al
	jne	.L4969
	.loc 1 10500 0
	addl	$1, 8(%ebp)
.L4969:
	.loc 1 10502 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_strict_matching_cpu_name_p
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
.L4961:
	movl	-8(%ebp), %eax
	.loc 1 10503 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE159:
	.size	mips_matching_cpu_name_p, .-mips_matching_cpu_name_p
	.section	.rodata
	.align 4
.LC374:
	.string	"the cpu name must be lower case"
.LC375:
	.string	"default"
.LC376:
	.string	"bad value (%s) for %s"
	.text
	.type	mips_parse_cpu, @function
mips_parse_cpu:
.LFB160:
	.loc 1 10516 0
	pushl	%ebp
.LCFI582:
	movl	%esp, %ebp
.LCFI583:
	pushl	%ebx
.LCFI584:
	subl	$52, %esp
.LCFI585:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10522 0
	movl	12(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L4976
.L4977:
	.loc 1 10523 0
	movl	-8(%ebp), %eax
	movzbl	(%eax), %eax
	movzbl	%al, %edx
	movl	_sch_istable@GOT(%ebx), %eax
	movzwl	(%eax,%edx,2), %eax
	movzwl	%ax, %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4978
	.loc 1 10525 0
	leal	.LC374@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 10526 0
	jmp	.L4980
.L4978:
	.loc 1 10522 0
	addl	$1, -8(%ebp)
.L4976:
	movl	-8(%ebp), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	jne	.L4977
.L4980:
	.loc 1 10534 0
	leal	.LC169@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	strcasecmp@PLT
	testl	%eax, %eax
	jne	.L4981
	.loc 1 10535 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4983
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	je	.L4985
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	je	.L4985
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L4985
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4989
	movl	$3, -24(%ebp)
	jmp	.L4991
.L4989:
	movl	$1, -24(%ebp)
.L4991:
	movl	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	jmp	.L4992
.L4985:
	movl	$3, -28(%ebp)
.L4992:
	movl	-28(%ebp), %eax
	movl	%eax, -32(%ebp)
	jmp	.L4993
.L4983:
	movl	$1, -32(%ebp)
.L4993:
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	mips_cpu_info_from_isa
	movl	%eax, -36(%ebp)
	jmp	.L4994
.L4981:
	.loc 1 10540 0
	leal	.LC375@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	strcasecmp@PLT
	testl	%eax, %eax
	jne	.L4995
	.loc 1 10541 0
	movl	$0, -36(%ebp)
	jmp	.L4994
.L4995:
	.loc 1 10543 0
	movl	mips_cpu_info_table@GOT(%ebx), %eax
	movl	%eax, -12(%ebp)
	jmp	.L4997
.L4998:
	.loc 1 10544 0
	movl	-12(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	mips_matching_cpu_name_p
	testb	%al, %al
	je	.L4999
	.loc 1 10545 0
	movl	-12(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L4994
.L4999:
	.loc 1 10543 0
	addl	$12, -12(%ebp)
.L4997:
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4998
	.loc 1 10547 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC376@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10548 0
	movl	$0, -36(%ebp)
.L4994:
	movl	-36(%ebp), %eax
	.loc 1 10549 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE160:
	.size	mips_parse_cpu, .-mips_parse_cpu
	.type	mips_cpu_info_from_isa, @function
mips_cpu_info_from_isa:
.LFB161:
	.loc 1 10558 0
	pushl	%ebp
.LCFI586:
	movl	%esp, %ebp
.LCFI587:
	subl	$20, %esp
.LCFI588:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 10561 0
	movl	mips_cpu_info_table@GOT(%ecx), %eax
	movl	%eax, -4(%ebp)
	jmp	.L5004
.L5005:
	.loc 1 10562 0
	movl	-4(%ebp), %eax
	movl	8(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L5006
	.loc 1 10563 0
	movl	-4(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L5008
.L5006:
	.loc 1 10561 0
	addl	$12, -4(%ebp)
.L5004:
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L5005
	.loc 1 10565 0
	movl	$0, -20(%ebp)
.L5008:
	movl	-20(%ebp), %eax
	.loc 1 10566 0
	leave
	ret
.LFE161:
	.size	mips_cpu_info_from_isa, .-mips_cpu_info_from_isa
	.type	mips_adjust_cost, @function
mips_adjust_cost:
.LFB162:
	.loc 1 10579 0
	pushl	%ebp
.LCFI589:
	movl	%esp, %ebp
.LCFI590:
	subl	$4, %esp
.LCFI591:
	.loc 1 10580 0
	movl	12(%ebp), %eax
	movzbl	2(%eax), %eax
	testb	%al, %al
	je	.L5012
	.loc 1 10581 0
	movl	$0, -4(%ebp)
	jmp	.L5014
.L5012:
	.loc 1 10582 0
	movl	20(%ebp), %eax
	movl	%eax, -4(%ebp)
.L5014:
	movl	-4(%ebp), %eax
	.loc 1 10583 0
	leave
	ret
.LFE162:
	.size	mips_adjust_cost, .-mips_adjust_cost
	.section	.rodata
.LC377:
	.string	".text."
.LC378:
	.string	".gnu.linkonce.t."
.LC379:
	.string	".rodata."
.LC380:
	.string	".gnu.linkonce.r."
.LC381:
	.string	".data."
.LC382:
	.string	".gnu.linkonce.d."
.LC383:
	.string	".sdata."
.LC384:
	.string	".gnu.linkonce.s."
	.section	.data.rel.ro.local
	.align 32
	.type	prefixes.27186, @object
	.size	prefixes.27186, 32
prefixes.27186:
	.long	.LC377
	.long	.LC378
	.long	.LC379
	.long	.LC380
	.long	.LC381
	.long	.LC382
	.long	.LC383
	.long	.LC384
	.text
	.type	mips_unique_section, @function
mips_unique_section:
.LFB163:
	.loc 1 10592 0
	pushl	%ebp
.LCFI592:
	movl	%esp, %ebp
.LCFI593:
	pushl	%edi
.LCFI594:
	pushl	%ebx
.LCFI595:
	subl	$64, %esp
.LCFI596:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	8(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 10592 0
	movl	%gs:20, %eax
	movl	%eax, -12(%ebp)
	xorl	%eax, %eax
	.loc 1 10603 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	16(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 10604 0
	movl	targetm@GOT(%ebx), %eax
	movl	240(%eax), %edx
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	*%edx
	movl	%eax, -24(%ebp)
	.loc 1 10605 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -32(%ebp)
	.loc 1 10609 0
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L5017
	.loc 1 10610 0
	movl	$0, -28(%ebp)
	jmp	.L5019
.L5017:
	.loc 1 10611 0
	movl	-44(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L5020
	movl	-44(%ebp), %eax
	movl	68(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L5022
.L5020:
	.loc 1 10613 0
	movl	$2, -28(%ebp)
	.loc 1 10611 0
	jmp	.L5019
.L5022:
	.loc 1 10614 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	jne	.L5023
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L5025
.L5023:
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L5025
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L5025
	.loc 1 10623 0
	movl	$0, -28(%ebp)
	.loc 1 10614 0
	jmp	.L5019
.L5025:
	.loc 1 10625 0
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L5028
	.loc 1 10631 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_readonly_section@PLT
	testb	%al, %al
	je	.L5030
	.loc 1 10632 0
	movl	$1, -28(%ebp)
	jmp	.L5019
.L5030:
	.loc 1 10633 0
	cmpl	$0, -32(%ebp)
	jle	.L5033
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -32(%ebp)
	jg	.L5033
	.loc 1 10634 0
	movl	$3, -28(%ebp)
	.loc 1 10633 0
	jmp	.L5019
.L5033:
	.loc 1 10636 0
	movl	$2, -28(%ebp)
	jmp	.L5019
.L5028:
	.loc 1 10644 0
	cmpl	$0, -32(%ebp)
	jle	.L5036
	movl	mips_section_threshold@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -32(%ebp)
	jg	.L5036
	.loc 1 10645 0
	movl	$3, -28(%ebp)
	.loc 1 10644 0
	jmp	.L5019
.L5036:
	.loc 1 10646 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_readonly_section@PLT
	testb	%al, %al
	je	.L5039
	.loc 1 10647 0
	movl	$1, -28(%ebp)
	jmp	.L5019
.L5039:
	.loc 1 10649 0
	movl	$2, -28(%ebp)
.L5019:
	.loc 1 10652 0
	movl	-28(%ebp), %ecx
	movl	-44(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$1, %eax
	movzbl	%al, %edx
	leal	(%ecx,%ecx), %eax
	addl	%edx, %eax
	movl	prefixes.27186@GOTOFF(%ebx,%eax,4), %eax
	movl	%eax, -20(%ebp)
	.loc 1 10653 0
	movl	-24(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -52(%ebp)
	movl	$0, %eax
	cld
	movl	-52(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	leal	-1(%eax), %edx
	movl	-20(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -56(%ebp)
	movl	$0, %eax
	cld
	movl	-56(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 10654 0
	movl	-36(%ebp), %eax
	addl	$1, %eax
	addl	$15, %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	subl	%eax, %esp
	leal	16(%esp), %eax
	movl	%eax, -48(%ebp)
	movl	-48(%ebp), %eax
	addl	$15, %eax
	shrl	$4, %eax
	sall	$4, %eax
	movl	%eax, -48(%ebp)
	movl	-48(%ebp), %edi
	movl	%edi, -16(%ebp)
	.loc 1 10655 0
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC325@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 10657 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	build_string@PLT
	movl	%eax, %edx
	movl	-44(%ebp), %eax
	movl	%edx, 80(%eax)
	.loc 1 10658 0
	movl	-12(%ebp), %eax
	xorl	%gs:20, %eax
	je	.L5042
	call	__stack_chk_fail_local
.L5042:
	leal	-8(%ebp), %esp
	popl	%ebx
	popl	%edi
	popl	%ebp
	ret
.LFE163:
	.size	mips_unique_section, .-mips_unique_section
.globl mips_hard_regno_nregs
	.type	mips_hard_regno_nregs, @function
mips_hard_regno_nregs:
.LFB164:
	.loc 1 10664 0
	pushl	%ebp
.LCFI597:
	movl	%esp, %ebp
.LCFI598:
	subl	$36, %esp
.LCFI599:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 10665 0
	movl	8(%ebp), %eax
	subl	$32, %eax
	cmpl	$31, %eax
	jbe	.L5044
	.loc 1 10666 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ecx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L5046
	movl	$8, -28(%ebp)
	jmp	.L5048
.L5046:
	movl	$4, -28(%ebp)
.L5048:
	movl	-32(%ebp), %eax
	addl	-28(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -24(%ebp)
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L5049
	movl	$8, -20(%ebp)
	jmp	.L5051
.L5049:
	movl	$4, -20(%ebp)
.L5051:
	movl	-24(%ebp), %edx
	movl	%edx, %eax
	sarl	$31, %edx
	idivl	-20(%ebp)
	movl	%eax, -36(%ebp)
	jmp	.L5052
.L5044:
	.loc 1 10668 0
	movl	12(%ebp), %edx
	movl	mode_size@GOT(%ecx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L5053
	movl	$8, -12(%ebp)
	jmp	.L5055
.L5053:
	movl	$4, -12(%ebp)
.L5055:
	movl	-16(%ebp), %eax
	addl	-12(%ebp), %eax
	subl	$1, %eax
	movl	%eax, -8(%ebp)
	movl	target_flags@GOT(%ecx), %eax
	movl	(%eax), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L5056
	movl	$8, -4(%ebp)
	jmp	.L5058
.L5056:
	movl	$4, -4(%ebp)
.L5058:
	movl	-8(%ebp), %edx
	movl	%edx, %eax
	sarl	$31, %edx
	idivl	-4(%ebp)
	movl	%eax, -36(%ebp)
.L5052:
	movl	-36(%ebp), %eax
	.loc 1 10669 0
	leave
	ret
.LFE164:
	.size	mips_hard_regno_nregs, .-mips_hard_regno_nregs
.globl mips_return_in_memory
	.type	mips_return_in_memory, @function
mips_return_in_memory:
.LFB165:
	.loc 1 10674 0
	pushl	%ebp
.LCFI600:
	movl	%esp, %ebp
.LCFI601:
	pushl	%ebx
.LCFI602:
	subl	$36, %esp
.LCFI603:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10680 0
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5061
	movl	mips_abi@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$4, %eax
	jne	.L5063
.L5061:
	.loc 1 10681 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$-2, %eax
	cmpb	$104, %al
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -32(%ebp)
	jmp	.L5064
.L5063:
	.loc 1 10683 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -24(%ebp)
	movl	%edx, -20(%ebp)
	movl	target_flags@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L5065
	movl	$16, -16(%ebp)
	movl	$0, -12(%ebp)
	jmp	.L5067
.L5065:
	movl	$8, -16(%ebp)
	movl	$0, -12(%ebp)
.L5067:
	movl	-12(%ebp), %eax
	cmpl	%eax, -20(%ebp)
	jg	.L5068
	movl	-12(%ebp), %eax
	cmpl	%eax, -20(%ebp)
	jl	.L5070
	movl	-16(%ebp), %eax
	cmpl	%eax, -24(%ebp)
	ja	.L5068
.L5070:
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%edx, %ecx
	xorl	$-1, %ecx
	xorl	$-1, %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	jne	.L5071
.L5068:
	movl	$1, -28(%ebp)
	jmp	.L5072
.L5071:
	movl	$0, -28(%ebp)
.L5072:
	movl	-28(%ebp), %eax
	movl	%eax, -32(%ebp)
.L5064:
	movl	-32(%ebp), %eax
	.loc 1 10685 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE165:
	.size	mips_return_in_memory, .-mips_return_in_memory
	.section	.rodata
	.type	__FUNCTION__.27327, @object
	.size	__FUNCTION__.27327, 16
__FUNCTION__.27327:
	.string	"mips_issue_rate"
	.text
	.type	mips_issue_rate, @function
mips_issue_rate:
.LFB166:
	.loc 1 10689 0
	pushl	%ebp
.LCFI604:
	movl	%esp, %ebp
.LCFI605:
	subl	$8, %esp
.LCFI606:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 10690 0
	movl	mips_tune@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	cmpl	$12, -8(%ebp)
	je	.L5077
	cmpl	$13, -8(%ebp)
	je	.L5078
	cmpl	$1, -8(%ebp)
	je	.L5076
	jmp	.L5075
.L5076:
	.loc 1 10692 0
	movl	$1, -4(%ebp)
	jmp	.L5079
.L5077:
	.loc 1 10693 0
	movl	$2, -4(%ebp)
	jmp	.L5079
.L5078:
	.loc 1 10694 0
	movl	$2, -4(%ebp)
	jmp	.L5079
.L5075:
	.loc 1 10697 0
	movl	$1, -4(%ebp)
.L5079:
	movl	-4(%ebp), %eax
	.loc 1 10702 0
	leave
	ret
.LFE166:
	.size	mips_issue_rate, .-mips_issue_rate
	.type	mips_use_dfa_pipeline_interface, @function
mips_use_dfa_pipeline_interface:
.LFB167:
	.loc 1 10709 0
	pushl	%ebp
.LCFI607:
	movl	%esp, %ebp
.LCFI608:
	subl	$8, %esp
.LCFI609:
	call	__i686.get_pc_thunk.dx
	addl	$_GLOBAL_OFFSET_TABLE_, %edx
	.loc 1 10710 0
	movl	mips_tune@GOT(%edx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	cmpl	$18, -8(%ebp)
	ja	.L5082
	movl	$1, %eax
	movzbl	-8(%ebp), %ecx
	sall	%cl, %eax
	andl	$274432, %eax
	testl	%eax, %eax
	jne	.L5083
	jmp	.L5082
.L5083:
	.loc 1 10715 0
	movl	$1, -4(%ebp)
	jmp	.L5084
.L5082:
	.loc 1 10718 0
	movl	$0, -4(%ebp)
.L5084:
	movl	-4(%ebp), %eax
	.loc 1 10720 0
	leave
	ret
.LFE167:
	.size	mips_use_dfa_pipeline_interface, .-mips_use_dfa_pipeline_interface
	.section	.rodata
.LC385:
	.string	"pref\t4,%a0"
.LC386:
	.string	"pref\t0,%a0"
.LC387:
	.string	"pref\t6,%a0"
.LC388:
	.string	"pref\t5,%a0"
.LC389:
	.string	"pref\t1,%a0"
.LC390:
	.string	"pref\t7,%a0"
	.section	.data.rel.ro.local
	.align 32
	.type	alt.27345, @object
	.size	alt.27345, 32
alt.27345:
	.long	.LC385
	.long	.LC386
	.long	.LC386
	.long	.LC387
	.long	.LC388
	.long	.LC389
	.long	.LC389
	.long	.LC390
	.text
.globl mips_emit_prefetch
	.type	mips_emit_prefetch, @function
mips_emit_prefetch:
.LFB168:
	.loc 1 10726 0
	pushl	%ebp
.LCFI610:
	movl	%esp, %ebp
.LCFI611:
	subl	$16, %esp
.LCFI612:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 10732 0
	movl	8(%ebp), %eax
	addl	$4, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 10733 0
	movl	8(%ebp), %eax
	addl	$8, %eax
	movl	(%eax), %eax
	movl	8(%eax), %edx
	movl	4(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 10750 0
	movl	-8(%ebp), %eax
	movl	-4(%ebp), %edx
	sall	$2, %eax
	addl	%edx, %eax
	movl	alt.27345@GOTOFF(%ecx,%eax,4), %eax
	.loc 1 10751 0
	leave
	ret
.LFE168:
	.size	mips_emit_prefetch, .-mips_emit_prefetch
.globl gt_ggc_mx_machine_function
	.type	gt_ggc_mx_machine_function, @function
gt_ggc_mx_machine_function:
.LFB169:
	.file 2 "../../../kgccfe/gnu/MIPS/gt-mips.h"
	.loc 2 26 0
	pushl	%ebp
.LCFI613:
	movl	%esp, %ebp
.LCFI614:
	pushl	%ebx
.LCFI615:
	subl	$20, %esp
.LCFI616:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 2 27 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 2 28 0
	cmpl	$0, -8(%ebp)
	je	.L5096
	cmpl	$1, -8(%ebp)
	je	.L5096
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L5096
	.loc 2 30 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5093
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L5093:
	.loc 2 31 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L5096
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L5096:
	.loc 2 33 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE169:
	.size	gt_ggc_mx_machine_function, .-gt_ggc_mx_machine_function
.globl gt_ggc_r_gt_mips_h
	.section	.data.rel.ro,"aw",@progbits
	.align 32
	.type	gt_ggc_r_gt_mips_h, @object
	.size	gt_ggc_r_gt_mips_h, 32
gt_ggc_r_gt_mips_h:
	.long	mips16_strings
	.long	1
	.long	4
	.long	gt_ggc_mx_rtx_def
	.long	0
	.long	0
	.long	0
	.long	0
	.local	gpr_mode
	.comm	gpr_mode,4,4
	.local	mips16_strings
	.comm	mips16_strings,4,4
	.local	string_constants
	.comm	string_constants,4,4
	.local	volatile_buffer
	.comm	volatile_buffer,60,32
	.local	mips16_stubs
	.comm	mips16_stubs,4,4
	.comm	mips_print_operand_punct,256,32
	.comm	set_noreorder,4,4
	.comm	set_nomacro,4,4
	.comm	set_noat,4,4
	.comm	set_volatile,4,4
	.comm	mips_branch_likely,4,4
	.comm	mips_dbx_regno,704,32
	.comm	branch_cmp,8,4
	.comm	branch_type,4,4
	.comm	mips_arch,4,4
	.comm	mips_tune,4,4
	.comm	mips_abicalls,4,4
	.comm	mips_isa,4,4
	.comm	mips16,4,4
	.comm	mips16_hard_float,4,4
	.comm	mips_entry,4,4
	.comm	mips_arch_string,4,4
	.comm	mips_tune_string,4,4
	.comm	mips_isa_string,4,4
	.comm	mips_abi_string,4,4
	.comm	mips_entry_string,4,4
	.comm	mips_no_mips16_string,4,4
	.comm	mips_split_addresses,4,4
	.comm	dslots_load_total,4,4
	.comm	dslots_load_filled,4,4
	.comm	dslots_jump_total,4,4
	.comm	dslots_jump_filled,4,4
	.comm	dslots_number_nops,4,4
	.comm	num_refs,12,4
	.comm	mips_load_reg,4,4
	.comm	mips_load_reg2,4,4
	.comm	mips_load_reg3,4,4
	.comm	mips_load_reg4,4,4
	.comm	mips_string_length,4,4
	.comm	mips_arch_info,4,4
	.comm	mips_tune_info,4,4
	.comm	mips_abi,4,4
	.comm	mips_hard_regno_mode_ok,9504,32
	.comm	asm_out_data_file,4,4
	.comm	asm_out_text_file,4,4
	.section	.debug_frame,"",@progbits
.Lframe0:
	.long	.LECIE0-.LSCIE0
.LSCIE0:
	.long	0xffffffff
	.byte	0x1
	.string	""
	.uleb128 0x1
	.sleb128 -4
	.byte	0x8
	.byte	0xc
	.uleb128 0x4
	.uleb128 0x4
	.byte	0x88
	.uleb128 0x1
	.align 4
.LECIE0:
.LSFDE0:
	.long	.LEFDE0-.LASFDE0
.LASFDE0:
	.long	.Lframe0
	.long	.LFB15
	.long	.LFE15-.LFB15
	.byte	0x4
	.long	.LCFI0-.LFB15
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI3-.LCFI1
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE0:
.LSFDE2:
	.long	.LEFDE2-.LASFDE2
.LASFDE2:
	.long	.Lframe0
	.long	.LFB16
	.long	.LFE16-.LFB16
	.byte	0x4
	.long	.LCFI4-.LFB16
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI5-.LCFI4
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI7-.LCFI5
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE2:
.LSFDE4:
	.long	.LEFDE4-.LASFDE4
.LASFDE4:
	.long	.Lframe0
	.long	.LFB17
	.long	.LFE17-.LFB17
	.byte	0x4
	.long	.LCFI8-.LFB17
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI9-.LCFI8
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI11-.LCFI9
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE4:
.LSFDE6:
	.long	.LEFDE6-.LASFDE6
.LASFDE6:
	.long	.Lframe0
	.long	.LFB18
	.long	.LFE18-.LFB18
	.byte	0x4
	.long	.LCFI12-.LFB18
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI13-.LCFI12
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE6:
.LSFDE8:
	.long	.LEFDE8-.LASFDE8
.LASFDE8:
	.long	.Lframe0
	.long	.LFB19
	.long	.LFE19-.LFB19
	.byte	0x4
	.long	.LCFI15-.LFB19
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI16-.LCFI15
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE8:
.LSFDE10:
	.long	.LEFDE10-.LASFDE10
.LASFDE10:
	.long	.Lframe0
	.long	.LFB20
	.long	.LFE20-.LFB20
	.byte	0x4
	.long	.LCFI18-.LFB20
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI19-.LCFI18
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI21-.LCFI19
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE10:
.LSFDE12:
	.long	.LEFDE12-.LASFDE12
.LASFDE12:
	.long	.Lframe0
	.long	.LFB21
	.long	.LFE21-.LFB21
	.byte	0x4
	.long	.LCFI22-.LFB21
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI23-.LCFI22
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI25-.LCFI23
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE12:
.LSFDE14:
	.long	.LEFDE14-.LASFDE14
.LASFDE14:
	.long	.Lframe0
	.long	.LFB22
	.long	.LFE22-.LFB22
	.byte	0x4
	.long	.LCFI26-.LFB22
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI27-.LCFI26
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE14:
.LSFDE16:
	.long	.LEFDE16-.LASFDE16
.LASFDE16:
	.long	.Lframe0
	.long	.LFB23
	.long	.LFE23-.LFB23
	.byte	0x4
	.long	.LCFI29-.LFB23
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI30-.LCFI29
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI32-.LCFI30
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE16:
.LSFDE18:
	.long	.LEFDE18-.LASFDE18
.LASFDE18:
	.long	.Lframe0
	.long	.LFB24
	.long	.LFE24-.LFB24
	.byte	0x4
	.long	.LCFI33-.LFB24
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI34-.LCFI33
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI38-.LCFI34
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE18:
.LSFDE20:
	.long	.LEFDE20-.LASFDE20
.LASFDE20:
	.long	.Lframe0
	.long	.LFB25
	.long	.LFE25-.LFB25
	.byte	0x4
	.long	.LCFI39-.LFB25
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI40-.LCFI39
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI43-.LCFI40
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE20:
.LSFDE22:
	.long	.LEFDE22-.LASFDE22
.LASFDE22:
	.long	.Lframe0
	.long	.LFB26
	.long	.LFE26-.LFB26
	.byte	0x4
	.long	.LCFI44-.LFB26
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI45-.LCFI44
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI47-.LCFI45
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE22:
.LSFDE24:
	.long	.LEFDE24-.LASFDE24
.LASFDE24:
	.long	.Lframe0
	.long	.LFB27
	.long	.LFE27-.LFB27
	.byte	0x4
	.long	.LCFI48-.LFB27
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI49-.LCFI48
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE24:
.LSFDE26:
	.long	.LEFDE26-.LASFDE26
.LASFDE26:
	.long	.Lframe0
	.long	.LFB28
	.long	.LFE28-.LFB28
	.byte	0x4
	.long	.LCFI51-.LFB28
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI52-.LCFI51
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE26:
.LSFDE28:
	.long	.LEFDE28-.LASFDE28
.LASFDE28:
	.long	.Lframe0
	.long	.LFB29
	.long	.LFE29-.LFB29
	.byte	0x4
	.long	.LCFI54-.LFB29
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI55-.LCFI54
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE28:
.LSFDE30:
	.long	.LEFDE30-.LASFDE30
.LASFDE30:
	.long	.Lframe0
	.long	.LFB30
	.long	.LFE30-.LFB30
	.byte	0x4
	.long	.LCFI57-.LFB30
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI58-.LCFI57
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE30:
.LSFDE32:
	.long	.LEFDE32-.LASFDE32
.LASFDE32:
	.long	.Lframe0
	.long	.LFB31
	.long	.LFE31-.LFB31
	.byte	0x4
	.long	.LCFI60-.LFB31
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI61-.LCFI60
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI63-.LCFI61
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE32:
.LSFDE34:
	.long	.LEFDE34-.LASFDE34
.LASFDE34:
	.long	.Lframe0
	.long	.LFB32
	.long	.LFE32-.LFB32
	.byte	0x4
	.long	.LCFI64-.LFB32
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI65-.LCFI64
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI67-.LCFI65
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE34:
.LSFDE36:
	.long	.LEFDE36-.LASFDE36
.LASFDE36:
	.long	.Lframe0
	.long	.LFB33
	.long	.LFE33-.LFB33
	.byte	0x4
	.long	.LCFI68-.LFB33
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI69-.LCFI68
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI71-.LCFI69
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE36:
.LSFDE38:
	.long	.LEFDE38-.LASFDE38
.LASFDE38:
	.long	.Lframe0
	.long	.LFB34
	.long	.LFE34-.LFB34
	.byte	0x4
	.long	.LCFI72-.LFB34
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI73-.LCFI72
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI75-.LCFI73
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE38:
.LSFDE40:
	.long	.LEFDE40-.LASFDE40
.LASFDE40:
	.long	.Lframe0
	.long	.LFB35
	.long	.LFE35-.LFB35
	.byte	0x4
	.long	.LCFI76-.LFB35
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI77-.LCFI76
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI79-.LCFI77
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE40:
.LSFDE42:
	.long	.LEFDE42-.LASFDE42
.LASFDE42:
	.long	.Lframe0
	.long	.LFB36
	.long	.LFE36-.LFB36
	.byte	0x4
	.long	.LCFI80-.LFB36
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI81-.LCFI80
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI83-.LCFI81
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE42:
.LSFDE44:
	.long	.LEFDE44-.LASFDE44
.LASFDE44:
	.long	.Lframe0
	.long	.LFB37
	.long	.LFE37-.LFB37
	.byte	0x4
	.long	.LCFI84-.LFB37
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI85-.LCFI84
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI87-.LCFI85
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE44:
.LSFDE46:
	.long	.LEFDE46-.LASFDE46
.LASFDE46:
	.long	.Lframe0
	.long	.LFB38
	.long	.LFE38-.LFB38
	.byte	0x4
	.long	.LCFI88-.LFB38
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI89-.LCFI88
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI91-.LCFI89
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE46:
.LSFDE48:
	.long	.LEFDE48-.LASFDE48
.LASFDE48:
	.long	.Lframe0
	.long	.LFB39
	.long	.LFE39-.LFB39
	.byte	0x4
	.long	.LCFI92-.LFB39
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI93-.LCFI92
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE48:
.LSFDE50:
	.long	.LEFDE50-.LASFDE50
.LASFDE50:
	.long	.Lframe0
	.long	.LFB40
	.long	.LFE40-.LFB40
	.byte	0x4
	.long	.LCFI95-.LFB40
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI96-.LCFI95
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE50:
.LSFDE52:
	.long	.LEFDE52-.LASFDE52
.LASFDE52:
	.long	.Lframe0
	.long	.LFB41
	.long	.LFE41-.LFB41
	.byte	0x4
	.long	.LCFI98-.LFB41
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI99-.LCFI98
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE52:
.LSFDE54:
	.long	.LEFDE54-.LASFDE54
.LASFDE54:
	.long	.Lframe0
	.long	.LFB42
	.long	.LFE42-.LFB42
	.byte	0x4
	.long	.LCFI101-.LFB42
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI102-.LCFI101
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE54:
.LSFDE56:
	.long	.LEFDE56-.LASFDE56
.LASFDE56:
	.long	.Lframe0
	.long	.LFB43
	.long	.LFE43-.LFB43
	.byte	0x4
	.long	.LCFI104-.LFB43
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI105-.LCFI104
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE56:
.LSFDE58:
	.long	.LEFDE58-.LASFDE58
.LASFDE58:
	.long	.Lframe0
	.long	.LFB44
	.long	.LFE44-.LFB44
	.byte	0x4
	.long	.LCFI107-.LFB44
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI108-.LCFI107
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE58:
.LSFDE60:
	.long	.LEFDE60-.LASFDE60
.LASFDE60:
	.long	.Lframe0
	.long	.LFB45
	.long	.LFE45-.LFB45
	.byte	0x4
	.long	.LCFI110-.LFB45
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI111-.LCFI110
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI115-.LCFI111
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE60:
.LSFDE62:
	.long	.LEFDE62-.LASFDE62
.LASFDE62:
	.long	.Lframe0
	.long	.LFB46
	.long	.LFE46-.LFB46
	.byte	0x4
	.long	.LCFI116-.LFB46
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI117-.LCFI116
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI120-.LCFI117
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE62:
.LSFDE64:
	.long	.LEFDE64-.LASFDE64
.LASFDE64:
	.long	.Lframe0
	.long	.LFB47
	.long	.LFE47-.LFB47
	.byte	0x4
	.long	.LCFI121-.LFB47
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI122-.LCFI121
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE64:
.LSFDE66:
	.long	.LEFDE66-.LASFDE66
.LASFDE66:
	.long	.Lframe0
	.long	.LFB48
	.long	.LFE48-.LFB48
	.byte	0x4
	.long	.LCFI124-.LFB48
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI125-.LCFI124
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE66:
.LSFDE68:
	.long	.LEFDE68-.LASFDE68
.LASFDE68:
	.long	.Lframe0
	.long	.LFB49
	.long	.LFE49-.LFB49
	.byte	0x4
	.long	.LCFI127-.LFB49
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI128-.LCFI127
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE68:
.LSFDE70:
	.long	.LEFDE70-.LASFDE70
.LASFDE70:
	.long	.Lframe0
	.long	.LFB50
	.long	.LFE50-.LFB50
	.byte	0x4
	.long	.LCFI130-.LFB50
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI131-.LCFI130
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE70:
.LSFDE72:
	.long	.LEFDE72-.LASFDE72
.LASFDE72:
	.long	.Lframe0
	.long	.LFB51
	.long	.LFE51-.LFB51
	.byte	0x4
	.long	.LCFI133-.LFB51
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI134-.LCFI133
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE72:
.LSFDE74:
	.long	.LEFDE74-.LASFDE74
.LASFDE74:
	.long	.Lframe0
	.long	.LFB52
	.long	.LFE52-.LFB52
	.byte	0x4
	.long	.LCFI136-.LFB52
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI137-.LCFI136
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE74:
.LSFDE76:
	.long	.LEFDE76-.LASFDE76
.LASFDE76:
	.long	.Lframe0
	.long	.LFB53
	.long	.LFE53-.LFB53
	.byte	0x4
	.long	.LCFI139-.LFB53
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI140-.LCFI139
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE76:
.LSFDE78:
	.long	.LEFDE78-.LASFDE78
.LASFDE78:
	.long	.Lframe0
	.long	.LFB54
	.long	.LFE54-.LFB54
	.byte	0x4
	.long	.LCFI142-.LFB54
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI143-.LCFI142
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE78:
.LSFDE80:
	.long	.LEFDE80-.LASFDE80
.LASFDE80:
	.long	.Lframe0
	.long	.LFB55
	.long	.LFE55-.LFB55
	.byte	0x4
	.long	.LCFI145-.LFB55
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI146-.LCFI145
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE80:
.LSFDE82:
	.long	.LEFDE82-.LASFDE82
.LASFDE82:
	.long	.Lframe0
	.long	.LFB56
	.long	.LFE56-.LFB56
	.byte	0x4
	.long	.LCFI148-.LFB56
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI149-.LCFI148
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE82:
.LSFDE84:
	.long	.LEFDE84-.LASFDE84
.LASFDE84:
	.long	.Lframe0
	.long	.LFB57
	.long	.LFE57-.LFB57
	.byte	0x4
	.long	.LCFI151-.LFB57
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI152-.LCFI151
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE84:
.LSFDE86:
	.long	.LEFDE86-.LASFDE86
.LASFDE86:
	.long	.Lframe0
	.long	.LFB58
	.long	.LFE58-.LFB58
	.byte	0x4
	.long	.LCFI154-.LFB58
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI155-.LCFI154
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE86:
.LSFDE88:
	.long	.LEFDE88-.LASFDE88
.LASFDE88:
	.long	.Lframe0
	.long	.LFB59
	.long	.LFE59-.LFB59
	.byte	0x4
	.long	.LCFI157-.LFB59
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI158-.LCFI157
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE88:
.LSFDE90:
	.long	.LEFDE90-.LASFDE90
.LASFDE90:
	.long	.Lframe0
	.long	.LFB60
	.long	.LFE60-.LFB60
	.byte	0x4
	.long	.LCFI160-.LFB60
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI161-.LCFI160
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE90:
.LSFDE92:
	.long	.LEFDE92-.LASFDE92
.LASFDE92:
	.long	.Lframe0
	.long	.LFB61
	.long	.LFE61-.LFB61
	.byte	0x4
	.long	.LCFI163-.LFB61
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI164-.LCFI163
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE92:
.LSFDE94:
	.long	.LEFDE94-.LASFDE94
.LASFDE94:
	.long	.Lframe0
	.long	.LFB62
	.long	.LFE62-.LFB62
	.byte	0x4
	.long	.LCFI166-.LFB62
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI167-.LCFI166
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE94:
.LSFDE96:
	.long	.LEFDE96-.LASFDE96
.LASFDE96:
	.long	.Lframe0
	.long	.LFB63
	.long	.LFE63-.LFB63
	.byte	0x4
	.long	.LCFI169-.LFB63
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI170-.LCFI169
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI173-.LCFI170
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE96:
.LSFDE98:
	.long	.LEFDE98-.LASFDE98
.LASFDE98:
	.long	.Lframe0
	.long	.LFB64
	.long	.LFE64-.LFB64
	.byte	0x4
	.long	.LCFI174-.LFB64
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI175-.LCFI174
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI178-.LCFI175
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE98:
.LSFDE100:
	.long	.LEFDE100-.LASFDE100
.LASFDE100:
	.long	.Lframe0
	.long	.LFB65
	.long	.LFE65-.LFB65
	.byte	0x4
	.long	.LCFI179-.LFB65
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI180-.LCFI179
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI182-.LCFI180
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE100:
.LSFDE102:
	.long	.LEFDE102-.LASFDE102
.LASFDE102:
	.long	.Lframe0
	.long	.LFB66
	.long	.LFE66-.LFB66
	.byte	0x4
	.long	.LCFI183-.LFB66
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI184-.LCFI183
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI186-.LCFI184
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE102:
.LSFDE104:
	.long	.LEFDE104-.LASFDE104
.LASFDE104:
	.long	.Lframe0
	.long	.LFB67
	.long	.LFE67-.LFB67
	.byte	0x4
	.long	.LCFI187-.LFB67
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI188-.LCFI187
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI190-.LCFI188
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE104:
.LSFDE106:
	.long	.LEFDE106-.LASFDE106
.LASFDE106:
	.long	.Lframe0
	.long	.LFB68
	.long	.LFE68-.LFB68
	.byte	0x4
	.long	.LCFI191-.LFB68
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI192-.LCFI191
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI194-.LCFI192
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE106:
.LSFDE108:
	.long	.LEFDE108-.LASFDE108
.LASFDE108:
	.long	.Lframe0
	.long	.LFB69
	.long	.LFE69-.LFB69
	.byte	0x4
	.long	.LCFI195-.LFB69
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI196-.LCFI195
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI200-.LCFI196
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE108:
.LSFDE110:
	.long	.LEFDE110-.LASFDE110
.LASFDE110:
	.long	.Lframe0
	.long	.LFB70
	.long	.LFE70-.LFB70
	.byte	0x4
	.long	.LCFI201-.LFB70
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI202-.LCFI201
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI204-.LCFI202
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE110:
.LSFDE112:
	.long	.LEFDE112-.LASFDE112
.LASFDE112:
	.long	.Lframe0
	.long	.LFB71
	.long	.LFE71-.LFB71
	.byte	0x4
	.long	.LCFI205-.LFB71
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI206-.LCFI205
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI208-.LCFI206
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE112:
.LSFDE114:
	.long	.LEFDE114-.LASFDE114
.LASFDE114:
	.long	.Lframe0
	.long	.LFB72
	.long	.LFE72-.LFB72
	.byte	0x4
	.long	.LCFI209-.LFB72
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI210-.LCFI209
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI214-.LCFI210
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE114:
.LSFDE116:
	.long	.LEFDE116-.LASFDE116
.LASFDE116:
	.long	.Lframe0
	.long	.LFB73
	.long	.LFE73-.LFB73
	.byte	0x4
	.long	.LCFI215-.LFB73
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI216-.LCFI215
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI218-.LCFI216
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE116:
.LSFDE118:
	.long	.LEFDE118-.LASFDE118
.LASFDE118:
	.long	.Lframe0
	.long	.LFB74
	.long	.LFE74-.LFB74
	.byte	0x4
	.long	.LCFI219-.LFB74
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI220-.LCFI219
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE118:
.LSFDE120:
	.long	.LEFDE120-.LASFDE120
.LASFDE120:
	.long	.Lframe0
	.long	.LFB75
	.long	.LFE75-.LFB75
	.byte	0x4
	.long	.LCFI222-.LFB75
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI223-.LCFI222
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE120:
.LSFDE122:
	.long	.LEFDE122-.LASFDE122
.LASFDE122:
	.long	.Lframe0
	.long	.LFB76
	.long	.LFE76-.LFB76
	.byte	0x4
	.long	.LCFI225-.LFB76
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI226-.LCFI225
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI230-.LCFI226
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE122:
.LSFDE124:
	.long	.LEFDE124-.LASFDE124
.LASFDE124:
	.long	.Lframe0
	.long	.LFB77
	.long	.LFE77-.LFB77
	.byte	0x4
	.long	.LCFI231-.LFB77
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI232-.LCFI231
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI234-.LCFI232
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE124:
.LSFDE126:
	.long	.LEFDE126-.LASFDE126
.LASFDE126:
	.long	.Lframe0
	.long	.LFB78
	.long	.LFE78-.LFB78
	.byte	0x4
	.long	.LCFI235-.LFB78
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI236-.LCFI235
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI238-.LCFI236
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE126:
.LSFDE128:
	.long	.LEFDE128-.LASFDE128
.LASFDE128:
	.long	.Lframe0
	.long	.LFB79
	.long	.LFE79-.LFB79
	.byte	0x4
	.long	.LCFI239-.LFB79
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI240-.LCFI239
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI244-.LCFI240
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE128:
.LSFDE130:
	.long	.LEFDE130-.LASFDE130
.LASFDE130:
	.long	.Lframe0
	.long	.LFB80
	.long	.LFE80-.LFB80
	.byte	0x4
	.long	.LCFI245-.LFB80
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI246-.LCFI245
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI249-.LCFI246
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE130:
.LSFDE132:
	.long	.LEFDE132-.LASFDE132
.LASFDE132:
	.long	.Lframe0
	.long	.LFB81
	.long	.LFE81-.LFB81
	.byte	0x4
	.long	.LCFI250-.LFB81
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI251-.LCFI250
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI253-.LCFI251
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE132:
.LSFDE134:
	.long	.LEFDE134-.LASFDE134
.LASFDE134:
	.long	.Lframe0
	.long	.LFB82
	.long	.LFE82-.LFB82
	.byte	0x4
	.long	.LCFI254-.LFB82
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI255-.LCFI254
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI258-.LCFI255
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE134:
.LSFDE136:
	.long	.LEFDE136-.LASFDE136
.LASFDE136:
	.long	.Lframe0
	.long	.LFB83
	.long	.LFE83-.LFB83
	.byte	0x4
	.long	.LCFI259-.LFB83
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI260-.LCFI259
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI262-.LCFI260
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE136:
.LSFDE138:
	.long	.LEFDE138-.LASFDE138
.LASFDE138:
	.long	.Lframe0
	.long	.LFB84
	.long	.LFE84-.LFB84
	.byte	0x4
	.long	.LCFI263-.LFB84
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI264-.LCFI263
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI266-.LCFI264
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE138:
.LSFDE140:
	.long	.LEFDE140-.LASFDE140
.LASFDE140:
	.long	.Lframe0
	.long	.LFB85
	.long	.LFE85-.LFB85
	.byte	0x4
	.long	.LCFI267-.LFB85
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI268-.LCFI267
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI270-.LCFI268
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE140:
.LSFDE142:
	.long	.LEFDE142-.LASFDE142
.LASFDE142:
	.long	.Lframe0
	.long	.LFB86
	.long	.LFE86-.LFB86
	.byte	0x4
	.long	.LCFI271-.LFB86
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI272-.LCFI271
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI276-.LCFI272
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE142:
.LSFDE144:
	.long	.LEFDE144-.LASFDE144
.LASFDE144:
	.long	.Lframe0
	.long	.LFB87
	.long	.LFE87-.LFB87
	.byte	0x4
	.long	.LCFI277-.LFB87
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI278-.LCFI277
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI281-.LCFI278
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE144:
.LSFDE146:
	.long	.LEFDE146-.LASFDE146
.LASFDE146:
	.long	.Lframe0
	.long	.LFB88
	.long	.LFE88-.LFB88
	.byte	0x4
	.long	.LCFI282-.LFB88
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI283-.LCFI282
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE146:
.LSFDE148:
	.long	.LEFDE148-.LASFDE148
.LASFDE148:
	.long	.Lframe0
	.long	.LFB89
	.long	.LFE89-.LFB89
	.byte	0x4
	.long	.LCFI285-.LFB89
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI286-.LCFI285
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI288-.LCFI286
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE148:
.LSFDE150:
	.long	.LEFDE150-.LASFDE150
.LASFDE150:
	.long	.Lframe0
	.long	.LFB90
	.long	.LFE90-.LFB90
	.byte	0x4
	.long	.LCFI289-.LFB90
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI290-.LCFI289
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI293-.LCFI290
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE150:
.LSFDE152:
	.long	.LEFDE152-.LASFDE152
.LASFDE152:
	.long	.Lframe0
	.long	.LFB91
	.long	.LFE91-.LFB91
	.byte	0x4
	.long	.LCFI294-.LFB91
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI295-.LCFI294
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI299-.LCFI295
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE152:
.LSFDE154:
	.long	.LEFDE154-.LASFDE154
.LASFDE154:
	.long	.Lframe0
	.long	.LFB92
	.long	.LFE92-.LFB92
	.byte	0x4
	.long	.LCFI300-.LFB92
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI301-.LCFI300
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE154:
.LSFDE156:
	.long	.LEFDE156-.LASFDE156
.LASFDE156:
	.long	.Lframe0
	.long	.LFB93
	.long	.LFE93-.LFB93
	.byte	0x4
	.long	.LCFI303-.LFB93
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI304-.LCFI303
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI307-.LCFI304
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE156:
.LSFDE158:
	.long	.LEFDE158-.LASFDE158
.LASFDE158:
	.long	.Lframe0
	.long	.LFB94
	.long	.LFE94-.LFB94
	.byte	0x4
	.long	.LCFI308-.LFB94
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI309-.LCFI308
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI312-.LCFI309
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE158:
.LSFDE160:
	.long	.LEFDE160-.LASFDE160
.LASFDE160:
	.long	.Lframe0
	.long	.LFB95
	.long	.LFE95-.LFB95
	.byte	0x4
	.long	.LCFI313-.LFB95
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI314-.LCFI313
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI316-.LCFI314
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE160:
.LSFDE162:
	.long	.LEFDE162-.LASFDE162
.LASFDE162:
	.long	.Lframe0
	.long	.LFB96
	.long	.LFE96-.LFB96
	.byte	0x4
	.long	.LCFI317-.LFB96
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI318-.LCFI317
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI322-.LCFI318
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE162:
.LSFDE164:
	.long	.LEFDE164-.LASFDE164
.LASFDE164:
	.long	.Lframe0
	.long	.LFB97
	.long	.LFE97-.LFB97
	.byte	0x4
	.long	.LCFI323-.LFB97
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI324-.LCFI323
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI326-.LCFI324
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE164:
.LSFDE166:
	.long	.LEFDE166-.LASFDE166
.LASFDE166:
	.long	.Lframe0
	.long	.LFB98
	.long	.LFE98-.LFB98
	.byte	0x4
	.long	.LCFI327-.LFB98
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI328-.LCFI327
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE166:
.LSFDE168:
	.long	.LEFDE168-.LASFDE168
.LASFDE168:
	.long	.Lframe0
	.long	.LFB99
	.long	.LFE99-.LFB99
	.byte	0x4
	.long	.LCFI329-.LFB99
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI330-.LCFI329
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE168:
.LSFDE170:
	.long	.LEFDE170-.LASFDE170
.LASFDE170:
	.long	.Lframe0
	.long	.LFB100
	.long	.LFE100-.LFB100
	.byte	0x4
	.long	.LCFI331-.LFB100
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI332-.LCFI331
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI335-.LCFI332
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE170:
.LSFDE172:
	.long	.LEFDE172-.LASFDE172
.LASFDE172:
	.long	.Lframe0
	.long	.LFB101
	.long	.LFE101-.LFB101
	.byte	0x4
	.long	.LCFI336-.LFB101
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI337-.LCFI336
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI339-.LCFI337
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE172:
.LSFDE174:
	.long	.LEFDE174-.LASFDE174
.LASFDE174:
	.long	.Lframe0
	.long	.LFB102
	.long	.LFE102-.LFB102
	.byte	0x4
	.long	.LCFI340-.LFB102
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI341-.LCFI340
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI343-.LCFI341
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE174:
.LSFDE176:
	.long	.LEFDE176-.LASFDE176
.LASFDE176:
	.long	.Lframe0
	.long	.LFB103
	.long	.LFE103-.LFB103
	.byte	0x4
	.long	.LCFI344-.LFB103
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI345-.LCFI344
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI347-.LCFI345
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE176:
.LSFDE178:
	.long	.LEFDE178-.LASFDE178
.LASFDE178:
	.long	.Lframe0
	.long	.LFB104
	.long	.LFE104-.LFB104
	.byte	0x4
	.long	.LCFI348-.LFB104
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI349-.LCFI348
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI351-.LCFI349
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE178:
.LSFDE180:
	.long	.LEFDE180-.LASFDE180
.LASFDE180:
	.long	.Lframe0
	.long	.LFB105
	.long	.LFE105-.LFB105
	.byte	0x4
	.long	.LCFI352-.LFB105
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI353-.LCFI352
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI357-.LCFI353
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE180:
.LSFDE182:
	.long	.LEFDE182-.LASFDE182
.LASFDE182:
	.long	.Lframe0
	.long	.LFB106
	.long	.LFE106-.LFB106
	.byte	0x4
	.long	.LCFI358-.LFB106
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI359-.LCFI358
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI361-.LCFI359
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE182:
.LSFDE184:
	.long	.LEFDE184-.LASFDE184
.LASFDE184:
	.long	.Lframe0
	.long	.LFB107
	.long	.LFE107-.LFB107
	.byte	0x4
	.long	.LCFI362-.LFB107
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI363-.LCFI362
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI365-.LCFI363
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE184:
.LSFDE186:
	.long	.LEFDE186-.LASFDE186
.LASFDE186:
	.long	.Lframe0
	.long	.LFB108
	.long	.LFE108-.LFB108
	.byte	0x4
	.long	.LCFI366-.LFB108
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI367-.LCFI366
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI369-.LCFI367
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE186:
.LSFDE188:
	.long	.LEFDE188-.LASFDE188
.LASFDE188:
	.long	.Lframe0
	.long	.LFB109
	.long	.LFE109-.LFB109
	.byte	0x4
	.long	.LCFI370-.LFB109
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI371-.LCFI370
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI373-.LCFI371
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE188:
.LSFDE190:
	.long	.LEFDE190-.LASFDE190
.LASFDE190:
	.long	.Lframe0
	.long	.LFB110
	.long	.LFE110-.LFB110
	.byte	0x4
	.long	.LCFI374-.LFB110
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI375-.LCFI374
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI377-.LCFI375
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE190:
.LSFDE192:
	.long	.LEFDE192-.LASFDE192
.LASFDE192:
	.long	.Lframe0
	.long	.LFB111
	.long	.LFE111-.LFB111
	.byte	0x4
	.long	.LCFI378-.LFB111
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI379-.LCFI378
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI381-.LCFI379
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE192:
.LSFDE194:
	.long	.LEFDE194-.LASFDE194
.LASFDE194:
	.long	.Lframe0
	.long	.LFB112
	.long	.LFE112-.LFB112
	.byte	0x4
	.long	.LCFI382-.LFB112
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI383-.LCFI382
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI385-.LCFI383
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE194:
.LSFDE196:
	.long	.LEFDE196-.LASFDE196
.LASFDE196:
	.long	.Lframe0
	.long	.LFB113
	.long	.LFE113-.LFB113
	.byte	0x4
	.long	.LCFI386-.LFB113
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI387-.LCFI386
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI389-.LCFI387
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE196:
.LSFDE198:
	.long	.LEFDE198-.LASFDE198
.LASFDE198:
	.long	.Lframe0
	.long	.LFB114
	.long	.LFE114-.LFB114
	.byte	0x4
	.long	.LCFI390-.LFB114
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI391-.LCFI390
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI393-.LCFI391
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE198:
.LSFDE200:
	.long	.LEFDE200-.LASFDE200
.LASFDE200:
	.long	.Lframe0
	.long	.LFB115
	.long	.LFE115-.LFB115
	.byte	0x4
	.long	.LCFI394-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI395-.LCFI394
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI397-.LCFI395
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE200:
.LSFDE202:
	.long	.LEFDE202-.LASFDE202
.LASFDE202:
	.long	.Lframe0
	.long	.LFB116
	.long	.LFE116-.LFB116
	.byte	0x4
	.long	.LCFI398-.LFB116
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI399-.LCFI398
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI401-.LCFI399
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE202:
.LSFDE204:
	.long	.LEFDE204-.LASFDE204
.LASFDE204:
	.long	.Lframe0
	.long	.LFB117
	.long	.LFE117-.LFB117
	.byte	0x4
	.long	.LCFI402-.LFB117
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI403-.LCFI402
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI405-.LCFI403
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE204:
.LSFDE206:
	.long	.LEFDE206-.LASFDE206
.LASFDE206:
	.long	.Lframe0
	.long	.LFB118
	.long	.LFE118-.LFB118
	.byte	0x4
	.long	.LCFI406-.LFB118
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI407-.LCFI406
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI409-.LCFI407
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE206:
.LSFDE208:
	.long	.LEFDE208-.LASFDE208
.LASFDE208:
	.long	.Lframe0
	.long	.LFB119
	.long	.LFE119-.LFB119
	.byte	0x4
	.long	.LCFI410-.LFB119
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI411-.LCFI410
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI413-.LCFI411
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE208:
.LSFDE210:
	.long	.LEFDE210-.LASFDE210
.LASFDE210:
	.long	.Lframe0
	.long	.LFB120
	.long	.LFE120-.LFB120
	.byte	0x4
	.long	.LCFI414-.LFB120
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI415-.LCFI414
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI417-.LCFI415
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE210:
.LSFDE212:
	.long	.LEFDE212-.LASFDE212
.LASFDE212:
	.long	.Lframe0
	.long	.LFB121
	.long	.LFE121-.LFB121
	.byte	0x4
	.long	.LCFI418-.LFB121
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI419-.LCFI418
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI421-.LCFI419
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE212:
.LSFDE214:
	.long	.LEFDE214-.LASFDE214
.LASFDE214:
	.long	.Lframe0
	.long	.LFB122
	.long	.LFE122-.LFB122
	.byte	0x4
	.long	.LCFI422-.LFB122
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI423-.LCFI422
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI426-.LCFI423
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE214:
.LSFDE216:
	.long	.LEFDE216-.LASFDE216
.LASFDE216:
	.long	.Lframe0
	.long	.LFB123
	.long	.LFE123-.LFB123
	.byte	0x4
	.long	.LCFI427-.LFB123
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI428-.LCFI427
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI430-.LCFI428
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE216:
.LSFDE218:
	.long	.LEFDE218-.LASFDE218
.LASFDE218:
	.long	.Lframe0
	.long	.LFB124
	.long	.LFE124-.LFB124
	.byte	0x4
	.long	.LCFI431-.LFB124
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI432-.LCFI431
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI436-.LCFI432
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE218:
.LSFDE220:
	.long	.LEFDE220-.LASFDE220
.LASFDE220:
	.long	.Lframe0
	.long	.LFB125
	.long	.LFE125-.LFB125
	.byte	0x4
	.long	.LCFI437-.LFB125
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI438-.LCFI437
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI442-.LCFI438
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE220:
.LSFDE222:
	.long	.LEFDE222-.LASFDE222
.LASFDE222:
	.long	.Lframe0
	.long	.LFB126
	.long	.LFE126-.LFB126
	.byte	0x4
	.long	.LCFI443-.LFB126
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI444-.LCFI443
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI447-.LCFI444
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE222:
.LSFDE224:
	.long	.LEFDE224-.LASFDE224
.LASFDE224:
	.long	.Lframe0
	.long	.LFB127
	.long	.LFE127-.LFB127
	.byte	0x4
	.long	.LCFI448-.LFB127
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI449-.LCFI448
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI451-.LCFI449
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE224:
.LSFDE226:
	.long	.LEFDE226-.LASFDE226
.LASFDE226:
	.long	.Lframe0
	.long	.LFB128
	.long	.LFE128-.LFB128
	.byte	0x4
	.long	.LCFI452-.LFB128
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI453-.LCFI452
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI455-.LCFI453
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE226:
.LSFDE228:
	.long	.LEFDE228-.LASFDE228
.LASFDE228:
	.long	.Lframe0
	.long	.LFB129
	.long	.LFE129-.LFB129
	.byte	0x4
	.long	.LCFI456-.LFB129
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI457-.LCFI456
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI459-.LCFI457
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE228:
.LSFDE230:
	.long	.LEFDE230-.LASFDE230
.LASFDE230:
	.long	.Lframe0
	.long	.LFB130
	.long	.LFE130-.LFB130
	.byte	0x4
	.long	.LCFI460-.LFB130
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI461-.LCFI460
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI463-.LCFI461
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE230:
.LSFDE232:
	.long	.LEFDE232-.LASFDE232
.LASFDE232:
	.long	.Lframe0
	.long	.LFB131
	.long	.LFE131-.LFB131
	.byte	0x4
	.long	.LCFI464-.LFB131
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI465-.LCFI464
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI467-.LCFI465
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE232:
.LSFDE234:
	.long	.LEFDE234-.LASFDE234
.LASFDE234:
	.long	.Lframe0
	.long	.LFB132
	.long	.LFE132-.LFB132
	.byte	0x4
	.long	.LCFI468-.LFB132
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI469-.LCFI468
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI471-.LCFI469
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE234:
.LSFDE236:
	.long	.LEFDE236-.LASFDE236
.LASFDE236:
	.long	.Lframe0
	.long	.LFB133
	.long	.LFE133-.LFB133
	.byte	0x4
	.long	.LCFI472-.LFB133
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI473-.LCFI472
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI475-.LCFI473
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE236:
.LSFDE238:
	.long	.LEFDE238-.LASFDE238
.LASFDE238:
	.long	.Lframe0
	.long	.LFB134
	.long	.LFE134-.LFB134
	.byte	0x4
	.long	.LCFI476-.LFB134
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI477-.LCFI476
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI479-.LCFI477
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE238:
.LSFDE240:
	.long	.LEFDE240-.LASFDE240
.LASFDE240:
	.long	.Lframe0
	.long	.LFB135
	.long	.LFE135-.LFB135
	.byte	0x4
	.long	.LCFI480-.LFB135
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI481-.LCFI480
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI483-.LCFI481
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE240:
.LSFDE242:
	.long	.LEFDE242-.LASFDE242
.LASFDE242:
	.long	.Lframe0
	.long	.LFB136
	.long	.LFE136-.LFB136
	.byte	0x4
	.long	.LCFI484-.LFB136
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI485-.LCFI484
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI487-.LCFI485
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE242:
.LSFDE244:
	.long	.LEFDE244-.LASFDE244
.LASFDE244:
	.long	.Lframe0
	.long	.LFB137
	.long	.LFE137-.LFB137
	.byte	0x4
	.long	.LCFI488-.LFB137
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI489-.LCFI488
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI492-.LCFI489
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE244:
.LSFDE246:
	.long	.LEFDE246-.LASFDE246
.LASFDE246:
	.long	.Lframe0
	.long	.LFB138
	.long	.LFE138-.LFB138
	.byte	0x4
	.long	.LCFI493-.LFB138
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI494-.LCFI493
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE246:
.LSFDE248:
	.long	.LEFDE248-.LASFDE248
.LASFDE248:
	.long	.Lframe0
	.long	.LFB139
	.long	.LFE139-.LFB139
	.byte	0x4
	.long	.LCFI496-.LFB139
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI497-.LCFI496
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI499-.LCFI497
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE248:
.LSFDE250:
	.long	.LEFDE250-.LASFDE250
.LASFDE250:
	.long	.Lframe0
	.long	.LFB140
	.long	.LFE140-.LFB140
	.byte	0x4
	.long	.LCFI500-.LFB140
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI501-.LCFI500
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI503-.LCFI501
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE250:
.LSFDE252:
	.long	.LEFDE252-.LASFDE252
.LASFDE252:
	.long	.Lframe0
	.long	.LFB141
	.long	.LFE141-.LFB141
	.byte	0x4
	.long	.LCFI504-.LFB141
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI505-.LCFI504
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI507-.LCFI505
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE252:
.LSFDE254:
	.long	.LEFDE254-.LASFDE254
.LASFDE254:
	.long	.Lframe0
	.long	.LFB142
	.long	.LFE142-.LFB142
	.byte	0x4
	.long	.LCFI508-.LFB142
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI509-.LCFI508
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI511-.LCFI509
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE254:
.LSFDE256:
	.long	.LEFDE256-.LASFDE256
.LASFDE256:
	.long	.Lframe0
	.long	.LFB143
	.long	.LFE143-.LFB143
	.byte	0x4
	.long	.LCFI512-.LFB143
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI513-.LCFI512
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI515-.LCFI513
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE256:
.LSFDE258:
	.long	.LEFDE258-.LASFDE258
.LASFDE258:
	.long	.Lframe0
	.long	.LFB144
	.long	.LFE144-.LFB144
	.byte	0x4
	.long	.LCFI516-.LFB144
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI517-.LCFI516
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI519-.LCFI517
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE258:
.LSFDE260:
	.long	.LEFDE260-.LASFDE260
.LASFDE260:
	.long	.Lframe0
	.long	.LFB145
	.long	.LFE145-.LFB145
	.byte	0x4
	.long	.LCFI520-.LFB145
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI521-.LCFI520
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI525-.LCFI521
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE260:
.LSFDE262:
	.long	.LEFDE262-.LASFDE262
.LASFDE262:
	.long	.Lframe0
	.long	.LFB146
	.long	.LFE146-.LFB146
	.byte	0x4
	.long	.LCFI526-.LFB146
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI527-.LCFI526
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI530-.LCFI527
	.byte	0x83
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE262:
.LSFDE264:
	.long	.LEFDE264-.LASFDE264
.LASFDE264:
	.long	.Lframe0
	.long	.LFB147
	.long	.LFE147-.LFB147
	.byte	0x4
	.long	.LCFI531-.LFB147
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI532-.LCFI531
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI536-.LCFI532
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE264:
.LSFDE266:
	.long	.LEFDE266-.LASFDE266
.LASFDE266:
	.long	.Lframe0
	.long	.LFB148
	.long	.LFE148-.LFB148
	.byte	0x4
	.long	.LCFI537-.LFB148
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI538-.LCFI537
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI540-.LCFI538
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE266:
.LSFDE268:
	.long	.LEFDE268-.LASFDE268
.LASFDE268:
	.long	.Lframe0
	.long	.LFB149
	.long	.LFE149-.LFB149
	.byte	0x4
	.long	.LCFI541-.LFB149
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI542-.LCFI541
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI544-.LCFI542
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE268:
.LSFDE270:
	.long	.LEFDE270-.LASFDE270
.LASFDE270:
	.long	.Lframe0
	.long	.LFB150
	.long	.LFE150-.LFB150
	.byte	0x4
	.long	.LCFI545-.LFB150
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI546-.LCFI545
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI548-.LCFI546
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE270:
.LSFDE272:
	.long	.LEFDE272-.LASFDE272
.LASFDE272:
	.long	.Lframe0
	.long	.LFB151
	.long	.LFE151-.LFB151
	.byte	0x4
	.long	.LCFI549-.LFB151
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI550-.LCFI549
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE272:
.LSFDE274:
	.long	.LEFDE274-.LASFDE274
.LASFDE274:
	.long	.Lframe0
	.long	.LFB152
	.long	.LFE152-.LFB152
	.byte	0x4
	.long	.LCFI552-.LFB152
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI553-.LCFI552
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI556-.LCFI553
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE274:
.LSFDE276:
	.long	.LEFDE276-.LASFDE276
.LASFDE276:
	.long	.Lframe0
	.long	.LFB153
	.long	.LFE153-.LFB153
	.byte	0x4
	.long	.LCFI557-.LFB153
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI558-.LCFI557
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE276:
.LSFDE278:
	.long	.LEFDE278-.LASFDE278
.LASFDE278:
	.long	.Lframe0
	.long	.LFB154
	.long	.LFE154-.LFB154
	.byte	0x4
	.long	.LCFI560-.LFB154
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI561-.LCFI560
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE278:
.LSFDE280:
	.long	.LEFDE280-.LASFDE280
.LASFDE280:
	.long	.Lframe0
	.long	.LFB155
	.long	.LFE155-.LFB155
	.byte	0x4
	.long	.LCFI563-.LFB155
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI564-.LCFI563
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE280:
.LSFDE282:
	.long	.LEFDE282-.LASFDE282
.LASFDE282:
	.long	.Lframe0
	.long	.LFB156
	.long	.LFE156-.LFB156
	.byte	0x4
	.long	.LCFI566-.LFB156
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI567-.LCFI566
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI569-.LCFI567
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE282:
.LSFDE284:
	.long	.LEFDE284-.LASFDE284
.LASFDE284:
	.long	.Lframe0
	.long	.LFB157
	.long	.LFE157-.LFB157
	.byte	0x4
	.long	.LCFI570-.LFB157
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI571-.LCFI570
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI573-.LCFI571
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE284:
.LSFDE286:
	.long	.LEFDE286-.LASFDE286
.LASFDE286:
	.long	.Lframe0
	.long	.LFB158
	.long	.LFE158-.LFB158
	.byte	0x4
	.long	.LCFI574-.LFB158
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI575-.LCFI574
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI577-.LCFI575
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE286:
.LSFDE288:
	.long	.LEFDE288-.LASFDE288
.LASFDE288:
	.long	.Lframe0
	.long	.LFB159
	.long	.LFE159-.LFB159
	.byte	0x4
	.long	.LCFI578-.LFB159
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI579-.LCFI578
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI581-.LCFI579
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE288:
.LSFDE290:
	.long	.LEFDE290-.LASFDE290
.LASFDE290:
	.long	.Lframe0
	.long	.LFB160
	.long	.LFE160-.LFB160
	.byte	0x4
	.long	.LCFI582-.LFB160
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI583-.LCFI582
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI585-.LCFI583
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE290:
.LSFDE292:
	.long	.LEFDE292-.LASFDE292
.LASFDE292:
	.long	.Lframe0
	.long	.LFB161
	.long	.LFE161-.LFB161
	.byte	0x4
	.long	.LCFI586-.LFB161
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI587-.LCFI586
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE292:
.LSFDE294:
	.long	.LEFDE294-.LASFDE294
.LASFDE294:
	.long	.Lframe0
	.long	.LFB162
	.long	.LFE162-.LFB162
	.byte	0x4
	.long	.LCFI589-.LFB162
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI590-.LCFI589
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE294:
.LSFDE296:
	.long	.LEFDE296-.LASFDE296
.LASFDE296:
	.long	.Lframe0
	.long	.LFB163
	.long	.LFE163-.LFB163
	.byte	0x4
	.long	.LCFI592-.LFB163
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI593-.LCFI592
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI596-.LCFI593
	.byte	0x83
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE296:
.LSFDE298:
	.long	.LEFDE298-.LASFDE298
.LASFDE298:
	.long	.Lframe0
	.long	.LFB164
	.long	.LFE164-.LFB164
	.byte	0x4
	.long	.LCFI597-.LFB164
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI598-.LCFI597
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE298:
.LSFDE300:
	.long	.LEFDE300-.LASFDE300
.LASFDE300:
	.long	.Lframe0
	.long	.LFB165
	.long	.LFE165-.LFB165
	.byte	0x4
	.long	.LCFI600-.LFB165
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI601-.LCFI600
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI603-.LCFI601
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE300:
.LSFDE302:
	.long	.LEFDE302-.LASFDE302
.LASFDE302:
	.long	.Lframe0
	.long	.LFB166
	.long	.LFE166-.LFB166
	.byte	0x4
	.long	.LCFI604-.LFB166
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI605-.LCFI604
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE302:
.LSFDE304:
	.long	.LEFDE304-.LASFDE304
.LASFDE304:
	.long	.Lframe0
	.long	.LFB167
	.long	.LFE167-.LFB167
	.byte	0x4
	.long	.LCFI607-.LFB167
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI608-.LCFI607
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE304:
.LSFDE306:
	.long	.LEFDE306-.LASFDE306
.LASFDE306:
	.long	.Lframe0
	.long	.LFB168
	.long	.LFE168-.LFB168
	.byte	0x4
	.long	.LCFI610-.LFB168
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI611-.LCFI610
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE306:
.LSFDE308:
	.long	.LEFDE308-.LASFDE308
.LASFDE308:
	.long	.Lframe0
	.long	.LFB169
	.long	.LFE169-.LFB169
	.byte	0x4
	.long	.LCFI613-.LFB169
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI614-.LCFI613
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI616-.LCFI614
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE308:
	.file 3 "../../../kgccfe/gnu/MIPS/config.h"
	.file 4 "../../../kgccfe/gnu/rtl.h"
	.file 5 "../../../kgccfe/gnu/machmode.h"
	.file 6 "../../../kgccfe/gnu/bitmap.h"
	.file 7 "../../../kgccfe/gnu/tree.h"
	.file 8 "../../../kgccfe/gnu/real.h"
	.file 9 "../../../kgccfe/gnu/hashtable.h"
	.file 10 "../../../kgccfe/gnu/location.h"
	.file 11 "../../../kgccfe/gnu/function.h"
	.file 12 "../../../kgccfe/gnu/MIPS/mips.h"
	.file 13 "../../../kgccfe/omp_types.h"
	.file 14 "../../../kgccfe/gnu/basic-block.h"
	.file 15 "../../../kgccfe/gnu/sbitmap.h"
	.file 16 "/usr/lib/gcc/i486-linux-gnu/4.1.2/include/stddef.h"
	.file 17 "/usr/include/stdio.h"
	.file 18 "/usr/include/libio.h"
	.file 19 "/usr/include/bits/types.h"
	.file 20 "/usr/lib/gcc/i486-linux-gnu/4.1.2/include/stdarg.h"
	.file 21 "../../../kgccfe/gnu/hard-reg-set.h"
	.file 22 "../../../kgccfe/gnu/flags.h"
	.file 23 "../../../include/gnu/safe-ctype.h"
	.file 24 "../../../include/gnu/libiberty.h"
	.file 25 "../../../kgccfe/gnu/regs.h"
	.file 26 "../../../kgccfe/gnu/toplev.h"
	.file 27 "../../../kgccfe/gnu/output.h"
	.file 28 "../../../kgccfe/gnu/reload.h"
	.file 29 "../../../kgccfe/gnu/target.h"
	.file 30 "../../../kgccfe/gnu/ggc.h"
	.text
.Letext0:
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.long	.LFB15-.Ltext0
	.long	.LCFI0-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI0-.Ltext0
	.long	.LCFI1-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1-.Ltext0
	.long	.LFE15-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST1:
	.long	.LFB16-.Ltext0
	.long	.LCFI4-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI4-.Ltext0
	.long	.LCFI5-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI5-.Ltext0
	.long	.LFE16-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST2:
	.long	.LFB17-.Ltext0
	.long	.LCFI8-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI8-.Ltext0
	.long	.LCFI9-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI9-.Ltext0
	.long	.LFE17-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST3:
	.long	.LFB18-.Ltext0
	.long	.LCFI12-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI12-.Ltext0
	.long	.LCFI13-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI13-.Ltext0
	.long	.LFE18-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST4:
	.long	.LFB19-.Ltext0
	.long	.LCFI15-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI15-.Ltext0
	.long	.LCFI16-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI16-.Ltext0
	.long	.LFE19-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST5:
	.long	.LFB20-.Ltext0
	.long	.LCFI18-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI18-.Ltext0
	.long	.LCFI19-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI19-.Ltext0
	.long	.LFE20-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST6:
	.long	.LFB21-.Ltext0
	.long	.LCFI22-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI22-.Ltext0
	.long	.LCFI23-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI23-.Ltext0
	.long	.LFE21-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST7:
	.long	.LFB22-.Ltext0
	.long	.LCFI26-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI26-.Ltext0
	.long	.LCFI27-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI27-.Ltext0
	.long	.LFE22-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST8:
	.long	.LFB23-.Ltext0
	.long	.LCFI29-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI29-.Ltext0
	.long	.LCFI30-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI30-.Ltext0
	.long	.LFE23-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST9:
	.long	.LFB24-.Ltext0
	.long	.LCFI33-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI33-.Ltext0
	.long	.LCFI34-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI34-.Ltext0
	.long	.LFE24-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST10:
	.long	.LFB25-.Ltext0
	.long	.LCFI39-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI39-.Ltext0
	.long	.LCFI40-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI40-.Ltext0
	.long	.LFE25-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST11:
	.long	.LFB26-.Ltext0
	.long	.LCFI44-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI44-.Ltext0
	.long	.LCFI45-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI45-.Ltext0
	.long	.LFE26-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST12:
	.long	.LFB27-.Ltext0
	.long	.LCFI48-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI48-.Ltext0
	.long	.LCFI49-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI49-.Ltext0
	.long	.LFE27-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST13:
	.long	.LFB28-.Ltext0
	.long	.LCFI51-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI51-.Ltext0
	.long	.LCFI52-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI52-.Ltext0
	.long	.LFE28-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST14:
	.long	.LFB29-.Ltext0
	.long	.LCFI54-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI54-.Ltext0
	.long	.LCFI55-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI55-.Ltext0
	.long	.LFE29-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST15:
	.long	.LFB30-.Ltext0
	.long	.LCFI57-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI57-.Ltext0
	.long	.LCFI58-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI58-.Ltext0
	.long	.LFE30-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST16:
	.long	.LFB31-.Ltext0
	.long	.LCFI60-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI60-.Ltext0
	.long	.LCFI61-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI61-.Ltext0
	.long	.LFE31-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST17:
	.long	.LFB32-.Ltext0
	.long	.LCFI64-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI64-.Ltext0
	.long	.LCFI65-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI65-.Ltext0
	.long	.LFE32-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST18:
	.long	.LFB33-.Ltext0
	.long	.LCFI68-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI68-.Ltext0
	.long	.LCFI69-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI69-.Ltext0
	.long	.LFE33-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST19:
	.long	.LFB34-.Ltext0
	.long	.LCFI72-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI72-.Ltext0
	.long	.LCFI73-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI73-.Ltext0
	.long	.LFE34-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST20:
	.long	.LFB35-.Ltext0
	.long	.LCFI76-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI76-.Ltext0
	.long	.LCFI77-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI77-.Ltext0
	.long	.LFE35-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST21:
	.long	.LFB36-.Ltext0
	.long	.LCFI80-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI80-.Ltext0
	.long	.LCFI81-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI81-.Ltext0
	.long	.LFE36-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST22:
	.long	.LFB37-.Ltext0
	.long	.LCFI84-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI84-.Ltext0
	.long	.LCFI85-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI85-.Ltext0
	.long	.LFE37-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST23:
	.long	.LFB38-.Ltext0
	.long	.LCFI88-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI88-.Ltext0
	.long	.LCFI89-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI89-.Ltext0
	.long	.LFE38-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST24:
	.long	.LFB39-.Ltext0
	.long	.LCFI92-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI92-.Ltext0
	.long	.LCFI93-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI93-.Ltext0
	.long	.LFE39-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST25:
	.long	.LFB40-.Ltext0
	.long	.LCFI95-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI95-.Ltext0
	.long	.LCFI96-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI96-.Ltext0
	.long	.LFE40-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST26:
	.long	.LFB41-.Ltext0
	.long	.LCFI98-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI98-.Ltext0
	.long	.LCFI99-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI99-.Ltext0
	.long	.LFE41-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST27:
	.long	.LFB42-.Ltext0
	.long	.LCFI101-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI101-.Ltext0
	.long	.LCFI102-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI102-.Ltext0
	.long	.LFE42-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST28:
	.long	.LFB43-.Ltext0
	.long	.LCFI104-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI104-.Ltext0
	.long	.LCFI105-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI105-.Ltext0
	.long	.LFE43-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST29:
	.long	.LFB44-.Ltext0
	.long	.LCFI107-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI107-.Ltext0
	.long	.LCFI108-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI108-.Ltext0
	.long	.LFE44-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST30:
	.long	.LFB45-.Ltext0
	.long	.LCFI110-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI110-.Ltext0
	.long	.LCFI111-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI111-.Ltext0
	.long	.LFE45-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST31:
	.long	.LFB46-.Ltext0
	.long	.LCFI116-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI116-.Ltext0
	.long	.LCFI117-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI117-.Ltext0
	.long	.LFE46-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST32:
	.long	.LFB47-.Ltext0
	.long	.LCFI121-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI121-.Ltext0
	.long	.LCFI122-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI122-.Ltext0
	.long	.LFE47-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST33:
	.long	.LFB48-.Ltext0
	.long	.LCFI124-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI124-.Ltext0
	.long	.LCFI125-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI125-.Ltext0
	.long	.LFE48-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST34:
	.long	.LFB49-.Ltext0
	.long	.LCFI127-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI127-.Ltext0
	.long	.LCFI128-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI128-.Ltext0
	.long	.LFE49-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST35:
	.long	.LFB50-.Ltext0
	.long	.LCFI130-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI130-.Ltext0
	.long	.LCFI131-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI131-.Ltext0
	.long	.LFE50-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST36:
	.long	.LFB51-.Ltext0
	.long	.LCFI133-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI133-.Ltext0
	.long	.LCFI134-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI134-.Ltext0
	.long	.LFE51-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST37:
	.long	.LFB52-.Ltext0
	.long	.LCFI136-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI136-.Ltext0
	.long	.LCFI137-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI137-.Ltext0
	.long	.LFE52-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST38:
	.long	.LFB53-.Ltext0
	.long	.LCFI139-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI139-.Ltext0
	.long	.LCFI140-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI140-.Ltext0
	.long	.LFE53-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST39:
	.long	.LFB54-.Ltext0
	.long	.LCFI142-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI142-.Ltext0
	.long	.LCFI143-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI143-.Ltext0
	.long	.LFE54-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST40:
	.long	.LFB55-.Ltext0
	.long	.LCFI145-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI145-.Ltext0
	.long	.LCFI146-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI146-.Ltext0
	.long	.LFE55-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST41:
	.long	.LFB56-.Ltext0
	.long	.LCFI148-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI148-.Ltext0
	.long	.LCFI149-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI149-.Ltext0
	.long	.LFE56-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST42:
	.long	.LFB57-.Ltext0
	.long	.LCFI151-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI151-.Ltext0
	.long	.LCFI152-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI152-.Ltext0
	.long	.LFE57-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST43:
	.long	.LFB58-.Ltext0
	.long	.LCFI154-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI154-.Ltext0
	.long	.LCFI155-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI155-.Ltext0
	.long	.LFE58-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST44:
	.long	.LFB59-.Ltext0
	.long	.LCFI157-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI157-.Ltext0
	.long	.LCFI158-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI158-.Ltext0
	.long	.LFE59-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST45:
	.long	.LFB60-.Ltext0
	.long	.LCFI160-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI160-.Ltext0
	.long	.LCFI161-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI161-.Ltext0
	.long	.LFE60-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST46:
	.long	.LFB61-.Ltext0
	.long	.LCFI163-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI163-.Ltext0
	.long	.LCFI164-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI164-.Ltext0
	.long	.LFE61-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST47:
	.long	.LFB62-.Ltext0
	.long	.LCFI166-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI166-.Ltext0
	.long	.LCFI167-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI167-.Ltext0
	.long	.LFE62-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST48:
	.long	.LFB63-.Ltext0
	.long	.LCFI169-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI169-.Ltext0
	.long	.LCFI170-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI170-.Ltext0
	.long	.LFE63-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST49:
	.long	.LFB64-.Ltext0
	.long	.LCFI174-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI174-.Ltext0
	.long	.LCFI175-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI175-.Ltext0
	.long	.LFE64-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST50:
	.long	.LFB65-.Ltext0
	.long	.LCFI179-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI179-.Ltext0
	.long	.LCFI180-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI180-.Ltext0
	.long	.LFE65-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST51:
	.long	.LFB66-.Ltext0
	.long	.LCFI183-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI183-.Ltext0
	.long	.LCFI184-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI184-.Ltext0
	.long	.LFE66-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST52:
	.long	.LFB67-.Ltext0
	.long	.LCFI187-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI187-.Ltext0
	.long	.LCFI188-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI188-.Ltext0
	.long	.LFE67-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST53:
	.long	.LFB68-.Ltext0
	.long	.LCFI191-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI191-.Ltext0
	.long	.LCFI192-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI192-.Ltext0
	.long	.LFE68-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST54:
	.long	.LFB69-.Ltext0
	.long	.LCFI195-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI195-.Ltext0
	.long	.LCFI196-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI196-.Ltext0
	.long	.LFE69-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST55:
	.long	.LFB70-.Ltext0
	.long	.LCFI201-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI201-.Ltext0
	.long	.LCFI202-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI202-.Ltext0
	.long	.LFE70-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST56:
	.long	.LFB71-.Ltext0
	.long	.LCFI205-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI205-.Ltext0
	.long	.LCFI206-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI206-.Ltext0
	.long	.LFE71-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST57:
	.long	.LFB72-.Ltext0
	.long	.LCFI209-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI209-.Ltext0
	.long	.LCFI210-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI210-.Ltext0
	.long	.LFE72-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST58:
	.long	.LFB73-.Ltext0
	.long	.LCFI215-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI215-.Ltext0
	.long	.LCFI216-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI216-.Ltext0
	.long	.LFE73-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST59:
	.long	.LFB74-.Ltext0
	.long	.LCFI219-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI219-.Ltext0
	.long	.LCFI220-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI220-.Ltext0
	.long	.LFE74-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST60:
	.long	.LFB75-.Ltext0
	.long	.LCFI222-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI222-.Ltext0
	.long	.LCFI223-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI223-.Ltext0
	.long	.LFE75-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST61:
	.long	.LFB76-.Ltext0
	.long	.LCFI225-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI225-.Ltext0
	.long	.LCFI226-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI226-.Ltext0
	.long	.LFE76-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST62:
	.long	.LFB77-.Ltext0
	.long	.LCFI231-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI231-.Ltext0
	.long	.LCFI232-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI232-.Ltext0
	.long	.LFE77-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST63:
	.long	.LFB78-.Ltext0
	.long	.LCFI235-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI235-.Ltext0
	.long	.LCFI236-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI236-.Ltext0
	.long	.LFE78-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST64:
	.long	.LFB79-.Ltext0
	.long	.LCFI239-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI239-.Ltext0
	.long	.LCFI240-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI240-.Ltext0
	.long	.LFE79-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST65:
	.long	.LFB80-.Ltext0
	.long	.LCFI245-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI245-.Ltext0
	.long	.LCFI246-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI246-.Ltext0
	.long	.LFE80-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST66:
	.long	.LFB81-.Ltext0
	.long	.LCFI250-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI250-.Ltext0
	.long	.LCFI251-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI251-.Ltext0
	.long	.LFE81-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST67:
	.long	.LFB82-.Ltext0
	.long	.LCFI254-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI254-.Ltext0
	.long	.LCFI255-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI255-.Ltext0
	.long	.LFE82-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST68:
	.long	.LFB83-.Ltext0
	.long	.LCFI259-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI259-.Ltext0
	.long	.LCFI260-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI260-.Ltext0
	.long	.LFE83-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST69:
	.long	.LFB84-.Ltext0
	.long	.LCFI263-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI263-.Ltext0
	.long	.LCFI264-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI264-.Ltext0
	.long	.LFE84-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST70:
	.long	.LFB85-.Ltext0
	.long	.LCFI267-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI267-.Ltext0
	.long	.LCFI268-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI268-.Ltext0
	.long	.LFE85-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST71:
	.long	.LFB86-.Ltext0
	.long	.LCFI271-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI271-.Ltext0
	.long	.LCFI272-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI272-.Ltext0
	.long	.LFE86-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST72:
	.long	.LFB87-.Ltext0
	.long	.LCFI277-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI277-.Ltext0
	.long	.LCFI278-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI278-.Ltext0
	.long	.LFE87-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST73:
	.long	.LFB88-.Ltext0
	.long	.LCFI282-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI282-.Ltext0
	.long	.LCFI283-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI283-.Ltext0
	.long	.LFE88-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST74:
	.long	.LFB89-.Ltext0
	.long	.LCFI285-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI285-.Ltext0
	.long	.LCFI286-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI286-.Ltext0
	.long	.LFE89-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST75:
	.long	.LFB90-.Ltext0
	.long	.LCFI289-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI289-.Ltext0
	.long	.LCFI290-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI290-.Ltext0
	.long	.LFE90-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST76:
	.long	.LFB91-.Ltext0
	.long	.LCFI294-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI294-.Ltext0
	.long	.LCFI295-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI295-.Ltext0
	.long	.LFE91-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST77:
	.long	.LFB92-.Ltext0
	.long	.LCFI300-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI300-.Ltext0
	.long	.LCFI301-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI301-.Ltext0
	.long	.LFE92-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST78:
	.long	.LFB93-.Ltext0
	.long	.LCFI303-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI303-.Ltext0
	.long	.LCFI304-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI304-.Ltext0
	.long	.LFE93-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST79:
	.long	.LFB94-.Ltext0
	.long	.LCFI308-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI308-.Ltext0
	.long	.LCFI309-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI309-.Ltext0
	.long	.LFE94-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST80:
	.long	.LFB95-.Ltext0
	.long	.LCFI313-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI313-.Ltext0
	.long	.LCFI314-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI314-.Ltext0
	.long	.LFE95-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST81:
	.long	.LFB96-.Ltext0
	.long	.LCFI317-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI317-.Ltext0
	.long	.LCFI318-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI318-.Ltext0
	.long	.LFE96-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST82:
	.long	.LFB97-.Ltext0
	.long	.LCFI323-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI323-.Ltext0
	.long	.LCFI324-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI324-.Ltext0
	.long	.LFE97-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST83:
	.long	.LFB98-.Ltext0
	.long	.LCFI327-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI327-.Ltext0
	.long	.LCFI328-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI328-.Ltext0
	.long	.LFE98-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST84:
	.long	.LFB99-.Ltext0
	.long	.LCFI329-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI329-.Ltext0
	.long	.LCFI330-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI330-.Ltext0
	.long	.LFE99-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST85:
	.long	.LFB100-.Ltext0
	.long	.LCFI331-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI331-.Ltext0
	.long	.LCFI332-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI332-.Ltext0
	.long	.LFE100-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST86:
	.long	.LFB101-.Ltext0
	.long	.LCFI336-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI336-.Ltext0
	.long	.LCFI337-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI337-.Ltext0
	.long	.LFE101-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST87:
	.long	.LFB102-.Ltext0
	.long	.LCFI340-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI340-.Ltext0
	.long	.LCFI341-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI341-.Ltext0
	.long	.LFE102-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST88:
	.long	.LFB103-.Ltext0
	.long	.LCFI344-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI344-.Ltext0
	.long	.LCFI345-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI345-.Ltext0
	.long	.LFE103-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST89:
	.long	.LFB104-.Ltext0
	.long	.LCFI348-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI348-.Ltext0
	.long	.LCFI349-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI349-.Ltext0
	.long	.LFE104-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST90:
	.long	.LFB105-.Ltext0
	.long	.LCFI352-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI352-.Ltext0
	.long	.LCFI353-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI353-.Ltext0
	.long	.LFE105-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST91:
	.long	.LFB106-.Ltext0
	.long	.LCFI358-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI358-.Ltext0
	.long	.LCFI359-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI359-.Ltext0
	.long	.LFE106-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST92:
	.long	.LFB107-.Ltext0
	.long	.LCFI362-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI362-.Ltext0
	.long	.LCFI363-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI363-.Ltext0
	.long	.LFE107-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST93:
	.long	.LFB108-.Ltext0
	.long	.LCFI366-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI366-.Ltext0
	.long	.LCFI367-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI367-.Ltext0
	.long	.LFE108-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST94:
	.long	.LFB109-.Ltext0
	.long	.LCFI370-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI370-.Ltext0
	.long	.LCFI371-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI371-.Ltext0
	.long	.LFE109-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST95:
	.long	.LFB110-.Ltext0
	.long	.LCFI374-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI374-.Ltext0
	.long	.LCFI375-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI375-.Ltext0
	.long	.LFE110-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST96:
	.long	.LFB111-.Ltext0
	.long	.LCFI378-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI378-.Ltext0
	.long	.LCFI379-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI379-.Ltext0
	.long	.LFE111-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST97:
	.long	.LFB112-.Ltext0
	.long	.LCFI382-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI382-.Ltext0
	.long	.LCFI383-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI383-.Ltext0
	.long	.LFE112-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST98:
	.long	.LFB113-.Ltext0
	.long	.LCFI386-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI386-.Ltext0
	.long	.LCFI387-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI387-.Ltext0
	.long	.LFE113-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST99:
	.long	.LFB114-.Ltext0
	.long	.LCFI390-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI390-.Ltext0
	.long	.LCFI391-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI391-.Ltext0
	.long	.LFE114-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST100:
	.long	.LFB115-.Ltext0
	.long	.LCFI394-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI394-.Ltext0
	.long	.LCFI395-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI395-.Ltext0
	.long	.LFE115-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST101:
	.long	.LFB116-.Ltext0
	.long	.LCFI398-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI398-.Ltext0
	.long	.LCFI399-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI399-.Ltext0
	.long	.LFE116-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST102:
	.long	.LFB117-.Ltext0
	.long	.LCFI402-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI402-.Ltext0
	.long	.LCFI403-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI403-.Ltext0
	.long	.LFE117-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST103:
	.long	.LFB118-.Ltext0
	.long	.LCFI406-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI406-.Ltext0
	.long	.LCFI407-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI407-.Ltext0
	.long	.LFE118-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST104:
	.long	.LFB119-.Ltext0
	.long	.LCFI410-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI410-.Ltext0
	.long	.LCFI411-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI411-.Ltext0
	.long	.LFE119-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST105:
	.long	.LFB120-.Ltext0
	.long	.LCFI414-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI414-.Ltext0
	.long	.LCFI415-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI415-.Ltext0
	.long	.LFE120-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST106:
	.long	.LFB121-.Ltext0
	.long	.LCFI418-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI418-.Ltext0
	.long	.LCFI419-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI419-.Ltext0
	.long	.LFE121-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST107:
	.long	.LFB122-.Ltext0
	.long	.LCFI422-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI422-.Ltext0
	.long	.LCFI423-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI423-.Ltext0
	.long	.LFE122-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST108:
	.long	.LFB123-.Ltext0
	.long	.LCFI427-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI427-.Ltext0
	.long	.LCFI428-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI428-.Ltext0
	.long	.LFE123-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST109:
	.long	.LFB124-.Ltext0
	.long	.LCFI431-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI431-.Ltext0
	.long	.LCFI432-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI432-.Ltext0
	.long	.LFE124-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST110:
	.long	.LFB125-.Ltext0
	.long	.LCFI437-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI437-.Ltext0
	.long	.LCFI438-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI438-.Ltext0
	.long	.LFE125-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST111:
	.long	.LFB126-.Ltext0
	.long	.LCFI443-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI443-.Ltext0
	.long	.LCFI444-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI444-.Ltext0
	.long	.LFE126-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST112:
	.long	.LFB127-.Ltext0
	.long	.LCFI448-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI448-.Ltext0
	.long	.LCFI449-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI449-.Ltext0
	.long	.LFE127-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST113:
	.long	.LFB128-.Ltext0
	.long	.LCFI452-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI452-.Ltext0
	.long	.LCFI453-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI453-.Ltext0
	.long	.LFE128-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST114:
	.long	.LFB129-.Ltext0
	.long	.LCFI456-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI456-.Ltext0
	.long	.LCFI457-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI457-.Ltext0
	.long	.LFE129-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST115:
	.long	.LFB130-.Ltext0
	.long	.LCFI460-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI460-.Ltext0
	.long	.LCFI461-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI461-.Ltext0
	.long	.LFE130-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST116:
	.long	.LFB131-.Ltext0
	.long	.LCFI464-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI464-.Ltext0
	.long	.LCFI465-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI465-.Ltext0
	.long	.LFE131-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST117:
	.long	.LFB132-.Ltext0
	.long	.LCFI468-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI468-.Ltext0
	.long	.LCFI469-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI469-.Ltext0
	.long	.LFE132-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST118:
	.long	.LFB133-.Ltext0
	.long	.LCFI472-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI472-.Ltext0
	.long	.LCFI473-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI473-.Ltext0
	.long	.LFE133-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST119:
	.long	.LFB134-.Ltext0
	.long	.LCFI476-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI476-.Ltext0
	.long	.LCFI477-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI477-.Ltext0
	.long	.LFE134-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST120:
	.long	.LFB135-.Ltext0
	.long	.LCFI480-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI480-.Ltext0
	.long	.LCFI481-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI481-.Ltext0
	.long	.LFE135-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST121:
	.long	.LFB136-.Ltext0
	.long	.LCFI484-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI484-.Ltext0
	.long	.LCFI485-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI485-.Ltext0
	.long	.LFE136-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST122:
	.long	.LFB137-.Ltext0
	.long	.LCFI488-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI488-.Ltext0
	.long	.LCFI489-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI489-.Ltext0
	.long	.LFE137-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST123:
	.long	.LFB138-.Ltext0
	.long	.LCFI493-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI493-.Ltext0
	.long	.LCFI494-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI494-.Ltext0
	.long	.LFE138-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST124:
	.long	.LFB139-.Ltext0
	.long	.LCFI496-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI496-.Ltext0
	.long	.LCFI497-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI497-.Ltext0
	.long	.LFE139-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST125:
	.long	.LFB140-.Ltext0
	.long	.LCFI500-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI500-.Ltext0
	.long	.LCFI501-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI501-.Ltext0
	.long	.LFE140-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST126:
	.long	.LFB141-.Ltext0
	.long	.LCFI504-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI504-.Ltext0
	.long	.LCFI505-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI505-.Ltext0
	.long	.LFE141-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST127:
	.long	.LFB142-.Ltext0
	.long	.LCFI508-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI508-.Ltext0
	.long	.LCFI509-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI509-.Ltext0
	.long	.LFE142-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST128:
	.long	.LFB143-.Ltext0
	.long	.LCFI512-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI512-.Ltext0
	.long	.LCFI513-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI513-.Ltext0
	.long	.LFE143-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST129:
	.long	.LFB144-.Ltext0
	.long	.LCFI516-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI516-.Ltext0
	.long	.LCFI517-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI517-.Ltext0
	.long	.LFE144-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST130:
	.long	.LFB145-.Ltext0
	.long	.LCFI520-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI520-.Ltext0
	.long	.LCFI521-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI521-.Ltext0
	.long	.LFE145-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST131:
	.long	.LFB146-.Ltext0
	.long	.LCFI526-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI526-.Ltext0
	.long	.LCFI527-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI527-.Ltext0
	.long	.LFE146-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST132:
	.long	.LFB147-.Ltext0
	.long	.LCFI531-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI531-.Ltext0
	.long	.LCFI532-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI532-.Ltext0
	.long	.LFE147-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST133:
	.long	.LFB148-.Ltext0
	.long	.LCFI537-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI537-.Ltext0
	.long	.LCFI538-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI538-.Ltext0
	.long	.LFE148-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST134:
	.long	.LFB149-.Ltext0
	.long	.LCFI541-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI541-.Ltext0
	.long	.LCFI542-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI542-.Ltext0
	.long	.LFE149-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST135:
	.long	.LFB150-.Ltext0
	.long	.LCFI545-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI545-.Ltext0
	.long	.LCFI546-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI546-.Ltext0
	.long	.LFE150-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST136:
	.long	.LFB151-.Ltext0
	.long	.LCFI549-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI549-.Ltext0
	.long	.LCFI550-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI550-.Ltext0
	.long	.LFE151-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST137:
	.long	.LFB152-.Ltext0
	.long	.LCFI552-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI552-.Ltext0
	.long	.LCFI553-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI553-.Ltext0
	.long	.LFE152-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST138:
	.long	.LFB153-.Ltext0
	.long	.LCFI557-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI557-.Ltext0
	.long	.LCFI558-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI558-.Ltext0
	.long	.LFE153-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST139:
	.long	.LFB154-.Ltext0
	.long	.LCFI560-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI560-.Ltext0
	.long	.LCFI561-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI561-.Ltext0
	.long	.LFE154-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST140:
	.long	.LFB155-.Ltext0
	.long	.LCFI563-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI563-.Ltext0
	.long	.LCFI564-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI564-.Ltext0
	.long	.LFE155-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST141:
	.long	.LFB156-.Ltext0
	.long	.LCFI566-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI566-.Ltext0
	.long	.LCFI567-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI567-.Ltext0
	.long	.LFE156-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST142:
	.long	.LFB157-.Ltext0
	.long	.LCFI570-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI570-.Ltext0
	.long	.LCFI571-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI571-.Ltext0
	.long	.LFE157-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST143:
	.long	.LFB158-.Ltext0
	.long	.LCFI574-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI574-.Ltext0
	.long	.LCFI575-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI575-.Ltext0
	.long	.LFE158-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST144:
	.long	.LFB159-.Ltext0
	.long	.LCFI578-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI578-.Ltext0
	.long	.LCFI579-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI579-.Ltext0
	.long	.LFE159-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST145:
	.long	.LFB160-.Ltext0
	.long	.LCFI582-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI582-.Ltext0
	.long	.LCFI583-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI583-.Ltext0
	.long	.LFE160-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST146:
	.long	.LFB161-.Ltext0
	.long	.LCFI586-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI586-.Ltext0
	.long	.LCFI587-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI587-.Ltext0
	.long	.LFE161-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST147:
	.long	.LFB162-.Ltext0
	.long	.LCFI589-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI589-.Ltext0
	.long	.LCFI590-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI590-.Ltext0
	.long	.LFE162-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST148:
	.long	.LFB163-.Ltext0
	.long	.LCFI592-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI592-.Ltext0
	.long	.LCFI593-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI593-.Ltext0
	.long	.LFE163-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST149:
	.long	.LFB164-.Ltext0
	.long	.LCFI597-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI597-.Ltext0
	.long	.LCFI598-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI598-.Ltext0
	.long	.LFE164-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST150:
	.long	.LFB165-.Ltext0
	.long	.LCFI600-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI600-.Ltext0
	.long	.LCFI601-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI601-.Ltext0
	.long	.LFE165-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST151:
	.long	.LFB166-.Ltext0
	.long	.LCFI604-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI604-.Ltext0
	.long	.LCFI605-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI605-.Ltext0
	.long	.LFE166-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST152:
	.long	.LFB167-.Ltext0
	.long	.LCFI607-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI607-.Ltext0
	.long	.LCFI608-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI608-.Ltext0
	.long	.LFE167-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST153:
	.long	.LFB168-.Ltext0
	.long	.LCFI610-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI610-.Ltext0
	.long	.LCFI611-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI611-.Ltext0
	.long	.LFE168-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST154:
	.long	.LFB169-.Ltext0
	.long	.LCFI613-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI613-.Ltext0
	.long	.LCFI614-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI614-.Ltext0
	.long	.LFE169-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
	.section	.debug_info
	.long	0xe037
	.value	0x2
	.long	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.long	.Ldebug_line0
	.long	.Letext0
	.long	.Ltext0
	.string	"GNU C 4.1.2 (Ubuntu 4.1.2-0ubuntu4)"
	.byte	0x1
	.string	"../../../kgccfe/gnu/mips.c"
	.string	"/usa/handong/simplnano/cmplr-open64-merge/targia32_sl1/gccfe/gnu"
	.uleb128 0x2
	.string	"rtx"
	.byte	0x3
	.byte	0xc
	.long	0xa4
	.uleb128 0x3
	.byte	0x4
	.long	0xaa
	.uleb128 0x4
	.long	0x198
	.string	"rtx_def"
	.byte	0xc
	.byte	0x3
	.byte	0xb
	.uleb128 0x5
	.long	.LASF0
	.byte	0x4
	.byte	0x8a
	.long	0xf9c
	.byte	0x4
	.byte	0x10
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x5
	.long	.LASF1
	.byte	0x4
	.byte	0x8d
	.long	0xca4
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"jump"
	.byte	0x4
	.byte	0x94
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"call"
	.byte	0x4
	.byte	0x97
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"unchanging"
	.byte	0x4
	.byte	0x9f
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"volatil"
	.byte	0x4
	.byte	0xa8
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"in_struct"
	.byte	0x4
	.byte	0xba
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"used"
	.byte	0x4
	.byte	0xc1
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"integrated"
	.byte	0x4
	.byte	0xc6
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"frame_related"
	.byte	0x4
	.byte	0xcf
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"fld"
	.byte	0x4
	.byte	0xd4
	.long	0x1bb3
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"rtvec"
	.byte	0x3
	.byte	0xe
	.long	0x1a5
	.uleb128 0x3
	.byte	0x4
	.long	0x1ab
	.uleb128 0x4
	.long	0x1e0
	.string	"rtvec_def"
	.byte	0x8
	.byte	0x3
	.byte	0xd
	.uleb128 0x7
	.string	"num_elem"
	.byte	0x4
	.byte	0xf8
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"elem"
	.byte	0x4
	.byte	0xf9
	.long	0x1bc3
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"tree"
	.byte	0x3
	.byte	0x10
	.long	0x1ec
	.uleb128 0x3
	.byte	0x4
	.long	0x1f2
	.uleb128 0x8
	.long	0x2c7
	.string	"tree_node"
	.byte	0x94
	.byte	0x3
	.byte	0xf
	.uleb128 0x9
	.long	.LASF2
	.byte	0x7
	.value	0x855
	.long	0x43ac
	.uleb128 0xa
	.string	"int_cst"
	.byte	0x7
	.value	0x856
	.long	0x46c4
	.uleb128 0xa
	.string	"real_cst"
	.byte	0x7
	.value	0x857
	.long	0x470c
	.uleb128 0xa
	.string	"vector"
	.byte	0x7
	.value	0x858
	.long	0x4819
	.uleb128 0x9
	.long	.LASF3
	.byte	0x7
	.value	0x859
	.long	0x475a
	.uleb128 0xa
	.string	"complex"
	.byte	0x7
	.value	0x85a
	.long	0x47c4
	.uleb128 0xa
	.string	"identifier"
	.byte	0x7
	.value	0x85b
	.long	0x489f
	.uleb128 0x9
	.long	.LASF4
	.byte	0x7
	.value	0x85c
	.long	0x5918
	.uleb128 0x9
	.long	.LASF5
	.byte	0x7
	.value	0x85d
	.long	0x4af6
	.uleb128 0xa
	.string	"list"
	.byte	0x7
	.value	0x85e
	.long	0x48d6
	.uleb128 0xa
	.string	"vec"
	.byte	0x7
	.value	0x85f
	.long	0x491b
	.uleb128 0xa
	.string	"exp"
	.byte	0x7
	.value	0x860
	.long	0x4969
	.uleb128 0xa
	.string	"block"
	.byte	0x7
	.value	0x861
	.long	0x49b0
	.uleb128 0xa
	.string	"omp"
	.byte	0x7
	.value	0x863
	.long	0x62ac
	.byte	0x0
	.uleb128 0xb
	.long	0x307
	.string	"cmp_type"
	.byte	0x4
	.byte	0xc
	.byte	0x26
	.uleb128 0xc
	.string	"CMP_SI"
	.sleb128 0
	.uleb128 0xc
	.string	"CMP_DI"
	.sleb128 1
	.uleb128 0xc
	.string	"CMP_SF"
	.sleb128 2
	.uleb128 0xc
	.string	"CMP_DF"
	.sleb128 3
	.uleb128 0xc
	.string	"CMP_MAX"
	.sleb128 4
	.byte	0x0
	.uleb128 0xb
	.long	0x34f
	.string	"delay_type"
	.byte	0x4
	.byte	0xc
	.byte	0x2f
	.uleb128 0xc
	.string	"DELAY_NONE"
	.sleb128 0
	.uleb128 0xc
	.string	"DELAY_LOAD"
	.sleb128 1
	.uleb128 0xc
	.string	"DELAY_HILO"
	.sleb128 2
	.uleb128 0xc
	.string	"DELAY_FCMP"
	.sleb128 3
	.byte	0x0
	.uleb128 0xb
	.long	0x4cf
	.string	"processor_type"
	.byte	0x4
	.byte	0xc
	.byte	0x3b
	.uleb128 0xc
	.string	"PROCESSOR_DEFAULT"
	.sleb128 0
	.uleb128 0xc
	.string	"PROCESSOR_R3000"
	.sleb128 1
	.uleb128 0xc
	.string	"PROCESSOR_R3900"
	.sleb128 2
	.uleb128 0xc
	.string	"PROCESSOR_R6000"
	.sleb128 3
	.uleb128 0xc
	.string	"PROCESSOR_R4000"
	.sleb128 4
	.uleb128 0xc
	.string	"PROCESSOR_R4100"
	.sleb128 5
	.uleb128 0xc
	.string	"PROCESSOR_R4111"
	.sleb128 6
	.uleb128 0xc
	.string	"PROCESSOR_R4120"
	.sleb128 7
	.uleb128 0xc
	.string	"PROCESSOR_R4300"
	.sleb128 8
	.uleb128 0xc
	.string	"PROCESSOR_R4600"
	.sleb128 9
	.uleb128 0xc
	.string	"PROCESSOR_R4650"
	.sleb128 10
	.uleb128 0xc
	.string	"PROCESSOR_R5000"
	.sleb128 11
	.uleb128 0xc
	.string	"PROCESSOR_R5400"
	.sleb128 12
	.uleb128 0xc
	.string	"PROCESSOR_R5500"
	.sleb128 13
	.uleb128 0xc
	.string	"PROCESSOR_R8000"
	.sleb128 14
	.uleb128 0xc
	.string	"PROCESSOR_R4KC"
	.sleb128 15
	.uleb128 0xc
	.string	"PROCESSOR_R5KC"
	.sleb128 16
	.uleb128 0xc
	.string	"PROCESSOR_R20KC"
	.sleb128 17
	.uleb128 0xc
	.string	"PROCESSOR_SR71000"
	.sleb128 18
	.uleb128 0xc
	.string	"PROCESSOR_SB1"
	.sleb128 19
	.byte	0x0
	.uleb128 0xb
	.long	0x512
	.string	"mips_abicalls_type"
	.byte	0x4
	.byte	0xc
	.byte	0x6c
	.uleb128 0xc
	.string	"MIPS_ABICALLS_NO"
	.sleb128 0
	.uleb128 0xc
	.string	"MIPS_ABICALLS_YES"
	.sleb128 1
	.byte	0x0
	.uleb128 0xb
	.long	0x567
	.string	"block_move_type"
	.byte	0x4
	.byte	0xc
	.byte	0x77
	.uleb128 0xc
	.string	"BLOCK_MOVE_NORMAL"
	.sleb128 0
	.uleb128 0xc
	.string	"BLOCK_MOVE_NOT_LAST"
	.sleb128 1
	.uleb128 0xc
	.string	"BLOCK_MOVE_LAST"
	.sleb128 2
	.byte	0x0
	.uleb128 0x4
	.long	0x5a8
	.string	"mips_cpu_info"
	.byte	0xc
	.byte	0xc
	.byte	0x7f
	.uleb128 0xd
	.long	.LASF6
	.byte	0xc
	.byte	0x83
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"cpu"
	.byte	0xc
	.byte	0x88
	.long	0x34f
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"isa"
	.byte	0xc
	.byte	0x8b
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x5ae
	.uleb128 0xe
	.long	0x5b3
	.uleb128 0xf
	.string	"char"
	.byte	0x1
	.byte	0x8
	.uleb128 0xf
	.string	"int"
	.byte	0x4
	.byte	0x5
	.uleb128 0x10
	.long	0x738
	.string	"reg_class"
	.byte	0x4
	.byte	0xc
	.value	0x7ec
	.uleb128 0xc
	.string	"NO_REGS"
	.sleb128 0
	.uleb128 0xc
	.string	"M16_NA_REGS"
	.sleb128 1
	.uleb128 0xc
	.string	"M16_REGS"
	.sleb128 2
	.uleb128 0xc
	.string	"T_REG"
	.sleb128 3
	.uleb128 0xc
	.string	"M16_T_REGS"
	.sleb128 4
	.uleb128 0xc
	.string	"GR_REGS"
	.sleb128 5
	.uleb128 0xc
	.string	"FP_REGS"
	.sleb128 6
	.uleb128 0xc
	.string	"HI_REG"
	.sleb128 7
	.uleb128 0xc
	.string	"LO_REG"
	.sleb128 8
	.uleb128 0xc
	.string	"HILO_REG"
	.sleb128 9
	.uleb128 0xc
	.string	"MD_REGS"
	.sleb128 10
	.uleb128 0xc
	.string	"COP0_REGS"
	.sleb128 11
	.uleb128 0xc
	.string	"COP2_REGS"
	.sleb128 12
	.uleb128 0xc
	.string	"COP3_REGS"
	.sleb128 13
	.uleb128 0xc
	.string	"HI_AND_GR_REGS"
	.sleb128 14
	.uleb128 0xc
	.string	"LO_AND_GR_REGS"
	.sleb128 15
	.uleb128 0xc
	.string	"HILO_AND_GR_REGS"
	.sleb128 16
	.uleb128 0xc
	.string	"HI_AND_FP_REGS"
	.sleb128 17
	.uleb128 0xc
	.string	"COP0_AND_GR_REGS"
	.sleb128 18
	.uleb128 0xc
	.string	"COP2_AND_GR_REGS"
	.sleb128 19
	.uleb128 0xc
	.string	"COP3_AND_GR_REGS"
	.sleb128 20
	.uleb128 0xc
	.string	"ALL_COP_REGS"
	.sleb128 21
	.uleb128 0xc
	.string	"ALL_COP_AND_GR_REGS"
	.sleb128 22
	.uleb128 0xc
	.string	"ST_REGS"
	.sleb128 23
	.uleb128 0xc
	.string	"ALL_REGS"
	.sleb128 24
	.uleb128 0xc
	.string	"LIM_REG_CLASSES"
	.sleb128 25
	.byte	0x0
	.uleb128 0x11
	.long	0x7fe
	.string	"mips_args"
	.byte	0x40
	.byte	0xc
	.value	0xaaa
	.uleb128 0x12
	.string	"gp_reg_found"
	.byte	0xc
	.value	0xaad
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"arg_number"
	.byte	0xc
	.value	0xab0
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x12
	.string	"num_gprs"
	.byte	0xc
	.value	0xab5
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x12
	.string	"num_fprs"
	.byte	0xc
	.value	0xab8
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x13
	.long	.LASF7
	.byte	0xc
	.value	0xabb
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x13
	.long	.LASF8
	.byte	0xc
	.value	0xac8
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x12
	.string	"prototype"
	.byte	0xc
	.value	0xacb
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x12
	.string	"num_adjusts"
	.byte	0xc
	.value	0xad3
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x12
	.string	"adjust"
	.byte	0xc
	.value	0xad4
	.long	0x805
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.byte	0x0
	.uleb128 0x14
	.long	.LASF9
	.byte	0x4
	.byte	0x7
	.uleb128 0x15
	.long	0x815
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0x7
	.byte	0x0
	.uleb128 0x14
	.long	.LASF9
	.byte	0x4
	.byte	0x7
	.uleb128 0x17
	.string	"CUMULATIVE_ARGS"
	.byte	0xc
	.value	0xad5
	.long	0x738
	.uleb128 0x2
	.string	"__gnuc_va_list"
	.byte	0x14
	.byte	0x2b
	.long	0x84a
	.uleb128 0x3
	.byte	0x4
	.long	0x5b3
	.uleb128 0x2
	.string	"va_list"
	.byte	0x14
	.byte	0x69
	.long	0x834
	.uleb128 0x2
	.string	"size_t"
	.byte	0x10
	.byte	0xd6
	.long	0x7fe
	.uleb128 0xf
	.string	"unsigned char"
	.byte	0x1
	.byte	0x8
	.uleb128 0xf
	.string	"short unsigned int"
	.byte	0x2
	.byte	0x7
	.uleb128 0xf
	.string	"long unsigned int"
	.byte	0x4
	.byte	0x7
	.uleb128 0xf
	.string	"signed char"
	.byte	0x1
	.byte	0x6
	.uleb128 0xf
	.string	"short int"
	.byte	0x2
	.byte	0x5
	.uleb128 0xf
	.string	"long long int"
	.byte	0x8
	.byte	0x5
	.uleb128 0xf
	.string	"long long unsigned int"
	.byte	0x8
	.byte	0x7
	.uleb128 0x2
	.string	"__quad_t"
	.byte	0x13
	.byte	0x3b
	.long	0x8c5
	.uleb128 0x2
	.string	"__off_t"
	.byte	0x13
	.byte	0x90
	.long	0x90f
	.uleb128 0xf
	.string	"long int"
	.byte	0x4
	.byte	0x5
	.uleb128 0x2
	.string	"__off64_t"
	.byte	0x13
	.byte	0x91
	.long	0x8f0
	.uleb128 0x18
	.byte	0x4
	.uleb128 0x3
	.byte	0x4
	.long	0x5b3
	.uleb128 0x2
	.string	"FILE"
	.byte	0x11
	.byte	0x2e
	.long	0x940
	.uleb128 0x19
	.long	0xbbb
	.long	.LASF10
	.byte	0x94
	.byte	0x11
	.byte	0x2e
	.uleb128 0x12
	.string	"_flags"
	.byte	0x12
	.value	0x10c
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"_IO_read_ptr"
	.byte	0x12
	.value	0x111
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x12
	.string	"_IO_read_end"
	.byte	0x12
	.value	0x112
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x12
	.string	"_IO_read_base"
	.byte	0x12
	.value	0x113
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x12
	.string	"_IO_write_base"
	.byte	0x12
	.value	0x114
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"_IO_write_ptr"
	.byte	0x12
	.value	0x115
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x12
	.string	"_IO_write_end"
	.byte	0x12
	.value	0x116
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x12
	.string	"_IO_buf_base"
	.byte	0x12
	.value	0x117
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x12
	.string	"_IO_buf_end"
	.byte	0x12
	.value	0x118
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x12
	.string	"_IO_save_base"
	.byte	0x12
	.value	0x11a
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x12
	.string	"_IO_backup_base"
	.byte	0x12
	.value	0x11b
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x12
	.string	"_IO_save_end"
	.byte	0x12
	.value	0x11c
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x12
	.string	"_markers"
	.byte	0x12
	.value	0x11e
	.long	0xc2f
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x12
	.string	"_chain"
	.byte	0x12
	.value	0x120
	.long	0xc35
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x12
	.string	"_fileno"
	.byte	0x12
	.value	0x122
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x12
	.string	"_flags2"
	.byte	0x12
	.value	0x126
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x12
	.string	"_old_offset"
	.byte	0x12
	.value	0x128
	.long	0x900
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x12
	.string	"_cur_column"
	.byte	0x12
	.value	0x12c
	.long	0x87e
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x12
	.string	"_vtable_offset"
	.byte	0x12
	.value	0x12d
	.long	0x8a9
	.byte	0x2
	.byte	0x23
	.uleb128 0x46
	.uleb128 0x12
	.string	"_shortbuf"
	.byte	0x12
	.value	0x12e
	.long	0xc3b
	.byte	0x2
	.byte	0x23
	.uleb128 0x47
	.uleb128 0x12
	.string	"_lock"
	.byte	0x12
	.value	0x132
	.long	0xc4b
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x12
	.string	"_offset"
	.byte	0x12
	.value	0x13b
	.long	0x91b
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x12
	.string	"__pad1"
	.byte	0x12
	.value	0x144
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0x12
	.string	"__pad2"
	.byte	0x12
	.value	0x145
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x12
	.string	"__pad3"
	.byte	0x12
	.value	0x146
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0x12
	.string	"__pad4"
	.byte	0x12
	.value	0x147
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x12
	.string	"__pad5"
	.byte	0x12
	.value	0x148
	.long	0x85f
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0x12
	.string	"_mode"
	.byte	0x12
	.value	0x14a
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0x12
	.string	"_unused2"
	.byte	0x12
	.value	0x14c
	.long	0xc51
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xbc1
	.uleb128 0xe
	.long	0x86d
	.uleb128 0x3
	.byte	0x4
	.long	0x86d
	.uleb128 0x3
	.byte	0x4
	.long	0xbd2
	.uleb128 0x1a
	.long	0xbde
	.byte	0x1
	.uleb128 0x1b
	.long	0x92c
	.byte	0x0
	.uleb128 0x1c
	.string	"_IO_lock_t"
	.byte	0x12
	.byte	0xb0
	.uleb128 0x4
	.long	0xc2f
	.string	"_IO_marker"
	.byte	0xc
	.byte	0x12
	.byte	0xb6
	.uleb128 0x7
	.string	"_next"
	.byte	0x12
	.byte	0xb7
	.long	0xc2f
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"_sbuf"
	.byte	0x12
	.byte	0xb8
	.long	0xc35
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"_pos"
	.byte	0x12
	.byte	0xbc
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xbec
	.uleb128 0x3
	.byte	0x4
	.long	0x940
	.uleb128 0x15
	.long	0xc4b
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xbde
	.uleb128 0x15
	.long	0xc61
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x27
	.byte	0x0
	.uleb128 0x15
	.long	0xc71
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x17
	.byte	0x0
	.uleb128 0x15
	.long	0xc81
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x1f
	.byte	0x0
	.uleb128 0x15
	.long	0xc91
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x13
	.byte	0x0
	.uleb128 0xe
	.long	0x5bb
	.uleb128 0x3
	.byte	0x4
	.long	0x5bb
	.uleb128 0x1d
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0xc9c
	.uleb128 0xb
	.long	0xeed
	.string	"machine_mode"
	.byte	0x4
	.byte	0x5
	.byte	0x1d
	.uleb128 0xc
	.string	"VOIDmode"
	.sleb128 0
	.uleb128 0xc
	.string	"BImode"
	.sleb128 1
	.uleb128 0xc
	.string	"QImode"
	.sleb128 2
	.uleb128 0xc
	.string	"HImode"
	.sleb128 3
	.uleb128 0xc
	.string	"SImode"
	.sleb128 4
	.uleb128 0xc
	.string	"DImode"
	.sleb128 5
	.uleb128 0xc
	.string	"TImode"
	.sleb128 6
	.uleb128 0xc
	.string	"OImode"
	.sleb128 7
	.uleb128 0xc
	.string	"PQImode"
	.sleb128 8
	.uleb128 0xc
	.string	"PHImode"
	.sleb128 9
	.uleb128 0xc
	.string	"PSImode"
	.sleb128 10
	.uleb128 0xc
	.string	"PDImode"
	.sleb128 11
	.uleb128 0xc
	.string	"QFmode"
	.sleb128 12
	.uleb128 0xc
	.string	"HFmode"
	.sleb128 13
	.uleb128 0xc
	.string	"TQFmode"
	.sleb128 14
	.uleb128 0xc
	.string	"SFmode"
	.sleb128 15
	.uleb128 0xc
	.string	"DFmode"
	.sleb128 16
	.uleb128 0xc
	.string	"XFmode"
	.sleb128 17
	.uleb128 0xc
	.string	"TFmode"
	.sleb128 18
	.uleb128 0xc
	.string	"QCmode"
	.sleb128 19
	.uleb128 0xc
	.string	"HCmode"
	.sleb128 20
	.uleb128 0xc
	.string	"SCmode"
	.sleb128 21
	.uleb128 0xc
	.string	"DCmode"
	.sleb128 22
	.uleb128 0xc
	.string	"XCmode"
	.sleb128 23
	.uleb128 0xc
	.string	"TCmode"
	.sleb128 24
	.uleb128 0xc
	.string	"CQImode"
	.sleb128 25
	.uleb128 0xc
	.string	"CHImode"
	.sleb128 26
	.uleb128 0xc
	.string	"CSImode"
	.sleb128 27
	.uleb128 0xc
	.string	"CDImode"
	.sleb128 28
	.uleb128 0xc
	.string	"CTImode"
	.sleb128 29
	.uleb128 0xc
	.string	"COImode"
	.sleb128 30
	.uleb128 0xc
	.string	"V1DImode"
	.sleb128 31
	.uleb128 0xc
	.string	"V2QImode"
	.sleb128 32
	.uleb128 0xc
	.string	"V2HImode"
	.sleb128 33
	.uleb128 0xc
	.string	"V2SImode"
	.sleb128 34
	.uleb128 0xc
	.string	"V2DImode"
	.sleb128 35
	.uleb128 0xc
	.string	"V4QImode"
	.sleb128 36
	.uleb128 0xc
	.string	"V4HImode"
	.sleb128 37
	.uleb128 0xc
	.string	"V4SImode"
	.sleb128 38
	.uleb128 0xc
	.string	"V4DImode"
	.sleb128 39
	.uleb128 0xc
	.string	"V8QImode"
	.sleb128 40
	.uleb128 0xc
	.string	"V8HImode"
	.sleb128 41
	.uleb128 0xc
	.string	"V8SImode"
	.sleb128 42
	.uleb128 0xc
	.string	"V8DImode"
	.sleb128 43
	.uleb128 0xc
	.string	"V16QImode"
	.sleb128 44
	.uleb128 0xc
	.string	"V2SFmode"
	.sleb128 45
	.uleb128 0xc
	.string	"V2DFmode"
	.sleb128 46
	.uleb128 0xc
	.string	"V4SFmode"
	.sleb128 47
	.uleb128 0xc
	.string	"V4DFmode"
	.sleb128 48
	.uleb128 0xc
	.string	"V8SFmode"
	.sleb128 49
	.uleb128 0xc
	.string	"V8DFmode"
	.sleb128 50
	.uleb128 0xc
	.string	"V16SFmode"
	.sleb128 51
	.uleb128 0xc
	.string	"BLKmode"
	.sleb128 52
	.uleb128 0xc
	.string	"CCmode"
	.sleb128 53
	.uleb128 0xc
	.string	"MAX_MACHINE_MODE"
	.sleb128 54
	.byte	0x0
	.uleb128 0x1e
	.long	0xf9c
	.long	.LASF11
	.byte	0x4
	.byte	0x5
	.byte	0x2c
	.uleb128 0xc
	.string	"MODE_RANDOM"
	.sleb128 0
	.uleb128 0xc
	.string	"MODE_INT"
	.sleb128 1
	.uleb128 0xc
	.string	"MODE_FLOAT"
	.sleb128 2
	.uleb128 0xc
	.string	"MODE_PARTIAL_INT"
	.sleb128 3
	.uleb128 0xc
	.string	"MODE_CC"
	.sleb128 4
	.uleb128 0xc
	.string	"MODE_COMPLEX_INT"
	.sleb128 5
	.uleb128 0xc
	.string	"MODE_COMPLEX_FLOAT"
	.sleb128 6
	.uleb128 0xc
	.string	"MODE_VECTOR_INT"
	.sleb128 7
	.uleb128 0xc
	.string	"MODE_VECTOR_FLOAT"
	.sleb128 8
	.uleb128 0xc
	.string	"MAX_MODE_CLASS"
	.sleb128 9
	.byte	0x0
	.uleb128 0xb
	.long	0x176b
	.string	"rtx_code"
	.byte	0x4
	.byte	0x4
	.byte	0x2f
	.uleb128 0xc
	.string	"UNKNOWN"
	.sleb128 0
	.uleb128 0xc
	.string	"NIL"
	.sleb128 1
	.uleb128 0xc
	.string	"INCLUDE"
	.sleb128 2
	.uleb128 0xc
	.string	"EXPR_LIST"
	.sleb128 3
	.uleb128 0xc
	.string	"INSN_LIST"
	.sleb128 4
	.uleb128 0xc
	.string	"MATCH_OPERAND"
	.sleb128 5
	.uleb128 0xc
	.string	"MATCH_SCRATCH"
	.sleb128 6
	.uleb128 0xc
	.string	"MATCH_DUP"
	.sleb128 7
	.uleb128 0xc
	.string	"MATCH_OPERATOR"
	.sleb128 8
	.uleb128 0xc
	.string	"MATCH_PARALLEL"
	.sleb128 9
	.uleb128 0xc
	.string	"MATCH_OP_DUP"
	.sleb128 10
	.uleb128 0xc
	.string	"MATCH_PAR_DUP"
	.sleb128 11
	.uleb128 0xc
	.string	"MATCH_INSN"
	.sleb128 12
	.uleb128 0xc
	.string	"DEFINE_INSN"
	.sleb128 13
	.uleb128 0xc
	.string	"DEFINE_PEEPHOLE"
	.sleb128 14
	.uleb128 0xc
	.string	"DEFINE_SPLIT"
	.sleb128 15
	.uleb128 0xc
	.string	"DEFINE_INSN_AND_SPLIT"
	.sleb128 16
	.uleb128 0xc
	.string	"DEFINE_PEEPHOLE2"
	.sleb128 17
	.uleb128 0xc
	.string	"DEFINE_COMBINE"
	.sleb128 18
	.uleb128 0xc
	.string	"DEFINE_EXPAND"
	.sleb128 19
	.uleb128 0xc
	.string	"DEFINE_DELAY"
	.sleb128 20
	.uleb128 0xc
	.string	"DEFINE_FUNCTION_UNIT"
	.sleb128 21
	.uleb128 0xc
	.string	"DEFINE_ASM_ATTRIBUTES"
	.sleb128 22
	.uleb128 0xc
	.string	"DEFINE_COND_EXEC"
	.sleb128 23
	.uleb128 0xc
	.string	"SEQUENCE"
	.sleb128 24
	.uleb128 0xc
	.string	"ADDRESS"
	.sleb128 25
	.uleb128 0xc
	.string	"DEFINE_CPU_UNIT"
	.sleb128 26
	.uleb128 0xc
	.string	"DEFINE_QUERY_CPU_UNIT"
	.sleb128 27
	.uleb128 0xc
	.string	"EXCLUSION_SET"
	.sleb128 28
	.uleb128 0xc
	.string	"PRESENCE_SET"
	.sleb128 29
	.uleb128 0xc
	.string	"ABSENCE_SET"
	.sleb128 30
	.uleb128 0xc
	.string	"DEFINE_BYPASS"
	.sleb128 31
	.uleb128 0xc
	.string	"DEFINE_AUTOMATON"
	.sleb128 32
	.uleb128 0xc
	.string	"AUTOMATA_OPTION"
	.sleb128 33
	.uleb128 0xc
	.string	"DEFINE_RESERVATION"
	.sleb128 34
	.uleb128 0xc
	.string	"DEFINE_INSN_RESERVATION"
	.sleb128 35
	.uleb128 0xc
	.string	"DEFINE_ATTR"
	.sleb128 36
	.uleb128 0xc
	.string	"ATTR"
	.sleb128 37
	.uleb128 0xc
	.string	"SET_ATTR"
	.sleb128 38
	.uleb128 0xc
	.string	"SET_ATTR_ALTERNATIVE"
	.sleb128 39
	.uleb128 0xc
	.string	"EQ_ATTR"
	.sleb128 40
	.uleb128 0xc
	.string	"ATTR_FLAG"
	.sleb128 41
	.uleb128 0xc
	.string	"INSN"
	.sleb128 42
	.uleb128 0xc
	.string	"JUMP_INSN"
	.sleb128 43
	.uleb128 0xc
	.string	"CALL_INSN"
	.sleb128 44
	.uleb128 0xc
	.string	"BARRIER"
	.sleb128 45
	.uleb128 0xc
	.string	"CODE_LABEL"
	.sleb128 46
	.uleb128 0xc
	.string	"NOTE"
	.sleb128 47
	.uleb128 0xc
	.string	"COND_EXEC"
	.sleb128 48
	.uleb128 0xc
	.string	"PARALLEL"
	.sleb128 49
	.uleb128 0xc
	.string	"ASM_INPUT"
	.sleb128 50
	.uleb128 0xc
	.string	"ASM_OPERANDS"
	.sleb128 51
	.uleb128 0xc
	.string	"UNSPEC"
	.sleb128 52
	.uleb128 0xc
	.string	"UNSPEC_VOLATILE"
	.sleb128 53
	.uleb128 0xc
	.string	"ADDR_VEC"
	.sleb128 54
	.uleb128 0xc
	.string	"ADDR_DIFF_VEC"
	.sleb128 55
	.uleb128 0xc
	.string	"PREFETCH"
	.sleb128 56
	.uleb128 0xc
	.string	"SET"
	.sleb128 57
	.uleb128 0xc
	.string	"USE"
	.sleb128 58
	.uleb128 0xc
	.string	"CLOBBER"
	.sleb128 59
	.uleb128 0xc
	.string	"CALL"
	.sleb128 60
	.uleb128 0xc
	.string	"RETURN"
	.sleb128 61
	.uleb128 0xc
	.string	"TRAP_IF"
	.sleb128 62
	.uleb128 0xc
	.string	"RESX"
	.sleb128 63
	.uleb128 0xc
	.string	"CONST_INT"
	.sleb128 64
	.uleb128 0xc
	.string	"CONST_DOUBLE"
	.sleb128 65
	.uleb128 0xc
	.string	"CONST_VECTOR"
	.sleb128 66
	.uleb128 0xc
	.string	"CONST_STRING"
	.sleb128 67
	.uleb128 0xc
	.string	"CONST"
	.sleb128 68
	.uleb128 0xc
	.string	"PC"
	.sleb128 69
	.uleb128 0xc
	.string	"VALUE"
	.sleb128 70
	.uleb128 0xc
	.string	"REG"
	.sleb128 71
	.uleb128 0xc
	.string	"SCRATCH"
	.sleb128 72
	.uleb128 0xc
	.string	"SUBREG"
	.sleb128 73
	.uleb128 0xc
	.string	"STRICT_LOW_PART"
	.sleb128 74
	.uleb128 0xc
	.string	"CONCAT"
	.sleb128 75
	.uleb128 0xc
	.string	"MEM"
	.sleb128 76
	.uleb128 0xc
	.string	"LABEL_REF"
	.sleb128 77
	.uleb128 0xc
	.string	"SYMBOL_REF"
	.sleb128 78
	.uleb128 0xc
	.string	"CC0"
	.sleb128 79
	.uleb128 0xc
	.string	"ADDRESSOF"
	.sleb128 80
	.uleb128 0xc
	.string	"QUEUED"
	.sleb128 81
	.uleb128 0xc
	.string	"IF_THEN_ELSE"
	.sleb128 82
	.uleb128 0xc
	.string	"COND"
	.sleb128 83
	.uleb128 0xc
	.string	"COMPARE"
	.sleb128 84
	.uleb128 0xc
	.string	"PLUS"
	.sleb128 85
	.uleb128 0xc
	.string	"MINUS"
	.sleb128 86
	.uleb128 0xc
	.string	"NEG"
	.sleb128 87
	.uleb128 0xc
	.string	"MULT"
	.sleb128 88
	.uleb128 0xc
	.string	"DIV"
	.sleb128 89
	.uleb128 0xc
	.string	"MOD"
	.sleb128 90
	.uleb128 0xc
	.string	"UDIV"
	.sleb128 91
	.uleb128 0xc
	.string	"UMOD"
	.sleb128 92
	.uleb128 0xc
	.string	"AND"
	.sleb128 93
	.uleb128 0xc
	.string	"IOR"
	.sleb128 94
	.uleb128 0xc
	.string	"XOR"
	.sleb128 95
	.uleb128 0xc
	.string	"NOT"
	.sleb128 96
	.uleb128 0xc
	.string	"ASHIFT"
	.sleb128 97
	.uleb128 0xc
	.string	"ROTATE"
	.sleb128 98
	.uleb128 0xc
	.string	"ASHIFTRT"
	.sleb128 99
	.uleb128 0xc
	.string	"LSHIFTRT"
	.sleb128 100
	.uleb128 0xc
	.string	"ROTATERT"
	.sleb128 101
	.uleb128 0xc
	.string	"SMIN"
	.sleb128 102
	.uleb128 0xc
	.string	"SMAX"
	.sleb128 103
	.uleb128 0xc
	.string	"UMIN"
	.sleb128 104
	.uleb128 0xc
	.string	"UMAX"
	.sleb128 105
	.uleb128 0xc
	.string	"PRE_DEC"
	.sleb128 106
	.uleb128 0xc
	.string	"PRE_INC"
	.sleb128 107
	.uleb128 0xc
	.string	"POST_DEC"
	.sleb128 108
	.uleb128 0xc
	.string	"POST_INC"
	.sleb128 109
	.uleb128 0xc
	.string	"PRE_MODIFY"
	.sleb128 110
	.uleb128 0xc
	.string	"POST_MODIFY"
	.sleb128 111
	.uleb128 0xc
	.string	"NE"
	.sleb128 112
	.uleb128 0xc
	.string	"EQ"
	.sleb128 113
	.uleb128 0xc
	.string	"GE"
	.sleb128 114
	.uleb128 0xc
	.string	"GT"
	.sleb128 115
	.uleb128 0xc
	.string	"LE"
	.sleb128 116
	.uleb128 0xc
	.string	"LT"
	.sleb128 117
	.uleb128 0xc
	.string	"GEU"
	.sleb128 118
	.uleb128 0xc
	.string	"GTU"
	.sleb128 119
	.uleb128 0xc
	.string	"LEU"
	.sleb128 120
	.uleb128 0xc
	.string	"LTU"
	.sleb128 121
	.uleb128 0xc
	.string	"UNORDERED"
	.sleb128 122
	.uleb128 0xc
	.string	"ORDERED"
	.sleb128 123
	.uleb128 0xc
	.string	"UNEQ"
	.sleb128 124
	.uleb128 0xc
	.string	"UNGE"
	.sleb128 125
	.uleb128 0xc
	.string	"UNGT"
	.sleb128 126
	.uleb128 0xc
	.string	"UNLE"
	.sleb128 127
	.uleb128 0xc
	.string	"UNLT"
	.sleb128 128
	.uleb128 0xc
	.string	"LTGT"
	.sleb128 129
	.uleb128 0xc
	.string	"SIGN_EXTEND"
	.sleb128 130
	.uleb128 0xc
	.string	"ZERO_EXTEND"
	.sleb128 131
	.uleb128 0xc
	.string	"TRUNCATE"
	.sleb128 132
	.uleb128 0xc
	.string	"FLOAT_EXTEND"
	.sleb128 133
	.uleb128 0xc
	.string	"FLOAT_TRUNCATE"
	.sleb128 134
	.uleb128 0xc
	.string	"FLOAT"
	.sleb128 135
	.uleb128 0xc
	.string	"FIX"
	.sleb128 136
	.uleb128 0xc
	.string	"UNSIGNED_FLOAT"
	.sleb128 137
	.uleb128 0xc
	.string	"UNSIGNED_FIX"
	.sleb128 138
	.uleb128 0xc
	.string	"ABS"
	.sleb128 139
	.uleb128 0xc
	.string	"SQRT"
	.sleb128 140
	.uleb128 0xc
	.string	"FFS"
	.sleb128 141
	.uleb128 0xc
	.string	"SIGN_EXTRACT"
	.sleb128 142
	.uleb128 0xc
	.string	"ZERO_EXTRACT"
	.sleb128 143
	.uleb128 0xc
	.string	"HIGH"
	.sleb128 144
	.uleb128 0xc
	.string	"LO_SUM"
	.sleb128 145
	.uleb128 0xc
	.string	"RANGE_INFO"
	.sleb128 146
	.uleb128 0xc
	.string	"RANGE_REG"
	.sleb128 147
	.uleb128 0xc
	.string	"RANGE_VAR"
	.sleb128 148
	.uleb128 0xc
	.string	"RANGE_LIVE"
	.sleb128 149
	.uleb128 0xc
	.string	"CONSTANT_P_RTX"
	.sleb128 150
	.uleb128 0xc
	.string	"CALL_PLACEHOLDER"
	.sleb128 151
	.uleb128 0xc
	.string	"VEC_MERGE"
	.sleb128 152
	.uleb128 0xc
	.string	"VEC_SELECT"
	.sleb128 153
	.uleb128 0xc
	.string	"VEC_CONCAT"
	.sleb128 154
	.uleb128 0xc
	.string	"VEC_DUPLICATE"
	.sleb128 155
	.uleb128 0xc
	.string	"SS_PLUS"
	.sleb128 156
	.uleb128 0xc
	.string	"US_PLUS"
	.sleb128 157
	.uleb128 0xc
	.string	"SS_MINUS"
	.sleb128 158
	.uleb128 0xc
	.string	"US_MINUS"
	.sleb128 159
	.uleb128 0xc
	.string	"SS_TRUNCATE"
	.sleb128 160
	.uleb128 0xc
	.string	"US_TRUNCATE"
	.sleb128 161
	.uleb128 0xc
	.string	"PHI"
	.sleb128 162
	.uleb128 0xc
	.string	"LAST_AND_UNUSED_RTX_CODE"
	.sleb128 163
	.byte	0x0
	.uleb128 0x1f
	.long	0x1845
	.byte	0x4
	.byte	0x4
	.byte	0x4d
	.uleb128 0x6
	.string	"min_align"
	.byte	0x4
	.byte	0x4f
	.long	0x7fe
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"base_after_vec"
	.byte	0x4
	.byte	0x51
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"min_after_vec"
	.byte	0x4
	.byte	0x52
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"max_after_vec"
	.byte	0x4
	.byte	0x54
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"min_after_base"
	.byte	0x4
	.byte	0x56
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"max_after_base"
	.byte	0x4
	.byte	0x58
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"offset_unsigned"
	.byte	0x4
	.byte	0x5b
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"scale"
	.byte	0x4
	.byte	0x5d
	.long	0x7fe
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.byte	0x0
	.uleb128 0x2
	.string	"addr_diff_vec_flags"
	.byte	0x4
	.byte	0x5e
	.long	0x176b
	.uleb128 0x19
	.long	0x18b6
	.long	.LASF12
	.byte	0x18
	.byte	0x4
	.byte	0x68
	.uleb128 0x7
	.string	"alias"
	.byte	0x4
	.byte	0x69
	.long	0x8c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"expr"
	.byte	0x4
	.byte	0x6a
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xd
	.long	.LASF13
	.byte	0x4
	.byte	0x6b
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xd
	.long	.LASF14
	.byte	0x4
	.byte	0x6c
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xd
	.long	.LASF15
	.byte	0x4
	.byte	0x6d
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x20
	.long	.LASF12
	.byte	0x4
	.byte	0x6e
	.long	0x1860
	.uleb128 0x8
	.long	0x1993
	.string	"rtunion_def"
	.byte	0x8
	.byte	0x4
	.byte	0x73
	.uleb128 0x21
	.string	"rtwint"
	.byte	0x4
	.byte	0x74
	.long	0x8c5
	.uleb128 0x21
	.string	"rtint"
	.byte	0x4
	.byte	0x75
	.long	0x5bb
	.uleb128 0x21
	.string	"rtuint"
	.byte	0x4
	.byte	0x76
	.long	0x7fe
	.uleb128 0x21
	.string	"rtstr"
	.byte	0x4
	.byte	0x77
	.long	0x5a8
	.uleb128 0x21
	.string	"rtx"
	.byte	0x4
	.byte	0x78
	.long	0x99
	.uleb128 0x21
	.string	"rtvec"
	.byte	0x4
	.byte	0x79
	.long	0x198
	.uleb128 0x21
	.string	"rttype"
	.byte	0x4
	.byte	0x7a
	.long	0xca4
	.uleb128 0x21
	.string	"rt_addr_diff_vec_flags"
	.byte	0x4
	.byte	0x7b
	.long	0x1845
	.uleb128 0x21
	.string	"rt_cselib"
	.byte	0x4
	.byte	0x7c
	.long	0x19a7
	.uleb128 0x21
	.string	"rtbit"
	.byte	0x4
	.byte	0x7d
	.long	0x1a0d
	.uleb128 0x21
	.string	"rttree"
	.byte	0x4
	.byte	0x7e
	.long	0x1e0
	.uleb128 0x21
	.string	"bb"
	.byte	0x4
	.byte	0x7f
	.long	0x1b98
	.uleb128 0x21
	.string	"rtmem"
	.byte	0x4
	.byte	0x80
	.long	0x1b9e
	.byte	0x0
	.uleb128 0x22
	.string	"cselib_val_struct"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x1993
	.uleb128 0x4
	.long	0x1a0d
	.string	"bitmap_head_def"
	.byte	0x10
	.byte	0x4
	.byte	0x7d
	.uleb128 0xd
	.long	.LASF16
	.byte	0x6
	.byte	0x3d
	.long	0x1c7f
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"current"
	.byte	0x6
	.byte	0x3e
	.long	0x1c7f
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"indx"
	.byte	0x6
	.byte	0x3f
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"using_obstack"
	.byte	0x6
	.byte	0x40
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x19ad
	.uleb128 0x4
	.long	0x1b98
	.string	"basic_block_def"
	.byte	0x50
	.byte	0x4
	.byte	0x7f
	.uleb128 0x7
	.string	"head"
	.byte	0xe
	.byte	0xb5
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"end"
	.byte	0xe
	.byte	0xb5
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"head_tree"
	.byte	0xe
	.byte	0xb8
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"end_tree"
	.byte	0xe
	.byte	0xb9
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"pred"
	.byte	0xe
	.byte	0xbc
	.long	0x1dcf
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"succ"
	.byte	0xe
	.byte	0xbc
	.long	0x1dcf
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"local_set"
	.byte	0xe
	.byte	0xc1
	.long	0x1cff
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"cond_local_set"
	.byte	0xe
	.byte	0xc5
	.long	0x1cff
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"global_live_at_start"
	.byte	0xe
	.byte	0xcb
	.long	0x1cff
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"global_live_at_end"
	.byte	0xe
	.byte	0xcd
	.long	0x1cff
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"aux"
	.byte	0xe
	.byte	0xd0
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"index"
	.byte	0xe
	.byte	0xd3
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"prev_bb"
	.byte	0xe
	.byte	0xd6
	.long	0x1b98
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"next_bb"
	.byte	0xe
	.byte	0xd6
	.long	0x1b98
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"loop_depth"
	.byte	0xe
	.byte	0xd9
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x7
	.string	"loop_father"
	.byte	0xe
	.byte	0xdc
	.long	0x2048
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x7
	.string	"count"
	.byte	0xe
	.byte	0xdf
	.long	0x1d0d
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x7
	.string	"frequency"
	.byte	0xe
	.byte	0xe2
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x7
	.string	"flags"
	.byte	0xe
	.byte	0xe5
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x1a13
	.uleb128 0x3
	.byte	0x4
	.long	0x18b6
	.uleb128 0x2
	.string	"rtunion"
	.byte	0x4
	.byte	0x82
	.long	0x18c1
	.uleb128 0x15
	.long	0x1bc3
	.long	0x1ba4
	.uleb128 0x16
	.long	0x815
	.byte	0x0
	.byte	0x0
	.uleb128 0x15
	.long	0x1bd3
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x99
	.uleb128 0x15
	.long	0x1be9
	.long	0x8d6
	.uleb128 0x16
	.long	0x815
	.byte	0x0
	.byte	0x0
	.uleb128 0x2
	.string	"BITMAP_WORD"
	.byte	0x6
	.byte	0x1d
	.long	0x894
	.uleb128 0x4
	.long	0x1c53
	.string	"bitmap_element_def"
	.byte	0x1c
	.byte	0x6
	.byte	0x34
	.uleb128 0xd
	.long	.LASF17
	.byte	0x6
	.byte	0x35
	.long	0x1c53
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"prev"
	.byte	0x6
	.byte	0x36
	.long	0x1c53
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"indx"
	.byte	0x6
	.byte	0x37
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"bits"
	.byte	0x6
	.byte	0x38
	.long	0x1c59
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x1bfc
	.uleb128 0x15
	.long	0x1c69
	.long	0x1be9
	.uleb128 0x16
	.long	0x815
	.byte	0x3
	.byte	0x0
	.uleb128 0x2
	.string	"bitmap_element"
	.byte	0x6
	.byte	0x39
	.long	0x1bfc
	.uleb128 0x3
	.byte	0x4
	.long	0x1c69
	.uleb128 0x2
	.string	"bitmap"
	.byte	0x6
	.byte	0x43
	.long	0x1a0d
	.uleb128 0x4
	.long	0x1cea
	.string	"simple_bitmap_def"
	.byte	0x14
	.byte	0xf
	.byte	0x20
	.uleb128 0x7
	.string	"n_bits"
	.byte	0xf
	.byte	0x21
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xd
	.long	.LASF14
	.byte	0xf
	.byte	0x22
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xd
	.long	.LASF18
	.byte	0xf
	.byte	0x23
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"elms"
	.byte	0xf
	.byte	0x24
	.long	0x1bd9
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x2
	.string	"sbitmap"
	.byte	0xf
	.byte	0x25
	.long	0x1cf9
	.uleb128 0x3
	.byte	0x4
	.long	0x1c93
	.uleb128 0x2
	.string	"regset"
	.byte	0xe
	.byte	0x22
	.long	0x1c85
	.uleb128 0x2
	.string	"gcov_type"
	.byte	0xe
	.byte	0x75
	.long	0x8c5
	.uleb128 0x4
	.long	0x1dc9
	.string	"edge_def"
	.byte	0x28
	.byte	0xe
	.byte	0x78
	.uleb128 0x7
	.string	"pred_next"
	.byte	0xe
	.byte	0x7a
	.long	0x1dc9
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"succ_next"
	.byte	0xe
	.byte	0x7a
	.long	0x1dc9
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"src"
	.byte	0xe
	.byte	0x7d
	.long	0x1b98
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"dest"
	.byte	0xe
	.byte	0x7d
	.long	0x1b98
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"insns"
	.byte	0xe
	.byte	0x80
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"aux"
	.byte	0xe
	.byte	0x83
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"flags"
	.byte	0xe
	.byte	0x85
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"probability"
	.byte	0xe
	.byte	0x86
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"count"
	.byte	0xe
	.byte	0x87
	.long	0x1d0d
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x1d1e
	.uleb128 0x2
	.string	"edge"
	.byte	0xe
	.byte	0x89
	.long	0x1dc9
	.uleb128 0x4
	.long	0x2048
	.string	"loop"
	.byte	0x80
	.byte	0xe
	.byte	0xdc
	.uleb128 0x12
	.string	"num"
	.byte	0xe
	.value	0x176
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"header"
	.byte	0xe
	.value	0x179
	.long	0x204e
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x12
	.string	"latch"
	.byte	0xe
	.value	0x17c
	.long	0x204e
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x12
	.string	"pre_header"
	.byte	0xe
	.value	0x17f
	.long	0x204e
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x12
	.string	"pre_header_edges"
	.byte	0xe
	.value	0x184
	.long	0x2061
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"num_pre_header_edges"
	.byte	0xe
	.value	0x187
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x13
	.long	.LASF16
	.byte	0xe
	.value	0x18b
	.long	0x204e
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x12
	.string	"last"
	.byte	0xe
	.value	0x18f
	.long	0x204e
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x12
	.string	"nodes"
	.byte	0xe
	.value	0x192
	.long	0x1cea
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x12
	.string	"num_nodes"
	.byte	0xe
	.value	0x195
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x12
	.string	"entry_edges"
	.byte	0xe
	.value	0x198
	.long	0x2061
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x12
	.string	"num_entries"
	.byte	0xe
	.value	0x19b
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x12
	.string	"exit_edges"
	.byte	0xe
	.value	0x19e
	.long	0x2061
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x12
	.string	"num_exits"
	.byte	0xe
	.value	0x1a1
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x12
	.string	"exits_doms"
	.byte	0xe
	.value	0x1a4
	.long	0x1cea
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x12
	.string	"depth"
	.byte	0xe
	.value	0x1a7
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x12
	.string	"pred"
	.byte	0xe
	.value	0x1aa
	.long	0x2067
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x12
	.string	"level"
	.byte	0xe
	.value	0x1ae
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x12
	.string	"outer"
	.byte	0xe
	.value	0x1b1
	.long	0x2048
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x12
	.string	"inner"
	.byte	0xe
	.value	0x1b4
	.long	0x2048
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x13
	.long	.LASF17
	.byte	0xe
	.value	0x1b7
	.long	0x2048
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x12
	.string	"invalid"
	.byte	0xe
	.value	0x1ba
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0x12
	.string	"aux"
	.byte	0xe
	.value	0x1bd
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x12
	.string	"vtop"
	.byte	0xe
	.value	0x1c3
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0x12
	.string	"cont"
	.byte	0xe
	.value	0x1c7
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x12
	.string	"start"
	.byte	0xe
	.value	0x1ca
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0x12
	.string	"end"
	.byte	0xe
	.value	0x1cd
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0x12
	.string	"top"
	.byte	0xe
	.value	0x1d1
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.uleb128 0x12
	.string	"scan_start"
	.byte	0xe
	.value	0x1d4
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x70
	.uleb128 0x12
	.string	"sink"
	.byte	0xe
	.value	0x1d7
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x74
	.uleb128 0x12
	.string	"exit_labels"
	.byte	0xe
	.value	0x1e2
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x78
	.uleb128 0x12
	.string	"exit_count"
	.byte	0xe
	.value	0x1e6
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x7c
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x1ddb
	.uleb128 0x2
	.string	"basic_block"
	.byte	0xe
	.byte	0xe6
	.long	0x1b98
	.uleb128 0x3
	.byte	0x4
	.long	0x1dcf
	.uleb128 0x3
	.byte	0x4
	.long	0x2048
	.uleb128 0xb
	.long	0x20b3
	.string	"real_value_class"
	.byte	0x4
	.byte	0x8
	.byte	0x24
	.uleb128 0xc
	.string	"rvc_zero"
	.sleb128 0
	.uleb128 0xc
	.string	"rvc_normal"
	.sleb128 1
	.uleb128 0xc
	.string	"rvc_inf"
	.sleb128 2
	.uleb128 0xc
	.string	"rvc_nan"
	.sleb128 3
	.byte	0x0
	.uleb128 0x4
	.long	0x2109
	.string	"real_value"
	.byte	0x18
	.byte	0x8
	.byte	0x32
	.uleb128 0x5
	.long	.LASF19
	.byte	0x8
	.byte	0x37
	.long	0x206d
	.byte	0x4
	.byte	0x2
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"sign"
	.byte	0x8
	.byte	0x39
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"exp"
	.byte	0x8
	.byte	0x3a
	.long	0x5bb
	.byte	0x4
	.byte	0x1d
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"sig"
	.byte	0x8
	.byte	0x3b
	.long	0x2109
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x15
	.long	0x2119
	.long	0x894
	.uleb128 0x16
	.long	0x815
	.byte	0x4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x20b3
	.uleb128 0xf
	.string	"_Bool"
	.byte	0x1
	.byte	0x2
	.uleb128 0xe
	.long	0x5a8
	.uleb128 0x15
	.long	0x213d
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0x1d
	.byte	0x0
	.uleb128 0x4
	.long	0x216e
	.string	"location_s"
	.byte	0x8
	.byte	0xa
	.byte	0x1c
	.uleb128 0xd
	.long	.LASF20
	.byte	0xa
	.byte	0x1e
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"line"
	.byte	0xa
	.byte	0x21
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"location_t"
	.byte	0xa
	.byte	0x23
	.long	0x213d
	.uleb128 0xb
	.long	0x2aa2
	.string	"tree_code"
	.byte	0x4
	.byte	0x7
	.byte	0x27
	.uleb128 0xc
	.string	"ERROR_MARK"
	.sleb128 0
	.uleb128 0xc
	.string	"IDENTIFIER_NODE"
	.sleb128 1
	.uleb128 0xc
	.string	"OP_IDENTIFIER"
	.sleb128 2
	.uleb128 0xc
	.string	"TREE_LIST"
	.sleb128 3
	.uleb128 0xc
	.string	"TREE_VEC"
	.sleb128 4
	.uleb128 0xc
	.string	"BLOCK"
	.sleb128 5
	.uleb128 0xc
	.string	"VOID_TYPE"
	.sleb128 6
	.uleb128 0xc
	.string	"INTEGER_TYPE"
	.sleb128 7
	.uleb128 0xc
	.string	"REAL_TYPE"
	.sleb128 8
	.uleb128 0xc
	.string	"COMPLEX_TYPE"
	.sleb128 9
	.uleb128 0xc
	.string	"VECTOR_TYPE"
	.sleb128 10
	.uleb128 0xc
	.string	"ENUMERAL_TYPE"
	.sleb128 11
	.uleb128 0xc
	.string	"BOOLEAN_TYPE"
	.sleb128 12
	.uleb128 0xc
	.string	"CHAR_TYPE"
	.sleb128 13
	.uleb128 0xc
	.string	"POINTER_TYPE"
	.sleb128 14
	.uleb128 0xc
	.string	"OFFSET_TYPE"
	.sleb128 15
	.uleb128 0xc
	.string	"REFERENCE_TYPE"
	.sleb128 16
	.uleb128 0xc
	.string	"METHOD_TYPE"
	.sleb128 17
	.uleb128 0xc
	.string	"FILE_TYPE"
	.sleb128 18
	.uleb128 0xc
	.string	"ARRAY_TYPE"
	.sleb128 19
	.uleb128 0xc
	.string	"SET_TYPE"
	.sleb128 20
	.uleb128 0xc
	.string	"RECORD_TYPE"
	.sleb128 21
	.uleb128 0xc
	.string	"UNION_TYPE"
	.sleb128 22
	.uleb128 0xc
	.string	"QUAL_UNION_TYPE"
	.sleb128 23
	.uleb128 0xc
	.string	"FUNCTION_TYPE"
	.sleb128 24
	.uleb128 0xc
	.string	"LANG_TYPE"
	.sleb128 25
	.uleb128 0xc
	.string	"INTEGER_CST"
	.sleb128 26
	.uleb128 0xc
	.string	"REAL_CST"
	.sleb128 27
	.uleb128 0xc
	.string	"COMPLEX_CST"
	.sleb128 28
	.uleb128 0xc
	.string	"VECTOR_CST"
	.sleb128 29
	.uleb128 0xc
	.string	"STRING_CST"
	.sleb128 30
	.uleb128 0xc
	.string	"FUNCTION_DECL"
	.sleb128 31
	.uleb128 0xc
	.string	"LABEL_DECL"
	.sleb128 32
	.uleb128 0xc
	.string	"CONST_DECL"
	.sleb128 33
	.uleb128 0xc
	.string	"TYPE_DECL"
	.sleb128 34
	.uleb128 0xc
	.string	"VAR_DECL"
	.sleb128 35
	.uleb128 0xc
	.string	"PARM_DECL"
	.sleb128 36
	.uleb128 0xc
	.string	"RESULT_DECL"
	.sleb128 37
	.uleb128 0xc
	.string	"FIELD_DECL"
	.sleb128 38
	.uleb128 0xc
	.string	"NAMESPACE_DECL"
	.sleb128 39
	.uleb128 0xc
	.string	"COMPONENT_REF"
	.sleb128 40
	.uleb128 0xc
	.string	"BIT_FIELD_REF"
	.sleb128 41
	.uleb128 0xc
	.string	"INDIRECT_REF"
	.sleb128 42
	.uleb128 0xc
	.string	"BUFFER_REF"
	.sleb128 43
	.uleb128 0xc
	.string	"ARRAY_REF"
	.sleb128 44
	.uleb128 0xc
	.string	"ARRAY_RANGE_REF"
	.sleb128 45
	.uleb128 0xc
	.string	"VTABLE_REF"
	.sleb128 46
	.uleb128 0xc
	.string	"CONSTRUCTOR"
	.sleb128 47
	.uleb128 0xc
	.string	"COMPOUND_EXPR"
	.sleb128 48
	.uleb128 0xc
	.string	"MODIFY_EXPR"
	.sleb128 49
	.uleb128 0xc
	.string	"INIT_EXPR"
	.sleb128 50
	.uleb128 0xc
	.string	"TARGET_EXPR"
	.sleb128 51
	.uleb128 0xc
	.string	"COND_EXPR"
	.sleb128 52
	.uleb128 0xc
	.string	"BIND_EXPR"
	.sleb128 53
	.uleb128 0xc
	.string	"CALL_EXPR"
	.sleb128 54
	.uleb128 0xc
	.string	"METHOD_CALL_EXPR"
	.sleb128 55
	.uleb128 0xc
	.string	"WITH_CLEANUP_EXPR"
	.sleb128 56
	.uleb128 0xc
	.string	"CLEANUP_POINT_EXPR"
	.sleb128 57
	.uleb128 0xc
	.string	"PLACEHOLDER_EXPR"
	.sleb128 58
	.uleb128 0xc
	.string	"WITH_RECORD_EXPR"
	.sleb128 59
	.uleb128 0xc
	.string	"PLUS_EXPR"
	.sleb128 60
	.uleb128 0xc
	.string	"MINUS_EXPR"
	.sleb128 61
	.uleb128 0xc
	.string	"MULT_EXPR"
	.sleb128 62
	.uleb128 0xc
	.string	"TRUNC_DIV_EXPR"
	.sleb128 63
	.uleb128 0xc
	.string	"CEIL_DIV_EXPR"
	.sleb128 64
	.uleb128 0xc
	.string	"FLOOR_DIV_EXPR"
	.sleb128 65
	.uleb128 0xc
	.string	"ROUND_DIV_EXPR"
	.sleb128 66
	.uleb128 0xc
	.string	"TRUNC_MOD_EXPR"
	.sleb128 67
	.uleb128 0xc
	.string	"CEIL_MOD_EXPR"
	.sleb128 68
	.uleb128 0xc
	.string	"FLOOR_MOD_EXPR"
	.sleb128 69
	.uleb128 0xc
	.string	"ROUND_MOD_EXPR"
	.sleb128 70
	.uleb128 0xc
	.string	"RDIV_EXPR"
	.sleb128 71
	.uleb128 0xc
	.string	"EXACT_DIV_EXPR"
	.sleb128 72
	.uleb128 0xc
	.string	"FIX_TRUNC_EXPR"
	.sleb128 73
	.uleb128 0xc
	.string	"FIX_CEIL_EXPR"
	.sleb128 74
	.uleb128 0xc
	.string	"FIX_FLOOR_EXPR"
	.sleb128 75
	.uleb128 0xc
	.string	"FIX_ROUND_EXPR"
	.sleb128 76
	.uleb128 0xc
	.string	"FLOAT_EXPR"
	.sleb128 77
	.uleb128 0xc
	.string	"EXPON_EXPR"
	.sleb128 78
	.uleb128 0xc
	.string	"NEGATE_EXPR"
	.sleb128 79
	.uleb128 0xc
	.string	"MIN_EXPR"
	.sleb128 80
	.uleb128 0xc
	.string	"MAX_EXPR"
	.sleb128 81
	.uleb128 0xc
	.string	"ABS_EXPR"
	.sleb128 82
	.uleb128 0xc
	.string	"FFS_EXPR"
	.sleb128 83
	.uleb128 0xc
	.string	"LSHIFT_EXPR"
	.sleb128 84
	.uleb128 0xc
	.string	"RSHIFT_EXPR"
	.sleb128 85
	.uleb128 0xc
	.string	"LROTATE_EXPR"
	.sleb128 86
	.uleb128 0xc
	.string	"RROTATE_EXPR"
	.sleb128 87
	.uleb128 0xc
	.string	"BIT_IOR_EXPR"
	.sleb128 88
	.uleb128 0xc
	.string	"BIT_XOR_EXPR"
	.sleb128 89
	.uleb128 0xc
	.string	"BIT_AND_EXPR"
	.sleb128 90
	.uleb128 0xc
	.string	"BIT_ANDTC_EXPR"
	.sleb128 91
	.uleb128 0xc
	.string	"BIT_NOT_EXPR"
	.sleb128 92
	.uleb128 0xc
	.string	"TRUTH_ANDIF_EXPR"
	.sleb128 93
	.uleb128 0xc
	.string	"TRUTH_ORIF_EXPR"
	.sleb128 94
	.uleb128 0xc
	.string	"TRUTH_AND_EXPR"
	.sleb128 95
	.uleb128 0xc
	.string	"TRUTH_OR_EXPR"
	.sleb128 96
	.uleb128 0xc
	.string	"TRUTH_XOR_EXPR"
	.sleb128 97
	.uleb128 0xc
	.string	"TRUTH_NOT_EXPR"
	.sleb128 98
	.uleb128 0xc
	.string	"LT_EXPR"
	.sleb128 99
	.uleb128 0xc
	.string	"LE_EXPR"
	.sleb128 100
	.uleb128 0xc
	.string	"GT_EXPR"
	.sleb128 101
	.uleb128 0xc
	.string	"GE_EXPR"
	.sleb128 102
	.uleb128 0xc
	.string	"EQ_EXPR"
	.sleb128 103
	.uleb128 0xc
	.string	"NE_EXPR"
	.sleb128 104
	.uleb128 0xc
	.string	"UNORDERED_EXPR"
	.sleb128 105
	.uleb128 0xc
	.string	"ORDERED_EXPR"
	.sleb128 106
	.uleb128 0xc
	.string	"UNLT_EXPR"
	.sleb128 107
	.uleb128 0xc
	.string	"UNLE_EXPR"
	.sleb128 108
	.uleb128 0xc
	.string	"UNGT_EXPR"
	.sleb128 109
	.uleb128 0xc
	.string	"UNGE_EXPR"
	.sleb128 110
	.uleb128 0xc
	.string	"UNEQ_EXPR"
	.sleb128 111
	.uleb128 0xc
	.string	"IN_EXPR"
	.sleb128 112
	.uleb128 0xc
	.string	"SET_LE_EXPR"
	.sleb128 113
	.uleb128 0xc
	.string	"CARD_EXPR"
	.sleb128 114
	.uleb128 0xc
	.string	"RANGE_EXPR"
	.sleb128 115
	.uleb128 0xc
	.string	"CONVERT_EXPR"
	.sleb128 116
	.uleb128 0xc
	.string	"NOP_EXPR"
	.sleb128 117
	.uleb128 0xc
	.string	"NON_LVALUE_EXPR"
	.sleb128 118
	.uleb128 0xc
	.string	"VIEW_CONVERT_EXPR"
	.sleb128 119
	.uleb128 0xc
	.string	"SAVE_EXPR"
	.sleb128 120
	.uleb128 0xc
	.string	"UNSAVE_EXPR"
	.sleb128 121
	.uleb128 0xc
	.string	"RTL_EXPR"
	.sleb128 122
	.uleb128 0xc
	.string	"ADDR_EXPR"
	.sleb128 123
	.uleb128 0xc
	.string	"REFERENCE_EXPR"
	.sleb128 124
	.uleb128 0xc
	.string	"ENTRY_VALUE_EXPR"
	.sleb128 125
	.uleb128 0xc
	.string	"FDESC_EXPR"
	.sleb128 126
	.uleb128 0xc
	.string	"COMPLEX_EXPR"
	.sleb128 127
	.uleb128 0xc
	.string	"CONJ_EXPR"
	.sleb128 128
	.uleb128 0xc
	.string	"REALPART_EXPR"
	.sleb128 129
	.uleb128 0xc
	.string	"IMAGPART_EXPR"
	.sleb128 130
	.uleb128 0xc
	.string	"PREDECREMENT_EXPR"
	.sleb128 131
	.uleb128 0xc
	.string	"PREINCREMENT_EXPR"
	.sleb128 132
	.uleb128 0xc
	.string	"POSTDECREMENT_EXPR"
	.sleb128 133
	.uleb128 0xc
	.string	"POSTINCREMENT_EXPR"
	.sleb128 134
	.uleb128 0xc
	.string	"VA_ARG_EXPR"
	.sleb128 135
	.uleb128 0xc
	.string	"TRY_CATCH_EXPR"
	.sleb128 136
	.uleb128 0xc
	.string	"TRY_FINALLY_EXPR"
	.sleb128 137
	.uleb128 0xc
	.string	"GOTO_SUBROUTINE_EXPR"
	.sleb128 138
	.uleb128 0xc
	.string	"POPDHC_EXPR"
	.sleb128 139
	.uleb128 0xc
	.string	"POPDCC_EXPR"
	.sleb128 140
	.uleb128 0xc
	.string	"LABEL_EXPR"
	.sleb128 141
	.uleb128 0xc
	.string	"GOTO_EXPR"
	.sleb128 142
	.uleb128 0xc
	.string	"RETURN_EXPR"
	.sleb128 143
	.uleb128 0xc
	.string	"EXIT_EXPR"
	.sleb128 144
	.uleb128 0xc
	.string	"LOOP_EXPR"
	.sleb128 145
	.uleb128 0xc
	.string	"LABELED_BLOCK_EXPR"
	.sleb128 146
	.uleb128 0xc
	.string	"EXIT_BLOCK_EXPR"
	.sleb128 147
	.uleb128 0xc
	.string	"EXPR_WITH_FILE_LOCATION"
	.sleb128 148
	.uleb128 0xc
	.string	"SWITCH_EXPR"
	.sleb128 149
	.uleb128 0xc
	.string	"EXC_PTR_EXPR"
	.sleb128 150
	.uleb128 0xc
	.string	"LAST_AND_UNUSED_TREE_CODE"
	.sleb128 151
	.byte	0x0
	.uleb128 0x2
	.string	"LABEL_IDX"
	.byte	0x7
	.byte	0x31
	.long	0x7fe
	.uleb128 0x4
	.long	0x2aef
	.string	"mongoose_gcc_DST_IDX"
	.byte	0x8
	.byte	0x7
	.byte	0x32
	.uleb128 0x7
	.string	"block"
	.byte	0x7
	.byte	0x32
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xd
	.long	.LASF13
	.byte	0x7
	.byte	0x32
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"ST"
	.byte	0x7
	.byte	0x36
	.long	0x2af9
	.uleb128 0x22
	.string	"st"
	.byte	0x1
	.uleb128 0x1e
	.long	0x2b4e
	.long	.LASF21
	.byte	0x4
	.byte	0x7
	.byte	0x5a
	.uleb128 0xc
	.string	"NOT_BUILT_IN"
	.sleb128 0
	.uleb128 0xc
	.string	"BUILT_IN_FRONTEND"
	.sleb128 1
	.uleb128 0xc
	.string	"BUILT_IN_MD"
	.sleb128 2
	.uleb128 0xc
	.string	"BUILT_IN_NORMAL"
	.sleb128 3
	.byte	0x0
	.uleb128 0xb
	.long	0x43ac
	.string	"built_in_function"
	.byte	0x4
	.byte	0x7
	.byte	0x69
	.uleb128 0xc
	.string	"BUILT_IN_ALLOCA"
	.sleb128 0
	.uleb128 0xc
	.string	"BUILT_IN_ABS"
	.sleb128 1
	.uleb128 0xc
	.string	"BUILT_IN_LABS"
	.sleb128 2
	.uleb128 0xc
	.string	"BUILT_IN_FABS"
	.sleb128 3
	.uleb128 0xc
	.string	"BUILT_IN_FABSF"
	.sleb128 4
	.uleb128 0xc
	.string	"BUILT_IN_FABSL"
	.sleb128 5
	.uleb128 0xc
	.string	"BUILT_IN_LLABS"
	.sleb128 6
	.uleb128 0xc
	.string	"BUILT_IN_IMAXABS"
	.sleb128 7
	.uleb128 0xc
	.string	"BUILT_IN_CONJ"
	.sleb128 8
	.uleb128 0xc
	.string	"BUILT_IN_CONJF"
	.sleb128 9
	.uleb128 0xc
	.string	"BUILT_IN_CONJL"
	.sleb128 10
	.uleb128 0xc
	.string	"BUILT_IN_CREAL"
	.sleb128 11
	.uleb128 0xc
	.string	"BUILT_IN_CREALF"
	.sleb128 12
	.uleb128 0xc
	.string	"BUILT_IN_CREALL"
	.sleb128 13
	.uleb128 0xc
	.string	"BUILT_IN_CIMAG"
	.sleb128 14
	.uleb128 0xc
	.string	"BUILT_IN_CIMAGF"
	.sleb128 15
	.uleb128 0xc
	.string	"BUILT_IN_CIMAGL"
	.sleb128 16
	.uleb128 0xc
	.string	"BUILT_IN_DIV"
	.sleb128 17
	.uleb128 0xc
	.string	"BUILT_IN_LDIV"
	.sleb128 18
	.uleb128 0xc
	.string	"BUILT_IN_FFLOOR"
	.sleb128 19
	.uleb128 0xc
	.string	"BUILT_IN_FCEIL"
	.sleb128 20
	.uleb128 0xc
	.string	"BUILT_IN_FMOD"
	.sleb128 21
	.uleb128 0xc
	.string	"BUILT_IN_FREM"
	.sleb128 22
	.uleb128 0xc
	.string	"BUILT_IN_BZERO"
	.sleb128 23
	.uleb128 0xc
	.string	"BUILT_IN_BCOPY"
	.sleb128 24
	.uleb128 0xc
	.string	"BUILT_IN_BCMP"
	.sleb128 25
	.uleb128 0xc
	.string	"BUILT_IN_FFS"
	.sleb128 26
	.uleb128 0xc
	.string	"BUILT_IN_INDEX"
	.sleb128 27
	.uleb128 0xc
	.string	"BUILT_IN_RINDEX"
	.sleb128 28
	.uleb128 0xc
	.string	"BUILT_IN_MEMCPY"
	.sleb128 29
	.uleb128 0xc
	.string	"BUILT_IN_MEMMOVE"
	.sleb128 30
	.uleb128 0xc
	.string	"BUILT_IN_MEMCMP"
	.sleb128 31
	.uleb128 0xc
	.string	"BUILT_IN_MEMSET"
	.sleb128 32
	.uleb128 0xc
	.string	"BUILT_IN_MEMPCPY"
	.sleb128 33
	.uleb128 0xc
	.string	"BUILT_IN_STRCAT"
	.sleb128 34
	.uleb128 0xc
	.string	"BUILT_IN_STRNCAT"
	.sleb128 35
	.uleb128 0xc
	.string	"BUILT_IN_STPCPY"
	.sleb128 36
	.uleb128 0xc
	.string	"BUILT_IN_STRCPY"
	.sleb128 37
	.uleb128 0xc
	.string	"BUILT_IN_STRNCPY"
	.sleb128 38
	.uleb128 0xc
	.string	"BUILT_IN_STRCMP"
	.sleb128 39
	.uleb128 0xc
	.string	"BUILT_IN_STRNCMP"
	.sleb128 40
	.uleb128 0xc
	.string	"BUILT_IN_STRLEN"
	.sleb128 41
	.uleb128 0xc
	.string	"BUILT_IN_STRSTR"
	.sleb128 42
	.uleb128 0xc
	.string	"BUILT_IN_STRPBRK"
	.sleb128 43
	.uleb128 0xc
	.string	"BUILT_IN_STRSPN"
	.sleb128 44
	.uleb128 0xc
	.string	"BUILT_IN_STRCSPN"
	.sleb128 45
	.uleb128 0xc
	.string	"BUILT_IN_STRCHR"
	.sleb128 46
	.uleb128 0xc
	.string	"BUILT_IN_STRRCHR"
	.sleb128 47
	.uleb128 0xc
	.string	"BUILT_IN_FLOOR"
	.sleb128 48
	.uleb128 0xc
	.string	"BUILT_IN_FLOORF"
	.sleb128 49
	.uleb128 0xc
	.string	"BUILT_IN_FLOORL"
	.sleb128 50
	.uleb128 0xc
	.string	"BUILT_IN_POW"
	.sleb128 51
	.uleb128 0xc
	.string	"BUILT_IN_TAN"
	.sleb128 52
	.uleb128 0xc
	.string	"BUILT_IN_PERIPHERAL_RW_BEGIN"
	.sleb128 53
	.uleb128 0xc
	.string	"BUILT_IN_PERIPHERAL_RW_END"
	.sleb128 54
	.uleb128 0xc
	.string	"BUILT_IN_VBUF_OFFSET"
	.sleb128 55
	.uleb128 0xc
	.string	"BUILT_IN_SBUF_OFFSET"
	.sleb128 56
	.uleb128 0xc
	.string	"BUILD_IN_MUL_SHIFT_HI"
	.sleb128 57
	.uleb128 0xc
	.string	"BUILD_IN_MUL_SHIFT"
	.sleb128 58
	.uleb128 0xc
	.string	"BUILD_IN_C3_LEAD"
	.sleb128 59
	.uleb128 0xc
	.string	"BUILD_IN_C3_MAC"
	.sleb128 60
	.uleb128 0xc
	.string	"BUILD_IN_C3_MACN"
	.sleb128 61
	.uleb128 0xc
	.string	"BUILD_IN_C3_ROUND"
	.sleb128 62
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAADDS"
	.sleb128 63
	.uleb128 0xc
	.string	"BUILD_IN_C3_SASUBS"
	.sleb128 64
	.uleb128 0xc
	.string	"BUILD_IN_C3_MULA"
	.sleb128 65
	.uleb128 0xc
	.string	"BUILD_IN_C3_INIT_ACC"
	.sleb128 66
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAVE_ACC"
	.sleb128 67
	.uleb128 0xc
	.string	"BUILD_IN_MPY_32_16"
	.sleb128 68
	.uleb128 0xc
	.string	"BUILD_IN_C3_MACD"
	.sleb128 69
	.uleb128 0xc
	.string	"BUILD_IN_C3_MULAD"
	.sleb128 70
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAADDSH"
	.sleb128 71
	.uleb128 0xc
	.string	"BUILD_IN_C3_SASUBSH"
	.sleb128 72
	.uleb128 0xc
	.string	"BUILD_IN_C3_MVFS"
	.sleb128 73
	.uleb128 0xc
	.string	"BUILD_IN_C3_INIT_ADDR"
	.sleb128 74
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAVE_ADDR"
	.sleb128 75
	.uleb128 0xc
	.string	"BUILD_IN_C3_MAC_A"
	.sleb128 76
	.uleb128 0xc
	.string	"BUILD_IN_C3_MACN_A"
	.sleb128 77
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMAC_A"
	.sleb128 78
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMACN_A"
	.sleb128 79
	.uleb128 0xc
	.string	"BUILD_IN_C3_INIT_DACC"
	.sleb128 80
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAVE_DACC"
	.sleb128 81
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAADDH_A"
	.sleb128 82
	.uleb128 0xc
	.string	"BUILD_IN_C3_SASUBH_A"
	.sleb128 83
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAMULSH"
	.sleb128 84
	.uleb128 0xc
	.string	"BUILD_IN_C3_MULA_A"
	.sleb128 85
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAMULH_A"
	.sleb128 86
	.uleb128 0xc
	.string	"BUILD_IN_C3_PTR"
	.sleb128 87
	.uleb128 0xc
	.string	"BUILD_IN_C3_MAC_AR"
	.sleb128 88
	.uleb128 0xc
	.string	"BUILD_IN_C3_MACN_AR"
	.sleb128 89
	.uleb128 0xc
	.string	"BUILD_IN_C3_MULA_AR"
	.sleb128 90
	.uleb128 0xc
	.string	"BUILD_IN_C3_INIT_PTR"
	.sleb128 91
	.uleb128 0xc
	.string	"BUILD_IN_C3_TRBACK"
	.sleb128 92
	.uleb128 0xc
	.string	"BUILD_IN_C3_VITERBI"
	.sleb128 93
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMULT"
	.sleb128 94
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMULT_A"
	.sleb128 95
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMULTN"
	.sleb128 96
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMULTN_A"
	.sleb128 97
	.uleb128 0xc
	.string	"BUILD_IN_SET_CIRCBUF"
	.sleb128 98
	.uleb128 0xc
	.string	"BUILD_IN_RESET_CIRCBUF"
	.sleb128 99
	.uleb128 0xc
	.string	"BUILD_IN_C3_DADD"
	.sleb128 100
	.uleb128 0xc
	.string	"BUILD_IN_C3_DSUB"
	.sleb128 101
	.uleb128 0xc
	.string	"BUILD_IN_C3_FFT"
	.sleb128 102
	.uleb128 0xc
	.string	"BUILD_IN_C3_FFTLD"
	.sleb128 103
	.uleb128 0xc
	.string	"BUILD_IN_C3_FFTST"
	.sleb128 104
	.uleb128 0xc
	.string	"BUILD_IN_DEPOSIT"
	.sleb128 105
	.uleb128 0xc
	.string	"BUILD_IN_EXTRACT"
	.sleb128 106
	.uleb128 0xc
	.string	"BUILD_IN_C3_BITR"
	.sleb128 107
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMAC"
	.sleb128 108
	.uleb128 0xc
	.string	"BUILD_IN_C3_DMACN"
	.sleb128 109
	.uleb128 0xc
	.string	"BUILD_IN_C3_LOAD"
	.sleb128 110
	.uleb128 0xc
	.string	"BUILD_IN_C3_STORE"
	.sleb128 111
	.uleb128 0xc
	.string	"BUILD_IN_C3_REVB"
	.sleb128 112
	.uleb128 0xc
	.string	"BUILD_IN_C3_DSHL_I"
	.sleb128 113
	.uleb128 0xc
	.string	"BUILD_IN_C3_DSHR_I"
	.sleb128 114
	.uleb128 0xc
	.string	"BUILD_IN_C3_MAC_I"
	.sleb128 115
	.uleb128 0xc
	.string	"BUILD_IN_C3_MACN_I"
	.sleb128 116
	.uleb128 0xc
	.string	"BUILD_IN_C3_MULA_I"
	.sleb128 117
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAADD_A"
	.sleb128 118
	.uleb128 0xc
	.string	"BUILD_IN_C3_SADDHA"
	.sleb128 119
	.uleb128 0xc
	.string	"BUILD_IN_C3_SAADDHA_A"
	.sleb128 120
	.uleb128 0xc
	.string	"BUILD_IN_C3_SASUB_A"
	.sleb128 121
	.uleb128 0xc
	.string	"BUILD_IN_COPY_ADDR"
	.sleb128 122
	.uleb128 0xc
	.string	"BUILD_IN_SET_ADDR"
	.sleb128 123
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVGR_G2R"
	.sleb128 124
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVGR_R2G"
	.sleb128 125
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVGR_G2S"
	.sleb128 126
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVGR_S2G"
	.sleb128 127
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVGC_C2G"
	.sleb128 128
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVGC_G2C"
	.sleb128 129
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_V"
	.sleb128 130
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_G"
	.sleb128 131
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_S"
	.sleb128 132
	.uleb128 0xc
	.string	"BUILT_IN_C2_ST_V"
	.sleb128 133
	.uleb128 0xc
	.string	"BUILT_IN_C2_ST_G"
	.sleb128 134
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_G_IMM"
	.sleb128 135
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_C_IMM"
	.sleb128 136
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_V_IMM"
	.sleb128 137
	.uleb128 0xc
	.string	"BUILT_IN_C2_ST_V_IMM"
	.sleb128 138
	.uleb128 0xc
	.string	"BUILT_IN_C2_ST_C_IMM"
	.sleb128 139
	.uleb128 0xc
	.string	"BUILT_IN_C2_ST_G_IMM"
	.sleb128 140
	.uleb128 0xc
	.string	"BUILT_IN_C2_VADDS"
	.sleb128 141
	.uleb128 0xc
	.string	"BUILT_IN_C2_VSUBS"
	.sleb128 142
	.uleb128 0xc
	.string	"BUILT_IN_C2_VMUL"
	.sleb128 143
	.uleb128 0xc
	.string	"BUILT_IN_C2_VNEG"
	.sleb128 144
	.uleb128 0xc
	.string	"BUILT_IN_C2_VSHFT"
	.sleb128 145
	.uleb128 0xc
	.string	"BUILT_IN_C2_VCLP"
	.sleb128 146
	.uleb128 0xc
	.string	"BUILT_IN_C2_VCLG"
	.sleb128 147
	.uleb128 0xc
	.string	"BUILT_IN_C2_VCMOV"
	.sleb128 148
	.uleb128 0xc
	.string	"BUILT_IN_C2_LCZERO"
	.sleb128 149
	.uleb128 0xc
	.string	"BUILT_IN_C2_VRND"
	.sleb128 150
	.uleb128 0xc
	.string	"BUILT_IN_C2_VSPAS"
	.sleb128 151
	.uleb128 0xc
	.string	"BUILT_IN_C2_VSPEL"
	.sleb128 152
	.uleb128 0xc
	.string	"BUILT_IN_C2_VSPEL_MAC"
	.sleb128 153
	.uleb128 0xc
	.string	"BUILT_IN_C2_MMUL"
	.sleb128 154
	.uleb128 0xc
	.string	"BUILT_IN_C2_VMOV"
	.sleb128 155
	.uleb128 0xc
	.string	"BUILT_IN_C2_VCOPY"
	.sleb128 156
	.uleb128 0xc
	.string	"BUILT_IN_C2_VCMPR"
	.sleb128 157
	.uleb128 0xc
	.string	"BUILT_IN_C2_SAD"
	.sleb128 158
	.uleb128 0xc
	.string	"BUILT_IN_C2_SAD_TMP"
	.sleb128 159
	.uleb128 0xc
	.string	"BUILT_IN_C2_SATD"
	.sleb128 160
	.uleb128 0xc
	.string	"BUILT_IN_C2_INTRA"
	.sleb128 161
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVSEL"
	.sleb128 162
	.uleb128 0xc
	.string	"BUILT_IN_C2_BCST"
	.sleb128 163
	.uleb128 0xc
	.string	"BUILT_IN_C2_VLCS_R"
	.sleb128 164
	.uleb128 0xc
	.string	"BUILT_IN_C2_VLCS"
	.sleb128 165
	.uleb128 0xc
	.string	"BUILT_IN_C2_ADDS"
	.sleb128 166
	.uleb128 0xc
	.string	"BUILT_IN_C2_ADDS_R"
	.sleb128 167
	.uleb128 0xc
	.string	"BUILT_IN_C2_SUBS"
	.sleb128 168
	.uleb128 0xc
	.string	"BUILT_IN_C2_SUBS_R"
	.sleb128 169
	.uleb128 0xc
	.string	"BUILT_IN_C2_MULS"
	.sleb128 170
	.uleb128 0xc
	.string	"BUILT_IN_C2_MADS"
	.sleb128 171
	.uleb128 0xc
	.string	"BUILT_IN_C2_SMADS"
	.sleb128 172
	.uleb128 0xc
	.string	"BUILT_IN_C2_CMOV"
	.sleb128 173
	.uleb128 0xc
	.string	"BUILT_IN_C2_MOV"
	.sleb128 174
	.uleb128 0xc
	.string	"BUILT_IN_C2_MOV_R"
	.sleb128 175
	.uleb128 0xc
	.string	"BUILT_IN_C2_CLP"
	.sleb128 176
	.uleb128 0xc
	.string	"BUILT_IN_C2_CHKRNG"
	.sleb128 177
	.uleb128 0xc
	.string	"BUILT_IN_C2_SCOND"
	.sleb128 178
	.uleb128 0xc
	.string	"BUILT_IN_C2_SCOND_R_WB"
	.sleb128 179
	.uleb128 0xc
	.string	"BUILT_IN_C2_SCOND_R"
	.sleb128 180
	.uleb128 0xc
	.string	"BUILT_IN_C2_SCOND_BR"
	.sleb128 181
	.uleb128 0xc
	.string	"BUILT_IN_C2_SCOND_BR_R"
	.sleb128 182
	.uleb128 0xc
	.string	"BUILT_IN_C2_BOP"
	.sleb128 183
	.uleb128 0xc
	.string	"BUILT_IN_C2_BDEP"
	.sleb128 184
	.uleb128 0xc
	.string	"BUILT_IN_C2_WRAP"
	.sleb128 185
	.uleb128 0xc
	.string	"BUILT_IN_C2_BXTR"
	.sleb128 186
	.uleb128 0xc
	.string	"BUILT_IN_C2_SUM4"
	.sleb128 187
	.uleb128 0xc
	.string	"BUILT_IN_C2_SUM3_SADDR"
	.sleb128 188
	.uleb128 0xc
	.string	"BUILT_IN_C2_SUM4_R"
	.sleb128 189
	.uleb128 0xc
	.string	"BUILT_IN_C2_MED"
	.sleb128 190
	.uleb128 0xc
	.string	"BUILT_IN_C2_GSUMS"
	.sleb128 191
	.uleb128 0xc
	.string	"BUILT_IN_C2_CLZOB"
	.sleb128 192
	.uleb128 0xc
	.string	"BUILT_IN_C2_THCTRL"
	.sleb128 193
	.uleb128 0xc
	.string	"BUILT_IN_C2_BR_F"
	.sleb128 194
	.uleb128 0xc
	.string	"BUILT_IN_C2_BR_T"
	.sleb128 195
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_V2G"
	.sleb128 196
	.uleb128 0xc
	.string	"BUILT_IN_C2_LD_V2G_IMM"
	.sleb128 197
	.uleb128 0xc
	.string	"BUILT_IN_C2_ST_G2V"
	.sleb128 198
	.uleb128 0xc
	.string	"BUILT_IN_C2_ST_G2V_IMM"
	.sleb128 199
	.uleb128 0xc
	.string	"BUILT_IN_C2_MVGR_R2S"
	.sleb128 200
	.uleb128 0xc
	.string	"BUILT_IN_C2_FORK"
	.sleb128 201
	.uleb128 0xc
	.string	"BUILT_IN_C2_JOINT"
	.sleb128 202
	.uleb128 0xc
	.string	"BUILT_IN_C2_THREAD_MAJOR"
	.sleb128 203
	.uleb128 0xc
	.string	"BUILT_IN_C2_THREAD_MINOR"
	.sleb128 204
	.uleb128 0xc
	.string	"BUILT_IN_SQRT"
	.sleb128 205
	.uleb128 0xc
	.string	"BUILT_IN_SIN"
	.sleb128 206
	.uleb128 0xc
	.string	"BUILT_IN_COS"
	.sleb128 207
	.uleb128 0xc
	.string	"BUILT_IN_EXP"
	.sleb128 208
	.uleb128 0xc
	.string	"BUILT_IN_LOG"
	.sleb128 209
	.uleb128 0xc
	.string	"BUILT_IN_SQRTF"
	.sleb128 210
	.uleb128 0xc
	.string	"BUILT_IN_SINF"
	.sleb128 211
	.uleb128 0xc
	.string	"BUILT_IN_COSF"
	.sleb128 212
	.uleb128 0xc
	.string	"BUILT_IN_EXPF"
	.sleb128 213
	.uleb128 0xc
	.string	"BUILT_IN_LOGF"
	.sleb128 214
	.uleb128 0xc
	.string	"BUILT_IN_SQRTL"
	.sleb128 215
	.uleb128 0xc
	.string	"BUILT_IN_SINL"
	.sleb128 216
	.uleb128 0xc
	.string	"BUILT_IN_COSL"
	.sleb128 217
	.uleb128 0xc
	.string	"BUILT_IN_EXPL"
	.sleb128 218
	.uleb128 0xc
	.string	"BUILT_IN_LOGL"
	.sleb128 219
	.uleb128 0xc
	.string	"BUILT_IN_INF"
	.sleb128 220
	.uleb128 0xc
	.string	"BUILT_IN_INFF"
	.sleb128 221
	.uleb128 0xc
	.string	"BUILT_IN_INFL"
	.sleb128 222
	.uleb128 0xc
	.string	"BUILT_IN_HUGE_VAL"
	.sleb128 223
	.uleb128 0xc
	.string	"BUILT_IN_HUGE_VALF"
	.sleb128 224
	.uleb128 0xc
	.string	"BUILT_IN_HUGE_VALL"
	.sleb128 225
	.uleb128 0xc
	.string	"BUILT_IN_NAN"
	.sleb128 226
	.uleb128 0xc
	.string	"BUILT_IN_NANF"
	.sleb128 227
	.uleb128 0xc
	.string	"BUILT_IN_NANL"
	.sleb128 228
	.uleb128 0xc
	.string	"BUILT_IN_NANS"
	.sleb128 229
	.uleb128 0xc
	.string	"BUILT_IN_NANSF"
	.sleb128 230
	.uleb128 0xc
	.string	"BUILT_IN_NANSL"
	.sleb128 231
	.uleb128 0xc
	.string	"BUILT_IN_SAVEREGS"
	.sleb128 232
	.uleb128 0xc
	.string	"BUILT_IN_CLASSIFY_TYPE"
	.sleb128 233
	.uleb128 0xc
	.string	"BUILT_IN_NEXT_ARG"
	.sleb128 234
	.uleb128 0xc
	.string	"BUILT_IN_ARGS_INFO"
	.sleb128 235
	.uleb128 0xc
	.string	"BUILT_IN_CONSTANT_P"
	.sleb128 236
	.uleb128 0xc
	.string	"BUILT_IN_FRAME_ADDRESS"
	.sleb128 237
	.uleb128 0xc
	.string	"BUILT_IN_RETURN_ADDRESS"
	.sleb128 238
	.uleb128 0xc
	.string	"BUILT_IN_AGGREGATE_INCOMING_ADDRESS"
	.sleb128 239
	.uleb128 0xc
	.string	"BUILT_IN_APPLY_ARGS"
	.sleb128 240
	.uleb128 0xc
	.string	"BUILT_IN_APPLY"
	.sleb128 241
	.uleb128 0xc
	.string	"BUILT_IN_RETURN"
	.sleb128 242
	.uleb128 0xc
	.string	"BUILT_IN_SETJMP"
	.sleb128 243
	.uleb128 0xc
	.string	"BUILT_IN_LONGJMP"
	.sleb128 244
	.uleb128 0xc
	.string	"BUILT_IN_TRAP"
	.sleb128 245
	.uleb128 0xc
	.string	"BUILT_IN_PREFETCH"
	.sleb128 246
	.uleb128 0xc
	.string	"BUILT_IN_PRINTF"
	.sleb128 247
	.uleb128 0xc
	.string	"BUILT_IN_PUTCHAR"
	.sleb128 248
	.uleb128 0xc
	.string	"BUILT_IN_PUTS"
	.sleb128 249
	.uleb128 0xc
	.string	"BUILT_IN_SNPRINTF"
	.sleb128 250
	.uleb128 0xc
	.string	"BUILT_IN_SPRINTF"
	.sleb128 251
	.uleb128 0xc
	.string	"BUILT_IN_SCANF"
	.sleb128 252
	.uleb128 0xc
	.string	"BUILT_IN_SSCANF"
	.sleb128 253
	.uleb128 0xc
	.string	"BUILT_IN_VPRINTF"
	.sleb128 254
	.uleb128 0xc
	.string	"BUILT_IN_VSCANF"
	.sleb128 255
	.uleb128 0xc
	.string	"BUILT_IN_VSSCANF"
	.sleb128 256
	.uleb128 0xc
	.string	"BUILT_IN_VSNPRINTF"
	.sleb128 257
	.uleb128 0xc
	.string	"BUILT_IN_VSPRINTF"
	.sleb128 258
	.uleb128 0xc
	.string	"BUILT_IN_FPUTC"
	.sleb128 259
	.uleb128 0xc
	.string	"BUILT_IN_FPUTS"
	.sleb128 260
	.uleb128 0xc
	.string	"BUILT_IN_FWRITE"
	.sleb128 261
	.uleb128 0xc
	.string	"BUILT_IN_FPRINTF"
	.sleb128 262
	.uleb128 0xc
	.string	"BUILT_IN_PUTCHAR_UNLOCKED"
	.sleb128 263
	.uleb128 0xc
	.string	"BUILT_IN_PUTS_UNLOCKED"
	.sleb128 264
	.uleb128 0xc
	.string	"BUILT_IN_PRINTF_UNLOCKED"
	.sleb128 265
	.uleb128 0xc
	.string	"BUILT_IN_FPUTC_UNLOCKED"
	.sleb128 266
	.uleb128 0xc
	.string	"BUILT_IN_FPUTS_UNLOCKED"
	.sleb128 267
	.uleb128 0xc
	.string	"BUILT_IN_FWRITE_UNLOCKED"
	.sleb128 268
	.uleb128 0xc
	.string	"BUILT_IN_ISGREATER"
	.sleb128 269
	.uleb128 0xc
	.string	"BUILT_IN_ISGREATEREQUAL"
	.sleb128 270
	.uleb128 0xc
	.string	"BUILT_IN_ISLESS"
	.sleb128 271
	.uleb128 0xc
	.string	"BUILT_IN_ISLESSEQUAL"
	.sleb128 272
	.uleb128 0xc
	.string	"BUILT_IN_ISLESSGREATER"
	.sleb128 273
	.uleb128 0xc
	.string	"BUILT_IN_ISUNORDERED"
	.sleb128 274
	.uleb128 0xc
	.string	"BUILT_IN_UNWIND_INIT"
	.sleb128 275
	.uleb128 0xc
	.string	"BUILT_IN_DWARF_CFA"
	.sleb128 276
	.uleb128 0xc
	.string	"BUILT_IN_DWARF_SP_COLUMN"
	.sleb128 277
	.uleb128 0xc
	.string	"BUILT_IN_INIT_DWARF_REG_SIZES"
	.sleb128 278
	.uleb128 0xc
	.string	"BUILT_IN_FROB_RETURN_ADDR"
	.sleb128 279
	.uleb128 0xc
	.string	"BUILT_IN_EXTRACT_RETURN_ADDR"
	.sleb128 280
	.uleb128 0xc
	.string	"BUILT_IN_EH_RETURN"
	.sleb128 281
	.uleb128 0xc
	.string	"BUILT_IN_EH_RETURN_DATA_REGNO"
	.sleb128 282
	.uleb128 0xc
	.string	"BUILT_IN_VA_START"
	.sleb128 283
	.uleb128 0xc
	.string	"BUILT_IN_STDARG_START"
	.sleb128 284
	.uleb128 0xc
	.string	"BUILT_IN_VA_END"
	.sleb128 285
	.uleb128 0xc
	.string	"BUILT_IN_VA_COPY"
	.sleb128 286
	.uleb128 0xc
	.string	"BUILT_IN_EXPECT"
	.sleb128 287
	.uleb128 0xc
	.string	"BUILT_IN_EXTEND_POINTER"
	.sleb128 288
	.uleb128 0xc
	.string	"BUILT_IN_NEW"
	.sleb128 289
	.uleb128 0xc
	.string	"BUILT_IN_VEC_NEW"
	.sleb128 290
	.uleb128 0xc
	.string	"BUILT_IN_DELETE"
	.sleb128 291
	.uleb128 0xc
	.string	"BUILT_IN_VEC_DELETE"
	.sleb128 292
	.uleb128 0xc
	.string	"BUILT_IN_ABORT"
	.sleb128 293
	.uleb128 0xc
	.string	"BUILT_IN_EXIT"
	.sleb128 294
	.uleb128 0xc
	.string	"BUILT_IN__EXIT"
	.sleb128 295
	.uleb128 0xc
	.string	"BUILT_IN__EXIT2"
	.sleb128 296
	.uleb128 0xc
	.string	"END_BUILTINS"
	.sleb128 297
	.byte	0x0
	.uleb128 0x4
	.long	0x4688
	.string	"tree_common"
	.byte	0x10
	.byte	0x7
	.byte	0x8e
	.uleb128 0x7
	.string	"chain"
	.byte	0x7
	.byte	0x8f
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xd
	.long	.LASF5
	.byte	0x7
	.byte	0x90
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x5
	.long	.LASF0
	.byte	0x7
	.byte	0x92
	.long	0x2180
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"side_effects_flag"
	.byte	0x7
	.byte	0x94
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"constant_flag"
	.byte	0x7
	.byte	0x95
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"addressable_flag"
	.byte	0x7
	.byte	0x96
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"volatile_flag"
	.byte	0x7
	.byte	0x97
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"readonly_flag"
	.byte	0x7
	.byte	0x98
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"unsigned_flag"
	.byte	0x7
	.byte	0x99
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"asm_written_flag"
	.byte	0x7
	.byte	0x9a
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"unused_0"
	.byte	0x7
	.byte	0x9b
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"used_flag"
	.byte	0x7
	.byte	0x9d
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"nothrow_flag"
	.byte	0x7
	.byte	0x9e
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"static_flag"
	.byte	0x7
	.byte	0x9f
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"public_flag"
	.byte	0x7
	.byte	0xa0
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"private_flag"
	.byte	0x7
	.byte	0xa1
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"protected_flag"
	.byte	0x7
	.byte	0xa2
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"bounded_flag"
	.byte	0x7
	.byte	0xa3
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"deprecated_flag"
	.byte	0x7
	.byte	0xa4
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF22
	.byte	0x7
	.byte	0xa6
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF23
	.byte	0x7
	.byte	0xa7
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF24
	.byte	0x7
	.byte	0xa8
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF25
	.byte	0x7
	.byte	0xa9
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF26
	.byte	0x7
	.byte	0xaa
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF27
	.byte	0x7
	.byte	0xab
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF28
	.byte	0x7
	.byte	0xac
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"unused_1"
	.byte	0x7
	.byte	0xad
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"sbuf"
	.byte	0x7
	.byte	0xaf
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"sdram"
	.byte	0x7
	.byte	0xb0
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"v1buf"
	.byte	0x7
	.byte	0xb1
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"v2buf"
	.byte	0x7
	.byte	0xb2
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1c
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"v4buf"
	.byte	0x7
	.byte	0xb3
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x11
	.long	0x46c4
	.string	"tree_int_cst_lowhi"
	.byte	0x10
	.byte	0x7
	.value	0x2f6
	.uleb128 0x12
	.string	"low"
	.byte	0x7
	.value	0x2f7
	.long	0x8d6
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"high"
	.byte	0x7
	.value	0x2f8
	.long	0x8c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x11
	.long	0x470c
	.string	"tree_int_cst"
	.byte	0x24
	.byte	0x7
	.value	0x2ef
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x2f0
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"rtl"
	.byte	0x7
	.value	0x2f1
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"int_cst"
	.byte	0x7
	.value	0x2f9
	.long	0x4688
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x11
	.long	0x475a
	.string	"tree_real_cst"
	.byte	0x18
	.byte	0x7
	.value	0x30b
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x30c
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"rtl"
	.byte	0x7
	.value	0x30d
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"real_cst_ptr"
	.byte	0x7
	.value	0x30e
	.long	0x2119
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x11
	.long	0x47be
	.string	"tree_string"
	.byte	0x20
	.byte	0x7
	.value	0x31f
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x320
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"rtl"
	.byte	0x7
	.value	0x321
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x13
	.long	.LASF29
	.byte	0x7
	.value	0x322
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x12
	.string	"pointer"
	.byte	0x7
	.value	0x323
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x12
	.string	"st"
	.byte	0x7
	.value	0x325
	.long	0x47be
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x2aef
	.uleb128 0x11
	.long	0x4819
	.string	"tree_complex"
	.byte	0x1c
	.byte	0x7
	.value	0x32e
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x32f
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"rtl"
	.byte	0x7
	.value	0x330
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"real"
	.byte	0x7
	.value	0x331
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x12
	.string	"imag"
	.byte	0x7
	.value	0x332
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.byte	0x0
	.uleb128 0x11
	.long	0x4861
	.string	"tree_vector"
	.byte	0x18
	.byte	0x7
	.value	0x340
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x341
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"rtl"
	.byte	0x7
	.value	0x342
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"elements"
	.byte	0x7
	.value	0x343
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x19
	.long	0x489f
	.long	.LASF30
	.byte	0xc
	.byte	0x9
	.byte	0x19
	.uleb128 0x7
	.string	"str"
	.byte	0x9
	.byte	0x1c
	.long	0xbbb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"len"
	.byte	0x9
	.byte	0x1d
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"hash_value"
	.byte	0x9
	.byte	0x1e
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x11
	.long	0x48d6
	.string	"tree_identifier"
	.byte	0x1c
	.byte	0x7
	.value	0x35f
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x360
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"id"
	.byte	0x7
	.value	0x361
	.long	0x4861
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x11
	.long	0x491b
	.string	"tree_list"
	.byte	0x18
	.byte	0x7
	.value	0x369
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x36a
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"purpose"
	.byte	0x7
	.value	0x36b
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x13
	.long	.LASF31
	.byte	0x7
	.value	0x36c
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x11
	.long	0x4959
	.string	"tree_vec"
	.byte	0x18
	.byte	0x7
	.value	0x377
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x378
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x13
	.long	.LASF29
	.byte	0x7
	.value	0x379
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"a"
	.byte	0x7
	.value	0x37a
	.long	0x4959
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x15
	.long	0x4969
	.long	0x1e0
	.uleb128 0x16
	.long	0x815
	.byte	0x0
	.byte	0x0
	.uleb128 0x11
	.long	0x49b0
	.string	"tree_exp"
	.byte	0x18
	.byte	0x7
	.value	0x3bd
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x3be
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"complexity"
	.byte	0x7
	.value	0x3bf
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x13
	.long	.LASF32
	.byte	0x7
	.value	0x3c2
	.long	0x4959
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x11
	.long	0x4aa0
	.string	"tree_block"
	.byte	0x2c
	.byte	0x7
	.value	0x3f3
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x3f4
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x23
	.string	"handler_block_flag"
	.byte	0x7
	.value	0x3f6
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x24
	.long	.LASF33
	.byte	0x7
	.value	0x3f7
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x23
	.string	"block_num"
	.byte	0x7
	.value	0x3f8
	.long	0x7fe
	.byte	0x4
	.byte	0x1e
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"vars"
	.byte	0x7
	.value	0x3fa
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x12
	.string	"subblocks"
	.byte	0x7
	.value	0x3fb
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x12
	.string	"supercontext"
	.byte	0x7
	.value	0x3fc
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x13
	.long	.LASF34
	.byte	0x7
	.value	0x3fd
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x12
	.string	"fragment_origin"
	.byte	0x7
	.value	0x3fe
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x12
	.string	"fragment_chain"
	.byte	0x7
	.value	0x3ff
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.byte	0x0
	.uleb128 0x25
	.long	0x4ae3
	.string	"tree_type_symtab"
	.byte	0x4
	.byte	0x7
	.value	0x562
	.uleb128 0x9
	.long	.LASF35
	.byte	0x7
	.value	0x563
	.long	0x5bb
	.uleb128 0xa
	.string	"pointer"
	.byte	0x7
	.value	0x564
	.long	0x92e
	.uleb128 0xa
	.string	"die"
	.byte	0x7
	.value	0x565
	.long	0x4af0
	.byte	0x0
	.uleb128 0x22
	.string	"die_struct"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x4ae3
	.uleb128 0x11
	.long	0x4e44
	.string	"tree_type"
	.byte	0x74
	.byte	0x7
	.value	0x53f
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x540
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"values"
	.byte	0x7
	.value	0x541
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x13
	.long	.LASF14
	.byte	0x7
	.value	0x542
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x13
	.long	.LASF36
	.byte	0x7
	.value	0x543
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x13
	.long	.LASF37
	.byte	0x7
	.value	0x544
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x12
	.string	"uid"
	.byte	0x7
	.value	0x545
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"precision"
	.byte	0x7
	.value	0x547
	.long	0x7fe
	.byte	0x4
	.byte	0x9
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF1
	.byte	0x7
	.value	0x548
	.long	0xca4
	.byte	0x4
	.byte	0x7
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"string_flag"
	.byte	0x7
	.value	0x54a
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"no_force_blk_flag"
	.byte	0x7
	.value	0x54b
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"needs_constructing_flag"
	.byte	0x7
	.value	0x54c
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"transparent_union_flag"
	.byte	0x7
	.value	0x54d
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"packed_flag"
	.byte	0x7
	.value	0x54e
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"restrict_flag"
	.byte	0x7
	.value	0x54f
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF38
	.byte	0x7
	.value	0x550
	.long	0x7fe
	.byte	0x4
	.byte	0x2
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF22
	.byte	0x7
	.value	0x552
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF23
	.byte	0x7
	.value	0x553
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF24
	.byte	0x7
	.value	0x554
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF25
	.byte	0x7
	.value	0x555
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF26
	.byte	0x7
	.value	0x556
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF27
	.byte	0x7
	.value	0x557
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF28
	.byte	0x7
	.value	0x558
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF39
	.byte	0x7
	.value	0x559
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"defer_expansion"
	.byte	0x7
	.value	0x55c
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x13
	.long	.LASF15
	.byte	0x7
	.value	0x55f
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x12
	.string	"pointer_to"
	.byte	0x7
	.value	0x560
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x12
	.string	"reference_to"
	.byte	0x7
	.value	0x561
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x12
	.string	"symtab"
	.byte	0x7
	.value	0x566
	.long	0x4aa0
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x13
	.long	.LASF6
	.byte	0x7
	.value	0x568
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x12
	.string	"minval"
	.byte	0x7
	.value	0x569
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x12
	.string	"maxval"
	.byte	0x7
	.value	0x56a
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x12
	.string	"next_variant"
	.byte	0x7
	.value	0x56b
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x12
	.string	"main_variant"
	.byte	0x7
	.value	0x56c
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x12
	.string	"binfo"
	.byte	0x7
	.value	0x56d
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x12
	.string	"context"
	.byte	0x7
	.value	0x56e
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0x12
	.string	"alias_set"
	.byte	0x7
	.value	0x56f
	.long	0x8c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x13
	.long	.LASF40
	.byte	0x7
	.value	0x571
	.long	0x4e50
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x12
	.string	"ty_idx"
	.byte	0x7
	.value	0x573
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0x12
	.string	"field_ids_used"
	.byte	0x7
	.value	0x574
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0x12
	.string	"dst_id"
	.byte	0x7
	.value	0x575
	.long	0x2ab3
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.byte	0x0
	.uleb128 0x22
	.string	"lang_type"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x4e44
	.uleb128 0x11
	.long	0x4e99
	.string	"tree_decl_u1_a"
	.byte	0x4
	.byte	0x7
	.value	0x7f0
	.uleb128 0x24
	.long	.LASF15
	.byte	0x7
	.value	0x7f1
	.long	0x7fe
	.byte	0x4
	.byte	0x18
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x23
	.string	"off_align"
	.byte	0x7
	.value	0x7f2
	.long	0x7fe
	.byte	0x4
	.byte	0x8
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.byte	0x0
	.uleb128 0x25
	.long	0x4ece
	.string	"tree_decl_u1"
	.byte	0x8
	.byte	0x7
	.value	0x7e7
	.uleb128 0xa
	.string	"f"
	.byte	0x7
	.value	0x7ea
	.long	0x2b4e
	.uleb128 0xa
	.string	"i"
	.byte	0x7
	.value	0x7ed
	.long	0x8c5
	.uleb128 0xa
	.string	"a"
	.byte	0x7
	.value	0x7f3
	.long	0x4e56
	.byte	0x0
	.uleb128 0x25
	.long	0x4f0d
	.string	"tree_decl_u2"
	.byte	0x4
	.byte	0x7
	.value	0x808
	.uleb128 0xa
	.string	"f"
	.byte	0x7
	.value	0x809
	.long	0x58c4
	.uleb128 0xa
	.string	"r"
	.byte	0x7
	.value	0x80a
	.long	0x99
	.uleb128 0xa
	.string	"t"
	.byte	0x7
	.value	0x80b
	.long	0x1e0
	.uleb128 0xa
	.string	"i"
	.byte	0x7
	.value	0x80c
	.long	0x5bb
	.byte	0x0
	.uleb128 0x26
	.long	0x58c4
	.string	"function"
	.value	0x134
	.byte	0x4
	.byte	0x1f
	.uleb128 0x7
	.string	"eh"
	.byte	0xb
	.byte	0xb5
	.long	0x674c
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"stmt"
	.byte	0xb
	.byte	0xb6
	.long	0x6760
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"expr"
	.byte	0xb
	.byte	0xb7
	.long	0x6766
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"emit"
	.byte	0xb
	.byte	0xb8
	.long	0x676c
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"varasm"
	.byte	0xb
	.byte	0xb9
	.long	0x6782
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xd
	.long	.LASF6
	.byte	0xb
	.byte	0xbe
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xd
	.long	.LASF4
	.byte	0xb
	.byte	0xc1
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"outer"
	.byte	0xb
	.byte	0xc4
	.long	0x58c4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"pops_args"
	.byte	0xb
	.byte	0xc9
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0xd
	.long	.LASF41
	.byte	0xb
	.byte	0xce
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"pretend_args_size"
	.byte	0xb
	.byte	0xd3
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"outgoing_args_size"
	.byte	0xb
	.byte	0xd7
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"arg_offset_rtx"
	.byte	0xb
	.byte	0xdb
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"args_info"
	.byte	0xb
	.byte	0xdf
	.long	0x81c
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"return_rtx"
	.byte	0xb
	.byte	0xe5
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x74
	.uleb128 0x7
	.string	"internal_arg_pointer"
	.byte	0xb
	.byte	0xe8
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x78
	.uleb128 0x7
	.string	"cannot_inline"
	.byte	0xb
	.byte	0xec
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x7c
	.uleb128 0x7
	.string	"hard_reg_initial_vals"
	.byte	0xb
	.byte	0xf0
	.long	0x679f
	.byte	0x3
	.byte	0x23
	.uleb128 0x80
	.uleb128 0x7
	.string	"x_function_call_count"
	.byte	0xb
	.byte	0xf3
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0x84
	.uleb128 0x7
	.string	"x_nonlocal_labels"
	.byte	0xb
	.byte	0xf8
	.long	0x1e0
	.byte	0x3
	.byte	0x23
	.uleb128 0x88
	.uleb128 0x7
	.string	"x_nonlocal_goto_handler_slots"
	.byte	0xb
	.byte	0xfe
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0x8c
	.uleb128 0x12
	.string	"x_nonlocal_goto_handler_labels"
	.byte	0xb
	.value	0x102
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0x90
	.uleb128 0x12
	.string	"x_nonlocal_goto_stack_level"
	.byte	0xb
	.value	0x107
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0x94
	.uleb128 0x12
	.string	"x_cleanup_label"
	.byte	0xb
	.value	0x10d
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0x98
	.uleb128 0x12
	.string	"x_return_label"
	.byte	0xb
	.value	0x112
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0x9c
	.uleb128 0x12
	.string	"computed_goto_common_label"
	.byte	0xb
	.value	0x115
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xa0
	.uleb128 0x12
	.string	"computed_goto_common_reg"
	.byte	0xb
	.value	0x116
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xa4
	.uleb128 0x12
	.string	"x_save_expr_regs"
	.byte	0xb
	.value	0x11a
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xa8
	.uleb128 0x12
	.string	"x_stack_slot_list"
	.byte	0xb
	.value	0x11e
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xac
	.uleb128 0x12
	.string	"x_rtl_expr_chain"
	.byte	0xb
	.value	0x121
	.long	0x1e0
	.byte	0x3
	.byte	0x23
	.uleb128 0xb0
	.uleb128 0x12
	.string	"x_tail_recursion_label"
	.byte	0xb
	.value	0x125
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xb4
	.uleb128 0x12
	.string	"x_tail_recursion_reentry"
	.byte	0xb
	.value	0x128
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xb8
	.uleb128 0x12
	.string	"x_arg_pointer_save_area"
	.byte	0xb
	.value	0x12e
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xbc
	.uleb128 0x12
	.string	"x_clobber_return_insn"
	.byte	0xb
	.value	0x133
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xc0
	.uleb128 0x12
	.string	"x_frame_offset"
	.byte	0xb
	.value	0x138
	.long	0x8c5
	.byte	0x3
	.byte	0x23
	.uleb128 0xc4
	.uleb128 0x12
	.string	"x_context_display"
	.byte	0xb
	.value	0x13d
	.long	0x1e0
	.byte	0x3
	.byte	0x23
	.uleb128 0xcc
	.uleb128 0x12
	.string	"x_trampoline_list"
	.byte	0xb
	.value	0x146
	.long	0x1e0
	.byte	0x3
	.byte	0x23
	.uleb128 0xd0
	.uleb128 0x12
	.string	"x_parm_birth_insn"
	.byte	0xb
	.value	0x149
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xd4
	.uleb128 0x12
	.string	"x_last_parm_insn"
	.byte	0xb
	.value	0x14d
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0xd8
	.uleb128 0x12
	.string	"x_max_parm_reg"
	.byte	0xb
	.value	0x151
	.long	0x7fe
	.byte	0x3
	.byte	0x23
	.uleb128 0xdc
	.uleb128 0x12
	.string	"x_parm_reg_stack_loc"
	.byte	0xb
	.value	0x157
	.long	0x1bd3
	.byte	0x3
	.byte	0x23
	.uleb128 0xe0
	.uleb128 0x12
	.string	"x_temp_slots"
	.byte	0xb
	.value	0x15a
	.long	0x67b1
	.byte	0x3
	.byte	0x23
	.uleb128 0xe4
	.uleb128 0x12
	.string	"x_temp_slot_level"
	.byte	0xb
	.value	0x15d
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0xe8
	.uleb128 0x12
	.string	"x_var_temp_slot_level"
	.byte	0xb
	.value	0x160
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0xec
	.uleb128 0x12
	.string	"x_target_temp_slot_level"
	.byte	0xb
	.value	0x166
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0xf0
	.uleb128 0x12
	.string	"fixup_var_refs_queue"
	.byte	0xb
	.value	0x16a
	.long	0x6455
	.byte	0x3
	.byte	0x23
	.uleb128 0xf4
	.uleb128 0x12
	.string	"inlinable"
	.byte	0xb
	.value	0x16d
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0xf8
	.uleb128 0x12
	.string	"no_debugging_symbols"
	.byte	0xb
	.value	0x16e
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0xfc
	.uleb128 0x12
	.string	"original_arg_vector"
	.byte	0xb
	.value	0x16f
	.long	0x198
	.byte	0x3
	.byte	0x23
	.uleb128 0x100
	.uleb128 0x12
	.string	"original_decl_initial"
	.byte	0xb
	.value	0x170
	.long	0x1e0
	.byte	0x3
	.byte	0x23
	.uleb128 0x104
	.uleb128 0x12
	.string	"inl_last_parm_insn"
	.byte	0xb
	.value	0x173
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0x108
	.uleb128 0x12
	.string	"inl_max_label_num"
	.byte	0xb
	.value	0x175
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0x10c
	.uleb128 0x12
	.string	"funcdef_no"
	.byte	0xb
	.value	0x178
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0x110
	.uleb128 0x12
	.string	"machine"
	.byte	0xb
	.value	0x17d
	.long	0x6831
	.byte	0x3
	.byte	0x23
	.uleb128 0x114
	.uleb128 0x12
	.string	"stack_alignment_needed"
	.byte	0xb
	.value	0x17f
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0x118
	.uleb128 0x12
	.string	"preferred_stack_boundary"
	.byte	0xb
	.value	0x181
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0x11c
	.uleb128 0x12
	.string	"language"
	.byte	0xb
	.value	0x184
	.long	0x684b
	.byte	0x3
	.byte	0x23
	.uleb128 0x120
	.uleb128 0x12
	.string	"epilogue_delay_list"
	.byte	0xb
	.value	0x18a
	.long	0x99
	.byte	0x3
	.byte	0x23
	.uleb128 0x124
	.uleb128 0x23
	.string	"returns_struct"
	.byte	0xb
	.value	0x190
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"returns_pcc_struct"
	.byte	0xb
	.value	0x194
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"returns_pointer"
	.byte	0xb
	.value	0x197
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"needs_context"
	.byte	0xb
	.value	0x19a
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1c
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"calls_setjmp"
	.byte	0xb
	.value	0x19d
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"calls_longjmp"
	.byte	0xb
	.value	0x1a0
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1a
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"calls_alloca"
	.byte	0xb
	.value	0x1a4
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x19
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"calls_eh_return"
	.byte	0xb
	.value	0x1a7
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"has_nonlocal_label"
	.byte	0xb
	.value	0x1ab
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"has_nonlocal_goto"
	.byte	0xb
	.value	0x1af
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"contains_functions"
	.byte	0xb
	.value	0x1b2
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"has_computed_jump"
	.byte	0xb
	.value	0x1b5
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"is_thunk"
	.byte	0xb
	.value	0x1ba
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"all_throwers_are_sibcalls"
	.byte	0xb
	.value	0x1c1
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"instrument_entry_exit"
	.byte	0xb
	.value	0x1c5
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"arc_profile"
	.byte	0xb
	.value	0x1c8
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"profile"
	.byte	0xb
	.value	0x1cb
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"limit_stack"
	.byte	0xb
	.value	0x1cf
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"stdarg"
	.byte	0xb
	.value	0x1d2
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"x_whole_function_mode_p"
	.byte	0xb
	.value	0x1d8
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"x_dont_save_pending_sizes_p"
	.byte	0xb
	.value	0x1e1
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"uses_const_pool"
	.byte	0xb
	.value	0x1e4
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"uses_pic_offset_table"
	.byte	0xb
	.value	0x1e7
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"uses_eh_lsda"
	.byte	0xb
	.value	0x1ea
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x23
	.string	"arg_pointer_save_area_init"
	.byte	0xb
	.value	0x1ed
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x13
	.long	.LASF42
	.byte	0xb
	.value	0x1fa
	.long	0x66d6
	.byte	0x3
	.byte	0x23
	.uleb128 0x12c
	.uleb128 0x12
	.string	"max_jumptable_ents"
	.byte	0xb
	.value	0x1fe
	.long	0x5bb
	.byte	0x3
	.byte	0x23
	.uleb128 0x130
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x4f0d
	.uleb128 0x27
	.long	0x5902
	.byte	0x4
	.byte	0x7
	.value	0x81e
	.uleb128 0xa
	.string	"st"
	.byte	0x7
	.value	0x81f
	.long	0x47be
	.uleb128 0xa
	.string	"label_idx"
	.byte	0x7
	.value	0x820
	.long	0x2aa2
	.uleb128 0xa
	.string	"field_id"
	.byte	0x7
	.value	0x821
	.long	0x7fe
	.byte	0x0
	.uleb128 0x27
	.long	0x5918
	.byte	0x4
	.byte	0x7
	.value	0x823
	.uleb128 0xa
	.string	"st2"
	.byte	0x7
	.value	0x824
	.long	0x47be
	.byte	0x0
	.uleb128 0x11
	.long	0x6049
	.string	"tree_decl"
	.byte	0x94
	.byte	0x7
	.value	0x7a0
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x7a1
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"locus"
	.byte	0x7
	.value	0x7a2
	.long	0x216e
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"uid"
	.byte	0x7
	.value	0x7a3
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x13
	.long	.LASF14
	.byte	0x7
	.value	0x7a4
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x24
	.long	.LASF1
	.byte	0x7
	.value	0x7a5
	.long	0xca4
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"external_flag"
	.byte	0x7
	.value	0x7a7
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"nonlocal_flag"
	.byte	0x7
	.value	0x7a8
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"regdecl_flag"
	.byte	0x7
	.value	0x7a9
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"inline_flag"
	.byte	0x7
	.value	0x7aa
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"bit_field_flag"
	.byte	0x7
	.value	0x7ab
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"virtual_flag"
	.byte	0x7
	.value	0x7ac
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"ignored_flag"
	.byte	0x7
	.value	0x7ad
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x24
	.long	.LASF33
	.byte	0x7
	.value	0x7ae
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"sbuf_flag"
	.byte	0x7
	.value	0x7b2
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"sdram_flag"
	.byte	0x7
	.value	0x7b3
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"v1buf_flag"
	.byte	0x7
	.value	0x7b4
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"v2buf_flag"
	.byte	0x7
	.value	0x7b5
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"v4buf_flag"
	.byte	0x7
	.value	0x7b6
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"in_system_header_flag"
	.byte	0x7
	.value	0x7ba
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"common_flag"
	.byte	0x7
	.value	0x7bb
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"defer_output"
	.byte	0x7
	.value	0x7bc
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"transparent_union"
	.byte	0x7
	.value	0x7bd
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"static_ctor_flag"
	.byte	0x7
	.value	0x7be
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"static_dtor_flag"
	.byte	0x7
	.value	0x7bf
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"artificial_flag"
	.byte	0x7
	.value	0x7c0
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"weak_flag"
	.byte	0x7
	.value	0x7c1
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"non_addr_const_p"
	.byte	0x7
	.value	0x7c3
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"no_instrument_function_entry_exit"
	.byte	0x7
	.value	0x7c4
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"comdat_flag"
	.byte	0x7
	.value	0x7c5
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x23
	.string	"malloc_flag"
	.byte	0x7
	.value	0x7c6
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"no_limit_stack"
	.byte	0x7
	.value	0x7c7
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF21
	.byte	0x7
	.value	0x7c8
	.long	0x2afe
	.byte	0x4
	.byte	0x2
	.byte	0x1c
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"pure_flag"
	.byte	0x7
	.value	0x7c9
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF38
	.byte	0x7
	.value	0x7cb
	.long	0x7fe
	.byte	0x4
	.byte	0x2
	.byte	0x19
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"non_addressable"
	.byte	0x7
	.value	0x7cc
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF39
	.byte	0x7
	.value	0x7cd
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"uninlinable"
	.byte	0x7
	.value	0x7ce
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"thread_local_flag"
	.byte	0x7
	.value	0x7cf
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"inlined_function_flag"
	.byte	0x7
	.value	0x7d0
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"noinline_attrib"
	.byte	0x7
	.value	0x7d2
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF22
	.byte	0x7
	.value	0x7d5
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF23
	.byte	0x7
	.value	0x7d6
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF24
	.byte	0x7
	.value	0x7d7
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF25
	.byte	0x7
	.value	0x7d8
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF26
	.byte	0x7
	.value	0x7d9
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF27
	.byte	0x7
	.value	0x7da
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x24
	.long	.LASF28
	.byte	0x7
	.value	0x7db
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"lang_flag_7"
	.byte	0x7
	.value	0x7dc
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"syscall_linkage_flag"
	.byte	0x7
	.value	0x7df
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"widen_retval_flag"
	.byte	0x7
	.value	0x7e0
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"promote_static"
	.byte	0x7
	.value	0x7e3
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x23
	.string	"always_inline_attrib"
	.byte	0x7
	.value	0x7e4
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x12
	.string	"u1"
	.byte	0x7
	.value	0x7f4
	.long	0x4e99
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x13
	.long	.LASF36
	.byte	0x7
	.value	0x7f6
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x13
	.long	.LASF6
	.byte	0x7
	.value	0x7f7
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x12
	.string	"context"
	.byte	0x7
	.value	0x7f8
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x12
	.string	"arguments"
	.byte	0x7
	.value	0x7f9
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x12
	.string	"result"
	.byte	0x7
	.value	0x7fa
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x12
	.string	"initial"
	.byte	0x7
	.value	0x7fb
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x13
	.long	.LASF34
	.byte	0x7
	.value	0x7fc
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x12
	.string	"assembler_name"
	.byte	0x7
	.value	0x7fd
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x13
	.long	.LASF43
	.byte	0x7
	.value	0x7fe
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x13
	.long	.LASF37
	.byte	0x7
	.value	0x7ff
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0x12
	.string	"rtl"
	.byte	0x7
	.value	0x800
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x12
	.string	"live_range_rtl"
	.byte	0x7
	.value	0x801
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0x12
	.string	"u2"
	.byte	0x7
	.value	0x80d
	.long	0x4ece
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x12
	.string	"saved_tree"
	.byte	0x7
	.value	0x810
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0x12
	.string	"inlined_fns"
	.byte	0x7
	.value	0x814
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0x12
	.string	"vindex"
	.byte	0x7
	.value	0x816
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.uleb128 0x12
	.string	"pointer_alias_set"
	.byte	0x7
	.value	0x817
	.long	0x8c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x70
	.uleb128 0x13
	.long	.LASF40
	.byte	0x7
	.value	0x819
	.long	0x6055
	.byte	0x2
	.byte	0x23
	.uleb128 0x78
	.uleb128 0x23
	.string	"symtab_idx"
	.byte	0x7
	.value	0x81b
	.long	0x7fe
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x7c
	.uleb128 0x23
	.string	"label_defined"
	.byte	0x7
	.value	0x81c
	.long	0x7fe
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x7c
	.uleb128 0x12
	.string	"sgi_u1"
	.byte	0x7
	.value	0x822
	.long	0x58ca
	.byte	0x3
	.byte	0x23
	.uleb128 0x80
	.uleb128 0x12
	.string	"sgi_u2"
	.byte	0x7
	.value	0x825
	.long	0x5902
	.byte	0x3
	.byte	0x23
	.uleb128 0x84
	.uleb128 0x12
	.string	"decl_dst_id"
	.byte	0x7
	.value	0x826
	.long	0x2ab3
	.byte	0x3
	.byte	0x23
	.uleb128 0x88
	.uleb128 0x12
	.string	"sl_model_name"
	.byte	0x7
	.value	0x82a
	.long	0x1e0
	.byte	0x3
	.byte	0x23
	.uleb128 0x90
	.byte	0x0
	.uleb128 0x22
	.string	"lang_decl"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6049
	.uleb128 0xb
	.long	0x62ac
	.string	"omp_tree_type"
	.byte	0x4
	.byte	0xd
	.byte	0x1e
	.uleb128 0xc
	.string	"parallel_dir_b"
	.sleb128 0
	.uleb128 0xc
	.string	"parallel_dir_e"
	.sleb128 1
	.uleb128 0xc
	.string	"for_dir_b"
	.sleb128 2
	.uleb128 0xc
	.string	"for_dir_e"
	.sleb128 3
	.uleb128 0xc
	.string	"sections_cons_b"
	.sleb128 4
	.uleb128 0xc
	.string	"sections_cons_e"
	.sleb128 5
	.uleb128 0xc
	.string	"section_cons_b"
	.sleb128 6
	.uleb128 0xc
	.string	"section_cons_e"
	.sleb128 7
	.uleb128 0xc
	.string	"single_cons_b"
	.sleb128 8
	.uleb128 0xc
	.string	"single_cons_e"
	.sleb128 9
	.uleb128 0xc
	.string	"par_for_cons_b"
	.sleb128 10
	.uleb128 0xc
	.string	"par_for_cons_e"
	.sleb128 11
	.uleb128 0xc
	.string	"par_sctn_cons_b"
	.sleb128 12
	.uleb128 0xc
	.string	"par_sctn_cons_e"
	.sleb128 13
	.uleb128 0xc
	.string	"master_cons_b"
	.sleb128 14
	.uleb128 0xc
	.string	"master_cons_e"
	.sleb128 15
	.uleb128 0xc
	.string	"critical_cons_b"
	.sleb128 16
	.uleb128 0xc
	.string	"critical_cons_e"
	.sleb128 17
	.uleb128 0xc
	.string	"barrier_dir"
	.sleb128 18
	.uleb128 0xc
	.string	"flush_dir"
	.sleb128 19
	.uleb128 0xc
	.string	"atomic_cons"
	.sleb128 20
	.uleb128 0xc
	.string	"ordered_cons_b"
	.sleb128 21
	.uleb128 0xc
	.string	"ordered_cons_e"
	.sleb128 22
	.uleb128 0xc
	.string	"options_dir"
	.sleb128 23
	.uleb128 0xc
	.string	"exec_freq_dir"
	.sleb128 24
	.uleb128 0xc
	.string	"sl2_sections_cons_b"
	.sleb128 25
	.uleb128 0xc
	.string	"sl2_minor_sections_cons_b"
	.sleb128 26
	.uleb128 0xc
	.string	"sl2_sections_cons_e"
	.sleb128 27
	.uleb128 0xc
	.string	"sl2_section_cons_b"
	.sleb128 28
	.uleb128 0xc
	.string	"sl2_section_cons_e"
	.sleb128 29
	.uleb128 0xc
	.string	"sl2_minor_section_cons_b"
	.sleb128 30
	.uleb128 0xc
	.string	"sl2_minor_section_cons_e"
	.sleb128 31
	.byte	0x0
	.uleb128 0x11
	.long	0x62fb
	.string	"tree_omp"
	.byte	0x18
	.byte	0x7
	.value	0x832
	.uleb128 0x13
	.long	.LASF2
	.byte	0x7
	.value	0x833
	.long	0x43ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"choice"
	.byte	0x7
	.value	0x834
	.long	0x605b
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"omp_clause_list"
	.byte	0x7
	.value	0x835
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x11
	.long	0x63b6
	.string	"attribute_spec"
	.byte	0x14
	.byte	0x7
	.value	0x9db
	.uleb128 0x13
	.long	.LASF6
	.byte	0x7
	.value	0x9de
	.long	0x2128
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"min_length"
	.byte	0x7
	.value	0x9e0
	.long	0xc91
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x12
	.string	"max_length"
	.byte	0x7
	.value	0x9e3
	.long	0xc91
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x12
	.string	"decl_required"
	.byte	0x7
	.value	0x9eb
	.long	0x63b6
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x12
	.string	"type_required"
	.byte	0x7
	.value	0x9ee
	.long	0x63b6
	.byte	0x2
	.byte	0x23
	.uleb128 0xd
	.uleb128 0x12
	.string	"function_type_required"
	.byte	0x7
	.value	0x9f3
	.long	0x63b6
	.byte	0x2
	.byte	0x23
	.uleb128 0xe
	.uleb128 0x12
	.string	"handler"
	.byte	0x7
	.value	0xa02
	.long	0x63eb
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0xe
	.long	0x211f
	.uleb128 0x28
	.long	0x63df
	.byte	0x1
	.long	0x1e0
	.uleb128 0x1b
	.long	0x63df
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x5bb
	.uleb128 0x1b
	.long	0x63e5
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x1e0
	.uleb128 0x3
	.byte	0x4
	.long	0x211f
	.uleb128 0xe
	.long	0x63f0
	.uleb128 0x3
	.byte	0x4
	.long	0x63bb
	.uleb128 0x4
	.long	0x6455
	.string	"var_refs_queue"
	.byte	0x10
	.byte	0xb
	.byte	0x17
	.uleb128 0x7
	.string	"modified"
	.byte	0xb
	.byte	0x18
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"promoted_mode"
	.byte	0xb
	.byte	0x19
	.long	0xca4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xd
	.long	.LASF44
	.byte	0xb
	.byte	0x1a
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xd
	.long	.LASF17
	.byte	0xb
	.byte	0x1b
	.long	0x6455
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x63f6
	.uleb128 0x19
	.long	0x64a1
	.long	.LASF45
	.byte	0x10
	.byte	0xb
	.byte	0x24
	.uleb128 0xd
	.long	.LASF16
	.byte	0xb
	.byte	0x26
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"last"
	.byte	0xb
	.byte	0x27
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xd
	.long	.LASF46
	.byte	0xb
	.byte	0x28
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xd
	.long	.LASF17
	.byte	0xb
	.byte	0x29
	.long	0x64a1
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x645b
	.uleb128 0x4
	.long	0x65f6
	.string	"emit_status"
	.byte	0x34
	.byte	0xb
	.byte	0x37
	.uleb128 0x7
	.string	"x_reg_rtx_no"
	.byte	0xb
	.byte	0x3a
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"x_first_label_num"
	.byte	0xb
	.byte	0x3d
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"x_first_insn"
	.byte	0xb
	.byte	0x44
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"x_last_insn"
	.byte	0xb
	.byte	0x45
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xd
	.long	.LASF46
	.byte	0xb
	.byte	0x4a
	.long	0x1e0
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xd
	.long	.LASF45
	.byte	0xb
	.byte	0x50
	.long	0x64a1
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"x_cur_insn_uid"
	.byte	0xb
	.byte	0x54
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"x_last_linenum"
	.byte	0xb
	.byte	0x58
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"x_last_filename"
	.byte	0xb
	.byte	0x59
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"regno_pointer_align_length"
	.byte	0xb
	.byte	0x5f
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"regno_pointer_align"
	.byte	0xb
	.byte	0x65
	.long	0xbc6
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"regno_decl"
	.byte	0xb
	.byte	0x69
	.long	0x63df
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"x_regno_reg_rtx"
	.byte	0xb
	.byte	0x70
	.long	0x1bd3
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.byte	0x0
	.uleb128 0x4
	.long	0x66d6
	.string	"expr_status"
	.byte	0x1c
	.byte	0xb
	.byte	0x7d
	.uleb128 0x7
	.string	"x_pending_stack_adjust"
	.byte	0xb
	.byte	0x80
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"x_inhibit_defer_pop"
	.byte	0xb
	.byte	0x91
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"x_stack_pointer_delta"
	.byte	0xb
	.byte	0x97
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"x_saveregs_value"
	.byte	0xb
	.byte	0x9c
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"x_apply_args_value"
	.byte	0xb
	.byte	0x9f
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"x_forced_labels"
	.byte	0xb
	.byte	0xa2
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"x_pending_chain"
	.byte	0xb
	.byte	0xa5
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.byte	0x0
	.uleb128 0x29
	.long	0x6740
	.long	.LASF42
	.byte	0x4
	.byte	0xb
	.value	0x1f1
	.uleb128 0xc
	.string	"FUNCTION_FREQUENCY_UNLIKELY_EXECUTED"
	.sleb128 0
	.uleb128 0xc
	.string	"FUNCTION_FREQUENCY_NORMAL"
	.sleb128 1
	.uleb128 0xc
	.string	"FUNCTION_FREQUENCY_HOT"
	.sleb128 2
	.byte	0x0
	.uleb128 0x22
	.string	"eh_status"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6740
	.uleb128 0x22
	.string	"stmt_status"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6752
	.uleb128 0x3
	.byte	0x4
	.long	0x65f6
	.uleb128 0x3
	.byte	0x4
	.long	0x64a7
	.uleb128 0x22
	.string	"varasm_status"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6772
	.uleb128 0x22
	.string	"initial_value_struct"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6788
	.uleb128 0x22
	.string	"temp_slot"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x67a5
	.uleb128 0x11
	.long	0x6831
	.string	"machine_function"
	.byte	0x48
	.byte	0xb
	.value	0x17d
	.uleb128 0x7
	.string	"embedded_pic_fnaddr_rtx"
	.byte	0x1
	.byte	0xb7
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"mips16_gp_pseudo_rtx"
	.byte	0x1
	.byte	0xbb
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"frame"
	.byte	0x1
	.byte	0xbe
	.long	0x7404
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xd
	.long	.LASF47
	.byte	0x1
	.byte	0xc1
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x67b7
	.uleb128 0x22
	.string	"language_function"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6837
	.uleb128 0xb
	.long	0x68db
	.string	"debug_info_type"
	.byte	0x4
	.byte	0x16
	.byte	0x23
	.uleb128 0xc
	.string	"NO_DEBUG"
	.sleb128 0
	.uleb128 0xc
	.string	"DBX_DEBUG"
	.sleb128 1
	.uleb128 0xc
	.string	"SDB_DEBUG"
	.sleb128 2
	.uleb128 0xc
	.string	"DWARF_DEBUG"
	.sleb128 3
	.uleb128 0xc
	.string	"DWARF2_DEBUG"
	.sleb128 4
	.uleb128 0xc
	.string	"XCOFF_DEBUG"
	.sleb128 5
	.uleb128 0xc
	.string	"VMS_DEBUG"
	.sleb128 6
	.uleb128 0xc
	.string	"VMS_AND_DWARF2_DEBUG"
	.sleb128 7
	.byte	0x0
	.uleb128 0x4
	.long	0x692d
	.string	"ggc_root_tab"
	.byte	0x10
	.byte	0x1e
	.byte	0x34
	.uleb128 0x7
	.string	"base"
	.byte	0x1e
	.byte	0x35
	.long	0x92c
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"nelt"
	.byte	0x1e
	.byte	0x36
	.long	0x85f
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"stride"
	.byte	0x1e
	.byte	0x37
	.long	0x85f
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"cb"
	.byte	0x1e
	.byte	0x38
	.long	0xbcc
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x28
	.long	0x693d
	.byte	0x1
	.long	0x211f
	.uleb128 0x1b
	.long	0x1e0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x692d
	.uleb128 0x1a
	.long	0x694f
	.byte	0x1
	.uleb128 0x1b
	.long	0x1e0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6943
	.uleb128 0x4
	.long	0x699d
	.string	"asm_int_op"
	.byte	0x10
	.byte	0x1d
	.byte	0x3a
	.uleb128 0x7
	.string	"hi"
	.byte	0x1d
	.byte	0x3b
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"si"
	.byte	0x1d
	.byte	0x3c
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"di"
	.byte	0x1d
	.byte	0x3d
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"ti"
	.byte	0x1d
	.byte	0x3e
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x4
	.long	0x6bd3
	.string	"asm_out"
	.byte	0x70
	.byte	0x1d
	.byte	0x33
	.uleb128 0x7
	.string	"open_paren"
	.byte	0x1d
	.byte	0x35
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"close_paren"
	.byte	0x1d
	.byte	0x35
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"byte_op"
	.byte	0x1d
	.byte	0x38
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"aligned_op"
	.byte	0x1d
	.byte	0x3f
	.long	0x6955
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"unaligned_op"
	.byte	0x1d
	.byte	0x3f
	.long	0x6955
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"integer"
	.byte	0x1d
	.byte	0x46
	.long	0x6bed
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"globalize_label"
	.byte	0x1d
	.byte	0x49
	.long	0x6c0a
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"visibility"
	.byte	0x1d
	.byte	0x4d
	.long	0x6c21
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"function_prologue"
	.byte	0x1d
	.byte	0x50
	.long	0x6c38
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x7
	.string	"function_end_prologue"
	.byte	0x1d
	.byte	0x53
	.long	0x6c4a
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x7
	.string	"function_begin_epilogue"
	.byte	0x1d
	.byte	0x56
	.long	0x6c4a
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x7
	.string	"function_epilogue"
	.byte	0x1d
	.byte	0x59
	.long	0x6c38
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x7
	.string	"named_section"
	.byte	0x1d
	.byte	0x5d
	.long	0x6c61
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x7
	.string	"exception_section"
	.byte	0x1d
	.byte	0x60
	.long	0xc9e
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x7
	.string	"eh_frame_section"
	.byte	0x1d
	.byte	0x63
	.long	0xc9e
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x7
	.string	"select_section"
	.byte	0x1d
	.byte	0x6a
	.long	0x6c7d
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0x7
	.string	"select_rtx_section"
	.byte	0x1d
	.byte	0x6e
	.long	0x6c99
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x7
	.string	"unique_section"
	.byte	0x1d
	.byte	0x73
	.long	0x6c21
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0x7
	.string	"constructor"
	.byte	0x1d
	.byte	0x76
	.long	0x6cb0
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x7
	.string	"destructor"
	.byte	0x1d
	.byte	0x79
	.long	0x6cb0
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0x7
	.string	"output_mi_thunk"
	.byte	0x1d
	.byte	0x80
	.long	0x6cd6
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0x7
	.string	"can_output_mi_thunk"
	.byte	0x1d
	.byte	0x8b
	.long	0x6cfb
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.byte	0x0
	.uleb128 0x28
	.long	0x6bed
	.byte	0x1
	.long	0x211f
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x7fe
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6bd3
	.uleb128 0x1a
	.long	0x6c04
	.byte	0x1
	.uleb128 0x1b
	.long	0x6c04
	.uleb128 0x1b
	.long	0x5a8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x934
	.uleb128 0x3
	.byte	0x4
	.long	0x6bf3
	.uleb128 0x1a
	.long	0x6c21
	.byte	0x1
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6c10
	.uleb128 0x1a
	.long	0x6c38
	.byte	0x1
	.uleb128 0x1b
	.long	0x6c04
	.uleb128 0x1b
	.long	0x8c5
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6c27
	.uleb128 0x1a
	.long	0x6c4a
	.byte	0x1
	.uleb128 0x1b
	.long	0x6c04
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6c3e
	.uleb128 0x1a
	.long	0x6c61
	.byte	0x1
	.uleb128 0x1b
	.long	0x5a8
	.uleb128 0x1b
	.long	0x7fe
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6c50
	.uleb128 0x1a
	.long	0x6c7d
	.byte	0x1
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x5bb
	.uleb128 0x1b
	.long	0x8d6
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6c67
	.uleb128 0x1a
	.long	0x6c99
	.byte	0x1
	.uleb128 0x1b
	.long	0xca4
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x8d6
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6c83
	.uleb128 0x1a
	.long	0x6cb0
	.byte	0x1
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6c9f
	.uleb128 0x1a
	.long	0x6cd6
	.byte	0x1
	.uleb128 0x1b
	.long	0x6c04
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x8c5
	.uleb128 0x1b
	.long	0x8c5
	.uleb128 0x1b
	.long	0x1e0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6cb6
	.uleb128 0x28
	.long	0x6cfb
	.byte	0x1
	.long	0x211f
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x8c5
	.uleb128 0x1b
	.long	0x8c5
	.uleb128 0x1b
	.long	0x1e0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6cdc
	.uleb128 0x4
	.long	0x6ebc
	.string	"sched"
	.byte	0x40
	.byte	0x1d
	.byte	0x93
	.uleb128 0x7
	.string	"adjust_cost"
	.byte	0x1d
	.byte	0x97
	.long	0x6edb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"adjust_priority"
	.byte	0x1d
	.byte	0x9b
	.long	0x6ef6
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"issue_rate"
	.byte	0x1d
	.byte	0xa0
	.long	0x6f02
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"variable_issue"
	.byte	0x1d
	.byte	0xa4
	.long	0x6f27
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"md_init"
	.byte	0x1d
	.byte	0xa7
	.long	0x6f43
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"md_finish"
	.byte	0x1d
	.byte	0xaa
	.long	0x6f5a
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"reorder"
	.byte	0x1d
	.byte	0xae
	.long	0x6f84
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"reorder2"
	.byte	0x1d
	.byte	0xaf
	.long	0x6f84
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"use_dfa_pipeline_interface"
	.byte	0x1d
	.byte	0xb4
	.long	0x6f02
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"init_dfa_pre_cycle_insn"
	.byte	0x1d
	.byte	0xc2
	.long	0xc9e
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"dfa_pre_cycle_insn"
	.byte	0x1d
	.byte	0xc3
	.long	0x6f90
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"init_dfa_post_cycle_insn"
	.byte	0x1d
	.byte	0xc4
	.long	0xc9e
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"dfa_post_cycle_insn"
	.byte	0x1d
	.byte	0xc5
	.long	0x6f90
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"first_cycle_multipass_dfa_lookahead"
	.byte	0x1d
	.byte	0xcd
	.long	0x6f02
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"init_dfa_bubbles"
	.byte	0x1d
	.byte	0xd8
	.long	0xc9e
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x7
	.string	"dfa_bubble"
	.byte	0x1d
	.byte	0xd9
	.long	0x6fa6
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.byte	0x0
	.uleb128 0x28
	.long	0x6edb
	.byte	0x1
	.long	0x5bb
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6ebc
	.uleb128 0x28
	.long	0x6ef6
	.byte	0x1
	.long	0x5bb
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6ee1
	.uleb128 0x2a
	.byte	0x1
	.long	0x5bb
	.uleb128 0x3
	.byte	0x4
	.long	0x6efc
	.uleb128 0x28
	.long	0x6f27
	.byte	0x1
	.long	0x5bb
	.uleb128 0x1b
	.long	0x6c04
	.uleb128 0x1b
	.long	0x5bb
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6f08
	.uleb128 0x1a
	.long	0x6f43
	.byte	0x1
	.uleb128 0x1b
	.long	0x6c04
	.uleb128 0x1b
	.long	0x5bb
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6f2d
	.uleb128 0x1a
	.long	0x6f5a
	.byte	0x1
	.uleb128 0x1b
	.long	0x6c04
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6f49
	.uleb128 0x28
	.long	0x6f84
	.byte	0x1
	.long	0x5bb
	.uleb128 0x1b
	.long	0x6c04
	.uleb128 0x1b
	.long	0x5bb
	.uleb128 0x1b
	.long	0x1bd3
	.uleb128 0x1b
	.long	0xc96
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6f60
	.uleb128 0x2a
	.byte	0x1
	.long	0x99
	.uleb128 0x3
	.byte	0x4
	.long	0x6f8a
	.uleb128 0x28
	.long	0x6fa6
	.byte	0x1
	.long	0x99
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6f96
	.uleb128 0x4
	.long	0x7295
	.string	"gcc_target"
	.byte	0xfc
	.byte	0x1d
	.byte	0x30
	.uleb128 0x7
	.string	"asm_out"
	.byte	0x1d
	.byte	0x8f
	.long	0x699d
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"sched"
	.byte	0x1d
	.byte	0xda
	.long	0x6d01
	.byte	0x2
	.byte	0x23
	.uleb128 0x70
	.uleb128 0x7
	.string	"merge_decl_attributes"
	.byte	0x1d
	.byte	0xdd
	.long	0x72aa
	.byte	0x3
	.byte	0x23
	.uleb128 0xb0
	.uleb128 0x7
	.string	"merge_type_attributes"
	.byte	0x1d
	.byte	0xe0
	.long	0x72aa
	.byte	0x3
	.byte	0x23
	.uleb128 0xb4
	.uleb128 0x7
	.string	"attribute_table"
	.byte	0x1d
	.byte	0xe4
	.long	0x72b0
	.byte	0x3
	.byte	0x23
	.uleb128 0xb8
	.uleb128 0x7
	.string	"comp_type_attributes"
	.byte	0x1d
	.byte	0xe9
	.long	0x72d0
	.byte	0x3
	.byte	0x23
	.uleb128 0xbc
	.uleb128 0x7
	.string	"set_default_type_attributes"
	.byte	0x1d
	.byte	0xec
	.long	0x694f
	.byte	0x3
	.byte	0x23
	.uleb128 0xc0
	.uleb128 0x7
	.string	"insert_attributes"
	.byte	0x1d
	.byte	0xef
	.long	0x72e7
	.byte	0x3
	.byte	0x23
	.uleb128 0xc4
	.uleb128 0x7
	.string	"function_attribute_inlinable_p"
	.byte	0x1d
	.byte	0xf3
	.long	0x693d
	.byte	0x3
	.byte	0x23
	.uleb128 0xc8
	.uleb128 0x7
	.string	"ms_bitfield_layout_p"
	.byte	0x1d
	.byte	0xf7
	.long	0x693d
	.byte	0x3
	.byte	0x23
	.uleb128 0xcc
	.uleb128 0x7
	.string	"init_builtins"
	.byte	0x1d
	.byte	0xfa
	.long	0xc9e
	.byte	0x3
	.byte	0x23
	.uleb128 0xd0
	.uleb128 0x7
	.string	"expand_builtin"
	.byte	0x1d
	.byte	0xfd
	.long	0x7311
	.byte	0x3
	.byte	0x23
	.uleb128 0xd4
	.uleb128 0x12
	.string	"section_type_flags"
	.byte	0x1d
	.value	0x103
	.long	0x7331
	.byte	0x3
	.byte	0x23
	.uleb128 0xd8
	.uleb128 0x12
	.string	"cannot_modify_jumps_p"
	.byte	0x1d
	.value	0x107
	.long	0x733d
	.byte	0x3
	.byte	0x23
	.uleb128 0xdc
	.uleb128 0x12
	.string	"cannot_force_const_mem"
	.byte	0x1d
	.value	0x10a
	.long	0x7353
	.byte	0x3
	.byte	0x23
	.uleb128 0xe0
	.uleb128 0x12
	.string	"in_small_data_p"
	.byte	0x1d
	.value	0x10d
	.long	0x693d
	.byte	0x3
	.byte	0x23
	.uleb128 0xe4
	.uleb128 0x12
	.string	"binds_local_p"
	.byte	0x1d
	.value	0x111
	.long	0x693d
	.byte	0x3
	.byte	0x23
	.uleb128 0xe8
	.uleb128 0x12
	.string	"encode_section_info"
	.byte	0x1d
	.value	0x115
	.long	0x6c21
	.byte	0x3
	.byte	0x23
	.uleb128 0xec
	.uleb128 0x12
	.string	"strip_name_encoding"
	.byte	0x1d
	.value	0x118
	.long	0x7369
	.byte	0x3
	.byte	0x23
	.uleb128 0xf0
	.uleb128 0x12
	.string	"have_named_sections"
	.byte	0x1d
	.value	0x11d
	.long	0x211f
	.byte	0x3
	.byte	0x23
	.uleb128 0xf4
	.uleb128 0x12
	.string	"have_ctors_dtors"
	.byte	0x1d
	.value	0x121
	.long	0x211f
	.byte	0x3
	.byte	0x23
	.uleb128 0xf5
	.uleb128 0x12
	.string	"have_tls"
	.byte	0x1d
	.value	0x124
	.long	0x211f
	.byte	0x3
	.byte	0x23
	.uleb128 0xf6
	.uleb128 0x12
	.string	"have_srodata_section"
	.byte	0x1d
	.value	0x127
	.long	0x211f
	.byte	0x3
	.byte	0x23
	.uleb128 0xf7
	.uleb128 0x12
	.string	"terminate_dw2_eh_frame_info"
	.byte	0x1d
	.value	0x12a
	.long	0x211f
	.byte	0x3
	.byte	0x23
	.uleb128 0xf8
	.byte	0x0
	.uleb128 0x28
	.long	0x72aa
	.byte	0x1
	.long	0x1e0
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x1e0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7295
	.uleb128 0x3
	.byte	0x4
	.long	0x72b6
	.uleb128 0xe
	.long	0x62fb
	.uleb128 0x28
	.long	0x72d0
	.byte	0x1
	.long	0x5bb
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x1e0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x72bb
	.uleb128 0x1a
	.long	0x72e7
	.byte	0x1
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x63df
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x72d6
	.uleb128 0x28
	.long	0x7311
	.byte	0x1
	.long	0x99
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0x99
	.uleb128 0x1b
	.long	0xca4
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x72ed
	.uleb128 0x28
	.long	0x7331
	.byte	0x1
	.long	0x7fe
	.uleb128 0x1b
	.long	0x1e0
	.uleb128 0x1b
	.long	0x5a8
	.uleb128 0x1b
	.long	0x5bb
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7317
	.uleb128 0x2a
	.byte	0x1
	.long	0x211f
	.uleb128 0x3
	.byte	0x4
	.long	0x7337
	.uleb128 0x28
	.long	0x7353
	.byte	0x1
	.long	0x211f
	.uleb128 0x1b
	.long	0x99
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7343
	.uleb128 0x28
	.long	0x7369
	.byte	0x1
	.long	0x5a8
	.uleb128 0x1b
	.long	0x5a8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7359
	.uleb128 0xb
	.long	0x7404
	.string	"internal_test"
	.byte	0x4
	.byte	0x1
	.byte	0x45
	.uleb128 0xc
	.string	"ITEST_EQ"
	.sleb128 0
	.uleb128 0xc
	.string	"ITEST_NE"
	.sleb128 1
	.uleb128 0xc
	.string	"ITEST_GT"
	.sleb128 2
	.uleb128 0xc
	.string	"ITEST_GE"
	.sleb128 3
	.uleb128 0xc
	.string	"ITEST_LT"
	.sleb128 4
	.uleb128 0xc
	.string	"ITEST_LE"
	.sleb128 5
	.uleb128 0xc
	.string	"ITEST_GTU"
	.sleb128 6
	.uleb128 0xc
	.string	"ITEST_GEU"
	.sleb128 7
	.uleb128 0xc
	.string	"ITEST_LTU"
	.sleb128 8
	.uleb128 0xc
	.string	"ITEST_LEU"
	.sleb128 9
	.uleb128 0xc
	.string	"ITEST_MAX"
	.sleb128 10
	.byte	0x0
	.uleb128 0x4
	.long	0x7528
	.string	"mips_frame_info"
	.byte	0x3c
	.byte	0x1
	.byte	0xa1
	.uleb128 0xd
	.long	.LASF48
	.byte	0x1
	.byte	0xa2
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xd
	.long	.LASF49
	.byte	0x1
	.byte	0xa3
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xd
	.long	.LASF41
	.byte	0x1
	.byte	0xa4
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xd
	.long	.LASF50
	.byte	0x1
	.byte	0xa5
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xd
	.long	.LASF51
	.byte	0x1
	.byte	0xa6
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xd
	.long	.LASF52
	.byte	0x1
	.byte	0xa7
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"mask"
	.byte	0x1
	.byte	0xa8
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"fmask"
	.byte	0x1
	.byte	0xa9
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"gp_save_offset"
	.byte	0x1
	.byte	0xaa
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"fp_save_offset"
	.byte	0x1
	.byte	0xab
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"gp_sp_offset"
	.byte	0x1
	.byte	0xac
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"fp_sp_offset"
	.byte	0x1
	.byte	0xad
	.long	0x90f
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"initialized"
	.byte	0x1
	.byte	0xae
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"num_gp"
	.byte	0x1
	.byte	0xaf
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"num_fp"
	.byte	0x1
	.byte	0xb0
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.byte	0x0
	.uleb128 0x19
	.long	0x75ba
	.long	.LASF53
	.byte	0x18
	.byte	0x1
	.byte	0x55
	.uleb128 0x7
	.string	"struct_p"
	.byte	0x1
	.byte	0xc8
	.long	0x211f
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"fpr_p"
	.byte	0x1
	.byte	0xcc
	.long	0x211f
	.byte	0x2
	.byte	0x23
	.uleb128 0x1
	.uleb128 0x7
	.string	"num_bytes"
	.byte	0x1
	.byte	0xcf
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"reg_words"
	.byte	0x1
	.byte	0xd2
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"reg_offset"
	.byte	0x1
	.byte	0xd7
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xd
	.long	.LASF7
	.byte	0x1
	.byte	0xda
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"stack_offset"
	.byte	0x1
	.byte	0xde
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x11
	.long	0x75fd
	.string	"extern_list"
	.byte	0xc
	.byte	0x1
	.value	0x102
	.uleb128 0x13
	.long	.LASF17
	.byte	0x1
	.value	0x103
	.long	0x75fd
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x13
	.long	.LASF6
	.byte	0x1
	.value	0x104
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x13
	.long	.LASF14
	.byte	0x1
	.value	0x105
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x75ba
	.uleb128 0x11
	.long	0x763b
	.string	"string_constant"
	.byte	0x8
	.byte	0x1
	.value	0x17b
	.uleb128 0x13
	.long	.LASF17
	.byte	0x1
	.value	0x17c
	.long	0x763b
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x13
	.long	.LASF54
	.byte	0x1
	.value	0x17d
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7603
	.uleb128 0x2b
	.long	0x768b
	.byte	0x1
	.string	"uns_arith_operand"
	.byte	0x1
	.value	0x2a7
	.byte	0x1
	.long	0x5bb
	.long	.LFB15
	.long	.LFE15
	.long	.LLST0
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x2a5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2a6
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x76d1
	.byte	0x1
	.string	"arith_operand"
	.byte	0x1
	.value	0x2b5
	.byte	0x1
	.long	0x5bb
	.long	.LFB16
	.long	.LFE16
	.long	.LLST1
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x2b3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2b4
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7719
	.byte	0x1
	.string	"arith32_operand"
	.byte	0x1
	.value	0x2c7
	.byte	0x1
	.long	0x5bb
	.long	.LFB17
	.long	.LFE17
	.long	.LLST2
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x2c5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2c6
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x775b
	.byte	0x1
	.string	"small_int"
	.byte	0x1
	.value	0x2d4
	.byte	0x1
	.long	0x5bb
	.long	.LFB18
	.long	.LFE18
	.long	.LLST3
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x2d2
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2d3
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x77ac
	.byte	0x1
	.string	"large_int"
	.byte	0x1
	.value	0x2df
	.byte	0x1
	.long	0x5bb
	.long	.LFB19
	.long	.LFE19
	.long	.LLST4
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x2dd
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2de
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF31
	.byte	0x1
	.value	0x2e0
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x2b
	.long	0x77f5
	.byte	0x1
	.string	"reg_or_0_operand"
	.byte	0x1
	.value	0x2fe
	.byte	0x1
	.long	0x5bb
	.long	.LFB20
	.long	.LFE20
	.long	.LLST5
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x2fc
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2fd
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7843
	.byte	0x1
	.string	"true_reg_or_0_operand"
	.byte	0x1
	.value	0x31d
	.byte	0x1
	.long	0x5bb
	.long	.LFB21
	.long	.LFE21
	.long	.LLST6
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x31b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x31c
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7890
	.byte	0x1
	.string	"mips_const_double_ok"
	.byte	0x1
	.value	0x337
	.byte	0x1
	.long	0x5bb
	.long	.LFB22
	.long	.LFE22
	.long	.LLST7
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x335
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x336
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x78eb
	.byte	0x1
	.string	"const_float_1_operand"
	.byte	0x1
	.value	0x351
	.byte	0x1
	.long	0x5bb
	.long	.LFB23
	.long	.LFE23
	.long	.LLST8
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x34f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x350
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"d"
	.byte	0x1
	.value	0x352
	.long	0x20b3
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x30
	.long	0x796d
	.string	"mips16_simple_memory_operand"
	.byte	0x1
	.value	0x366
	.byte	0x1
	.long	0x5bb
	.long	.LFB24
	.long	.LFE24
	.long	.LLST9
	.uleb128 0x2c
	.string	"reg"
	.byte	0x1
	.value	0x363
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF13
	.byte	0x1
	.value	0x364
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x365
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x367
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"off"
	.byte	0x1
	.value	0x368
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x2b
	.long	0x7a05
	.byte	0x1
	.string	"simple_memory_operand"
	.byte	0x1
	.value	0x386
	.byte	0x1
	.long	0x5bb
	.long	.LFB25
	.long	.LFE25
	.long	.LLST10
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x384
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x385
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF55
	.byte	0x1
	.value	0x387
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"plus0"
	.byte	0x1
	.value	0x387
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"plus1"
	.byte	0x1
	.value	0x387
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x31
	.long	.LBB2
	.long	.LBE2
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x3e4
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x7a87
	.byte	0x1
	.string	"double_memory_operand"
	.byte	0x1
	.value	0x3ff
	.byte	0x1
	.long	0x5bb
	.long	.LFB26
	.long	.LFE26
	.long	.LLST11
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x3fd
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x3fe
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x31
	.long	.LBB3
	.long	.LBE3
	.uleb128 0x2e
	.long	.LASF55
	.byte	0x1
	.value	0x41f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x31
	.long	.LBB4
	.long	.LBE4
	.uleb128 0x2f
	.string	"maddr"
	.byte	0x1
	.value	0x434
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x7acb
	.byte	0x1
	.string	"equality_op"
	.byte	0x1
	.value	0x471
	.byte	0x1
	.long	0x5bb
	.long	.LFB27
	.long	.LFE27
	.long	.LLST12
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x46f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x470
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7b0a
	.byte	0x1
	.string	"cmp_op"
	.byte	0x1
	.value	0x47e
	.byte	0x1
	.long	0x5bb
	.long	.LFB28
	.long	.LFE28
	.long	.LLST13
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x47c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x47d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7b4e
	.byte	0x1
	.string	"trap_cmp_op"
	.byte	0x1
	.value	0x48e
	.byte	0x1
	.long	0x5bb
	.long	.LFB29
	.long	.LFE29
	.long	.LLST14
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x48c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x48d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7b9a
	.byte	0x1
	.string	"pc_or_label_operand"
	.byte	0x1
	.value	0x4a7
	.byte	0x1
	.long	0x5bb
	.long	.LFB30
	.long	.LFE30
	.long	.LLST15
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x4a5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x4a6
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7be4
	.byte	0x1
	.string	"call_insn_operand"
	.byte	0x1
	.value	0x4ba
	.byte	0x1
	.long	0x5bb
	.long	.LFB31
	.long	.LFE31
	.long	.LLST16
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x4b8
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x4b9
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7c29
	.byte	0x1
	.string	"move_operand"
	.byte	0x1
	.value	0x4c8
	.byte	0x1
	.long	0x5bb
	.long	.LFB32
	.long	.LFE32
	.long	.LLST17
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x4c6
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x4c7
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7c6f
	.byte	0x1
	.string	"movdi_operand"
	.byte	0x1
	.value	0x4e0
	.byte	0x1
	.long	0x5bb
	.long	.LFB33
	.long	.LFE33
	.long	.LLST18
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x4de
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x4df
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7cbb
	.byte	0x1
	.string	"se_register_operand"
	.byte	0x1
	.value	0x4f6
	.byte	0x1
	.long	0x5bb
	.long	.LFB34
	.long	.LFE34
	.long	.LLST19
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x4f4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x4f5
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7d07
	.byte	0x1
	.string	"se_reg_or_0_operand"
	.byte	0x1
	.value	0x50a
	.byte	0x1
	.long	0x5bb
	.long	.LFB35
	.long	.LFE35
	.long	.LLST20
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x508
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x509
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7d54
	.byte	0x1
	.string	"se_uns_arith_operand"
	.byte	0x1
	.value	0x51e
	.byte	0x1
	.long	0x5bb
	.long	.LFB36
	.long	.LFE36
	.long	.LLST21
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x51c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x51d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7d9d
	.byte	0x1
	.string	"se_arith_operand"
	.byte	0x1
	.value	0x532
	.byte	0x1
	.long	0x5bb
	.long	.LFB37
	.long	.LFE37
	.long	.LLST22
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x530
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x531
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7dea
	.byte	0x1
	.string	"se_nonmemory_operand"
	.byte	0x1
	.value	0x546
	.byte	0x1
	.long	0x5bb
	.long	.LFB38
	.long	.LFE38
	.long	.LLST23
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x544
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x545
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7e35
	.byte	0x1
	.string	"consttable_operand"
	.byte	0x1
	.value	0x55b
	.byte	0x1
	.long	0x5bb
	.long	.LFB39
	.long	.LFE39
	.long	.LLST24
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x559
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x55a
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7e81
	.byte	0x1
	.string	"coprocessor_operand"
	.byte	0x1
	.value	0x566
	.byte	0x1
	.long	0x5bb
	.long	.LFB40
	.long	.LFE40
	.long	.LLST25
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x564
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x565
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7ece
	.byte	0x1
	.string	"coprocessor2_operand"
	.byte	0x1
	.value	0x570
	.byte	0x1
	.long	0x5bb
	.long	.LFB41
	.long	.LFE41
	.long	.LLST26
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x56e
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x56f
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7f17
	.byte	0x1
	.string	"symbolic_operand"
	.byte	0x1
	.value	0x57d
	.byte	0x1
	.long	0x5bb
	.long	.LFB42
	.long	.LFE42
	.long	.LLST27
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x57b
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 8
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x57c
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7f61
	.byte	0x1
	.string	"mips_check_split"
	.byte	0x1
	.value	0x59e
	.byte	0x1
	.long	0x5bb
	.long	.LFB43
	.long	.LFE43
	.long	.LLST28
	.uleb128 0x2d
	.long	.LASF35
	.byte	0x1
	.value	0x59c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x59d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x7fc8
	.byte	0x1
	.string	"mips_reg_mode_ok_for_base_p"
	.byte	0x1
	.value	0x5b5
	.byte	0x1
	.long	0x5bb
	.long	.LFB44
	.long	.LFE44
	.long	.LLST29
	.uleb128 0x2c
	.string	"reg"
	.byte	0x1
	.value	0x5b2
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x5b3
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"strict"
	.byte	0x1
	.value	0x5b4
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x2b
	.long	0x80ab
	.byte	0x1
	.string	"mips_legitimate_address_p"
	.byte	0x1
	.value	0x5c5
	.byte	0x1
	.long	0x5bb
	.long	.LFB45
	.long	.LFE45
	.long	.LLST30
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x5c2
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"xinsn"
	.byte	0x1
	.value	0x5c3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"strict"
	.byte	0x1
	.value	0x5c4
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x32
	.long	0x805e
	.long	.LBB5
	.long	.LBE5
	.uleb128 0x2f
	.string	"xlow0"
	.byte	0x1
	.value	0x5df
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -40
	.uleb128 0x2f
	.string	"xlow1"
	.byte	0x1
	.value	0x5e0
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -36
	.byte	0x0
	.uleb128 0x31
	.long	.LBB6
	.long	.LBE6
	.uleb128 0x2f
	.string	"xplus0"
	.byte	0x1
	.value	0x5ec
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -32
	.uleb128 0x2f
	.string	"xplus1"
	.byte	0x1
	.value	0x5ed
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF56
	.byte	0x1
	.value	0x5ee
	.long	0xf9c
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x2e
	.long	.LASF57
	.byte	0x1
	.value	0x5ef
	.long	0xf9c
	.byte	0x2
	.byte	0x75
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x30
	.long	0x810f
	.string	"m16_check_op"
	.byte	0x1
	.value	0x643
	.byte	0x1
	.long	0x5bb
	.long	.LFB46
	.long	.LFE46
	.long	.LLST31
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x63f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"low"
	.byte	0x1
	.value	0x640
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"high"
	.byte	0x1
	.value	0x641
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"mask"
	.byte	0x1
	.value	0x642
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.byte	0x0
	.uleb128 0x2b
	.long	0x8153
	.byte	0x1
	.string	"m16_uimm3_b"
	.byte	0x1
	.value	0x64e
	.byte	0x1
	.long	0x5bb
	.long	.LFB47
	.long	.LFE47
	.long	.LLST32
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x64c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x64d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8197
	.byte	0x1
	.string	"m16_simm4_1"
	.byte	0x1
	.value	0x656
	.byte	0x1
	.long	0x5bb
	.long	.LFB48
	.long	.LFE48
	.long	.LLST33
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x654
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x655
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x81dc
	.byte	0x1
	.string	"m16_nsimm4_1"
	.byte	0x1
	.value	0x65e
	.byte	0x1
	.long	0x5bb
	.long	.LFB49
	.long	.LFE49
	.long	.LLST34
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x65c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x65d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8220
	.byte	0x1
	.string	"m16_simm5_1"
	.byte	0x1
	.value	0x666
	.byte	0x1
	.long	0x5bb
	.long	.LFB50
	.long	.LFE50
	.long	.LLST35
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x664
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x665
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8265
	.byte	0x1
	.string	"m16_nsimm5_1"
	.byte	0x1
	.value	0x66e
	.byte	0x1
	.long	0x5bb
	.long	.LFB51
	.long	.LFE51
	.long	.LLST36
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x66c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x66d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x82a9
	.byte	0x1
	.string	"m16_uimm5_4"
	.byte	0x1
	.value	0x676
	.byte	0x1
	.long	0x5bb
	.long	.LFB52
	.long	.LFE52
	.long	.LLST37
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x674
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x675
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x82ee
	.byte	0x1
	.string	"m16_nuimm5_4"
	.byte	0x1
	.value	0x67e
	.byte	0x1
	.long	0x5bb
	.long	.LFB53
	.long	.LFE53
	.long	.LLST38
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x67c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x67d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8332
	.byte	0x1
	.string	"m16_simm8_1"
	.byte	0x1
	.value	0x686
	.byte	0x1
	.long	0x5bb
	.long	.LFB54
	.long	.LFE54
	.long	.LLST39
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x684
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x685
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8377
	.byte	0x1
	.string	"m16_nsimm8_1"
	.byte	0x1
	.value	0x68e
	.byte	0x1
	.long	0x5bb
	.long	.LFB55
	.long	.LFE55
	.long	.LLST40
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x68c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x68d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x83bb
	.byte	0x1
	.string	"m16_uimm8_1"
	.byte	0x1
	.value	0x696
	.byte	0x1
	.long	0x5bb
	.long	.LFB56
	.long	.LFE56
	.long	.LLST41
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x694
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x695
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8400
	.byte	0x1
	.string	"m16_nuimm8_1"
	.byte	0x1
	.value	0x69e
	.byte	0x1
	.long	0x5bb
	.long	.LFB57
	.long	.LFE57
	.long	.LLST42
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x69c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x69d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8447
	.byte	0x1
	.string	"m16_uimm8_m1_1"
	.byte	0x1
	.value	0x6a6
	.byte	0x1
	.long	0x5bb
	.long	.LFB58
	.long	.LFE58
	.long	.LLST43
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x6a4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x6a5
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x848b
	.byte	0x1
	.string	"m16_uimm8_4"
	.byte	0x1
	.value	0x6ae
	.byte	0x1
	.long	0x5bb
	.long	.LFB59
	.long	.LFE59
	.long	.LLST44
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x6ac
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x6ad
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x84d0
	.byte	0x1
	.string	"m16_nuimm8_4"
	.byte	0x1
	.value	0x6b6
	.byte	0x1
	.long	0x5bb
	.long	.LFB60
	.long	.LFE60
	.long	.LLST45
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x6b4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x6b5
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8514
	.byte	0x1
	.string	"m16_simm8_8"
	.byte	0x1
	.value	0x6be
	.byte	0x1
	.long	0x5bb
	.long	.LFB61
	.long	.LFE61
	.long	.LLST46
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x6bc
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x6bd
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x8559
	.byte	0x1
	.string	"m16_nsimm8_8"
	.byte	0x1
	.value	0x6c6
	.byte	0x1
	.long	0x5bb
	.long	.LFB62
	.long	.LFE62
	.long	.LLST47
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x6c4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x6c5
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0x85b4
	.byte	0x1
	.string	"m16_usym8_4"
	.byte	0x1
	.value	0x6d4
	.byte	0x1
	.long	0x5bb
	.long	.LFB63
	.long	.LFE63
	.long	.LLST48
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x6d2
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x6d3
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x31
	.long	.LBB7
	.long	.LBE7
	.uleb128 0x2f
	.string	"l"
	.byte	0x1
	.value	0x6de
	.long	0x763b
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x860f
	.byte	0x1
	.string	"m16_usym5_4"
	.byte	0x1
	.value	0x6ef
	.byte	0x1
	.long	0x5bb
	.long	.LFB64
	.long	.LFE64
	.long	.LLST49
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x6ed
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x6ee
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x31
	.long	.LBB8
	.long	.LBE8
	.uleb128 0x2f
	.string	"l"
	.byte	0x1
	.value	0x6f9
	.long	0x763b
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x86ca
	.byte	0x1
	.string	"mips_fill_delay_slot"
	.byte	0x1
	.value	0x718
	.byte	0x1
	.long	0x5a8
	.long	.LFB65
	.long	.LFE65
	.long	.LLST50
	.uleb128 0x2c
	.string	"ret"
	.byte	0x1
	.value	0x714
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x715
	.long	0x307
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0x716
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"cur_insn"
	.byte	0x1
	.value	0x717
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2f
	.string	"set_reg"
	.byte	0x1
	.value	0x719
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -16
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0x71a
	.long	0xca4
	.byte	0x1
	.byte	0x52
	.uleb128 0x2f
	.string	"next_insn"
	.byte	0x1
	.value	0x71b
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -12
	.uleb128 0x2f
	.string	"num_nops"
	.byte	0x1
	.value	0x71c
	.long	0x5bb
	.byte	0x2
	.byte	0x75
	.sleb128 -8
	.byte	0x0
	.uleb128 0x33
	.long	0x87a0
	.byte	0x1
	.string	"mips_count_memory_refs"
	.byte	0x1
	.value	0x765
	.byte	0x1
	.long	.LFB66
	.long	.LFE66
	.long	.LLST51
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x763
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"num"
	.byte	0x1
	.value	0x764
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"additional"
	.byte	0x1
	.value	0x766
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"n_words"
	.byte	0x1
	.value	0x767
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF55
	.byte	0x1
	.value	0x768
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"plus0"
	.byte	0x1
	.value	0x768
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"plus1"
	.byte	0x1
	.value	0x768
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF56
	.byte	0x1
	.value	0x769
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2e
	.long	.LASF57
	.byte	0x1
	.value	0x769
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"looping"
	.byte	0x1
	.value	0x76a
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x2b
	.long	0x87ec
	.byte	0x1
	.string	"embedded_pic_fnaddr_reg"
	.byte	0x1
	.value	0x7d8
	.byte	0x1
	.long	0xa4
	.long	.LFB67
	.long	.LFE67
	.long	.LLST52
	.uleb128 0x31
	.long	.LBB9
	.long	.LBE9
	.uleb128 0x2f
	.string	"seq"
	.byte	0x1
	.value	0x7db
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x8828
	.byte	0x1
	.string	"embedded_pic_offset"
	.byte	0x1
	.value	0x7fa
	.byte	0x1
	.long	0xa4
	.long	.LFB68
	.long	.LFE68
	.long	.LLST53
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x7f9
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x2b
	.long	0x8a70
	.byte	0x1
	.string	"mips_move_1word"
	.byte	0x1
	.value	0x80b
	.byte	0x1
	.long	0x5a8
	.long	.LFB69
	.long	.LFE69
	.long	.LLST54
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0x808
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x809
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF44
	.byte	0x1
	.value	0x80a
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"ret"
	.byte	0x1
	.value	0x80c
	.long	0x5a8
	.byte	0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x2f
	.string	"op0"
	.byte	0x1
	.value	0x80d
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2f
	.string	"op1"
	.byte	0x1
	.value	0x80e
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2e
	.long	.LASF56
	.byte	0x1
	.value	0x80f
	.long	0xf9c
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2e
	.long	.LASF57
	.byte	0x1
	.value	0x810
	.long	0xf9c
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0x811
	.long	0xca4
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF59
	.byte	0x1
	.value	0x812
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2e
	.long	.LASF60
	.byte	0x1
	.value	0x813
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2f
	.string	"delay"
	.byte	0x1
	.value	0x814
	.long	0x307
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x32
	.long	0x89d6
	.long	.LBB10
	.long	.LBE10
	.uleb128 0x2f
	.string	"regno0"
	.byte	0x1
	.value	0x830
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x32
	.long	0x896d
	.long	.LBB11
	.long	.LBE11
	.uleb128 0x2e
	.long	.LASF61
	.byte	0x1
	.value	0x834
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x34
	.long	.LBB12
	.long	.LBE12
	.uleb128 0x31
	.long	.LBB13
	.long	.LBE13
	.uleb128 0x2f
	.string	"cop"
	.byte	0x1
	.value	0x880
	.long	0x5b3
	.byte	0x2
	.byte	0x91
	.sleb128 -26
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0x898a
	.long	.LBB14
	.long	.LBE14
	.uleb128 0x2f
	.string	"cop"
	.byte	0x1
	.value	0x8b3
	.long	0x5b3
	.byte	0x2
	.byte	0x91
	.sleb128 -25
	.byte	0x0
	.uleb128 0x32
	.long	0x89a5
	.long	.LBB15
	.long	.LBE15
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x8bf
	.long	0x85f
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.byte	0x0
	.uleb128 0x31
	.long	.LBB16
	.long	.LBE16
	.uleb128 0x2f
	.string	"add_op0"
	.byte	0x1
	.value	0x935
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"add_op1"
	.byte	0x1
	.value	0x936
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0x89fc
	.long	.LBB17
	.long	.LBE17
	.uleb128 0x2e
	.long	.LASF61
	.byte	0x1
	.value	0x94f
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x34
	.long	.LBB18
	.long	.LBE18
	.byte	0x0
	.uleb128 0x32
	.long	0x8a17
	.long	.LBB19
	.long	.LBE19
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x982
	.long	0x85f
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd0f2
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.16527
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0x853
	.long	0xd0f7
	.byte	0x5
	.byte	0x3
	.long	retval.16514
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0x87f
	.long	0xd107
	.byte	0x5
	.byte	0x3
	.long	retval.16515
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0x8b2
	.long	0xd117
	.byte	0x5
	.byte	0x3
	.long	retval.16524
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0x961
	.long	0xd127
	.byte	0x5
	.byte	0x3
	.long	retval.16537
	.byte	0x0
	.uleb128 0x2b
	.long	0x8ac8
	.byte	0x1
	.string	"mips_restore_gp"
	.byte	0x1
	.value	0x9a2
	.byte	0x1
	.long	0x5a8
	.long	.LFB70
	.long	.LFE70
	.long	.LLST55
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0x9a1
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x9a1
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"loc"
	.byte	0x1
	.value	0x9a3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x2b
	.long	0x8b32
	.byte	0x1
	.string	"mips_sign_extend"
	.byte	0x1
	.value	0x9b6
	.byte	0x1
	.long	0x5a8
	.long	.LFB71
	.long	.LFE71
	.long	.LLST56
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x9b5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"dest"
	.byte	0x1
	.value	0x9b5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"src"
	.byte	0x1
	.value	0x9b5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2e
	.long	.LASF32
	.byte	0x1
	.value	0x9b7
	.long	0x212d
	.byte	0x3
	.byte	0x91
	.sleb128 -132
	.byte	0x0
	.uleb128 0x2b
	.long	0x8d26
	.byte	0x1
	.string	"mips_move_2words"
	.byte	0x1
	.value	0x9d1
	.byte	0x1
	.long	0x5a8
	.long	.LFB72
	.long	.LFE72
	.long	.LLST57
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0x9cf
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x9d0
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"ret"
	.byte	0x1
	.value	0x9d2
	.long	0x5a8
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2f
	.string	"op0"
	.byte	0x1
	.value	0x9d3
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2f
	.string	"op1"
	.byte	0x1
	.value	0x9d4
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF56
	.byte	0x1
	.value	0x9d5
	.long	0xf9c
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2e
	.long	.LASF57
	.byte	0x1
	.value	0x9d6
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF59
	.byte	0x1
	.value	0x9d7
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF60
	.byte	0x1
	.value	0x9d8
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2f
	.string	"delay"
	.byte	0x1
	.value	0x9d9
	.long	0x307
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x32
	.long	0x8c8c
	.long	.LBB20
	.long	.LBE20
	.uleb128 0x2f
	.string	"regno0"
	.byte	0x1
	.value	0x9f4
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x32
	.long	0x8c57
	.long	.LBB21
	.long	.LBE21
	.uleb128 0x2e
	.long	.LASF61
	.byte	0x1
	.value	0x9f8
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x34
	.long	.LBB22
	.long	.LBE22
	.uleb128 0x31
	.long	.LBB23
	.long	.LBE23
	.uleb128 0x2f
	.string	"cop"
	.byte	0x1
	.value	0xa51
	.long	0x5b3
	.byte	0x2
	.byte	0x91
	.sleb128 -26
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0x8c74
	.long	.LBB24
	.long	.LBE24
	.uleb128 0x2f
	.string	"cop"
	.byte	0x1
	.value	0xb11
	.long	0x5b3
	.byte	0x2
	.byte	0x91
	.sleb128 -25
	.byte	0x0
	.uleb128 0x31
	.long	.LBB25
	.long	.LBE25
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0xb2f
	.long	0x85f
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0x8cb2
	.long	.LBB26
	.long	.LBE26
	.uleb128 0x2e
	.long	.LASF61
	.byte	0x1
	.value	0xb73
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x34
	.long	.LBB27
	.long	.LBE27
	.byte	0x0
	.uleb128 0x32
	.long	0x8ccd
	.long	.LBB28
	.long	.LBE28
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0xb9f
	.long	0x85f
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd0ad
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.17076
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0xa47
	.long	0xd0b2
	.byte	0x5
	.byte	0x3
	.long	retval.17070
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0xa50
	.long	0xd0c2
	.byte	0x5
	.byte	0x3
	.long	retval.17071
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0xb10
	.long	0xd0d2
	.byte	0x5
	.byte	0x3
	.long	retval.17073
	.uleb128 0x2e
	.long	.LASF63
	.byte	0x1
	.value	0xb7a
	.long	0xd0e2
	.byte	0x5
	.byte	0x3
	.long	retval.17078
	.byte	0x0
	.uleb128 0x2b
	.long	0x8dab
	.byte	0x1
	.string	"mips_address_cost"
	.byte	0x1
	.value	0xbbb
	.byte	0x1
	.long	0x5bb
	.long	.LFB73
	.long	.LFE73
	.long	.LLST58
	.uleb128 0x2d
	.long	.LASF55
	.byte	0x1
	.value	0xbba
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x32
	.long	0x8d7e
	.long	.LBB29
	.long	.LBE29
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0xbc6
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x31
	.long	.LBB30
	.long	.LBE30
	.uleb128 0x2f
	.string	"plus0"
	.byte	0x1
	.value	0xbd9
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -32
	.uleb128 0x2f
	.string	"plus1"
	.byte	0x1
	.value	0xbda
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x8ded
	.byte	0x1
	.string	"pic_address_needs_scratch"
	.byte	0x1
	.value	0xc00
	.byte	0x1
	.long	0x5bb
	.long	.LFB74
	.long	.LFE74
	.long	.LLST59
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0xbff
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x30
	.long	0x8e40
	.string	"map_test_to_internal_test"
	.byte	0x1
	.value	0xc10
	.byte	0x1
	.long	0x736f
	.long	.LFB75
	.long	.LFE75
	.long	.LLST60
	.uleb128 0x2d
	.long	.LASF64
	.byte	0x1
	.value	0xc0f
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2f
	.string	"test"
	.byte	0x1
	.value	0xc11
	.long	0x736f
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x2b
	.long	0x909b
	.byte	0x1
	.string	"gen_int_relational"
	.byte	0x1
	.value	0xc43
	.byte	0x1
	.long	0x99
	.long	.LFB76
	.long	.LFE76
	.long	.LLST61
	.uleb128 0x2d
	.long	.LASF64
	.byte	0x1
	.value	0xc3d
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"result"
	.byte	0x1
	.value	0xc3e
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"cmp0"
	.byte	0x1
	.value	0xc3f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"cmp1"
	.byte	0x1
	.value	0xc40
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2c
	.string	"p_invert"
	.byte	0x1
	.value	0xc41
	.long	0xc96
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x11
	.long	0x8f79
	.string	"cmp_info"
	.byte	0x20
	.byte	0x1
	.value	0xc45
	.uleb128 0x13
	.long	.LASF64
	.byte	0x1
	.value	0xc46
	.long	0xf9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"const_low"
	.byte	0x1
	.value	0xc47
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x12
	.string	"const_high"
	.byte	0x1
	.value	0xc48
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x12
	.string	"const_add"
	.byte	0x1
	.value	0xc49
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x12
	.string	"reverse_regs"
	.byte	0x1
	.value	0xc4a
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x12
	.string	"invert_const"
	.byte	0x1
	.value	0xc4b
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x12
	.string	"invert_reg"
	.byte	0x1
	.value	0xc4c
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x13
	.long	.LASF44
	.byte	0x1
	.value	0xc4d
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.byte	0x0
	.uleb128 0x2f
	.string	"test"
	.byte	0x1
	.value	0xc5e
	.long	0x736f
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0xc5f
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2f
	.string	"p_info"
	.byte	0x1
	.value	0xc60
	.long	0x909b
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2f
	.string	"branch_p"
	.byte	0x1
	.value	0xc61
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"eqne_p"
	.byte	0x1
	.value	0xc62
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"invert"
	.byte	0x1
	.value	0xc63
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0xc64
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"reg2"
	.byte	0x1
	.value	0xc65
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x32
	.long	0x901f
	.long	.LBB31
	.long	.LBE31
	.uleb128 0x2e
	.long	.LASF31
	.byte	0x1
	.value	0xc8c
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.byte	0x0
	.uleb128 0x32
	.long	0x903d
	.long	.LBB32
	.long	.LBE32
	.uleb128 0x2f
	.string	"new"
	.byte	0x1
	.value	0xcac
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.byte	0x0
	.uleb128 0x32
	.long	0x905b
	.long	.LBB33
	.long	.LBE33
	.uleb128 0x2f
	.string	"temp"
	.byte	0x1
	.value	0xcc4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x32
	.long	0x9078
	.long	.LBB34
	.long	.LBE34
	.uleb128 0x2f
	.string	"one"
	.byte	0x1
	.value	0xceb
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x2e
	.long	.LASF65
	.byte	0x1
	.value	0xc50
	.long	0xd0a3
	.byte	0x5
	.byte	0x3
	.long	info.17815
	.uleb128 0x35
	.long	.LASF62
	.long	0xd0a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.17824
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x90a1
	.uleb128 0xe
	.long	0x8ec2
	.uleb128 0x36
	.long	0x910d
	.string	"get_float_compare_codes"
	.byte	0x1
	.value	0xd08
	.byte	0x1
	.long	.LFB77
	.long	.LFE77
	.long	.LLST62
	.uleb128 0x2c
	.string	"in_code"
	.byte	0x1
	.value	0xd07
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF66
	.byte	0x1
	.value	0xd07
	.long	0x910d
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"action_code"
	.byte	0x1
	.value	0xd07
	.long	0x910d
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xf9c
	.uleb128 0x33
	.long	0x91f1
	.byte	0x1
	.string	"gen_conditional_branch"
	.byte	0x1
	.value	0xd23
	.byte	0x1
	.long	.LFB78
	.long	.LFE78
	.long	.LLST63
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0xd21
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF64
	.byte	0x1
	.value	0xd22
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF5
	.byte	0x1
	.value	0xd24
	.long	0x2c7
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"cmp0"
	.byte	0x1
	.value	0xd25
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"cmp1"
	.byte	0x1
	.value	0xd26
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0xd27
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF66
	.byte	0x1
	.value	0xd28
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0xd29
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"invert"
	.byte	0x1
	.value	0xd2a
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"label1"
	.byte	0x1
	.value	0xd2b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"label2"
	.byte	0x1
	.value	0xd2b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0x92c7
	.byte	0x1
	.string	"gen_conditional_move"
	.byte	0x1
	.value	0xd6f
	.byte	0x1
	.long	.LFB79
	.long	.LFE79
	.long	.LLST64
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0xd6e
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2f
	.string	"op0"
	.byte	0x1
	.value	0xd70
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"op1"
	.byte	0x1
	.value	0xd71
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0xd72
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF66
	.byte	0x1
	.value	0xd73
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"move_code"
	.byte	0x1
	.value	0xd74
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"op_mode"
	.byte	0x1
	.value	0xd75
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"cmp_mode"
	.byte	0x1
	.value	0xd76
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"cmp_reg"
	.byte	0x1
	.value	0xd77
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.long	.LASF62
	.long	0xd08e
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18072
	.byte	0x0
	.uleb128 0x33
	.long	0x9343
	.byte	0x1
	.string	"mips_gen_conditional_trap"
	.byte	0x1
	.value	0xdc6
	.byte	0x1
	.long	.LFB80
	.long	.LFE80
	.long	.LLST65
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0xdc5
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2f
	.string	"op0"
	.byte	0x1
	.value	0xdc7
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"op1"
	.byte	0x1
	.value	0xdc7
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF66
	.byte	0x1
	.value	0xdc8
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0xdc9
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x2b
	.long	0x9390
	.byte	0x1
	.string	"fcc_register_operand"
	.byte	0x1
	.value	0xdef
	.byte	0x1
	.long	0x5bb
	.long	.LFB81
	.long	.LFE81
	.long	.LLST66
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0xded
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0xdee
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x33
	.long	0x940c
	.byte	0x1
	.string	"mips_emit_fcc_reload"
	.byte	0x1
	.value	0xe04
	.byte	0x1
	.long	.LFB82
	.long	.LFE82
	.long	.LLST67
	.uleb128 0x2c
	.string	"dest"
	.byte	0x1
	.value	0xe03
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"src"
	.byte	0x1
	.value	0xe03
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"scratch"
	.byte	0x1
	.value	0xe03
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"fp1"
	.byte	0x1
	.value	0xe05
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"fp2"
	.byte	0x1
	.value	0xe05
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x33
	.long	0x947c
	.byte	0x1
	.string	"mips_set_return_address"
	.byte	0x1
	.value	0xe1c
	.byte	0x1
	.long	.LFB83
	.long	.LFE83
	.long	.LLST68
	.uleb128 0x2d
	.long	.LASF35
	.byte	0x1
	.value	0xe1b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"scratch"
	.byte	0x1
	.value	0xe1b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF67
	.byte	0x1
	.value	0xe1d
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.long	.LASF62
	.long	0xd089
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18230
	.byte	0x0
	.uleb128 0x36
	.long	0x9584
	.string	"block_move_loop"
	.byte	0x1
	.value	0xe55
	.byte	0x1
	.long	.LFB84
	.long	.LFE84
	.long	.LLST69
	.uleb128 0x2d
	.long	.LASF68
	.byte	0x1
	.value	0xe4f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF69
	.byte	0x1
	.value	0xe50
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF18
	.byte	0x1
	.value	0xe51
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.long	.LASF15
	.byte	0x1
	.value	0xe52
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2d
	.long	.LASF70
	.byte	0x1
	.value	0xe53
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2d
	.long	.LASF71
	.byte	0x1
	.value	0xe54
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x2f
	.string	"dest_mem"
	.byte	0x1
	.value	0xe56
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"src_mem"
	.byte	0x1
	.value	0xe57
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF72
	.byte	0x1
	.value	0xe58
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF54
	.byte	0x1
	.value	0xe59
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"final_src"
	.byte	0x1
	.value	0xe5a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF73
	.byte	0x1
	.value	0xe5b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2e
	.long	.LASF74
	.byte	0x1
	.value	0xe5c
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.long	.LASF62
	.long	0xd084
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18278
	.byte	0x0
	.uleb128 0x36
	.long	0x95d7
	.string	"block_move_call"
	.byte	0x1
	.value	0xe9d
	.byte	0x1
	.long	.LFB85
	.long	.LFE85
	.long	.LLST70
	.uleb128 0x2d
	.long	.LASF68
	.byte	0x1
	.value	0xe9a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF69
	.byte	0x1
	.value	0xe9b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF73
	.byte	0x1
	.value	0xe9c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x33
	.long	0x96f4
	.byte	0x1
	.string	"expand_block_move"
	.byte	0x1
	.value	0xebd
	.byte	0x1
	.long	.LFB86
	.long	.LFE86
	.long	.LLST71
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0xebc
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2e
	.long	.LASF73
	.byte	0x1
	.value	0xebe
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF72
	.byte	0x1
	.value	0xebf
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2f
	.string	"constp"
	.byte	0x1
	.value	0xec0
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF18
	.byte	0x1
	.value	0xec1
	.long	0x8d6
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2e
	.long	.LASF15
	.byte	0x1
	.value	0xec2
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF71
	.byte	0x1
	.value	0xec3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2e
	.long	.LASF70
	.byte	0x1
	.value	0xec4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF69
	.byte	0x1
	.value	0xec5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2e
	.long	.LASF68
	.byte	0x1
	.value	0xec6
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x31
	.long	.LBB35
	.long	.LBE35
	.uleb128 0x2f
	.string	"temp"
	.byte	0x1
	.value	0xee9
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"aligned_label"
	.byte	0x1
	.value	0xeea
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"join_label"
	.byte	0x1
	.value	0xeeb
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2e
	.long	.LASF74
	.byte	0x1
	.value	0xeec
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x9950
	.byte	0x1
	.string	"output_block_move"
	.byte	0x1
	.value	0xf2e
	.byte	0x1
	.long	0x5a8
	.long	.LFB87
	.long	.LFE87
	.long	.LLST72
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0xf2a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0xf2b
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF75
	.byte	0x1
	.value	0xf2c
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"move_type"
	.byte	0x1
	.value	0xf2d
	.long	0x512
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2e
	.long	.LASF68
	.byte	0x1
	.value	0xf2f
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF69
	.byte	0x1
	.value	0xf30
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2e
	.long	.LASF18
	.byte	0x1
	.value	0xf31
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2e
	.long	.LASF15
	.byte	0x1
	.value	0xf32
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2f
	.string	"num"
	.byte	0x1
	.value	0xf33
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0xf34
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2f
	.string	"use_lwl_lwr"
	.byte	0x1
	.value	0xf35
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"last_operand"
	.byte	0x1
	.value	0xf36
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"safe_regs"
	.byte	0x1
	.value	0xf37
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0xf38
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"xoperands"
	.byte	0x1
	.value	0xf39
	.long	0x9950
	.byte	0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x37
	.long	0x98aa
	.byte	0x1c
	.byte	0x1
	.value	0xf3b
	.uleb128 0x12
	.string	"load"
	.byte	0x1
	.value	0xf3c
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x12
	.string	"load_nop"
	.byte	0x1
	.value	0xf3d
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x12
	.string	"store"
	.byte	0x1
	.value	0xf3e
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x12
	.string	"final"
	.byte	0x1
	.value	0xf3f
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x12
	.string	"last_store"
	.byte	0x1
	.value	0xf40
	.long	0x5a8
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x13
	.long	.LASF13
	.byte	0x1
	.value	0xf41
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x13
	.long	.LASF1
	.byte	0x1
	.value	0xf42
	.long	0xca4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.byte	0x0
	.uleb128 0x2f
	.string	"load_store"
	.byte	0x1
	.value	0xf43
	.long	0x9960
	.byte	0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x32
	.long	0x98f7
	.long	.LBB36
	.long	.LBE36
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x1037
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x31
	.long	.LBB37
	.long	.LBE37
	.uleb128 0x2e
	.long	.LASF76
	.byte	0x1
	.value	0x1047
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0x993f
	.long	.LBB38
	.long	.LBE38
	.uleb128 0x2f
	.string	"last_p"
	.byte	0x1
	.value	0x1056
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x1057
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x31
	.long	.LBB39
	.long	.LBE39
	.uleb128 0x2e
	.long	.LASF76
	.byte	0x1
	.value	0x1060
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd07f
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18642
	.byte	0x0
	.uleb128 0x15
	.long	0x9960
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0x9
	.byte	0x0
	.uleb128 0x15
	.long	0x9970
	.long	0x9826
	.uleb128 0x16
	.long	0x815
	.byte	0x3
	.byte	0x0
	.uleb128 0x33
	.long	0x9a0e
	.byte	0x1
	.string	"init_cumulative_args"
	.byte	0x1
	.value	0x1088
	.byte	0x1
	.long	.LFB88
	.long	.LFE88
	.long	.LLST73
	.uleb128 0x2c
	.string	"cum"
	.byte	0x1
	.value	0x1085
	.long	0x9a0e
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"fntype"
	.byte	0x1
	.value	0x1086
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"libname"
	.byte	0x1
	.value	0x1087
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"param"
	.byte	0x1
	.value	0x108a
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x2f
	.string	"next_param"
	.byte	0x1
	.value	0x108a
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x2f
	.string	"zero_cum"
	.byte	0x1
	.value	0x1089
	.long	0x81c
	.byte	0x5
	.byte	0x3
	.long	zero_cum.19121
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x81c
	.uleb128 0x38
	.long	0x9ab8
	.long	.LASF53
	.byte	0x1
	.value	0x10b5
	.byte	0x1
	.long	.LFB89
	.long	.LFE89
	.long	.LLST74
	.uleb128 0x2c
	.string	"cum"
	.byte	0x1
	.value	0x10b0
	.long	0x9ab8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x10b1
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x10b2
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.long	.LASF77
	.byte	0x1
	.value	0x10b3
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2d
	.long	.LASF65
	.byte	0x1
	.value	0x10b4
	.long	0x9ac3
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2f
	.string	"even_reg_p"
	.byte	0x1
	.value	0x10b6
	.long	0x211f
	.byte	0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x2f
	.string	"num_words"
	.byte	0x1
	.value	0x10b7
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"max_regs"
	.byte	0x1
	.value	0x10b7
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9abe
	.uleb128 0xe
	.long	0x81c
	.uleb128 0x3
	.byte	0x4
	.long	0x7528
	.uleb128 0x33
	.long	0x9b6b
	.byte	0x1
	.string	"function_arg_advance"
	.byte	0x1
	.value	0x1119
	.byte	0x1
	.long	.LFB90
	.long	.LFE90
	.long	.LLST75
	.uleb128 0x2c
	.string	"cum"
	.byte	0x1
	.value	0x1115
	.long	0x9a0e
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x1116
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x1117
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.long	.LASF77
	.byte	0x1
	.value	0x1118
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2e
	.long	.LASF65
	.byte	0x1
	.value	0x111a
	.long	0x7528
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x31
	.long	.LBB40
	.long	.LBE40
	.uleb128 0x2f
	.string	"amount"
	.byte	0x1
	.value	0x1134
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0x1135
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x9c4b
	.byte	0x1
	.string	"function_arg"
	.byte	0x1
	.value	0x115a
	.byte	0x1
	.long	0xa4
	.long	.LFB91
	.long	.LFE91
	.long	.LLST76
	.uleb128 0x2c
	.string	"cum"
	.byte	0x1
	.value	0x1156
	.long	0x9ab8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x1157
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x1158
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.long	.LASF77
	.byte	0x1
	.value	0x1159
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2e
	.long	.LASF65
	.byte	0x1
	.value	0x115b
	.long	0x7528
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x31
	.long	.LBB41
	.long	.LBE41
	.uleb128 0x2f
	.string	"field"
	.byte	0x1
	.value	0x1182
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x31
	.long	.LBB42
	.long	.LBE42
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x1192
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"bitpos"
	.byte	0x1
	.value	0x1193
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"ret"
	.byte	0x1
	.value	0x1194
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x31
	.long	.LBB43
	.long	.LBE43
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0x119e
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x9ccc
	.byte	0x1
	.string	"function_arg_partial_nregs"
	.byte	0x1
	.value	0x11d7
	.byte	0x1
	.long	0x5bb
	.long	.LFB92
	.long	.LFE92
	.long	.LLST77
	.uleb128 0x2c
	.string	"cum"
	.byte	0x1
	.value	0x11d3
	.long	0x9ab8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x11d4
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x11d5
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.long	.LASF77
	.byte	0x1
	.value	0x11d6
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2e
	.long	.LASF65
	.byte	0x1
	.value	0x11d8
	.long	0x7528
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x2b
	.long	0x9dfa
	.byte	0x1
	.string	"mips_setup_incoming_varargs"
	.byte	0x1
	.value	0x11e4
	.byte	0x1
	.long	0x5bb
	.long	.LFB93
	.long	.LFE93
	.long	.LLST78
	.uleb128 0x2c
	.string	"cum"
	.byte	0x1
	.value	0x11e0
	.long	0x9ab8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x11e1
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x11e2
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"no_rtl"
	.byte	0x1
	.value	0x11e3
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2f
	.string	"local_cum"
	.byte	0x1
	.value	0x11e5
	.long	0x81c
	.byte	0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2f
	.string	"gp_saved"
	.byte	0x1
	.value	0x11e6
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"fp_saved"
	.byte	0x1
	.value	0x11e6
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x32
	.long	0x9dab
	.long	.LBB44
	.long	.LBE44
	.uleb128 0x2f
	.string	"ptr"
	.byte	0x1
	.value	0x11fc
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"mem"
	.byte	0x1
	.value	0x11fc
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x31
	.long	.LBB45
	.long	.LBE45
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0x1211
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"off"
	.byte	0x1
	.value	0x1212
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x1212
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x31
	.long	.LBB46
	.long	.LBE46
	.uleb128 0x2f
	.string	"ptr"
	.byte	0x1
	.value	0x121f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0x9e8f
	.byte	0x1
	.string	"mips_build_va_list"
	.byte	0x1
	.value	0x1240
	.byte	0x1
	.long	0x1e0
	.long	.LFB94
	.long	.LFE94
	.long	.LLST79
	.uleb128 0x31
	.long	.LBB47
	.long	.LBE47
	.uleb128 0x2e
	.long	.LASF78
	.byte	0x1
	.value	0x1243
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF79
	.byte	0x1
	.value	0x1243
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF80
	.byte	0x1
	.value	0x1243
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2e
	.long	.LASF81
	.byte	0x1
	.value	0x1243
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF82
	.byte	0x1
	.value	0x1243
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"record"
	.byte	0x1
	.value	0x1243
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0x9ff8
	.byte	0x1
	.string	"mips_va_start"
	.byte	0x1
	.value	0x126c
	.byte	0x1
	.long	.LFB95
	.long	.LFE95
	.long	.LLST80
	.uleb128 0x2c
	.string	"valist"
	.byte	0x1
	.value	0x126a
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"nextarg"
	.byte	0x1
	.value	0x126b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"cum"
	.byte	0x1
	.value	0x126d
	.long	0x9ab8
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x31
	.long	.LBB48
	.long	.LBE48
	.uleb128 0x2f
	.string	"gpr_save_area_size"
	.byte	0x1
	.value	0x127a
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x31
	.long	.LBB49
	.long	.LBE49
	.uleb128 0x2e
	.long	.LASF78
	.byte	0x1
	.value	0x1281
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF79
	.byte	0x1
	.value	0x1281
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF80
	.byte	0x1
	.value	0x1281
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2e
	.long	.LASF81
	.byte	0x1
	.value	0x1281
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF82
	.byte	0x1
	.value	0x1281
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"ovfl"
	.byte	0x1
	.value	0x1282
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"gtop"
	.byte	0x1
	.value	0x1282
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"ftop"
	.byte	0x1
	.value	0x1282
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"goff"
	.byte	0x1
	.value	0x1282
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"foff"
	.byte	0x1
	.value	0x1282
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"t"
	.byte	0x1
	.value	0x1283
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"fpr_offset"
	.byte	0x1
	.value	0x1284
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"fpr_save_area_size"
	.byte	0x1
	.value	0x1285
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xa1ac
	.byte	0x1
	.string	"mips_va_arg"
	.byte	0x1
	.value	0x12cd
	.byte	0x1
	.long	0xa4
	.long	.LFB96
	.long	.LFE96
	.long	.LLST81
	.uleb128 0x2c
	.string	"valist"
	.byte	0x1
	.value	0x12cc
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x12cc
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x12ce
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2f
	.string	"rsize"
	.byte	0x1
	.value	0x12ce
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2f
	.string	"addr_rtx"
	.byte	0x1
	.value	0x12cf
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2f
	.string	"t"
	.byte	0x1
	.value	0x12d0
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x32
	.long	0xa192
	.long	.LBB50
	.long	.LBE50
	.uleb128 0x2f
	.string	"indirect"
	.byte	0x1
	.value	0x12d7
	.long	0x211f
	.byte	0x2
	.byte	0x91
	.sleb128 -25
	.uleb128 0x2f
	.string	"r"
	.byte	0x1
	.value	0x12d8
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x32
	.long	0xa0d1
	.long	.LBB51
	.long	.LBE51
	.uleb128 0x2f
	.string	"gpr"
	.byte	0x1
	.value	0x12ea
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.byte	0x0
	.uleb128 0x31
	.long	.LBB52
	.long	.LBE52
	.uleb128 0x2e
	.long	.LASF78
	.byte	0x1
	.value	0x1309
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF79
	.byte	0x1
	.value	0x1309
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2e
	.long	.LASF80
	.byte	0x1
	.value	0x1309
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF81
	.byte	0x1
	.value	0x1309
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF82
	.byte	0x1
	.value	0x1309
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2f
	.string	"ovfl"
	.byte	0x1
	.value	0x130a
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"top"
	.byte	0x1
	.value	0x130a
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"off"
	.byte	0x1
	.value	0x130a
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"lab_over"
	.byte	0x1
	.value	0x130b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"lab_false"
	.byte	0x1
	.value	0x130b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"osize"
	.byte	0x1
	.value	0x130c
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -96
	.byte	0x0
	.byte	0x0
	.uleb128 0x31
	.long	.LBB53
	.long	.LBE53
	.uleb128 0x2e
	.long	.LASF15
	.byte	0x1
	.value	0x1399
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.byte	0x0
	.uleb128 0x36
	.long	0xa203
	.string	"abort_with_insn"
	.byte	0x1
	.value	0x13ba
	.byte	0x1
	.long	.LFB97
	.long	.LFE97
	.long	.LLST82
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x13b8
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"reason"
	.byte	0x1
	.value	0x13b9
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.long	.LASF62
	.long	0xd06a
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.20475
	.byte	0x0
	.uleb128 0x36
	.long	0xa23e
	.string	"mips_set_architecture"
	.byte	0x1
	.value	0x13c6
	.byte	0x1
	.long	.LFB98
	.long	.LFE98
	.long	.LLST83
	.uleb128 0x2d
	.long	.LASF65
	.byte	0x1
	.value	0x13c5
	.long	0xa23e
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa244
	.uleb128 0xe
	.long	0x567
	.uleb128 0x36
	.long	0xa27c
	.string	"mips_set_tune"
	.byte	0x1
	.value	0x13d5
	.byte	0x1
	.long	.LFB99
	.long	.LFE99
	.long	.LLST84
	.uleb128 0x2d
	.long	.LASF65
	.byte	0x1
	.value	0x13d4
	.long	0xa23e
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x33
	.long	0xa341
	.byte	0x1
	.string	"override_options"
	.byte	0x1
	.value	0x13e3
	.byte	0x1
	.long	.LFB100
	.long	.LFE100
	.long	.LLST85
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x13e4
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"start"
	.byte	0x1
	.value	0x13e4
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x13e4
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0x13e5
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x32
	.long	0xa2fe
	.long	.LBB54
	.long	.LBE54
	.uleb128 0x2f
	.string	"level"
	.byte	0x1
	.value	0x1418
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x31
	.long	.LBB55
	.long	.LBE55
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x1548
	.long	0x5bb
	.byte	0x2
	.byte	0x75
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF19
	.byte	0x1
	.value	0x1549
	.long	0xeed
	.byte	0x2
	.byte	0x75
	.sleb128 -48
	.uleb128 0x31
	.long	.LBB56
	.long	.LBE56
	.uleb128 0x2f
	.string	"temp"
	.byte	0x1
	.value	0x154d
	.long	0x5bb
	.byte	0x2
	.byte	0x75
	.sleb128 -44
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xa3e8
	.byte	0x1
	.string	"mips_conditional_register_usage"
	.byte	0x1
	.value	0x1593
	.byte	0x1
	.long	.LFB101
	.long	.LFE101
	.long	.LLST86
	.uleb128 0x32
	.long	0xa394
	.long	.LBB57
	.long	.LBE57
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x1596
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x32
	.long	0xa3b1
	.long	.LBB58
	.long	.LBE58
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x159f
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x32
	.long	0xa3ce
	.long	.LBB59
	.long	.LBE59
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x15ba
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x31
	.long	.LBB60
	.long	.LBE60
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x15c1
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x39
	.string	"mips_init_machine_status"
	.byte	0x1
	.value	0x15ca
	.byte	0x1
	.long	0x6831
	.long	.LFB102
	.long	.LFE102
	.long	.LLST87
	.uleb128 0x33
	.long	0xa45a
	.byte	0x1
	.string	"mips_order_regs_for_local_alloc"
	.byte	0x1
	.value	0x15d6
	.byte	0x1
	.long	.LFB103
	.long	.LFE103
	.long	.LLST88
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x15d7
	.long	0x5bb
	.byte	0x2
	.byte	0x75
	.sleb128 -8
	.byte	0x0
	.uleb128 0x2b
	.long	0xa4ea
	.byte	0x1
	.string	"mips_debugger_offset"
	.byte	0x1
	.value	0x15f3
	.byte	0x1
	.long	0x8c5
	.long	.LFB104
	.long	.LFE104
	.long	.LLST89
	.uleb128 0x2d
	.long	.LASF55
	.byte	0x1
	.value	0x15f1
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF13
	.byte	0x1
	.value	0x15f2
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"offset2"
	.byte	0x1
	.value	0x15f4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0x15f5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x31
	.long	.LBB61
	.long	.LBE61
	.uleb128 0x2f
	.string	"frame_size"
	.byte	0x1
	.value	0x15fd
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xa5dc
	.byte	0x1
	.string	"print_operand"
	.byte	0x1
	.value	0x1651
	.byte	0x1
	.long	.LFB105
	.long	.LFE105
	.long	.LLST90
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x164e
	.long	0x6c04
	.byte	0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2c
	.string	"op"
	.byte	0x1
	.value	0x164f
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x2c
	.string	"letter"
	.byte	0x1
	.value	0x1650
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2e
	.long	.LASF0
	.byte	0x1
	.value	0x1652
	.long	0xf9c
	.byte	0x3
	.byte	0x75
	.sleb128 -144
	.uleb128 0x32
	.long	0xa56d
	.long	.LBB62
	.long	.LBE62
	.uleb128 0x2e
	.long	.LASF84
	.byte	0x1
	.value	0x1713
	.long	0xa5dc
	.byte	0x3
	.byte	0x91
	.sleb128 -124
	.byte	0x0
	.uleb128 0x32
	.long	0xa58e
	.long	.LBB63
	.long	.LBE63
	.uleb128 0x2f
	.string	"regnum"
	.byte	0x1
	.value	0x171b
	.long	0x5bb
	.byte	0x3
	.byte	0x75
	.sleb128 -140
	.byte	0x0
	.uleb128 0x32
	.long	0xa5af
	.long	.LBB64
	.long	.LBE64
	.uleb128 0x2f
	.string	"regnum"
	.byte	0x1
	.value	0x172a
	.long	0x5bb
	.byte	0x3
	.byte	0x75
	.sleb128 -136
	.byte	0x0
	.uleb128 0x32
	.long	0xa5cb
	.long	.LBB65
	.long	.LBE65
	.uleb128 0x2f
	.string	"s"
	.byte	0x1
	.value	0x1744
	.long	0xa5ec
	.byte	0x3
	.byte	0x91
	.sleb128 -124
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd065
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.21240
	.byte	0x0
	.uleb128 0x15
	.long	0xa5ec
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x63
	.byte	0x0
	.uleb128 0x15
	.long	0xa5fc
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x3b
	.byte	0x0
	.uleb128 0x33
	.long	0xa6bd
	.byte	0x1
	.string	"print_operand_address"
	.byte	0x1
	.value	0x177b
	.byte	0x1
	.long	.LFB106
	.long	.LFE106
	.long	.LLST91
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x1779
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF55
	.byte	0x1
	.value	0x177a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x32
	.long	0xa674
	.long	.LBB66
	.long	.LBE66
	.uleb128 0x2f
	.string	"arg0"
	.byte	0x1
	.value	0x178b
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x2f
	.string	"arg1"
	.byte	0x1
	.value	0x178c
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.byte	0x0
	.uleb128 0x31
	.long	.LBB67
	.long	.LBE67
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0x179d
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -20
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x179e
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -16
	.uleb128 0x2f
	.string	"arg0"
	.byte	0x1
	.value	0x179f
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -12
	.uleb128 0x2f
	.string	"arg1"
	.byte	0x1
	.value	0x17a0
	.long	0x99
	.byte	0x2
	.byte	0x75
	.sleb128 -8
	.byte	0x0
	.byte	0x0
	.uleb128 0x30
	.long	0xa71e
	.string	"mips_assemble_integer"
	.byte	0x1
	.value	0x17de
	.byte	0x1
	.long	0x211f
	.long	.LFB107
	.long	.LFE107
	.long	.LLST92
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x17db
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF14
	.byte	0x1
	.value	0x17dc
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"aligned_p"
	.byte	0x1
	.value	0x17dd
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x2b
	.long	0xa7a5
	.byte	0x1
	.string	"mips_output_external"
	.byte	0x1
	.value	0x17fc
	.byte	0x1
	.long	0x5bb
	.long	.LFB108
	.long	.LFE108
	.long	.LLST93
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x17f9
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF4
	.byte	0x1
	.value	0x17fa
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF6
	.byte	0x1
	.value	0x17fb
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"p"
	.byte	0x1
	.value	0x17fd
	.long	0x75fd
	.byte	0x1
	.byte	0x52
	.uleb128 0x2f
	.string	"len"
	.byte	0x1
	.value	0x17fe
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2e
	.long	.LASF43
	.byte	0x1
	.value	0x17ff
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xa827
	.byte	0x1
	.string	"mips_output_filename"
	.byte	0x1
	.value	0x183e
	.byte	0x1
	.long	.LFB109
	.long	.LFE109
	.long	.LLST94
	.uleb128 0x2d
	.long	.LASF85
	.byte	0x1
	.value	0x183c
	.long	0x6c04
	.byte	0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2d
	.long	.LASF6
	.byte	0x1
	.value	0x183d
	.long	0x5a8
	.byte	0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2f
	.string	"ltext_label_name"
	.byte	0x1
	.value	0x1840
	.long	0xa5dc
	.byte	0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2f
	.string	"first_time"
	.byte	0x1
	.value	0x183f
	.long	0x5bb
	.byte	0x5
	.byte	0x3
	.long	first_time.21708
	.byte	0x0
	.uleb128 0x33
	.long	0xa870
	.byte	0x1
	.string	"mips_output_lineno"
	.byte	0x1
	.value	0x1877
	.byte	0x1
	.long	.LFB110
	.long	.LFE110
	.long	.LLST95
	.uleb128 0x2d
	.long	.LASF85
	.byte	0x1
	.value	0x1875
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"line"
	.byte	0x1
	.value	0x1876
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x33
	.long	0xa915
	.byte	0x1
	.string	"mips_output_ascii"
	.byte	0x1
	.value	0x1890
	.byte	0x1
	.long	.LFB111
	.long	.LFE111
	.long	.LLST96
	.uleb128 0x2d
	.long	.LASF85
	.byte	0x1
	.value	0x188d
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"string_param"
	.byte	0x1
	.value	0x188e
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"len"
	.byte	0x1
	.value	0x188f
	.long	0x85f
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x1891
	.long	0x85f
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"cur_pos"
	.byte	0x1
	.value	0x1892
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x2e
	.long	.LASF3
	.byte	0x1
	.value	0x1893
	.long	0xbbb
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x31
	.long	.LBB68
	.long	.LBE68
	.uleb128 0x2f
	.string	"c"
	.byte	0x1
	.value	0x1899
	.long	0x5bb
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xa9a0
	.byte	0x1
	.string	"final_prescan_insn"
	.byte	0x1
	.value	0x18ed
	.byte	0x1
	.long	.LFB112
	.long	.LFE112
	.long	.LLST97
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x18ea
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"opvec"
	.byte	0x1
	.value	0x18eb
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"noperands"
	.byte	0x1
	.value	0x18ec
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x31
	.long	.LBB69
	.long	.LBE69
	.uleb128 0x2f
	.string	"pattern"
	.byte	0x1
	.value	0x18f0
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2e
	.long	.LASF29
	.byte	0x1
	.value	0x18f1
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xaa0e
	.byte	0x1
	.string	"mips_asm_file_start"
	.byte	0x1
	.value	0x1918
	.byte	0x1
	.long	.LFB113
	.long	.LFE113
	.long	.LLST98
	.uleb128 0x2d
	.long	.LASF85
	.byte	0x1
	.value	0x1917
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x32
	.long	0xa9fd
	.long	.LBB70
	.long	.LBE70
	.uleb128 0x2f
	.string	"abi_string"
	.byte	0x1
	.value	0x192d
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd050
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.21895
	.byte	0x0
	.uleb128 0x33
	.long	0xaa62
	.byte	0x1
	.string	"mips_asm_file_end"
	.byte	0x1
	.value	0x196b
	.byte	0x1
	.long	.LFB114
	.long	.LFE114
	.long	.LLST99
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x196a
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2e
	.long	.LASF86
	.byte	0x1
	.value	0x196c
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"p"
	.byte	0x1
	.value	0x196d
	.long	0x75fd
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x36
	.long	0xaacb
	.string	"copy_file_data"
	.byte	0x1
	.value	0x1993
	.byte	0x1
	.long	.LFB115
	.long	.LFE115
	.long	.LLST100
	.uleb128 0x2c
	.string	"to"
	.byte	0x1
	.value	0x1992
	.long	0x6c04
	.byte	0x4
	.byte	0x91
	.sleb128 -8224
	.uleb128 0x2c
	.string	"from"
	.byte	0x1
	.value	0x1992
	.long	0x6c04
	.byte	0x4
	.byte	0x91
	.sleb128 -8228
	.uleb128 0x2e
	.long	.LASF84
	.byte	0x1
	.value	0x1994
	.long	0xaacb
	.byte	0x4
	.byte	0x91
	.sleb128 -8208
	.uleb128 0x2f
	.string	"len"
	.byte	0x1
	.value	0x1995
	.long	0x85f
	.byte	0x4
	.byte	0x91
	.sleb128 -8212
	.byte	0x0
	.uleb128 0x15
	.long	0xaadc
	.long	0x5b3
	.uleb128 0x3a
	.long	0x815
	.value	0x1fff
	.byte	0x0
	.uleb128 0x33
	.long	0xab70
	.byte	0x1
	.string	"mips_output_aligned_decl_common"
	.byte	0x1
	.value	0x19b0
	.byte	0x1
	.long	.LFB116
	.long	.LFE116
	.long	.LLST101
	.uleb128 0x2d
	.long	.LASF85
	.byte	0x1
	.value	0x19ab
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2d
	.long	.LASF4
	.byte	0x1
	.value	0x19ac
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2d
	.long	.LASF6
	.byte	0x1
	.value	0x19ad
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2d
	.long	.LASF14
	.byte	0x1
	.value	0x19ae
	.long	0x8d6
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2d
	.long	.LASF15
	.byte	0x1
	.value	0x19af
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x2f
	.string	"format"
	.byte	0x1
	.value	0x19b1
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x33
	.long	0xac24
	.byte	0x1
	.string	"mips_declare_object"
	.byte	0x1
	.value	0x19e1
	.byte	0x1
	.long	.LFB117
	.long	.LFE117
	.long	.LLST102
	.uleb128 0x2d
	.long	.LASF85
	.byte	0x1
	.value	0x19de
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF6
	.byte	0x1
	.value	0x19de
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"init_string"
	.byte	0x1
	.value	0x19de
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"final_string"
	.byte	0x1
	.value	0x19de
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3b
	.uleb128 0x31
	.long	.LBB71
	.long	.LBE71
	.uleb128 0x2f
	.string	"ap"
	.byte	0x1
	.value	0x19e2
	.long	0x850
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x31
	.long	.LBB72
	.long	.LBE72
	.uleb128 0x31
	.long	.LBB73
	.long	.LBE73
	.uleb128 0x2e
	.long	.LASF86
	.byte	0x1
	.value	0x19ee
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xad6b
	.byte	0x1
	.string	"compute_frame_size"
	.byte	0x1
	.value	0x1a2d
	.byte	0x1
	.long	0x8c5
	.long	.LFB118
	.long	.LFE118
	.long	.LLST103
	.uleb128 0x2d
	.long	.LASF14
	.byte	0x1
	.value	0x1a2c
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x1a2e
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2e
	.long	.LASF48
	.byte	0x1
	.value	0x1a2f
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2e
	.long	.LASF49
	.byte	0x1
	.value	0x1a30
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2e
	.long	.LASF41
	.byte	0x1
	.value	0x1a31
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2e
	.long	.LASF50
	.byte	0x1
	.value	0x1a32
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2f
	.string	"gp_reg_rounded"
	.byte	0x1
	.value	0x1a33
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2e
	.long	.LASF51
	.byte	0x1
	.value	0x1a34
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF52
	.byte	0x1
	.value	0x1a35
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2f
	.string	"mask"
	.byte	0x1
	.value	0x1a36
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"fmask"
	.byte	0x1
	.value	0x1a37
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF87
	.byte	0x1
	.value	0x1a38
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x32
	.long	0xad34
	.long	.LBB74
	.long	.LBE74
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x1a74
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x32
	.long	0xad51
	.long	.LBB75
	.long	.LBE75
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x1aba
	.long	0x894
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x31
	.long	.LBB76
	.long	.LBE76
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x1acf
	.long	0x894
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xade3
	.byte	0x1
	.string	"mips_initial_elimination_offset"
	.byte	0x1
	.value	0x1ae6
	.byte	0x1
	.long	0x5bb
	.long	.LFB119
	.long	.LFE119
	.long	.LLST104
	.uleb128 0x2c
	.string	"from"
	.byte	0x1
	.value	0x1ae5
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"to"
	.byte	0x1
	.value	0x1ae5
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x1ae7
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.long	.LASF62
	.long	0xd04b
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.22546
	.byte	0x0
	.uleb128 0x30
	.long	0xae4d
	.string	"mips_add_large_offset_to_sp"
	.byte	0x1
	.value	0x1b19
	.byte	0x1
	.long	0x99
	.long	.LFB120
	.long	.LFE120
	.long	.LLST105
	.uleb128 0x2d
	.long	.LASF13
	.byte	0x1
	.value	0x1b18
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0x1b1a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"offset_rtx"
	.byte	0x1
	.value	0x1b1b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x36
	.long	0xae9a
	.string	"mips_annotate_frame_insn"
	.byte	0x1
	.value	0x1b2b
	.byte	0x1
	.long	.LFB121
	.long	.LFE121
	.long	.LLST106
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x1b2a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF88
	.byte	0x1
	.value	0x1b2a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x30
	.long	0xaf0e
	.string	"mips_frame_set"
	.byte	0x1
	.value	0x1b3a
	.byte	0x1
	.long	0x99
	.long	.LFB122
	.long	.LFE122
	.long	.LLST107
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x1b37
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF83
	.byte	0x1
	.value	0x1b38
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF13
	.byte	0x1
	.value	0x1b39
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2e
	.long	.LASF35
	.byte	0x1
	.value	0x1b3b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"set"
	.byte	0x1
	.value	0x1b3c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x36
	.long	0xafd0
	.string	"mips_emit_frame_related_store"
	.byte	0x1
	.value	0x1b4d
	.byte	0x1
	.long	.LFB123
	.long	.LFE123
	.long	.LLST108
	.uleb128 0x2c
	.string	"mem"
	.byte	0x1
	.value	0x1b4a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"reg"
	.byte	0x1
	.value	0x1b4b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF13
	.byte	0x1
	.value	0x1b4c
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2f
	.string	"dwarf_expr"
	.byte	0x1
	.value	0x1b4e
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x31
	.long	.LBB77
	.long	.LBE77
	.uleb128 0x2e
	.long	.LASF61
	.byte	0x1
	.value	0x1b56
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"regno2"
	.byte	0x1
	.value	0x1b57
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"set1"
	.byte	0x1
	.value	0x1b58
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"set2"
	.byte	0x1
	.value	0x1b59
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x36
	.long	0xb171
	.string	"save_restore_insns"
	.byte	0x1
	.value	0x1b67
	.byte	0x1
	.long	.LFB124
	.long	.LFE124
	.long	.LLST109
	.uleb128 0x2c
	.string	"store_p"
	.byte	0x1
	.value	0x1b64
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"large_reg"
	.byte	0x1
	.value	0x1b65
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"large_offset"
	.byte	0x1
	.value	0x1b66
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"mask"
	.byte	0x1
	.value	0x1b68
	.long	0x90f
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2f
	.string	"fmask"
	.byte	0x1
	.value	0x1b69
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2f
	.string	"real_mask"
	.byte	0x1
	.value	0x1b6a
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x1b6b
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2f
	.string	"base_reg_rtx"
	.byte	0x1
	.value	0x1b6c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF89
	.byte	0x1
	.value	0x1b6d
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2e
	.long	.LASF67
	.byte	0x1
	.value	0x1b6e
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2f
	.string	"fp_offset"
	.byte	0x1
	.value	0x1b6f
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2f
	.string	"end_offset"
	.byte	0x1
	.value	0x1b70
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x1b71
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x32
	.long	0xb122
	.long	.LBB78
	.long	.LBE78
	.uleb128 0x2e
	.long	.LASF90
	.byte	0x1
	.value	0x1bc4
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"mem_rtx"
	.byte	0x1
	.value	0x1bc5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.byte	0x0
	.uleb128 0x32
	.long	0xb160
	.long	.LBB79
	.long	.LBE79
	.uleb128 0x2f
	.string	"sz"
	.byte	0x1
	.value	0x1c27
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF90
	.byte	0x1
	.value	0x1c28
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"mem_rtx"
	.byte	0x1
	.value	0x1c29
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd046
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.22721
	.byte	0x0
	.uleb128 0x36
	.long	0xb2d3
	.string	"mips_output_function_prologue"
	.byte	0x1
	.value	0x1c40
	.byte	0x1
	.long	.LFB125
	.long	.LFE125
	.long	.LLST110
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x1c3e
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF14
	.byte	0x1
	.value	0x1c3f
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2f
	.string	"tsize"
	.byte	0x1
	.value	0x1c44
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x32
	.long	0xb2b6
	.long	.LBB80
	.long	.LBE80
	.uleb128 0x2f
	.string	"save16"
	.byte	0x1
	.value	0x1c8b
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2f
	.string	"save17"
	.byte	0x1
	.value	0x1c8c
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2f
	.string	"save31"
	.byte	0x1
	.value	0x1c8d
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2f
	.string	"savearg"
	.byte	0x1
	.value	0x1c8e
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x1c8f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x31
	.long	.LBB81
	.long	.LBE81
	.uleb128 0x2f
	.string	"note"
	.byte	0x1
	.value	0x1c98
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"set"
	.byte	0x1
	.value	0x1c98
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"src"
	.byte	0x1
	.value	0x1c98
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"dest"
	.byte	0x1
	.value	0x1c98
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"base"
	.byte	0x1
	.value	0x1c98
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x1c98
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2f
	.string	"hireg"
	.byte	0x1
	.value	0x1c99
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.byte	0x0
	.uleb128 0x31
	.long	.LBB82
	.long	.LBE82
	.uleb128 0x2f
	.string	"sp_str"
	.byte	0x1
	.value	0x1cfe
	.long	0x2128
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xb6a5
	.byte	0x1
	.string	"mips_expand_prologue"
	.byte	0x1
	.value	0x1d13
	.byte	0x1
	.long	.LFB126
	.long	.LFE126
	.long	.LLST111
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x1d14
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -160
	.uleb128 0x2f
	.string	"tsize"
	.byte	0x1
	.value	0x1d15
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -168
	.uleb128 0x2f
	.string	"tmp_rtx"
	.byte	0x1
	.value	0x1d16
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -156
	.uleb128 0x2f
	.string	"last_arg_is_vararg_marker"
	.byte	0x1
	.value	0x1d17
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -152
	.uleb128 0x2f
	.string	"fndecl"
	.byte	0x1
	.value	0x1d18
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -148
	.uleb128 0x2f
	.string	"fntype"
	.byte	0x1
	.value	0x1d19
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x2f
	.string	"fnargs"
	.byte	0x1
	.value	0x1d1a
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -140
	.uleb128 0x2f
	.string	"next_arg_reg"
	.byte	0x1
	.value	0x1d1b
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x1d1c
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x2f
	.string	"next_arg"
	.byte	0x1
	.value	0x1d1d
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2f
	.string	"cur_arg"
	.byte	0x1
	.value	0x1d1e
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2f
	.string	"args_so_far"
	.byte	0x1
	.value	0x1d1f
	.long	0x81c
	.byte	0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x2f
	.string	"reg_18_save"
	.byte	0x1
	.value	0x1d20
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2f
	.string	"store_args_on_stack"
	.byte	0x1
	.value	0x1d21
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x32
	.long	0xb472
	.long	.LBB83
	.long	.LBE83
	.uleb128 0x2e
	.long	.LASF5
	.byte	0x1
	.value	0x1d29
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2f
	.string	"function_result_decl"
	.byte	0x1
	.value	0x1d2a
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -108
	.byte	0x0
	.uleb128 0x3c
	.long	0xb4c3
	.long	.Ldebug_ranges0+0x0
	.uleb128 0x2f
	.string	"passed_type"
	.byte	0x1
	.value	0x1d3e
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2f
	.string	"passed_mode"
	.byte	0x1
	.value	0x1d3f
	.long	0xca4
	.byte	0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x2f
	.string	"entry_parm"
	.byte	0x1
	.value	0x1d40
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -96
	.byte	0x0
	.uleb128 0x32
	.long	0xb522
	.long	.LBB86
	.long	.LBE86
	.uleb128 0x2f
	.string	"adjust"
	.byte	0x1
	.value	0x1d70
	.long	0x198
	.byte	0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x2f
	.string	"num"
	.byte	0x1
	.value	0x1d71
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x31
	.long	.LBB87
	.long	.LBE87
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x1d75
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2f
	.string	"pattern"
	.byte	0x1
	.value	0x1d75
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0xb550
	.long	.LBB88
	.long	.LBE88
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x1d92
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2f
	.string	"ptr"
	.byte	0x1
	.value	0x1d93
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.byte	0x0
	.uleb128 0x32
	.long	0xb588
	.long	.LBB89
	.long	.LBE89
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x1dac
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x31
	.long	.LBB90
	.long	.LBE90
	.uleb128 0x2f
	.string	"incr"
	.byte	0x1
	.value	0x1db3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0xb5c3
	.long	.LBB91
	.long	.LBE91
	.uleb128 0x2e
	.long	.LASF90
	.byte	0x1
	.value	0x1dcd
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x2e
	.long	.LASF67
	.byte	0x1
	.value	0x1dce
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2e
	.long	.LASF89
	.byte	0x1
	.value	0x1dce
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.byte	0x0
	.uleb128 0x32
	.long	0xb694
	.long	.LBB92
	.long	.LBE92
	.uleb128 0x2e
	.long	.LASF91
	.byte	0x1
	.value	0x1df3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x32
	.long	0xb625
	.long	.LBB93
	.long	.LBE93
	.uleb128 0x2f
	.string	"adjustment_rtx"
	.byte	0x1
	.value	0x1dfb
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x1dfb
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF88
	.byte	0x1
	.value	0x1dfb
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x32
	.long	0xb642
	.long	.LBB94
	.long	.LBE94
	.uleb128 0x2e
	.long	.LASF90
	.byte	0x1
	.value	0x1e1c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x31
	.long	.LBB95
	.long	.LBE95
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x1e31
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x32
	.long	0xb678
	.long	.LBB96
	.long	.LBE96
	.uleb128 0x2f
	.string	"incr"
	.byte	0x1
	.value	0x1e40
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x31
	.long	.LBB97
	.long	.LBE97
	.uleb128 0x2f
	.string	"incr"
	.byte	0x1
	.value	0x1e4d
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd041
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.23414
	.byte	0x0
	.uleb128 0x36
	.long	0xb788
	.string	"mips_output_function_epilogue"
	.byte	0x1
	.value	0x1e78
	.byte	0x1
	.long	.LFB127
	.long	.LFE127
	.long	.LLST112
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x1e76
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF14
	.byte	0x1
	.value	0x1e77
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x2e
	.long	.LASF92
	.byte	0x1
	.value	0x1e79
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2e
	.long	.LASF3
	.byte	0x1
	.value	0x1e7a
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x32
	.long	0xb76e
	.long	.LBB98
	.long	.LBE98
	.uleb128 0x2f
	.string	"num_gp_regs"
	.byte	0x1
	.value	0x1e8c
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"num_fp_regs"
	.byte	0x1
	.value	0x1e8d
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2e
	.long	.LASF75
	.byte	0x1
	.value	0x1e8e
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF6
	.byte	0x1
	.value	0x1e8f
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x31
	.long	.LBB99
	.long	.LBE99
	.uleb128 0x2e
	.long	.LASF17
	.byte	0x1
	.value	0x1eb4
	.long	0x763b
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xb877
	.byte	0x1
	.string	"mips_expand_epilogue"
	.byte	0x1
	.value	0x1ed4
	.byte	0x1
	.long	.LFB128
	.long	.LFE128
	.long	.LLST113
	.uleb128 0x2f
	.string	"tsize"
	.byte	0x1
	.value	0x1ed5
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2e
	.long	.LASF91
	.byte	0x1
	.value	0x1ed6
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"tmp_rtx"
	.byte	0x1
	.value	0x1ed7
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x32
	.long	0xb866
	.long	.LBB100
	.long	.LBE100
	.uleb128 0x2f
	.string	"orig_tsize"
	.byte	0x1
	.value	0x1eeb
	.long	0x90f
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x32
	.long	0xb829
	.long	.LBB101
	.long	.LBE101
	.uleb128 0x2f
	.string	"g6_rtx"
	.byte	0x1
	.value	0x1efe
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x32
	.long	0xb849
	.long	.LBB102
	.long	.LBE102
	.uleb128 0x2f
	.string	"eh_ofs"
	.byte	0x1
	.value	0x1f29
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x31
	.long	.LBB103
	.long	.LBE103
	.uleb128 0x2f
	.string	"g6_rtx"
	.byte	0x1
	.value	0x1f44
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd03c
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.24026
	.byte	0x0
	.uleb128 0x2b
	.long	0xb8ba
	.byte	0x1
	.string	"mips_can_use_return_insn"
	.byte	0x1
	.value	0x1f66
	.byte	0x1
	.long	0x5bb
	.long	.LFB129
	.long	.LFE129
	.long	.LLST114
	.uleb128 0x2e
	.long	.LASF87
	.byte	0x1
	.value	0x1f67
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x30
	.long	0xb8f7
	.string	"symbolic_expression_p"
	.byte	0x1
	.value	0x1f86
	.byte	0x1
	.long	0x5bb
	.long	.LFB130
	.long	.LFE130
	.long	.LLST115
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x1f85
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x36
	.long	0xb950
	.string	"mips_select_rtx_section"
	.byte	0x1
	.value	0x1fa0
	.byte	0x1
	.long	.LFB131
	.long	.LFE131
	.long	.LLST116
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x1f9d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x1f9e
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF15
	.byte	0x1
	.value	0x1f9f
	.long	0x8d6
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x36
	.long	0xb9b8
	.string	"mips_select_section"
	.byte	0x1
	.value	0x1fd7
	.byte	0x1
	.long	.LFB132
	.long	.LFE132
	.long	.LLST117
	.uleb128 0x2d
	.long	.LASF4
	.byte	0x1
	.value	0x1fd4
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"reloc"
	.byte	0x1
	.value	0x1fd5
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF15
	.byte	0x1
	.value	0x1fd6
	.long	0x8d6
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x1fd8
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x36
	.long	0xba3e
	.string	"mips_encode_section_info"
	.byte	0x1
	.value	0x202d
	.byte	0x1
	.long	.LFB133
	.long	.LFE133
	.long	.LLST118
	.uleb128 0x2d
	.long	.LASF4
	.byte	0x1
	.value	0x202b
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF16
	.byte	0x1
	.value	0x202c
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x32
	.long	0xba24
	.long	.LBB104
	.long	.LBE104
	.uleb128 0x2f
	.string	"symref"
	.byte	0x1
	.value	0x2040
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x31
	.long	.LBB105
	.long	.LBE105
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x2073
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xbbb6
	.byte	0x1
	.string	"mips_function_value"
	.byte	0x1
	.value	0x2083
	.byte	0x1
	.long	0xa4
	.long	.LFB134
	.long	.LFE134
	.long	.LLST119
	.uleb128 0x2c
	.string	"valtype"
	.byte	0x1
	.value	0x2080
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"func"
	.byte	0x1
	.value	0x2081
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2082
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"reg"
	.byte	0x1
	.value	0x2084
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"mclass"
	.byte	0x1
	.value	0x2085
	.long	0xeed
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2e
	.long	.LASF44
	.byte	0x1
	.value	0x2086
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x32
	.long	0xbaed
	.long	.LBB106
	.long	.LBE106
	.uleb128 0x2f
	.string	"cmode"
	.byte	0x1
	.value	0x20a8
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.byte	0x0
	.uleb128 0x31
	.long	.LBB107
	.long	.LBE107
	.uleb128 0x2f
	.string	"field"
	.byte	0x1
	.value	0x20bc
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"fields"
	.byte	0x1
	.value	0x20bc
	.long	0xbbb6
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2f
	.string	"i"
	.byte	0x1
	.value	0x20bd
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x32
	.long	0xbb4b
	.long	.LBB108
	.long	.LBE108
	.uleb128 0x2f
	.string	"field_mode"
	.byte	0x1
	.value	0x20d3
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x31
	.long	.LBB109
	.long	.LBE109
	.uleb128 0x2f
	.string	"first_mode"
	.byte	0x1
	.value	0x20e0
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"second_mode"
	.byte	0x1
	.value	0x20e2
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"first_offset"
	.byte	0x1
	.value	0x20e4
	.long	0x8c5
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2f
	.string	"second_offset"
	.byte	0x1
	.value	0x20e5
	.long	0x8c5
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x15
	.long	0xbbc6
	.long	0x1e0
	.uleb128 0x16
	.long	0x815
	.byte	0x1
	.byte	0x0
	.uleb128 0x2b
	.long	0xbc4b
	.byte	0x1
	.string	"function_arg_pass_by_reference"
	.byte	0x1
	.value	0x2102
	.byte	0x1
	.long	0x5bb
	.long	.LFB135
	.long	.LFE135
	.long	.LLST120
	.uleb128 0x2c
	.string	"cum"
	.byte	0x1
	.value	0x20fe
	.long	0x9ab8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x20ff
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x2100
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2d
	.long	.LASF77
	.byte	0x1
	.value	0x2101
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x2103
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x2b
	.long	0xbcb1
	.byte	0x1
	.string	"mips_cannot_change_mode_class"
	.byte	0x1
	.value	0x2137
	.byte	0x1
	.long	0x211f
	.long	.LFB136
	.long	.LFE136
	.long	.LLST121
	.uleb128 0x2c
	.string	"from"
	.byte	0x1
	.value	0x2135
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"to"
	.byte	0x1
	.value	0x2135
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF19
	.byte	0x1
	.value	0x2136
	.long	0x5c2
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x2b
	.long	0xbd72
	.byte	0x1
	.string	"mips_secondary_reload_class"
	.byte	0x1
	.value	0x214f
	.byte	0x1
	.long	0x5c2
	.long	.LFB137
	.long	.LFE137
	.long	.LLST122
	.uleb128 0x2d
	.long	.LASF19
	.byte	0x1
	.value	0x214b
	.long	0x5c2
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x214c
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x214d
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"in_p"
	.byte	0x1
	.value	0x214e
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2f
	.string	"gr_regs"
	.byte	0x1
	.value	0x2150
	.long	0x5c2
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2e
	.long	.LASF83
	.byte	0x1
	.value	0x2151
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"gp_reg_p"
	.byte	0x1
	.value	0x2152
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x31
	.long	.LBB110
	.long	.LBE110
	.uleb128 0x2f
	.string	"off"
	.byte	0x1
	.value	0x2156
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xbdc0
	.byte	0x1
	.string	"mips_class_max_nregs"
	.byte	0x1
	.value	0x21fb
	.byte	0x1
	.long	0x5bb
	.long	.LFB138
	.long	.LFE138
	.long	.LLST123
	.uleb128 0x2d
	.long	.LASF19
	.byte	0x1
	.value	0x21f9
	.long	0x5c2
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x21fa
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0xbe2d
	.byte	0x1
	.string	"mips16_gp_pseudo_reg"
	.byte	0x1
	.value	0x2208
	.byte	0x1
	.long	0xa4
	.long	.LFB139
	.long	.LFE139
	.long	.LLST124
	.uleb128 0x31
	.long	.LBB111
	.long	.LBE111
	.uleb128 0x2f
	.string	"const_gp"
	.byte	0x1
	.value	0x220b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x220c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"scan"
	.byte	0x1
	.value	0x220c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xbe86
	.byte	0x1
	.string	"mips16_gp_offset"
	.byte	0x1
	.value	0x2233
	.byte	0x1
	.long	0xa4
	.long	.LFB140
	.long	.LFE140
	.long	.LLST125
	.uleb128 0x2c
	.string	"sym"
	.byte	0x1
	.value	0x2232
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2f
	.string	"gp"
	.byte	0x1
	.value	0x2234
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.long	.LASF62
	.long	0xd027
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.25359
	.byte	0x0
	.uleb128 0x2b
	.long	0xbec1
	.byte	0x1
	.string	"mips16_gp_offset_p"
	.byte	0x1
	.value	0x224a
	.byte	0x1
	.long	0x5bb
	.long	.LFB141
	.long	.LFE141
	.long	.LLST126
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x2249
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x36
	.long	0xbf0b
	.string	"mips16_output_gp_offset"
	.byte	0x1
	.value	0x226a
	.byte	0x1
	.long	.LFB142
	.long	.LFE142
	.long	.LLST127
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x2268
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x2269
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0xbf6b
	.byte	0x1
	.string	"mips16_constant_after_function_p"
	.byte	0x1
	.value	0x2291
	.byte	0x1
	.long	0x5bb
	.long	.LFB143
	.long	.LFE143
	.long	.LLST128
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x2290
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x31
	.long	.LBB112
	.long	.LBE112
	.uleb128 0x2f
	.string	"n"
	.byte	0x1
	.value	0x229c
	.long	0x763b
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xbfec
	.byte	0x1
	.string	"mips16_constant"
	.byte	0x1
	.value	0x22b4
	.byte	0x1
	.long	0x5bb
	.long	.LFB144
	.long	.LFE144
	.long	.LLST129
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x22b0
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x22b1
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF55
	.byte	0x1
	.value	0x22b2
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"addend"
	.byte	0x1
	.value	0x22b3
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x31
	.long	.LBB113
	.long	.LBE113
	.uleb128 0x2e
	.long	.LASF6
	.byte	0x1
	.value	0x22d9
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x36
	.long	0xc090
	.string	"mips16_fp_args"
	.byte	0x1
	.value	0x22fe
	.byte	0x1
	.long	.LFB145
	.long	.LFE145
	.long	.LLST130
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x22fb
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF8
	.byte	0x1
	.value	0x22fc
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"from_fp_p"
	.byte	0x1
	.value	0x22fd
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"s"
	.byte	0x1
	.value	0x22ff
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"gparg"
	.byte	0x1
	.value	0x2300
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"fparg"
	.byte	0x1
	.value	0x2300
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"f"
	.byte	0x1
	.value	0x2301
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.long	.LASF62
	.long	0xd012
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.25634
	.byte	0x0
	.uleb128 0x36
	.long	0xc13e
	.string	"build_mips16_function_stub"
	.byte	0x1
	.value	0x233b
	.byte	0x1
	.long	.LFB146
	.long	.LFE146
	.long	.LLST131
	.uleb128 0x2d
	.long	.LASF20
	.byte	0x1
	.value	0x233a
	.long	0x6c04
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2e
	.long	.LASF92
	.byte	0x1
	.value	0x233c
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"secname"
	.byte	0x1
	.value	0x233d
	.long	0x92e
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2e
	.long	.LASF93
	.byte	0x1
	.value	0x233d
	.long	0x92e
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"stubid"
	.byte	0x1
	.value	0x233e
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF94
	.byte	0x1
	.value	0x233e
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2e
	.long	.LASF95
	.byte	0x1
	.value	0x233f
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"f"
	.byte	0x1
	.value	0x2340
	.long	0x7fe
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x11
	.long	0xc183
	.string	"mips16_stub"
	.byte	0xc
	.byte	0x1
	.value	0x238a
	.uleb128 0x13
	.long	.LASF17
	.byte	0x1
	.value	0x238b
	.long	0xc183
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x13
	.long	.LASF6
	.byte	0x1
	.value	0x238c
	.long	0x92e
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x12
	.string	"fpret"
	.byte	0x1
	.value	0x238d
	.long	0x5bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xc13e
	.uleb128 0x2b
	.long	0xc336
	.byte	0x1
	.string	"build_mips16_call_stub"
	.byte	0x1
	.value	0x23a9
	.byte	0x1
	.long	0x5bb
	.long	.LFB147
	.long	.LFE147
	.long	.LLST132
	.uleb128 0x2d
	.long	.LASF63
	.byte	0x1
	.value	0x23a5
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x2c
	.string	"fnmem"
	.byte	0x1
	.value	0x23a6
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x2c
	.string	"arg_size"
	.byte	0x1
	.value	0x23a7
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -128
	.uleb128 0x2d
	.long	.LASF8
	.byte	0x1
	.value	0x23a8
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2f
	.string	"fpret"
	.byte	0x1
	.value	0x23aa
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x2f
	.string	"fn"
	.byte	0x1
	.value	0x23ab
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x2e
	.long	.LASF92
	.byte	0x1
	.value	0x23ac
	.long	0x5a8
	.byte	0x3
	.byte	0x91
	.sleb128 -108
	.uleb128 0x2f
	.string	"secname"
	.byte	0x1
	.value	0x23ad
	.long	0x92e
	.byte	0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x2e
	.long	.LASF93
	.byte	0x1
	.value	0x23ad
	.long	0x92e
	.byte	0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x2f
	.string	"l"
	.byte	0x1
	.value	0x23ae
	.long	0xc183
	.byte	0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x2f
	.string	"stubid"
	.byte	0x1
	.value	0x23af
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x2e
	.long	.LASF94
	.byte	0x1
	.value	0x23af
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x2e
	.long	.LASF95
	.byte	0x1
	.value	0x23b0
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2f
	.string	"f"
	.byte	0x1
	.value	0x23b1
	.long	0x7fe
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x32
	.long	0xc308
	.long	.LBB114
	.long	.LBE114
	.uleb128 0x2f
	.string	"buf"
	.byte	0x1
	.value	0x23df
	.long	0xc336
	.byte	0x2
	.byte	0x91
	.sleb128 -54
	.uleb128 0x2f
	.string	"id"
	.byte	0x1
	.value	0x23e0
	.long	0x1e0
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2f
	.string	"stub_fn"
	.byte	0x1
	.value	0x23e1
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2f
	.string	"stub_mem"
	.byte	0x1
	.value	0x23e1
	.long	0x99
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x23e1
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.byte	0x0
	.uleb128 0x32
	.long	0xc325
	.long	.LBB115
	.long	.LBE115
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x24bb
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xd00d
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.25778
	.byte	0x0
	.uleb128 0x15
	.long	0xc346
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x1d
	.byte	0x0
	.uleb128 0x36
	.long	0xc482
	.string	"mips16_optimize_gp"
	.byte	0x1
	.value	0x24e8
	.byte	0x1
	.long	.LFB148
	.long	.LFE148
	.long	.LLST133
	.uleb128 0x2d
	.long	.LASF16
	.byte	0x1
	.value	0x24e7
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2f
	.string	"gpcopy"
	.byte	0x1
	.value	0x24e9
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"slot"
	.byte	0x1
	.value	0x24e9
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x24e9
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x32
	.long	0xc3f4
	.long	.LBB116
	.long	.LBE116
	.uleb128 0x2f
	.string	"set"
	.byte	0x1
	.value	0x24f6
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x31
	.long	.LBB117
	.long	.LBE117
	.uleb128 0x2f
	.string	"base"
	.byte	0x1
	.value	0x2512
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF13
	.byte	0x1
	.value	0x2512
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0xc454
	.long	.LBB118
	.long	.LBE118
	.uleb128 0x2e
	.long	.LASF17
	.byte	0x1
	.value	0x2542
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x31
	.long	.LBB119
	.long	.LBE119
	.uleb128 0x2f
	.string	"set1"
	.byte	0x1
	.value	0x254b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"set2"
	.byte	0x1
	.value	0x254b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x31
	.long	.LBB120
	.long	.LBE120
	.uleb128 0x2f
	.string	"sym"
	.byte	0x1
	.value	0x2572
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0xc471
	.long	.LBB121
	.long	.LBE121
	.uleb128 0x2f
	.string	"set"
	.byte	0x1
	.value	0x2591
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xcff8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.26078
	.byte	0x0
	.uleb128 0x4
	.long	0xc4d0
	.string	"constant"
	.byte	0x10
	.byte	0x1
	.byte	0x54
	.uleb128 0x13
	.long	.LASF17
	.byte	0x1
	.value	0x25ba
	.long	0xc4d0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x13
	.long	.LASF31
	.byte	0x1
	.value	0x25bb
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x13
	.long	.LASF54
	.byte	0x1
	.value	0x25bc
	.long	0x99
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x13
	.long	.LASF1
	.byte	0x1
	.value	0x25bd
	.long	0xca4
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xc482
	.uleb128 0x30
	.long	0xc53e
	.string	"add_constant"
	.byte	0x1
	.value	0x25c7
	.byte	0x1
	.long	0x99
	.long	.LFB149
	.long	.LFE149
	.long	.LLST134
	.uleb128 0x2c
	.string	"pconstants"
	.byte	0x1
	.value	0x25c4
	.long	0xc53e
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"val"
	.byte	0x1
	.value	0x25c5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x25c6
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2f
	.string	"c"
	.byte	0x1
	.value	0x25c8
	.long	0xc4d0
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xc4d0
	.uleb128 0x36
	.long	0xc5dd
	.string	"dump_constants"
	.byte	0x1
	.value	0x25dd
	.byte	0x1
	.long	.LFB150
	.long	.LFE150
	.long	.LLST135
	.uleb128 0x2d
	.long	.LASF96
	.byte	0x1
	.value	0x25db
	.long	0xc4d0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x25dc
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"c"
	.byte	0x1
	.value	0x25de
	.long	0xc4d0
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF15
	.byte	0x1
	.value	0x25df
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x32
	.long	0xc5cc
	.long	.LBB122
	.long	.LBE122
	.uleb128 0x2f
	.string	"r"
	.byte	0x1
	.value	0x25e5
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2e
	.long	.LASF17
	.byte	0x1
	.value	0x25e6
	.long	0xc4d0
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x35
	.long	.LASF62
	.long	0xcfe3
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.26450
	.byte	0x0
	.uleb128 0x30
	.long	0xc63d
	.string	"mips_find_symbol"
	.byte	0x1
	.value	0x2627
	.byte	0x1
	.long	0x99
	.long	.LFB151
	.long	.LFE151
	.long	.LLST136
	.uleb128 0x2d
	.long	.LASF55
	.byte	0x1
	.value	0x2626
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x31
	.long	.LBB123
	.long	.LBE123
	.uleb128 0x2f
	.string	"l1"
	.byte	0x1
	.value	0x2630
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x2f
	.string	"l2"
	.byte	0x1
	.value	0x2630
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xc80d
	.byte	0x1
	.string	"machine_dependent_reorg"
	.byte	0x1
	.value	0x2644
	.byte	0x1
	.long	.LFB152
	.long	.LFE152
	.long	.LLST137
	.uleb128 0x2d
	.long	.LASF16
	.byte	0x1
	.value	0x2643
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2e
	.long	.LASF47
	.byte	0x1
	.value	0x2645
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x2f
	.string	"max_internal_pool_size"
	.byte	0x1
	.value	0x2645
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x2f
	.string	"pool_size"
	.byte	0x1
	.value	0x2645
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x2e
	.long	.LASF55
	.byte	0x1
	.value	0x2645
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x2f
	.string	"first_constant_ref"
	.byte	0x1
	.value	0x2645
	.long	0x5bb
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x2646
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x2e
	.long	.LASF96
	.byte	0x1
	.value	0x2647
	.long	0xc4d0
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.uleb128 0x32
	.long	0xc72f
	.long	.LBB124
	.long	.LBE124
	.uleb128 0x2f
	.string	"body"
	.byte	0x1
	.value	0x2661
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.byte	0x0
	.uleb128 0x32
	.long	0xc74c
	.long	.LBB125
	.long	.LBE125
	.uleb128 0x2f
	.string	"src"
	.byte	0x1
	.value	0x267b
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.byte	0x0
	.uleb128 0x32
	.long	0xc7b2
	.long	.LBB126
	.long	.LBE126
	.uleb128 0x2f
	.string	"val"
	.byte	0x1
	.value	0x2690
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"src"
	.byte	0x1
	.value	0x2690
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2e
	.long	.LASF1
	.byte	0x1
	.value	0x2691
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x31
	.long	.LBB127
	.long	.LBE127
	.uleb128 0x2f
	.string	"lab"
	.byte	0x1
	.value	0x26b7
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"newsrc"
	.byte	0x1
	.value	0x26b7
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.long	0xc7d0
	.long	.LBB128
	.long	.LBE128
	.uleb128 0x2f
	.string	"body"
	.byte	0x1
	.value	0x26d3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x31
	.long	.LBB129
	.long	.LBE129
	.uleb128 0x2e
	.long	.LASF54
	.byte	0x1
	.value	0x26f8
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2f
	.string	"jump"
	.byte	0x1
	.value	0x26f8
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"barrier"
	.byte	0x1
	.value	0x26f8
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.long	0xc863
	.byte	0x1
	.string	"extend_operator"
	.byte	0x1
	.value	0x270e
	.byte	0x1
	.long	0x5bb
	.long	.LFB153
	.long	.LFE153
	.long	.LLST138
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x270c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x270d
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF0
	.byte	0x1
	.value	0x270f
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x2b
	.long	0xc8c1
	.byte	0x1
	.string	"highpart_shift_operator"
	.byte	0x1
	.value	0x271b
	.byte	0x1
	.long	0x5bb
	.long	.LFB154
	.long	.LFE154
	.long	.LLST139
	.uleb128 0x2c
	.string	"x"
	.byte	0x1
	.value	0x2719
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x271a
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2e
	.long	.LASF0
	.byte	0x1
	.value	0x271c
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x2b
	.long	0xc921
	.byte	0x1
	.string	"mips_register_move_cost"
	.byte	0x1
	.value	0x2746
	.byte	0x1
	.long	0x5bb
	.long	.LFB155
	.long	.LFE155
	.long	.LLST140
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x2744
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"to"
	.byte	0x1
	.value	0x2745
	.long	0x5c2
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"from"
	.byte	0x1
	.value	0x2745
	.long	0x5c2
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x2b
	.long	0xc972
	.byte	0x1
	.string	"mips_adjust_insn_length"
	.byte	0x1
	.value	0x278e
	.byte	0x1
	.long	0x5bb
	.long	.LFB156
	.long	.LFE156
	.long	.LLST141
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x278c
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF29
	.byte	0x1
	.value	0x278d
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0xcb15
	.byte	0x1
	.string	"mips_output_conditional_branch"
	.byte	0x1
	.value	0x27b9
	.byte	0x1
	.long	0x5a8
	.long	.LFB157
	.long	.LFE157
	.long	.LLST142
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x27b3
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0x27b4
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"two_operands_p"
	.byte	0x1
	.value	0x27b5
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"float_p"
	.byte	0x1
	.value	0x27b6
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x2c
	.string	"inverted_p"
	.byte	0x1
	.value	0x27b7
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x2d
	.long	.LASF29
	.byte	0x1
	.value	0x27b8
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x2e
	.long	.LASF0
	.byte	0x1
	.value	0x27bc
	.long	0xf9c
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x2f
	.string	"need_z_p"
	.byte	0x1
	.value	0x27bf
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2f
	.string	"op1"
	.byte	0x1
	.value	0x27c2
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"op2"
	.byte	0x1
	.value	0x27c6
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2f
	.string	"comp"
	.byte	0x1
	.value	0x27c8
	.long	0x2128
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"inverted_comp"
	.byte	0x1
	.value	0x27ca
	.long	0x2128
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x32
	.long	0xcaf2
	.long	.LBB130
	.long	.LBE130
	.uleb128 0x2f
	.string	"orig_target"
	.byte	0x1
	.value	0x283e
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2f
	.string	"target"
	.byte	0x1
	.value	0x283f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x32
	.long	0xcad8
	.long	.LBB131
	.long	.LBE131
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x2853
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x31
	.long	.LBB132
	.long	.LBE132
	.uleb128 0x2e
	.long	.LASF58
	.byte	0x1
	.value	0x2868
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x2e
	.long	.LASF84
	.byte	0x1
	.value	0x27ba
	.long	0xcfae
	.byte	0x5
	.byte	0x3
	.long	buffer.26889
	.uleb128 0x35
	.long	.LASF62
	.long	0xcfce
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.26913
	.byte	0x0
	.uleb128 0x30
	.long	0xcb6f
	.string	"mips_strict_matching_cpu_name_p"
	.byte	0x1
	.value	0x28df
	.byte	0x1
	.long	0x211f
	.long	.LFB158
	.long	.LFE158
	.long	.LLST143
	.uleb128 0x2d
	.long	.LASF97
	.byte	0x1
	.value	0x28de
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"given"
	.byte	0x1
	.value	0x28de
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x30
	.long	0xcbc2
	.string	"mips_matching_cpu_name_p"
	.byte	0x1
	.value	0x28f0
	.byte	0x1
	.long	0x211f
	.long	.LFB159
	.long	.LFE159
	.long	.LLST144
	.uleb128 0x2d
	.long	.LASF97
	.byte	0x1
	.value	0x28ef
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"given"
	.byte	0x1
	.value	0x28ef
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x30
	.long	0xcc2d
	.string	"mips_parse_cpu"
	.byte	0x1
	.value	0x2914
	.byte	0x1
	.long	0xa23e
	.long	.LFB160
	.long	.LFE160
	.long	.LLST145
	.uleb128 0x2c
	.string	"option"
	.byte	0x1
	.value	0x2913
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"cpu_string"
	.byte	0x1
	.value	0x2913
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"p"
	.byte	0x1
	.value	0x2915
	.long	0xa23e
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x2f
	.string	"s"
	.byte	0x1
	.value	0x2916
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x30
	.long	0xcc7a
	.string	"mips_cpu_info_from_isa"
	.byte	0x1
	.value	0x293e
	.byte	0x1
	.long	0xa23e
	.long	.LFB161
	.long	.LFE161
	.long	.LLST146
	.uleb128 0x2c
	.string	"isa"
	.byte	0x1
	.value	0x293d
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2f
	.string	"p"
	.byte	0x1
	.value	0x293f
	.long	0xa23e
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x30
	.long	0xcce3
	.string	"mips_adjust_cost"
	.byte	0x1
	.value	0x2953
	.byte	0x1
	.long	0x5bb
	.long	.LFB162
	.long	.LFE162
	.long	.LLST147
	.uleb128 0x2d
	.long	.LASF58
	.byte	0x1
	.value	0x294f
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2c
	.string	"link"
	.byte	0x1
	.value	0x2950
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2c
	.string	"dep"
	.byte	0x1
	.value	0x2951
	.long	0x99
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x2c
	.string	"cost"
	.byte	0x1
	.value	0x2952
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.byte	0x0
	.uleb128 0x36
	.long	0xcda1
	.string	"mips_unique_section"
	.byte	0x1
	.value	0x2960
	.byte	0x1
	.long	.LFB163
	.long	.LFE163
	.long	.LLST148
	.uleb128 0x2d
	.long	.LASF4
	.byte	0x1
	.value	0x295e
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x2c
	.string	"reloc"
	.byte	0x1
	.value	0x295f
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x2f
	.string	"len"
	.byte	0x1
	.value	0x2961
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x2e
	.long	.LASF14
	.byte	0x1
	.value	0x2961
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x2f
	.string	"sec"
	.byte	0x1
	.value	0x2961
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x2e
	.long	.LASF6
	.byte	0x1
	.value	0x2962
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x2f
	.string	"prefix"
	.byte	0x1
	.value	0x2962
	.long	0x5a8
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x2e
	.long	.LASF3
	.byte	0x1
	.value	0x2963
	.long	0x92e
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x2f
	.string	"prefixes"
	.byte	0x1
	.value	0x2964
	.long	0xcfa9
	.byte	0x5
	.byte	0x3
	.long	prefixes.27186
	.byte	0x0
	.uleb128 0x2b
	.long	0xcdf0
	.byte	0x1
	.string	"mips_hard_regno_nregs"
	.byte	0x1
	.value	0x29a8
	.byte	0x1
	.long	0x7fe
	.long	.LFB164
	.long	.LFE164
	.long	.LLST149
	.uleb128 0x2d
	.long	.LASF83
	.byte	0x1
	.value	0x29a6
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF1
	.byte	0x1
	.value	0x29a7
	.long	0xca4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x2b
	.long	0xce30
	.byte	0x1
	.string	"mips_return_in_memory"
	.byte	0x1
	.value	0x29b2
	.byte	0x1
	.long	0x5bb
	.long	.LFB165
	.long	.LFE165
	.long	.LLST150
	.uleb128 0x2d
	.long	.LASF5
	.byte	0x1
	.value	0x29b1
	.long	0x1e0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x30
	.long	0xce6a
	.string	"mips_issue_rate"
	.byte	0x1
	.value	0x29c1
	.byte	0x1
	.long	0x5bb
	.long	.LFB166
	.long	.LFE166
	.long	.LLST151
	.uleb128 0x35
	.long	.LASF62
	.long	0xcf8e
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.27327
	.byte	0x0
	.uleb128 0x39
	.string	"mips_use_dfa_pipeline_interface"
	.byte	0x1
	.value	0x29d5
	.byte	0x1
	.long	0x5bb
	.long	.LFB167
	.long	.LFE167
	.long	.LLST152
	.uleb128 0x2b
	.long	0xcf13
	.byte	0x1
	.string	"mips_emit_prefetch"
	.byte	0x1
	.value	0x29e6
	.byte	0x1
	.long	0x5a8
	.long	.LFB168
	.long	.LFE168
	.long	.LLST153
	.uleb128 0x2d
	.long	.LASF32
	.byte	0x1
	.value	0x29e5
	.long	0x1bd3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x2f
	.string	"write"
	.byte	0x1
	.value	0x29ec
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x2f
	.string	"locality"
	.byte	0x1
	.value	0x29ed
	.long	0x5bb
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.uleb128 0x2f
	.string	"alt"
	.byte	0x1
	.value	0x29ef
	.long	0xcf79
	.byte	0x5
	.byte	0x3
	.long	alt.27345
	.byte	0x0
	.uleb128 0x3d
	.long	0xcf5e
	.byte	0x1
	.string	"gt_ggc_mx_machine_function"
	.byte	0x2
	.byte	0x1a
	.byte	0x1
	.long	.LFB169
	.long	.LFE169
	.long	.LLST154
	.uleb128 0x3e
	.string	"x_p"
	.byte	0x2
	.byte	0x19
	.long	0x92c
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3f
	.string	"x"
	.byte	0x2
	.byte	0x1b
	.long	0xcf5e
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xe
	.long	0x6831
	.uleb128 0x15
	.long	0xcf79
	.long	0x5a8
	.uleb128 0x16
	.long	0x815
	.byte	0x1
	.uleb128 0x16
	.long	0x815
	.byte	0x3
	.byte	0x0
	.uleb128 0xe
	.long	0xcf63
	.uleb128 0x15
	.long	0xcf8e
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xf
	.byte	0x0
	.uleb128 0xe
	.long	0xcf7e
	.uleb128 0x15
	.long	0xcfa9
	.long	0x5a8
	.uleb128 0x16
	.long	0x815
	.byte	0x3
	.uleb128 0x16
	.long	0x815
	.byte	0x1
	.byte	0x0
	.uleb128 0xe
	.long	0xcf93
	.uleb128 0x15
	.long	0xcfbe
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xc7
	.byte	0x0
	.uleb128 0x15
	.long	0xcfce
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x1e
	.byte	0x0
	.uleb128 0xe
	.long	0xcfbe
	.uleb128 0x15
	.long	0xcfe3
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xe
	.byte	0x0
	.uleb128 0xe
	.long	0xcfd3
	.uleb128 0x15
	.long	0xcff8
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x12
	.byte	0x0
	.uleb128 0xe
	.long	0xcfe8
	.uleb128 0x15
	.long	0xd00d
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x16
	.byte	0x0
	.uleb128 0xe
	.long	0xcffd
	.uleb128 0xe
	.long	0xcfd3
	.uleb128 0x15
	.long	0xd027
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x10
	.byte	0x0
	.uleb128 0xe
	.long	0xd017
	.uleb128 0x15
	.long	0xd03c
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x14
	.byte	0x0
	.uleb128 0xe
	.long	0xd02c
	.uleb128 0xe
	.long	0xd02c
	.uleb128 0xe
	.long	0xcfe8
	.uleb128 0xe
	.long	0xc71
	.uleb128 0xe
	.long	0xc81
	.uleb128 0x15
	.long	0xd065
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xd
	.byte	0x0
	.uleb128 0xe
	.long	0xd055
	.uleb128 0xe
	.long	0xcf7e
	.uleb128 0x15
	.long	0xd07f
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x11
	.byte	0x0
	.uleb128 0xe
	.long	0xd06f
	.uleb128 0xe
	.long	0xcf7e
	.uleb128 0xe
	.long	0xc61
	.uleb128 0xe
	.long	0xd02c
	.uleb128 0x15
	.long	0xd0a3
	.long	0x8ec2
	.uleb128 0x16
	.long	0x815
	.byte	0x9
	.byte	0x0
	.uleb128 0xe
	.long	0xd093
	.uleb128 0xe
	.long	0xcfe8
	.uleb128 0xe
	.long	0xd017
	.uleb128 0x15
	.long	0xd0c2
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xb
	.byte	0x0
	.uleb128 0x15
	.long	0xd0d2
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xb
	.byte	0x0
	.uleb128 0x15
	.long	0xd0e2
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0x15
	.long	0xd0f2
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0xe
	.long	0xcf7e
	.uleb128 0x15
	.long	0xd107
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0x15
	.long	0xd117
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0x15
	.long	0xd127
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0x15
	.long	0xd137
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0x2f
	.string	"gpr_mode"
	.byte	0x1
	.value	0x166
	.long	0xca4
	.byte	0x5
	.byte	0x3
	.long	gpr_mode
	.uleb128 0x2f
	.string	"mips16_strings"
	.byte	0x1
	.value	0x175
	.long	0x99
	.byte	0x5
	.byte	0x3
	.long	mips16_strings
	.uleb128 0x2f
	.string	"string_constants"
	.byte	0x1
	.value	0x180
	.long	0x763b
	.byte	0x5
	.byte	0x3
	.long	string_constants
	.uleb128 0x2f
	.string	"volatile_buffer"
	.byte	0x1
	.value	0x18a
	.long	0xa5ec
	.byte	0x5
	.byte	0x3
	.long	volatile_buffer
	.uleb128 0x2f
	.string	"mips16_stubs"
	.byte	0x1
	.value	0x2390
	.long	0xc183
	.byte	0x5
	.byte	0x3
	.long	mips16_stubs
	.uleb128 0x15
	.long	0xd1d3
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xaf
	.byte	0x0
	.uleb128 0x40
	.string	"call_used_regs"
	.byte	0x15
	.value	0x196
	.long	0xd1c3
	.byte	0x1
	.byte	0x1
	.uleb128 0x41
	.string	"target_flags"
	.byte	0xc
	.byte	0x21
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xd218
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xaf
	.uleb128 0x16
	.long	0x815
	.byte	0x7
	.byte	0x0
	.uleb128 0x42
	.string	"mips_reg_names"
	.byte	0x1
	.value	0x18f
	.long	0xd202
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_reg_names
	.uleb128 0x15
	.long	0xd246
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xff
	.byte	0x0
	.uleb128 0x42
	.string	"mips_print_operand_punct"
	.byte	0x1
	.value	0x183
	.long	0xd236
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_print_operand_punct
	.uleb128 0x42
	.string	"current_function_file"
	.byte	0x1
	.value	0x109
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	current_function_file
	.uleb128 0x43
	.string	"num_source_filenames"
	.byte	0x1
	.byte	0xea
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	num_source_filenames
	.uleb128 0x43
	.string	"inside_function"
	.byte	0x1
	.byte	0xf5
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	inside_function
	.uleb128 0x42
	.string	"ignore_line_number"
	.byte	0x1
	.value	0x111
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	ignore_line_number
	.uleb128 0x42
	.string	"file_in_function_warning"
	.byte	0x1
	.value	0x10d
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	file_in_function_warning
	.uleb128 0x43
	.string	"sdb_label_count"
	.byte	0x1
	.byte	0xee
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	sdb_label_count
	.uleb128 0x43
	.string	"mips_section_threshold"
	.byte	0x1
	.byte	0xe7
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_section_threshold
	.uleb128 0x40
	.string	"g_switch_value"
	.byte	0x16
	.value	0x273
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"g_switch_set"
	.byte	0x16
	.value	0x274
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x43
	.string	"sym_lineno"
	.byte	0x1
	.byte	0xf1
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	sym_lineno
	.uleb128 0x42
	.string	"set_noreorder"
	.byte	0x1
	.value	0x114
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	set_noreorder
	.uleb128 0x42
	.string	"set_nomacro"
	.byte	0x1
	.value	0x116
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	set_nomacro
	.uleb128 0x42
	.string	"set_noat"
	.byte	0x1
	.value	0x115
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	set_noat
	.uleb128 0x42
	.string	"set_volatile"
	.byte	0x1
	.value	0x117
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	set_volatile
	.uleb128 0x42
	.string	"mips_branch_likely"
	.byte	0x1
	.value	0x11a
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_branch_likely
	.uleb128 0x15
	.long	0xd448
	.long	0x5bb
	.uleb128 0x16
	.long	0x815
	.byte	0xaf
	.byte	0x0
	.uleb128 0x42
	.string	"mips_dbx_regno"
	.byte	0x1
	.value	0x186
	.long	0xd438
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_dbx_regno
	.uleb128 0x15
	.long	0xd476
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0x1
	.byte	0x0
	.uleb128 0x42
	.string	"branch_cmp"
	.byte	0x1
	.value	0x12d
	.long	0xd466
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	branch_cmp
	.uleb128 0x42
	.string	"branch_type"
	.byte	0x1
	.value	0x130
	.long	0x2c7
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	branch_type
	.uleb128 0x42
	.string	"mips_arch"
	.byte	0x1
	.value	0x133
	.long	0x34f
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_arch
	.uleb128 0x42
	.string	"mips_tune"
	.byte	0x1
	.value	0x137
	.long	0x34f
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_tune
	.uleb128 0x42
	.string	"mips_abicalls"
	.byte	0x1
	.value	0x163
	.long	0x4cf
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_abicalls
	.uleb128 0x42
	.string	"mips_isa"
	.byte	0x1
	.value	0x13b
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_isa
	.uleb128 0x42
	.string	"mips16"
	.byte	0x1
	.value	0x148
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips16
	.uleb128 0x42
	.string	"mips16_hard_float"
	.byte	0x1
	.value	0x153
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips16_hard_float
	.uleb128 0x42
	.string	"mips_entry"
	.byte	0x1
	.value	0x15d
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_entry
	.uleb128 0x42
	.string	"mips_arch_string"
	.byte	0x1
	.value	0x141
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_arch_string
	.uleb128 0x42
	.string	"mips_tune_string"
	.byte	0x1
	.value	0x142
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_tune_string
	.uleb128 0x42
	.string	"mips_isa_string"
	.byte	0x1
	.value	0x143
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_isa_string
	.uleb128 0x42
	.string	"mips_abi_string"
	.byte	0x1
	.value	0x144
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_abi_string
	.uleb128 0x42
	.string	"mips_entry_string"
	.byte	0x1
	.value	0x158
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_entry_string
	.uleb128 0x42
	.string	"mips_no_mips16_string"
	.byte	0x1
	.value	0x14d
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_no_mips16_string
	.uleb128 0x42
	.string	"mips_cache_flush_func"
	.byte	0x1
	.value	0x15a
	.long	0x5a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_cache_flush_func
	.uleb128 0x42
	.string	"mips_split_addresses"
	.byte	0x1
	.value	0x160
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_split_addresses
	.uleb128 0x42
	.string	"dslots_load_total"
	.byte	0x1
	.value	0x11d
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	dslots_load_total
	.uleb128 0x42
	.string	"dslots_load_filled"
	.byte	0x1
	.value	0x11e
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	dslots_load_filled
	.uleb128 0x42
	.string	"dslots_jump_total"
	.byte	0x1
	.value	0x11f
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	dslots_jump_total
	.uleb128 0x42
	.string	"dslots_jump_filled"
	.byte	0x1
	.value	0x120
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	dslots_jump_filled
	.uleb128 0x42
	.string	"dslots_number_nops"
	.byte	0x1
	.value	0x123
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	dslots_number_nops
	.uleb128 0x15
	.long	0xd728
	.long	0x5bb
	.uleb128 0x16
	.long	0x815
	.byte	0x2
	.byte	0x0
	.uleb128 0x42
	.string	"num_refs"
	.byte	0x1
	.value	0x126
	.long	0xd718
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	num_refs
	.uleb128 0x42
	.string	"mips_load_reg"
	.byte	0x1
	.value	0x129
	.long	0x99
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_load_reg
	.uleb128 0x42
	.string	"mips_load_reg2"
	.byte	0x1
	.value	0x129
	.long	0x99
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_load_reg2
	.uleb128 0x42
	.string	"mips_load_reg3"
	.byte	0x1
	.value	0x129
	.long	0x99
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_load_reg3
	.uleb128 0x42
	.string	"mips_load_reg4"
	.byte	0x1
	.value	0x129
	.long	0x99
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_load_reg4
	.uleb128 0x42
	.string	"mips_string_length"
	.byte	0x1
	.value	0x170
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_string_length
	.uleb128 0x15
	.long	0xd7e9
	.long	0x567
	.uleb128 0x16
	.long	0x815
	.byte	0x1d
	.byte	0x0
	.uleb128 0x42
	.string	"mips_cpu_info_table"
	.byte	0x1
	.value	0x242
	.long	0xd80c
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_cpu_info_table
	.uleb128 0xe
	.long	0xd7d9
	.uleb128 0x42
	.string	"mips_arch_info"
	.byte	0x1
	.value	0x134
	.long	0xa23e
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_arch_info
	.uleb128 0x42
	.string	"mips_tune_info"
	.byte	0x1
	.value	0x138
	.long	0xa23e
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_tune_info
	.uleb128 0x42
	.string	"mips_abi"
	.byte	0x1
	.value	0x13e
	.long	0x5bb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_abi
	.uleb128 0x15
	.long	0xd87b
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0x35
	.uleb128 0x16
	.long	0x815
	.byte	0xaf
	.byte	0x0
	.uleb128 0x42
	.string	"mips_hard_regno_mode_ok"
	.byte	0x1
	.value	0x16a
	.long	0xd865
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_hard_regno_mode_ok
	.uleb128 0x15
	.long	0xd8b2
	.long	0x5c2
	.uleb128 0x16
	.long	0x815
	.byte	0xaf
	.byte	0x0
	.uleb128 0x42
	.string	"mips_regno_to_class"
	.byte	0x1
	.value	0x1c7
	.long	0xd8d5
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_regno_to_class
	.uleb128 0xe
	.long	0xd8a2
	.uleb128 0x15
	.long	0xd8ea
	.long	0x5c2
	.uleb128 0x16
	.long	0x815
	.byte	0xff
	.byte	0x0
	.uleb128 0x42
	.string	"mips_char_to_class"
	.byte	0x1
	.value	0x1f8
	.long	0xd8da
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_char_to_class
	.uleb128 0x41
	.string	"stderr"
	.byte	0x11
	.byte	0x90
	.long	0xc35
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xd92c
	.long	0x87e
	.uleb128 0x16
	.long	0x815
	.byte	0xff
	.byte	0x0
	.uleb128 0x41
	.string	"_sch_istable"
	.byte	0x17
	.byte	0x48
	.long	0xd942
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xd91c
	.uleb128 0x15
	.long	0xd957
	.long	0x86d
	.uleb128 0x16
	.long	0x815
	.byte	0xff
	.byte	0x0
	.uleb128 0x41
	.string	"_sch_tolower"
	.byte	0x17
	.byte	0x62
	.long	0xd96d
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xd947
	.uleb128 0x41
	.string	"libiberty_concat_ptr"
	.byte	0x18
	.byte	0x81
	.long	0x92e
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xd9a0
	.long	0xeed
	.uleb128 0x16
	.long	0x815
	.byte	0x35
	.byte	0x0
	.uleb128 0x44
	.long	.LASF11
	.byte	0x5
	.byte	0x34
	.long	0xd9ad
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xd990
	.uleb128 0x15
	.long	0xd9c2
	.long	0x86d
	.uleb128 0x16
	.long	0x815
	.byte	0x35
	.byte	0x0
	.uleb128 0x41
	.string	"mode_size"
	.byte	0x5
	.byte	0x59
	.long	0xd9d5
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xd9b2
	.uleb128 0x15
	.long	0xd9ea
	.long	0x87e
	.uleb128 0x16
	.long	0x815
	.byte	0x35
	.byte	0x0
	.uleb128 0x41
	.string	"mode_bitsize"
	.byte	0x5
	.byte	0x69
	.long	0xda00
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xd9da
	.uleb128 0x15
	.long	0xda15
	.long	0xca4
	.uleb128 0x16
	.long	0x815
	.byte	0x35
	.byte	0x0
	.uleb128 0x41
	.string	"inner_mode_array"
	.byte	0x5
	.byte	0x77
	.long	0xda2f
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xda05
	.uleb128 0x41
	.string	"word_mode"
	.byte	0x5
	.byte	0xad
	.long	0xca4
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xda57
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xa2
	.byte	0x0
	.uleb128 0x41
	.string	"rtx_class"
	.byte	0x4
	.byte	0x45
	.long	0xda6a
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xda47
	.uleb128 0x15
	.long	0xda7f
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0x80
	.byte	0x0
	.uleb128 0x40
	.string	"const_int_rtx"
	.byte	0x4
	.value	0x6a4
	.long	0xda6f
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"const_true_rtx"
	.byte	0x4
	.value	0x6aa
	.long	0x99
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xdac6
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0x2
	.uleb128 0x16
	.long	0x815
	.byte	0x35
	.byte	0x0
	.uleb128 0x40
	.string	"const_tiny_rtx"
	.byte	0x4
	.value	0x6ac
	.long	0xdab0
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xdaef
	.long	0x99
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0x40
	.string	"global_rtl"
	.byte	0x4
	.value	0x6e5
	.long	0xdadf
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"pic_offset_table_rtx"
	.byte	0x4
	.value	0x6f3
	.long	0x99
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"struct_value_incoming_rtx"
	.byte	0x4
	.value	0x6f5
	.long	0x99
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"reload_completed"
	.byte	0x4
	.value	0x763
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"reload_in_progress"
	.byte	0x4
	.value	0x768
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"fixed_regs"
	.byte	0x15
	.value	0x18b
	.long	0xd1c3
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xdb9f
	.long	0x5b3
	.uleb128 0x45
	.byte	0x0
	.uleb128 0x40
	.string	"call_really_used_regs"
	.byte	0x15
	.value	0x199
	.long	0xdb94
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"reg_alloc_order"
	.byte	0x15
	.value	0x1c2
	.long	0xd438
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xdbe9
	.long	0x5a8
	.uleb128 0x16
	.long	0x815
	.byte	0xaf
	.byte	0x0
	.uleb128 0x41
	.string	"reg_names"
	.byte	0x19
	.byte	0xa3
	.long	0xdbd9
	.byte	0x1
	.byte	0x1
	.uleb128 0x41
	.string	"reg_renumber"
	.byte	0x19
	.byte	0x9a
	.long	0xdc12
	.byte	0x1
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x8b8
	.uleb128 0x41
	.string	"regs_ever_live"
	.byte	0x19
	.byte	0x9f
	.long	0xd1c3
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"dconst1"
	.byte	0x8
	.value	0x150
	.long	0x20b3
	.byte	0x1
	.byte	0x1
	.uleb128 0x41
	.string	"target_flags_explicit"
	.byte	0x1a
	.byte	0x77
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"final_sequence"
	.byte	0x1b
	.value	0x188
	.long	0x99
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"asm_out_file"
	.byte	0x1b
	.value	0x194
	.long	0x6c04
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xdc9c
	.long	0x5a8
	.uleb128 0x45
	.byte	0x0
	.uleb128 0x41
	.string	"tree_code_name"
	.byte	0x7
	.byte	0x55
	.long	0xdcb4
	.byte	0x1
	.byte	0x1
	.uleb128 0xe
	.long	0xdc91
	.uleb128 0x15
	.long	0xdcc9
	.long	0x1e0
	.uleb128 0x16
	.long	0x815
	.byte	0x3a
	.byte	0x0
	.uleb128 0x40
	.string	"global_trees"
	.byte	0x7
	.value	0x8b5
	.long	0xdcb9
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xdcf0
	.long	0x1e0
	.uleb128 0x16
	.long	0x815
	.byte	0xa
	.byte	0x0
	.uleb128 0x40
	.string	"integer_types"
	.byte	0x7
	.value	0x91d
	.long	0xdce0
	.byte	0x1
	.byte	0x1
	.uleb128 0x15
	.long	0xdd18
	.long	0x1e0
	.uleb128 0x16
	.long	0x815
	.byte	0x5
	.byte	0x0
	.uleb128 0x40
	.string	"sizetype_tab"
	.byte	0x7
	.value	0xad1
	.long	0xdd08
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"current_function_decl"
	.byte	0x7
	.value	0xbc8
	.long	0x1e0
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"cfun"
	.byte	0xb
	.value	0x202
	.long	0x58c4
	.byte	0x1
	.byte	0x1
	.uleb128 0x2a
	.byte	0x1
	.long	0x6831
	.uleb128 0x40
	.string	"init_machine_status"
	.byte	0xb
	.value	0x25e
	.long	0xdd82
	.byte	0x1
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0xdd5e
	.uleb128 0x41
	.string	"main_input_filename"
	.byte	0x16
	.byte	0x20
	.long	0x5a8
	.byte	0x1
	.byte	0x1
	.uleb128 0x41
	.string	"write_symbols"
	.byte	0x16
	.byte	0x30
	.long	0x6851
	.byte	0x1
	.byte	0x1
	.uleb128 0x41
	.string	"optimize"
	.byte	0x16
	.byte	0x43
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_pcc_struct_return"
	.byte	0x16
	.value	0x103
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_writable_strings"
	.byte	0x16
	.value	0x148
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_keep_inline_functions"
	.byte	0x16
	.value	0x192
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_schedule_insns"
	.byte	0x16
	.value	0x1b2
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_delayed_branch"
	.byte	0x16
	.value	0x1d0
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_pic"
	.byte	0x16
	.value	0x1df
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_inhibit_size_directive"
	.byte	0x16
	.value	0x201
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"flag_verbose_asm"
	.byte	0x16
	.value	0x213
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"frame_pointer_needed"
	.byte	0x16
	.value	0x266
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"align_loops"
	.byte	0x16
	.value	0x27b
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"align_jumps"
	.byte	0x16
	.value	0x27e
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"align_labels_log"
	.byte	0x16
	.value	0x282
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x40
	.string	"align_functions"
	.byte	0x16
	.value	0x284
	.long	0x5bb
	.byte	0x1
	.byte	0x1
	.uleb128 0x41
	.string	"reg_equiv_mem"
	.byte	0x1c
	.byte	0xaa
	.long	0x1bd3
	.byte	0x1
	.byte	0x1
	.uleb128 0x42
	.string	"targetm"
	.byte	0x1
	.value	0x29e
	.long	0x6fac
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	targetm
	.uleb128 0x43
	.string	"asm_out_data_file"
	.byte	0x1
	.byte	0xfa
	.long	0x6c04
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	asm_out_data_file
	.uleb128 0x43
	.string	"asm_out_text_file"
	.byte	0x1
	.byte	0xfb
	.long	0x6c04
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	asm_out_text_file
	.uleb128 0x42
	.string	"extern_head"
	.byte	0x1
	.value	0x106
	.long	0x75fd
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	extern_head
	.uleb128 0x15
	.long	0xdfe3
	.long	0x5b3
	.uleb128 0x16
	.long	0x815
	.byte	0xaf
	.uleb128 0x16
	.long	0x815
	.byte	0x7
	.byte	0x0
	.uleb128 0x42
	.string	"mips_sw_reg_names"
	.byte	0x1
	.value	0x1ac
	.long	0xdfcd
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	mips_sw_reg_names
	.uleb128 0x15
	.long	0xe014
	.long	0x68db
	.uleb128 0x16
	.long	0x815
	.byte	0x1
	.byte	0x0
	.uleb128 0x43
	.string	"gt_ggc_r_gt_mips_h"
	.byte	0x2
	.byte	0x25
	.long	0xe035
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	gt_ggc_r_gt_mips_h
	.uleb128 0xe
	.long	0xe004
	.byte	0x0
	.section	.debug_abbrev
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x10
	.uleb128 0x6
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.byte	0x0
	.byte	0x0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xf
	.byte	0x0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x4
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x5
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x6
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x7
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x8
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xa
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xb
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0xc
	.uleb128 0x28
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0x0
	.byte	0x0
	.uleb128 0xd
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0xe
	.uleb128 0x26
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xf
	.uleb128 0x24
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x11
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x12
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x13
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x14
	.uleb128 0x24
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x15
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x16
	.uleb128 0x21
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x17
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x18
	.uleb128 0xf
	.byte	0x0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x19
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x1a
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x27
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x1b
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x1c
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x1d
	.uleb128 0x15
	.byte	0x0
	.uleb128 0x27
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x1e
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x1f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x20
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x21
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x22
	.uleb128 0x13
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x23
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x24
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x25
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x26
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x27
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x28
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x29
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x2a
	.uleb128 0x15
	.byte	0x0
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x2c
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x2d
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x2e
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x2f
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x30
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x31
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x34
	.uleb128 0xb
	.byte	0x0
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x35
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x36
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x37
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x39
	.uleb128 0x2e
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x3a
	.uleb128 0x21
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.uleb128 0x18
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x55
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x3d
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x3e
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x40
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x41
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x42
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x43
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x44
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x45
	.uleb128 0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.section	.debug_pubnames,"",@progbits
	.long	0xf1e
	.value	0x2
	.long	.Ldebug_info0
	.long	0xe03b
	.long	0x7641
	.string	"uns_arith_operand"
	.long	0x768b
	.string	"arith_operand"
	.long	0x76d1
	.string	"arith32_operand"
	.long	0x7719
	.string	"small_int"
	.long	0x775b
	.string	"large_int"
	.long	0x77ac
	.string	"reg_or_0_operand"
	.long	0x77f5
	.string	"true_reg_or_0_operand"
	.long	0x7843
	.string	"mips_const_double_ok"
	.long	0x7890
	.string	"const_float_1_operand"
	.long	0x796d
	.string	"simple_memory_operand"
	.long	0x7a05
	.string	"double_memory_operand"
	.long	0x7a87
	.string	"equality_op"
	.long	0x7acb
	.string	"cmp_op"
	.long	0x7b0a
	.string	"trap_cmp_op"
	.long	0x7b4e
	.string	"pc_or_label_operand"
	.long	0x7b9a
	.string	"call_insn_operand"
	.long	0x7be4
	.string	"move_operand"
	.long	0x7c29
	.string	"movdi_operand"
	.long	0x7c6f
	.string	"se_register_operand"
	.long	0x7cbb
	.string	"se_reg_or_0_operand"
	.long	0x7d07
	.string	"se_uns_arith_operand"
	.long	0x7d54
	.string	"se_arith_operand"
	.long	0x7d9d
	.string	"se_nonmemory_operand"
	.long	0x7dea
	.string	"consttable_operand"
	.long	0x7e35
	.string	"coprocessor_operand"
	.long	0x7e81
	.string	"coprocessor2_operand"
	.long	0x7ece
	.string	"symbolic_operand"
	.long	0x7f17
	.string	"mips_check_split"
	.long	0x7f61
	.string	"mips_reg_mode_ok_for_base_p"
	.long	0x7fc8
	.string	"mips_legitimate_address_p"
	.long	0x810f
	.string	"m16_uimm3_b"
	.long	0x8153
	.string	"m16_simm4_1"
	.long	0x8197
	.string	"m16_nsimm4_1"
	.long	0x81dc
	.string	"m16_simm5_1"
	.long	0x8220
	.string	"m16_nsimm5_1"
	.long	0x8265
	.string	"m16_uimm5_4"
	.long	0x82a9
	.string	"m16_nuimm5_4"
	.long	0x82ee
	.string	"m16_simm8_1"
	.long	0x8332
	.string	"m16_nsimm8_1"
	.long	0x8377
	.string	"m16_uimm8_1"
	.long	0x83bb
	.string	"m16_nuimm8_1"
	.long	0x8400
	.string	"m16_uimm8_m1_1"
	.long	0x8447
	.string	"m16_uimm8_4"
	.long	0x848b
	.string	"m16_nuimm8_4"
	.long	0x84d0
	.string	"m16_simm8_8"
	.long	0x8514
	.string	"m16_nsimm8_8"
	.long	0x8559
	.string	"m16_usym8_4"
	.long	0x85b4
	.string	"m16_usym5_4"
	.long	0x860f
	.string	"mips_fill_delay_slot"
	.long	0x86ca
	.string	"mips_count_memory_refs"
	.long	0x87a0
	.string	"embedded_pic_fnaddr_reg"
	.long	0x87ec
	.string	"embedded_pic_offset"
	.long	0x8828
	.string	"mips_move_1word"
	.long	0x8a70
	.string	"mips_restore_gp"
	.long	0x8ac8
	.string	"mips_sign_extend"
	.long	0x8b32
	.string	"mips_move_2words"
	.long	0x8d26
	.string	"mips_address_cost"
	.long	0x8dab
	.string	"pic_address_needs_scratch"
	.long	0x8e40
	.string	"gen_int_relational"
	.long	0x9113
	.string	"gen_conditional_branch"
	.long	0x91f1
	.string	"gen_conditional_move"
	.long	0x92c7
	.string	"mips_gen_conditional_trap"
	.long	0x9343
	.string	"fcc_register_operand"
	.long	0x9390
	.string	"mips_emit_fcc_reload"
	.long	0x940c
	.string	"mips_set_return_address"
	.long	0x95d7
	.string	"expand_block_move"
	.long	0x96f4
	.string	"output_block_move"
	.long	0x9970
	.string	"init_cumulative_args"
	.long	0x9ac9
	.string	"function_arg_advance"
	.long	0x9b6b
	.string	"function_arg"
	.long	0x9c4b
	.string	"function_arg_partial_nregs"
	.long	0x9ccc
	.string	"mips_setup_incoming_varargs"
	.long	0x9dfa
	.string	"mips_build_va_list"
	.long	0x9e8f
	.string	"mips_va_start"
	.long	0x9ff8
	.string	"mips_va_arg"
	.long	0xa27c
	.string	"override_options"
	.long	0xa341
	.string	"mips_conditional_register_usage"
	.long	0xa416
	.string	"mips_order_regs_for_local_alloc"
	.long	0xa45a
	.string	"mips_debugger_offset"
	.long	0xa4ea
	.string	"print_operand"
	.long	0xa5fc
	.string	"print_operand_address"
	.long	0xa71e
	.string	"mips_output_external"
	.long	0xa7a5
	.string	"mips_output_filename"
	.long	0xa827
	.string	"mips_output_lineno"
	.long	0xa870
	.string	"mips_output_ascii"
	.long	0xa915
	.string	"final_prescan_insn"
	.long	0xa9a0
	.string	"mips_asm_file_start"
	.long	0xaa0e
	.string	"mips_asm_file_end"
	.long	0xaadc
	.string	"mips_output_aligned_decl_common"
	.long	0xab70
	.string	"mips_declare_object"
	.long	0xac24
	.string	"compute_frame_size"
	.long	0xad6b
	.string	"mips_initial_elimination_offset"
	.long	0xb2d3
	.string	"mips_expand_prologue"
	.long	0xb788
	.string	"mips_expand_epilogue"
	.long	0xb877
	.string	"mips_can_use_return_insn"
	.long	0xba3e
	.string	"mips_function_value"
	.long	0xbbc6
	.string	"function_arg_pass_by_reference"
	.long	0xbc4b
	.string	"mips_cannot_change_mode_class"
	.long	0xbcb1
	.string	"mips_secondary_reload_class"
	.long	0xbd72
	.string	"mips_class_max_nregs"
	.long	0xbdc0
	.string	"mips16_gp_pseudo_reg"
	.long	0xbe2d
	.string	"mips16_gp_offset"
	.long	0xbe86
	.string	"mips16_gp_offset_p"
	.long	0xbf0b
	.string	"mips16_constant_after_function_p"
	.long	0xbf6b
	.string	"mips16_constant"
	.long	0xc189
	.string	"build_mips16_call_stub"
	.long	0xc63d
	.string	"machine_dependent_reorg"
	.long	0xc80d
	.string	"extend_operator"
	.long	0xc863
	.string	"highpart_shift_operator"
	.long	0xc8c1
	.string	"mips_register_move_cost"
	.long	0xc921
	.string	"mips_adjust_insn_length"
	.long	0xc972
	.string	"mips_output_conditional_branch"
	.long	0xcda1
	.string	"mips_hard_regno_nregs"
	.long	0xcdf0
	.string	"mips_return_in_memory"
	.long	0xce9f
	.string	"mips_emit_prefetch"
	.long	0xcf13
	.string	"gt_ggc_mx_machine_function"
	.long	0xd218
	.string	"mips_reg_names"
	.long	0xd246
	.string	"mips_print_operand_punct"
	.long	0xd26e
	.string	"current_function_file"
	.long	0xd293
	.string	"num_source_filenames"
	.long	0xd2b6
	.string	"inside_function"
	.long	0xd2d4
	.string	"ignore_line_number"
	.long	0xd2f6
	.string	"file_in_function_warning"
	.long	0xd31e
	.string	"sdb_label_count"
	.long	0xd33c
	.string	"mips_section_threshold"
	.long	0xd391
	.string	"sym_lineno"
	.long	0xd3aa
	.string	"set_noreorder"
	.long	0xd3c7
	.string	"set_nomacro"
	.long	0xd3e2
	.string	"set_noat"
	.long	0xd3fa
	.string	"set_volatile"
	.long	0xd416
	.string	"mips_branch_likely"
	.long	0xd448
	.string	"mips_dbx_regno"
	.long	0xd476
	.string	"branch_cmp"
	.long	0xd490
	.string	"branch_type"
	.long	0xd4ab
	.string	"mips_arch"
	.long	0xd4c4
	.string	"mips_tune"
	.long	0xd4dd
	.string	"mips_abicalls"
	.long	0xd4fa
	.string	"mips_isa"
	.long	0xd512
	.string	"mips16"
	.long	0xd528
	.string	"mips16_hard_float"
	.long	0xd549
	.string	"mips_entry"
	.long	0xd563
	.string	"mips_arch_string"
	.long	0xd583
	.string	"mips_tune_string"
	.long	0xd5a3
	.string	"mips_isa_string"
	.long	0xd5c2
	.string	"mips_abi_string"
	.long	0xd5e1
	.string	"mips_entry_string"
	.long	0xd602
	.string	"mips_no_mips16_string"
	.long	0xd627
	.string	"mips_cache_flush_func"
	.long	0xd64c
	.string	"mips_split_addresses"
	.long	0xd670
	.string	"dslots_load_total"
	.long	0xd691
	.string	"dslots_load_filled"
	.long	0xd6b3
	.string	"dslots_jump_total"
	.long	0xd6d4
	.string	"dslots_jump_filled"
	.long	0xd6f6
	.string	"dslots_number_nops"
	.long	0xd728
	.string	"num_refs"
	.long	0xd740
	.string	"mips_load_reg"
	.long	0xd75d
	.string	"mips_load_reg2"
	.long	0xd77b
	.string	"mips_load_reg3"
	.long	0xd799
	.string	"mips_load_reg4"
	.long	0xd7b7
	.string	"mips_string_length"
	.long	0xd7e9
	.string	"mips_cpu_info_table"
	.long	0xd811
	.string	"mips_arch_info"
	.long	0xd82f
	.string	"mips_tune_info"
	.long	0xd84d
	.string	"mips_abi"
	.long	0xd87b
	.string	"mips_hard_regno_mode_ok"
	.long	0xd8b2
	.string	"mips_regno_to_class"
	.long	0xd8ea
	.string	"mips_char_to_class"
	.long	0xdf5b
	.string	"targetm"
	.long	0xdf72
	.string	"asm_out_data_file"
	.long	0xdf92
	.string	"asm_out_text_file"
	.long	0xdfb2
	.string	"extern_head"
	.long	0xdfe3
	.string	"mips_sw_reg_names"
	.long	0xe014
	.string	"gt_ggc_r_gt_mips_h"
	.long	0x0
	.section	.debug_aranges,"",@progbits
	.long	0x1c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x4
	.byte	0x0
	.value	0x0
	.value	0x0
	.long	.Ltext0
	.long	.Letext0-.Ltext0
	.long	0x0
	.long	0x0
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.long	.LBB84-.Ltext0
	.long	.LBE84-.Ltext0
	.long	.LBB85-.Ltext0
	.long	.LBE85-.Ltext0
	.long	0x0
	.long	0x0
	.section	.debug_str,"",@progbits
.LASF83:
	.string	"regno"
.LASF73:
	.string	"bytes_rtx"
.LASF48:
	.string	"total_size"
.LASF6:
	.string	"name"
.LASF91:
	.string	"tsize_rtx"
.LASF87:
	.string	"return_type"
.LASF22:
	.string	"lang_flag_0"
.LASF23:
	.string	"lang_flag_1"
.LASF24:
	.string	"lang_flag_2"
.LASF28:
	.string	"lang_flag_6"
.LASF74:
	.string	"leftover"
.LASF3:
	.string	"string"
.LASF14:
	.string	"size"
.LASF16:
	.string	"first"
.LASF12:
	.string	"mem_attrs"
.LASF56:
	.string	"code0"
.LASF57:
	.string	"code1"
.LASF96:
	.string	"constants"
.LASF94:
	.string	"stubdecl"
.LASF49:
	.string	"var_size"
.LASF79:
	.string	"f_gtop"
.LASF2:
	.string	"common"
.LASF68:
	.string	"dest_reg"
.LASF71:
	.string	"orig_src"
.LASF40:
	.string	"lang_specific"
.LASF46:
	.string	"sequence_rtl_expr"
.LASF90:
	.string	"reg_rtx"
.LASF55:
	.string	"addr"
.LASF93:
	.string	"stubname"
.LASF75:
	.string	"num_regs"
.LASF45:
	.string	"sequence_stack"
.LASF42:
	.string	"function_frequency"
.LASF25:
	.string	"lang_flag_3"
.LASF81:
	.string	"f_goff"
.LASF59:
	.string	"subreg_offset0"
.LASF60:
	.string	"subreg_offset1"
.LASF17:
	.string	"next"
.LASF8:
	.string	"fp_code"
.LASF9:
	.string	"unsigned int"
.LASF47:
	.string	"insns_len"
.LASF70:
	.string	"orig_dest"
.LASF69:
	.string	"src_reg"
.LASF66:
	.string	"cmp_code"
.LASF34:
	.string	"abstract_origin"
.LASF11:
	.string	"mode_class"
.LASF15:
	.string	"align"
.LASF43:
	.string	"section_name"
.LASF38:
	.string	"pointer_depth"
.LASF39:
	.string	"user_align"
.LASF35:
	.string	"address"
.LASF53:
	.string	"mips_arg_info"
.LASF50:
	.string	"extra_size"
.LASF36:
	.string	"size_unit"
.LASF19:
	.string	"class"
.LASF97:
	.string	"canonical"
.LASF80:
	.string	"f_ftop"
.LASF65:
	.string	"info"
.LASF5:
	.string	"type"
.LASF52:
	.string	"fp_reg_size"
.LASF63:
	.string	"retval"
.LASF31:
	.string	"value"
.LASF82:
	.string	"f_foff"
.LASF41:
	.string	"args_size"
.LASF61:
	.string	"regno1"
.LASF78:
	.string	"f_ovfl"
.LASF95:
	.string	"need_comma"
.LASF58:
	.string	"insn"
.LASF32:
	.string	"operands"
.LASF64:
	.string	"test_code"
.LASF89:
	.string	"base_offset"
.LASF20:
	.string	"file"
.LASF26:
	.string	"lang_flag_4"
.LASF27:
	.string	"lang_flag_5"
.LASF33:
	.string	"abstract_flag"
.LASF0:
	.string	"code"
.LASF54:
	.string	"label"
.LASF77:
	.string	"named"
.LASF30:
	.string	"ht_identifier"
.LASF13:
	.string	"offset"
.LASF85:
	.string	"stream"
.LASF86:
	.string	"name_tree"
.LASF51:
	.string	"gp_reg_size"
.LASF62:
	.string	"__FUNCTION__"
.LASF44:
	.string	"unsignedp"
.LASF72:
	.string	"align_rtx"
.LASF21:
	.string	"built_in_class"
.LASF92:
	.string	"fnname"
.LASF84:
	.string	"buffer"
.LASF67:
	.string	"gp_offset"
.LASF1:
	.string	"mode"
.LASF7:
	.string	"stack_words"
.LASF10:
	.string	"_IO_FILE"
.LASF37:
	.string	"attributes"
.LASF88:
	.string	"dwarf_pattern"
.LASF4:
	.string	"decl"
.LASF76:
	.string	"extra_offset"
.LASF29:
	.string	"length"
.LASF18:
	.string	"bytes"
	.ident	"GCC: (GNU) 4.1.2 (Ubuntu 4.1.2-0ubuntu4)"
	.section	.text.__i686.get_pc_thunk.dx,"axG",@progbits,__i686.get_pc_thunk.dx,comdat
.globl __i686.get_pc_thunk.dx
	.hidden	__i686.get_pc_thunk.dx
	.type	__i686.get_pc_thunk.dx, @function
__i686.get_pc_thunk.dx:
	movl	(%esp), %edx
	ret
	.section	.text.__i686.get_pc_thunk.cx,"axG",@progbits,__i686.get_pc_thunk.cx,comdat
.globl __i686.get_pc_thunk.cx
	.hidden	__i686.get_pc_thunk.cx
	.type	__i686.get_pc_thunk.cx, @function
__i686.get_pc_thunk.cx:
	movl	(%esp), %ecx
	ret
	.section	.text.__i686.get_pc_thunk.bx,"axG",@progbits,__i686.get_pc_thunk.bx,comdat
.globl __i686.get_pc_thunk.bx
	.hidden	__i686.get_pc_thunk.bx
	.type	__i686.get_pc_thunk.bx, @function
__i686.get_pc_thunk.bx:
	movl	(%esp), %ebx
	ret
	.section	.note.GNU-stack,"",@progbits
