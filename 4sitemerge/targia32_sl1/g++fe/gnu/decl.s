	.file	"decl.c"
	.section	.debug_abbrev,"",@progbits
.Ldebug_abbrev0:
	.section	.debug_info,"",@progbits
.Ldebug_info0:
	.section	.debug_line,"",@progbits
.Ldebug_line0:
	.text
.Ltext0:
	.local	deprecated_state
	.comm	deprecated_state,4,4
.globl adding_implicit_members
	.bss
	.align 4
	.type	adding_implicit_members, @object
	.size	adding_implicit_members, 4
adding_implicit_members:
	.zero	4
	.text
	.type	binding_table_expand, @function
binding_table_expand:
.LFB20:
	.file 1 "../../../kg++fe/gnu/cp/decl.c"
	.loc 1 404 0
	pushl	%ebp
.LCFI0:
	movl	%esp, %ebp
.LCFI1:
	subl	$40, %esp
.LCFI2:
	.loc 1 405 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 406 0
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 407 0
	movl	-32(%ebp), %eax
	addl	%eax, %eax
	movl	%eax, -24(%ebp)
	.loc 1 408 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 411 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_table_construct
	.loc 1 412 0
	movl	$0, -16(%ebp)
	jmp	.L2
.L3:
.LBB2:
	.loc 1 414 0
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 415 0
	jmp	.L4
.L5:
.LBB3:
	.loc 1 417 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	24(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 418 0
	movl	-8(%ebp), %eax
	movl	%eax, %edx
	shrl	$3, %edx
	movl	-24(%ebp), %eax
	subl	$1, %eax
	andl	%edx, %eax
	movl	%eax, -4(%ebp)
	.loc 1 420 0
	movl	-16(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	addl	-20(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%edx)
	.loc 1 421 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 422 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	sall	$2, %eax
	addl	%eax, %edx
	movl	-12(%ebp), %eax
	movl	%eax, (%edx)
.LBE3:
	.loc 1 415 0
	movl	-16(%ebp), %eax
	sall	$2, %eax
	addl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L4:
	cmpl	$0, -12(%ebp)
	jne	.L5
.LBE2:
	.loc 1 412 0
	addl	$1, -16(%ebp)
.L2:
	movl	-16(%ebp), %eax
	cmpl	-32(%ebp), %eax
	jb	.L3
	.loc 1 425 0
	movl	8(%ebp), %edx
	movl	-28(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 426 0
	leave
	ret
.LFE20:
	.size	binding_table_expand, .-binding_table_expand
	.type	binding_table_construct, @function
binding_table_construct:
.LFB17:
	.loc 1 365 0
	pushl	%ebp
.LCFI3:
	movl	%esp, %ebp
.LCFI4:
	pushl	%ebx
.LCFI5:
	subl	$4, %esp
.LCFI6:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 366 0
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 367 0
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 1 368 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	sall	$2, %eax
	movl	%eax, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 370 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE17:
	.size	binding_table_construct, .-binding_table_construct
.globl binding_table_find
	.type	binding_table_find, @function
binding_table_find:
.LFB22:
	.loc 1 447 0
	pushl	%ebp
.LCFI7:
	movl	%esp, %ebp
.LCFI8:
	subl	$16, %esp
.LCFI9:
	.loc 1 448 0
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 449 0
	movl	8(%ebp), %eax
	movl	(%eax), %ecx
	movl	-8(%ebp), %eax
	movl	%eax, %edx
	shrl	$3, %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	subl	$1, %eax
	andl	%edx, %eax
	sall	$2, %eax
	leal	(%ecx,%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 451 0
	jmp	.L12
.L13:
	.loc 1 452 0
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
.L12:
	.loc 1 451 0
	cmpl	$0, -4(%ebp)
	je	.L14
	movl	-4(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L13
.L14:
	.loc 1 454 0
	movl	-4(%ebp), %eax
	.loc 1 455 0
	leave
	ret
.LFE22:
	.size	binding_table_find, .-binding_table_find
	.type	binding_table_remove_anonymous_types, @function
binding_table_remove_anonymous_types:
.LFB25:
	.loc 1 509 0
	pushl	%ebp
.LCFI10:
	movl	%esp, %ebp
.LCFI11:
	subl	$24, %esp
.LCFI12:
	.loc 1 510 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 513 0
	movl	$0, -12(%ebp)
	jmp	.L18
.L19:
.LBB4:
	.loc 1 515 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 517 0
	jmp	.L28
.L21:
	.loc 1 518 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L22
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L22
.LBB5:
	.loc 1 520 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 521 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 522 0
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	leal	-1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 523 0
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_entry_free
	.loc 1 518 0
	jmp	.L20
.L22:
.LBE5:
	.loc 1 526 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L20:
.L28:
	.loc 1 517 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L21
.LBE4:
	.loc 1 513 0
	addl	$1, -12(%ebp)
.L18:
	movl	-12(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jb	.L19
	.loc 1 528 0
	leave
	ret
.LFE25:
	.size	binding_table_remove_anonymous_types, .-binding_table_remove_anonymous_types
	.type	binding_entry_free, @function
binding_entry_free:
.LFB16:
	.loc 1 335 0
	pushl	%ebp
.LCFI13:
	movl	%esp, %ebp
.LCFI14:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 336 0
	movl	free_binding_entry@GOTOFF(%ecx), %eax
	movl	8(%ebp), %edx
	movl	%eax, (%edx)
	.loc 1 337 0
	movl	8(%ebp), %eax
	movl	%eax, free_binding_entry@GOTOFF(%ecx)
	.loc 1 338 0
	popl	%ebp
	ret
.LFE16:
	.size	binding_entry_free, .-binding_entry_free
.globl binding_table_foreach
	.type	binding_table_foreach, @function
binding_table_foreach:
.LFB26:
	.loc 1 533 0
	pushl	%ebp
.LCFI15:
	movl	%esp, %ebp
.LCFI16:
	subl	$24, %esp
.LCFI17:
	.loc 1 534 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 537 0
	movl	$0, -8(%ebp)
	jmp	.L32
.L33:
.LBB6:
	.loc 1 539 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 540 0
	jmp	.L34
.L35:
	.loc 1 541 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	movl	12(%ebp), %eax
	call	*%eax
	.loc 1 540 0
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
.L34:
	cmpl	$0, -4(%ebp)
	jne	.L35
.LBE6:
	.loc 1 537 0
	addl	$1, -8(%ebp)
.L32:
	movl	-8(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jb	.L33
	.loc 1 543 0
	leave
	ret
.LFE26:
	.size	binding_table_foreach, .-binding_table_foreach
	.local	binding_depth
	.comm	binding_depth,4,4
	.local	is_class_level
	.comm	is_class_level,4,4
	.type	indent, @function
indent:
.LFB28:
	.loc 1 733 0
	pushl	%ebp
.LCFI18:
	movl	%esp, %ebp
.LCFI19:
	pushl	%ebx
.LCFI20:
	subl	$36, %esp
.LCFI21:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 736 0
	movl	$0, -8(%ebp)
	jmp	.L40
.L41:
	.loc 1 737 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$32, (%esp)
	call	putc_unlocked@PLT
	.loc 1 736 0
	addl	$1, -8(%ebp)
.L40:
	movl	8(%ebp), %eax
	addl	%eax, %eax
	cmpl	-8(%ebp), %eax
	ja	.L41
	.loc 1 738 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE28:
	.size	indent, .-indent
	.type	push_binding_level, @function
push_binding_level:
.LFB29:
	.loc 1 746 0
	pushl	%ebp
.LCFI22:
	movl	%esp, %ebp
.LCFI23:
	pushl	%ebx
.LCFI24:
	subl	$20, %esp
.LCFI25:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 749 0
	movl	8(%ebp), %eax
	movl	%eax, %edx
	movl	$68, %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	memset@PLT
	.loc 1 750 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L45
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L45
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L48
.L45:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L48:
	movl	8(%ebp), %eax
	movl	-8(%ebp), %edx
	movl	%edx, 52(%eax)
	.loc 1 752 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
	.loc 1 756 0
	movl	12(%ebp), %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$4, %edx
	movzbl	60(%ecx), %eax
	andl	$-17, %eax
	orl	%edx, %eax
	movb	%al, 60(%ecx)
	.loc 1 757 0
	movl	8(%ebp), %edx
	movzbl	60(%edx), %eax
	orl	$32, %eax
	movb	%al, 60(%edx)
	.loc 1 759 0
	movl	16(%ebp), %eax
	andl	$3, %eax
	movl	8(%ebp), %ecx
	andl	$3, %eax
	leal	0(,%eax,4), %edx
	movzbl	60(%ecx), %eax
	andl	$-13, %eax
	orl	%edx, %eax
	movb	%al, 60(%ecx)
	.loc 1 770 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE29:
	.size	push_binding_level, .-push_binding_level
	.type	copy_to_current_binding_level, @function
copy_to_current_binding_level:
.LFB27:
	.loc 1 691 0
	pushl	%ebp
.LCFI26:
	movl	%esp, %ebp
.LCFI27:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 692 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L51
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L51
	.loc 1 693 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 84(%edx)
	.loc 1 692 0
	jmp	.L55
.L51:
	.loc 1 695 0
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 100(%edx)
.L55:
	.loc 1 696 0
	popl	%ebp
	ret
.LFE27:
	.size	copy_to_current_binding_level, .-copy_to_current_binding_level
	.type	find_class_binding_level, @function
find_class_binding_level:
.LFB30:
	.loc 1 777 0
	pushl	%ebp
.LCFI28:
	movl	%esp, %ebp
.LCFI29:
	subl	$20, %esp
.LCFI30:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 778 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L57
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L57
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L60
.L57:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -20(%ebp)
.L60:
	movl	-20(%ebp), %eax
	movl	%eax, -4(%ebp)
	.loc 1 780 0
	jmp	.L61
.L62:
	.loc 1 781 0
	movl	-4(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -4(%ebp)
.L61:
	.loc 1 780 0
	cmpl	$0, -4(%ebp)
	je	.L63
	movl	-4(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L62
.L63:
	.loc 1 782 0
	cmpl	$0, -4(%ebp)
	je	.L65
	movl	-4(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L65
	.loc 1 783 0
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	movl	%eax, 96(%edx)
	.loc 1 782 0
	jmp	.L69
.L65:
	.loc 1 785 0
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	$0, 96(%eax)
.L69:
	.loc 1 786 0
	leave
	ret
.LFE30:
	.size	find_class_binding_level, .-find_class_binding_level
	.section	.rodata
	.type	__FUNCTION__.17599, @object
	.size	__FUNCTION__.17599, 18
__FUNCTION__.17599:
	.string	"pop_binding_level"
.LC0:
	.string	"../../../kg++fe/gnu/cp/decl.c"
	.text
	.type	pop_binding_level, @function
pop_binding_level:
.LFB31:
	.loc 1 790 0
	pushl	%ebp
.LCFI31:
	movl	%esp, %ebp
.LCFI32:
	pushl	%ebx
.LCFI33:
	subl	$36, %esp
.LCFI34:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 791 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L71
	.loc 1 793 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L73
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L73
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L76
.L73:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -20(%ebp)
.L76:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	%eax, -20(%ebp)
	jne	.L71
	leal	__FUNCTION__.17599@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$793, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L71:
.LBB7:
	.loc 1 810 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L79
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L79
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -16(%ebp)
	jmp	.L82
.L79:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -16(%ebp)
.L82:
	movl	-16(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 812 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L83
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L83
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L86
.L83:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -12(%ebp)
.L86:
	movl	-12(%ebp), %edx
	movl	52(%edx), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
	.loc 1 816 0
	movl	free_binding_level@GOTOFF(%ebx), %eax
	movl	-8(%ebp), %edx
	movl	%eax, 52(%edx)
	.loc 1 817 0
	movl	-8(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	je	.L87
	.loc 1 818 0
	movl	-8(%ebp), %edx
	movl	20(%edx), %eax
	movl	%eax, (%esp)
	call	binding_table_free
	jmp	.L89
.L87:
	.loc 1 820 0
	movl	-8(%ebp), %eax
	movl	$0, 20(%eax)
.L89:
	.loc 1 823 0
	movl	-8(%ebp), %edx
	movl	%edx, free_binding_level@GOTOFF(%ebx)
	.loc 1 824 0
	call	find_class_binding_level
.LBE7:
	.loc 1 826 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE31:
	.size	pop_binding_level, .-pop_binding_level
	.type	binding_table_free, @function
binding_table_free:
.LFB18:
	.loc 1 375 0
	pushl	%ebp
.LCFI35:
	movl	%esp, %ebp
.LCFI36:
	subl	$20, %esp
.LCFI37:
	.loc 1 377 0
	cmpl	$0, 8(%ebp)
	je	.L100
	.loc 1 380 0
	movl	$0, -8(%ebp)
	jmp	.L94
.L97:
.LBB8:
	.loc 1 384 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 385 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	addl	%eax, %edx
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%edx)
	.loc 1 386 0
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_entry_free
.L96:
.LBE8:
	.loc 1 382 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L97
	.loc 1 380 0
	addl	$1, -8(%ebp)
.L94:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	-8(%ebp), %eax
	ja	.L96
	.loc 1 389 0
	movl	8(%ebp), %eax
	movl	$0, 8(%eax)
.L100:
	.loc 1 390 0
	leave
	ret
.LFE18:
	.size	binding_table_free, .-binding_table_free
	.section	.rodata
	.type	__FUNCTION__.17701, @object
	.size	__FUNCTION__.17701, 22
__FUNCTION__.17701:
	.string	"suspend_binding_level"
	.text
	.type	suspend_binding_level, @function
suspend_binding_level:
.LFB32:
	.loc 1 830 0
	pushl	%ebp
.LCFI38:
	movl	%esp, %ebp
.LCFI39:
	pushl	%ebx
.LCFI40:
	subl	$20, %esp
.LCFI41:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 831 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	je	.L102
	.loc 1 834 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
.L102:
	.loc 1 840 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L104
	.loc 1 841 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L106
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L106
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L109
.L106:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -12(%ebp)
.L109:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	%eax, -12(%ebp)
	jne	.L104
	leal	__FUNCTION__.17701@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$841, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L104:
	.loc 1 858 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L112
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L112
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L115
.L112:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L115:
	movl	-8(%ebp), %edx
	movl	52(%edx), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
	.loc 1 862 0
	call	find_class_binding_level
	.loc 1 863 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE32:
	.size	suspend_binding_level, .-suspend_binding_level
	.section	.rodata
	.type	__FUNCTION__.17790, @object
	.size	__FUNCTION__.17790, 21
__FUNCTION__.17790:
	.string	"resume_binding_level"
	.text
	.type	resume_binding_level, @function
resume_binding_level:
.LFB33:
	.loc 1 868 0
	pushl	%ebp
.LCFI42:
	movl	%esp, %ebp
.LCFI43:
	pushl	%ebx
.LCFI44:
	subl	$20, %esp
.LCFI45:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 871 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	je	.L118
	leal	__FUNCTION__.17790@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$871, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L118:
	.loc 1 873 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -12(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L120
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L120
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L123
.L120:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L123:
	movl	-8(%ebp), %eax
	cmpl	%eax, -12(%ebp)
	je	.L124
	leal	__FUNCTION__.17790@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$873, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L124:
	.loc 1 875 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
	.loc 1 888 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE33:
	.size	resume_binding_level, .-resume_binding_level
	.type	make_binding_level, @function
make_binding_level:
.LFB34:
	.loc 1 895 0
	pushl	%ebp
.LCFI46:
	movl	%esp, %ebp
.LCFI47:
	pushl	%ebx
.LCFI48:
	subl	$4, %esp
.LCFI49:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 897 0
	movl	$68, (%esp)
	call	ggc_alloc@PLT
	.loc 1 898 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE34:
	.size	make_binding_level, .-make_binding_level
.globl global_bindings_p
	.type	global_bindings_p, @function
global_bindings_p:
.LFB35:
	.loc 1 904 0
	pushl	%ebp
.LCFI50:
	movl	%esp, %ebp
.LCFI51:
	subl	$4, %esp
.LCFI52:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 905 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L130
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L130
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L133
.L130:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L133:
	movl	global_namespace@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	%eax, -4(%ebp)
	sete	%al
	movzbl	%al, %eax
	.loc 1 906 0
	leave
	ret
.LFE35:
	.size	global_bindings_p, .-global_bindings_p
	.type	innermost_nonclass_level, @function
innermost_nonclass_level:
.LFB36:
	.loc 1 912 0
	pushl	%ebp
.LCFI53:
	movl	%esp, %ebp
.LCFI54:
	subl	$20, %esp
.LCFI55:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 915 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L136
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L136
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L139
.L136:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -20(%ebp)
.L139:
	movl	-20(%ebp), %eax
	movl	%eax, -4(%ebp)
	.loc 1 916 0
	jmp	.L140
.L141:
	.loc 1 917 0
	movl	-4(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -4(%ebp)
.L140:
	.loc 1 916 0
	movl	-4(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	je	.L141
	.loc 1 919 0
	movl	-4(%ebp), %eax
	.loc 1 920 0
	leave
	ret
.LFE36:
	.size	innermost_nonclass_level, .-innermost_nonclass_level
.globl toplevel_bindings_p
	.type	toplevel_bindings_p, @function
toplevel_bindings_p:
.LFB37:
	.loc 1 930 0
	pushl	%ebp
.LCFI56:
	movl	%esp, %ebp
.LCFI57:
	subl	$20, %esp
.LCFI58:
	.loc 1 931 0
	call	innermost_nonclass_level
	movl	%eax, -4(%ebp)
	.loc 1 933 0
	movl	-4(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L145
	movl	-4(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L147
.L145:
	movl	$1, -20(%ebp)
	jmp	.L148
.L147:
	movl	$0, -20(%ebp)
.L148:
	movl	-20(%ebp), %eax
	.loc 1 934 0
	leave
	ret
.LFE37:
	.size	toplevel_bindings_p, .-toplevel_bindings_p
.globl namespace_bindings_p
	.type	namespace_bindings_p, @function
namespace_bindings_p:
.LFB38:
	.loc 1 942 0
	pushl	%ebp
.LCFI59:
	movl	%esp, %ebp
.LCFI60:
	subl	$16, %esp
.LCFI61:
	.loc 1 943 0
	call	innermost_nonclass_level
	movl	%eax, -4(%ebp)
	.loc 1 945 0
	movl	-4(%ebp), %eax
	movzbl	61(%eax), %eax
	shrb	%al
	andl	$1, %eax
	movzbl	%al, %eax
	.loc 1 946 0
	leave
	ret
.LFE38:
	.size	namespace_bindings_p, .-namespace_bindings_p
.globl keep_next_level
	.type	keep_next_level, @function
keep_next_level:
.LFB39:
	.loc 1 955 0
	pushl	%ebp
.LCFI62:
	movl	%esp, %ebp
.LCFI63:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 956 0
	movl	8(%ebp), %eax
	movl	%eax, keep_next_level_flag@GOTOFF(%ecx)
	.loc 1 957 0
	popl	%ebp
	ret
.LFE39:
	.size	keep_next_level, .-keep_next_level
.globl kept_level_p
	.type	kept_level_p, @function
kept_level_p:
.LFB40:
	.loc 1 963 0
	pushl	%ebp
.LCFI64:
	movl	%esp, %ebp
.LCFI65:
	subl	$24, %esp
.LCFI66:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 964 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L155
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L155
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L158
.L155:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -20(%ebp)
.L158:
	movl	-20(%ebp), %edx
	movl	44(%edx), %eax
	testl	%eax, %eax
	jne	.L159
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L161
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L161
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -16(%ebp)
	jmp	.L164
.L161:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -16(%ebp)
.L164:
	movl	-16(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$12, %eax
	testb	%al, %al
	jne	.L159
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L166
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L166
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L169
.L166:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -12(%ebp)
.L169:
	movl	-12(%ebp), %edx
	movl	(%edx), %eax
	testl	%eax, %eax
	jne	.L159
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L171
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L171
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L174
.L171:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L174:
	movl	-8(%ebp), %edx
	movl	20(%edx), %eax
	testl	%eax, %eax
	je	.L175
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L177
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L177
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L180
.L177:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L180:
	movl	-4(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L175
.L159:
	movl	$1, -24(%ebp)
	jmp	.L181
.L175:
	movl	$0, -24(%ebp)
.L181:
	movl	-24(%ebp), %eax
	.loc 1 969 0
	leave
	ret
.LFE40:
	.size	kept_level_p, .-kept_level_p
.globl innermost_scope_is_class_p
	.type	innermost_scope_is_class_p, @function
innermost_scope_is_class_p:
.LFB41:
	.loc 1 975 0
	pushl	%ebp
.LCFI67:
	movl	%esp, %ebp
.LCFI68:
	subl	$4, %esp
.LCFI69:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 976 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L184
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L184
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L187
.L184:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L187:
	movl	-4(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	sete	%al
	movzbl	%al, %eax
	.loc 1 977 0
	leave
	ret
.LFE41:
	.size	innermost_scope_is_class_p, .-innermost_scope_is_class_p
	.type	declare_namespace_level, @function
declare_namespace_level:
.LFB42:
	.loc 1 981 0
	pushl	%ebp
.LCFI70:
	movl	%esp, %ebp
.LCFI71:
	subl	$4, %esp
.LCFI72:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 982 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L190
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L190
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L193
.L190:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L193:
	movl	-4(%ebp), %edx
	movzbl	61(%edx), %eax
	orl	$2, %eax
	movl	-4(%ebp), %edx
	movb	%al, 61(%edx)
	.loc 1 983 0
	leave
	ret
.LFE42:
	.size	declare_namespace_level, .-declare_namespace_level
.globl template_parm_scope_p
	.type	template_parm_scope_p, @function
template_parm_scope_p:
.LFB43:
	.loc 1 990 0
	pushl	%ebp
.LCFI73:
	movl	%esp, %ebp
.LCFI74:
	subl	$4, %esp
.LCFI75:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 991 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L196
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L196
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L199
.L196:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L199:
	movl	-4(%ebp), %edx
	movzbl	60(%edx), %eax
	shrb	$7, %al
	movzbl	%al, %eax
	.loc 1 992 0
	leave
	ret
.LFE43:
	.size	template_parm_scope_p, .-template_parm_scope_p
.globl current_tmpl_spec_kind
	.type	current_tmpl_spec_kind, @function
current_tmpl_spec_kind:
.LFB44:
	.loc 1 1001 0
	pushl	%ebp
.LCFI76:
	movl	%esp, %ebp
.LCFI77:
	subl	$28, %esp
.LCFI78:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1002 0
	movl	$0, -16(%ebp)
	.loc 1 1003 0
	movl	$0, -12(%ebp)
	.loc 1 1004 0
	movl	$0, -8(%ebp)
	.loc 1 1008 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L202
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L202
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L205
.L202:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L205:
	movl	-28(%ebp), %eax
	movl	%eax, -4(%ebp)
	jmp	.L206
.L207:
	.loc 1 1019 0
	movl	-4(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L208
	.loc 1 1021 0
	cmpl	$0, -16(%ebp)
	jne	.L210
	.loc 1 1022 0
	movl	$1, -8(%ebp)
	jmp	.L213
.L210:
	.loc 1 1024 0
	movl	$1, -12(%ebp)
	jmp	.L213
.L208:
	.loc 1 1026 0
	cmpl	$1, -12(%ebp)
	jne	.L213
	.loc 1 1027 0
	movl	$1, -24(%ebp)
	jmp	.L215
.L213:
	.loc 1 1029 0
	addl	$1, -16(%ebp)
	.loc 1 1008 0
	movl	-4(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -4(%ebp)
.L206:
	movl	-4(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L207
	.loc 1 1033 0
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	72(%eax), %eax
	testl	%eax, %eax
	je	.L217
	.loc 1 1035 0
	cmpl	$0, -16(%ebp)
	je	.L219
	.loc 1 1042 0
	movl	$2, -24(%ebp)
	jmp	.L215
.L219:
	.loc 1 1044 0
	movl	$7, -24(%ebp)
	jmp	.L215
.L217:
	.loc 1 1047 0
	movl	-16(%ebp), %eax
	cmpl	8(%ebp), %eax
	jge	.L221
	.loc 1 1055 0
	movl	$4, -24(%ebp)
	jmp	.L215
.L221:
	.loc 1 1056 0
	movl	-16(%ebp), %eax
	cmpl	8(%ebp), %eax
	jne	.L223
	.loc 1 1064 0
	movl	$0, -24(%ebp)
	jmp	.L215
.L223:
	.loc 1 1065 0
	movl	8(%ebp), %eax
	addl	$1, %eax
	cmpl	-16(%ebp), %eax
	jge	.L225
	.loc 1 1071 0
	movl	$3, -24(%ebp)
	jmp	.L215
.L225:
	.loc 1 1080 0
	cmpl	$0, -8(%ebp)
	je	.L227
	movl	$6, -20(%ebp)
	jmp	.L229
.L227:
	movl	$5, -20(%ebp)
.L229:
	movl	-20(%ebp), %eax
	movl	%eax, -24(%ebp)
.L215:
	movl	-24(%ebp), %eax
	.loc 1 1081 0
	leave
	ret
.LFE44:
	.size	current_tmpl_spec_kind, .-current_tmpl_spec_kind
.globl set_class_shadows
	.type	set_class_shadows, @function
set_class_shadows:
.LFB45:
	.loc 1 1086 0
	pushl	%ebp
.LCFI79:
	movl	%esp, %ebp
.LCFI80:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1087 0
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 32(%edx)
	.loc 1 1088 0
	popl	%ebp
	ret
.LFE45:
	.size	set_class_shadows, .-set_class_shadows
.globl pushlevel
	.type	pushlevel, @function
pushlevel:
.LFB46:
	.loc 1 1097 0
	pushl	%ebp
.LCFI81:
	movl	%esp, %ebp
.LCFI82:
	pushl	%ebx
.LCFI83:
	subl	$36, %esp
.LCFI84:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1100 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L234
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L240
.L234:
	.loc 1 1104 0
	movl	free_binding_level@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L237
	.loc 1 1106 0
	movl	free_binding_level@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 1107 0
	movl	free_binding_level@GOTOFF(%ebx), %eax
	movl	52(%eax), %eax
	movl	%eax, free_binding_level@GOTOFF(%ebx)
	jmp	.L239
.L237:
	.loc 1 1110 0
	call	make_binding_level
	movl	%eax, -8(%ebp)
.L239:
	.loc 1 1112 0
	movl	keep_next_level_flag@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_binding_level
	.loc 1 1113 0
	movl	$0, keep_next_level_flag@GOTOFF(%ebx)
.L240:
	.loc 1 1114 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE46:
	.size	pushlevel, .-pushlevel
.globl maybe_push_cleanup_level
	.type	maybe_push_cleanup_level, @function
maybe_push_cleanup_level:
.LFB47:
	.loc 1 1123 0
	pushl	%ebp
.LCFI85:
	movl	%esp, %ebp
.LCFI86:
	pushl	%ebx
.LCFI87:
	subl	$20, %esp
.LCFI88:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1124 0
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L249
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L244
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L244
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L247
.L244:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L247:
	movl	-8(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L249
	.loc 1 1127 0
	movl	$2, (%esp)
	call	keep_next_level@PLT
	.loc 1 1128 0
	movl	$1, (%esp)
	call	pushlevel@PLT
	.loc 1 1129 0
	call	clear_last_expr@PLT
	.loc 1 1130 0
	movl	$1, 4(%esp)
	movl	$1, (%esp)
	call	add_scope_stmt@PLT
.L249:
	.loc 1 1132 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE47:
	.size	maybe_push_cleanup_level, .-maybe_push_cleanup_level
	.section	.rodata
	.type	__FUNCTION__.18128, @object
	.size	__FUNCTION__.18128, 12
__FUNCTION__.18128:
	.string	"begin_scope"
	.text
.globl begin_scope
	.type	begin_scope, @function
begin_scope:
.LFB48:
	.loc 1 1140 0
	pushl	%ebp
.LCFI89:
	movl	%esp, %ebp
.LCFI90:
	pushl	%ebx
.LCFI91:
	subl	$36, %esp
.LCFI92:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1141 0
	movl	$0, (%esp)
	call	pushlevel@PLT
	.loc 1 1143 0
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	cmpl	$0, -16(%ebp)
	je	.L252
	cmpl	$1, -16(%ebp)
	je	.L253
	jmp	.L251
.L253:
	.loc 1 1146 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L254
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L254
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L257
.L254:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -12(%ebp)
.L257:
	movl	-12(%ebp), %edx
	movzbl	61(%edx), %eax
	orl	$1, %eax
	movl	-12(%ebp), %edx
	movb	%al, 61(%edx)
.L252:
	.loc 1 1150 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L258
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L258
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L261
.L258:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L261:
	movl	-8(%ebp), %edx
	movzbl	60(%edx), %eax
	orl	$-128, %eax
	movl	-8(%ebp), %edx
	movb	%al, 60(%edx)
	.loc 1 1156 0
	jmp	.L262
.L251:
	.loc 1 1154 0
	leal	__FUNCTION__.18128@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1154, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L262:
	.loc 1 1156 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE48:
	.size	begin_scope, .-begin_scope
.globl finish_scope
	.type	finish_scope, @function
finish_scope:
.LFB49:
	.loc 1 1162 0
	pushl	%ebp
.LCFI93:
	movl	%esp, %ebp
.LCFI94:
	pushl	%ebx
.LCFI95:
	subl	$20, %esp
.LCFI96:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1163 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	$0, (%esp)
	call	poplevel@PLT
	.loc 1 1164 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE49:
	.size	finish_scope, .-finish_scope
.globl note_level_for_for
	.type	note_level_for_for, @function
note_level_for_for:
.LFB50:
	.loc 1 1168 0
	pushl	%ebp
.LCFI97:
	movl	%esp, %ebp
.LCFI98:
	subl	$4, %esp
.LCFI99:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1169 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L266
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L266
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L269
.L266:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L269:
	movl	-4(%ebp), %edx
	movzbl	61(%edx), %eax
	orl	$4, %eax
	movl	-4(%ebp), %edx
	movb	%al, 61(%edx)
	.loc 1 1170 0
	leave
	ret
.LFE50:
	.size	note_level_for_for, .-note_level_for_for
.globl note_level_for_try
	.type	note_level_for_try, @function
note_level_for_try:
.LFB51:
	.loc 1 1176 0
	pushl	%ebp
.LCFI100:
	movl	%esp, %ebp
.LCFI101:
	subl	$4, %esp
.LCFI102:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1177 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L272
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L272
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L275
.L272:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L275:
	movl	-4(%ebp), %edx
	movzbl	61(%edx), %eax
	orl	$8, %eax
	movl	-4(%ebp), %edx
	movb	%al, 61(%edx)
	.loc 1 1178 0
	leave
	ret
.LFE51:
	.size	note_level_for_try, .-note_level_for_try
.globl note_level_for_catch
	.type	note_level_for_catch, @function
note_level_for_catch:
.LFB52:
	.loc 1 1184 0
	pushl	%ebp
.LCFI103:
	movl	%esp, %ebp
.LCFI104:
	subl	$4, %esp
.LCFI105:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1185 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L278
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L278
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L281
.L278:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L281:
	movl	-4(%ebp), %edx
	movzbl	61(%edx), %eax
	orl	$16, %eax
	movl	-4(%ebp), %edx
	movb	%al, 61(%edx)
	.loc 1 1186 0
	leave
	ret
.LFE52:
	.size	note_level_for_catch, .-note_level_for_catch
	.type	push_binding, @function
push_binding:
.LFB53:
	.loc 1 1204 0
	pushl	%ebp
.LCFI106:
	movl	%esp, %ebp
.LCFI107:
	pushl	%ebx
.LCFI108:
	subl	$20, %esp
.LCFI109:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1207 0
	movl	free_bindings@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L284
	.loc 1 1209 0
	movl	free_bindings@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 1210 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, free_bindings@GOTOFF(%ebx)
	jmp	.L286
.L284:
	.loc 1 1213 0
	movl	$20, (%esp)
	call	ggc_alloc@PLT
	movl	%eax, -8(%ebp)
.L286:
	.loc 1 1216 0
	movl	-8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 1217 0
	movl	-8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 1 1218 0
	movl	-8(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, 12(%edx)
	.loc 1 1219 0
	movl	-8(%ebp), %edx
	movzbl	16(%edx), %eax
	andl	$-3, %eax
	movb	%al, 16(%edx)
	.loc 1 1220 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	cmpl	16(%ebp), %eax
	setne	%al
	movl	-8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	16(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 16(%ecx)
	.loc 1 1221 0
	movl	-8(%ebp), %edx
	movzbl	16(%edx), %eax
	orl	$1, %eax
	movb	%al, 16(%edx)
	.loc 1 1224 0
	movl	8(%ebp), %eax
	movl	44(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 1225 0
	movl	8(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 44(%edx)
	.loc 1 1226 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE53:
	.size	push_binding, .-push_binding
	.section	.rodata
.LC1:
	.string	"declaration of `%#D'"
	.align 4
.LC2:
	.string	"conflicts with previous declaration `%#D'"
	.text
	.type	add_binding, @function
add_binding:
.LFB54:
	.loc 1 1238 0
	pushl	%ebp
.LCFI110:
	movl	%esp, %ebp
.LCFI111:
	pushl	%ebx
.LCFI112:
	subl	$36, %esp
.LCFI113:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1239 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 1240 0
	movl	$1, -8(%ebp)
	.loc 1 1242 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 1243 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L289
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L289
	.loc 1 1245 0
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 1243 0
	jmp	.L292
.L289:
	.loc 1 1246 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L293
	.loc 1 1250 0
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	jmp	.L292
.L293:
	.loc 1 1251 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L295
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L295
	.loc 1 1259 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 1260 0
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 1261 0
	movl	-12(%ebp), %edx
	movzbl	16(%edx), %eax
	andl	$-3, %eax
	movb	%al, 16(%edx)
	.loc 1 1251 0
	jmp	.L292
.L295:
	.loc 1 1263 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L298
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L298
	movl	12(%ebp), %eax
	movl	52(%eax), %edx
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	52(%eax), %eax
	cmpl	%eax, %edx
	jne	.L298
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L302
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L302
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	je	.L298
.L302:
	.loc 1 1280 0
	movl	$0, -8(%ebp)
	.loc 1 1263 0
	jmp	.L292
.L298:
	.loc 1 1289 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L305
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L305
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L305
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L305
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L310
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	je	.L305
.L310:
	.loc 1 1295 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	.loc 1 1296 0
	movl	$0, -8(%ebp)
	.loc 1 1289 0
	jmp	.L292
.L305:
	.loc 1 1300 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC1@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 1301 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC2@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 1303 0
	movl	$0, -8(%ebp)
.L292:
	.loc 1 1306 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-8(%ebp), %eax
	.loc 1 1307 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE54:
	.size	add_binding, .-add_binding
	.type	add_decl_to_level, @function
add_decl_to_level:
.LFB55:
	.loc 1 1315 0
	pushl	%ebp
.LCFI114:
	movl	%esp, %ebp
.LCFI115:
	pushl	%esi
.LCFI116:
	pushl	%ebx
.LCFI117:
	subl	$16, %esp
.LCFI118:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1316 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L314
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	jne	.L314
	.loc 1 1319 0
	movl	12(%ebp), %eax
	movl	8(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 1320 0
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 1316 0
	jmp	.L329
.L314:
	.loc 1 1322 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L318
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L318
	.loc 1 1324 0
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 1325 0
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 16(%edx)
	.loc 1 1322 0
	jmp	.L329
.L318:
	.loc 1 1331 0
	movl	12(%ebp), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 1332 0
	movl	12(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 1333 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	leal	1(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 1336 0
	movl	12(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L329
	.loc 1 1337 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L322
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L324
.L322:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L329
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L324
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L329
.L324:
	.loc 1 1340 0
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jb	.L327
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	(%eax), %eax
	leal	(%eax,%eax), %edx
	movl	12(%ebp), %eax
	movl	12(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	varray_grow@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, 12(%eax)
.L327:
	movl	12(%ebp), %eax
	movl	12(%eax), %esi
	movl	12(%ebp), %eax
	movl	12(%eax), %ecx
	movl	4(%ecx), %edx
	movl	8(%ebp), %eax
	movl	%eax, 16(%esi,%edx,4)
	leal	1(%edx), %eax
	movl	%eax, 4(%ecx)
.L329:
	.loc 1 1342 0
	addl	$16, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE55:
	.size	add_decl_to_level, .-add_decl_to_level
.globl push_local_binding
	.type	push_local_binding, @function
push_local_binding:
.LFB56:
	.loc 1 1354 0
	pushl	%ebp
.LCFI119:
	movl	%esp, %ebp
.LCFI120:
	pushl	%ebx
.LCFI121:
	subl	$36, %esp
.LCFI122:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1359 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L331
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L331
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L334
.L331:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L334:
	movl	-24(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 1360 0
	jmp	.L335
.L336:
	.loc 1 1361 0
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -8(%ebp)
.L335:
	.loc 1 1360 0
	movl	-8(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	je	.L336
	.loc 1 1363 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name_current_level@PLT
	testl	%eax, %eax
	je	.L338
	.loc 1 1366 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	add_binding
	testl	%eax, %eax
	je	.L346
	.loc 1 1370 0
	jmp	.L342
.L338:
	.loc 1 1374 0
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_binding
.L342:
	.loc 1 1376 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	je	.L343
	movl	16(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L345
.L343:
	.loc 1 1380 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	build_tree_list@PLT
	movl	%eax, 12(%ebp)
.L345:
	.loc 1 1384 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	add_decl_to_level
.L346:
	.loc 1 1385 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE56:
	.size	push_local_binding, .-push_local_binding
	.section	.rodata
	.type	__FUNCTION__.18391, @object
	.size	__FUNCTION__.18391, 19
__FUNCTION__.18391:
	.string	"push_class_binding"
	.text
.globl push_class_binding
	.type	push_class_binding, @function
push_class_binding:
.LFB57:
	.loc 1 1394 0
	pushl	%ebp
.LCFI123:
	movl	%esp, %ebp
.LCFI124:
	pushl	%ebx
.LCFI125:
	subl	$52, %esp
.LCFI126:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1395 0
	movl	$1, -16(%ebp)
	.loc 1 1396 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 1399 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 1403 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	note_name_declared_in_class@PLT
	.loc 1 1405 0
	cmpl	$0, -12(%ebp)
	je	.L348
	movl	-12(%ebp), %eax
	movl	12(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	cmpl	%eax, %edx
	jne	.L348
	.loc 1 1407 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	add_binding
	movl	%eax, -16(%ebp)
	.loc 1 1405 0
	jmp	.L351
.L348:
	.loc 1 1410 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_binding
.L351:
	.loc 1 1417 0
	movl	8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 48(%edx)
	.loc 1 1420 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 1421 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L352
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	je	.L352
	.loc 1 1427 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L355
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L355
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L355
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L355
	.loc 1 1428 0
	movl	-12(%ebp), %eax
	movzbl	16(%eax), %edx
	orl	$2, %edx
	movb	%dl, 16(%eax)
	.loc 1 1427 0
	jmp	.L377
.L355:
	.loc 1 1431 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L361
	.loc 1 1432 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L363
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L365
.L363:
	movl	12(%ebp), %eax
	movl	%eax, -28(%ebp)
.L365:
	movl	-28(%ebp), %edx
	movl	56(%edx), %eax
	testl	%eax, %eax
	je	.L366
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L368
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L370
.L368:
	movl	12(%ebp), %eax
	movl	%eax, -24(%ebp)
.L370:
	movl	-24(%ebp), %edx
	movl	56(%edx), %edx
	movl	%edx, -32(%ebp)
	jmp	.L371
.L366:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
.L371:
	movl	-32(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L372
.L361:
	.loc 1 1435 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	je	.L373
	leal	__FUNCTION__.18391@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1435, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L373:
	.loc 1 1436 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	context_for_name_lookup@PLT
	movl	%eax, -8(%ebp)
.L372:
	.loc 1 1439 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	is_properly_derived_from@PLT
	testl	%eax, %eax
	je	.L375
	.loc 1 1440 0
	movl	-12(%ebp), %eax
	movzbl	16(%eax), %edx
	orl	$2, %edx
	movb	%dl, 16(%eax)
	jmp	.L377
.L375:
	.loc 1 1442 0
	movl	-12(%ebp), %eax
	movzbl	16(%eax), %edx
	andl	$-3, %edx
	movb	%dl, 16(%eax)
	.loc 1 1421 0
	jmp	.L377
.L352:
	.loc 1 1445 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L377
	.loc 1 1449 0
	movl	-12(%ebp), %eax
	movzbl	16(%eax), %edx
	orl	$2, %edx
	movb	%dl, 16(%eax)
.L377:
	.loc 1 1451 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-16(%ebp), %eax
	.loc 1 1452 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE57:
	.size	push_class_binding, .-push_class_binding
	.section	.rodata
	.type	__FUNCTION__.18472, @object
	.size	__FUNCTION__.18472, 12
__FUNCTION__.18472:
	.string	"pop_binding"
	.text
	.type	pop_binding, @function
pop_binding:
.LFB58:
	.loc 1 1461 0
	pushl	%ebp
.LCFI127:
	movl	%esp, %ebp
.LCFI128:
	pushl	%ebx
.LCFI129:
	subl	$36, %esp
.LCFI130:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1464 0
	cmpl	$0, 8(%ebp)
	je	.L392
	.loc 1 1471 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 1474 0
	cmpl	$0, -8(%ebp)
	jne	.L383
	leal	__FUNCTION__.18472@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1474, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L383:
	.loc 1 1478 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L385
	.loc 1 1479 0
	movl	-8(%ebp), %eax
	movl	$0, 4(%eax)
	jmp	.L387
.L385:
	.loc 1 1480 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L388
	.loc 1 1481 0
	movl	-8(%ebp), %eax
	movl	$0, 8(%eax)
	jmp	.L387
.L388:
	.loc 1 1483 0
	leal	__FUNCTION__.18472@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1483, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L387:
	.loc 1 1485 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L392
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	jne	.L392
	.loc 1 1489 0
	movl	8(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 44(%edx)
	.loc 1 1492 0
	movl	free_bindings@GOTOFF(%ebx), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 1493 0
	movl	-8(%ebp), %eax
	movl	%eax, free_bindings@GOTOFF(%ebx)
	.loc 1 1497 0
	movl	-8(%ebp), %eax
	movl	$0, 12(%eax)
.L392:
	.loc 1 1499 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE58:
	.size	pop_binding, .-pop_binding
	.section	.rodata
	.align 4
.LC3:
	.string	"label `%D' used but not defined"
	.align 4
.LC4:
	.string	"label `%D' defined but not used"
	.text
	.type	pop_label, @function
pop_label:
.LFB59:
	.loc 1 1508 0
	pushl	%ebp
.LCFI131:
	movl	%esp, %ebp
.LCFI132:
	pushl	%esi
.LCFI133:
	pushl	%ebx
.LCFI134:
	subl	$16, %esp
.LCFI135:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1509 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L394
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L394
	.loc 1 1511 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L397
	.loc 1 1513 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC3@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 1515 0
	movl	8(%ebp), %eax
	movl	52(%eax), %edx
	movl	input_filename@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%edx, 8(%esp)
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	define_label@PLT
	jmp	.L394
.L397:
	.loc 1 1517 0
	movl	warn_unused_label@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L394
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L394
	.loc 1 1518 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC4@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
.L394:
	.loc 1 1521 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L403
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, %esi
	movl	$12, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, 56(%esi)
.L403:
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 1522 0
	addl	$16, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE59:
	.size	pop_label, .-pop_label
	.type	pop_labels, @function
pop_labels:
.LFB60:
	.loc 1 1531 0
	pushl	%ebp
.LCFI136:
	movl	%esp, %ebp
.LCFI137:
	pushl	%ebx
.LCFI138:
	subl	$36, %esp
.LCFI139:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1536 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	80(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L406
.L407:
	.loc 1 1538 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %edx
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	pop_label
	.loc 1 1541 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %edx
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%edx)
	.loc 1 1542 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 1536 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -8(%ebp)
.L406:
	cmpl	$0, -8(%ebp)
	jne	.L407
	.loc 1 1545 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	$0, 80(%eax)
	.loc 1 1546 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE60:
	.size	pop_labels, .-pop_labels
	.section	.rodata
	.type	__FUNCTION__.18566, @object
	.size	__FUNCTION__.18566, 9
__FUNCTION__.18566:
	.string	"poplevel"
	.text
.globl poplevel
	.type	poplevel, @function
poplevel:
.LFB61:
	.loc 1 1568 0
	pushl	%ebp
.LCFI140:
	movl	%esp, %ebp
.LCFI141:
	pushl	%ebx
.LCFI142:
	subl	$228, %esp
.LCFI143:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1573 0
	movl	16(%ebp), %eax
	movl	%eax, -60(%ebp)
	.loc 1 1576 0
	movl	$0, -48(%ebp)
	.loc 1 1580 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 1582 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L411
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L411
	.loc 1 1583 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -208(%ebp)
	jmp	.L414
.L411:
	.loc 1 1585 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L415
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L415
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -204(%ebp)
	jmp	.L418
.L415:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -204(%ebp)
.L418:
	movl	-204(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L419
	leal	__FUNCTION__.18566@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1586, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L419:
	.loc 1 1588 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L421
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L421
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -196(%ebp)
	jmp	.L424
.L421:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -196(%ebp)
.L424:
	movl	-196(%ebp), %ecx
	movzbl	60(%ecx), %eax
	andl	$12, %eax
	cmpb	$8, %al
	jne	.L425
	movl	$0, 16(%ebp)
	movl	-60(%ebp), %eax
	movl	%eax, -200(%ebp)
	jmp	.L427
.L425:
	movl	16(%ebp), %edx
	movl	%edx, -200(%ebp)
.L427:
	movl	-200(%ebp), %ecx
	movl	%ecx, -56(%ebp)
	.loc 1 1590 0
	cmpl	$0, 16(%ebp)
	js	.L428
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L430
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L430
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -188(%ebp)
	jmp	.L433
.L430:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -188(%ebp)
.L433:
	movl	-188(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -192(%ebp)
	jmp	.L434
.L428:
	movl	$0, -192(%ebp)
.L434:
	movl	-192(%ebp), %edx
	movl	%edx, -52(%ebp)
	.loc 1 1592 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L435
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L435
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -184(%ebp)
	jmp	.L438
.L435:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -184(%ebp)
.L438:
	movl	-184(%ebp), %ecx
	movl	32(%ecx), %eax
	testl	%eax, %eax
	je	.L439
	leal	__FUNCTION__.18566@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1593, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L439:
	.loc 1 1598 0
	cmpl	$0, 8(%ebp)
	je	.L441
	cmpl	$1, 8(%ebp)
	jne	.L443
.L441:
	movl	$1, -180(%ebp)
	jmp	.L444
.L443:
	movl	$0, -180(%ebp)
.L444:
	cmpl	$0, -180(%ebp)
	jne	.L445
	leal	__FUNCTION__.18566@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1598, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L445:
	.loc 1 1600 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L447
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L447
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -176(%ebp)
	jmp	.L450
.L447:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -176(%ebp)
.L450:
	movl	-176(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$12, %eax
	cmpb	$4, %al
	jne	.L451
	.loc 1 1601 0
	movl	$1, 8(%ebp)
.L451:
	.loc 1 1605 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L453
	cmpl	$0, 16(%ebp)
	jne	.L453
.LBB9:
	.loc 1 1608 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L456
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L456
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -172(%ebp)
	jmp	.L459
.L456:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -172(%ebp)
.L459:
	movl	-172(%ebp), %ecx
	movl	52(%ecx), %eax
	movl	%eax, -36(%ebp)
	.loc 1 1609 0
	cmpl	$0, -36(%ebp)
	je	.L453
.LBB10:
	.loc 1 1613 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	80(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L461
.L462:
	.loc 1 1614 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -168(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L463
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L463
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -164(%ebp)
	jmp	.L466
.L463:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -164(%ebp)
.L466:
	movl	-164(%ebp), %eax
	cmpl	%eax, -168(%ebp)
	jne	.L467
.LBB11:
	.loc 1 1617 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L469
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L469
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -160(%ebp)
	jmp	.L472
.L469:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -160(%ebp)
.L472:
	movl	-160(%ebp), %edx
	movzbl	61(%edx), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L473
	.loc 1 1618 0
	movl	-28(%ebp), %eax
	movzbl	24(%eax), %edx
	orl	$1, %edx
	movb	%dl, 24(%eax)
.L473:
	.loc 1 1619 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L475
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L475
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -156(%ebp)
	jmp	.L478
.L475:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -156(%ebp)
.L478:
	movl	-156(%ebp), %ecx
	movzbl	61(%ecx), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L479
	.loc 1 1620 0
	movl	-28(%ebp), %eax
	movzbl	24(%eax), %edx
	orl	$2, %edx
	movb	%dl, 24(%eax)
.L479:
	.loc 1 1621 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L481
.L482:
	.loc 1 1623 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_jump_unsafe
	testl	%eax, %eax
	je	.L483
	.loc 1 1624 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	-28(%ebp), %eax
	movl	%edx, 16(%eax)
.L483:
	.loc 1 1622 0
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
.L481:
	.loc 1 1621 0
	cmpl	$0, -24(%ebp)
	jne	.L482
	.loc 1 1626 0
	movl	-28(%ebp), %edx
	movl	-36(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 1627 0
	movl	-36(%ebp), %eax
	movl	(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, 4(%eax)
.L467:
.LBE11:
	.loc 1 1613 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -28(%ebp)
.L461:
	cmpl	$0, -28(%ebp)
	jne	.L462
	.loc 1 1630 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	76(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L487
.L488:
	.loc 1 1631 0
	movl	-32(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -152(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L489
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L489
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -148(%ebp)
	jmp	.L492
.L489:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -148(%ebp)
.L492:
	movl	-148(%ebp), %eax
	cmpl	%eax, -152(%ebp)
	jne	.L493
	.loc 1 1633 0
	movl	-32(%ebp), %edx
	movl	-36(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 1634 0
	movl	-36(%ebp), %eax
	movl	(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, 4(%eax)
.L493:
	.loc 1 1630 0
	movl	-32(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -32(%ebp)
.L487:
	cmpl	$0, -32(%ebp)
	jne	.L488
.L453:
.LBE10:
.LBE9:
	.loc 1 1643 0
	cmpl	$0, 12(%ebp)
	je	.L495
	.loc 1 1644 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L497
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L497
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -144(%ebp)
	jmp	.L500
.L497:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -144(%ebp)
.L500:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L501
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L501
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -140(%ebp)
	jmp	.L504
.L501:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -140(%ebp)
.L504:
	movl	-140(%ebp), %edx
	movl	(%edx), %eax
	movl	%eax, (%esp)
	call	nreverse@PLT
	movl	%eax, -64(%ebp)
	movl	-64(%ebp), %eax
	movl	-144(%ebp), %ecx
	movl	%eax, (%ecx)
	jmp	.L505
.L495:
	.loc 1 1647 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L506
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L506
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -136(%ebp)
	jmp	.L509
.L506:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -136(%ebp)
.L509:
	movl	-136(%ebp), %edx
	movl	(%edx), %eax
	movl	%eax, -64(%ebp)
.L505:
	.loc 1 1651 0
	movl	-64(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L510
.L511:
	.loc 1 1652 0
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L512
	movl	-44(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	jne	.L512
	movl	-44(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L512
	movl	-44(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L512
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_function_context@PLT
	movl	%eax, %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L512
	.loc 1 1661 0
	movl	-44(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L518
	.loc 1 1662 0
	movl	-44(%ebp), %eax
	movl	88(%eax), %edx
	movzbl	9(%edx), %eax
	orl	$4, %eax
	movb	%al, 9(%edx)
	jmp	.L512
.L518:
	.loc 1 1665 0
	call	push_function_context@PLT
	.loc 1 1666 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	output_inline_function@PLT
	.loc 1 1667 0
	call	pop_function_context@PLT
.L512:
	.loc 1 1651 0
	movl	-44(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
.L510:
	cmpl	$0, -44(%ebp)
	jne	.L511
	.loc 1 1676 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L521
	.loc 1 1677 0
	call	getdecls@PLT
	movl	%eax, (%esp)
	call	warn_about_unused_variables@PLT
.L521:
	.loc 1 1682 0
	movl	$0, -48(%ebp)
	.loc 1 1683 0
	cmpl	$1, 8(%ebp)
	je	.L523
	cmpl	$0, 16(%ebp)
	je	.L525
.L523:
	.loc 1 1684 0
	movl	$5, (%esp)
	call	make_node@PLT
	movl	%eax, -48(%ebp)
.L525:
	.loc 1 1685 0
	cmpl	$0, -48(%ebp)
	je	.L526
	.loc 1 1687 0
	movl	-48(%ebp), %edx
	movl	-64(%ebp), %eax
	movl	%eax, 20(%edx)
	.loc 1 1688 0
	movl	-48(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%eax, 24(%edx)
.L526:
	.loc 1 1692 0
	cmpl	$0, 8(%ebp)
	js	.L528
	.loc 1 1693 0
	movl	-52(%ebp), %ecx
	movl	%ecx, -72(%ebp)
	jmp	.L530
.L531:
	.loc 1 1694 0
	movl	-48(%ebp), %eax
	movl	-72(%ebp), %edx
	movl	%eax, 28(%edx)
	.loc 1 1693 0
	movl	-72(%ebp), %ecx
	movl	(%ecx), %ecx
	movl	%ecx, -72(%ebp)
.L530:
	cmpl	$0, -72(%ebp)
	jne	.L531
.L528:
	.loc 1 1700 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L532
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L532
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -128(%ebp)
	jmp	.L535
.L532:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -128(%ebp)
.L535:
	movl	-128(%ebp), %edx
	movzbl	61(%edx), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L536
	movl	flag_new_for_scope@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	jne	.L536
	movl	$1, -132(%ebp)
	jmp	.L539
.L536:
	movl	$0, -132(%ebp)
.L539:
	movl	-132(%ebp), %ecx
	movl	%ecx, -40(%ebp)
	.loc 1 1704 0
	movl	-64(%ebp), %eax
	movl	%eax, -72(%ebp)
	jmp	.L540
.L541:
	.loc 1 1706 0
	cmpl	$0, -40(%ebp)
	je	.L542
	movl	-72(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$35, %al
	jne	.L542
	movl	-72(%ebp), %ecx
	movl	52(%ecx), %eax
	testl	%eax, %eax
	je	.L542
.LBB12:
	.loc 1 1710 0
	movl	-72(%ebp), %edx
	movl	52(%edx), %eax
	movl	44(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 1713 0
	cmpl	$0, -20(%ebp)
	jne	.L546
	.loc 1 1714 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	-72(%ebp), %ecx
	movl	52(%ecx), %edx
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -16(%ebp)
	jmp	.L548
.L546:
	.loc 1 1716 0
	movl	$0, -16(%ebp)
.L548:
	.loc 1 1718 0
	cmpl	$0, -20(%ebp)
	je	.L549
	movl	-20(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -124(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L551
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L551
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -120(%ebp)
	jmp	.L554
.L551:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -120(%ebp)
.L554:
	movl	-120(%ebp), %edx
	movl	52(%edx), %eax
	cmpl	%eax, -124(%ebp)
	jne	.L549
	.loc 1 1728 0
	movl	-72(%ebp), %ecx
	movl	52(%ecx), %eax
	movl	-72(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	pop_binding
	.loc 1 1718 0
	jmp	.L573
.L549:
	.loc 1 1729 0
	cmpl	$0, -20(%ebp)
	je	.L557
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L559
.L557:
	cmpl	$0, -16(%ebp)
	je	.L560
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L560
.L559:
	.loc 1 1744 0
	movl	-72(%ebp), %ecx
	movl	52(%ecx), %eax
	movl	-72(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	pop_binding
	.loc 1 1729 0
	jmp	.L573
.L560:
	.loc 1 1749 0
	movl	-72(%ebp), %ecx
	movzbl	38(%ecx), %eax
	orl	$16, %eax
	movl	-72(%ebp), %edx
	movb	%al, 38(%edx)
	.loc 1 1753 0
	cmpl	$0, -20(%ebp)
	je	.L562
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L562
	.loc 1 1754 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	-72(%ebp), %ecx
	movl	%eax, 64(%ecx)
.L562:
	.loc 1 1760 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L565
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L565
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -116(%ebp)
	jmp	.L568
.L565:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -116(%ebp)
.L568:
	movl	-116(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -112(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L569
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L569
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -108(%ebp)
	jmp	.L572
.L569:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -108(%ebp)
.L572:
	movl	-108(%ebp), %edx
	movl	52(%edx), %eax
	movl	56(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-72(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	-112(%ebp), %edx
	movl	%eax, 56(%edx)
	.loc 1 1767 0
	movl	-72(%ebp), %ecx
	movl	52(%ecx), %eax
	movl	44(%eax), %eax
	movl	$0, 12(%eax)
	.loc 1 1706 0
	jmp	.L573
.L542:
.LBE12:
	.loc 1 1774 0
	movl	-72(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 1775 0
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L574
	.loc 1 1776 0
	movl	-44(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -44(%ebp)
.L574:
	.loc 1 1777 0
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L576
	.loc 1 1778 0
	movl	-44(%ebp), %eax
	movl	52(%eax), %edx
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	pop_binding
	jmp	.L573
.L576:
	.loc 1 1779 0
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L578
	.loc 1 1780 0
	movl	-44(%ebp), %eax
	movl	16(%eax), %eax
	movl	52(%eax), %edx
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	pop_binding
	jmp	.L573
.L578:
	.loc 1 1782 0
	leal	__FUNCTION__.18566@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1782, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L573:
	.loc 1 1704 0
	movl	-72(%ebp), %edx
	movl	(%edx), %edx
	movl	%edx, -72(%ebp)
.L540:
	cmpl	$0, -72(%ebp)
	jne	.L541
	.loc 1 1788 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L581
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L581
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -104(%ebp)
	jmp	.L584
.L581:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -104(%ebp)
.L584:
	movl	-104(%ebp), %ecx
	movl	56(%ecx), %ecx
	movl	%ecx, -72(%ebp)
	.loc 1 1789 0
	jmp	.L585
.L586:
	.loc 1 1790 0
	movl	-72(%ebp), %edx
	movl	20(%edx), %eax
	movl	-72(%ebp), %ecx
	movl	20(%ecx), %edx
	movl	52(%edx), %edx
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	pop_binding
	.loc 1 1789 0
	movl	-72(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -72(%ebp)
.L585:
	cmpl	$0, -72(%ebp)
	jne	.L586
	.loc 1 1793 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L588
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L588
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -100(%ebp)
	jmp	.L591
.L588:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -100(%ebp)
.L591:
	movl	-100(%ebp), %edx
	movl	36(%edx), %edx
	movl	%edx, -72(%ebp)
	.loc 1 1794 0
	jmp	.L592
.L593:
	.loc 1 1795 0
	movl	-72(%ebp), %ecx
	movl	16(%ecx), %edx
	movl	-72(%ebp), %ecx
	movl	20(%ecx), %eax
	movl	%eax, 4(%edx)
	.loc 1 1794 0
	movl	-72(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -72(%ebp)
.L592:
	cmpl	$0, -72(%ebp)
	jne	.L593
	.loc 1 1798 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L595
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L595
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -96(%ebp)
	jmp	.L598
.L595:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -96(%ebp)
.L598:
	movl	-96(%ebp), %edx
	movl	40(%edx), %edx
	movl	%edx, -72(%ebp)
	.loc 1 1799 0
	jmp	.L599
.L600:
	.loc 1 1801 0
	movl	-72(%ebp), %ecx
	movl	16(%ecx), %eax
	movl	-72(%ebp), %ecx
	movl	20(%ecx), %edx
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	pop_label
	.loc 1 1800 0
	movl	-72(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -72(%ebp)
.L599:
	.loc 1 1799 0
	cmpl	$0, -72(%ebp)
	jne	.L600
	.loc 1 1809 0
	cmpl	$0, -48(%ebp)
	je	.L602
.LBB13:
	.loc 1 1813 0
	movl	-48(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -12(%ebp)
	jmp	.L643
.L605:
	.loc 1 1815 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L606
	.loc 1 1816 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	jmp	.L604
.L606:
	.loc 1 1818 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L604:
.L643:
	.loc 1 1813 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L605
.L602:
.LBE13:
	.loc 1 1824 0
	cmpl	$0, 16(%ebp)
	je	.L608
	.loc 1 1829 0
	movl	-48(%ebp), %eax
	movl	$0, 20(%eax)
	.loc 1 1830 0
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	pop_labels
.L608:
	.loc 1 1833 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L610
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L610
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -92(%ebp)
	jmp	.L613
.L610:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -92(%ebp)
.L613:
	movl	-92(%ebp), %edx
	movzbl	60(%edx), %eax
	shrb	$2, %al
	andl	$3, %eax
	movzbl	%al, %eax
	movl	%eax, -60(%ebp)
	.loc 1 1835 0
	call	pop_binding_level
	.loc 1 1836 0
	cmpl	$0, 16(%ebp)
	je	.L614
	.loc 1 1837 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 68(%edx)
	jmp	.L616
.L614:
	.loc 1 1838 0
	cmpl	$0, -48(%ebp)
	je	.L617
	.loc 1 1839 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L619
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L619
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -88(%ebp)
	jmp	.L622
.L619:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -88(%ebp)
.L622:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L623
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L623
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -84(%ebp)
	jmp	.L626
.L623:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -84(%ebp)
.L626:
	movl	-84(%ebp), %ecx
	movl	44(%ecx), %eax
	movl	-48(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	-88(%ebp), %edx
	movl	%eax, 44(%edx)
	jmp	.L616
.L617:
	.loc 1 1847 0
	cmpl	$0, -52(%ebp)
	je	.L616
	.loc 1 1848 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L628
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L628
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -80(%ebp)
	jmp	.L631
.L628:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -80(%ebp)
.L631:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L632
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L632
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -76(%ebp)
	jmp	.L635
.L632:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -76(%ebp)
.L635:
	movl	-76(%ebp), %ecx
	movl	44(%ecx), %eax
	movl	-52(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	-80(%ebp), %edx
	movl	%eax, 44(%edx)
.L616:
	.loc 1 1854 0
	cmpl	$0, -48(%ebp)
	je	.L636
	.loc 1 1855 0
	movl	-48(%ebp), %eax
	movzbl	10(%eax), %edx
	orl	$1, %edx
	movb	%dl, 10(%eax)
.L636:
	.loc 1 1858 0
	cmpl	$2, -60(%ebp)
	jne	.L638
.LBB14:
	.loc 1 1862 0
	movl	$1, 4(%esp)
	movl	$0, (%esp)
	call	add_scope_stmt@PLT
	movl	%eax, -8(%ebp)
	.loc 1 1864 0
	cmpl	$0, -48(%ebp)
	je	.L640
	.loc 1 1866 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 20(%edx)
	.loc 1 1867 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 20(%edx)
.L640:
	.loc 1 1870 0
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	poplevel@PLT
	movl	%eax, -48(%ebp)
.L638:
.LBE14:
	.loc 1 1873 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-48(%ebp), %ecx
	movl	%ecx, -208(%ebp)
.L414:
	movl	-208(%ebp), %eax
	.loc 1 1874 0
	addl	$228, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE61:
	.size	poplevel, .-poplevel
.globl delete_block
	.type	delete_block, @function
delete_block:
.LFB62:
	.loc 1 1883 0
	pushl	%ebp
.LCFI144:
	movl	%esp, %ebp
.LCFI145:
	subl	$28, %esp
.LCFI146:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 1885 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L645
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L645
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L648
.L645:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L648:
	movl	-28(%ebp), %edx
	movl	44(%edx), %eax
	cmpl	8(%ebp), %eax
	jne	.L649
	.loc 1 1886 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L651
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L651
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L654
.L651:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L654:
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	-24(%ebp), %edx
	movl	%eax, 44(%edx)
.L649:
	.loc 1 1887 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L655
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L655
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L658
.L655:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -20(%ebp)
.L658:
	movl	-20(%ebp), %edx
	movl	44(%edx), %eax
	movl	%eax, -4(%ebp)
	jmp	.L665
.L660:
	.loc 1 1889 0
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L661
	.loc 1 1890 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	movl	%edx, (%eax)
	jmp	.L659
.L661:
	.loc 1 1892 0
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
.L659:
.L665:
	.loc 1 1887 0
	cmpl	$0, -4(%ebp)
	jne	.L660
	.loc 1 1894 0
	movl	8(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 1897 0
	movl	8(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$-2, %eax
	movb	%al, 10(%edx)
	.loc 1 1898 0
	leave
	ret
.LFE62:
	.size	delete_block, .-delete_block
.globl insert_block
	.type	insert_block, @function
insert_block:
.LFB63:
	.loc 1 1907 0
	pushl	%ebp
.LCFI147:
	movl	%esp, %ebp
.LCFI148:
	pushl	%ebx
.LCFI149:
	subl	$20, %esp
.LCFI150:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1908 0
	movl	8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$1, %eax
	movb	%al, 10(%edx)
	.loc 1 1909 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L667
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L667
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L670
.L667:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -12(%ebp)
.L670:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L671
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L671
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L674
.L671:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L674:
	movl	-8(%ebp), %edx
	movl	44(%edx), %eax
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	-12(%ebp), %edx
	movl	%eax, 44(%edx)
	.loc 1 1911 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE63:
	.size	insert_block, .-insert_block
	.section	.rodata
	.type	__FUNCTION__.19222, @object
	.size	__FUNCTION__.19222, 10
__FUNCTION__.19222:
	.string	"set_block"
	.text
.globl set_block
	.type	set_block, @function
set_block:
.LFB64:
	.loc 1 1919 0
	pushl	%ebp
.LCFI151:
	movl	%esp, %ebp
.LCFI152:
	pushl	%ebx
.LCFI153:
	subl	$20, %esp
.LCFI154:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1922 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L677
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L677
	movl	$1, -8(%ebp)
	jmp	.L680
.L677:
	movl	$0, -8(%ebp)
.L680:
	cmpl	$0, -8(%ebp)
	jne	.L683
	leal	__FUNCTION__.19222@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1922, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L683:
	.loc 1 1923 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE64:
	.size	set_block, .-set_block
.globl pushlevel_class
	.type	pushlevel_class, @function
pushlevel_class:
.LFB65:
	.loc 1 1929 0
	pushl	%ebp
.LCFI155:
	movl	%esp, %ebp
.LCFI156:
	pushl	%ebx
.LCFI157:
	subl	$36, %esp
.LCFI158:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1933 0
	movl	free_binding_level@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L685
	.loc 1 1935 0
	movl	free_binding_level@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 1936 0
	movl	free_binding_level@GOTOFF(%ebx), %eax
	movl	52(%eax), %eax
	movl	%eax, free_binding_level@GOTOFF(%ebx)
	jmp	.L687
.L685:
	.loc 1 1939 0
	call	make_binding_level
	movl	%eax, -8(%ebp)
.L687:
	.loc 1 1944 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	-8(%ebp), %edx
	movl	%edx, (%esp)
	call	push_binding_level
	.loc 1 1946 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L688
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L688
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L691
.L688:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -12(%ebp)
.L691:
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%edx, 96(%eax)
	.loc 1 1947 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %edx
	movzbl	60(%edx), %eax
	andl	$-4, %eax
	orl	$2, %eax
	movb	%al, 60(%edx)
	.loc 1 1948 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 48(%edx)
	.loc 1 1949 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE65:
	.size	pushlevel_class, .-pushlevel_class
	.section	.rodata
	.type	__FUNCTION__.19269, @object
	.size	__FUNCTION__.19269, 15
__FUNCTION__.19269:
	.string	"poplevel_class"
	.text
.globl poplevel_class
	.type	poplevel_class, @function
poplevel_class:
.LFB66:
	.loc 1 1955 0
	pushl	%ebp
.LCFI159:
	movl	%esp, %ebp
.LCFI160:
	pushl	%ebx
.LCFI161:
	subl	$36, %esp
.LCFI162:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 1956 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 1959 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 1961 0
	cmpl	$0, -24(%ebp)
	jne	.L694
	leal	__FUNCTION__.19269@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$1961, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L694:
	.loc 1 1968 0
	movl	current_class_depth@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	je	.L696
.LBB15:
	.loc 1 1973 0
	movl	-24(%ebp), %edx
	movl	32(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 1 1974 0
	jmp	.L698
.L699:
	.loc 1 1976 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	$0, 48(%eax)
	.loc 1 1975 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L698:
	.loc 1 1974 0
	cmpl	$0, -16(%ebp)
	jne	.L699
	.loc 1 1980 0
	movl	-24(%ebp), %edx
	movl	52(%edx), %eax
	movl	%eax, -12(%ebp)
	.loc 1 1981 0
	jmp	.L701
.L702:
	.loc 1 1982 0
	movl	-12(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -12(%ebp)
.L701:
	.loc 1 1981 0
	cmpl	$0, -12(%ebp)
	je	.L703
	movl	-12(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L702
.L703:
	.loc 1 1984 0
	cmpl	$0, -12(%ebp)
	je	.L715
	.loc 1 1985 0
	movl	-12(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 1986 0
	jmp	.L707
.L708:
.LBB16:
	.loc 1 1991 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 1992 0
	jmp	.L709
.L710:
	.loc 1 1993 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L709:
	.loc 1 1992 0
	cmpl	$0, -8(%ebp)
	je	.L711
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L710
.L711:
	.loc 1 1995 0
	cmpl	$0, -8(%ebp)
	je	.L713
	.loc 1 1996 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 48(%edx)
.L713:
.LBE16:
	.loc 1 1987 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L707:
	.loc 1 1986 0
	cmpl	$0, -16(%ebp)
	jne	.L708
	jmp	.L715
.L696:
.LBE15:
	.loc 1 2004 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 40(%edx)
	.loc 1 2005 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	32(%eax), %eax
	movl	%eax, 44(%edx)
.L715:
	.loc 1 2007 0
	movl	-24(%ebp), %edx
	movl	36(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2008 0
	jmp	.L716
.L717:
	.loc 1 2010 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %edx
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 2009 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L716:
	.loc 1 2008 0
	cmpl	$0, -16(%ebp)
	jne	.L717
	.loc 1 2013 0
	movl	-24(%ebp), %edx
	movl	32(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2014 0
	jmp	.L719
.L720:
	.loc 1 2016 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %edx
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	pop_binding
	.loc 1 2015 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L719:
	.loc 1 2014 0
	cmpl	$0, -16(%ebp)
	jne	.L720
	.loc 1 2023 0
	call	pop_binding_level
	.loc 1 2025 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 2026 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE66:
	.size	poplevel_class, .-poplevel_class
.globl clear_identifier_class_values
	.type	clear_identifier_class_values, @function
clear_identifier_class_values:
.LFB67:
	.loc 1 2033 0
	pushl	%ebp
.LCFI163:
	movl	%esp, %ebp
.LCFI164:
	subl	$16, %esp
.LCFI165:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 2036 0
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	je	.L728
	.loc 1 2039 0
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	32(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 2040 0
	jmp	.L726
.L727:
	.loc 1 2042 0
	movl	-4(%ebp), %eax
	movl	16(%eax), %eax
	movl	$0, 48(%eax)
	.loc 1 2041 0
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
.L726:
	.loc 1 2040 0
	cmpl	$0, -4(%ebp)
	jne	.L727
.L728:
	.loc 1 2043 0
	leave
	ret
.LFE67:
	.size	clear_identifier_class_values, .-clear_identifier_class_values
.globl vtable_decl_p
	.type	vtable_decl_p, @function
vtable_decl_p:
.LFB68:
	.loc 1 2051 0
	pushl	%ebp
.LCFI166:
	movl	%esp, %ebp
.LCFI167:
	subl	$4, %esp
.LCFI168:
	.loc 1 2052 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L730
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L730
	movl	$1, -4(%ebp)
	jmp	.L733
.L730:
	movl	$0, -4(%ebp)
.L733:
	movl	-4(%ebp), %eax
	.loc 1 2053 0
	leave
	ret
.LFE68:
	.size	vtable_decl_p, .-vtable_decl_p
.globl vtype_decl_p
	.type	vtype_decl_p, @function
vtype_decl_p:
.LFB69:
	.loc 1 2062 0
	pushl	%ebp
.LCFI169:
	movl	%esp, %ebp
.LCFI170:
	subl	$4, %esp
.LCFI171:
	.loc 1 2063 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L736
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	jne	.L736
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L736
	movl	$1, -4(%ebp)
	jmp	.L740
.L736:
	movl	$0, -4(%ebp)
.L740:
	movl	-4(%ebp), %eax
	.loc 1 2066 0
	leave
	ret
.LFE69:
	.size	vtype_decl_p, .-vtype_decl_p
.globl cp_namespace_decls
	.type	cp_namespace_decls, @function
cp_namespace_decls:
.LFB70:
	.loc 1 2073 0
	pushl	%ebp
.LCFI172:
	movl	%esp, %ebp
.LCFI173:
	.loc 1 2074 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	(%eax), %eax
	.loc 1 2075 0
	popl	%ebp
	ret
.LFE70:
	.size	cp_namespace_decls, .-cp_namespace_decls
	.type	walk_vtables_r, @function
walk_vtables_r:
.LFB71:
	.loc 1 2091 0
	pushl	%ebp
.LCFI174:
	movl	%esp, %ebp
.LCFI175:
	subl	$40, %esp
.LCFI176:
	.loc 1 2092 0
	movl	12(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2093 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2094 0
	movl	-16(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 2095 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 2096 0
	movl	$0, -4(%ebp)
	.loc 1 2098 0
	jmp	.L745
.L746:
	.loc 1 2099 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-20(%ebp), %eax
	movl	%eax, (%esp)
	movl	-12(%ebp), %eax
	call	*%eax
	orl	%eax, -4(%ebp)
	.loc 1 2098 0
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
.L745:
	movl	-20(%ebp), %eax
	testl	%eax, %eax
	jne	.L746
	.loc 1 2101 0
	movl	-4(%ebp), %eax
	.loc 1 2102 0
	leave
	ret
.LFE71:
	.size	walk_vtables_r, .-walk_vtables_r
.globl walk_vtables
	.type	walk_vtables, @function
walk_vtables:
.LFB72:
	.loc 1 2112 0
	pushl	%ebp
.LCFI177:
	movl	%esp, %ebp
.LCFI178:
	pushl	%ebx
.LCFI179:
	subl	$36, %esp
.LCFI180:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2114 0
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2115 0
	movl	12(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2116 0
	movl	16(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 2118 0
	leal	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	walk_vtables_r@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	walk_namespaces@PLT
	.loc 1 2119 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE72:
	.size	walk_vtables, .-walk_vtables
	.type	walk_namespaces_r, @function
walk_namespaces_r:
.LFB73:
	.loc 1 2129 0
	pushl	%ebp
.LCFI181:
	movl	%esp, %ebp
.LCFI182:
	subl	$40, %esp
.LCFI183:
	.loc 1 2130 0
	movl	$0, -8(%ebp)
	.loc 1 2131 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 2133 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	movl	12(%ebp), %eax
	call	*%eax
	orl	%eax, -8(%ebp)
	.loc 1 2135 0
	jmp	.L752
.L753:
	.loc 1 2136 0
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	call	walk_namespaces_r
	orl	%eax, -8(%ebp)
	.loc 1 2135 0
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
.L752:
	cmpl	$0, -4(%ebp)
	jne	.L753
	.loc 1 2138 0
	movl	-8(%ebp), %eax
	.loc 1 2139 0
	leave
	ret
.LFE73:
	.size	walk_namespaces_r, .-walk_namespaces_r
.globl walk_namespaces
	.type	walk_namespaces, @function
walk_namespaces:
.LFB74:
	.loc 1 2148 0
	pushl	%ebp
.LCFI184:
	movl	%esp, %ebp
.LCFI185:
	pushl	%ebx
.LCFI186:
	subl	$20, %esp
.LCFI187:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2149 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	walk_namespaces_r
	.loc 1 2150 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE74:
	.size	walk_namespaces, .-walk_namespaces
	.type	walk_globals_r, @function
walk_globals_r:
.LFB75:
	.loc 1 2160 0
	pushl	%ebp
.LCFI188:
	movl	%esp, %ebp
.LCFI189:
	subl	$40, %esp
.LCFI190:
	.loc 1 2161 0
	movl	12(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 2162 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 2163 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 2164 0
	movl	-28(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2166 0
	movl	$0, -8(%ebp)
	.loc 1 2168 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2170 0
	jmp	.L766
.L760:
.LBB17:
	.loc 1 2172 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 2174 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-4(%ebp), %eax
	movl	%eax, (%esp)
	movl	-24(%ebp), %eax
	call	*%eax
	testl	%eax, %eax
	je	.L761
	.loc 1 2175 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	movl	-20(%ebp), %eax
	call	*%eax
	orl	%eax, -8(%ebp)
.L761:
	.loc 1 2179 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	cmpl	-4(%ebp), %eax
	jne	.L759
	.loc 1 2180 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L759:
.L766:
.LBE17:
	.loc 1 2170 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L760
	.loc 1 2183 0
	movl	-8(%ebp), %eax
	.loc 1 2184 0
	leave
	ret
.LFE75:
	.size	walk_globals_r, .-walk_globals_r
.globl walk_globals
	.type	walk_globals, @function
walk_globals:
.LFB76:
	.loc 1 2195 0
	pushl	%ebp
.LCFI191:
	movl	%esp, %ebp
.LCFI192:
	pushl	%ebx
.LCFI193:
	subl	$36, %esp
.LCFI194:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2197 0
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2198 0
	movl	12(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2199 0
	movl	16(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 2201 0
	leal	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	walk_globals_r@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	walk_namespaces@PLT
	.loc 1 2202 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE76:
	.size	walk_globals, .-walk_globals
.globl wrapup_globals_for_namespace
	.type	wrapup_globals_for_namespace, @function
wrapup_globals_for_namespace:
.LFB77:
	.loc 1 2212 0
	pushl	%ebp
.LCFI195:
	movl	%esp, %ebp
.LCFI196:
	pushl	%ebx
.LCFI197:
	subl	$52, %esp
.LCFI198:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2213 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 2214 0
	movl	-24(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 2215 0
	movl	-20(%ebp), %eax
	addl	$16, %eax
	movl	%eax, -16(%ebp)
	.loc 1 2216 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2217 0
	cmpl	$0, 12(%ebp)
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	.loc 1 2219 0
	cmpl	$0, -8(%ebp)
	je	.L770
	.loc 1 2221 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	check_global_declarations@PLT
	.loc 1 2222 0
	movl	$0, -40(%ebp)
	jmp	.L772
.L770:
	.loc 1 2226 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	wrapup_global_declarations@PLT
	movl	%eax, -40(%ebp)
.L772:
	movl	-40(%ebp), %eax
	.loc 1 2227 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE77:
	.size	wrapup_globals_for_namespace, .-wrapup_globals_for_namespace
	.local	no_print_functions
	.comm	no_print_functions,4,4
	.local	no_print_builtins
	.comm	no_print_builtins,4,4
	.section	.rodata
.LC5:
	.string	"\n\t"
.LC6:
	.string	"<unnamed-typedef"
.LC7:
	.string	""
.LC8:
	.string	"<typedef"
	.text
	.type	bt_print_entry, @function
bt_print_entry:
.LFB78:
	.loc 1 2239 0
	pushl	%ebp
.LCFI199:
	movl	%esp, %ebp
.LCFI200:
	pushl	%ebx
.LCFI201:
	subl	$36, %esp
.LCFI202:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2240 0
	movl	12(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2243 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L775
	.loc 1 2244 0
	movl	$3, -8(%ebp)
	jmp	.L777
.L775:
	.loc 1 2245 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	cmpl	%eax, %edx
	jne	.L778
	.loc 1 2246 0
	movl	$2, -8(%ebp)
	jmp	.L777
.L778:
	.loc 1 2248 0
	movl	$4, -8(%ebp)
.L777:
	.loc 1 2250 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, %edx
	addl	-8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 2252 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	cmpl	$5, %eax
	jle	.L780
	.loc 1 2254 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC5@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2255 0
	movl	-12(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, (%edx)
.L780:
	.loc 1 2257 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L782
	.loc 1 2259 0
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	leal	.LC6@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	print_node_brief@PLT
	.loc 1 2260 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$62, (%esp)
	call	fputc@PLT
	jmp	.L787
.L782:
	.loc 1 2262 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	cmpl	%eax, %edx
	jne	.L785
	.loc 1 2263 0
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	leal	.LC7@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	print_node_brief@PLT
	jmp	.L787
.L785:
	.loc 1 2266 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	leal	.LC8@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	print_node_brief@PLT
	.loc 1 2267 0
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	$0, 12(%esp)
	movl	%edx, 8(%esp)
	leal	.LC7@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	print_node_brief@PLT
	.loc 1 2268 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$62, (%esp)
	call	fputc@PLT
.L787:
	.loc 1 2270 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE78:
	.size	bt_print_entry, .-bt_print_entry
	.section	.rodata
.LC9:
	.string	" blocks="
.LC10:
	.string	"%p"
.LC11:
	.string	" tag-transparent"
.LC12:
	.string	" more-cleanups-ok"
.LC13:
	.string	" have-cleanups"
.LC14:
	.string	" names:\t"
.LC15:
	.string	"<built-in>"
.LC16:
	.string	" tags:\t"
.LC17:
	.string	" class-shadowed:"
.LC18:
	.string	" %s "
.LC19:
	.string	" type-shadowed:"
	.text
.globl print_binding_level
	.type	print_binding_level, @function
print_binding_level:
.LFB79:
	.loc 1 2275 0
	pushl	%ebp
.LCFI203:
	movl	%esp, %ebp
.LCFI204:
	pushl	%edi
.LCFI205:
	pushl	%esi
.LCFI206:
	pushl	%ebx
.LCFI207:
	subl	$44, %esp
.LCFI208:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2277 0
	movl	$0, -24(%ebp)
	.loc 1 2278 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$8, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC9@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2279 0
	movl	8(%ebp), %eax
	movl	44(%eax), %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC10@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 2280 0
	movl	8(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L789
	.loc 1 2281 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$16, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC11@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L789:
	.loc 1 2282 0
	movl	8(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L791
	.loc 1 2283 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$17, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC12@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L791:
	.loc 1 2284 0
	movl	8(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L793
	.loc 1 2285 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC13@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
.L793:
	.loc 1 2286 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
	.loc 1 2287 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L795
	.loc 1 2289 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$8, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC14@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2291 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L797
.L798:
	.loc 1 2293 0
	movl	no_print_functions@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L799
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L801
.L799:
	.loc 1 2295 0
	movl	no_print_builtins@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L802
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L802
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -32(%ebp)
	leal	.LC15@GOTOFF(%ebx), %eax
	movl	%eax, -36(%ebp)
	movl	$11, -40(%ebp)
	cld
	movl	-32(%ebp), %esi
	movl	-36(%ebp), %edi
	movl	-40(%ebp), %ecx
	repz
	cmpsb
	seta	%dl
	setb	%al
	movl	%edx, %ecx
	subb	%al, %cl
	movl	%ecx, %eax
	movsbl	%al,%eax
	testl	%eax, %eax
	je	.L801
.L802:
	.loc 1 2301 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L805
	.loc 1 2302 0
	movl	$3, -16(%ebp)
	jmp	.L807
.L805:
	.loc 1 2304 0
	movl	$2, -16(%ebp)
.L807:
	.loc 1 2305 0
	movl	-24(%ebp), %eax
	addl	-16(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 2306 0
	movl	-24(%ebp), %eax
	cmpl	$6, %eax
	jle	.L808
	.loc 1 2308 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$2, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC5@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2309 0
	movl	-16(%ebp), %eax
	movl	%eax, -24(%ebp)
.L808:
	.loc 1 2311 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	$0, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC7@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	print_node_brief@PLT
	.loc 1 2312 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-20(%ebp), %eax
	je	.L810
.L801:
	.loc 1 2291 0
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
.L797:
	cmpl	$0, -20(%ebp)
	jne	.L798
.L810:
	.loc 1 2315 0
	movl	-24(%ebp), %eax
	testl	%eax, %eax
	je	.L795
	.loc 1 2316 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
.L795:
	.loc 1 2318 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L812
	.loc 1 2320 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$7, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC16@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2321 0
	movl	$0, -24(%ebp)
	.loc 1 2322 0
	movl	8(%ebp), %eax
	movl	20(%eax), %edx
	leal	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	bt_print_entry@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	binding_table_foreach@PLT
	.loc 1 2323 0
	movl	-24(%ebp), %eax
	testl	%eax, %eax
	je	.L812
	.loc 1 2324 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
.L812:
	.loc 1 2326 0
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	je	.L815
	.loc 1 2328 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$16, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC17@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2329 0
	movl	8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L817
.L818:
	.loc 1 2331 0
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC18@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 2329 0
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
.L817:
	cmpl	$0, -20(%ebp)
	jne	.L818
	.loc 1 2333 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
.L815:
	.loc 1 2335 0
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L825
	.loc 1 2337 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$15, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC19@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2338 0
	movl	8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L822
.L823:
	.loc 1 2340 0
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC18@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 2338 0
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
.L822:
	cmpl	$0, -20(%ebp)
	jne	.L823
	.loc 1 2342 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
.L825:
	.loc 1 2344 0
	addl	$44, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE79:
	.size	print_binding_level, .-print_binding_level
	.section	.rodata
.LC20:
	.string	"binding level "
	.text
.globl print_other_binding_stack
	.type	print_other_binding_stack, @function
print_other_binding_stack:
.LFB80:
	.loc 1 2349 0
	pushl	%ebp
.LCFI209:
	movl	%esp, %ebp
.LCFI210:
	pushl	%ebx
.LCFI211:
	subl	$36, %esp
.LCFI212:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2351 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L827
.L828:
	.loc 1 2353 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$14, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC20@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2354 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC10@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fprintf@PLT
	.loc 1 2355 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
	.loc 1 2356 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	print_binding_level@PLT
	.loc 1 2351 0
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -8(%ebp)
.L827:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	-8(%ebp), %eax
	jne	.L828
	.loc 1 2358 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE80:
	.size	print_other_binding_stack, .-print_other_binding_stack
	.section	.rodata
.LC21:
	.string	"current_binding_level="
.LC22:
	.string	"\nclass_binding_level="
	.align 4
.LC23:
	.string	"\nNAMESPACE_LEVEL (global_namespace)="
.LC24:
	.string	"global:\n"
	.text
.globl print_binding_stack
	.type	print_binding_stack, @function
print_binding_stack:
.LFB81:
	.loc 1 2362 0
	pushl	%ebp
.LCFI213:
	movl	%esp, %ebp
.LCFI214:
	pushl	%ebx
.LCFI215:
	subl	$52, %esp
.LCFI216:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2364 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$22, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC21@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2365 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L832
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L832
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L835
.L832:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L835:
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC10@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	fprintf@PLT
	.loc 1 2366 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$21, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC22@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2367 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC10@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 2368 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$36, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC23@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2369 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %edx
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 8(%esp)
	leal	.LC10@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%ecx, (%esp)
	call	fprintf@PLT
	.loc 1 2371 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$10, (%esp)
	call	fputc@PLT
	.loc 1 2372 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	je	.L836
	.loc 1 2374 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L838
.L839:
	.loc 1 2375 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L840
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L840
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L843
.L840:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L843:
	movl	-32(%ebp), %eax
	cmpl	-8(%ebp), %eax
	je	.L844
	.loc 1 2374 0
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -8(%ebp)
.L838:
	cmpl	$0, -8(%ebp)
	jne	.L839
.L844:
	.loc 1 2377 0
	cmpl	$0, -8(%ebp)
	je	.L846
	.loc 1 2378 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L853
.L846:
	.loc 1 2380 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L849
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L849
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L852
.L849:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L852:
	movl	-28(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L853
.L836:
	.loc 1 2383 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L854
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L854
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L857
.L854:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L857:
	movl	-24(%ebp), %eax
	movl	%eax, -8(%ebp)
.L853:
	.loc 1 2384 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	print_other_binding_stack@PLT
	.loc 1 2385 0
	movl	stderr@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	$8, 8(%esp)
	movl	$1, 4(%esp)
	leal	.LC24@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fwrite@PLT
	.loc 1 2386 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	print_binding_level@PLT
	.loc 1 2387 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE81:
	.size	print_binding_stack, .-print_binding_stack
.globl cxx_scope_find_binding_for_name
	.type	cxx_scope_find_binding_for_name, @function
cxx_scope_find_binding_for_name:
.LFB83:
	.loc 1 2424 0
	pushl	%ebp
.LCFI217:
	movl	%esp, %ebp
.LCFI218:
	subl	$40, %esp
.LCFI219:
	.loc 1 2425 0
	movl	12(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 2426 0
	cmpl	$0, -4(%ebp)
	je	.L860
	.loc 1 2428 0
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L862
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L864
.L862:
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
.L864:
	movl	-24(%ebp), %eax
	movl	%eax, 8(%ebp)
	.loc 1 2430 0
	movl	-4(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L865
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L865
	.loc 1 2431 0
	movl	-4(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L868
.L865:
	.loc 1 2432 0
	movl	-4(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	find_binding
	movl	%eax, -20(%ebp)
	jmp	.L868
.L860:
	.loc 1 2434 0
	movl	-4(%ebp), %eax
	movl	%eax, -20(%ebp)
.L868:
	movl	-20(%ebp), %eax
	.loc 1 2435 0
	leave
	ret
.LFE83:
	.size	cxx_scope_find_binding_for_name, .-cxx_scope_find_binding_for_name
	.type	find_binding, @function
find_binding:
.LFB82:
	.loc 1 2396 0
	pushl	%ebp
.LCFI220:
	movl	%esp, %ebp
.LCFI221:
	pushl	%ebx
.LCFI222:
	subl	$36, %esp
.LCFI223:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2398 0
	movl	$0, -8(%ebp)
	.loc 1 2400 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2402 0
	movl	16(%ebp), %eax
	movl	%eax, -12(%ebp)
	jmp	.L871
.L872:
	.loc 1 2404 0
	movl	-12(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L873
	.loc 1 2408 0
	cmpl	$0, -8(%ebp)
	je	.L875
	.loc 1 2410 0
	movl	-12(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 2411 0
	movl	-12(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 2412 0
	movl	8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 40(%edx)
.L875:
	.loc 1 2414 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-12(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L877
.L873:
	.loc 1 2416 0
	movl	-12(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 2402 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L871:
	cmpl	$0, -12(%ebp)
	jne	.L872
	.loc 1 2418 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -24(%ebp)
.L877:
	movl	-24(%ebp), %eax
	.loc 1 2419 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE82:
	.size	find_binding, .-find_binding
.globl binding_for_name
	.type	binding_for_name, @function
binding_for_name:
.LFB84:
	.loc 1 2443 0
	pushl	%ebp
.LCFI224:
	movl	%esp, %ebp
.LCFI225:
	pushl	%ebx
.LCFI226:
	subl	$36, %esp
.LCFI227:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2446 0
	movl	12(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L881
	movl	12(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L883
.L881:
	movl	12(%ebp), %eax
	movl	%eax, -28(%ebp)
.L883:
	movl	-28(%ebp), %eax
	movl	%eax, 12(%ebp)
	.loc 1 2447 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	cxx_scope_find_binding_for_name@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2448 0
	cmpl	$0, -8(%ebp)
	je	.L884
	.loc 1 2449 0
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L886
.L884:
	.loc 1 2451 0
	movl	$20, (%esp)
	call	ggc_alloc@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2452 0
	movl	8(%ebp), %eax
	movl	40(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 2453 0
	movl	-8(%ebp), %eax
	movl	$0, 8(%eax)
	.loc 1 2454 0
	movl	-8(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 1 2455 0
	movl	-8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 12(%edx)
	.loc 1 2456 0
	movl	-8(%ebp), %edx
	movzbl	16(%edx), %eax
	andl	$-5, %eax
	movb	%al, 16(%edx)
	.loc 1 2457 0
	movl	-8(%ebp), %edx
	movzbl	16(%edx), %eax
	andl	$-3, %eax
	movb	%al, 16(%edx)
	.loc 1 2458 0
	movl	-8(%ebp), %edx
	movzbl	16(%edx), %eax
	andl	$-2, %eax
	movb	%al, 16(%edx)
	.loc 1 2459 0
	movl	8(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 40(%edx)
	.loc 1 2460 0
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
.L886:
	movl	-24(%ebp), %eax
	.loc 1 2461 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE84:
	.size	binding_for_name, .-binding_for_name
.globl namespace_binding
	.type	namespace_binding, @function
namespace_binding:
.LFB85:
	.loc 1 2467 0
	pushl	%ebp
.LCFI228:
	movl	%esp, %ebp
.LCFI229:
	pushl	%ebx
.LCFI230:
	subl	$36, %esp
.LCFI231:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2469 0
	cmpl	$0, 12(%ebp)
	je	.L889
	movl	12(%ebp), %eax
	movl	%eax, -28(%ebp)
	jmp	.L891
.L889:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
.L891:
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	cxx_scope_find_binding_for_name@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2471 0
	cmpl	$0, -8(%ebp)
	je	.L892
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L894
.L892:
	movl	$0, -24(%ebp)
.L894:
	movl	-24(%ebp), %eax
	.loc 1 2472 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE85:
	.size	namespace_binding, .-namespace_binding
.globl set_namespace_binding
	.type	set_namespace_binding, @function
set_namespace_binding:
.LFB86:
	.loc 1 2481 0
	pushl	%ebp
.LCFI232:
	movl	%esp, %ebp
.LCFI233:
	pushl	%ebx
.LCFI234:
	subl	$36, %esp
.LCFI235:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2484 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2485 0
	cmpl	$0, 12(%ebp)
	jne	.L897
	.loc 1 2486 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%ebp)
.L897:
	.loc 1 2488 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_for_name@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2489 0
	movl	-8(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 2490 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 2491 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE86:
	.size	set_namespace_binding, .-set_namespace_binding
	.section	.rodata
	.type	__FUNCTION__.19818, @object
	.size	__FUNCTION__.19818, 15
__FUNCTION__.19818:
	.string	"push_namespace"
.LC25:
	.string	"::"
	.align 4
.LC26:
	.string	"namespace alias `%D' not allowed here, assuming `%D'"
.LC27:
	.string	"Static declarations"
	.text
.globl push_namespace
	.type	push_namespace, @function
push_namespace:
.LFB87:
	.loc 1 2499 0
	pushl	%ebp
.LCFI236:
	movl	%esp, %ebp
.LCFI237:
	pushl	%ebx
.LCFI238:
	subl	$68, %esp
.LCFI239:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2500 0
	movl	$0, -20(%ebp)
	.loc 1 2501 0
	movl	$1, -16(%ebp)
	.loc 1 2502 0
	movl	$0, -12(%ebp)
	.loc 1 2503 0
	movl	$0, -8(%ebp)
	.loc 1 2505 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2507 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L901
	.loc 1 2510 0
	movl	$2, 4(%esp)
	leal	.LC25@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	cmpl	8(%ebp), %eax
	je	.L903
	leal	__FUNCTION__.19818@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2510, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L903:
	.loc 1 2511 0
	movl	$1, -8(%ebp)
	jmp	.L905
.L901:
	.loc 1 2513 0
	cmpl	$0, 8(%ebp)
	jne	.L906
	.loc 1 2517 0
	movl	anonymous_namespace_name@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L908
	.loc 1 2518 0
	movl	$78, (%esp)
	call	get_file_function_name@PLT
	movl	%eax, %edx
	movl	anonymous_namespace_name@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L908:
	.loc 1 2519 0
	movl	anonymous_namespace_name@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 2520 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -20(%ebp)
	.loc 1 2521 0
	cmpl	$0, -20(%ebp)
	je	.L910
	.loc 1 2523 0
	movl	$0, -16(%ebp)
.L910:
	.loc 1 2524 0
	movl	$1, -12(%ebp)
	jmp	.L905
.L906:
	.loc 1 2529 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -20(%ebp)
	.loc 1 2530 0
	cmpl	$0, -20(%ebp)
	je	.L905
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L905
	.loc 1 2532 0
	movl	$0, -16(%ebp)
	.loc 1 2533 0
	movl	-20(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L905
	.loc 1 2535 0
	movl	-20(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC26@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 2537 0
	movl	-20(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -20(%ebp)
.L905:
	.loc 1 2542 0
	cmpl	$0, -16(%ebp)
	je	.L915
	.loc 1 2545 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$39, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -20(%ebp)
	.loc 1 2549 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	gxx_emits_decl@PLT
	.loc 1 2554 0
	cmpl	$0, -8(%ebp)
	jne	.L940
	.loc 1 2556 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L919
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L921
.L919:
	movl	$0, -48(%ebp)
.L921:
	movl	-20(%ebp), %eax
	movl	-48(%ebp), %edx
	movl	%edx, 56(%eax)
	.loc 1 2557 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	movl	%eax, -20(%ebp)
	.loc 1 2558 0
	movl	$0, (%esp)
	call	pushlevel@PLT
	.loc 1 2559 0
	call	declare_namespace_level
	.loc 1 2560 0
	movl	-20(%ebp), %eax
	movl	136(%eax), %eax
	movl	%eax, -44(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L922
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L922
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L925
.L922:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -40(%ebp)
.L925:
	movl	-40(%ebp), %edx
	movl	-44(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 2561 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L926
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L926
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L929
.L926:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L929:
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	244(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L930
	movl	$256, -32(%ebp)
	jmp	.L932
.L930:
	movl	$32, -32(%ebp)
.L932:
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_table_new
	movl	-36(%ebp), %edx
	movl	%eax, 20(%edx)
	.loc 1 2565 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L933
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L933
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L936
.L933:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L936:
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	244(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L937
	movl	$10, -24(%ebp)
	jmp	.L939
.L937:
	movl	$200, -24(%ebp)
.L939:
	leal	.LC27@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	varray_init@PLT
	movl	-28(%ebp), %edx
	movl	%eax, 12(%edx)
	jmp	.L940
.L915:
	.loc 1 2571 0
	movl	-20(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	resume_binding_level
.L940:
	.loc 1 2573 0
	cmpl	$0, -12(%ebp)
	je	.L941
	.loc 1 2574 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	do_using_directive@PLT
.L941:
	.loc 1 2576 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 2578 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 2579 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE87:
	.size	push_namespace, .-push_namespace
	.type	binding_table_new, @function
binding_table_new:
.LFB19:
	.loc 1 395 0
	pushl	%ebp
.LCFI240:
	movl	%esp, %ebp
.LCFI241:
	pushl	%ebx
.LCFI242:
	subl	$36, %esp
.LCFI243:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 396 0
	movl	$12, (%esp)
	call	ggc_alloc@PLT
	movl	%eax, -8(%ebp)
	.loc 1 397 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_table_construct
	.loc 1 398 0
	movl	-8(%ebp), %eax
	.loc 1 399 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE19:
	.size	binding_table_new, .-binding_table_new
	.section	.rodata
	.type	__FUNCTION__.19924, @object
	.size	__FUNCTION__.19924, 14
__FUNCTION__.19924:
	.string	"pop_namespace"
	.text
.globl pop_namespace
	.type	pop_namespace, @function
pop_namespace:
.LFB88:
	.loc 1 2585 0
	pushl	%ebp
.LCFI244:
	movl	%esp, %ebp
.LCFI245:
	pushl	%ebx
.LCFI246:
	subl	$20, %esp
.LCFI247:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2586 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L947
	leal	__FUNCTION__.19924@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2586, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L947:
	.loc 1 2587 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L949
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	56(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L951
.L949:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L951:
	movl	-8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 2589 0
	call	suspend_binding_level
	.loc 1 2590 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE88:
	.size	pop_namespace, .-pop_namespace
.globl push_nested_namespace
	.type	push_nested_namespace, @function
push_nested_namespace:
.LFB89:
	.loc 1 2598 0
	pushl	%ebp
.LCFI248:
	movl	%esp, %ebp
.LCFI249:
	pushl	%ebx
.LCFI250:
	subl	$20, %esp
.LCFI251:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2599 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	jne	.L954
	.loc 1 2600 0
	call	push_to_top_level@PLT
	jmp	.L960
.L954:
	.loc 1 2603 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L957
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L959
.L957:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L959:
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_nested_namespace@PLT
	.loc 1 2604 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	push_namespace@PLT
.L960:
	.loc 1 2606 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE89:
	.size	push_nested_namespace, .-push_nested_namespace
.globl pop_nested_namespace
	.type	pop_nested_namespace, @function
pop_nested_namespace:
.LFB90:
	.loc 1 2614 0
	pushl	%ebp
.LCFI252:
	movl	%esp, %ebp
.LCFI253:
	pushl	%ebx
.LCFI254:
	subl	$20, %esp
.LCFI255:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2615 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2616 0
	jmp	.L962
.L963:
	.loc 1 2618 0
	call	pop_namespace@PLT
	.loc 1 2619 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L964
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L966
.L964:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L966:
	movl	-8(%ebp), %eax
	movl	%eax, 8(%ebp)
.L962:
	.loc 1 2616 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	jne	.L963
	.loc 1 2622 0
	call	pop_from_top_level@PLT
	.loc 1 2623 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 2624 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE90:
	.size	pop_nested_namespace, .-pop_nested_namespace
	.section	.rodata
	.type	__FUNCTION__.19987, @object
	.size	__FUNCTION__.19987, 15
__FUNCTION__.19987:
	.string	"store_bindings"
	.text
	.type	store_bindings, @function
store_bindings:
.LFB91:
	.loc 1 2652 0
	pushl	%ebp
.LCFI256:
	movl	%esp, %ebp
.LCFI257:
	pushl	%ebx
.LCFI258:
	subl	$52, %esp
.LCFI259:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2654 0
	movl	12(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 2656 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2657 0
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L970
.L971:
.LBB18:
	.loc 1 2663 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L972
	.loc 1 2664 0
	movl	-24(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -16(%ebp)
	jmp	.L974
.L972:
	.loc 1 2666 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -16(%ebp)
.L974:
	.loc 1 2668 0
	cmpl	$0, -16(%ebp)
	je	.L975
	movl	-16(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	jne	.L977
	movl	-16(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L975
.L977:
	.loc 1 2675 0
	movl	-20(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L979
.L980:
	.loc 1 2676 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	-16(%ebp), %eax
	je	.L975
	.loc 1 2675 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L979:
	cmpl	$0, -8(%ebp)
	jne	.L980
	.loc 1 2679 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L983
	leal	__FUNCTION__.19987@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2679, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L983:
	.loc 1 2680 0
	movl	$20, (%esp)
	call	ggc_alloc@PLT
	movl	%eax, -12(%ebp)
	.loc 1 2681 0
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 2682 0
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 2683 0
	movl	-16(%ebp), %eax
	movl	44(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 2684 0
	movl	-16(%ebp), %eax
	movl	48(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 1 2685 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 1 2686 0
	movl	-16(%ebp), %eax
	movl	$0, 44(%eax)
	.loc 1 2687 0
	movl	-16(%ebp), %eax
	movl	$0, 48(%eax)
	.loc 1 2688 0
	movl	-12(%ebp), %eax
	movl	%eax, 12(%ebp)
.L975:
.LBE18:
	.loc 1 2657 0
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
.L970:
	cmpl	$0, -24(%ebp)
	jne	.L971
	.loc 1 2692 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	12(%ebp), %eax
	.loc 1 2693 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE91:
	.size	store_bindings, .-store_bindings
	.section	.rodata
.LC28:
	.string	"current_lang_base"
	.text
.globl maybe_push_to_top_level
	.type	maybe_push_to_top_level, @function
maybe_push_to_top_level:
.LFB92:
	.loc 1 2698 0
	pushl	%ebp
.LCFI260:
	movl	%esp, %ebp
.LCFI261:
	pushl	%esi
.LCFI262:
	pushl	%ebx
.LCFI263:
	subl	$64, %esp
.LCFI264:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2704 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2706 0
	movl	$108, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, -28(%ebp)
	.loc 1 2708 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L988
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L990
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L990
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L993
.L990:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -44(%ebp)
.L993:
	movl	-44(%ebp), %eax
	movl	%eax, -48(%ebp)
	jmp	.L994
.L988:
	movl	$0, -48(%ebp)
.L994:
	movl	-48(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 2711 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L995
	.loc 1 2713 0
	movl	$1, -16(%ebp)
	.loc 1 2714 0
	movl	$0, (%esp)
	call	push_function_context_to@PLT
	jmp	.L997
.L995:
	.loc 1 2717 0
	movl	$0, -16(%ebp)
.L997:
	.loc 1 2719 0
	movl	$0, -20(%ebp)
	.loc 1 2720 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1001
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L1001
	.loc 1 2721 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	44(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	store_bindings
	movl	%eax, -20(%ebp)
	.loc 1 2725 0
	jmp	.L1001
.L1002:
.LBB19:
	.loc 1 2733 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L1003
	cmpl	$0, 8(%ebp)
	je	.L1005
	movl	-24(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L1003
.L1005:
	.loc 1 2736 0
	movl	-24(%ebp), %eax
	movl	(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	store_bindings
	movl	%eax, -20(%ebp)
	.loc 1 2739 0
	movl	-24(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1007
	.loc 1 2740 0
	movl	-24(%ebp), %eax
	movl	32(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	store_bindings
	movl	%eax, -20(%ebp)
.L1007:
	.loc 1 2743 0
	movl	-24(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L1009
.L1010:
	.loc 1 2744 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %edx
	movl	-12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 2743 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L1009:
	cmpl	$0, -12(%ebp)
	jne	.L1010
.LBE19:
	.loc 1 2725 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -24(%ebp)
.L1001:
	cmpl	$0, -24(%ebp)
	jne	.L1002
.L1003:
	.loc 1 2746 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, 104(%eax)
	.loc 1 2747 0
	movl	-28(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 2748 0
	movl	-28(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 100(%edx)
	.loc 1 2749 0
	movl	-28(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 76(%edx)
	.loc 1 2750 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 1 2751 0
	movl	last_function_parms@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, 56(%eax)
	.loc 1 2753 0
	movl	scope_chain@GOT(%ebx), %edx
	movl	-28(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 2754 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 2755 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %esi
	leal	.LC28@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14, 4(%esp)
	movl	$10, (%esp)
	call	varray_init@PLT
	movl	%eax, 28(%esi)
	.loc 1 2756 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	movl	%eax, 32(%edx)
	.loc 1 2757 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 2758 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 2759 0
	addl	$64, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE92:
	.size	maybe_push_to_top_level, .-maybe_push_to_top_level
.globl push_to_top_level
	.type	push_to_top_level, @function
push_to_top_level:
.LFB93:
	.loc 1 2763 0
	pushl	%ebp
.LCFI265:
	movl	%esp, %ebp
.LCFI266:
	pushl	%ebx
.LCFI267:
	subl	$4, %esp
.LCFI268:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2764 0
	movl	$0, (%esp)
	call	maybe_push_to_top_level@PLT
	.loc 1 2765 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE93:
	.size	push_to_top_level, .-push_to_top_level
.globl pop_from_top_level
	.type	pop_from_top_level, @function
pop_from_top_level:
.LFB94:
	.loc 1 2769 0
	pushl	%ebp
.LCFI269:
	movl	%esp, %ebp
.LCFI270:
	pushl	%ebx
.LCFI271:
	subl	$20, %esp
.LCFI272:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2770 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2773 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2776 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L1016
	.loc 1 2777 0
	call	invalidate_class_lookup_cache@PLT
.L1016:
	.loc 1 2779 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$0, 28(%eax)
	.loc 1 2781 0
	movl	-16(%ebp), %eax
	movl	104(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 2782 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L1018
.L1019:
.LBB20:
	.loc 1 2784 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 2786 0
	movl	-8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, 44(%edx)
	.loc 1 2787 0
	movl	-8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, 48(%edx)
	.loc 1 2788 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 4(%eax)
.LBE20:
	.loc 1 2782 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L1018:
	cmpl	$0, -12(%ebp)
	jne	.L1019
	.loc 1 2793 0
	movl	-16(%ebp), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L1021
	.loc 1 2794 0
	movl	$0, (%esp)
	call	pop_function_context_from@PLT
.L1021:
	.loc 1 2795 0
	movl	-16(%ebp), %eax
	movl	24(%eax), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 2796 0
	movl	-16(%ebp), %eax
	movl	56(%eax), %edx
	movl	last_function_parms@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 2798 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 2799 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE94:
	.size	pop_from_top_level, .-pop_from_top_level
	.type	set_identifier_type_value_with_scope, @function
set_identifier_type_value_with_scope:
.LFB95:
	.loc 1 2819 0
	pushl	%ebp
.LCFI273:
	movl	%esp, %ebp
.LCFI274:
	pushl	%ebx
.LCFI275:
	subl	$36, %esp
.LCFI276:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2820 0
	movl	16(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L1025
.LBB21:
	.loc 1 2824 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2825 0
	movl	16(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	16(%ebp), %eax
	movl	%edx, 36(%eax)
	jmp	.L1027
.L1025:
.LBE21:
.LBB22:
	.loc 1 2830 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_for_name@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2831 0
	movl	-8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 2833 0
	movl	global_type_node@GOTOFF(%ebx), %eax
	movl	%eax, 12(%ebp)
.L1027:
.LBE22:
	.loc 1 2835 0
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 2836 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE95:
	.size	set_identifier_type_value_with_scope, .-set_identifier_type_value_with_scope
.globl set_identifier_type_value
	.type	set_identifier_type_value, @function
set_identifier_type_value:
.LFB96:
	.loc 1 2844 0
	pushl	%ebp
.LCFI277:
	movl	%esp, %ebp
.LCFI278:
	pushl	%ebx
.LCFI279:
	subl	$20, %esp
.LCFI280:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2845 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1030
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1030
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L1033
.L1030:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L1033:
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value_with_scope
	.loc 1 2846 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE96:
	.size	set_identifier_type_value, .-set_identifier_type_value
.globl identifier_type_value
	.type	identifier_type_value, @function
identifier_type_value:
.LFB97:
	.loc 1 2853 0
	pushl	%ebp
.LCFI281:
	movl	%esp, %ebp
.LCFI282:
	pushl	%ebx
.LCFI283:
	subl	$20, %esp
.LCFI284:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2854 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2856 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L1036
	.loc 1 2857 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -8(%ebp)
	jmp	.L1038
.L1036:
	.loc 1 2859 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_type_node@GOTOFF(%ebx), %eax
	cmpl	%eax, %edx
	je	.L1039
	.loc 1 2860 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L1038
.L1039:
	.loc 1 2863 0
	movl	$0, 12(%esp)
	movl	$1, 8(%esp)
	movl	$2, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name_real
	movl	%eax, 8(%ebp)
	.loc 1 2864 0
	cmpl	$0, 8(%ebp)
	je	.L1041
	.loc 1 2865 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L1038
.L1041:
	.loc 1 2866 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -8(%ebp)
.L1038:
	movl	-8(%ebp), %eax
	.loc 1 2867 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE97:
	.size	identifier_type_value, .-identifier_type_value
.globl pop_everything
	.type	pop_everything, @function
pop_everything:
.LFB98:
	.loc 1 2875 0
	pushl	%ebp
.LCFI285:
	movl	%esp, %ebp
.LCFI286:
	pushl	%ebx
.LCFI287:
	subl	$20, %esp
.LCFI288:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2878 0
	jmp	.L1055
.L1046:
	.loc 1 2880 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1047
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1047
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L1050
.L1047:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -8(%ebp)
.L1050:
	movl	-8(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1051
	.loc 1 2881 0
	call	pop_nested_class@PLT
	jmp	.L1045
.L1051:
	.loc 1 2883 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	$0, (%esp)
	call	poplevel@PLT
.L1045:
.L1055:
	.loc 1 2878 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	je	.L1046
	.loc 1 2887 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE98:
	.size	pop_everything, .-pop_everything
	.section	.rodata
	.align 32
	.type	__FUNCTION__.20195, @object
	.size	__FUNCTION__.20195, 40
__FUNCTION__.20195:
	.string	"maybe_process_template_type_declaration"
	.text
	.type	maybe_process_template_type_declaration, @function
maybe_process_template_type_declaration:
.LFB99:
	.loc 1 2903 0
	pushl	%ebp
.LCFI289:
	movl	%esp, %ebp
.LCFI290:
	pushl	%esi
.LCFI291:
	pushl	%ebx
.LCFI292:
	subl	$32, %esp
.LCFI293:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2904 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 2906 0
	movl	processing_template_parmlist@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L1057
	.loc 1 2916 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_check_template_type@PLT
	.loc 1 2918 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L1059
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L1059
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L1059
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L1059
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L1059
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	jne	.L1065
.L1059:
	movl	$1, -28(%ebp)
	jmp	.L1066
.L1065:
	movl	$0, -28(%ebp)
.L1066:
	cmpl	$0, -28(%ebp)
	jne	.L1067
	leal	__FUNCTION__.20195@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$2919, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1067:
	.loc 1 2922 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L1057
.LBB23:
	.loc 1 2926 0
	movl	-16(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 2928 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	push_template_decl_real@PLT
	movl	%eax, -16(%ebp)
	.loc 1 2936 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	je	.L1057
	cmpl	$0, 12(%ebp)
	jne	.L1057
	movl	16(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L1057
	movl	16(%ebp), %eax
	movl	52(%eax), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1057
	.loc 1 2940 0
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	finish_member_declaration@PLT
	.loc 1 2944 0
	movl	16(%ebp), %eax
	movl	52(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L1074
	.loc 1 2945 0
	movl	16(%ebp), %eax
	movl	52(%eax), %esi
	movl	$8, (%esp)
	call	binding_table_new
	movl	%eax, 20(%esi)
.L1074:
	.loc 1 2947 0
	movl	16(%ebp), %eax
	movl	52(%eax), %eax
	movl	20(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	binding_table_insert
	.loc 1 2948 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L1057
	.loc 1 2950 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %edx
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	maybe_add_class_template_decl_list@PLT
	.loc 1 2952 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %edx
	movl	16(%ebp), %eax
	movl	52(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, 36(%edx)
.L1057:
.LBE23:
	.loc 1 2959 0
	movl	-16(%ebp), %eax
	.loc 1 2960 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE99:
	.size	maybe_process_template_type_declaration, .-maybe_process_template_type_declaration
	.type	binding_table_insert, @function
binding_table_insert:
.LFB21:
	.loc 1 431 0
	pushl	%ebp
.LCFI294:
	movl	%esp, %ebp
.LCFI295:
	subl	$24, %esp
.LCFI296:
	.loc 1 432 0
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 433 0
	movl	-12(%ebp), %eax
	movl	%eax, %edx
	shrl	$3, %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	subl	$1, %eax
	andl	%edx, %eax
	movl	%eax, -8(%ebp)
	.loc 1 434 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_entry_make
	movl	%eax, -4(%ebp)
	.loc 1 436 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 437 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	addl	%eax, %edx
	movl	-4(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 438 0
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	leal	1(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 440 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	%edx, %eax
	addl	%eax, %eax
	leal	(%eax,%edx), %ecx
	movl	8(%ebp), %eax
	movl	8(%eax), %edx
	movl	%edx, %eax
	sall	$2, %eax
	addl	%edx, %eax
	cmpl	%eax, %ecx
	jae	.L1081
	.loc 1 441 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	binding_table_expand
.L1081:
	.loc 1 442 0
	leave
	ret
.LFE21:
	.size	binding_table_insert, .-binding_table_insert
	.type	binding_entry_make, @function
binding_entry_make:
.LFB15:
	.loc 1 315 0
	pushl	%ebp
.LCFI297:
	movl	%esp, %ebp
.LCFI298:
	pushl	%ebx
.LCFI299:
	subl	$20, %esp
.LCFI300:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 318 0
	movl	free_binding_entry@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L1083
	.loc 1 320 0
	movl	free_binding_entry@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 321 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, free_binding_entry@GOTOFF(%ebx)
	jmp	.L1085
.L1083:
	.loc 1 324 0
	movl	$12, (%esp)
	call	ggc_alloc@PLT
	movl	%eax, -8(%ebp)
.L1085:
	.loc 1 326 0
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 327 0
	movl	-8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 329 0
	movl	-8(%ebp), %eax
	.loc 1 330 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE15:
	.size	binding_entry_make, .-binding_entry_make
.globl create_implicit_typedef
	.type	create_implicit_typedef, @function
create_implicit_typedef:
.LFB100:
	.loc 1 2971 0
	pushl	%ebp
.LCFI301:
	movl	%esp, %ebp
.LCFI302:
	pushl	%ebx
.LCFI303:
	subl	$36, %esp
.LCFI304:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2974 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 2975 0
	movl	-8(%ebp), %edx
	movzbl	35(%edx), %eax
	orl	$8, %eax
	movb	%al, 35(%edx)
	.loc 1 2979 0
	movl	-8(%ebp), %edx
	movzbl	37(%edx), %eax
	orl	$-128, %eax
	movb	%al, 37(%edx)
	.loc 1 2980 0
	movl	12(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 2982 0
	movl	-8(%ebp), %eax
	.loc 1 2983 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE100:
	.size	create_implicit_typedef, .-create_implicit_typedef
	.section	.rodata
.LC29:
	.string	"local_names"
	.text
	.type	push_local_name, @function
push_local_name:
.LFB101:
	.loc 1 2990 0
	pushl	%ebp
.LCFI305:
	movl	%esp, %ebp
.LCFI306:
	pushl	%esi
.LCFI307:
	pushl	%ebx
.LCFI308:
	subl	$32, %esp
.LCFI309:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 2994 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 2996 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	jne	.L1090
	.loc 1 2997 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %esi
	leal	.LC29@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14, 4(%esp)
	movl	$8, (%esp)
	call	varray_init@PLT
	movl	%eax, 88(%esi)
.L1090:
	.loc 1 2999 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 3001 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 3002 0
	movl	$0, -24(%ebp)
	jmp	.L1092
.L1093:
	.loc 1 3004 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %edx
	movl	-24(%ebp), %eax
	movl	16(%edx,%eax,4), %eax
	movl	%eax, -16(%ebp)
	.loc 1 3005 0
	movl	-16(%ebp), %eax
	movl	52(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L1094
	.loc 1 3007 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	jne	.L1096
	.loc 1 3008 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	retrofit_lang_decl@PLT
.L1096:
	.loc 1 3009 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	7(%edx), %eax
	orl	$32, %eax
	movb	%al, 7(%edx)
	.loc 1 3010 0
	movl	-16(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1098
	.loc 1 3011 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	-16(%ebp), %eax
	movl	136(%eax), %eax
	movl	12(%eax), %eax
	addl	$1, %eax
	movl	%eax, 12(%edx)
	jmp	.L1100
.L1098:
	.loc 1 3013 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	$1, 12(%eax)
.L1100:
	.loc 1 3015 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %ecx
	movl	-24(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 16(%ecx,%edx,4)
	.loc 1 3016 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	jmp	.L1105
.L1094:
	.loc 1 3002 0
	addl	$1, -24(%ebp)
.L1092:
	movl	-24(%ebp), %eax
	cmpl	-20(%ebp), %eax
	jb	.L1093
	.loc 1 3020 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %eax
	movl	4(%eax), %edx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jb	.L1103
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %esi
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %eax
	movl	(%eax), %eax
	leal	(%eax,%eax), %edx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	varray_grow@PLT
	movl	%eax, 88(%esi)
.L1103:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %esi
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	88(%eax), %ecx
	movl	4(%ecx), %edx
	movl	8(%ebp), %eax
	movl	%eax, 16(%esi,%edx,4)
	leal	1(%edx), %eax
	movl	%eax, 4(%ecx)
	.loc 1 3021 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
.L1105:
	.loc 1 3022 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE101:
	.size	push_local_name, .-push_local_name
.globl pushtag
	.type	pushtag, @function
pushtag:
.LFB102:
	.loc 1 3033 0
	pushl	%ebp
.LCFI310:
	movl	%esp, %ebp
.LCFI311:
	pushl	%esi
.LCFI312:
	pushl	%ebx
.LCFI313:
	subl	$64, %esp
.LCFI314:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3036 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 3038 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1107
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1107
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -56(%ebp)
	jmp	.L1110
.L1107:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -56(%ebp)
.L1110:
	movl	-56(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 3039 0
	jmp	.L1111
.L1112:
	.loc 1 3047 0
	movl	-32(%ebp), %edx
	movl	52(%edx), %edx
	movl	%edx, -32(%ebp)
.L1111:
	.loc 1 3039 0
	movl	-32(%ebp), %ecx
	movzbl	60(%ecx), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1112
	movl	-32(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1114
	cmpl	$0, 16(%ebp)
	jne	.L1112
	movl	-32(%ebp), %ecx
	movl	48(%ecx), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L1112
.L1114:
	.loc 1 3049 0
	movl	-32(%ebp), %edx
	movl	20(%edx), %eax
	testl	%eax, %eax
	jne	.L1117
	.loc 1 3050 0
	movl	$8, (%esp)
	call	binding_table_new
	movl	-32(%ebp), %ecx
	movl	%eax, 20(%ecx)
.L1117:
	.loc 1 3051 0
	movl	-32(%ebp), %edx
	movl	20(%edx), %eax
	movl	12(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	8(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	binding_table_insert
	.loc 1 3053 0
	cmpl	$0, 8(%ebp)
	je	.L1119
	.loc 1 3056 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	identifier_type_value@PLT
	cmpl	12(%ebp), %eax
	je	.L1121
.LBB24:
	.loc 1 3059 0
	movl	$0, -24(%ebp)
	.loc 1 3060 0
	movl	12(%ebp), %eax
	movl	80(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 3062 0
	cmpl	$0, -20(%ebp)
	jne	.L1123
.LBB25:
	.loc 1 3064 0
	call	current_scope@PLT
	movl	%eax, -16(%ebp)
	.loc 1 3066 0
	cmpl	$0, 16(%ebp)
	jne	.L1125
	.loc 1 3067 0
	movl	-16(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L1123
.L1125:
	.loc 1 3068 0
	cmpl	$0, -16(%ebp)
	je	.L1123
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L1123
	.loc 1 3072 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	get_type_decl@PLT
	movl	%eax, (%esp)
	call	decl_function_context@PLT
	movl	%eax, -20(%ebp)
.L1123:
.LBE25:
	.loc 1 3074 0
	cmpl	$0, -20(%ebp)
	jne	.L1129
	.loc 1 3075 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
.L1129:
	.loc 1 3077 0
	movl	-32(%ebp), %ecx
	movzbl	60(%ecx), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L1131
	movl	-32(%ebp), %edx
	movl	52(%edx), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	je	.L1133
.L1131:
	movl	-32(%ebp), %ecx
	movzbl	60(%ecx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1134
.L1133:
	.loc 1 3079 0
	movl	$1, -24(%ebp)
.L1134:
	.loc 1 3081 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	32(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	256(%eax), %eax
	cmpl	%eax, %edx
	jne	.L1135
	.loc 1 3082 0
	movl	12(%ebp), %eax
	movzbl	39(%eax), %edx
	orl	$8, %edx
	movb	%dl, 39(%eax)
.L1135:
	.loc 1 3084 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	create_implicit_typedef@PLT
	movl	%eax, -28(%ebp)
	.loc 1 3085 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -20(%ebp)
	je	.L1137
	movl	-20(%ebp), %eax
	movl	%eax, -52(%ebp)
	jmp	.L1139
.L1137:
	movl	$0, -52(%ebp)
.L1139:
	movl	-52(%ebp), %ecx
	movl	-28(%ebp), %edx
	movl	%ecx, 56(%edx)
	.loc 1 3086 0
	cmpl	$0, -24(%ebp)
	jne	.L1140
	.loc 1 3087 0
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value_with_scope
.L1140:
	.loc 1 3089 0
	movl	-32(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_process_template_type_declaration
	movl	%eax, -28(%ebp)
	.loc 1 3092 0
	movl	-32(%ebp), %ecx
	movzbl	60(%ecx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1142
	.loc 1 3094 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	60(%eax), %edx
	movl	64(%eax), %ecx
	movl	%edx, -48(%ebp)
	movl	%ecx, -44(%ebp)
	call	current_scope@PLT
	movl	%eax, (%esp)
	call	template_class_depth@PLT
	movl	%eax, -40(%ebp)
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	%ecx, -36(%ebp)
	movl	-36(%ebp), %eax
	cmpl	%eax, -44(%ebp)
	jg	.L1144
	movl	-36(%ebp), %edx
	cmpl	%edx, -44(%ebp)
	jl	.L1146
	movl	-40(%ebp), %ecx
	cmpl	%ecx, -48(%ebp)
	ja	.L1144
.L1146:
	.loc 1 3099 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_member_declaration@PLT
	jmp	.L1148
.L1144:
	.loc 1 3101 0
	movl	-28(%ebp), %edx
	movl	%edx, (%esp)
	call	pushdecl_class_level@PLT
	jmp	.L1148
.L1142:
	.loc 1 3104 0
	movl	-32(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_with_scope
	movl	%eax, -28(%ebp)
.L1148:
	.loc 1 3107 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L1149
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L1149
	.loc 1 3108 0
	movl	-28(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$64, %eax
	movl	-28(%ebp), %ecx
	movb	%al, 33(%ecx)
.L1149:
	.loc 1 3110 0
	movl	-28(%ebp), %eax
	movl	56(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 80(%eax)
	.loc 1 3117 0
	movl	12(%ebp), %eax
	movl	80(%eax), %eax
	testl	%eax, %eax
	je	.L1121
	movl	12(%ebp), %eax
	movl	80(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1121
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L1121
	.loc 1 3120 0
	movl	local_classes@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	local_classes@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jb	.L1155
	movl	local_classes@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	(%eax), %eax
	leal	(%eax,%eax), %edx
	movl	local_classes@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	varray_grow@PLT
	movl	%eax, %edx
	movl	local_classes@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L1155:
	movl	local_classes@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	local_classes@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	4(%ecx), %edx
	movl	12(%ebp), %eax
	movl	%eax, 16(%esi,%edx,4)
	leal	1(%edx), %eax
	movl	%eax, 4(%ecx)
.L1121:
.LBE24:
	.loc 1 3122 0
	movl	-32(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1119
	.loc 1 3124 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L1119
	.loc 1 3126 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %edx
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	maybe_add_class_template_decl_list@PLT
	.loc 1 3128 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %edx
	movl	-32(%ebp), %ecx
	movl	20(%ecx), %eax
	movl	%eax, 36(%edx)
.L1119:
	.loc 1 3133 0
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1159
	.loc 1 3135 0
	movl	12(%ebp), %eax
	movl	56(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	jmp	.L1161
.L1159:
.LBB26:
	.loc 1 3146 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, -12(%ebp)
	.loc 1 3147 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_with_scope
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
.L1161:
.LBE26:
	.loc 1 3150 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 3151 0
	addl	$64, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE102:
	.size	pushtag, .-pushtag
	.local	anon_cnt
	.comm	anon_cnt,4,4
	.section	.rodata
.LC30:
	.string	"._%d"
	.text
.globl make_anon_name
	.type	make_anon_name, @function
make_anon_name:
.LFB103:
	.loc 1 3162 0
	pushl	%ebp
.LCFI315:
	movl	%esp, %ebp
.LCFI316:
	pushl	%ebx
.LCFI317:
	subl	$68, %esp
.LCFI318:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3162 0
	movl	%gs:20, %eax
	movl	%eax, -8(%ebp)
	xorl	%eax, %eax
	.loc 1 3165 0
	movl	anon_cnt@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	addl	$1, %eax
	movl	%eax, anon_cnt@GOTOFF(%ebx)
	movl	%edx, 8(%esp)
	leal	.LC30@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 3166 0
	leal	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	.loc 1 3167 0
	movl	-8(%ebp), %edx
	xorl	%gs:20, %edx
	je	.L1165
	call	__stack_chk_fail_local
.L1165:
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE103:
	.size	make_anon_name, .-make_anon_name
	.local	last_cnt.20526
	.comm	last_cnt.20526,4,4
.globl clear_anon_tags
	.type	clear_anon_tags, @function
clear_anon_tags:
.LFB104:
	.loc 1 3174 0
	pushl	%ebp
.LCFI319:
	movl	%esp, %ebp
.LCFI320:
	pushl	%ebx
.LCFI321:
	subl	$20, %esp
.LCFI322:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3179 0
	movl	last_cnt.20526@GOTOFF(%ebx), %edx
	movl	anon_cnt@GOTOFF(%ebx), %eax
	cmpl	%eax, %edx
	je	.L1178
	.loc 1 3182 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1169
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1169
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L1172
.L1169:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -12(%ebp)
.L1172:
	movl	-12(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 3183 0
	jmp	.L1173
.L1174:
	.loc 1 3184 0
	movl	-8(%ebp), %edx
	movl	52(%edx), %edx
	movl	%edx, -8(%ebp)
.L1173:
	.loc 1 3183 0
	movl	-8(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1174
	.loc 1 3185 0
	movl	-8(%ebp), %edx
	movl	20(%edx), %eax
	testl	%eax, %eax
	je	.L1176
	.loc 1 3186 0
	movl	-8(%ebp), %edx
	movl	20(%edx), %eax
	movl	%eax, (%esp)
	call	binding_table_remove_anonymous_types
.L1176:
	.loc 1 3187 0
	movl	anon_cnt@GOTOFF(%ebx), %eax
	movl	%eax, last_cnt.20526@GOTOFF(%ebx)
.L1178:
	.loc 1 3188 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE104:
	.size	clear_anon_tags, .-clear_anon_tags
.globl decls_match
	.type	decls_match, @function
decls_match:
.LFB105:
	.loc 1 3200 0
	pushl	%ebp
.LCFI323:
	movl	%esp, %ebp
.LCFI324:
	pushl	%ebx
.LCFI325:
	subl	$68, %esp
.LCFI326:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3203 0
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	jne	.L1180
	.loc 1 3204 0
	movl	$1, -48(%ebp)
	jmp	.L1182
.L1180:
	.loc 1 3206 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %edx
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	%al, %dl
	je	.L1183
	.loc 1 3209 0
	movl	$0, -48(%ebp)
	jmp	.L1182
.L1183:
	.loc 1 3211 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1185
.LBB27:
	.loc 1 3213 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 3214 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 3215 0
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 3216 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 3218 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1187
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L1189
.L1187:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
.L1189:
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1190
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L1192
.L1190:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
.L1192:
	movl	-40(%ebp), %eax
	cmpl	%eax, -44(%ebp)
	je	.L1193
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1195
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1197
	jmp	.L1199
.L1195:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1197
.L1199:
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1200
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1197
	jmp	.L1193
.L1200:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1193
.L1197:
	.loc 1 3221 0
	movl	$0, -48(%ebp)
	jmp	.L1182
.L1193:
	.loc 1 3223 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %edx
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	%al, %dl
	je	.L1202
	.loc 1 3224 0
	movl	$0, -48(%ebp)
	jmp	.L1182
.L1202:
	.loc 1 3226 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %edx
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	je	.L1204
	.loc 1 3228 0
	cmpl	$0, -8(%ebp)
	jne	.L1206
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1208
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1206
	jmp	.L1211
.L1208:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1206
.L1211:
	movl	12(%ebp), %eax
	movzbl	36(%eax), %eax
	andl	$12, %eax
	testb	%al, %al
	jne	.L1212
	movl	8(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1214
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1212
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L1212
.L1214:
	movl	12(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1206
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1212
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	je	.L1206
.L1212:
	.loc 1 3236 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	self_promoting_args_p@PLT
	movl	%eax, -24(%ebp)
	.loc 1 3237 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L1239
	.loc 1 3238 0
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 3228 0
	jmp	.L1239
.L1206:
	.loc 1 3241 0
	cmpl	$0, -12(%ebp)
	jne	.L1222
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1224
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1222
	jmp	.L1227
.L1224:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1222
.L1227:
	movl	12(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1222
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1229
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	je	.L1222
.L1229:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1231
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1222
	jmp	.L1234
.L1231:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1222
.L1234:
	movl	8(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1222
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1236
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	je	.L1222
.L1236:
	.loc 1 3249 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	self_promoting_args_p@PLT
	movl	%eax, -24(%ebp)
	.loc 1 3250 0
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 3241 0
	jmp	.L1239
.L1222:
	.loc 1 3254 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	compparms@PLT
	movl	%eax, -24(%ebp)
	jmp	.L1239
.L1204:
	.loc 1 3257 0
	movl	$0, -24(%ebp)
	jmp	.L1239
.L1185:
.LBE27:
	.loc 1 3259 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1240
	.loc 1 3261 0
	movl	12(%ebp), %eax
	movl	60(%eax), %edx
	movl	8(%ebp), %eax
	movl	60(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comp_template_parms@PLT
	testl	%eax, %eax
	jne	.L1242
	.loc 1 3263 0
	movl	$0, -48(%ebp)
	jmp	.L1182
.L1242:
	.loc 1 3265 0
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %edx
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	%al, %dl
	je	.L1244
	.loc 1 3267 0
	movl	$0, -48(%ebp)
	jmp	.L1182
.L1244:
	.loc 1 3269 0
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1246
	.loc 1 3270 0
	movl	$1, -24(%ebp)
	jmp	.L1239
.L1246:
	.loc 1 3272 0
	movl	8(%ebp), %eax
	movl	64(%eax), %edx
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	decls_match@PLT
	movl	%eax, -24(%ebp)
	jmp	.L1239
.L1240:
	.loc 1 3277 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L1249
	.loc 1 3278 0
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	jmp	.L1239
.L1249:
	.loc 1 3279 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L1251
	.loc 1 3280 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	jmp	.L1239
.L1251:
	.loc 1 3281 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L1253
	.loc 1 3282 0
	movl	$0, -24(%ebp)
	jmp	.L1239
.L1253:
	.loc 1 3284 0
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$4, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	movl	%eax, -24(%ebp)
.L1239:
	.loc 1 3291 0
	cmpl	$0, -24(%ebp)
	je	.L1255
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1255
	.loc 1 3292 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	add_duplicates@PLT
.L1255:
	.loc 1 3294 0
	movl	-24(%ebp), %eax
	movl	%eax, -48(%ebp)
.L1182:
	movl	-48(%ebp), %eax
	.loc 1 3295 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE105:
	.size	decls_match, .-decls_match
	.section	.rodata
	.align 4
.LC31:
	.string	"`%D' was declared implicitly `extern' and later `static'"
	.section	.data.rel.ro.local,"aw",@progbits
	.align 4
	.type	implicit_extern_static_warning.20749, @object
	.size	implicit_extern_static_warning.20749, 4
implicit_extern_static_warning.20749:
	.long	.LC31
	.section	.rodata
	.align 4
.LC32:
	.string	"`%D' was declared `extern' and later `static'"
	.section	.data.rel.ro.local
	.align 4
	.type	explicit_extern_static_warning.20748, @object
	.size	explicit_extern_static_warning.20748, 4
explicit_extern_static_warning.20748:
	.long	.LC32
	.section	.rodata
.LC33:
	.string	"previous declaration of `%D'"
	.text
	.type	warn_extern_redeclared_static, @function
warn_extern_redeclared_static:
.LFB106:
	.loc 1 3309 0
	pushl	%ebp
.LCFI327:
	movl	%esp, %ebp
.LCFI328:
	pushl	%ebx
.LCFI329:
	subl	$36, %esp
.LCFI330:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3317 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1276
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L1276
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	jne	.L1263
	.loc 1 3320 0
	jmp	.L1276
.L1263:
	.loc 1 3324 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1265
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1276
.L1265:
	.loc 1 3330 0
	movl	12(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1276
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1269
	.loc 1 3331 0
	jmp	.L1276
.L1269:
	.loc 1 3334 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1270
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1276
.L1270:
	.loc 1 3338 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	%eax, -8(%ebp)
	.loc 1 3339 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1272
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L1272
	movl	implicit_extern_static_warning.20749@GOTOFF(%ebx), %eax
	movl	%eax, -24(%ebp)
	jmp	.L1275
.L1272:
	movl	explicit_extern_static_warning.20748@GOTOFF(%ebx), %eax
	movl	%eax, -24(%ebp)
.L1275:
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 3342 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC33@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
.L1276:
	.loc 1 3343 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE106:
	.size	warn_extern_redeclared_static, .-warn_extern_redeclared_static
	.section	.rodata
	.type	__FUNCTION__.20810, @object
	.size	__FUNCTION__.20810, 16
__FUNCTION__.20810:
	.string	"duplicate_decls"
.LC34:
	.string	"noinline"
	.align 4
.LC35:
	.string	"function `%s' redeclared as inline"
	.align 4
.LC36:
	.string	"previous declaration of function `%s' with attribute noinline"
	.align 4
.LC37:
	.string	"function `%s' redeclared with attribute noinline"
	.align 4
.LC38:
	.string	"previous declaration of function `%s' was inline"
.LC39:
	.string	"built-in"
.LC40:
	.string	"library"
.LC41:
	.string	"shadowing %s function `%#D'"
	.align 4
.LC42:
	.string	"library function `%#D' redeclared as non-function `%#D'"
	.align 4
.LC43:
	.string	"conflicts with built-in declaration `%#D'"
.LC44:
	.string	"new declaration `%#D'"
	.align 4
.LC45:
	.string	"ambiguates built-in declaration `%#D'"
	.align 4
.LC46:
	.string	"`%#D' redeclared as different kind of symbol"
.LC47:
	.string	"previous declaration of `%#D'"
.LC48:
	.string	"declaration of template `%#D'"
	.align 4
.LC49:
	.string	"ambiguates old declaration `%#D'"
	.align 4
.LC50:
	.string	"declaration of C function `%#D' conflicts with"
	.align 4
.LC51:
	.string	"previous declaration `%#D' here"
.LC52:
	.string	"conflicting types for `%#D'"
.LC53:
	.string	"previous declaration as `%#D'"
.LC54:
	.string	"`%#D' previously defined here"
	.align 4
.LC55:
	.string	"`%#D' previously declared here"
.LC56:
	.string	"prototype for `%#D'"
	.align 4
.LC57:
	.string	"follows non-prototype definition here"
	.align 4
.LC58:
	.string	"previous declaration of `%#D' with %L linkage"
	.align 4
.LC59:
	.string	"conflicts with new declaration with %L linkage"
	.align 4
.LC60:
	.string	"default argument given for parameter %d of `%#D'"
	.align 4
.LC61:
	.string	"after previous specification in `%#D'"
	.align 4
.LC62:
	.string	"`%#D' was used before it was declared inline"
	.align 4
.LC63:
	.string	"previous non-inline declaration here"
	.align 4
.LC64:
	.string	"redundant redeclaration of `%D' in same scope"
	.align 4
.LC65:
	.string	"declaration of `%F' throws different exceptions"
	.align 4
.LC66:
	.string	"than previous declaration `%F'"
	.align 4
.LC67:
	.string	"explicit specialization of %D after first use"
	.text
.globl duplicate_decls
	.type	duplicate_decls, @function
duplicate_decls:
.LFB107:
	.loc 1 3355 0
	pushl	%ebp
.LCFI331:
	movl	%esp, %ebp
.LCFI332:
	pushl	%edi
.LCFI333:
	pushl	%esi
.LCFI334:
	pushl	%ebx
.LCFI335:
	subl	$188, %esp
.LCFI336:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 3356 0
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -68(%ebp)
	.loc 1 3357 0
	movl	$0, -64(%ebp)
	movl	$0, -60(%ebp)
	.loc 1 3358 0
	movl	$0, -56(%ebp)
	.loc 1 3360 0
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	jne	.L1278
	.loc 1 3361 0
	movl	$1, -188(%ebp)
	jmp	.L1280
.L1278:
	.loc 1 3363 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decls_match@PLT
	movl	%eax, -60(%ebp)
	.loc 1 3370 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L1281
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L1283
.L1281:
	.loc 1 3372 0
	movl	$1, -60(%ebp)
.L1283:
	.loc 1 3374 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L1284
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1284
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1284
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L1288
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L1284
.L1288:
	.loc 1 3379 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1290
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L1290
	movl	8(%ebp), %eax
	movl	100(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC34@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	lookup_attribute@PLT
	testl	%eax, %eax
	je	.L1290
	jmp	.L1284
.L1290:
	.loc 1 3383 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1294
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L1294
	movl	12(%ebp), %eax
	movl	100(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC34@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	lookup_attribute@PLT
	testl	%eax, %eax
	je	.L1294
	jmp	.L1284
.L1294:
	.loc 1 3387 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1298
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L1298
	movl	12(%ebp), %eax
	movl	100(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC34@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	lookup_attribute@PLT
	testl	%eax, %eax
	je	.L1298
	.loc 1 3391 0
	leal	.LC35@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	warning_with_decl@PLT
	.loc 1 3393 0
	leal	.LC36@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	warning_with_decl@PLT
	.loc 1 3387 0
	jmp	.L1284
.L1298:
	.loc 1 3396 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1284
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L1284
	movl	8(%ebp), %eax
	movl	100(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC34@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	lookup_attribute@PLT
	testl	%eax, %eax
	je	.L1284
	.loc 1 3400 0
	leal	.LC37@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	warning_with_decl@PLT
	.loc 1 3402 0
	leal	.LC38@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	warning_with_decl@PLT
.L1284:
	.loc 1 3408 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1305
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1305
	.loc 1 3411 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1308
	.loc 1 3414 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L1310
	.loc 1 3415 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1310:
	.loc 1 3420 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1312
	.loc 1 3422 0
	movl	warn_shadow@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1314
	.loc 1 3423 0
	movl	12(%ebp), %eax
	movzbl	36(%eax), %eax
	andl	$12, %eax
	testb	%al, %al
	je	.L1316
	leal	.LC39@GOTOFF(%ebx), %eax
	movl	%eax, -184(%ebp)
	jmp	.L1318
.L1316:
	leal	.LC40@GOTOFF(%ebx), %edx
	movl	%edx, -184(%ebp)
.L1318:
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-184(%ebp), %ecx
	movl	%ecx, 4(%esp)
	leal	.LC41@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L1314:
	.loc 1 3427 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1312:
	.loc 1 3431 0
	movl	12(%ebp), %eax
	movzbl	36(%eax), %eax
	andl	$12, %eax
	testb	%al, %al
	jne	.L1319
	.loc 1 3432 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC42@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	jmp	.L1321
.L1319:
	.loc 1 3436 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC1@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3437 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC43@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L1321:
	.loc 1 3440 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1308:
	.loc 1 3442 0
	cmpl	$0, -60(%ebp)
	jne	.L1322
	.loc 1 3445 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L1324
	.loc 1 3447 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1326
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1328
	jmp	.L1330
.L1326:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1328
.L1330:
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1331
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	je	.L1333
	jmp	.L1328
.L1331:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1333
.L1328:
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	compparms@PLT
	testl	%eax, %eax
	je	.L1334
.L1333:
	.loc 1 3454 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1335
	.loc 1 3456 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC44@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 3457 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC45@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	jmp	.L1324
.L1335:
	.loc 1 3460 0
	movl	warn_shadow@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1324
	.loc 1 3461 0
	movl	12(%ebp), %eax
	movzbl	36(%eax), %eax
	andl	$12, %eax
	testb	%al, %al
	je	.L1339
	leal	.LC39@GOTOFF(%ebx), %eax
	movl	%eax, -180(%ebp)
	jmp	.L1341
.L1339:
	leal	.LC40@GOTOFF(%ebx), %edx
	movl	%edx, -180(%ebp)
.L1341:
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-180(%ebp), %ecx
	movl	%ecx, 4(%esp)
	leal	.LC41@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 3447 0
	jmp	.L1324
.L1334:
	.loc 1 3467 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1324:
	.loc 1 3470 0
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L1342
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -176(%ebp)
	jmp	.L1344
.L1342:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -176(%ebp)
.L1344:
	movl	12(%ebp), %eax
	movl	-176(%ebp), %edx
	movl	%edx, 104(%eax)
	jmp	.L1345
.L1322:
	.loc 1 3474 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L1345
	.loc 1 3475 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 4(%eax)
.L1345:
	.loc 1 3479 0
	movl	12(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$-3, %eax
	movb	%al, 10(%edx)
	.loc 1 3481 0
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1356
	movl	12(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1356
	.loc 1 3485 0
	movl	12(%ebp), %edx
	movzbl	38(%edx), %eax
	orl	$8, %eax
	movb	%al, 38(%edx)
	.loc 1 3486 0
	movl	12(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$-9, %eax
	movb	%al, 10(%edx)
	.loc 1 3491 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	%eax, -172(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1350
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movb	%al, -165(%ebp)
	jmp	.L1352
.L1350:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	-165(%ebp)
.L1352:
	movzbl	-165(%ebp), %ecx
	movl	-172(%ebp), %eax
	movb	%cl, 4(%eax)
	.loc 1 3492 0
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L1353
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -164(%ebp)
	jmp	.L1355
.L1353:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -164(%ebp)
.L1355:
	movl	12(%ebp), %eax
	movl	-164(%ebp), %edx
	movl	%edx, 104(%eax)
	.loc 1 3408 0
	jmp	.L1356
.L1305:
	.loc 1 3495 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %edx
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	%al, %dl
	je	.L1357
	.loc 1 3497 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1359
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1359
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1359
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1363
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1363
.L1359:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1365
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1365
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1365
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1363
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1365
.L1363:
	.loc 1 3512 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1365:
	.loc 1 3515 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1370
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1370
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1373
.L1370:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1374
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1374
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1374
.L1373:
	.loc 1 3519 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1374:
	.loc 1 3521 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC46@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3522 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L1377
	.loc 1 3523 0
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
.L1377:
	.loc 1 3524 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC47@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 3529 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1357:
	.loc 1 3531 0
	cmpl	$0, -60(%ebp)
	jne	.L1379
	.loc 1 3533 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1381
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -160(%ebp)
	jmp	.L1383
.L1381:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -160(%ebp)
.L1383:
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1384
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -156(%ebp)
	jmp	.L1386
.L1384:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -156(%ebp)
.L1386:
	movl	-156(%ebp), %ecx
	cmpl	%ecx, -160(%ebp)
	je	.L1387
	.loc 1 3536 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1387:
	.loc 1 3538 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1389
	.loc 1 3543 0
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1391
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1393
.L1391:
	.loc 1 3546 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC48@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3547 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC2@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 3543 0
	jmp	.L1394
.L1393:
	.loc 1 3550 0
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1394
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1394
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %edx
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	compparms@PLT
	testl	%eax, %eax
	je	.L1394
	movl	12(%ebp), %eax
	movl	60(%eax), %edx
	movl	8(%ebp), %eax
	movl	60(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comp_template_parms@PLT
	testl	%eax, %eax
	je	.L1394
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	je	.L1394
	.loc 1 3561 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC44@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3562 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC49@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L1394:
	.loc 1 3564 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1389:
	.loc 1 3566 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1400
	.loc 1 3568 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1402
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1404
	jmp	.L1406
.L1402:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1404
.L1406:
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1407
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L1404
	jmp	.L1410
.L1407:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1404
.L1410:
	.loc 1 3570 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC50@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3572 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC51@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 3568 0
	jmp	.L1356
.L1404:
	.loc 1 3574 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	compparms@PLT
	testl	%eax, %eax
	je	.L1412
	.loc 1 3577 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC44@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3578 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC49@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	jmp	.L1356
.L1412:
	.loc 1 3581 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1400:
	.loc 1 3585 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L1415
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L1415
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1418
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	56(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -152(%ebp)
	jmp	.L1420
.L1418:
	movl	$0, -152(%ebp)
.L1420:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, -152(%ebp)
	je	.L1356
.L1415:
	.loc 1 3590 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC52@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3591 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC53@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	jmp	.L1356
.L1379:
	.loc 1 3594 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1421
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	cmpb	$4, %al
	jne	.L1423
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L1425
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	jne	.L1425
.L1423:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	cmpb	$4, %al
	jne	.L1421
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L1425
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %edx
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	je	.L1421
.L1425:
	.loc 1 3611 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1421:
	.loc 1 3612 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1429
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L1431
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	testb	%al, %al
	je	.L1433
.L1431:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L1429
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	testb	%al, %al
	jne	.L1429
.L1433:
	.loc 1 3619 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1429:
	.loc 1 3620 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L1435
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L1435
	movl	8(%ebp), %eax
	movl	88(%eax), %edx
	movl	12(%ebp), %eax
	movl	88(%eax), %eax
	cmpl	%eax, %edx
	jne	.L1435
	.loc 1 3624 0
	movl	$1, -188(%ebp)
	jmp	.L1280
.L1435:
.LBB28:
	.loc 1 3627 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	redeclaration_error_message
	movl	%eax, -52(%ebp)
	.loc 1 3628 0
	cmpl	$0, -52(%ebp)
	je	.L1439
	.loc 1 3630 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3631 0
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L1441
	.loc 1 3632 0
	movl	12(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L1443
	call	namespace_bindings_p@PLT
	testl	%eax, %eax
	je	.L1443
	leal	.LC54@GOTOFF(%ebx), %eax
	movl	%eax, -148(%ebp)
	jmp	.L1446
.L1443:
	leal	.LC55@GOTOFF(%ebx), %edx
	movl	%edx, -148(%ebp)
.L1446:
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-148(%ebp), %ecx
	movl	%ecx, (%esp)
	call	cp_error_at@PLT
.L1441:
	.loc 1 3636 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1439:
	.loc 1 3638 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1447
	movl	12(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L1447
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L1447
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L1447
	.loc 1 3644 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC56@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
	.loc 1 3645 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC57@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
	.loc 1 3638 0
	jmp	.L1452
.L1447:
	.loc 1 3647 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1452
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1454
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -144(%ebp)
	jmp	.L1456
.L1454:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -144(%ebp)
.L1456:
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1457
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -140(%ebp)
	jmp	.L1459
.L1457:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -140(%ebp)
.L1459:
	movl	-140(%ebp), %eax
	cmpl	%eax, -144(%ebp)
	je	.L1452
	.loc 1 3653 0
	call	current_lang_depth@PLT
	testl	%eax, %eax
	jne	.L1461
	.loc 1 3654 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	%eax, -136(%ebp)
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1463
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movb	%al, -129(%ebp)
	jmp	.L1465
.L1463:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	-129(%ebp)
.L1465:
	movzbl	-129(%ebp), %edx
	movl	-136(%ebp), %ecx
	movb	%dl, 4(%ecx)
	jmp	.L1452
.L1461:
	.loc 1 3657 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1466
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -128(%ebp)
	jmp	.L1468
.L1466:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -128(%ebp)
.L1468:
	movl	-128(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC58@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 3659 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1469
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -124(%ebp)
	jmp	.L1471
.L1469:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -124(%ebp)
.L1471:
	movl	-124(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	.LC59@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L1452:
	.loc 1 3664 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1472
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	testb	%al, %al
	je	.L1472
	jmp	.L1356
.L1472:
	.loc 1 3666 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1356
.LBB29:
	.loc 1 3668 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -48(%ebp)
	.loc 1 3669 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 3670 0
	movl	$1, -40(%ebp)
	.loc 1 3672 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L1478
	.loc 1 3673 0
	movl	-48(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	movl	-44(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 3675 0
	jmp	.L1478
.L1479:
	.loc 1 3677 0
	movl	-48(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L1480
	movl	-44(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L1480
	.loc 1 3679 0
	movl	-44(%ebp), %eax
	movl	16(%eax), %edx
	movl	-48(%ebp), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	simple_cst_equal@PLT
	cmpl	$1, %eax
	jne	.L1483
	.loc 1 3682 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC60@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 3684 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC61@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
	jmp	.L1480
.L1483:
	.loc 1 3689 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC60@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3691 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC61@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L1480:
	.loc 1 3676 0
	movl	-48(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	movl	-44(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
	addl	$1, -40(%ebp)
.L1478:
	.loc 1 3675 0
	cmpl	$0, -48(%ebp)
	je	.L1485
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-48(%ebp), %eax
	jne	.L1479
.L1485:
	.loc 1 3696 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1356
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L1356
	movl	12(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L1356
	movl	warn_inline@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1356
	.loc 1 3700 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC62@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 3702 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC63@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
.L1356:
.LBE29:
.LBE28:
	.loc 1 3715 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1491
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1493
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L1495
.L1493:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1491
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L1491
.L1495:
	.loc 1 3718 0
	movl	$0, -188(%ebp)
	jmp	.L1280
.L1491:
	.loc 1 3722 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	warn_extern_redeclared_static
	.loc 1 3725 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1497
	.loc 1 3731 0
	movl	12(%ebp), %eax
	movl	124(%eax), %eax
	testl	%eax, %eax
	je	.L1499
	.loc 1 3732 0
	movl	12(%ebp), %eax
	movl	124(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 124(%eax)
.L1499:
	.loc 1 3733 0
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1501
	.loc 1 3734 0
	movl	12(%ebp), %eax
	movl	56(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 56(%eax)
.L1501:
	.loc 1 3735 0
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	%al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	%al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	35(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 35(%ecx)
	.loc 1 3736 0
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	35(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 35(%ecx)
	.loc 1 3737 0
	movl	8(%ebp), %eax
	movl	136(%eax), %ecx
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$5, %edx
	movzbl	5(%ecx), %eax
	andl	$-33, %eax
	orl	%edx, %eax
	movb	%al, 5(%ecx)
	.loc 1 3738 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$5, %edx
	movzbl	33(%ecx), %eax
	andl	$-33, %eax
	orl	%edx, %eax
	movb	%al, 33(%ecx)
	.loc 1 3739 0
	movl	8(%ebp), %eax
	movl	136(%eax), %ecx
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$5, %edx
	movzbl	6(%ecx), %eax
	andl	$-33, %eax
	orl	%edx, %eax
	movb	%al, 6(%ecx)
	.loc 1 3740 0
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	shrb	$3, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	38(%eax), %eax
	shrb	$3, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	38(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 38(%ecx)
	.loc 1 3741 0
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L1503
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L1503
	.loc 1 3742 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	%eax, -120(%ebp)
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L1506
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	40(%eax), %eax
	movl	%eax, -116(%ebp)
	jmp	.L1508
.L1506:
	movl	$0, -116(%ebp)
.L1508:
	movl	-116(%ebp), %eax
	movl	-120(%ebp), %ecx
	movl	%eax, 40(%ecx)
.L1503:
	.loc 1 3744 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -56(%ebp)
	.loc 1 3749 0
	movl	warn_redundant_decls@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1497
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1497
	cmpl	$0, -56(%ebp)
	je	.L1511
	movl	12(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L1497
.L1511:
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1513
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1497
.L1513:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1497
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1497
	.loc 1 3756 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC64@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 3757 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC33@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
.L1497:
	.loc 1 3762 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1517
.LBB30:
	.loc 1 3764 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -84(%ebp)
	.loc 1 3765 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -80(%ebp)
	.loc 1 3767 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-84(%ebp), %eax
	je	.L1519
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-80(%ebp), %eax
	je	.L1519
	movl	-84(%ebp), %edx
	movl	92(%edx), %eax
	testl	%eax, %eax
	je	.L1519
	movl	-80(%ebp), %ecx
	movl	92(%ecx), %eax
	testl	%eax, %eax
	je	.L1519
	.loc 1 3769 0
	movl	-84(%ebp), %edx
	movl	92(%edx), %eax
	movl	-80(%ebp), %ecx
	movl	92(%ecx), %edx
	movl	48(%edx), %edx
	movl	%edx, 48(%eax)
.L1519:
	.loc 1 3772 0
	movl	12(%ebp), %eax
	movl	64(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 64(%eax)
.L1517:
.LBE30:
	.loc 1 3777 0
	movl	targetm@GOT(%ebx), %eax
	movl	176(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	*%edx
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 100(%eax)
	.loc 1 3780 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1524
	.loc 1 3782 0
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 3783 0
	movl	8(%ebp), %eax
	movl	28(%eax), %edx
	movl	12(%ebp), %eax
	movl	28(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, 28(%eax)
	.loc 1 3789 0
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L1526
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L1526
	.loc 1 3792 0
	movl	12(%ebp), %eax
	movl	64(%eax), %ecx
	movl	8(%ebp), %eax
	movl	20(%eax), %edx
	movl	16(%eax), %eax
	movl	%eax, 16(%ecx)
	movl	%edx, 20(%ecx)
	movl	16(%ecx), %eax
	movl	20(%ecx), %edx
	movl	12(%ebp), %ecx
	movl	%eax, 16(%ecx)
	movl	%edx, 20(%ecx)
.L1526:
	.loc 1 3797 0
	movl	$1, -188(%ebp)
	jmp	.L1280
.L1524:
	.loc 1 3800 0
	cmpl	$0, -60(%ebp)
	je	.L1529
.LBB31:
	.loc 1 3803 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 3807 0
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	merge_types@PLT
	movl	%eax, -32(%ebp)
	.loc 1 3810 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1531
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	cmpl	-32(%ebp), %eax
	jne	.L1531
	.loc 1 3812 0
	movl	-36(%ebp), %eax
	movl	%eax, -32(%ebp)
.L1531:
	.loc 1 3814 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1534
	.loc 1 3816 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	$7, %al
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	$7, %al
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	sall	$7, %ecx
	movzbl	37(%edx), %eax
	andl	$127, %eax
	orl	%ecx, %eax
	movb	%al, 37(%edx)
	.loc 1 3817 0
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	shrb	%al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	11(%eax), %eax
	shrb	%al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	11(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 11(%ecx)
	jmp	.L1536
.L1534:
	.loc 1 3822 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1536
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %edx
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %eax
	cmpl	%eax, %edx
	je	.L1536
	.loc 1 3826 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 3828 0
	movl	-36(%ebp), %eax
	movl	76(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 3831 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L1539
	movl	12(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L1536
.L1539:
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L1536
	movl	flag_exceptions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1536
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %eax
	movl	$1, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comp_except_specs@PLT
	testl	%eax, %eax
	jne	.L1536
	.loc 1 3837 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC65@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 3839 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC66@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L1536:
	.loc 1 3842 0
	movl	12(%ebp), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 4(%edx)
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 3845 0
	movl	$0, 8(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L1544
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L1544
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L1547
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L1544
.L1547:
	.loc 1 3848 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
.L1544:
	.loc 1 3850 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L1549
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L1549
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$37, %al
	je	.L1549
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	je	.L1549
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1554
.L1549:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L1555
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L1554
.L1555:
	.loc 1 3856 0
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_decl@PLT
.L1554:
	.loc 1 3859 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L1557
	.loc 1 3860 0
	movl	12(%ebp), %eax
	movzbl	9(%eax), %edx
	orl	$16, %edx
	movb	%dl, 9(%eax)
.L1557:
	.loc 1 3861 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1559
	.loc 1 3862 0
	movl	12(%ebp), %eax
	movzbl	9(%eax), %edx
	orl	$8, %edx
	movb	%dl, 9(%eax)
.L1559:
	.loc 1 3865 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L1561
	movl	12(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L1561
	.loc 1 3868 0
	movl	12(%ebp), %eax
	movl	68(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 68(%eax)
	.loc 1 3869 0
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	movl	16(%eax), %eax
	movl	8(%ebp), %ecx
	movl	%eax, 16(%ecx)
	movl	%edx, 20(%ecx)
	.loc 1 3870 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L1561
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L1561
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	je	.L1561
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-56, %al
	je	.L1561
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1561
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1561
	.loc 1 3873 0
	movl	12(%ebp), %eax
	movl	116(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 116(%eax)
.L1561:
	.loc 1 3880 0
	movl	8(%ebp), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	jne	.L1570
	.loc 1 3881 0
	movl	12(%ebp), %eax
	movl	96(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 96(%eax)
.L1570:
	.loc 1 3883 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1572
	.loc 1 3885 0
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$6, %edx
	movzbl	35(%ecx), %eax
	andl	$-65, %eax
	orl	%edx, %eax
	movb	%al, 35(%ecx)
	.loc 1 3887 0
	movl	8(%ebp), %eax
	movzbl	36(%eax), %eax
	shrb	%al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	36(%eax), %eax
	shrb	%al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	36(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 36(%ecx)
	.loc 1 3890 0
	movl	12(%ebp), %eax
	movl	104(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 104(%eax)
	jmp	.L1578
.L1572:
	.loc 1 3892 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1578
	movl	12(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	jne	.L1576
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	jne	.L1578
.L1576:
	.loc 1 3899 0
	movl	12(%ebp), %eax
	movl	104(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 104(%eax)
	jmp	.L1578
.L1529:
.LBE31:
.LBB32:
	.loc 1 3907 0
	movl	static_aggregates@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	value_member@PLT
	movl	%eax, -28(%ebp)
	.loc 1 3908 0
	cmpl	$0, -28(%ebp)
	je	.L1579
	.loc 1 3909 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, 20(%eax)
.L1579:
	.loc 1 3911 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 3912 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	shrb	$4, %al
	andl	$1, %eax
	movl	12(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$4, %edx
	movzbl	9(%ecx), %eax
	andl	$-17, %eax
	orl	%edx, %eax
	movb	%al, 9(%ecx)
	.loc 1 3913 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	shrb	$3, %al
	andl	$1, %eax
	movl	12(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	9(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 9(%ecx)
	.loc 1 3914 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$1, %eax
	movl	12(%ebp), %edx
	movl	%eax, %ecx
	andl	$1, %ecx
	movzbl	9(%edx), %eax
	andl	$-2, %eax
	orl	%ecx, %eax
	movb	%al, 9(%edx)
.L1578:
.LBE32:
	.loc 1 3918 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	merge_weak@PLT
	.loc 1 3920 0
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	andl	$1, %ecx
	movzbl	35(%edx), %eax
	andl	$-2, %eax
	orl	%ecx, %eax
	movb	%al, 35(%edx)
	.loc 1 3921 0
	movl	8(%ebp), %eax
	movzbl	34(%eax), %eax
	shrb	$7, %al
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	34(%eax), %eax
	shrb	$7, %al
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	sall	$7, %ecx
	movzbl	34(%edx), %eax
	andl	$127, %eax
	orl	%ecx, %eax
	movb	%al, 34(%edx)
	.loc 1 3922 0
	movl	12(%ebp), %eax
	movzbl	10(%eax), %eax
	shrb	$3, %al
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	10(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 3923 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	10(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	10(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	movl	12(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	10(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 3924 0
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L1581
	.loc 1 3925 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %edx
	andl	$-2, %edx
	movb	%dl, 33(%eax)
.L1581:
	.loc 1 3927 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1583
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1583
	.loc 1 3929 0
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	38(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	38(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 38(%ecx)
	.loc 1 3930 0
	movl	8(%ebp), %eax
	movl	136(%eax), %ecx
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	$4, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	$4, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$4, %edx
	movzbl	6(%ecx), %eax
	andl	$-17, %eax
	orl	%edx, %eax
	movb	%al, 6(%ecx)
	.loc 1 3931 0
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	$7, %al
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	shrb	$7, %al
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	sall	$7, %ecx
	movzbl	35(%edx), %eax
	andl	$127, %eax
	orl	%ecx, %eax
	movb	%al, 35(%edx)
	.loc 1 3932 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$6, %edx
	movzbl	37(%ecx), %eax
	andl	$-65, %eax
	orl	%edx, %eax
	movb	%al, 37(%ecx)
	.loc 1 3936 0
	movl	12(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$1, %eax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	andl	$1, %ecx
	movzbl	38(%edx), %eax
	andl	$-2, %eax
	orl	%ecx, %eax
	movb	%al, 38(%edx)
	.loc 1 3937 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, 12(%edx)
	.loc 1 3939 0
	movl	8(%ebp), %eax
	movl	136(%eax), %ecx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	$3, %al
	andl	$1, %eax
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	6(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 6(%ecx)
	.loc 1 3940 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%edx)
	.loc 1 3941 0
	movl	8(%ebp), %eax
	movl	136(%eax), %ecx
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$6, %edx
	movzbl	6(%ecx), %eax
	andl	$-65, %eax
	orl	%edx, %eax
	movb	%al, 6(%ecx)
	.loc 1 3943 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	shrb	$3, %al
	andl	$1, %eax
	movzbl	%al, %eax
	movl	%eax, -64(%ebp)
	.loc 1 3946 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1586
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1583
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1583
.L1586:
	.loc 1 3949 0
	movl	8(%ebp), %eax
	movl	136(%eax), %esi
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	16(%eax), %edx
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	%eax, 16(%esi)
	.loc 1 3954 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1583
	.loc 1 3955 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, 20(%edx)
.L1583:
	.loc 1 3959 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1590
	.loc 1 3961 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L1592
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L1592
	.loc 1 3967 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	cmpb	$4, %al
	je	.L1595
	leal	__FUNCTION__.20810@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$3968, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1595:
	.loc 1 3970 0
	movl	12(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1597
	.loc 1 3979 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC67@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L1597:
	.loc 1 3982 0
	movl	12(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 6(%edx)
	.loc 1 3961 0
	jmp	.L1599
.L1592:
	.loc 1 3989 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	jne	.L1600
	.loc 1 3990 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	48(%eax), %eax
	movl	%eax, 48(%edx)
.L1600:
	.loc 1 3992 0
	movl	8(%ebp), %eax
	movl	136(%eax), %ecx
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	%eax, %edx
	andl	$1, %edx
	movzbl	(%ecx), %eax
	andl	$-2, %eax
	orl	%edx, %eax
	movb	%al, (%ecx)
	.loc 1 3996 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1602
	movl	12(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L1602
	.loc 1 3997 0
	movl	12(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$8, %edx
	movb	%dl, 33(%eax)
.L1602:
	.loc 1 3998 0
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	shrb	$3, %al
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	33(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 33(%ecx)
	.loc 1 4000 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L1605
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L1607
.L1605:
	movl	$1, -112(%ebp)
	jmp	.L1608
.L1607:
	movl	$0, -112(%ebp)
.L1608:
	movzbl	-112(%ebp), %eax
	andl	$1, %eax
	movl	12(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	37(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 37(%ecx)
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	37(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 37(%ecx)
.L1599:
	.loc 1 4005 0
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	shrb	$7, %al
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	sall	$7, %ecx
	movzbl	33(%edx), %eax
	andl	$127, %eax
	orl	%ecx, %eax
	movb	%al, 33(%edx)
	.loc 1 4007 0
	cmpl	$0, -60(%ebp)
	jne	.L1609
	.loc 1 4009 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	%eax, -108(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1611
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movb	%al, -101(%ebp)
	jmp	.L1613
.L1611:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	-101(%ebp)
.L1613:
	movzbl	-101(%ebp), %eax
	movl	-108(%ebp), %edx
	movb	%al, 4(%edx)
	.loc 1 4010 0
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L1614
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%edx, 92(%eax)
.L1614:
	.loc 1 4011 0
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L1616
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -100(%ebp)
	jmp	.L1618
.L1616:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -100(%ebp)
.L1618:
	movl	12(%ebp), %eax
	movl	-100(%ebp), %ecx
	movl	%ecx, 104(%eax)
.L1609:
	.loc 1 4013 0
	cmpl	$0, -60(%ebp)
	je	.L1619
	cmpl	$0, -56(%ebp)
	je	.L1621
.L1619:
	.loc 1 4018 0
	movl	8(%ebp), %eax
	movl	60(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 60(%eax)
	.loc 1 4019 0
	movl	8(%ebp), %eax
	movl	64(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 64(%eax)
.L1621:
	.loc 1 4021 0
	cmpl	$0, -56(%ebp)
	je	.L1622
	.loc 1 4024 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	%eax, -96(%ebp)
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1624
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	movb	%al, -89(%ebp)
	jmp	.L1626
.L1624:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	setne	-89(%ebp)
.L1626:
	movzbl	-89(%ebp), %eax
	movl	-96(%ebp), %edx
	movb	%al, 4(%edx)
	jmp	.L1636
.L1622:
	.loc 1 4025 0
	cmpl	$0, -60(%ebp)
	je	.L1636
	.loc 1 4029 0
	movl	12(%ebp), %eax
	movzbl	36(%eax), %eax
	andl	$12, %eax
	testb	%al, %al
	je	.L1629
	.loc 1 4031 0
	movl	12(%ebp), %eax
	movzbl	36(%eax), %eax
	shrb	$2, %al
	andl	$3, %eax
	movl	8(%ebp), %ecx
	andl	$3, %eax
	leal	0(,%eax,4), %edx
	movzbl	36(%ecx), %eax
	andl	$-13, %eax
	orl	%edx, %eax
	movb	%al, 36(%ecx)
	.loc 1 4032 0
	movl	12(%ebp), %eax
	movl	40(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 40(%eax)
	.loc 1 4035 0
	movl	12(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L1631
	movl	12(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -88(%ebp)
	jmp	.L1633
.L1631:
	movl	$0, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	12(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -88(%ebp)
.L1633:
	movl	8(%ebp), %eax
	movl	-88(%ebp), %ecx
	movl	%ecx, 104(%eax)
	jmp	.L1634
.L1629:
	.loc 1 4038 0
	movl	12(%ebp), %eax
	movl	44(%eax), %edx
	movl	40(%eax), %eax
	movl	8(%ebp), %ecx
	movl	%eax, 40(%ecx)
	movl	%edx, 44(%ecx)
.L1634:
	.loc 1 4040 0
	movl	12(%ebp), %eax
	movl	64(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 64(%eax)
	.loc 1 4042 0
	movl	12(%ebp), %eax
	movl	60(%eax), %eax
	testl	%eax, %eax
	je	.L1636
	.loc 1 4043 0
	movl	12(%ebp), %eax
	movl	60(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 60(%eax)
	jmp	.L1636
.L1590:
	.loc 1 4046 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L1636
	.loc 1 4047 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, 8(%edx)
.L1636:
	.loc 1 4050 0
	movl	12(%ebp), %eax
	movzbl	9(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	9(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 9(%ecx)
	.loc 1 4051 0
	movl	12(%ebp), %eax
	movzbl	9(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$6, %edx
	movzbl	9(%ecx), %eax
	andl	$-65, %eax
	orl	%edx, %eax
	movb	%al, 9(%ecx)
	.loc 1 4052 0
	movl	12(%ebp), %eax
	movzbl	34(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$6, %edx
	movzbl	34(%ecx), %eax
	andl	$-65, %eax
	orl	%edx, %eax
	movb	%al, 34(%ecx)
	.loc 1 4053 0
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L1638
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 92(%eax)
.L1638:
	.loc 1 4055 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1640
.LBB33:
	.loc 1 4059 0
	movl	$160, -24(%ebp)
	.loc 1 4061 0
	movl	-24(%ebp), %eax
	leal	-16(%eax), %ecx
	movl	8(%ebp), %eax
	leal	16(%eax), %edx
	movl	12(%ebp), %eax
	addl	$16, %eax
	movl	%eax, %edi
	movl	%edx, %esi
	cld
	rep
	movsb
	.loc 1 4065 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1648
.LBB34:
	.loc 1 4089 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 4090 0
	movl	-20(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 4092 0
	jmp	.L1644
.L1645:
	.loc 1 4093 0
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L1646
	.loc 1 4094 0
	movl	-16(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 20(%edx)
.L1646:
	.loc 1 4092 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L1644:
	cmpl	$0, -16(%ebp)
	jne	.L1645
	jmp	.L1648
.L1640:
.LBE34:
.LBE33:
	.loc 1 4099 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_length@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	sall	$2, %eax
	leal	144(%eax), %ecx
	movl	8(%ebp), %eax
	leal	16(%eax), %edx
	movl	12(%ebp), %eax
	addl	$16, %eax
	movl	%eax, %edi
	movl	%edx, %esi
	cld
	rep
	movsb
.L1648:
	.loc 1 4105 0
	movl	12(%ebp), %edx
	movl	-68(%ebp), %eax
	movl	%eax, 24(%edx)
	.loc 1 4106 0
	cmpl	$0, -64(%ebp)
	je	.L1649
	.loc 1 4107 0
	movl	12(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	5(%edx), %eax
	orl	$8, %eax
	movb	%al, 5(%edx)
.L1649:
	.loc 1 4111 0
	movl	8(%ebp), %eax
	movl	100(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, 100(%eax)
	.loc 1 4116 0
	movl	12(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L1651
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1653
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1651
	movl	12(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L1651
.L1653:
	.loc 1 4120 0
	movl	$0, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
.L1651:
	.loc 1 4122 0
	movl	$1, -188(%ebp)
.L1280:
	movl	-188(%ebp), %eax
	.loc 1 4123 0
	addl	$188, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE107:
	.size	duplicate_decls, .-duplicate_decls
	.section	.rodata
	.type	__FUNCTION__.21952, @object
	.size	__FUNCTION__.21952, 9
__FUNCTION__.21952:
	.string	"pushdecl"
	.align 4
.LC68:
	.string	"`%#D' used prior to declaration"
	.align 4
.LC69:
	.string	"redeclaration of `wchar_t' as `%T'"
.LC70:
	.string	"invalid redeclaration of `%D'"
.LC71:
	.string	"as `%D'"
	.align 4
.LC72:
	.string	"type mismatch with previous external decl"
	.align 4
.LC73:
	.string	"previous external decl of `%#D'"
	.align 4
.LC74:
	.string	"`%D' was previously implicitly declared to return `int'"
	.align 4
.LC75:
	.string	"extern declaration of `%#D' doesn't match"
.LC76:
	.string	"global declaration `%#D'"
	.align 4
.LC77:
	.string	"declaration of `%#D' shadows a parameter"
.LC78:
	.string	"a parameter"
	.align 4
.LC79:
	.string	"declaration of `%s' shadows a member of `this'"
.LC80:
	.string	"a previous local"
.LC81:
	.string	"a global declaration"
	.text
.globl pushdecl
	.type	pushdecl, @function
pushdecl:
.LFB108:
	.loc 1 4136 0
	pushl	%ebp
.LCFI337:
	movl	%esp, %ebp
.LCFI338:
	pushl	%ebx
.LCFI339:
	subl	$164, %esp
.LCFI340:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4141 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4145 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1658
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L1660
.L1658:
	movl	$1, -148(%ebp)
	jmp	.L1661
.L1660:
	movl	$0, -148(%ebp)
.L1661:
	cmpl	$0, -148(%ebp)
	jne	.L1662
	leal	__FUNCTION__.21952@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$4146, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1662:
	.loc 1 4148 0
	movl	$1, -44(%ebp)
	.loc 1 4150 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1664
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L1670
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L1670
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1670
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1664
	jmp	.L1670
.L1664:
	.loc 1 4156 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1671
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	je	.L1671
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1674
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L1671
.L1674:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1676
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L1671
.L1676:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L1671
	.loc 1 4165 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 56(%eax)
.L1671:
	.loc 1 4170 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1670
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1680
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L1670
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L1670
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1670
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L1670
.L1680:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1685
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -144(%ebp)
	jmp	.L1687
.L1685:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -144(%ebp)
.L1687:
	movl	-144(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$39, %al
	jne	.L1670
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1670
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	je	.L1670
	.loc 1 4174 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %edx
	orl	$32, %edx
	movb	%dl, 37(%eax)
.L1670:
	.loc 1 4177 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 4178 0
	cmpl	$0, -56(%ebp)
	je	.L1691
.LBB35:
	.loc 1 4180 0
	movl	$0, -40(%ebp)
	.loc 1 4182 0
	movl	-56(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-53, %al
	jne	.L1693
	.loc 1 4183 0
	movl	-56(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -56(%ebp)
.L1693:
	.loc 1 4187 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1695
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1697
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L1695
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L1695
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1695
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L1695
.L1697:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1702
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -140(%ebp)
	jmp	.L1704
.L1702:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -140(%ebp)
.L1704:
	movl	-140(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$39, %al
	jne	.L1695
	call	namespace_bindings_p@PLT
	testl	%eax, %eax
	je	.L1695
	.loc 1 4189 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -60(%ebp)
	.loc 1 4187 0
	jmp	.L1707
.L1695:
	.loc 1 4191 0
	movl	-56(%ebp), %edx
	movl	%edx, (%esp)
	call	lookup_name_current_level@PLT
	movl	%eax, -60(%ebp)
.L1707:
	.loc 1 4198 0
	cmpl	$0, -60(%ebp)
	jne	.L1708
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1708
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	je	.L1708
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1712
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1708
.L1712:
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1708
	.loc 1 4203 0
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L1715
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -136(%ebp)
	jmp	.L1717
.L1715:
	movl	$0, -136(%ebp)
.L1717:
	movl	-136(%ebp), %eax
	movl	%eax, -60(%ebp)
	.loc 1 4205 0
	cmpl	$0, -60(%ebp)
	jne	.L1718
	.loc 1 4206 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -60(%ebp)
.L1718:
	.loc 1 4209 0
	cmpl	$0, -60(%ebp)
	je	.L1720
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L1720
	movl	-60(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L1720
	movl	-60(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L1720
	.loc 1 4210 0
	movl	$0, -60(%ebp)
.L1720:
	.loc 1 4211 0
	cmpl	$0, -60(%ebp)
	je	.L1708
	.loc 1 4212 0
	movl	$1, -40(%ebp)
.L1708:
	.loc 1 4220 0
	cmpl	$0, -60(%ebp)
	je	.L1726
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-52, %al
	jne	.L1726
.LBB36:
	.loc 1 4224 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1729
	.loc 1 4225 0
	movl	-60(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L1731
.L1732:
	.loc 1 4227 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L1733
	movl	-36(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -132(%ebp)
	jmp	.L1735
.L1733:
	movl	-36(%ebp), %edx
	movl	%edx, -132(%ebp)
.L1735:
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-132(%ebp), %eax
	movl	%eax, (%esp)
	call	decls_match@PLT
	testl	%eax, %eax
	jne	.L1741
	.loc 1 4225 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L1738
	movl	-36(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -128(%ebp)
	jmp	.L1740
.L1738:
	movl	$0, -128(%ebp)
.L1740:
	movl	-128(%ebp), %edx
	movl	%edx, -36(%ebp)
.L1731:
	cmpl	$0, -36(%ebp)
	jne	.L1732
	jmp	.L1741
.L1729:
	.loc 1 4232 0
	movl	-60(%ebp), %eax
	movl	%eax, -36(%ebp)
.L1741:
	.loc 1 4234 0
	cmpl	$0, -36(%ebp)
	je	.L1742
	.loc 1 4235 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L1744
	movl	-36(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -124(%ebp)
	jmp	.L1746
.L1744:
	movl	-36(%ebp), %edx
	movl	%edx, -124(%ebp)
.L1746:
	movl	-124(%ebp), %eax
	movl	%eax, -60(%ebp)
	jmp	.L1726
.L1742:
	.loc 1 4237 0
	movl	$0, -60(%ebp)
.L1726:
.LBE36:
	.loc 1 4240 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-60(%ebp), %eax
	jne	.L1747
	.loc 1 4243 0
	movl	$0, -60(%ebp)
	.loc 1 4244 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC68@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	jmp	.L1749
.L1747:
	.loc 1 4246 0
	cmpl	$0, -60(%ebp)
	je	.L1749
	.loc 1 4248 0
	cmpl	$0, -40(%ebp)
	je	.L1751
	.loc 1 4250 0
	movl	-60(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decls_match@PLT
	testl	%eax, %eax
	je	.L1749
	.loc 1 4255 0
	movl	-60(%ebp), %edx
	movzbl	10(%edx), %eax
	shrb	$3, %al
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	10(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	jmp	.L1749
.L1751:
	.loc 1 4257 0
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$36, %al
	jne	.L1755
	.loc 1 4259 0
	movl	-60(%ebp), %edx
	movl	56(%edx), %eax
	testl	%eax, %eax
	jne	.L1757
	.loc 1 4262 0
	leal	__FUNCTION__.21952@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$4262, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L1757:
	.loc 1 4265 0
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	testl	%eax, %eax
	je	.L1749
	.loc 1 4266 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-60(%ebp), %edx
	movl	%edx, -120(%ebp)
	jmp	.L1761
.L1755:
	.loc 1 4268 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1762
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1764
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1762
.L1764:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1766
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	je	.L1768
	jmp	.L1762
.L1766:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1768
.L1762:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1769
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1769
.L1768:
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	is_overloaded_fn@PLT
	testl	%eax, %eax
	je	.L1769
	jmp	.L1749
.L1769:
	.loc 1 4272 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	32(%eax), %eax
	cmpl	-60(%ebp), %eax
	jne	.L1772
	.loc 1 4274 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1774
	movl	8(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L1774
	.loc 1 4275 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC69@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L1774:
	.loc 1 4279 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-60(%ebp), %edx
	movl	%edx, -120(%ebp)
	jmp	.L1761
.L1772:
	.loc 1 4281 0
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	movl	8(%ebp), %edx
	movzbl	8(%edx), %edx
	cmpb	%dl, %al
	je	.L1777
	.loc 1 4283 0
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	testl	%eax, %eax
	je	.L1749
	.loc 1 4284 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-60(%ebp), %edx
	movl	%edx, -120(%ebp)
	jmp	.L1761
.L1777:
	.loc 1 4286 0
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	testl	%eax, %eax
	je	.L1781
	.loc 1 4288 0
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$34, %al
	jne	.L1783
	.loc 1 4289 0
	movl	-60(%ebp), %edx
	movl	4(%edx), %eax
	movl	-56(%ebp), %edx
	movl	%eax, 4(%edx)
	jmp	.L1785
.L1783:
	.loc 1 4290 0
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$31, %al
	jne	.L1785
	.loc 1 4291 0
	movl	-60(%ebp), %eax
	movl	%eax, (%esp)
	call	check_default_args@PLT
.L1785:
	.loc 1 4293 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-60(%ebp), %edx
	movl	%edx, -120(%ebp)
	jmp	.L1761
.L1781:
	.loc 1 4295 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1749
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1788
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1749
.L1788:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L1790
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	sete	-113(%ebp)
	jmp	.L1792
.L1790:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	sete	-113(%ebp)
.L1792:
	cmpb	$0, -113(%ebp)
	je	.L1749
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L1749
	movl	8(%ebp), %eax
	movl	52(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	%eax, %edx
	jne	.L1749
	.loc 1 4303 0
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC70@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 4304 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC71@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 4307 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %edx
	movl	%edx, -120(%ebp)
	jmp	.L1761
.L1749:
	.loc 1 4311 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_template_shadow@PLT
	.loc 1 4315 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1796
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1798
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1796
.L1798:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	jne	.L1796
	.loc 1 4317 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	retrofit_lang_decl@PLT
	.loc 1 4318 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movb	$0, 4(%eax)
.L1796:
	.loc 1 4321 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1801
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1803
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1801
.L1803:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	je	.L1801
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1801
	.loc 1 4323 0
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_overloaded_decl@PLT
	movl	%eax, -60(%ebp)
	.loc 1 4324 0
	movl	-60(%ebp), %eax
	cmpl	8(%ebp), %eax
	je	.L1807
	.loc 1 4325 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-60(%ebp), %edx
	movl	%edx, -120(%ebp)
	jmp	.L1761
.L1807:
	.loc 1 4326 0
	call	namespace_bindings_p@PLT
	testl	%eax, %eax
	jne	.L1811
	.loc 1 4330 0
	movl	$0, -44(%ebp)
	.loc 1 4321 0
	jmp	.L1811
.L1801:
	.loc 1 4332 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1811
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1811
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1814
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L1811
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L1811
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1811
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L1811
.L1814:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1819
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -112(%ebp)
	jmp	.L1821
.L1819:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -112(%ebp)
.L1821:
	movl	-112(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$39, %al
	jne	.L1811
	.loc 1 4334 0
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_overloaded_decl@PLT
	movl	%eax, -60(%ebp)
	.loc 1 4335 0
	movl	-60(%ebp), %eax
	cmpl	8(%ebp), %eax
	jne	.L1823
	.loc 1 4336 0
	movl	-60(%ebp), %edx
	movl	56(%edx), %eax
	testl	%eax, %eax
	je	.L1825
	movl	-60(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -108(%ebp)
	jmp	.L1827
.L1825:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -108(%ebp)
.L1827:
	movl	-108(%ebp), %edx
	movl	136(%edx), %eax
	movl	8(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	add_decl_to_level
.L1823:
	.loc 1 4337 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-60(%ebp), %eax
	movl	%eax, -120(%ebp)
	jmp	.L1761
.L1811:
	.loc 1 4343 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1828
.LBB37:
	.loc 1 4345 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 4346 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L1830
	.loc 1 4348 0
	movl	-32(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L1834
	.loc 1 4349 0
	movl	-32(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 56(%edx)
	jmp	.L1834
.L1830:
	.loc 1 4351 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-32(%ebp), %eax
	je	.L1834
	movl	-32(%ebp), %eax
	movl	56(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L1834
	movl	-32(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1837
	movl	-32(%ebp), %eax
	movl	56(%eax), %edx
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	cmpl	%eax, %edx
	je	.L1834
.L1837:
	.loc 1 4358 0
	movl	8(%ebp), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 64(%edx)
	.loc 1 4359 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	build_type_copy@PLT
	movl	%eax, -32(%ebp)
	.loc 1 4360 0
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movl	(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 4361 0
	movl	-32(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 4362 0
	movl	8(%ebp), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 4(%edx)
.L1834:
	.loc 1 4365 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-32(%ebp), %eax
	je	.L1828
	movl	-32(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1828
	movl	-32(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L1828
	.loc 1 4368 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1842
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1842
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -104(%ebp)
	jmp	.L1845
.L1842:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -104(%ebp)
.L1845:
	movl	8(%ebp), %eax
	movl	52(%eax), %edx
	movl	-104(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	set_identifier_type_value_with_scope
.L1828:
.LBE37:
	.loc 1 4379 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1846
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L1846
.LBB38:
	.loc 1 4383 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -28(%ebp)
	.loc 1 4384 0
	cmpl	$0, -28(%ebp)
	je	.L1849
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L1849
	.loc 1 4385 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -28(%ebp)
.L1849:
	.loc 1 4387 0
	cmpl	$0, -28(%ebp)
	je	.L1846
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-28(%ebp), %eax
	je	.L1846
	movl	-28(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L1854
	movl	-28(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1846
.L1854:
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %edx
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	%al, %dl
	jne	.L1846
	movl	-28(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L1846
	.loc 1 4393 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC72@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 4394 0
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC73@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
.L1846:
.LBE38:
	.loc 1 4400 0
	call	namespace_bindings_p@PLT
	testl	%eax, %eax
	je	.L1858
	.loc 1 4406 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	testl	%eax, %eax
	jne	.L1860
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1860
	.loc 1 4407 0
	movl	-56(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movl	-56(%ebp), %edx
	movb	%al, 10(%edx)
.L1860:
	.loc 1 4410 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1863
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1863
	cmpl	$0, -60(%ebp)
	jne	.L1866
.L1863:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1867
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L1867
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	je	.L1867
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L1867
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L1866
.L1867:
	.loc 1 4417 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	set_namespace_binding@PLT
.L1866:
	.loc 1 4420 0
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1872
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L1872
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1875
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -100(%ebp)
	jmp	.L1877
.L1875:
	movl	$0, -100(%ebp)
.L1877:
	movl	-100(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1872
	.loc 1 4422 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %edx
	orl	$1, %edx
	movb	%dl, 10(%eax)
.L1872:
	.loc 1 4425 0
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1879
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L1879
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1882
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -96(%ebp)
	jmp	.L1884
.L1882:
	movl	$0, -96(%ebp)
.L1884:
	movl	-96(%ebp), %edx
	movzbl	9(%edx), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L1879
	.loc 1 4427 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %edx
	orl	$4, %edx
	movb	%dl, 9(%eax)
.L1879:
	.loc 1 4430 0
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1886
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L1886
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1889
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	cmpl	%eax, %edx
	je	.L1886
.L1889:
	.loc 1 4434 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC74@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L1886:
	.loc 1 4439 0
	cmpl	$0, 8(%ebp)
	je	.L1895
	cmpl	$0, -60(%ebp)
	je	.L1895
	movl	-60(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decls_match@PLT
	testl	%eax, %eax
	je	.L1895
	.loc 1 4440 0
	movl	-60(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	warn_extern_redeclared_static
	jmp	.L1895
.L1858:
.LBB39:
	.loc 1 4445 0
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L1896
	movl	-56(%ebp), %eax
	movl	44(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -92(%ebp)
	jmp	.L1898
.L1896:
	movl	$0, -92(%ebp)
.L1898:
	movl	-92(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 4446 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -20(%ebp)
	.loc 1 4448 0
	cmpl	$0, -44(%ebp)
	je	.L1899
	.loc 1 4450 0
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	push_local_binding@PLT
	.loc 1 4454 0
	movl	$0, -44(%ebp)
.L1899:
	.loc 1 4458 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L1901
	.loc 1 4459 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1903
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1903
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -88(%ebp)
	jmp	.L1906
.L1903:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -88(%ebp)
.L1906:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	-88(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value_with_scope
.L1901:
	.loc 1 4465 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L1907
	.loc 1 4466 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1909
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1909
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -84(%ebp)
	jmp	.L1912
.L1909:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -84(%ebp)
.L1912:
	movl	-84(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value_with_scope
.L1907:
	.loc 1 4469 0
	cmpl	$0, -24(%ebp)
	je	.L1913
.LBB40:
	.loc 1 4471 0
	movl	-24(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 4473 0
	jmp	.L1915
.L1916:
	.loc 1 4476 0
	movl	-24(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -24(%ebp)
.L1915:
	.loc 1 4473 0
	cmpl	$0, -24(%ebp)
	je	.L1917
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1917
	movl	-24(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L1916
.L1917:
	.loc 1 4478 0
	cmpl	$0, -24(%ebp)
	jne	.L1913
	.loc 1 4479 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	-16(%ebp), %eax
	movl	52(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -24(%ebp)
.L1913:
.LBE40:
	.loc 1 4484 0
	cmpl	$0, -24(%ebp)
	jne	.L1921
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1921
	cmpl	$0, -20(%ebp)
	je	.L1921
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1921
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1921
	.loc 1 4491 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	decls_match@PLT
	testl	%eax, %eax
	jne	.L1921
	.loc 1 4495 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC75@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 4496 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC76@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
.L1921:
	.loc 1 4502 0
	cmpl	$0, -24(%ebp)
	jne	.L1928
	cmpl	$0, -20(%ebp)
	jne	.L1928
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L1928
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L1928
	.loc 1 4506 0
	movl	-56(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movl	-56(%ebp), %edx
	movb	%al, 10(%edx)
.L1928:
	.loc 1 4509 0
	cmpl	$0, -24(%ebp)
	je	.L1933
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L1933
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L1936
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L1933
.L1936:
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	jne	.L1933
	movl	-24(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1933
.LBB41:
	.loc 1 4516 0
	movb	$0, -5(%ebp)
	.loc 1 4519 0
	movl	-24(%ebp), %eax
	movl	56(%eax), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L1940
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L1940
.LBB42:
	.loc 1 4524 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1943
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1943
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -80(%ebp)
	jmp	.L1946
.L1943:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -80(%ebp)
.L1946:
	movl	-80(%ebp), %edx
	movl	52(%edx), %eax
	movl	%eax, -12(%ebp)
	.loc 1 4527 0
	movl	-12(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$1, %al
	jne	.L1940
	.loc 1 4529 0
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC77@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 4531 0
	movb	$1, -5(%ebp)
.L1940:
.LBE42:
	.loc 1 4535 0
	movl	warn_shadow@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1895
	movzbl	-5(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L1895
	.loc 1 4536 0
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	.LC78@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	shadow_warning@PLT
	.loc 1 4509 0
	jmp	.L1895
.L1933:
.LBE41:
	.loc 1 4540 0
	movl	warn_shadow@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1895
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L1895
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L1895
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L1954
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L1895
.L1954:
	.loc 1 4546 0
	movl	-56(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L1956
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1956
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L1956
	movl	-56(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L1956
	.loc 1 4549 0
	movl	-56(%ebp), %edx
	movl	16(%edx), %eax
	movl	%eax, 4(%esp)
	leal	.LC79@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 4546 0
	jmp	.L1895
.L1956:
	.loc 1 4551 0
	cmpl	$0, -24(%ebp)
	je	.L1961
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1961
	.loc 1 4553 0
	movl	-24(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC80@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	shadow_warning@PLT
	.loc 1 4551 0
	jmp	.L1895
.L1961:
	.loc 1 4554 0
	cmpl	$0, -20(%ebp)
	je	.L1895
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1895
	.loc 1 4557 0
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-56(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	.LC81@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	shadow_warning@PLT
.L1895:
.LBE39:
	.loc 1 4561 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L1966
	.loc 1 4562 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_default_args@PLT
.L1966:
	.loc 1 4564 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L1691
	.loc 1 4565 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_register_incomplete_var@PLT
.L1691:
.LBE35:
	.loc 1 4568 0
	cmpl	$0, -44(%ebp)
	je	.L1969
	.loc 1 4569 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L1971
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L1973
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L1973
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L1973
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L1973
.L1971:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1977
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -72(%ebp)
	jmp	.L1979
.L1977:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -72(%ebp)
.L1979:
	movl	-72(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$39, %al
	jne	.L1973
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L1981
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -68(%ebp)
	jmp	.L1983
.L1981:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -68(%ebp)
.L1983:
	movl	-68(%ebp), %edx
	movl	136(%edx), %eax
	movl	8(%eax), %eax
	movl	%eax, -76(%ebp)
	jmp	.L1984
.L1973:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1985
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1985
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -64(%ebp)
	jmp	.L1988
.L1985:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -64(%ebp)
.L1988:
	movl	-64(%ebp), %eax
	movl	%eax, -76(%ebp)
.L1984:
	movl	-76(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	add_decl_to_level
.L1969:
	.loc 1 4574 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	%eax, -120(%ebp)
.L1761:
	movl	-120(%ebp), %eax
	.loc 1 4575 0
	addl	$164, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE108:
	.size	pushdecl, .-pushdecl
	.type	pushdecl_with_scope, @function
pushdecl_with_scope:
.LFB109:
	.loc 1 4584 0
	pushl	%ebp
.LCFI341:
	movl	%esp, %ebp
.LCFI342:
	pushl	%ebx
.LCFI343:
	subl	$36, %esp
.LCFI344:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4586 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 4588 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4590 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 4591 0
	movl	12(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L1991
	.loc 1 4593 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 4594 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 96(%edx)
	.loc 1 4595 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_class_level@PLT
	.loc 1 4596 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 96(%eax)
	jmp	.L1993
.L1991:
	.loc 1 4600 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L1994
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L1994
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L1997
.L1994:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L1997:
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 4602 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
	.loc 1 4606 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	movl	%eax, 8(%ebp)
	.loc 1 4608 0
	movl	-24(%ebp), %edx
	movl	%edx, (%esp)
	call	copy_to_current_binding_level
.L1993:
	.loc 1 4613 0
	movl	current_function_decl@GOT(%ebx), %edx
	movl	-8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 4614 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	.loc 1 4615 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE109:
	.size	pushdecl_with_scope, .-pushdecl_with_scope
.globl pushdecl_namespace_level
	.type	pushdecl_namespace_level, @function
pushdecl_namespace_level:
.LFB110:
	.loc 1 4623 0
	pushl	%ebp
.LCFI345:
	movl	%esp, %ebp
.LCFI346:
	pushl	%ebx
.LCFI347:
	subl	$36, %esp
.LCFI348:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4624 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2000
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2000
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L2003
.L2000:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L2003:
	movl	-32(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 4627 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4628 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_with_scope
	movl	%eax, -24(%ebp)
	.loc 1 4632 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2004
.LBB43:
	.loc 1 4634 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 4636 0
	movl	$0, -12(%ebp)
	.loc 1 4637 0
	jmp	.L2006
.L2007:
.LBB44:
	.loc 1 4639 0
	movl	-28(%ebp), %edx
	movl	36(%edx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 4640 0
	jmp	.L2008
.L2009:
	.loc 1 4641 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	cmpl	-20(%ebp), %eax
	jne	.L2010
	.loc 1 4643 0
	movl	-8(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -12(%ebp)
.L2010:
	.loc 1 4640 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L2008:
	cmpl	$0, -8(%ebp)
	jne	.L2009
.LBE44:
	.loc 1 4637 0
	movl	-28(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -28(%ebp)
.L2006:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	-28(%ebp), %eax
	jne	.L2007
	.loc 1 4649 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 4650 0
	cmpl	$0, -12(%ebp)
	jne	.L2014
	.loc 1 4654 0
	movl	-20(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 4(%edx)
	jmp	.L2004
.L2014:
	.loc 1 4658 0
	movl	-12(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, (%edx)
.L2004:
.LBE43:
	.loc 1 4661 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-24(%ebp), %eax
	.loc 1 4662 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE110:
	.size	pushdecl_namespace_level, .-pushdecl_namespace_level
	.type	pushdecl_top_level_1, @function
pushdecl_top_level_1:
.LFB111:
	.loc 1 4670 0
	pushl	%ebp
.LCFI349:
	movl	%esp, %ebp
.LCFI350:
	pushl	%ebx
.LCFI351:
	subl	$20, %esp
.LCFI352:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4671 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4672 0
	call	push_to_top_level@PLT
	.loc 1 4673 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_namespace_level@PLT
	movl	%eax, 8(%ebp)
	.loc 1 4674 0
	cmpl	$0, 12(%ebp)
	je	.L2018
	.loc 1 4675 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_finish_decl@PLT
.L2018:
	.loc 1 4676 0
	call	pop_from_top_level@PLT
	.loc 1 4677 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	.loc 1 4678 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE111:
	.size	pushdecl_top_level_1, .-pushdecl_top_level_1
.globl pushdecl_top_level
	.type	pushdecl_top_level, @function
pushdecl_top_level:
.LFB112:
	.loc 1 4684 0
	pushl	%ebp
.LCFI353:
	movl	%esp, %ebp
.LCFI354:
	subl	$8, %esp
.LCFI355:
	.loc 1 4685 0
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_top_level_1
	.loc 1 4686 0
	leave
	ret
.LFE112:
	.size	pushdecl_top_level, .-pushdecl_top_level
.globl pushdecl_top_level_and_finish
	.type	pushdecl_top_level_and_finish, @function
pushdecl_top_level_and_finish:
.LFB113:
	.loc 1 4694 0
	pushl	%ebp
.LCFI356:
	movl	%esp, %ebp
.LCFI357:
	subl	$8, %esp
.LCFI358:
	.loc 1 4695 0
	leal	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_top_level_1
	.loc 1 4696 0
	leave
	ret
.LFE113:
	.size	pushdecl_top_level_and_finish, .-pushdecl_top_level_and_finish
.globl pushdecl_class_level
	.type	pushdecl_class_level, @function
pushdecl_class_level:
.LFB114:
	.loc 1 4703 0
	pushl	%ebp
.LCFI359:
	movl	%esp, %ebp
.LCFI360:
	pushl	%ebx
.LCFI361:
	subl	$36, %esp
.LCFI362:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4705 0
	movb	$1, -5(%ebp)
	.loc 1 4707 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4709 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2026
	.loc 1 4710 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	get_first_fn@PLT
	movl	52(%eax), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2028
.L2026:
	.loc 1 4712 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -16(%ebp)
.L2028:
	.loc 1 4714 0
	cmpl	$0, -16(%ebp)
	je	.L2029
	.loc 1 4716 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	push_class_level_binding@PLT
	movb	%al, -5(%ebp)
	.loc 1 4717 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2033
	.loc 1 4718 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value@PLT
	jmp	.L2033
.L2029:
	.loc 1 4720 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L2034
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L2033
.L2034:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2036
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2036
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2036
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2036
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2033
.L2036:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	92(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L2033
.LBB45:
	.loc 1 4727 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L2042
.L2043:
	.loc 1 4729 0
	movl	-12(%ebp), %eax
	movl	20(%eax), %edx
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	push_srcloc@PLT
	.loc 1 4730 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_class_level@PLT
	xorl	$1, %eax
	testb	%al, %al
	je	.L2044
	.loc 1 4731 0
	movb	$0, -5(%ebp)
.L2044:
	.loc 1 4732 0
	call	pop_srcloc@PLT
	.loc 1 4727 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L2042:
	cmpl	$0, -12(%ebp)
	jne	.L2043
.L2033:
.LBE45:
	.loc 1 4735 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 4737 0
	movzbl	-5(%ebp), %eax
	.loc 1 4738 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE114:
	.size	pushdecl_class_level, .-pushdecl_class_level
.globl maybe_push_decl
	.type	maybe_push_decl, @function
maybe_push_decl:
.LFB115:
	.loc 1 4746 0
	pushl	%ebp
.LCFI363:
	movl	%esp, %ebp
.LCFI364:
	pushl	%ebx
.LCFI365:
	subl	$36, %esp
.LCFI366:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4747 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 4752 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L2048
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2050
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2050
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L2048
.L2050:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2053
	call	namespace_bindings_p@PLT
	testl	%eax, %eax
	je	.L2048
.L2053:
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$25, %al
	je	.L2048
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L2056
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	cmpb	$4, %al
	jne	.L2056
.L2048:
	.loc 1 4765 0
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2058
.L2056:
	.loc 1 4767 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	movl	%eax, -24(%ebp)
.L2058:
	movl	-24(%ebp), %eax
	.loc 1 4768 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE115:
	.size	maybe_push_decl, .-maybe_push_decl
.globl push_class_level_binding
	.type	push_class_level_binding, @function
push_class_level_binding:
.LFB116:
	.loc 1 4775 0
	pushl	%ebp
.LCFI367:
	movl	%esp, %ebp
.LCFI368:
	pushl	%esi
.LCFI369:
	pushl	%ebx
.LCFI370:
	subl	$32, %esp
.LCFI371:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4778 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4781 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	jne	.L2061
	.loc 1 4782 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$1, -28(%ebp)
	jmp	.L2063
.L2061:
	.loc 1 4786 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L2064
	.loc 1 4787 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	check_template_shadow@PLT
.L2064:
	.loc 1 4792 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 4793 0
	cmpl	$0, -20(%ebp)
	je	.L2066
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2068
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L2068
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	is_overloaded_fn@PLT
	testl	%eax, %eax
	jne	.L2071
.L2068:
	movl	-20(%ebp), %eax
	movzbl	16(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L2066
.L2071:
.LBB46:
	.loc 1 4806 0
	movl	-20(%ebp), %eax
	movzbl	16(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L2072
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L2072
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2072
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L2072
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2077
	movl	12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L2072
.L2077:
	.loc 1 4812 0
	movl	-20(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 4813 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 4814 0
	movl	-20(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 1 4815 0
	movl	-20(%ebp), %edx
	movzbl	16(%edx), %eax
	andl	$-3, %eax
	movb	%al, 16(%edx)
	.loc 1 4806 0
	jmp	.L2079
.L2072:
	.loc 1 4818 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
.L2079:
	.loc 1 4822 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	32(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 4823 0
	jmp	.L2080
.L2081:
	.loc 1 4825 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L2082
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L2082
	.loc 1 4828 0
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 4829 0
	movl	-20(%ebp), %edx
	movzbl	16(%edx), %eax
	andl	$-3, %eax
	movb	%al, 16(%edx)
	.loc 1 4830 0
	movl	-16(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 4831 0
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 48(%edx)
	.loc 1 4832 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$1, -28(%ebp)
	jmp	.L2063
.L2082:
	.loc 1 4824 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L2080:
	.loc 1 4823 0
	cmpl	$0, -16(%ebp)
	jne	.L2081
.L2066:
.LBE46:
	.loc 1 4838 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_class_binding@PLT
	testl	%eax, %eax
	je	.L2085
	.loc 1 4840 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %esi
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	32(%eax), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, 32(%esi)
	.loc 1 4845 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	32(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 4846 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$1, -28(%ebp)
	jmp	.L2063
.L2085:
	.loc 1 4849 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -28(%ebp)
.L2063:
	movl	-28(%ebp), %eax
	.loc 1 4850 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE116:
	.size	push_class_level_binding, .-push_class_level_binding
	.section	.rodata
	.type	__FUNCTION__.22998, @object
	.size	__FUNCTION__.22998, 16
__FUNCTION__.22998:
	.string	"push_using_decl"
	.text
.globl push_using_decl
	.type	push_using_decl, @function
push_using_decl:
.LFB117:
	.loc 1 4861 0
	pushl	%ebp
.LCFI372:
	movl	%esp, %ebp
.LCFI373:
	pushl	%ebx
.LCFI374:
	subl	$52, %esp
.LCFI375:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4864 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4866 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	je	.L2089
	leal	__FUNCTION__.22998@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$4866, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2089:
	.loc 1 4867 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L2091
	leal	__FUNCTION__.22998@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$4867, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2091:
	.loc 1 4868 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2093
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2093
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L2096
.L2093:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -40(%ebp)
.L2096:
	movl	-40(%ebp), %edx
	movl	24(%edx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2097
.L2098:
	.loc 1 4869 0
	movl	-8(%ebp), %eax
	movl	68(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L2099
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	cmpl	12(%ebp), %eax
	je	.L2101
.L2099:
	.loc 1 4868 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L2097:
	cmpl	$0, -8(%ebp)
	jne	.L2098
.L2101:
	.loc 1 4871 0
	cmpl	$0, -8(%ebp)
	je	.L2102
	.loc 1 4872 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	call	namespace_bindings_p@PLT
	testl	%eax, %eax
	je	.L2104
	movl	-8(%ebp), %eax
	movl	%eax, -32(%ebp)
	jmp	.L2106
.L2104:
	movl	$0, -32(%ebp)
.L2106:
	movl	-32(%ebp), %edx
	movl	%edx, -36(%ebp)
	jmp	.L2107
.L2102:
	.loc 1 4874 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$200, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 4875 0
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 4876 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2108
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2108
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2111
.L2108:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L2111:
	movl	-28(%ebp), %eax
	movl	24(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 4877 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2112
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2112
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2115
.L2112:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L2115:
	movl	-8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%eax, 24(%edx)
	.loc 1 4878 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-8(%ebp), %eax
	movl	%eax, -36(%ebp)
.L2107:
	movl	-36(%ebp), %eax
	.loc 1 4879 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE117:
	.size	push_using_decl, .-push_using_decl
.globl push_using_directive
	.type	push_using_directive, @function
push_using_directive:
.LFB118:
	.loc 1 4888 0
	pushl	%ebp
.LCFI376:
	movl	%esp, %ebp
.LCFI377:
	pushl	%ebx
.LCFI378:
	subl	$52, %esp
.LCFI379:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4889 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2118
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2118
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L2121
.L2118:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L2121:
	movl	-36(%ebp), %edx
	movl	28(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 1 4892 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4895 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	purpose_member@PLT
	testl	%eax, %eax
	je	.L2122
	.loc 1 4896 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -32(%ebp)
	jmp	.L2124
.L2122:
	.loc 1 4898 0
	call	current_decl_namespace@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	namespace_ancestor@PLT
	movl	%eax, -8(%ebp)
	.loc 1 4899 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2125
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2125
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2128
.L2125:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L2128:
	movl	-28(%ebp), %edx
	movl	28(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 1 4900 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, -16(%ebp)
	.loc 1 4901 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2129
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2129
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2132
.L2129:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L2132:
	movl	-16(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%eax, 28(%edx)
	.loc 1 4904 0
	movl	8(%ebp), %eax
	movl	124(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L2133
.L2134:
	.loc 1 4905 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	push_using_directive@PLT
	.loc 1 4904 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L2133:
	cmpl	$0, -12(%ebp)
	jne	.L2134
	.loc 1 4907 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-16(%ebp), %eax
	movl	%eax, -32(%ebp)
.L2124:
	movl	-32(%ebp), %eax
	.loc 1 4908 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE118:
	.size	push_using_directive, .-push_using_directive
	.section	.rodata
	.type	__FUNCTION__.23137, @object
	.size	__FUNCTION__.23137, 21
__FUNCTION__.23137:
	.string	"push_overloaded_decl"
	.align 4
.LC82:
	.string	"`%#D' hides constructor for `%#T'"
	.align 4
.LC83:
	.string	"`%#D' conflicts with previous using declaration `%#D'"
	.align 4
.LC84:
	.string	"previous non-function declaration `%#D'"
	.align 4
.LC85:
	.string	"conflicts with function declaration `%#D'"
	.text
.globl push_overloaded_decl
	.type	push_overloaded_decl, @function
push_overloaded_decl:
.LFB119:
	.loc 1 4933 0
	pushl	%ebp
.LCFI380:
	movl	%esp, %ebp
.LCFI381:
	pushl	%ebx
.LCFI382:
	subl	$68, %esp
.LCFI383:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 4934 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 4937 0
	call	namespace_bindings_p@PLT
	testl	%eax, %eax
	jne	.L2138
	movl	12(%ebp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L2140
.L2138:
	movl	$1, -52(%ebp)
	jmp	.L2141
.L2140:
	movl	$0, -52(%ebp)
.L2141:
	movl	-52(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 4939 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 4941 0
	cmpl	$0, -24(%ebp)
	je	.L2142
	.loc 1 4942 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -32(%ebp)
	jmp	.L2144
.L2142:
	.loc 1 4944 0
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name_current_level@PLT
	movl	%eax, -32(%ebp)
.L2144:
	.loc 1 4946 0
	cmpl	$0, -32(%ebp)
	je	.L2145
	.loc 1 4948 0
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2147
	movl	-32(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L2147
.LBB47:
	.loc 1 4950 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 4951 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2150
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2150
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2150
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2150
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2155
.L2150:
	movl	warn_shadow@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2155
	movl	8(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2157
	movl	-32(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L2155
.L2157:
	.loc 1 4954 0
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC82@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L2155:
	.loc 1 4955 0
	movl	$0, -32(%ebp)
	.loc 1 4948 0
	jmp	.L2145
.L2147:
.LBE47:
	.loc 1 4957 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	is_overloaded_fn@PLT
	testl	%eax, %eax
	je	.L2159
.LBB48:
	.loc 1 4961 0
	movl	-32(%ebp), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2161
.L2162:
.LBB49:
	.loc 1 4963 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2163
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L2165
.L2163:
	movl	-16(%ebp), %eax
	movl	%eax, -48(%ebp)
.L2165:
	movl	-48(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 4965 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2166
	movl	-16(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2166
	movl	12(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L2166
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %edx
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	compparms@PLT
	testl	%eax, %eax
	je	.L2166
	.loc 1 4969 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC83@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2166:
	.loc 1 4972 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	testl	%eax, %eax
	je	.L2171
	.loc 1 4973 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-12(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2173
.L2171:
.LBE49:
	.loc 1 4961 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2174
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L2176
.L2174:
	movl	$0, -40(%ebp)
.L2176:
	movl	-40(%ebp), %eax
	movl	%eax, -16(%ebp)
.L2161:
	cmpl	$0, -16(%ebp)
	jne	.L2162
	jmp	.L2145
.L2159:
.LBE48:
	.loc 1 4976 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-32(%ebp), %eax
	jne	.L2178
	.loc 1 4978 0
	movl	$0, -32(%ebp)
	jmp	.L2145
.L2178:
	.loc 1 4981 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC84@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 4982 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC85@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 4983 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2173
.L2145:
	.loc 1 4987 0
	cmpl	$0, -32(%ebp)
	jne	.L2180
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2182
.L2180:
	.loc 1 4989 0
	cmpl	$0, -32(%ebp)
	je	.L2183
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	je	.L2183
	.loc 1 4990 0
	movl	$0, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	ovl_cons@PLT
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	ovl_cons@PLT
	movl	%eax, -28(%ebp)
	.loc 1 4989 0
	jmp	.L2186
.L2183:
	.loc 1 4992 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	ovl_cons@PLT
	movl	%eax, -28(%ebp)
.L2186:
	.loc 1 4993 0
	movl	12(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L2189
	.loc 1 4994 0
	movl	-28(%ebp), %eax
	movzbl	10(%eax), %edx
	orl	$1, %edx
	movb	%dl, 10(%eax)
	.loc 1 4987 0
	jmp	.L2189
.L2182:
	.loc 1 4998 0
	movl	8(%ebp), %eax
	movl	%eax, -28(%ebp)
.L2189:
	.loc 1 5000 0
	cmpl	$0, -24(%ebp)
	je	.L2190
	.loc 1 5001 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	set_namespace_binding@PLT
	jmp	.L2192
.L2190:
	.loc 1 5010 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2193
	cmpl	$0, -32(%ebp)
	je	.L2193
.LBB50:
	.loc 1 5014 0
	movl	-36(%ebp), %eax
	movl	44(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 5015 0
	jmp	.L2196
.L2197:
	.loc 1 5017 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	cmpl	-32(%ebp), %eax
	je	.L2198
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L2200
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	20(%eax), %eax
	cmpl	-32(%ebp), %eax
	jne	.L2200
.L2198:
	.loc 1 5021 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L2202
	.loc 1 5023 0
	movl	-8(%ebp), %eax
	movl	(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%eax, 20(%edx)
	jmp	.L2204
.L2202:
	.loc 1 5026 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
.L2204:
	.loc 1 5030 0
	movl	-36(%ebp), %eax
	movl	44(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 5032 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2173
.L2200:
	.loc 1 5016 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L2196:
	.loc 1 5015 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2197
	.loc 1 5036 0
	leal	__FUNCTION__.23137@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$5036, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2193:
.LBE50:
	.loc 1 5040 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	push_local_binding@PLT
.L2192:
	.loc 1 5043 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	%eax, -44(%ebp)
.L2173:
	movl	-44(%ebp), %eax
	.loc 1 5044 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE119:
	.size	push_overloaded_decl, .-push_overloaded_decl
	.section	.rodata
	.align 4
.LC86:
	.string	"implicit declaration of function `%#D'"
	.text
.globl implicitly_declare
	.type	implicitly_declare, @function
implicitly_declare:
.LFB120:
	.loc 1 5052 0
	pushl	%ebp
.LCFI384:
	movl	%esp, %ebp
.LCFI385:
	pushl	%esi
.LCFI386:
	pushl	%ebx
.LCFI387:
	subl	$32, %esp
.LCFI388:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5058 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	84(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$31, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5060 0
	movl	-12(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$1, %eax
	movl	-12(%ebp), %edx
	movb	%al, 33(%edx)
	.loc 1 5061 0
	movl	-12(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movl	-12(%ebp), %edx
	movb	%al, 10(%edx)
	.loc 1 5065 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	.loc 1 5066 0
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	-12(%ebp), %edx
	movl	%edx, (%esp)
	call	rest_of_decl_compilation@PLT
	.loc 1 5068 0
	movl	warn_implicit@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2208
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2210
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L2208
.L2210:
	.loc 1 5072 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC86@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L2208:
	.loc 1 5075 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L2214
	movl	8(%ebp), %esi
	movl	$12, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, 56(%esi)
.L2214:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	-12(%ebp), %edx
	movl	%edx, 4(%eax)
	.loc 1 5077 0
	movl	-12(%ebp), %eax
	.loc 1 5078 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE120:
	.size	implicitly_declare, .-implicitly_declare
	.section	.rodata
.LC87:
	.string	"redefinition of `%#D'"
	.align 4
.LC88:
	.string	"`%D' conflicts with used function"
.LC89:
	.string	"`%#D' not declared in class"
.LC90:
	.string	"redeclaration of `%#D'"
	.text
	.type	redeclaration_error_message, @function
redeclaration_error_message:
.LFB121:
	.loc 1 5089 0
	pushl	%ebp
.LCFI389:
	movl	%esp, %ebp
.LCFI390:
	pushl	%ebx
.LCFI391:
	subl	$36, %esp
.LCFI392:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5090 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2217
	.loc 1 5095 0
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	je	.L2219
	.loc 1 5096 0
	movl	$0, -16(%ebp)
	jmp	.L2221
.L2219:
	.loc 1 5098 0
	leal	.LC87@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2221
.L2217:
	.loc 1 5100 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L2222
	.loc 1 5105 0
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L2224
	movl	12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2224
	.loc 1 5106 0
	movl	$0, -16(%ebp)
	jmp	.L2221
.L2224:
	.loc 1 5110 0
	movl	12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2227
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2229
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2229
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2229
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L2229
.L2227:
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2233
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L2235
.L2233:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L2235:
	movl	-12(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$39, %al
	jne	.L2229
	movl	12(%ebp), %eax
	movl	56(%eax), %edx
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	cmpl	%eax, %edx
	je	.L2229
	.loc 1 5112 0
	leal	.LC88@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2221
.L2229:
	.loc 1 5118 0
	movl	12(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L2238
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L2238
	.loc 1 5121 0
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	jne	.L2241
	.loc 1 5122 0
	leal	.LC89@GOTOFF(%ebx), %edx
	movl	%edx, -16(%ebp)
	jmp	.L2221
.L2241:
	.loc 1 5124 0
	leal	.LC87@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2221
.L2238:
	.loc 1 5126 0
	movl	$0, -16(%ebp)
	jmp	.L2221
.L2222:
	.loc 1 5128 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2243
	.loc 1 5130 0
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L2245
	movl	8(%ebp), %eax
	movl	64(%eax), %edx
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	cmpl	%eax, %edx
	je	.L2245
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L2245
	movl	12(%ebp), %eax
	movl	64(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L2249
.L2245:
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2250
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L2250
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L2250
.L2249:
	.loc 1 5138 0
	leal	.LC87@GOTOFF(%ebx), %edx
	movl	%edx, -16(%ebp)
	jmp	.L2221
.L2250:
	.loc 1 5139 0
	movl	$0, -16(%ebp)
	jmp	.L2221
.L2243:
	.loc 1 5141 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	jne	.L2253
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2255
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2257
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2257
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2257
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L2257
.L2255:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2261
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2263
.L2261:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L2263:
	movl	-8(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$39, %al
	jne	.L2257
.L2253:
	.loc 1 5145 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L2264
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2266
.L2264:
	.loc 1 5146 0
	movl	$0, -16(%ebp)
	jmp	.L2221
.L2266:
	.loc 1 5148 0
	leal	.LC87@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2221
.L2257:
	.loc 1 5155 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2267
	movl	12(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L2269
.L2267:
	.loc 1 5156 0
	leal	.LC90@GOTOFF(%ebx), %edx
	movl	%edx, -16(%ebp)
	jmp	.L2221
.L2269:
	.loc 1 5157 0
	movl	$0, -16(%ebp)
.L2221:
	movl	-16(%ebp), %eax
	.loc 1 5159 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE121:
	.size	redeclaration_error_message, .-redeclaration_error_message
	.type	make_label_decl, @function
make_label_decl:
.LFB122:
	.loc 1 5167 0
	pushl	%ebp
.LCFI393:
	movl	%esp, %ebp
.LCFI394:
	pushl	%esi
.LCFI395:
	pushl	%ebx
.LCFI396:
	subl	$32, %esp
.LCFI397:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5170 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$32, (%esp)
	call	build_decl@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5171 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L2272
	.loc 1 5173 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	label_rtx@PLT
.L2272:
	.loc 1 5175 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 56(%eax)
	.loc 1 5176 0
	movl	-12(%ebp), %eax
	movb	$0, 32(%eax)
	.loc 1 5177 0
	movl	12(%ebp), %eax
	andl	$1, %eax
	movl	-12(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	11(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 11(%ecx)
	.loc 1 5181 0
	movl	lineno@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 5182 0
	movl	input_filename@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 1 5185 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L2276
	movl	8(%ebp), %esi
	movl	$12, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, 56(%esi)
.L2276:
	movl	8(%ebp), %eax
	movl	56(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 5187 0
	movl	-12(%ebp), %eax
	.loc 1 5188 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE122:
	.size	make_label_decl, .-make_label_decl
	.type	use_label, @function
use_label:
.LFB123:
	.loc 1 5198 0
	pushl	%ebp
.LCFI398:
	movl	%esp, %ebp
.LCFI399:
	pushl	%ebx
.LCFI400:
	subl	$36, %esp
.LCFI401:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5199 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L2279
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	76(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -36(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2281
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2281
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L2284
.L2281:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L2284:
	movl	-32(%ebp), %edx
	movl	(%edx), %eax
	cmpl	%eax, -36(%ebp)
	jne	.L2279
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	76(%eax), %eax
	movl	8(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L2295
.L2279:
.LBB51:
	.loc 1 5204 0
	movl	$24, (%esp)
	call	ggc_alloc@PLT
	movl	%eax, -8(%ebp)
	.loc 1 5206 0
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 5207 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2287
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2287
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2290
.L2287:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L2290:
	movl	-28(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 5208 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2291
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2291
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2294
.L2291:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L2294:
	movl	-8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, (%eax)
	.loc 1 5209 0
	movl	lineno@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 1 5210 0
	movl	input_filename@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 1 5211 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	76(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 5212 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 76(%edx)
.L2295:
.LBE51:
	.loc 1 5214 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE123:
	.size	use_label, .-use_label
	.section	.rodata
	.align 4
.LC91:
	.string	"label `%s' referenced outside of any function"
	.text
.globl lookup_label
	.type	lookup_label, @function
lookup_label:
.LFB124:
	.loc 1 5223 0
	pushl	%ebp
.LCFI402:
	movl	%esp, %ebp
.LCFI403:
	pushl	%ebx
.LCFI404:
	subl	$36, %esp
.LCFI405:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5227 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 5230 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2297
	.loc 1 5232 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC91@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5234 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -32(%ebp)
	jmp	.L2299
.L2297:
	.loc 1 5238 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2300
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2302
.L2300:
	movl	$0, -28(%ebp)
.L2302:
	movl	-28(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 5239 0
	cmpl	$0, -12(%ebp)
	je	.L2303
	movl	-12(%ebp), %eax
	movl	56(%eax), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L2303
	.loc 1 5240 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-12(%ebp), %edx
	movl	%edx, -32(%ebp)
	jmp	.L2299
.L2303:
	.loc 1 5245 0
	movl	$28, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, -8(%ebp)
	.loc 1 5247 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2306
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2308
.L2306:
	movl	$0, -24(%ebp)
.L2308:
	movl	-8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 8(%eax)
	.loc 1 5248 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	80(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 5249 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 80(%edx)
	.loc 1 5252 0
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_label_decl
	movl	%eax, -12(%ebp)
	.loc 1 5255 0
	movl	-8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 12(%edx)
	.loc 1 5257 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-12(%ebp), %eax
	movl	%eax, -32(%ebp)
.L2299:
	movl	-32(%ebp), %eax
	.loc 1 5258 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE124:
	.size	lookup_label, .-lookup_label
.globl declare_local_label
	.type	declare_local_label, @function
declare_local_label:
.LFB125:
	.loc 1 5265 0
	pushl	%ebp
.LCFI406:
	movl	%esp, %ebp
.LCFI407:
	pushl	%ebx
.LCFI408:
	subl	$52, %esp
.LCFI409:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5271 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2311
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2311
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L2314
.L2311:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -40(%ebp)
.L2314:
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2315
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2315
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L2318
.L2315:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L2318:
	movl	-36(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, -32(%ebp)
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2319
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2321
.L2319:
	movl	$0, -28(%ebp)
.L2321:
	movl	-32(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	$0, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	-40(%ebp), %edx
	movl	%eax, 40(%edx)
	.loc 1 5275 0
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_label_decl
	movl	%eax, -8(%ebp)
	.loc 1 5277 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2322
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2322
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2325
.L2322:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L2325:
	movl	-24(%ebp), %eax
	movl	40(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 20(%edx)
	.loc 1 5279 0
	movl	-8(%ebp), %eax
	.loc 1 5280 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE125:
	.size	declare_local_label, .-declare_local_label
	.type	decl_jump_unsafe, @function
decl_jump_unsafe:
.LFB126:
	.loc 1 5288 0
	pushl	%ebp
.LCFI410:
	movl	%esp, %ebp
.LCFI411:
	pushl	%ebx
.LCFI412:
	subl	$20, %esp
.LCFI413:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5289 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L2328
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L2330
.L2328:
	.loc 1 5290 0
	movl	$0, -8(%ebp)
	jmp	.L2331
.L2330:
	.loc 1 5292 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L2332
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	pod_type_p@PLT
	testl	%eax, %eax
	je	.L2332
	.loc 1 5294 0
	movl	$0, -8(%ebp)
	jmp	.L2331
.L2332:
	.loc 1 5299 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L2335
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L2337
.L2335:
	.loc 1 5301 0
	movl	$2, -8(%ebp)
	jmp	.L2331
.L2337:
	.loc 1 5302 0
	movl	$1, -8(%ebp)
.L2331:
	movl	-8(%ebp), %eax
	.loc 1 5303 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE126:
	.size	decl_jump_unsafe, .-decl_jump_unsafe
	.section	.rodata
.LC92:
	.string	"jump to label `%D'"
.LC93:
	.string	"jump to case label"
.LC94:
	.string	"  from here"
	.align 4
.LC95:
	.string	"  crosses initialization of `%#D'"
	.align 4
.LC96:
	.string	"  enters scope of non-POD `%#D'"
.LC97:
	.string	"  enters try block"
.LC98:
	.string	"  enters catch block"
	.text
	.type	check_previous_goto_1, @function
check_previous_goto_1:
.LFB127:
	.loc 1 5317 0
	pushl	%ebp
.LCFI414:
	movl	%esp, %ebp
.LCFI415:
	pushl	%ebx
.LCFI416:
	subl	$52, %esp
.LCFI417:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5318 0
	movl	$0, -28(%ebp)
	.loc 1 5319 0
	movl	$0, -24(%ebp)
	.loc 1 5320 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2340
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2340
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2343
.L2340:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -44(%ebp)
.L2343:
	movl	-44(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 5321 0
	jmp	.L2344
.L2345:
.LBB52:
	.loc 1 5323 0
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 5324 0
	movl	-20(%ebp), %eax
	cmpl	12(%ebp), %eax
	jne	.L2346
	movl	16(%ebp), %eax
	movl	%eax, -40(%ebp)
	jmp	.L2348
.L2346:
	movl	$0, -40(%ebp)
.L2348:
	movl	-40(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 5325 0
	jmp	.L2349
.L2350:
.LBB53:
	.loc 1 5328 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_jump_unsafe
	movl	%eax, -8(%ebp)
	.loc 1 5329 0
	cmpl	$0, -8(%ebp)
	je	.L2351
	.loc 1 5332 0
	cmpl	$0, -28(%ebp)
	jne	.L2353
	.loc 1 5334 0
	cmpl	$0, 8(%ebp)
	je	.L2355
	.loc 1 5335 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC92@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L2357
.L2355:
	.loc 1 5337 0
	leal	.LC93@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L2357:
	.loc 1 5339 0
	cmpl	$0, 20(%ebp)
	je	.L2358
	.loc 1 5340 0
	leal	.LC94@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, (%esp)
	call	pedwarn_with_file_and_line@PLT
.L2358:
	.loc 1 5341 0
	movl	$1, -28(%ebp)
.L2353:
	.loc 1 5344 0
	cmpl	$1, -8(%ebp)
	jle	.L2360
	.loc 1 5345 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC95@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	jmp	.L2351
.L2360:
	.loc 1 5348 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC96@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
.L2351:
.LBE53:
	.loc 1 5326 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L2349:
	.loc 1 5325 0
	movl	-16(%ebp), %eax
	cmpl	-12(%ebp), %eax
	jne	.L2350
	.loc 1 5352 0
	movl	-20(%ebp), %eax
	cmpl	12(%ebp), %eax
	je	.L2379
	.loc 1 5354 0
	movl	-20(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L2365
	movl	-20(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L2367
.L2365:
	cmpl	$0, -24(%ebp)
	jne	.L2367
	.loc 1 5356 0
	cmpl	$0, -28(%ebp)
	jne	.L2369
	.loc 1 5358 0
	cmpl	$0, 8(%ebp)
	je	.L2371
	.loc 1 5359 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC92@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L2373
.L2371:
	.loc 1 5361 0
	leal	.LC93@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L2373:
	.loc 1 5363 0
	cmpl	$0, 20(%ebp)
	je	.L2374
	.loc 1 5364 0
	leal	.LC94@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, (%esp)
	call	pedwarn_with_file_and_line@PLT
.L2374:
	.loc 1 5365 0
	movl	$1, -28(%ebp)
.L2369:
	.loc 1 5367 0
	movl	-20(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L2376
	.loc 1 5368 0
	leal	.LC97@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2378
.L2376:
	.loc 1 5370 0
	leal	.LC98@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2378:
	.loc 1 5371 0
	movl	$1, -24(%ebp)
.L2367:
.LBE52:
	.loc 1 5321 0
	movl	-20(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -20(%ebp)
.L2344:
	cmpl	$0, -20(%ebp)
	jne	.L2345
.L2379:
	.loc 1 5374 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE127:
	.size	check_previous_goto_1, .-check_previous_goto_1
	.type	check_previous_goto, @function
check_previous_goto:
.LFB128:
	.loc 1 5379 0
	pushl	%ebp
.LCFI418:
	movl	%esp, %ebp
.LCFI419:
	pushl	%edi
.LCFI420:
	pushl	%esi
.LCFI421:
	subl	$32, %esp
.LCFI422:
	.loc 1 5380 0
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	movl	8(%ebp), %eax
	movl	12(%eax), %ecx
	movl	8(%ebp), %eax
	movl	4(%eax), %esi
	movl	8(%ebp), %eax
	movl	(%eax), %edi
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%edx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	%esi, 8(%esp)
	movl	%edi, 4(%esp)
	movl	%eax, (%esp)
	call	check_previous_goto_1
	.loc 1 5383 0
	addl	$32, %esp
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE128:
	.size	check_previous_goto, .-check_previous_goto
	.type	check_switch_goto, @function
check_switch_goto:
.LFB129:
	.loc 1 5388 0
	pushl	%ebp
.LCFI423:
	movl	%esp, %ebp
.LCFI424:
	subl	$24, %esp
.LCFI425:
	.loc 1 5389 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	$0, 16(%esp)
	movl	$0, 12(%esp)
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	check_previous_goto_1
	.loc 1 5390 0
	leave
	ret
.LFE129:
	.size	check_switch_goto, .-check_switch_goto
	.type	check_previous_gotos, @function
check_previous_gotos:
.LFB130:
	.loc 1 5398 0
	pushl	%ebp
.LCFI426:
	movl	%esp, %ebp
.LCFI427:
	pushl	%ebx
.LCFI428:
	subl	$20, %esp
.LCFI429:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5401 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2391
	.loc 1 5404 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	addl	$76, %eax
	movl	%eax, -12(%ebp)
	jmp	.L2392
.L2388:
.LBB54:
	.loc 1 5406 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 5407 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L2389
	.loc 1 5409 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_previous_goto
	.loc 1 5410 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	jmp	.L2387
.L2389:
	.loc 1 5413 0
	movl	-8(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -12(%ebp)
.L2387:
.L2392:
.LBE54:
	.loc 1 5404 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2388
.L2391:
	.loc 1 5415 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE130:
	.size	check_previous_gotos, .-check_previous_gotos
	.section	.rodata
	.align 4
.LC99:
	.string	"  skips initialization of `%#D'"
	.text
.globl check_goto
	.type	check_goto, @function
check_goto:
.LFB131:
	.loc 1 5423 0
	pushl	%ebp
.LCFI430:
	movl	%esp, %ebp
.LCFI431:
	pushl	%ebx
.LCFI432:
	subl	$52, %esp
.LCFI433:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5424 0
	movl	$0, -24(%ebp)
	.loc 1 5430 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L2420
	.loc 1 5434 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L2396
	.loc 1 5436 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	use_label
	.loc 1 5437 0
	jmp	.L2420
.L2396:
	.loc 1 5440 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	80(%eax), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2398
.L2399:
	.loc 1 5441 0
	movl	-16(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L2400
	.loc 1 5440 0
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -16(%ebp)
.L2398:
	cmpl	$0, -16(%ebp)
	jne	.L2399
.L2400:
	.loc 1 5446 0
	cmpl	$0, -16(%ebp)
	je	.L2420
	.loc 1 5449 0
	movl	-16(%ebp), %eax
	movzbl	24(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L2403
	movl	-16(%ebp), %eax
	movzbl	24(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L2403
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L2406
.L2403:
	cmpl	$0, -24(%ebp)
	jne	.L2406
	.loc 1 5452 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC92@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
	.loc 1 5453 0
	leal	.LC94@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 5454 0
	movl	$1, -24(%ebp)
.L2406:
	.loc 1 5457 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L2408
.L2409:
.LBB55:
	.loc 1 5459 0
	movl	-20(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 5460 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_jump_unsafe
	movl	%eax, -8(%ebp)
	.loc 1 5462 0
	cmpl	$1, -8(%ebp)
	jle	.L2410
	movl	-12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L2410
	.loc 1 5464 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC98@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 5462 0
	jmp	.L2413
.L2410:
	.loc 1 5465 0
	cmpl	$1, -8(%ebp)
	jle	.L2414
	.loc 1 5466 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC99@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	jmp	.L2413
.L2414:
	.loc 1 5468 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC96@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
.L2413:
.LBE55:
	.loc 1 5457 0
	movl	-20(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
.L2408:
	cmpl	$0, -20(%ebp)
	jne	.L2409
	.loc 1 5471 0
	movl	-16(%ebp), %eax
	movzbl	24(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2417
	.loc 1 5472 0
	leal	.LC97@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2420
.L2417:
	.loc 1 5473 0
	movl	-16(%ebp), %eax
	movzbl	24(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L2420
	.loc 1 5474 0
	leal	.LC98@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2420:
	.loc 1 5475 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE131:
	.size	check_goto, .-check_goto
	.section	.rodata
.LC100:
	.string	"wchar_t"
.LC101:
	.string	"label named wchar_t"
.LC102:
	.string	"duplicate label `%D'"
	.text
.globl define_label
	.type	define_label, @function
define_label:
.LFB132:
	.loc 1 5485 0
	pushl	%ebp
.LCFI434:
	movl	%esp, %ebp
.LCFI435:
	pushl	%ebx
.LCFI436:
	subl	$52, %esp
.LCFI437:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5486 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_label@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5490 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 5492 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	80(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L2422
.L2423:
	.loc 1 5493 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	-12(%ebp), %eax
	je	.L2424
	.loc 1 5492 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -8(%ebp)
.L2422:
	cmpl	$0, -8(%ebp)
	jne	.L2423
.L2424:
	.loc 1 5498 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2426
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2426
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L2429
.L2426:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L2429:
	movl	-36(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2430
.L2431:
	.loc 1 5499 0
	movl	-24(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$-33, %eax
	movl	-24(%ebp), %edx
	movb	%al, 60(%edx)
	.loc 1 5498 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -24(%ebp)
.L2430:
	movl	-24(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	testb	%al, %al
	je	.L2431
	.loc 1 5501 0
	movl	$7, 4(%esp)
	leal	.LC100@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	cmpl	16(%ebp), %eax
	jne	.L2433
	.loc 1 5502 0
	leal	.LC101@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L2433:
	.loc 1 5504 0
	movl	-12(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L2435
	.loc 1 5505 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC102@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2437
.L2435:
	.loc 1 5509 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 68(%eax)
	.loc 1 5511 0
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 16(%edx)
	.loc 1 5512 0
	movl	-12(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 20(%edx)
	.loc 1 5513 0
	cmpl	$0, -8(%ebp)
	je	.L2438
	.loc 1 5515 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2440
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2440
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L2443
.L2440:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L2443:
	movl	-32(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 5516 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2444
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2444
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2447
.L2444:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L2447:
	movl	-8(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, (%eax)
.L2438:
	.loc 1 5518 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	check_previous_gotos
.L2437:
	.loc 1 5521 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	.loc 1 5522 0
	movl	-12(%ebp), %eax
	.loc 1 5523 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE132:
	.size	define_label, .-define_label
.globl push_switch
	.type	push_switch, @function
push_switch:
.LFB133:
	.loc 1 5553 0
	pushl	%ebp
.LCFI438:
	movl	%esp, %ebp
.LCFI439:
	pushl	%ebx
.LCFI440:
	subl	$36, %esp
.LCFI441:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5555 0
	movl	$16, (%esp)
	call	xmalloc@PLT
	movl	%eax, -8(%ebp)
	.loc 1 5556 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2450
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2450
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2453
.L2450:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L2453:
	movl	-8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, (%eax)
	.loc 1 5557 0
	movl	switch_stack@GOTOFF(%ebx), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 5558 0
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 5559 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	case_compare@GOT(%ebx), %eax
	movl	%eax, (%esp)
	call	splay_tree_new@PLT
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	movl	%edx, 12(%eax)
	.loc 1 5560 0
	movl	-8(%ebp), %eax
	movl	%eax, switch_stack@GOTOFF(%ebx)
	.loc 1 5561 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE133:
	.size	push_switch, .-push_switch
.globl pop_switch
	.type	pop_switch, @function
pop_switch:
.LFB134:
	.loc 1 5565 0
	pushl	%ebp
.LCFI442:
	movl	%esp, %ebp
.LCFI443:
	pushl	%ebx
.LCFI444:
	subl	$20, %esp
.LCFI445:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5568 0
	movl	switch_stack@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 5569 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	splay_tree_delete@PLT
	.loc 1 5570 0
	movl	switch_stack@GOTOFF(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, switch_stack@GOTOFF(%ebx)
	.loc 1 5571 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	free@PLT
	.loc 1 5572 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE134:
	.size	pop_switch, .-pop_switch
	.section	.rodata
	.align 4
.LC103:
	.string	"case label not within a switch statement"
	.align 4
.LC104:
	.string	"case label `%E' not within a switch statement"
	.align 4
.LC105:
	.string	"`default' label not within a switch statement"
	.text
.globl finish_case_label
	.type	finish_case_label, @function
finish_case_label:
.LFB135:
	.loc 1 5581 0
	pushl	%ebp
.LCFI446:
	movl	%esp, %ebp
.LCFI447:
	pushl	%ebx
.LCFI448:
	subl	$52, %esp
.LCFI449:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5585 0
	movl	switch_stack@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	jne	.L2458
	.loc 1 5587 0
	cmpl	$0, 12(%ebp)
	je	.L2460
	.loc 1 5588 0
	leal	.LC103@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2462
.L2460:
	.loc 1 5589 0
	cmpl	$0, 8(%ebp)
	je	.L2463
	.loc 1 5590 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC104@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L2462
.L2463:
	.loc 1 5593 0
	leal	.LC105@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2462:
	.loc 1 5594 0
	movl	$0, -32(%ebp)
	jmp	.L2465
.L2458:
	.loc 1 5597 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L2466
.LBB56:
	.loc 1 5603 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	$32, (%esp)
	call	build_decl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 5604 0
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_case_label@PLT
	movl	%eax, (%esp)
	call	add_stmt@PLT
	movl	%eax, -32(%ebp)
	jmp	.L2465
.L2466:
.LBE56:
	.loc 1 5608 0
	movl	switch_stack@GOTOFF(%ebx), %eax
	movl	8(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 5609 0
	cmpl	$0, -16(%ebp)
	je	.L2468
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L2468
	.loc 1 5610 0
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -16(%ebp)
.L2468:
	.loc 1 5612 0
	movl	switch_stack@GOTOFF(%ebx), %eax
	movl	12(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	c_add_case_label@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5613 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L2471
	.loc 1 5614 0
	movl	$0, -12(%ebp)
.L2471:
	.loc 1 5616 0
	movl	switch_stack@GOTOFF(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	check_switch_goto
	.loc 1 5620 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2473
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2473
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2476
.L2473:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L2476:
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2477
.L2478:
	.loc 1 5621 0
	movl	-24(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$-33, %eax
	movl	-24(%ebp), %edx
	movb	%al, 60(%edx)
	.loc 1 5620 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -24(%ebp)
.L2477:
	movl	-24(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	testb	%al, %al
	je	.L2478
	.loc 1 5623 0
	movl	-12(%ebp), %eax
	movl	%eax, -32(%ebp)
.L2465:
	movl	-32(%ebp), %eax
	.loc 1 5624 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE135:
	.size	finish_case_label, .-finish_case_label
.globl getdecls
	.type	getdecls, @function
getdecls:
.LFB136:
	.loc 1 5633 0
	pushl	%ebp
.LCFI450:
	movl	%esp, %ebp
.LCFI451:
	subl	$4, %esp
.LCFI452:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 5634 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2482
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2482
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L2485
.L2482:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L2485:
	movl	-4(%ebp), %edx
	movl	(%edx), %eax
	.loc 1 5635 0
	leave
	ret
.LFE136:
	.size	getdecls, .-getdecls
	.type	storedecls, @function
storedecls:
.LFB137:
	.loc 1 5644 0
	pushl	%ebp
.LCFI453:
	movl	%esp, %ebp
.LCFI454:
	subl	$4, %esp
.LCFI455:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 5645 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2488
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2488
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L2491
.L2488:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L2491:
	movl	8(%ebp), %eax
	movl	-4(%ebp), %edx
	movl	%eax, (%edx)
	.loc 1 5646 0
	leave
	ret
.LFE137:
	.size	storedecls, .-storedecls
.globl cxx_remember_type_decls
	.type	cxx_remember_type_decls, @function
cxx_remember_type_decls:
.LFB138:
	.loc 1 5653 0
	pushl	%ebp
.LCFI456:
	movl	%esp, %ebp
.LCFI457:
	subl	$4, %esp
.LCFI458:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 5654 0
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2494
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2494
	movl	cfun@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -4(%ebp)
	jmp	.L2497
.L2494:
	movl	scope_chain@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -4(%ebp)
.L2497:
	movl	8(%ebp), %eax
	movl	-4(%ebp), %edx
	movl	%eax, 20(%edx)
	.loc 1 5655 0
	leave
	ret
.LFE138:
	.size	cxx_remember_type_decls, .-cxx_remember_type_decls
	.type	follow_tag_typedef, @function
follow_tag_typedef:
.LFB139:
	.loc 1 5684 0
	pushl	%ebp
.LCFI459:
	movl	%esp, %ebp
.LCFI460:
	pushl	%ebx
.LCFI461:
	subl	$36, %esp
.LCFI462:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5687 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	original_type@PLT
	movl	%eax, -8(%ebp)
	.loc 1 5688 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L2500
	.loc 1 5689 0
	movl	$0, -32(%ebp)
	jmp	.L2502
.L2500:
	.loc 1 5690 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %edx
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	cmpl	%eax, %edx
	jne	.L2503
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2505
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	56(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2507
.L2505:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
.L2507:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2508
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	56(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2510
.L2508:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
.L2510:
	movl	-24(%ebp), %eax
	cmpl	%eax, -28(%ebp)
	jne	.L2503
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L2512
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L2514
.L2512:
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2515
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2515
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2515
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2515
	movl	-8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2514
.L2515:
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	8(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	jne	.L2503
.L2514:
	.loc 1 5694 0
	movl	-8(%ebp), %eax
	movl	%eax, -32(%ebp)
	jmp	.L2502
.L2503:
	.loc 1 5696 0
	movl	$0, -32(%ebp)
.L2502:
	movl	-32(%ebp), %eax
	.loc 1 5697 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE139:
	.size	follow_tag_typedef, .-follow_tag_typedef
	.section	.rodata
.LC106:
	.string	"`%#D' redeclared as %C"
	.text
	.type	lookup_tag, @function
lookup_tag:
.LFB140:
	.loc 1 5716 0
	pushl	%ebp
.LCFI463:
	movl	%esp, %ebp
.LCFI464:
	pushl	%ebx
.LCFI465:
	subl	$68, %esp
.LCFI466:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5720 0
	movl	$1, -32(%ebp)
	.loc 1 5721 0
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L2522
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L2522
	movl	$1, -56(%ebp)
	jmp	.L2525
.L2522:
	movl	$0, -56(%ebp)
.L2525:
	movzbl	-56(%ebp), %eax
	movb	%al, -5(%ebp)
	.loc 1 5723 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 5725 0
	movl	16(%ebp), %edx
	movl	%edx, -44(%ebp)
	jmp	.L2526
.L2527:
.LBB57:
	.loc 1 5728 0
	movzbl	-5(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L2528
	movl	-44(%ebp), %edx
	movl	20(%edx), %eax
	testl	%eax, %eax
	je	.L2528
.LBB58:
	.loc 1 5730 0
	movl	-44(%ebp), %edx
	movl	20(%edx), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	binding_table_find_anon_type
	movl	%eax, -28(%ebp)
	.loc 1 5733 0
	cmpl	$0, -28(%ebp)
	je	.L2534
	.loc 1 5734 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-28(%ebp), %eax
	movl	%eax, -52(%ebp)
	jmp	.L2533
.L2528:
.LBE58:
	.loc 1 5736 0
	movl	-44(%ebp), %edx
	movzbl	61(%edx), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L2535
	.loc 1 5738 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -40(%ebp)
.L2537:
.LBB59:
	.loc 1 5741 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	cxx_scope_find_binding_for_name@PLT
	movl	%eax, -24(%ebp)
	.loc 1 5748 0
	cmpl	$0, 20(%ebp)
	je	.L2538
	cmpl	$0, -32(%ebp)
	jne	.L2538
	cmpl	$0, -24(%ebp)
	je	.L2538
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L2538
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2538
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2538
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2545
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2545
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2538
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2538
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2538
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L2538
.L2545:
	.loc 1 5751 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 5748 0
	jmp	.L2551
.L2538:
	.loc 1 5752 0
	cmpl	$0, -24(%ebp)
	je	.L2552
	.loc 1 5753 0
	movl	-24(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L2551
.L2552:
	.loc 1 5755 0
	movl	$0, -20(%ebp)
.L2551:
	.loc 1 5757 0
	cmpl	$0, -20(%ebp)
	je	.L2554
	.loc 1 5762 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	follow_tag_typedef
	movl	%eax, -20(%ebp)
	.loc 1 5763 0
	cmpl	$0, -20(%ebp)
	jne	.L2556
	.loc 1 5764 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -52(%ebp)
	jmp	.L2533
.L2556:
	.loc 1 5765 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	cmpl	8(%ebp), %eax
	je	.L2558
	cmpl	$11, 8(%ebp)
	je	.L2560
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	jne	.L2558
.L2560:
	.loc 1 5769 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC106@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5770 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -52(%ebp)
	jmp	.L2533
.L2558:
	.loc 1 5772 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-20(%ebp), %edx
	movl	%edx, -52(%ebp)
	jmp	.L2533
.L2554:
	.loc 1 5774 0
	cmpl	$0, 20(%ebp)
	jne	.L2562
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -40(%ebp)
	jne	.L2564
.L2562:
	.loc 1 5775 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -52(%ebp)
	jmp	.L2533
.L2564:
.LBE59:
	.loc 1 5738 0
	movl	-40(%ebp), %edx
	movl	56(%edx), %eax
	testl	%eax, %eax
	je	.L2565
	movl	-40(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L2567
.L2565:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
.L2567:
	movl	-48(%ebp), %edx
	movl	%edx, -40(%ebp)
	.loc 1 5776 0
	jmp	.L2537
.L2535:
	.loc 1 5777 0
	movl	-44(%ebp), %edx
	movl	20(%edx), %eax
	testl	%eax, %eax
	je	.L2534
.LBB60:
	.loc 1 5779 0
	movl	-44(%ebp), %edx
	movl	20(%edx), %eax
	movl	12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	binding_table_find@PLT
	movl	%eax, -16(%ebp)
	.loc 1 5780 0
	cmpl	$0, -16(%ebp)
	je	.L2534
.LBB61:
	.loc 1 5782 0
	movl	-16(%ebp), %eax
	movl	8(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -12(%ebp)
	.loc 1 5784 0
	movl	-12(%ebp), %eax
	cmpl	8(%ebp), %eax
	je	.L2570
	cmpl	$11, 8(%ebp)
	je	.L2572
	cmpl	$11, -12(%ebp)
	jne	.L2570
.L2572:
	.loc 1 5788 0
	movl	-16(%ebp), %eax
	movl	8(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC106@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5789 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -52(%ebp)
	jmp	.L2533
.L2570:
	.loc 1 5791 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-16(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -52(%ebp)
	jmp	.L2533
.L2534:
.LBE61:
.LBE60:
	.loc 1 5794 0
	cmpl	$0, 20(%ebp)
	je	.L2574
	movl	-44(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L2574
	.loc 1 5796 0
	movl	-44(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L2577
	cmpl	$0, -32(%ebp)
	je	.L2577
	.loc 1 5809 0
	movl	$0, -32(%ebp)
	.loc 1 5810 0
	jmp	.L2574
.L2577:
	.loc 1 5813 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -52(%ebp)
	jmp	.L2533
.L2574:
.LBE57:
	.loc 1 5725 0
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -44(%ebp)
.L2526:
	cmpl	$0, -44(%ebp)
	jne	.L2527
	.loc 1 5816 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -52(%ebp)
.L2533:
	movl	-52(%ebp), %eax
	.loc 1 5817 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE140:
	.size	lookup_tag, .-lookup_tag
	.type	binding_table_find_anon_type, @function
binding_table_find_anon_type:
.LFB23:
	.loc 1 460 0
	pushl	%ebp
.LCFI467:
	movl	%esp, %ebp
.LCFI468:
	subl	$20, %esp
.LCFI469:
	.loc 1 461 0
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 462 0
	movl	8(%ebp), %eax
	movl	(%eax), %ecx
	movl	-8(%ebp), %eax
	movl	%eax, %edx
	shrl	$3, %edx
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	subl	$1, %eax
	andl	%edx, %eax
	sall	$2, %eax
	leal	(%ecx,%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
	.loc 1 464 0
	jmp	.L2583
.L2584:
	.loc 1 465 0
	movl	-4(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -4(%ebp)
.L2583:
	.loc 1 464 0
	cmpl	$0, -4(%ebp)
	je	.L2585
	movl	-4(%ebp), %eax
	movl	8(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L2584
.L2585:
	.loc 1 467 0
	cmpl	$0, -4(%ebp)
	je	.L2587
	movl	-4(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -20(%ebp)
	jmp	.L2589
.L2587:
	movl	$0, -20(%ebp)
.L2589:
	movl	-20(%ebp), %eax
	.loc 1 468 0
	leave
	ret
.LFE23:
	.size	binding_table_find_anon_type, .-binding_table_find_anon_type
	.type	lookup_tag_reverse, @function
lookup_tag_reverse:
.LFB141:
	.loc 1 5839 0
	pushl	%ebp
.LCFI470:
	movl	%esp, %ebp
.LCFI471:
	pushl	%ebx
.LCFI472:
	subl	$52, %esp
.LCFI473:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5842 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 5844 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2592
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2592
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L2595
.L2592:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L2595:
	movl	-36(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2596
.L2597:
.LBB62:
	.loc 1 5848 0
	movl	-24(%ebp), %edx
	movl	20(%edx), %eax
	testl	%eax, %eax
	je	.L2598
	movl	-24(%ebp), %eax
	movl	20(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	binding_table_reverse_maybe_remap
	movl	%eax, -32(%ebp)
	jmp	.L2600
.L2598:
	movl	$0, -32(%ebp)
.L2600:
	movl	-32(%ebp), %edx
	movl	%edx, -8(%ebp)
	.loc 1 5849 0
	cmpl	$0, -8(%ebp)
	je	.L2601
	.loc 1 5850 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2603
.L2601:
.LBE62:
	.loc 1 5844 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -24(%ebp)
.L2596:
	cmpl	$0, -24(%ebp)
	jne	.L2597
	.loc 1 5852 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -28(%ebp)
.L2603:
	movl	-28(%ebp), %eax
	.loc 1 5853 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE141:
	.size	lookup_tag_reverse, .-lookup_tag_reverse
	.type	binding_table_reverse_maybe_remap, @function
binding_table_reverse_maybe_remap:
.LFB24:
	.loc 1 474 0
	pushl	%ebp
.LCFI474:
	movl	%esp, %ebp
.LCFI475:
	subl	$16, %esp
.LCFI476:
	.loc 1 475 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 476 0
	movl	$0, -12(%ebp)
	.loc 1 477 0
	movl	$0, -8(%ebp)
	.loc 1 480 0
	movl	$0, -4(%ebp)
	jmp	.L2607
.L2608:
	.loc 1 482 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 483 0
	jmp	.L2622
.L2610:
	.loc 1 484 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	8(%eax), %eax
	cmpl	12(%ebp), %eax
	jne	.L2611
	.loc 1 485 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L2609
.L2611:
	.loc 1 487 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L2609:
.L2622:
	.loc 1 483 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2613
	cmpl	$0, -12(%ebp)
	je	.L2610
.L2613:
	.loc 1 480 0
	addl	$1, -4(%ebp)
.L2607:
	movl	-4(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jae	.L2615
	cmpl	$0, -12(%ebp)
	je	.L2608
.L2615:
	.loc 1 490 0
	cmpl	$0, -12(%ebp)
	je	.L2617
	cmpl	$0, 16(%ebp)
	je	.L2617
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	16(%ebp), %eax
	je	.L2617
	.loc 1 493 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 496 0
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, %edx
	shrl	$3, %edx
	movl	-16(%ebp), %eax
	subl	$1, %eax
	andl	%edx, %eax
	movl	%eax, -4(%ebp)
	.loc 1 497 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 498 0
	movl	-12(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 499 0
	movl	8(%ebp), %eax
	movl	(%eax), %edx
	movl	-4(%ebp), %eax
	sall	$2, %eax
	addl	%eax, %edx
	movl	-12(%ebp), %eax
	movl	%eax, (%edx)
.L2617:
	.loc 1 502 0
	movl	-12(%ebp), %eax
	.loc 1 503 0
	leave
	ret
.LFE24:
	.size	binding_table_reverse_maybe_remap, .-binding_table_reverse_maybe_remap
	.section	.rodata
	.type	__FUNCTION__.24225, @object
	.size	__FUNCTION__.24225, 22
__FUNCTION__.24225:
	.string	"lookup_namespace_name"
.LC107:
	.string	"invalid use of `%D'"
.LC108:
	.string	"`%D::%D' is not a template"
	.align 4
.LC109:
	.string	"`%D' undeclared in namespace `%D'"
	.text
.globl lookup_namespace_name
	.type	lookup_namespace_name, @function
lookup_namespace_name:
.LFB142:
	.loc 1 5860 0
	pushl	%ebp
.LCFI477:
	movl	%esp, %ebp
.LCFI478:
	pushl	%ebx
.LCFI479:
	subl	$68, %esp
.LCFI480:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5862 0
	movl	$0, -8(%ebp)
	.loc 1 5865 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 5867 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	je	.L2624
	leal	__FUNCTION__.24225@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$5867, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2624:
	.loc 1 5869 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L2626
	.loc 1 5871 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	12(%ebp), %eax
	movl	%eax, -48(%ebp)
	jmp	.L2628
.L2626:
	.loc 1 5872 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2629
	.loc 1 5876 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC107@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5877 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L2628
.L2629:
	.loc 1 5880 0
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L2631
	movl	8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L2633
.L2631:
	movl	8(%ebp), %edx
	movl	%edx, -44(%ebp)
.L2633:
	movl	-44(%ebp), %eax
	movl	%eax, 8(%ebp)
	.loc 1 5882 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L2634
	.loc 1 5884 0
	movl	12(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 5885 0
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 5886 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2636
	.loc 1 5887 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2638
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L2640
.L2638:
	movl	12(%ebp), %edx
	movl	%edx, -40(%ebp)
.L2640:
	movl	-40(%ebp), %edx
	movl	52(%edx), %eax
	movl	%eax, 12(%ebp)
	jmp	.L2634
.L2636:
	.loc 1 5888 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L2634
	.loc 1 5889 0
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, 12(%ebp)
.L2634:
	.loc 1 5892 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L2642
	leal	__FUNCTION__.24225@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$5892, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2642:
	.loc 1 5894 0
	leal	-32(%ebp), %eax
	movl	$0, (%eax)
	movl	$0, 4(%eax)
	movl	$0, 8(%eax)
	movl	$0, 12(%eax)
	movl	$0, 16(%eax)
	.loc 1 5895 0
	movl	$0, 12(%esp)
	leal	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	qualified_lookup_using_namespace@PLT
	xorl	$1, %eax
	testb	%al, %al
	je	.L2644
	.loc 1 5896 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L2628
.L2644:
	.loc 1 5898 0
	movl	-28(%ebp), %eax
	testl	%eax, %eax
	je	.L2646
	.loc 1 5900 0
	movl	-28(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 5902 0
	cmpl	$0, -8(%ebp)
	je	.L2648
	.loc 1 5904 0
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2650
	movl	-12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2650
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2653
	movl	-12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2653
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2650
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2650
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2650
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L2650
.L2653:
	.loc 1 5905 0
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	movl	$3, 20(%esp)
	movl	$0, 16(%esp)
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_template_class@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5904 0
	jmp	.L2648
.L2650:
	.loc 1 5911 0
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2659
	movl	-12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L2661
.L2659:
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2662
.L2661:
	.loc 1 5913 0
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_template_function@PLT
	movl	%eax, -12(%ebp)
	.loc 1 5911 0
	jmp	.L2648
.L2662:
	.loc 1 5917 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC108@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5919 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L2628
.L2648:
	.loc 1 5924 0
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L2663
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	really_overloaded_fn@PLT
	testl	%eax, %eax
	jne	.L2663
	.loc 1 5925 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -12(%ebp)
.L2663:
	.loc 1 5928 0
	cmpl	$0, -12(%ebp)
	je	.L2666
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L2666
	movl	-12(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L2666
	movl	-12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L2646
.L2666:
	.loc 1 5931 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-12(%ebp), %eax
	movl	%eax, -48(%ebp)
	jmp	.L2628
.L2646:
	.loc 1 5934 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC109@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 5935 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
.L2628:
	movl	-48(%ebp), %eax
	.loc 1 5936 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE142:
	.size	lookup_namespace_name, .-lookup_namespace_name
	.type	typename_hash, @function
typename_hash:
.LFB143:
	.loc 1 5943 0
	pushl	%ebp
.LCFI481:
	movl	%esp, %ebp
.LCFI482:
	pushl	%esi
.LCFI483:
	pushl	%ebx
.LCFI484:
	subl	$32, %esp
.LCFI485:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5945 0
	movl	8(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 5947 0
	movl	htab_hash_pointer@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	80(%eax), %eax
	movl	%eax, (%esp)
	call	*%edx
	movl	%eax, %esi
	movl	htab_hash_pointer@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	*%edx
	xorl	%esi, %eax
	movl	%eax, -16(%ebp)
	.loc 1 5950 0
	movl	-16(%ebp), %eax
	.loc 1 5951 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE143:
	.size	typename_hash, .-typename_hash
	.type	typename_compare, @function
typename_compare:
.LFB144:
	.loc 1 5959 0
	pushl	%ebp
.LCFI486:
	movl	%esp, %ebp
.LCFI487:
	pushl	%ebx
.LCFI488:
	subl	$36, %esp
.LCFI489:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5965 0
	movl	8(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 5966 0
	movl	12(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 5967 0
	movl	-20(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 5968 0
	movl	-16(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 5970 0
	movl	-12(%ebp), %eax
	movl	52(%eax), %edx
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	cmpl	%eax, %edx
	jne	.L2674
	movl	-20(%ebp), %eax
	movl	80(%eax), %edx
	movl	-16(%ebp), %eax
	movl	80(%eax), %eax
	cmpl	%eax, %edx
	jne	.L2674
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	sete	%dl
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	setne	%al
	xorl	%edx, %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L2674
	movl	-16(%ebp), %eax
	movl	4(%eax), %edx
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	je	.L2674
	movl	-20(%ebp), %eax
	movl	16(%eax), %edx
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	jne	.L2674
	movl	$1, -24(%ebp)
	jmp	.L2680
.L2674:
	movl	$0, -24(%ebp)
.L2680:
	movl	-24(%ebp), %eax
	.loc 1 5976 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE144:
	.size	typename_compare, .-typename_compare
.globl build_typename_type
	.type	build_typename_type, @function
build_typename_type:
.LFB145:
	.loc 1 5994 0
	pushl	%ebp
.LCFI490:
	movl	%esp, %ebp
.LCFI491:
	pushl	%ebx
.LCFI492:
	subl	$52, %esp
.LCFI493:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 5999 0
	movl	typename_htab@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	jne	.L2683
	.loc 1 6001 0
	movl	$0, 20(%esp)
	movl	ggc_calloc@GOT(%ebx), %eax
	movl	%eax, 16(%esp)
	movl	$0, 12(%esp)
	leal	typename_compare@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	leal	typename_hash@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	$61, (%esp)
	call	htab_create_alloc@PLT
	movl	%eax, typename_htab@GOTOFF(%ebx)
.L2683:
	.loc 1 6006 0
	movl	$197, (%esp)
	call	make_aggr_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 6007 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	je	.L2685
	movl	8(%ebp), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2687
.L2685:
	movl	$0, -28(%ebp)
.L2687:
	movl	-16(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, 80(%eax)
	.loc 1 6008 0
	movl	-16(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, 16(%edx)
	.loc 1 6009 0
	movl	-16(%ebp), %edx
	movl	20(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 6012 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, -12(%ebp)
	.loc 1 6013 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 6014 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 6015 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	je	.L2688
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2690
.L2688:
	movl	$0, -24(%ebp)
.L2690:
	movl	-12(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 56(%eax)
	.loc 1 6016 0
	movl	-12(%ebp), %edx
	movzbl	35(%edx), %eax
	orl	$8, %eax
	movb	%al, 35(%edx)
	.loc 1 6019 0
	movl	typename_htab@GOTOFF(%ebx), %edx
	movl	$1, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	htab_find_slot@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6020 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2691
	.loc 1 6021 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	jmp	.L2693
.L2691:
	.loc 1 6023 0
	movl	-8(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, (%edx)
.L2693:
	.loc 1 6025 0
	movl	-16(%ebp), %eax
	.loc 1 6026 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE145:
	.size	build_typename_type, .-build_typename_type
	.section	.rodata
	.type	__FUNCTION__.24418, @object
	.size	__FUNCTION__.24418, 19
__FUNCTION__.24418:
	.string	"make_typename_type"
	.align 4
.LC110:
	.string	"`%D' used without template parameters"
	.align 4
.LC111:
	.string	"no class template named `%#T' in `%#T'"
.LC112:
	.string	"no type named `%#T' in `%#T'"
	.text
.globl make_typename_type
	.type	make_typename_type, @function
make_typename_type:
.LFB146:
	.loc 1 6039 0
	pushl	%ebp
.LCFI494:
	movl	%esp, %ebp
.LCFI495:
	pushl	%ebx
.LCFI496:
	subl	$52, %esp
.LCFI497:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6042 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L2696
	.loc 1 6044 0
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L2698
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L2700
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	8(%eax), %eax
	andl	$12, %eax
	testb	%al, %al
	jne	.L2700
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %eax
	movl	60(%eax), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	je	.L2703
.L2700:
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	8(%eax), %eax
	andl	$12, %eax
	testb	%al, %al
	jne	.L2703
.L2698:
	.loc 1 6047 0
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 6044 0
	jmp	.L2705
.L2703:
	.loc 1 6050 0
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	20(%eax), %edx
	movl	12(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$203, (%esp)
	call	build_nt@PLT
	movl	%eax, 12(%ebp)
	jmp	.L2705
.L2696:
	.loc 1 6054 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2705
	.loc 1 6055 0
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, 12(%ebp)
.L2705:
	.loc 1 6057 0
	movl	12(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 6059 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L2707
	.loc 1 6061 0
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 6062 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2707
	.loc 1 6063 0
	movl	12(%ebp), %eax
	movl	52(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%edx, 20(%eax)
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
.L2707:
	.loc 1 6065 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2710
	.loc 1 6067 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC110@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 6068 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2710:
	.loc 1 6070 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L2713
	.loc 1 6071 0
	leal	__FUNCTION__.24418@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$6071, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2713:
	.loc 1 6073 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L2715
	.loc 1 6077 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2717
	.loc 1 6078 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC111@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2717:
	.loc 1 6080 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2715:
	.loc 1 6083 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	je	.L2719
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	currently_open_class@PLT
	testl	%eax, %eax
	je	.L2721
.L2719:
	.loc 1 6086 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L2722
.LBB63:
	.loc 1 6088 0
	movl	$0, -12(%ebp)
	.loc 1 6089 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2724
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2724
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2724
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2724
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2729
.L2724:
	.loc 1 6090 0
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_field@PLT
	movl	%eax, -12(%ebp)
.L2729:
	.loc 1 6091 0
	cmpl	$0, -12(%ebp)
	je	.L2730
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2730
	movl	-12(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2730
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2734
	movl	-12(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2734
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2730
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2730
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2730
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2734
.L2730:
	.loc 1 6093 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2740
	.loc 1 6094 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC111@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2740:
	.loc 1 6096 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2734:
	.loc 1 6099 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2742
	.loc 1 6101 0
	movl	16(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L2744
	.loc 1 6102 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	type_access_control@PLT
	jmp	.L2742
.L2744:
	.loc 1 6104 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	enforce_access@PLT
.L2742:
	.loc 1 6107 0
	movl	-16(%ebp), %eax
	movl	24(%eax), %edx
	movl	$3, 20(%esp)
	movl	$0, 16(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_template_class@PLT
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2722:
.LBE63:
.LBB64:
	.loc 1 6117 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2746
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2746
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2746
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2746
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L2746
	.loc 1 6119 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2752
	.loc 1 6120 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC112@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2752:
	.loc 1 6121 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2746:
	.loc 1 6124 0
	movl	$1, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_field@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6125 0
	cmpl	$0, -8(%ebp)
	je	.L2721
	.loc 1 6127 0
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2755
	.loc 1 6129 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2757
	.loc 1 6130 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC112@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2757:
	.loc 1 6131 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2755:
	.loc 1 6134 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2759
	.loc 1 6136 0
	movl	16(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L2761
	.loc 1 6137 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	type_access_control@PLT
	jmp	.L2759
.L2761:
	.loc 1 6139 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	enforce_access@PLT
.L2759:
	.loc 1 6142 0
	movl	-8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L2763
	movl	16(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L2765
.L2763:
	.loc 1 6143 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
.L2765:
	.loc 1 6144 0
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L2766
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L2766
	.loc 1 6151 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_node@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6152 0
	movl	-8(%ebp), %eax
	movl	$0, 4(%eax)
.L2766:
	.loc 1 6155 0
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2721:
.LBE64:
	.loc 1 6162 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L2769
	.loc 1 6164 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2771
	.loc 1 6165 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC112@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2771:
	.loc 1 6166 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2712
.L2769:
	.loc 1 6169 0
	movl	$0, 12(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_typename_type@PLT
	movl	%eax, -24(%ebp)
.L2712:
	movl	-24(%ebp), %eax
	.loc 1 6170 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE146:
	.size	make_typename_type, .-make_typename_type
	.section	.rodata
	.type	__FUNCTION__.24606, @object
	.size	__FUNCTION__.24606, 28
__FUNCTION__.24606:
	.string	"make_unbound_class_template"
	.text
.globl make_unbound_class_template
	.type	make_unbound_class_template, @function
make_unbound_class_template:
.LFB147:
	.loc 1 6182 0
	pushl	%ebp
.LCFI498:
	movl	%esp, %ebp
.LCFI499:
	pushl	%ebx
.LCFI500:
	subl	$52, %esp
.LCFI501:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6186 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L2775
	.loc 1 6187 0
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	%eax, 12(%ebp)
	jmp	.L2777
.L2775:
	.loc 1 6188 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L2777
	.loc 1 6189 0
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, 12(%ebp)
.L2777:
	.loc 1 6190 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L2779
	.loc 1 6191 0
	leal	__FUNCTION__.24606@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$6191, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L2779:
	.loc 1 6193 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	je	.L2781
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	currently_open_class@PLT
	testl	%eax, %eax
	je	.L2783
.L2781:
.LBB65:
	.loc 1 6196 0
	movl	$0, -8(%ebp)
	.loc 1 6198 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2784
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2784
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2784
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2784
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2789
.L2784:
	.loc 1 6199 0
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_field@PLT
	movl	%eax, -8(%ebp)
.L2789:
	.loc 1 6201 0
	cmpl	$0, -8(%ebp)
	je	.L2790
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2790
	movl	-8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2790
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2794
	movl	-8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2794
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2790
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2790
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2790
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2794
.L2790:
	.loc 1 6203 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2800
	.loc 1 6204 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC111@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L2800:
	.loc 1 6205 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L2802
.L2794:
	.loc 1 6208 0
	movl	16(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L2803
	.loc 1 6210 0
	movl	16(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L2805
	.loc 1 6211 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	type_access_control@PLT
	jmp	.L2803
.L2805:
	.loc 1 6213 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	enforce_access@PLT
.L2803:
	.loc 1 6216 0
	movl	-8(%ebp), %eax
	movl	%eax, -32(%ebp)
	jmp	.L2802
.L2783:
.LBE65:
	.loc 1 6220 0
	movl	$198, (%esp)
	call	make_aggr_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 6221 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	je	.L2807
	movl	8(%ebp), %edx
	movl	%edx, -28(%ebp)
	jmp	.L2809
.L2807:
	movl	$0, -28(%ebp)
.L2809:
	movl	-16(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	%edx, 80(%eax)
	.loc 1 6222 0
	movl	-16(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 1 6225 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$192, (%esp)
	call	build_decl@PLT
	movl	%eax, -12(%ebp)
	.loc 1 6226 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 6227 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 6228 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, 8(%ebp)
	je	.L2810
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2812
.L2810:
	movl	$0, -24(%ebp)
.L2812:
	movl	-12(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 56(%eax)
	.loc 1 6229 0
	movl	-12(%ebp), %edx
	movzbl	35(%edx), %eax
	orl	$8, %eax
	movb	%al, 35(%edx)
	.loc 1 6231 0
	movl	-16(%ebp), %eax
	movl	%eax, -32(%ebp)
.L2802:
	movl	-32(%ebp), %eax
	.loc 1 6232 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE147:
	.size	make_unbound_class_template, .-make_unbound_class_template
	.type	select_decl, @function
select_decl:
.LFB148:
	.loc 1 6238 0
	pushl	%ebp
.LCFI502:
	movl	%esp, %ebp
.LCFI503:
	pushl	%ebx
.LCFI504:
	subl	$36, %esp
.LCFI505:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6241 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 6243 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6245 0
	movl	12(%ebp), %eax
	andl	$4096, %eax
	testl	%eax, %eax
	je	.L2815
	movl	12(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	jne	.L2815
	.loc 1 6248 0
	cmpl	$0, -8(%ebp)
	je	.L2818
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L2818
	.loc 1 6249 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2821
.L2818:
	.loc 1 6250 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -24(%ebp)
	jmp	.L2821
.L2815:
	.loc 1 6255 0
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L2822
	cmpl	$0, -8(%ebp)
	je	.L2824
	movl	12(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L2822
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2822
.L2824:
	.loc 1 6258 0
	movl	8(%ebp), %eax
	movl	8(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6255 0
	jmp	.L2827
.L2822:
	.loc 1 6260 0
	cmpl	$0, -8(%ebp)
	je	.L2827
	movl	12(%ebp), %eax
	andl	$4096, %eax
	testl	%eax, %eax
	jne	.L2827
	movl	12(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L2827
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2827
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2832
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2832
	movl	-8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2832
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2827
	movl	-8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2827
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2832
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2832
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2832
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2827
.L2832:
	.loc 1 6263 0
	movl	$0, -8(%ebp)
.L2827:
	.loc 1 6265 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
.L2821:
	movl	-24(%ebp), %eax
	.loc 1 6266 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE148:
	.size	select_decl, .-select_decl
.globl unqualified_namespace_lookup
	.type	unqualified_namespace_lookup, @function
unqualified_namespace_lookup:
.LFB149:
	.loc 1 6277 0
	pushl	%ebp
.LCFI506:
	movl	%esp, %ebp
.LCFI507:
	pushl	%ebx
.LCFI508:
	subl	$100, %esp
.LCFI509:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6278 0
	call	current_decl_namespace@PLT
	movl	%eax, -28(%ebp)
	.loc 1 6279 0
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 6282 0
	movl	$0, -12(%ebp)
	.loc 1 6285 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 6286 0
	leal	-48(%ebp), %eax
	movl	$0, (%eax)
	movl	$0, 4(%eax)
	movl	$0, 8(%eax)
	movl	$0, 12(%eax)
	movl	$0, 16(%eax)
	.loc 1 6287 0
	cmpl	$0, 16(%ebp)
	je	.L2845
	.loc 1 6288 0
	movl	16(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 6290 0
	jmp	.L2845
.L2846:
.LBB66:
	.loc 1 6293 0
	cmpl	$0, 16(%ebp)
	je	.L2847
	.loc 1 6294 0
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	16(%ebp), %eax
	movl	%edx, (%eax)
.L2847:
	.loc 1 6295 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	cxx_scope_find_binding_for_name@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6298 0
	cmpl	$0, -8(%ebp)
	je	.L2849
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L2849
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$100, %al
	jne	.L2849
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L2849
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	136(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L2849
	jmp	.L2855
.L2849:
	.loc 1 6302 0
	cmpl	$0, -8(%ebp)
	je	.L2855
	.loc 1 6305 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 6306 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -40(%ebp)
.L2855:
	.loc 1 6310 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2857
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L2857
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -68(%ebp)
	jmp	.L2860
.L2857:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -68(%ebp)
.L2860:
	movl	-68(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 6311 0
	jmp	.L2861
.L2862:
	.loc 1 6313 0
	movl	-16(%ebp), %eax
	movl	28(%eax), %edx
	movl	16(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	leal	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_using_namespace@PLT
	xorl	$1, %eax
	testb	%al, %al
	je	.L2863
	.loc 1 6316 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	jmp	.L2865
.L2863:
	.loc 1 6312 0
	movl	-16(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -16(%ebp)
.L2861:
	.loc 1 6311 0
	movl	-16(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L2862
	.loc 1 6320 0
	movl	-28(%ebp), %eax
	movl	%eax, -20(%ebp)
.L2867:
	.loc 1 6323 0
	movl	-20(%ebp), %eax
	movl	124(%eax), %edx
	movl	16(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	leal	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_using_namespace@PLT
	xorl	$1, %eax
	testb	%al, %al
	je	.L2868
	.loc 1 6327 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	jmp	.L2865
.L2868:
	.loc 1 6328 0
	movl	-20(%ebp), %eax
	cmpl	-24(%ebp), %eax
	je	.L2870
	.loc 1 6329 0
	movl	-20(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2872
	movl	-20(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -60(%ebp)
	jmp	.L2874
.L2872:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
.L2874:
	movl	-60(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 6330 0
	jmp	.L2867
.L2870:
	.loc 1 6332 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	select_decl
	movl	%eax, -12(%ebp)
	.loc 1 6333 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -24(%ebp)
	je	.L2875
.LBE66:
	.loc 1 6290 0
	movl	-24(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L2877
	movl	-24(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -56(%ebp)
	jmp	.L2879
.L2877:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -56(%ebp)
.L2879:
	movl	-56(%ebp), %eax
	movl	%eax, -24(%ebp)
.L2845:
	cmpl	$0, -12(%ebp)
	je	.L2846
.L2875:
	.loc 1 6336 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-12(%ebp), %eax
	movl	%eax, -64(%ebp)
.L2865:
	movl	-64(%ebp), %eax
	.loc 1 6337 0
	addl	$100, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE149:
	.size	unqualified_namespace_lookup, .-unqualified_namespace_lookup
	.type	lookup_flags, @function
lookup_flags:
.LFB150:
	.loc 1 6344 0
	pushl	%ebp
.LCFI510:
	movl	%esp, %ebp
.LCFI511:
	subl	$4, %esp
.LCFI512:
	.loc 1 6345 0
	cmpl	$0, 12(%ebp)
	je	.L2882
	.loc 1 6346 0
	movl	$4096, -4(%ebp)
	jmp	.L2884
.L2882:
	.loc 1 6347 0
	cmpl	$1, 8(%ebp)
	jle	.L2885
	.loc 1 6348 0
	movl	$2048, -4(%ebp)
	jmp	.L2884
.L2885:
	.loc 1 6349 0
	cmpl	$0, 8(%ebp)
	jle	.L2887
	.loc 1 6350 0
	movl	$6144, -4(%ebp)
	jmp	.L2884
.L2887:
	.loc 1 6351 0
	movl	$0, -4(%ebp)
.L2884:
	movl	-4(%ebp), %eax
	.loc 1 6352 0
	leave
	ret
.LFE150:
	.size	lookup_flags, .-lookup_flags
	.type	qualify_lookup, @function
qualify_lookup:
.LFB151:
	.loc 1 6361 0
	pushl	%ebp
.LCFI513:
	movl	%esp, %ebp
.LCFI514:
	subl	$4, %esp
.LCFI515:
	.loc 1 6362 0
	cmpl	$0, 8(%ebp)
	jne	.L2891
	.loc 1 6363 0
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	jmp	.L2893
.L2891:
	.loc 1 6364 0
	movl	12(%ebp), %eax
	andl	$4096, %eax
	testl	%eax, %eax
	je	.L2894
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L2894
	.loc 1 6365 0
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	jmp	.L2893
.L2894:
	.loc 1 6366 0
	movl	12(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L2897
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2899
	movl	12(%ebp), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L2897
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2897
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2897
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2899
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2899
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L2897
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L2897
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L2897
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L2897
.L2899:
	.loc 1 6370 0
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
	jmp	.L2893
.L2897:
	.loc 1 6371 0
	movl	12(%ebp), %eax
	andl	$6144, %eax
	testl	%eax, %eax
	je	.L2909
	.loc 1 6372 0
	movl	$0, -4(%ebp)
	jmp	.L2893
.L2909:
	.loc 1 6373 0
	movl	8(%ebp), %eax
	movl	%eax, -4(%ebp)
.L2893:
	movl	-4(%ebp), %eax
	.loc 1 6374 0
	leave
	ret
.LFE151:
	.size	qualify_lookup, .-qualify_lookup
	.section	.rodata
.LC113:
	.string	"lookup of `%D' finds `%#D'"
	.align 4
.LC114:
	.string	"  instead of `%D' from dependent base class"
	.align 4
.LC115:
	.string	"  (use `typename %T::%D' if that's what you meant)"
	.text
	.type	warn_about_implicit_typename_lookup, @function
warn_about_implicit_typename_lookup:
.LFB152:
	.loc 1 6383 0
	pushl	%ebp
.LCFI516:
	movl	%esp, %ebp
.LCFI517:
	pushl	%ebx
.LCFI518:
	subl	$36, %esp
.LCFI519:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6384 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 6385 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6387 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L2913
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L2915
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L2913
.L2915:
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2917
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2917
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2917
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2917
	movl	-12(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2913
.L2917:
	movl	-12(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L2913
	movl	-12(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %eax
	cmpl	12(%ebp), %eax
	je	.L2926
.L2913:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2924
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	$0, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L2926
.L2924:
	.loc 1 6394 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC113@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 6396 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC114@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 6398 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC115@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L2926:
	.loc 1 6401 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE152:
	.size	warn_about_implicit_typename_lookup, .-warn_about_implicit_typename_lookup
	.section	.rodata
.LC116:
	.string	"name lookup of `%D' changed"
	.align 4
.LC117:
	.string	"  matches this `%D' under ISO standard rules"
	.align 4
.LC118:
	.string	"  matches this `%D' under old rules"
	.align 4
.LC119:
	.string	"name lookup of `%D' changed for new ISO `for' scoping"
	.align 4
.LC120:
	.string	"  cannot use obsolete binding at `%D' because it has a destructor"
	.align 4
.LC121:
	.string	"  using obsolete binding at `%D'"
	.text
.globl check_for_out_of_scope_variable
	.type	check_for_out_of_scope_variable, @function
check_for_out_of_scope_variable:
.LFB153:
	.loc 1 6412 0
	pushl	%ebp
.LCFI520:
	movl	%esp, %ebp
.LCFI521:
	pushl	%ebx
.LCFI522:
	subl	$36, %esp
.LCFI523:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6416 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L2928
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L2930
.L2928:
	.loc 1 6417 0
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2931
.L2930:
	.loc 1 6419 0
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6420 0
	jmp	.L2932
.L2933:
	.loc 1 6422 0
	movl	-8(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -8(%ebp)
.L2932:
	.loc 1 6420 0
	cmpl	$0, -8(%ebp)
	je	.L2934
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L2934
	movl	-8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L2933
.L2934:
	.loc 1 6423 0
	cmpl	$0, -8(%ebp)
	jne	.L2937
	.loc 1 6424 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -8(%ebp)
.L2937:
	.loc 1 6425 0
	cmpl	$0, -8(%ebp)
	je	.L2939
	.loc 1 6427 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L2941
	.loc 1 6429 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC116@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 6431 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC117@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
	.loc 1 6433 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC118@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
	.loc 1 6434 0
	movl	8(%ebp), %edx
	movzbl	37(%edx), %eax
	orl	$32, %eax
	movb	%al, 37(%edx)
.L2941:
	.loc 1 6436 0
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2931
.L2939:
	.loc 1 6441 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2943
	.loc 1 6442 0
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2931
.L2943:
	.loc 1 6444 0
	movl	8(%ebp), %edx
	movzbl	37(%edx), %eax
	orl	$32, %eax
	movb	%al, 37(%edx)
	.loc 1 6445 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	39(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L2945
	.loc 1 6447 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC119@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 6449 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC120@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 6450 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L2931
.L2945:
	.loc 1 6454 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC119@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 6456 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC121@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
	.loc 1 6459 0
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
.L2931:
	movl	-24(%ebp), %eax
	.loc 1 6460 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE153:
	.size	check_for_out_of_scope_variable, .-check_for_out_of_scope_variable
	.section	.rodata
	.align 4
.LC122:
	.string	"lookup of `%D' in the scope of `%#T' (`%#D') does not match lookup in the current scope (`%#D')"
	.text
	.type	lookup_name_real, @function
lookup_name_real:
.LFB154:
	.loc 1 6480 0
	pushl	%ebp
.LCFI524:
	movl	%esp, %ebp
.LCFI525:
	pushl	%esi
.LCFI526:
	pushl	%ebx
.LCFI527:
	subl	$112, %esp
.LCFI528:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6482 0
	movl	$0, -52(%ebp)
	.loc 1 6483 0
	movl	$0, -48(%ebp)
	.loc 1 6484 0
	movl	$0, -44(%ebp)
	.loc 1 6486 0
	movl	$0, -36(%ebp)
	.loc 1 6489 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 6492 0
	movl	only_namespace_names@GOTOFF(%ebx), %eax
	testl	%eax, %eax
	je	.L2949
	.loc 1 6493 0
	movl	$1, 20(%ebp)
.L2949:
	.loc 1 6495 0
	cmpl	$-2, 12(%ebp)
	jne	.L2951
.LBB67:
	.loc 1 6498 0
	movl	$0, -28(%ebp)
	.loc 1 6500 0
	movl	$1, -48(%ebp)
	.loc 1 6501 0
	movl	looking_for_typename@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 6503 0
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_flags
	movl	%eax, -40(%ebp)
	.loc 1 6505 0
	movl	looking_for_template@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2953
	.loc 1 6506 0
	orl	$8192, -40(%ebp)
.L2953:
	.loc 1 6508 0
	movl	got_scope@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2955
	.loc 1 6509 0
	movl	got_scope@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L2957
.L2955:
	.loc 1 6510 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	got_object@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L2957
	.loc 1 6511 0
	movl	got_object@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
.L2957:
	.loc 1 6513 0
	cmpl	$0, -28(%ebp)
	je	.L2959
	.loc 1 6515 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-28(%ebp), %eax
	jne	.L2961
	.loc 1 6516 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -100(%ebp)
	jmp	.L2963
.L2961:
	.loc 1 6517 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L2964
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L2964
	.loc 1 6518 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
.L2964:
	.loc 1 6520 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L2967
	.loc 1 6521 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	%eax, -28(%ebp)
.L2967:
	.loc 1 6523 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L2969
	.loc 1 6524 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
.L2969:
	.loc 1 6525 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L2971
.LBB68:
	.loc 1 6528 0
	leal	-76(%ebp), %eax
	movl	$0, (%eax)
	movl	$0, 4(%eax)
	movl	$0, 8(%eax)
	movl	$0, 12(%eax)
	movl	$0, 16(%eax)
	.loc 1 6529 0
	orl	$2, -40(%ebp)
	.loc 1 6530 0
	movl	-40(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-76(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	qualified_lookup_using_namespace@PLT
	xorl	$1, %eax
	testb	%al, %al
	je	.L2973
	.loc 1 6531 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -100(%ebp)
	jmp	.L2963
.L2973:
	.loc 1 6532 0
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-76(%ebp), %eax
	movl	%eax, (%esp)
	call	select_decl
	movl	%eax, -52(%ebp)
	jmp	.L2994
.L2971:
.LBE68:
	.loc 1 6534 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2976
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L2976
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L2976
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2976
	movl	-28(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L2981
.L2976:
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L2981
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L2981
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L2984
.L2981:
	.loc 1 6539 0
	movl	$0, -52(%ebp)
	.loc 1 6534 0
	jmp	.L2994
.L2984:
	.loc 1 6540 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	-28(%ebp), %eax
	jne	.L2985
	.loc 1 6541 0
	movl	8(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, -52(%ebp)
	jmp	.L2994
.L2985:
	.loc 1 6544 0
	movl	12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_member@PLT
	movl	%eax, -52(%ebp)
	.loc 1 6545 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L2987
	.loc 1 6546 0
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	type_access_control@PLT
.L2987:
	.loc 1 6550 0
	movl	got_scope@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L2994
	movl	got_scope@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-28(%ebp), %eax
	je	.L2994
	cmpl	$0, -52(%ebp)
	je	.L2994
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L2994
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L2994
	.loc 1 6554 0
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 1 6555 0
	movl	-52(%ebp), %eax
	movl	4(%eax), %edx
	movl	-52(%ebp), %eax
	movl	16(%eax), %ecx
	movl	got_scope@GOT(%ebx), %eax
	movl	(%eax), %esi
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%esi, (%esp)
	call	build_typename_type@PLT
	movl	%eax, -52(%ebp)
	.loc 1 6558 0
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -52(%ebp)
	jmp	.L2994
.L2959:
	.loc 1 6563 0
	movl	$0, -52(%ebp)
.L2994:
	.loc 1 6565 0
	movl	got_scope@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L2995
	.loc 1 6567 0
	movl	got_object@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3000
	cmpl	$0, -52(%ebp)
	je	.L3000
	.loc 1 6569 0
	movl	-52(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 6570 0
	movl	$0, -52(%ebp)
	jmp	.L3000
.L2951:
.LBE67:
	.loc 1 6575 0
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_flags
	movl	%eax, -40(%ebp)
	.loc 1 6577 0
	orl	$2, -40(%ebp)
.L3000:
	.loc 1 6583 0
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3001
.LBB69:
	.loc 1 6587 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3003
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3003
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -96(%ebp)
	jmp	.L3006
.L3003:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -96(%ebp)
.L3006:
	movl	-96(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 6588 0
	jmp	.L3007
.L3008:
.LBB70:
	.loc 1 6596 0
	movl	-24(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L3009
	.loc 1 6600 0
	movl	-24(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 6601 0
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_fnfields@PLT
	movl	%eax, -16(%ebp)
	.loc 1 6602 0
	cmpl	$0, -16(%ebp)
	je	.L3009
	.loc 1 6603 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-16(%ebp), %eax
	movl	%eax, -100(%ebp)
	jmp	.L2963
.L3009:
.LBE70:
	.loc 1 6589 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -24(%ebp)
.L3007:
	.loc 1 6588 0
	cmpl	$0, -24(%ebp)
	je	.L3012
	movl	-24(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L3008
.L3012:
	.loc 1 6606 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	$0, -100(%ebp)
	jmp	.L2963
.L3001:
.LBE69:
	.loc 1 6611 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L3014
	.loc 1 6612 0
	movl	$1, 16(%ebp)
.L3014:
	.loc 1 6614 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3016
.L3017:
.LBB71:
	.loc 1 6618 0
	movl	-32(%ebp), %eax
	movzbl	16(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L3018
	cmpl	$0, 16(%ebp)
	jne	.L3020
.L3018:
	.loc 1 6623 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	qualify_lookup
	testl	%eax, %eax
	je	.L3021
	.loc 1 6624 0
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L3023
.L3021:
	.loc 1 6625 0
	movl	-40(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L3024
	movl	-32(%ebp), %eax
	movl	8(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	qualify_lookup
	testl	%eax, %eax
	je	.L3024
	.loc 1 6627 0
	movl	-32(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 6625 0
	jmp	.L3023
.L3024:
	.loc 1 6629 0
	movl	$0, -12(%ebp)
.L3023:
	.loc 1 6632 0
	cmpl	$0, -12(%ebp)
	je	.L3027
	cmpl	$0, -48(%ebp)
	jne	.L3027
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L3027
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L3027
	.loc 1 6634 0
	movl	-32(%ebp), %eax
	movl	12(%eax), %eax
	movl	48(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	type_access_control@PLT
.L3027:
	.loc 1 6636 0
	cmpl	$0, -12(%ebp)
	je	.L3020
	cmpl	$0, -52(%ebp)
	je	.L3033
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L3033
	movl	-12(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L3033
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L3033
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	jne	.L3020
.L3033:
	.loc 1 6639 0
	cmpl	$0, -36(%ebp)
	je	.L3038
	cmpl	$0, -48(%ebp)
	jne	.L3038
	.loc 1 6640 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	warn_about_implicit_typename_lookup
.L3038:
	.loc 1 6641 0
	movl	-12(%ebp), %eax
	movl	%eax, -52(%ebp)
	.loc 1 6642 0
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L3041
	movl	-52(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L3041
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L3041
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L3041
	movl	$1, -92(%ebp)
	jmp	.L3046
.L3041:
	movl	$0, -92(%ebp)
.L3046:
	movl	-92(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 1 6644 0
	cmpl	$0, -36(%ebp)
	je	.L3047
.L3020:
.LBE71:
	.loc 1 6614 0
	movl	-32(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
.L3016:
	cmpl	$0, -32(%ebp)
	jne	.L3017
.L3047:
	.loc 1 6650 0
	cmpl	$0, -52(%ebp)
	jne	.L3048
	cmpl	$0, 16(%ebp)
	jne	.L3048
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3048
	.loc 1 6651 0
	cmpl	$0, -48(%ebp)
	sete	%al
	movzbl	%al, %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_nested_field@PLT
	movl	%eax, %edx
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	qualify_lookup
	movl	%eax, -52(%ebp)
.L3048:
	.loc 1 6654 0
	cmpl	$0, -52(%ebp)
	je	.L3052
	cmpl	$0, -36(%ebp)
	je	.L2995
.L3052:
	.loc 1 6656 0
	movl	$0, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	unqualified_namespace_lookup@PLT
	movl	%eax, -56(%ebp)
	.loc 1 6657 0
	cmpl	$0, -56(%ebp)
	je	.L2995
	.loc 1 6659 0
	cmpl	$0, -36(%ebp)
	je	.L3055
	cmpl	$0, -48(%ebp)
	jne	.L3055
	.loc 1 6660 0
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	warn_about_implicit_typename_lookup
.L3055:
	.loc 1 6661 0
	movl	-56(%ebp), %eax
	movl	%eax, -52(%ebp)
.L2995:
	.loc 1 6666 0
	cmpl	$0, -52(%ebp)
	je	.L3058
	.loc 1 6669 0
	cmpl	$0, -44(%ebp)
	je	.L3060
	movl	-44(%ebp), %eax
	cmpl	-52(%ebp), %eax
	je	.L3060
	.loc 1 6671 0
	movl	looking_for_typename@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3063
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L3063
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L3063
	movl	-52(%ebp), %eax
	movl	4(%eax), %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L3063
	.loc 1 6674 0
	movl	got_object@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-52(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC122@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L3063:
	.loc 1 6682 0
	movl	got_object@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L3060
	.loc 1 6683 0
	movl	-44(%ebp), %eax
	movl	%eax, -52(%ebp)
.L3060:
	.loc 1 6687 0
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L3072
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	really_overloaded_fn@PLT
	testl	%eax, %eax
	jne	.L3072
	.loc 1 6688 0
	movl	-52(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -52(%ebp)
	jmp	.L3072
.L3058:
	.loc 1 6690 0
	cmpl	$0, -44(%ebp)
	je	.L3072
	.loc 1 6691 0
	movl	-44(%ebp), %eax
	movl	%eax, -52(%ebp)
.L3072:
	.loc 1 6693 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-52(%ebp), %eax
	movl	%eax, -100(%ebp)
.L2963:
	movl	-100(%ebp), %eax
	.loc 1 6694 0
	addl	$112, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE154:
	.size	lookup_name_real, .-lookup_name_real
.globl lookup_name_nonclass
	.type	lookup_name_nonclass, @function
lookup_name_nonclass:
.LFB155:
	.loc 1 6699 0
	pushl	%ebp
.LCFI529:
	movl	%esp, %ebp
.LCFI530:
	subl	$24, %esp
.LCFI531:
	.loc 1 6700 0
	movl	$0, 12(%esp)
	movl	$1, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name_real
	.loc 1 6701 0
	leave
	ret
.LFE155:
	.size	lookup_name_nonclass, .-lookup_name_nonclass
.globl lookup_function_nonclass
	.type	lookup_function_nonclass, @function
lookup_function_nonclass:
.LFB156:
	.loc 1 6707 0
	pushl	%ebp
.LCFI532:
	movl	%esp, %ebp
.LCFI533:
	pushl	%ebx
.LCFI534:
	subl	$20, %esp
.LCFI535:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6708 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name_nonclass@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_arg_dependent@PLT
	.loc 1 6709 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE156:
	.size	lookup_function_nonclass, .-lookup_function_nonclass
.globl lookup_name_namespace_only
	.type	lookup_name_namespace_only, @function
lookup_name_namespace_only:
.LFB157:
	.loc 1 6714 0
	pushl	%ebp
.LCFI536:
	movl	%esp, %ebp
.LCFI537:
	subl	$24, %esp
.LCFI538:
	.loc 1 6716 0
	movl	$1, 12(%esp)
	movl	$1, 8(%esp)
	movl	$1, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name_real
	.loc 1 6717 0
	leave
	ret
.LFE157:
	.size	lookup_name_namespace_only, .-lookup_name_namespace_only
.globl lookup_name
	.type	lookup_name, @function
lookup_name:
.LFB158:
	.loc 1 6723 0
	pushl	%ebp
.LCFI539:
	movl	%esp, %ebp
.LCFI540:
	subl	$24, %esp
.LCFI541:
	.loc 1 6724 0
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name_real
	.loc 1 6725 0
	leave
	ret
.LFE158:
	.size	lookup_name, .-lookup_name
.globl lookup_name_current_level
	.type	lookup_name_current_level, @function
lookup_name_current_level:
.LFB159:
	.loc 1 6733 0
	pushl	%ebp
.LCFI542:
	movl	%esp, %ebp
.LCFI543:
	pushl	%ebx
.LCFI544:
	subl	$36, %esp
.LCFI545:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6735 0
	movl	$0, -8(%ebp)
	.loc 1 6737 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 6739 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3084
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3084
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3087
.L3084:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L3087:
	movl	-32(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 6740 0
	jmp	.L3088
.L3089:
	.loc 1 6741 0
	movl	-12(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -12(%ebp)
.L3088:
	.loc 1 6740 0
	movl	-12(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$3, %eax
	cmpb	$2, %al
	je	.L3089
	.loc 1 6743 0
	movl	-12(%ebp), %eax
	movzbl	61(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L3091
	.loc 1 6745 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6748 0
	cmpl	$0, -8(%ebp)
	je	.L3096
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L3096
	.loc 1 6749 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L3096
.L3091:
	.loc 1 6751 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L3096
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movzbl	16(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3096
.L3098:
	.loc 1 6756 0
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	12(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L3099
	.loc 1 6757 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L3101
	movl	8(%ebp), %eax
	movl	44(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3103
.L3101:
	movl	$0, -24(%ebp)
.L3103:
	movl	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	jmp	.L3104
.L3099:
	.loc 1 6759 0
	movl	-12(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$12, %eax
	cmpb	$8, %al
	jne	.L3096
	.loc 1 6760 0
	movl	-12(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 6763 0
	jmp	.L3098
.L3096:
	.loc 1 6766 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-8(%ebp), %eax
	movl	%eax, -28(%ebp)
.L3104:
	movl	-28(%ebp), %eax
	.loc 1 6767 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE159:
	.size	lookup_name_current_level, .-lookup_name_current_level
	.section	.rodata
	.type	__FUNCTION__.25360, @object
	.size	__FUNCTION__.25360, 26
__FUNCTION__.25360:
	.string	"lookup_type_current_level"
	.text
.globl lookup_type_current_level
	.type	lookup_type_current_level, @function
lookup_type_current_level:
.LFB160:
	.loc 1 6774 0
	pushl	%ebp
.LCFI546:
	movl	%esp, %ebp
.LCFI547:
	pushl	%ebx
.LCFI548:
	subl	$52, %esp
.LCFI549:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6775 0
	movl	$0, -24(%ebp)
	.loc 1 6777 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 6779 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3108
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3108
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L3111
.L3108:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L3111:
	movl	-36(%ebp), %edx
	movzbl	61(%edx), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L3112
	leal	__FUNCTION__.25360@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$6779, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3112:
	.loc 1 6781 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L3114
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_type_node@GOTOFF(%ebx), %eax
	cmpl	%eax, %edx
	je	.L3114
.LBB72:
	.loc 1 6784 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3117
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3117
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3120
.L3117:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L3120:
	movl	-32(%ebp), %eax
	movl	%eax, -8(%ebp)
.L3121:
	.loc 1 6787 0
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	purpose_member@PLT
	testl	%eax, %eax
	je	.L3122
	.loc 1 6788 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L3124
.L3122:
	.loc 1 6790 0
	movl	-8(%ebp), %eax
	movzbl	60(%eax), %eax
	andl	$12, %eax
	cmpb	$8, %al
	jne	.L3114
	.loc 1 6791 0
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6794 0
	jmp	.L3121
.L3114:
.LBE72:
	.loc 1 6797 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-24(%ebp), %edx
	movl	%edx, -28(%ebp)
.L3124:
	movl	-28(%ebp), %eax
	.loc 1 6798 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE160:
	.size	lookup_type_current_level, .-lookup_type_current_level
.globl begin_only_namespace_names
	.type	begin_only_namespace_names, @function
begin_only_namespace_names:
.LFB161:
	.loc 1 6802 0
	pushl	%ebp
.LCFI550:
	movl	%esp, %ebp
.LCFI551:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 6803 0
	movl	$1, only_namespace_names@GOTOFF(%ecx)
	.loc 1 6804 0
	popl	%ebp
	ret
.LFE161:
	.size	begin_only_namespace_names, .-begin_only_namespace_names
.globl end_only_namespace_names
	.type	end_only_namespace_names, @function
end_only_namespace_names:
.LFB162:
	.loc 1 6808 0
	pushl	%ebp
.LCFI552:
	movl	%esp, %ebp
.LCFI553:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 6809 0
	movl	$0, only_namespace_names@GOTOFF(%ecx)
	.loc 1 6810 0
	popl	%ebp
	ret
.LFE162:
	.size	end_only_namespace_names, .-end_only_namespace_names
.globl record_builtin_type
	.type	record_builtin_type, @function
record_builtin_type:
.LFB163:
	.loc 1 6822 0
	pushl	%ebp
.LCFI554:
	movl	%esp, %ebp
.LCFI555:
	pushl	%ebx
.LCFI556:
	subl	$36, %esp
.LCFI557:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6823 0
	movl	$0, -16(%ebp)
	movl	$0, -12(%ebp)
	.loc 1 6824 0
	movl	$0, -8(%ebp)
	.loc 1 6826 0
	movl	8(%ebp), %eax
	cmpl	$108, %eax
	jg	.L3132
	.loc 1 6827 0
	movl	8(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L3132:
	.loc 1 6828 0
	cmpl	$0, 12(%ebp)
	je	.L3134
	.loc 1 6829 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, -12(%ebp)
.L3134:
	.loc 1 6831 0
	movl	16(%ebp), %eax
	movzbl	39(%eax), %edx
	orl	$64, %edx
	movb	%dl, 39(%eax)
	.loc 1 6833 0
	cmpl	$0, -12(%ebp)
	je	.L3136
	.loc 1 6835 0
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, (%esp)
	call	pushdecl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6836 0
	movl	$0, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value@PLT
	.loc 1 6837 0
	movl	8(%ebp), %eax
	cmpl	$108, %eax
	jg	.L3136
	.loc 1 6839 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	set_namespace_binding@PLT
.L3136:
	.loc 1 6841 0
	cmpl	$0, -16(%ebp)
	je	.L3143
	.loc 1 6843 0
	cmpl	$0, -12(%ebp)
	je	.L3141
	.loc 1 6845 0
	movl	$0, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value@PLT
	.loc 1 6846 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	set_namespace_binding@PLT
	jmp	.L3143
.L3141:
	.loc 1 6850 0
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, (%esp)
	call	pushdecl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6851 0
	movl	$0, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	set_identifier_type_value@PLT
.L3143:
	.loc 1 6854 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE163:
	.size	record_builtin_type, .-record_builtin_type
	.type	record_builtin_java_type, @function
record_builtin_java_type:
.LFB164:
	.loc 1 6865 0
	pushl	%ebp
.LCFI558:
	movl	%esp, %ebp
.LCFI559:
	pushl	%ebx
.LCFI560:
	subl	$36, %esp
.LCFI561:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6867 0
	cmpl	$0, 12(%ebp)
	jle	.L3145
	.loc 1 6868 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	make_signed_type@PLT
	movl	%eax, -12(%ebp)
	jmp	.L3147
.L3145:
	.loc 1 6869 0
	cmpl	$-32, 12(%ebp)
	jle	.L3148
	.loc 1 6871 0
	movl	12(%ebp), %eax
	negl	%eax
	movl	%eax, (%esp)
	call	make_unsigned_type@PLT
	movl	%eax, -12(%ebp)
	jmp	.L3147
.L3148:
	.loc 1 6876 0
	movl	$8, (%esp)
	call	make_node@PLT
	movl	%eax, -12(%ebp)
	.loc 1 6877 0
	movl	12(%ebp), %eax
	negl	%eax
	andw	$511, %ax
	movl	-12(%ebp), %edx
	movl	%eax, %ecx
	andw	$511, %cx
	movzwl	36(%edx), %eax
	andw	$-512, %ax
	orl	%ecx, %eax
	movw	%ax, 36(%edx)
	.loc 1 6878 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
.L3147:
	.loc 1 6880 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$109, (%esp)
	call	record_builtin_type@PLT
	.loc 1 6881 0
	movl	-12(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 6886 0
	movl	-8(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$64, %eax
	movb	%al, 33(%edx)
	.loc 1 6888 0
	movl	-12(%ebp), %edx
	movzbl	39(%edx), %eax
	orl	$8, %eax
	movb	%al, 39(%edx)
	.loc 1 6889 0
	movl	-12(%ebp), %eax
	.loc 1 6890 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE164:
	.size	record_builtin_java_type, .-record_builtin_java_type
	.type	record_unknown_type, @function
record_unknown_type:
.LFB165:
	.loc 1 6898 0
	pushl	%ebp
.LCFI562:
	movl	%esp, %ebp
.LCFI563:
	pushl	%ebx
.LCFI564:
	subl	$36, %esp
.LCFI565:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6899 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, (%esp)
	call	pushdecl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 6901 0
	movl	-8(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$64, %eax
	movb	%al, 33(%edx)
	.loc 1 6902 0
	movl	-8(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$1, %eax
	movb	%al, 33(%edx)
	.loc 1 6903 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	20(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 6904 0
	movl	8(%ebp), %eax
	movl	$1, 40(%eax)
	.loc 1 6905 0
	movl	8(%ebp), %edx
	movzbl	39(%edx), %eax
	andl	$127, %eax
	movb	%al, 39(%edx)
	.loc 1 6906 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movl	8(%ebp), %edx
	leal	(%eax,%eax), %ecx
	movzbl	37(%edx), %eax
	andl	$1, %eax
	orl	%ecx, %eax
	movb	%al, 37(%edx)
	.loc 1 6907 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE165:
	.size	record_unknown_type, .-record_unknown_type
	.section	.rodata
.LC123:
	.string	"C++"
.LC124:
	.string	"C"
.LC125:
	.string	"Java"
.LC126:
	.string	"__ct"
.LC127:
	.string	"__base_ctor"
.LC128:
	.string	"__comp_ctor"
.LC129:
	.string	"__dt"
.LC130:
	.string	"__comp_dtor"
.LC131:
	.string	"__base_dtor"
.LC132:
	.string	"__deleting_dtor"
.LC133:
	.string	"__in_chrg"
.LC134:
	.string	"nelts"
.LC135:
	.string	"this"
.LC136:
	.string	"__delta"
.LC137:
	.string	"__pfn"
.LC138:
	.string	"_vptr"
.LC139:
	.string	"__vtt_parm"
.LC140:
	.string	"std"
	.section	.data.rel.ro,"aw",@progbits
	.align 32
	.type	predefined_identifiers.25492, @object
	.size	predefined_identifiers.25492, 228
predefined_identifiers.25492:
	.long	.LC123
	.long	cp_global_trees+252
	.long	0
	.long	.LC124
	.long	cp_global_trees+248
	.long	0
	.long	.LC125
	.long	cp_global_trees+256
	.long	0
	.long	.LC126
	.long	cp_global_trees+188
	.long	1
	.long	.LC127
	.long	cp_global_trees+196
	.long	1
	.long	.LC128
	.long	cp_global_trees+192
	.long	1
	.long	.LC129
	.long	cp_global_trees+200
	.long	1
	.long	.LC130
	.long	cp_global_trees+204
	.long	1
	.long	.LC131
	.long	cp_global_trees+208
	.long	1
	.long	.LC132
	.long	cp_global_trees+212
	.long	1
	.long	.LC133
	.long	cp_global_trees+220
	.long	0
	.long	.LC134
	.long	cp_global_trees+228
	.long	0
	.long	.LC135
	.long	cp_global_trees+232
	.long	0
	.long	.LC136
	.long	cp_global_trees+216
	.long	0
	.long	.LC137
	.long	cp_global_trees+236
	.long	0
	.long	.LC138
	.long	cp_global_trees+240
	.long	0
	.long	.LC139
	.long	cp_global_trees+224
	.long	0
	.long	.LC140
	.long	cp_global_trees+244
	.long	0
	.long	0
	.long	0
	.long	0
	.text
	.type	initialize_predefined_identifiers, @function
initialize_predefined_identifiers:
.LFB166:
	.loc 1 6926 0
	pushl	%ebp
.LCFI566:
	movl	%esp, %ebp
.LCFI567:
	pushl	%esi
.LCFI568:
	pushl	%ebx
.LCFI569:
	subl	$32, %esp
.LCFI570:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6952 0
	leal	predefined_identifiers.25492@GOTOFF(%ebx), %eax
	movl	%eax, -12(%ebp)
	jmp	.L3154
.L3155:
	.loc 1 6954 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %esi
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, (%esi)
	.loc 1 6955 0
	movl	-12(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L3156
	.loc 1 6956 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	(%eax), %edx
	movzbl	11(%edx), %eax
	orl	$8, %eax
	movb	%al, 11(%edx)
.L3156:
	.loc 1 6952 0
	addl	$12, -12(%ebp)
.L3154:
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3155
	.loc 1 6958 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE166:
	.size	initialize_predefined_identifiers, .-initialize_predefined_identifiers
	.section	.rodata
	.type	__FUNCTION__.25509, @object
	.size	__FUNCTION__.25509, 25
__FUNCTION__.25509:
	.string	"cxx_init_decl_processing"
.LC141:
	.string	"__java_byte"
.LC142:
	.string	"__java_short"
.LC143:
	.string	"__java_int"
.LC144:
	.string	"__java_long"
.LC145:
	.string	"__java_float"
.LC146:
	.string	"__java_double"
.LC147:
	.string	"__java_char"
.LC148:
	.string	"__java_boolean"
.LC149:
	.string	"bool"
.LC150:
	.string	"unknown type"
.LC151:
	.string	"__vtbl_ptr_type"
.LC152:
	.string	"__cxxabiv1"
.LC153:
	.string	"global type"
.LC154:
	.string	"bad_alloc"
.LC155:
	.string	"__cxa_pure_virtual"
	.text
.globl cxx_init_decl_processing
	.type	cxx_init_decl_processing, @function
cxx_init_decl_processing:
.LFB167:
	.loc 1 6967 0
	pushl	%ebp
.LCFI571:
	movl	%esp, %ebp
.LCFI572:
	pushl	%esi
.LCFI573:
	pushl	%ebx
.LCFI574:
	subl	$64, %esp
.LCFI575:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 6972 0
	call	initialize_predefined_identifiers
	.loc 1 6975 0
	movl	lang_missing_noreturn_ok_p@GOT(%ebx), %edx
	leal	cp_missing_noreturn_ok_p@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 6978 0
	call	push_to_top_level@PLT
	.loc 1 6981 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3161
	leal	__FUNCTION__.25509@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$6981, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3161:
	.loc 1 6982 0
	movl	$2, 4(%esp)
	leal	.LC25@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%eax, (%esp)
	call	push_namespace@PLT
	.loc 1 6983 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 6984 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$0, 32(%eax)
	.loc 1 6987 0
	movl	flag_permissive@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3163
	.loc 1 6988 0
	movl	flag_pedantic_errors@GOT(%ebx), %eax
	movl	$1, (%eax)
.L3163:
	.loc 1 6989 0
	movl	flag_no_inline@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3165
	.loc 1 6991 0
	movl	flag_inline_trees@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 6992 0
	movl	flag_no_inline@GOT(%ebx), %eax
	movl	$1, (%eax)
.L3165:
	.loc 1 6994 0
	movl	flag_inline_functions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3167
	.loc 1 6996 0
	movl	flag_inline_trees@GOT(%ebx), %eax
	movl	$2, (%eax)
	.loc 1 6997 0
	movl	flag_inline_functions@GOT(%ebx), %eax
	movl	$0, (%eax)
.L3167:
	.loc 1 7007 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	248(%eax), %eax
	movl	%eax, 32(%edx)
	.loc 1 7009 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 7011 0
	movl	$0, (%esp)
	call	copy_to_current_binding_level
	.loc 1 7015 0
	movl	$0, free_binding_level@GOTOFF(%ebx)
	.loc 1 7017 0
	movl	flag_signed_char@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	build_common_tree_nodes@PLT
	.loc 1 7019 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_tree_list@PLT
	movl	%eax, %edx
	movl	error_mark_list@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 7020 0
	movl	error_mark_list@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 7023 0
	movl	$0, (%esp)
	call	pushlevel@PLT
	.loc 1 7024 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3169
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3169
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -56(%ebp)
	jmp	.L3172
.L3169:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -56(%ebp)
.L3172:
	movl	$256, (%esp)
	call	binding_table_new
	movl	-56(%ebp), %edx
	movl	%eax, 20(%edx)
	.loc 1 7026 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	%eax, -52(%ebp)
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3173
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3173
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L3176
.L3173:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -48(%ebp)
.L3176:
	movl	-48(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%edx, 8(%eax)
	.loc 1 7027 0
	call	declare_namespace_level
	.loc 1 7029 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3177
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3177
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L3180
.L3177:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -44(%ebp)
.L3180:
	leal	.LC27@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14, 4(%esp)
	movl	$200, (%esp)
	call	varray_init@PLT
	movl	-44(%ebp), %edx
	movl	%eax, 12(%edx)
	.loc 1 7034 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	244(%eax), %eax
	movl	%eax, (%esp)
	call	push_namespace@PLT
	.loc 1 7035 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 128(%eax)
	.loc 1 7036 0
	call	pop_namespace@PLT
	.loc 1 7038 0
	call	c_common_nodes_and_builtins@PLT
	.loc 1 7040 0
	movl	$8, 4(%esp)
	leal	.LC141@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 7041 0
	movl	$16, 4(%esp)
	leal	.LC142@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 4(%eax)
	.loc 1 7042 0
	movl	$32, 4(%esp)
	leal	.LC143@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 8(%eax)
	.loc 1 7043 0
	movl	$64, 4(%esp)
	leal	.LC144@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 12(%eax)
	.loc 1 7044 0
	movl	$-32, 4(%esp)
	leal	.LC145@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 16(%eax)
	.loc 1 7045 0
	movl	$-64, 4(%esp)
	leal	.LC146@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 20(%eax)
	.loc 1 7046 0
	movl	$-16, 4(%esp)
	leal	.LC147@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 24(%eax)
	.loc 1 7047 0
	movl	$-1, 4(%esp)
	leal	.LC148@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	record_builtin_java_type
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 28(%eax)
	.loc 1 7049 0
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$2, (%esp)
	movl	$0, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	integer_two_node@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 7050 0
	movl	integer_two_node@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 7051 0
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$3, (%esp)
	movl	$0, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	integer_three_node@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 7052 0
	movl	integer_three_node@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 7054 0
	movl	$8, (%esp)
	call	make_unsigned_type@PLT
	movl	%eax, %edx
	movl	c_global_trees@GOT(%ebx), %eax
	movl	%edx, 60(%eax)
	.loc 1 7055 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %eax
	movb	$12, 8(%eax)
	.loc 1 7056 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %esi
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$1, (%esp)
	movl	$0, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, 64(%esi)
	.loc 1 7057 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %eax
	movl	64(%eax), %edx
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 7058 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %edx
	movzwl	36(%edx), %eax
	andw	$-512, %ax
	orl	$1, %eax
	movw	%ax, 36(%edx)
	.loc 1 7059 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC149@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	$70, (%esp)
	call	record_builtin_type@PLT
	.loc 1 7060 0
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$0, (%esp)
	movl	$0, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	c_global_trees@GOT(%ebx), %eax
	movl	%edx, 68(%eax)
	.loc 1 7061 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	68(%eax), %edx
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 7062 0
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$1, (%esp)
	movl	$0, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, %edx
	movl	c_global_trees@GOT(%ebx), %eax
	movl	%edx, 64(%eax)
	.loc 1 7063 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	64(%eax), %edx
	movl	c_global_trees@GOT(%ebx), %eax
	movl	60(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 7065 0
	movl	$0, 4(%esp)
	movl	$0, (%esp)
	call	build_tree_list@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 260(%eax)
	.loc 1 7071 0
	movl	global_trees@GOT(%ebx), %eax
	movl	144(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 40(%eax)
	.loc 1 7072 0
	movl	global_trees@GOT(%ebx), %eax
	movl	144(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 44(%eax)
	.loc 1 7074 0
	movl	global_trees@GOT(%ebx), %eax
	movl	136(%eax), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 52(%eax)
	.loc 1 7075 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, -36(%ebp)
	.loc 1 7076 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, -32(%ebp)
	.loc 1 7080 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	260(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, -32(%ebp)
	.loc 1 7085 0
	movl	$25, (%esp)
	call	make_node@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 116(%eax)
	.loc 1 7086 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	116(%eax), %edx
	leal	.LC150@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	record_unknown_type
	.loc 1 7089 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	116(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	116(%eax), %eax
	movl	%eax, 4(%edx)
	.loc 1 7093 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	116(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	116(%eax), %eax
	movl	%eax, 44(%edx)
	.loc 1 7094 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	116(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	116(%eax), %eax
	movl	%eax, 48(%edx)
.LBB73:
	.loc 1 7099 0
	movl	$24, (%esp)
	call	make_node@PLT
	movl	%eax, -28(%ebp)
	.loc 1 7100 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	-28(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 7101 0
	movl	-28(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 1 7102 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
	.loc 1 7104 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 36(%eax)
.LBE73:
	.loc 1 7106 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	36(%eax), %eax
	movl	%eax, 8(%esp)
	leal	.LC151@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	$109, (%esp)
	call	record_builtin_type@PLT
	.loc 1 7108 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	36(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	build_cplus_array_type@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 120(%eax)
	.loc 1 7110 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	120(%eax), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
	.loc 1 7111 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	120(%eax), %eax
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	build_qualified_type@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 120(%eax)
	.loc 1 7112 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	120(%eax), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$109, (%esp)
	call	record_builtin_type@PLT
	.loc 1 7113 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	36(%eax), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 124(%eax)
	.loc 1 7114 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	124(%eax), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
	.loc 1 7115 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	124(%eax), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$109, (%esp)
	call	record_builtin_type@PLT
	.loc 1 7117 0
	movl	$10, 4(%esp)
	leal	.LC152@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%eax, (%esp)
	call	push_namespace@PLT
	.loc 1 7118 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 132(%eax)
	.loc 1 7119 0
	call	pop_namespace@PLT
	.loc 1 7121 0
	movl	$25, (%esp)
	call	make_node@PLT
	movl	%eax, global_type_node@GOTOFF(%ebx)
	.loc 1 7122 0
	movl	global_type_node@GOTOFF(%ebx), %edx
	leal	.LC153@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	record_unknown_type
	.loc 1 7125 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	movl	%eax, 32(%edx)
.LBB74:
	.loc 1 7131 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	244(%eax), %eax
	movl	%eax, (%esp)
	call	push_namespace@PLT
	.loc 1 7132 0
	movl	$9, 4(%esp)
	leal	.LC154@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	$1, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$1, (%esp)
	call	xref_tag@PLT
	movl	%eax, -24(%ebp)
	.loc 1 7135 0
	call	pop_namespace@PLT
	.loc 1 7136 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	140(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, -12(%ebp)
	.loc 1 7141 0
	movl	$-1, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	add_exception_specifier@PLT
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7144 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	260(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, -16(%ebp)
	.loc 1 7145 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$181, (%esp)
	call	push_cp_library_fn
	.loc 1 7146 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$182, (%esp)
	call	push_cp_library_fn
	.loc 1 7147 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$183, (%esp)
	call	push_cp_library_fn
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 148(%eax)
	.loc 1 7148 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$184, (%esp)
	call	push_cp_library_fn
.LBE74:
	.loc 1 7151 0
	movl	-36(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC155@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	build_library_fn_ptr@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 144(%eax)
	.loc 1 7155 0
	call	init_class_processing@PLT
	.loc 1 7156 0
	call	init_search_processing@PLT
	.loc 1 7157 0
	call	init_rtti_processing@PLT
	.loc 1 7159 0
	movl	flag_exceptions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3181
	.loc 1 7160 0
	call	init_exception_processing@PLT
.L3181:
	.loc 1 7162 0
	call	supports_one_only@PLT
	testl	%eax, %eax
	jne	.L3183
	.loc 1 7163 0
	movl	flag_weak@GOT(%ebx), %eax
	movl	$0, (%eax)
.L3183:
	.loc 1 7165 0
	movl	make_fname_decl@GOT(%ebx), %edx
	leal	cp_make_fname_decl@GOTOFF(%ebx), %eax
	movl	%eax, (%edx)
	.loc 1 7166 0
	call	start_fname_decls@PLT
	.loc 1 7169 0
	call	using_eh_for_cleanups@PLT
	.loc 1 7173 0
	movl	flag_writable_strings@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3187
	.loc 1 7174 0
	movl	flag_const_strings@GOT(%ebx), %eax
	movl	$0, (%eax)
.L3187:
	.loc 1 7175 0
	addl	$64, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE167:
	.size	cxx_init_decl_processing, .-cxx_init_decl_processing
.globl cp_fname_init
	.type	cp_fname_init, @function
cp_fname_init:
.LFB168:
	.loc 1 7184 0
	pushl	%ebp
.LCFI576:
	movl	%esp, %ebp
.LCFI577:
	pushl	%edi
.LCFI578:
	pushl	%ebx
.LCFI579:
	subl	$32, %esp
.LCFI580:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7185 0
	movl	$0, -24(%ebp)
	.loc 1 7187 0
	movl	$0, -16(%ebp)
	.loc 1 7188 0
	movl	$0, -12(%ebp)
	.loc 1 7190 0
	cmpl	$0, 8(%ebp)
	je	.L3189
	.loc 1 7192 0
	movl	8(%ebp), %eax
	movl	$-1, %ecx
	movl	%eax, -28(%ebp)
	movl	$0, %eax
	cld
	movl	-28(%ebp), %edi
	repnz
	scasb
	movl	%ecx, %eax
	notl	%eax
	subl	$1, %eax
	movl	%eax, -12(%ebp)
	.loc 1 7193 0
	movl	-12(%ebp), %eax
	movl	$0, %edx
	movl	$0, 8(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	size_int_wide@PLT
	movl	%eax, (%esp)
	call	build_index_type@PLT
	movl	%eax, -24(%ebp)
	.loc 1 7194 0
	movl	-12(%ebp), %eax
	addl	$1, %eax
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_string@PLT
	movl	%eax, -16(%ebp)
.L3189:
	.loc 1 7197 0
	movl	integer_types@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	build_qualified_type@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7198 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cplus_array_type@PLT
	movl	%eax, -20(%ebp)
	.loc 1 7200 0
	cmpl	$0, -16(%ebp)
	je	.L3191
	.loc 1 7201 0
	movl	-16(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%edx)
	jmp	.L3193
.L3191:
	.loc 1 7205 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	build@PLT
	movl	%eax, -16(%ebp)
.L3193:
	.loc 1 7207 0
	movl	-16(%ebp), %eax
	.loc 1 7208 0
	addl	$32, %esp
	popl	%ebx
	popl	%edi
	popl	%ebp
	ret
.LFE168:
	.size	cp_fname_init, .-cp_fname_init
	.type	cp_make_fname_decl, @function
cp_make_fname_decl:
.LFB169:
	.loc 1 7220 0
	pushl	%ebp
.LCFI581:
	movl	%esp, %ebp
.LCFI582:
	pushl	%ebx
.LCFI583:
	subl	$36, %esp
.LCFI584:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7222 0
	cmpl	$0, 12(%ebp)
	je	.L3196
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L3198
.L3196:
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	fname_as_string@PLT
	movl	%eax, -24(%ebp)
	jmp	.L3199
.L3198:
	movl	$0, -24(%ebp)
.L3199:
	movl	-24(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 7223 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_fname_init@PLT
	movl	%eax, -12(%ebp)
	.loc 1 7224 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$35, (%esp)
	call	build_decl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 7227 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 56(%eax)
	.loc 1 7228 0
	movl	12(%ebp), %eax
	andl	$1, %eax
	movl	-8(%ebp), %edx
	movl	%eax, %ecx
	andl	$1, %ecx
	movzbl	11(%edx), %eax
	andl	$-2, %eax
	orl	%ecx, %eax
	movb	%al, 11(%edx)
	.loc 1 7230 0
	movl	-8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$4, %eax
	movb	%al, 10(%edx)
	.loc 1 7231 0
	movl	-8(%ebp), %edx
	movzbl	9(%edx), %eax
	orl	$16, %eax
	movb	%al, 9(%edx)
	.loc 1 7232 0
	movl	-8(%ebp), %edx
	movzbl	35(%edx), %eax
	orl	$8, %eax
	movb	%al, 35(%edx)
	.loc 1 7233 0
	movl	-8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 7235 0
	movl	-8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$1, %eax
	movb	%al, 10(%edx)
	.loc 1 7237 0
	movl	$128, 12(%esp)
	movl	$0, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_finish_decl@PLT
	.loc 1 7239 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3200
	.loc 1 7240 0
	movl	$0, 12(%esp)
	movl	$1, 8(%esp)
	movl	$0, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	rest_of_decl_compilation@PLT
.L3200:
	.loc 1 7242 0
	movl	-8(%ebp), %eax
	.loc 1 7243 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE169:
	.size	cp_make_fname_decl, .-cp_make_fname_decl
	.type	builtin_function_1, @function
builtin_function_1:
.LFB170:
	.loc 1 7266 0
	pushl	%ebp
.LCFI585:
	movl	%esp, %ebp
.LCFI586:
	pushl	%esi
.LCFI587:
	pushl	%ebx
.LCFI588:
	subl	$32, %esp
.LCFI589:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7267 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	build_library_fn_1
	movl	%eax, -12(%ebp)
	.loc 1 7268 0
	movl	-12(%ebp), %ecx
	movl	24(%ebp), %eax
	andl	$3, %eax
	andl	$3, %eax
	leal	0(,%eax,4), %edx
	movzbl	36(%ecx), %eax
	andl	$-13, %eax
	orl	%edx, %eax
	movb	%al, 36(%ecx)
	.loc 1 7269 0
	movl	-12(%ebp), %edx
	movl	20(%ebp), %eax
	movl	%eax, 40(%edx)
	.loc 1 7270 0
	movl	-12(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 7272 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	.loc 1 7277 0
	cmpl	$0, 28(%ebp)
	je	.L3204
	.loc 1 7278 0
	movl	-12(%ebp), %esi
	movl	28(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, 92(%esi)
.L3204:
	.loc 1 7279 0
	movl	-12(%ebp), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	.loc 1 7283 0
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L3206
	movl	8(%ebp), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	je	.L3208
.L3206:
	.loc 1 7284 0
	movl	-12(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	7(%edx), %eax
	orl	$4, %eax
	movb	%al, 7(%edx)
.L3208:
	.loc 1 7287 0
	cmpl	$0, 32(%ebp)
	je	.L3209
	.loc 1 7288 0
	movl	$16, 8(%esp)
	movl	32(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_attributes@PLT
	jmp	.L3211
.L3209:
	.loc 1 7290 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	leal	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_attributes@PLT
.L3211:
	.loc 1 7292 0
	movl	-12(%ebp), %eax
	.loc 1 7293 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE170:
	.size	builtin_function_1, .-builtin_function_1
.globl builtin_function
	.type	builtin_function, @function
builtin_function:
.LFB171:
	.loc 1 7319 0
	pushl	%ebp
.LCFI590:
	movl	%esp, %ebp
.LCFI591:
	pushl	%ebx
.LCFI592:
	subl	$36, %esp
.LCFI593:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7322 0
	movl	8(%ebp), %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	je	.L3214
	.loc 1 7324 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	244(%eax), %eax
	movl	%eax, (%esp)
	call	push_namespace@PLT
	.loc 1 7325 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	28(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	builtin_function_1
	.loc 1 7326 0
	call	pop_namespace@PLT
.L3214:
	.loc 1 7329 0
	movl	28(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	24(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	builtin_function_1
	.loc 1 7331 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE171:
	.size	builtin_function, .-builtin_function
	.type	build_library_fn_1, @function
build_library_fn_1:
.LFB172:
	.loc 1 7341 0
	pushl	%ebp
.LCFI594:
	movl	%esp, %ebp
.LCFI595:
	pushl	%ebx
.LCFI596:
	subl	$36, %esp
.LCFI597:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7342 0
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$31, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 7343 0
	movl	-8(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$1, %eax
	movb	%al, 33(%edx)
	.loc 1 7344 0
	movl	-8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movb	%al, 10(%edx)
	.loc 1 7345 0
	movl	-8(%ebp), %edx
	movzbl	35(%edx), %eax
	orl	$8, %eax
	movb	%al, 35(%edx)
	.loc 1 7346 0
	movl	-8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$2, %eax
	movb	%al, 10(%edx)
	.loc 1 7347 0
	movl	-8(%ebp), %eax
	movl	136(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 40(%edx)
	.loc 1 7348 0
	movl	-8(%ebp), %eax
	movl	136(%eax), %eax
	movb	$0, 4(%eax)
	.loc 1 7349 0
	movl	-8(%ebp), %eax
	.loc 1 7350 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE172:
	.size	build_library_fn_1, .-build_library_fn_1
.globl build_library_fn
	.type	build_library_fn, @function
build_library_fn:
.LFB173:
	.loc 1 7360 0
	pushl	%ebp
.LCFI598:
	movl	%esp, %ebp
.LCFI599:
	subl	$24, %esp
.LCFI600:
	.loc 1 7361 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_library_fn_1
	.loc 1 7362 0
	leave
	ret
.LFE173:
	.size	build_library_fn, .-build_library_fn
	.type	build_cp_library_fn, @function
build_cp_library_fn:
.LFB174:
	.loc 1 7371 0
	pushl	%ebp
.LCFI601:
	movl	%esp, %ebp
.LCFI602:
	pushl	%ebx
.LCFI603:
	subl	$36, %esp
.LCFI604:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7372 0
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_library_fn_1
	movl	%eax, -8(%ebp)
	.loc 1 7373 0
	movl	16(%ebp), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L3222
	movl	16(%ebp), %eax
	movl	76(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3222
	movl	$1, -28(%ebp)
	jmp	.L3225
.L3222:
	movl	$0, -28(%ebp)
.L3225:
	movzbl	-28(%ebp), %eax
	andl	$1, %eax
	movl	-8(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	10(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 7374 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L3226
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3228
.L3226:
	movl	$0, -24(%ebp)
.L3228:
	movl	-8(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 56(%eax)
	.loc 1 7375 0
	movl	-8(%ebp), %eax
	movl	136(%eax), %eax
	movb	$1, 4(%eax)
	.loc 1 7376 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	set_mangled_name_for_decl@PLT
	.loc 1 7377 0
	movl	-8(%ebp), %eax
	.loc 1 7378 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE174:
	.size	build_cp_library_fn, .-build_cp_library_fn
.globl build_library_fn_ptr
	.type	build_library_fn_ptr, @function
build_library_fn_ptr:
.LFB175:
	.loc 1 7387 0
	pushl	%ebp
.LCFI605:
	movl	%esp, %ebp
.LCFI606:
	pushl	%ebx
.LCFI607:
	subl	$20, %esp
.LCFI608:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7388 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_library_fn@PLT
	.loc 1 7389 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE175:
	.size	build_library_fn_ptr, .-build_library_fn_ptr
.globl build_cp_library_fn_ptr
	.type	build_cp_library_fn_ptr, @function
build_cp_library_fn_ptr:
.LFB176:
	.loc 1 7398 0
	pushl	%ebp
.LCFI609:
	movl	%esp, %ebp
.LCFI610:
	pushl	%ebx
.LCFI611:
	subl	$20, %esp
.LCFI612:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7399 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	%edx, (%esp)
	call	build_cp_library_fn
	.loc 1 7400 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE176:
	.size	build_cp_library_fn_ptr, .-build_cp_library_fn_ptr
.globl push_library_fn
	.type	push_library_fn, @function
push_library_fn:
.LFB177:
	.loc 1 7408 0
	pushl	%ebp
.LCFI613:
	movl	%esp, %ebp
.LCFI614:
	pushl	%ebx
.LCFI615:
	subl	$36, %esp
.LCFI616:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7409 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_library_fn@PLT
	movl	%eax, -8(%ebp)
	.loc 1 7410 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl_top_level@PLT
	.loc 1 7411 0
	movl	-8(%ebp), %eax
	.loc 1 7412 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE177:
	.size	push_library_fn, .-push_library_fn
	.type	push_cp_library_fn, @function
push_cp_library_fn:
.LFB178:
	.loc 1 7421 0
	pushl	%ebp
.LCFI617:
	movl	%esp, %ebp
.LCFI618:
	pushl	%ebx
.LCFI619:
	subl	$36, %esp
.LCFI620:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7424 0
	movl	8(%ebp), %eax
	movl	operator_name_info@GOT(%ebx), %edx
	sall	$4, %eax
	movl	(%eax,%edx), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_cp_library_fn
	movl	%eax, -8(%ebp)
	.loc 1 7425 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	.loc 1 7426 0
	movl	-8(%ebp), %eax
	.loc 1 7427 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE178:
	.size	push_cp_library_fn, .-push_cp_library_fn
.globl push_void_library_fn
	.type	push_void_library_fn, @function
push_void_library_fn:
.LFB179:
	.loc 1 7435 0
	pushl	%ebp
.LCFI621:
	movl	%esp, %ebp
.LCFI622:
	pushl	%ebx
.LCFI623:
	subl	$36, %esp
.LCFI624:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7436 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_function_type@PLT
	movl	%eax, -8(%ebp)
	.loc 1 7437 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_library_fn@PLT
	.loc 1 7438 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE179:
	.size	push_void_library_fn, .-push_void_library_fn
.globl push_throw_library_fn
	.type	push_throw_library_fn, @function
push_throw_library_fn:
.LFB180:
	.loc 1 7446 0
	pushl	%ebp
.LCFI625:
	movl	%esp, %ebp
.LCFI626:
	pushl	%ebx
.LCFI627:
	subl	$36, %esp
.LCFI628:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7447 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_library_fn@PLT
	movl	%eax, -8(%ebp)
	.loc 1 7448 0
	movl	-8(%ebp), %edx
	movzbl	9(%edx), %eax
	orl	$8, %eax
	movb	%al, 9(%edx)
	.loc 1 7449 0
	movl	-8(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$-3, %eax
	movb	%al, 10(%edx)
	.loc 1 7450 0
	movl	-8(%ebp), %eax
	.loc 1 7451 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE180:
	.size	push_throw_library_fn, .-push_throw_library_fn
.globl cxx_insert_default_attributes
	.type	cxx_insert_default_attributes, @function
cxx_insert_default_attributes:
.LFB181:
	.loc 1 7459 0
	pushl	%ebp
.LCFI629:
	movl	%esp, %ebp
.LCFI630:
	pushl	%ebx
.LCFI631:
	subl	$4, %esp
.LCFI632:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7460 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3252
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3245
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L3252
.L3245:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L3247
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L3252
	jmp	.L3249
.L3247:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L3249
	.loc 1 7461 0
	jmp	.L3252
.L3249:
	.loc 1 7462 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L3252
	.loc 1 7464 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	c_common_insert_default_attributes@PLT
.L3252:
	.loc 1 7465 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE181:
	.size	cxx_insert_default_attributes, .-cxx_insert_default_attributes
	.section	.rodata
	.align 4
.LC156:
	.string	"an anonymous union cannot have function members"
	.align 4
.LC157:
	.string	"member %#D' with constructor not allowed in anonymous aggregate"
	.align 4
.LC158:
	.string	"member %#D' with destructor not allowed in anonymous aggregate"
	.align 4
.LC159:
	.string	"member %#D' with copy assignment operator not allowed in anonymous aggregate"
	.text
.globl fixup_anonymous_aggr
	.type	fixup_anonymous_aggr, @function
fixup_anonymous_aggr:
.LFB182:
	.loc 1 7480 0
	pushl	%ebp
.LCFI633:
	movl	%esp, %ebp
.LCFI634:
	pushl	%ebx
.LCFI635:
	subl	$36, %esp
.LCFI636:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7484 0
	movl	8(%ebp), %edx
	movzbl	39(%edx), %eax
	andl	$-3, %eax
	movb	%al, 39(%edx)
	.loc 1 7485 0
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	andl	$-9, %eax
	movb	%al, (%edx)
	.loc 1 7486 0
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	andl	$-5, %eax
	movb	%al, (%edx)
	.loc 1 7487 0
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	9(%edx), %eax
	andl	$-2, %eax
	movb	%al, 9(%edx)
	.loc 1 7488 0
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	5(%edx), %eax
	andl	$-33, %eax
	movb	%al, 5(%edx)
	.loc 1 7489 0
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	andl	$127, %eax
	movb	%al, (%edx)
	.loc 1 7493 0
	movl	8(%ebp), %eax
	addl	$64, %eax
	movl	%eax, -16(%ebp)
	.loc 1 7494 0
	jmp	.L3280
.L3255:
	.loc 1 7496 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L3256
	.loc 1 7497 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%edx, (%eax)
	jmp	.L3254
.L3256:
	.loc 1 7499 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L3254:
.L3280:
	.loc 1 7494 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3255
	.loc 1 7503 0
	movl	8(%ebp), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L3259
	.loc 1 7504 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC156@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L3259:
	.loc 1 7510 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	je	.L3279
.LBB75:
	.loc 1 7514 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L3263
.L3264:
	.loc 1 7515 0
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	jne	.L3265
	.loc 1 7517 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 7518 0
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L3267
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L3265
.L3267:
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3269
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3269
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3269
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3269
	movl	-8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3265
.L3269:
	.loc 1 7520 0
	movl	-8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3274
	.loc 1 7521 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC157@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L3274:
	.loc 1 7523 0
	movl	-8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3276
	.loc 1 7524 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC158@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L3276:
	.loc 1 7526 0
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3265
	.loc 1 7527 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC159@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L3265:
	.loc 1 7514 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L3263:
	cmpl	$0, -12(%ebp)
	jne	.L3264
.L3279:
.LBE75:
	.loc 1 7532 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE182:
	.size	fixup_anonymous_aggr, .-fixup_anonymous_aggr
	.section	.rodata
	.type	__FUNCTION__.25978, @object
	.size	__FUNCTION__.25978, 15
__FUNCTION__.25978:
	.string	"check_tag_decl"
	.align 4
.LC160:
	.string	"redeclaration of C++ built-in type `%T'"
	.align 4
.LC161:
	.string	"multiple types in one declaration"
	.align 4
.LC162:
	.string	"declaration does not declare anything"
	.align 4
.LC163:
	.string	"missing type-name in typedef-declaration"
	.align 4
.LC164:
	.string	"ISO C++ prohibits anonymous structs"
	.align 4
.LC165:
	.string	"`%D' can only be specified for functions"
	.align 4
.LC166:
	.string	"`%D' can only be specified inside a class"
	.align 4
.LC167:
	.string	"`%D' can only be specified for constructors"
	.align 4
.LC168:
	.string	"`%D' can only be specified for objects and functions"
	.text
.globl check_tag_decl
	.type	check_tag_decl, @function
check_tag_decl:
.LFB183:
	.loc 1 7542 0
	pushl	%ebp
.LCFI637:
	movl	%esp, %ebp
.LCFI638:
	pushl	%ebx
.LCFI639:
	subl	$52, %esp
.LCFI640:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7543 0
	movl	$0, -20(%ebp)
	.loc 1 7544 0
	movl	$0, -16(%ebp)
	.loc 1 7545 0
	movl	$0, -12(%ebp)
	.loc 1 7546 0
	movl	$0, -8(%ebp)
	.loc 1 7548 0
	movl	$0, -28(%ebp)
	.loc 1 7550 0
	movl	8(%ebp), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3282
.L3283:
.LBB76:
	.loc 1 7552 0
	movl	-32(%ebp), %edx
	movl	20(%edx), %edx
	movl	%edx, -24(%ebp)
	.loc 1 7554 0
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	je	.L3284
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$34, %al
	je	.L3284
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$1, %al
	jne	.L3287
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	testl	%eax, %eax
	je	.L3287
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %edx
	movl	%edx, (%esp)
	call	namespace_binding@PLT
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L3287
.L3284:
	.loc 1 7560 0
	addl	$1, -20(%ebp)
	.loc 1 7562 0
	cmpl	$2, -20(%ebp)
	jne	.L3290
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$1, %al
	jne	.L3290
	.loc 1 7564 0
	movl	in_system_header@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3293
	.loc 1 7565 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC160@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L3293:
	.loc 1 7566 0
	movl	$0, -36(%ebp)
	jmp	.L3295
.L3290:
	.loc 1 7569 0
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L3307
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-59, %al
	je	.L3298
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-62, %al
	je	.L3300
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-59, %al
	je	.L3300
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-57, %al
	je	.L3300
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-60, %al
	je	.L3300
	movl	-24(%ebp), %edx
	movzbl	39(%edx), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L3300
.L3298:
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$11, %al
	jne	.L3307
.L3300:
	.loc 1 7573 0
	movl	-24(%ebp), %edx
	movl	72(%edx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3305
	leal	__FUNCTION__.25978@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$7573, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3305:
	.loc 1 7574 0
	movl	-24(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 7554 0
	jmp	.L3307
.L3287:
	.loc 1 7577 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$24, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	jne	.L3308
	.loc 1 7578 0
	movl	$1, -12(%ebp)
	jmp	.L3307
.L3308:
	.loc 1 7579 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$84, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	jne	.L3310
	.loc 1 7581 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3312
	call	current_scope@PLT
	movl	%eax, %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	je	.L3314
.L3312:
	.loc 1 7583 0
	movl	-24(%ebp), %edx
	movl	%edx, -8(%ebp)
	.loc 1 7581 0
	jmp	.L3307
.L3314:
	.loc 1 7585 0
	movl	$1, -16(%ebp)
	jmp	.L3307
.L3310:
	.loc 1 7587 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$16, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$44, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$20, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$32, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$88, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$36, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$92, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3316
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$80, %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	jne	.L3307
.L3316:
	.loc 1 7597 0
	movl	-24(%ebp), %eax
	movl	%eax, -8(%ebp)
.L3307:
.LBE76:
	.loc 1 7550 0
	movl	-32(%ebp), %edx
	movl	(%edx), %edx
	movl	%edx, -32(%ebp)
.L3282:
	cmpl	$0, -32(%ebp)
	jne	.L3283
	.loc 1 7600 0
	cmpl	$1, -20(%ebp)
	jle	.L3327
	.loc 1 7601 0
	leal	.LC161@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3327:
	.loc 1 7603 0
	cmpl	$0, -28(%ebp)
	jne	.L3329
	cmpl	$0, -16(%ebp)
	jne	.L3329
	.loc 1 7604 0
	leal	.LC162@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 7603 0
	jmp	.L3332
.L3329:
	.loc 1 7607 0
	cmpl	$0, -28(%ebp)
	je	.L3333
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$21, %al
	je	.L3335
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$22, %al
	jne	.L3333
.L3335:
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$21, %al
	je	.L3337
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$22, %al
	jne	.L3339
.L3337:
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-62, %al
	je	.L3340
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-59, %al
	je	.L3340
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-57, %al
	je	.L3340
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-60, %al
	je	.L3340
	movl	-28(%ebp), %edx
	movzbl	39(%edx), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L3340
.L3339:
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$11, %al
	jne	.L3333
.L3340:
	movl	-28(%ebp), %edx
	movl	72(%edx), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L3333
	movl	-28(%ebp), %edx
	movl	72(%edx), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L3333
	.loc 1 7626 0
	cmpl	$0, -12(%ebp)
	je	.L3347
	.loc 1 7628 0
	leal	.LC163@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 7629 0
	movl	$0, -36(%ebp)
	jmp	.L3295
.L3347:
	.loc 1 7632 0
	movl	-28(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	9(%edx), %eax
	orl	$-128, %eax
	movb	%al, 9(%edx)
	.loc 1 7634 0
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$22, %al
	je	.L3332
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3332
	movl	in_system_header@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3332
	.loc 1 7635 0
	leal	.LC164@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 7607 0
	jmp	.L3332
.L3333:
	.loc 1 7638 0
	cmpl	$0, -8(%ebp)
	je	.L3332
	.loc 1 7640 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$32, %eax
	movl	(%eax), %eax
	cmpl	-8(%ebp), %eax
	je	.L3354
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$88, %eax
	movl	(%eax), %eax
	cmpl	-8(%ebp), %eax
	jne	.L3356
.L3354:
	.loc 1 7642 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC165@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 7640 0
	jmp	.L3332
.L3356:
	.loc 1 7643 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$84, %eax
	movl	(%eax), %eax
	cmpl	-8(%ebp), %eax
	jne	.L3357
	.loc 1 7644 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC166@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L3332
.L3357:
	.loc 1 7645 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$92, %eax
	movl	(%eax), %eax
	cmpl	-8(%ebp), %eax
	jne	.L3359
	.loc 1 7646 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC167@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L3332
.L3359:
	.loc 1 7649 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC168@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3332:
	.loc 1 7653 0
	movl	-28(%ebp), %eax
	movl	%eax, -36(%ebp)
.L3295:
	movl	-36(%ebp), %eax
	.loc 1 7654 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE183:
	.size	check_tag_decl, .-check_tag_decl
.globl shadow_tag
	.type	shadow_tag, @function
shadow_tag:
.LFB184:
	.loc 1 7670 0
	pushl	%ebp
.LCFI641:
	movl	%esp, %ebp
.LCFI642:
	pushl	%ebx
.LCFI643:
	subl	$36, %esp
.LCFI644:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7671 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_tag_decl@PLT
	movl	%eax, -12(%ebp)
	.loc 1 7673 0
	cmpl	$0, -12(%ebp)
	je	.L3363
	.loc 1 7674 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_process_partial_specialization@PLT
.L3363:
	.loc 1 7681 0
	cmpl	$0, -12(%ebp)
	je	.L3376
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L3367
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L3376
.L3367:
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3369
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3369
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3369
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3369
	movl	-12(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3376
.L3369:
	movl	-12(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L3376
	.loc 1 7683 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	fixup_anonymous_aggr@PLT
	.loc 1 7685 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3376
.LBB77:
	.loc 1 7688 0
	movl	$0, 16(%esp)
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	grokdeclarator@PLT
	movl	%eax, -8(%ebp)
	.loc 1 7689 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_anon_union@PLT
.L3376:
.LBE77:
	.loc 1 7692 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE184:
	.size	shadow_tag, .-shadow_tag
.globl groktypename
	.type	groktypename, @function
groktypename:
.LFB185:
	.loc 1 7699 0
	pushl	%ebp
.LCFI645:
	movl	%esp, %ebp
.LCFI646:
	pushl	%ebx
.LCFI647:
	subl	$52, %esp
.LCFI648:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7702 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	je	.L3378
	.loc 1 7703 0
	movl	8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3380
.L3378:
	.loc 1 7704 0
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	leal	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	split_specs_attrs@PLT
	.loc 1 7705 0
	movl	-8(%ebp), %edx
	movl	8(%ebp), %eax
	movl	20(%eax), %ecx
	leal	-12(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	$0, 12(%esp)
	movl	$6, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	grokdeclarator@PLT
	movl	%eax, -16(%ebp)
	.loc 1 7707 0
	movl	-12(%ebp), %eax
	testl	%eax, %eax
	je	.L3381
	.loc 1 7708 0
	movl	-12(%ebp), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	cplus_decl_attributes@PLT
.L3381:
	.loc 1 7709 0
	movl	-16(%ebp), %eax
	movl	%eax, -24(%ebp)
.L3380:
	movl	-24(%ebp), %eax
	.loc 1 7710 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE185:
	.size	groktypename, .-groktypename
	.section	.rodata
.LC169:
	.string	"extern"
.LC170:
	.string	"deprecated"
	.align 4
.LC171:
	.string	"must initialize vbuf variables \"%s\""
	.align 4
.LC172:
	.string	"typedef `%D' is initialized (use __typeof__ instead)"
	.align 4
.LC173:
	.string	"function `%#D' is initialized like a variable"
	.align 4
.LC174:
	.string	"declaration of `%#D' has `extern' and is initialized"
	.align 4
.LC175:
	.string	"inline function `%s' given attribute noinline"
	.align 4
.LC176:
	.string	"`%#D' is not a static member of `%#T'"
	.align 4
.LC177:
	.string	"ISO C++ does not permit `%T::%D' to be defined as `%T::%D'"
	.align 4
.LC178:
	.string	"duplicate initialization of %D"
	.align 4
.LC179:
	.string	"declaration of `%#D' outside of class is not definition"
	.text
.globl start_decl
	.type	start_decl, @function
start_decl:
.LFB186:
	.loc 1 7732 0
	pushl	%ebp
.LCFI649:
	movl	%esp, %ebp
.LCFI650:
	pushl	%esi
.LCFI651:
	pushl	%ebx
.LCFI652:
	subl	$64, %esp
.LCFI653:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7743 0
	movl	have_extern_spec@GOT(%ebx), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	.L3385
	.loc 1 7745 0
	movl	$6, 4(%esp)
	leal	.LC169@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, 12(%ebp)
	.loc 1 7747 0
	movl	have_extern_spec@GOT(%ebx), %eax
	movb	$0, (%eax)
.L3385:
	.loc 1 7752 0
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC170@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	lookup_attribute@PLT
	testl	%eax, %eax
	je	.L3387
	.loc 1 7753 0
	movl	$1, deprecated_state@GOTOFF(%ebx)
.L3387:
	.loc 1 7755 0
	movl	20(%ebp), %edx
	movl	24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	chainon@PLT
	movl	%eax, 20(%ebp)
	.loc 1 7757 0
	leal	20(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	grokdeclarator@PLT
	movl	%eax, -24(%ebp)
	.loc 1 7760 0
	movl	$0, deprecated_state@GOTOFF(%ebx)
	.loc 1 7762 0
	movl	-24(%ebp), %eax
	testl	%eax, %eax
	je	.L3389
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L3391
.L3389:
	.loc 1 7763 0
	movl	$0, -40(%ebp)
	jmp	.L3392
.L3391:
	.loc 1 7765 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %edx
	.loc 1 7767 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%edx, %eax
	jne	.L3393
	.loc 1 7768 0
	movl	$0, -40(%ebp)
	jmp	.L3392
.L3393:
	.loc 1 7770 0
	movl	-24(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 7772 0
	cmpl	$0, 16(%ebp)
	je	.L3395
	cmpl	$0, -20(%ebp)
	je	.L3395
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L3395
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	cmpl	-20(%ebp), %eax
	je	.L3395
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3395
	.loc 1 7777 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	push_decl_namespace@PLT
.L3395:
	.loc 1 7781 0
	cmpl	$0, -20(%ebp)
	je	.L3401
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L3401
	.loc 1 7782 0
	movl	$0, -20(%ebp)
.L3401:
	.loc 1 7785 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3404
	movl	-24(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L3406
	movl	-24(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L3406
	movl	-24(%ebp), %eax
	movzbl	34(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3404
.L3406:
	cmpl	$0, 16(%ebp)
	jne	.L3404
	.loc 1 7786 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC171@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3404:
	.loc 1 7789 0
	cmpl	$0, 16(%ebp)
	je	.L3410
	.loc 1 7793 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -36(%ebp)
	cmpl	$31, -36(%ebp)
	je	.L3412
	cmpl	$34, -36(%ebp)
	je	.L3413
	jmp	.L3410
.L3413:
	.loc 1 7796 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC172@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 7797 0
	movl	$0, 16(%ebp)
	.loc 1 7798 0
	jmp	.L3410
.L3412:
	.loc 1 7801 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC173@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 7802 0
	movl	$0, 16(%ebp)
.L3410:
	.loc 1 7809 0
	cmpl	$0, 16(%ebp)
	je	.L3414
	.loc 1 7811 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	jne	.L3416
	movl	-24(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3416
	.loc 1 7813 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC174@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L3416:
	.loc 1 7815 0
	movl	-24(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$-2, %eax
	movb	%al, 33(%edx)
	.loc 1 7816 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	je	.L3419
	.loc 1 7817 0
	movl	-24(%ebp), %eax
	movzbl	10(%eax), %edx
	orl	$4, %edx
	movb	%dl, 10(%eax)
.L3419:
	.loc 1 7822 0
	movl	-24(%ebp), %eax
	movl	global_trees@GOT(%ebx), %edx
	movl	(%edx), %edx
	movl	%edx, 68(%eax)
.L3414:
	.loc 1 7826 0
	movl	20(%ebp), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	cplus_decl_attributes@PLT
	.loc 1 7829 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3421
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3421
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3424
.L3421:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L3424:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	%eax, -32(%ebp)
	jne	.L3425
	.loc 1 7830 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_apply_pragma_weak@PLT
.L3425:
	.loc 1 7832 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3427
	movl	-24(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3427
	movl	-24(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L3427
	movl	-24(%ebp), %eax
	movl	100(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC34@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	lookup_attribute@PLT
	testl	%eax, %eax
	je	.L3427
	.loc 1 7836 0
	movl	-24(%ebp), %edx
	leal	.LC175@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	warning_with_decl@PLT
.L3427:
	.loc 1 7839 0
	cmpl	$0, -20(%ebp)
	je	.L3432
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L3432
	.loc 1 7841 0
	movl	$2, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	push_nested_class@PLT
	.loc 1 7843 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3435
.LBB78:
	.loc 1 7845 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_field@PLT
	movl	%eax, -16(%ebp)
	.loc 1 7846 0
	cmpl	$0, -16(%ebp)
	je	.L3437
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L3439
.L3437:
	.loc 1 7847 0
	movl	-24(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	.LC176@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 7846 0
	jmp	.L3447
.L3439:
	.loc 1 7850 0
	movl	-16(%ebp), %eax
	movl	56(%eax), %eax
	cmpl	-20(%ebp), %eax
	je	.L3441
	.loc 1 7852 0
	movl	-24(%ebp), %eax
	movl	52(%eax), %edx
	movl	-24(%ebp), %eax
	movl	52(%eax), %esi
	movl	-16(%ebp), %eax
	movl	56(%eax), %ecx
	movl	%edx, 16(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%esi, 8(%esp)
	movl	%ecx, 4(%esp)
	leal	.LC177@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 7855 0
	movl	-24(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, 56(%edx)
.L3441:
	.loc 1 7862 0
	movl	-24(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3443
	movl	-16(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3443
	.loc 1 7863 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC178@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3443:
	.loc 1 7864 0
	movl	-24(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	testl	%eax, %eax
	je	.L3447
	.loc 1 7865 0
	movl	-16(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3447
.L3435:
.LBE78:
.LBB79:
	.loc 1 7870 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	check_classfn@PLT
	movl	%eax, -12(%ebp)
	.loc 1 7871 0
	cmpl	$0, -12(%ebp)
	je	.L3447
	movl	-24(%ebp), %eax
	movl	-12(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	testl	%eax, %eax
	je	.L3447
	.loc 1 7872 0
	movl	-12(%ebp), %eax
	movl	%eax, -24(%ebp)
.L3447:
.LBE79:
	.loc 1 7876 0
	movl	-24(%ebp), %edx
	movzbl	38(%edx), %eax
	andl	$-2, %eax
	movb	%al, 38(%edx)
	.loc 1 7877 0
	movl	-24(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L3450
	movl	-24(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	testb	%al, %al
	jne	.L3452
.L3450:
	movl	-20(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	8(%eax), %eax
	shrb	$2, %al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3453
.L3452:
	.loc 1 7880 0
	movl	-24(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	andl	$-7, %eax
	orl	$4, %eax
	movb	%al, 6(%edx)
	.loc 1 7887 0
	movl	-24(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L3453
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3453
	.loc 1 7888 0
	movl	-24(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$1, %edx
	movb	%dl, 33(%eax)
.L3453:
	.loc 1 7891 0
	movl	-24(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3432
	movl	-24(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	cmpb	$4, %al
	je	.L3432
	.loc 1 7892 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC179@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L3432:
	.loc 1 7897 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_push_decl@PLT
	movl	%eax, -28(%ebp)
	.loc 1 7899 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L3458
	.loc 1 7900 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	push_template_decl@PLT
	movl	%eax, -28(%ebp)
.L3458:
	.loc 1 7913 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L3460
	.loc 1 7914 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	start_decl_1@PLT
.L3460:
	.loc 1 7916 0
	movl	-28(%ebp), %eax
	movl	%eax, -40(%ebp)
.L3392:
	movl	-40(%ebp), %eax
	.loc 1 7917 0
	addl	$64, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE186:
	.size	start_decl, .-start_decl
	.section	.rodata
	.align 4
.LC180:
	.string	"variable `%#D' has initializer but incomplete type"
	.align 4
.LC181:
	.string	"elements of array `%#D' have incomplete type"
	.align 4
.LC182:
	.string	"aggregate `%#D' has incomplete type and cannot be defined"
	.text
.globl start_decl_1
	.type	start_decl_1, @function
start_decl_1:
.LFB187:
	.loc 1 7922 0
	pushl	%ebp
.LCFI654:
	movl	%esp, %ebp
.LCFI655:
	pushl	%ebx
.LCFI656:
	subl	$36, %esp
.LCFI657:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 7923 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 7924 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	.loc 1 7926 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-12(%ebp), %eax
	je	.L3491
	.loc 1 7929 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_push_cleanup_level@PLT
	.loc 1 7931 0
	cmpl	$0, -8(%ebp)
	je	.L3466
	.loc 1 7938 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3466
	.loc 1 7940 0
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	je	.L3469
	.loc 1 7942 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC180@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 7944 0
	movl	$0, -8(%ebp)
	.loc 1 7945 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L3466
.L3469:
	.loc 1 7947 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3466
	.loc 1 7949 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L3472
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L3472
	.loc 1 7950 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC181@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3472:
	.loc 1 7952 0
	movl	$0, -8(%ebp)
.L3466:
	.loc 1 7956 0
	cmpl	$0, -8(%ebp)
	jne	.L3475
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L3475
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L3475
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-12(%ebp), %eax
	je	.L3475
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3480
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3480
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3480
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3480
	movl	-12(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3475
.L3480:
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3475
	.loc 1 7963 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L3486
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L3488
.L3486:
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3488
	.loc 1 7966 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC182@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 7970 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 7963 0
	jmp	.L3475
.L3488:
	.loc 1 7980 0
	movl	-12(%ebp), %eax
	movzbl	38(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
.L3475:
	.loc 1 7984 0
	cmpl	$0, -8(%ebp)
	jne	.L3491
	.loc 1 7985 0
	movl	8(%ebp), %eax
	movl	$0, 68(%eax)
.L3491:
	.loc 1 7986 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE187:
	.size	start_decl_1, .-start_decl_1
	.section	.rodata
	.align 4
.LC183:
	.string	"`%D' declared as reference but not initialized"
	.align 4
.LC184:
	.string	"ISO C++ forbids use of initializer list to initialize reference `%D'"
	.align 4
.LC185:
	.string	"cannot initialize `%T' from `%T'"
	.text
	.type	grok_reference_init, @function
grok_reference_init:
.LFB188:
	.loc 1 8000 0
	pushl	%ebp
.LCFI658:
	movl	%esp, %ebp
.LCFI659:
	pushl	%ebx
.LCFI660:
	subl	$36, %esp
.LCFI661:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8003 0
	cmpl	$0, 16(%ebp)
	jne	.L3493
	.loc 1 8005 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L3495
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3497
.L3495:
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L3497
	.loc 1 8008 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC183@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3497:
	.loc 1 8009 0
	movl	$0, -24(%ebp)
	jmp	.L3499
.L3493:
	.loc 1 8012 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	16(%ebp), %eax
	jne	.L3500
	.loc 1 8013 0
	movl	$0, -24(%ebp)
	jmp	.L3499
.L3500:
	.loc 1 8015 0
	movl	16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L3502
	.loc 1 8017 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC184@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8018 0
	movl	$0, -24(%ebp)
	jmp	.L3499
.L3502:
	.loc 1 8021 0
	movl	16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L3504
	.loc 1 8022 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_compound_expr@PLT
	movl	%eax, 16(%ebp)
.L3504:
	.loc 1 8024 0
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L3506
	.loc 1 8025 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	convert_from_reference@PLT
	movl	%eax, 16(%ebp)
.L3506:
	.loc 1 8027 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	je	.L3508
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L3508
	.loc 1 8031 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	default_conversion@PLT
	movl	%eax, 16(%ebp)
.L3508:
	.loc 1 8041 0
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	initialize_reference@PLT
	movl	%eax, -8(%ebp)
	.loc 1 8043 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-8(%ebp), %eax
	jne	.L3511
	.loc 1 8044 0
	movl	$0, -24(%ebp)
	jmp	.L3499
.L3511:
	.loc 1 8045 0
	cmpl	$0, -8(%ebp)
	jne	.L3513
	.loc 1 8047 0
	movl	16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC185@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8048 0
	movl	$0, -24(%ebp)
	jmp	.L3499
.L3513:
	.loc 1 8051 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3515
	movl	-8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3515
	.loc 1 8052 0
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3499
.L3515:
	.loc 1 8054 0
	movl	8(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 8056 0
	movl	$0, -24(%ebp)
.L3499:
	movl	-24(%ebp), %eax
	.loc 1 8057 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE188:
	.size	grok_reference_init, .-grok_reference_init
	.section	.rodata
	.align 4
.LC186:
	.string	"initializer fails to determine size of `%D'"
.LC187:
	.string	"array size missing in `%D'"
.LC188:
	.string	"zero-size array `%D'"
	.text
	.type	maybe_deduce_size_from_array_init, @function
maybe_deduce_size_from_array_init:
.LFB189:
	.loc 1 8067 0
	pushl	%ebp
.LCFI662:
	movl	%esp, %ebp
.LCFI663:
	pushl	%ebx
.LCFI664:
	subl	$36, %esp
.LCFI665:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8068 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 8070 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L3540
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L3540
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L3540
.LBB80:
	.loc 1 8076 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -16(%ebp)
	.loc 1 8077 0
	cmpl	$0, 12(%ebp)
	jne	.L3524
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3526
.L3524:
	movl	12(%ebp), %eax
	movl	%eax, -24(%ebp)
.L3526:
	movl	-24(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 8078 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_array_type@PLT
	movl	%eax, -8(%ebp)
	.loc 1 8080 0
	cmpl	$1, -8(%ebp)
	jne	.L3527
	.loc 1 8081 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC186@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3527:
	.loc 1 8083 0
	cmpl	$2, -8(%ebp)
	jne	.L3529
	.loc 1 8085 0
	cmpl	$0, -16(%ebp)
	je	.L3531
	.loc 1 8086 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC187@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L3529
.L3531:
	.loc 1 8091 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3529
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3529
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L3529
	.loc 1 8092 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$1, %edx
	movb	%dl, 33(%eax)
.L3529:
	.loc 1 8095 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3536
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3536
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %edx
	movl	-20(%ebp), %eax
	movl	16(%eax), %eax
	movl	64(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	tree_int_cst_lt@PLT
	testl	%eax, %eax
	je	.L3536
	.loc 1 8098 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC188@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3536:
	.loc 1 8100 0
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_decl@PLT
.L3540:
.LBE80:
	.loc 1 8102 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE189:
	.size	maybe_deduce_size_from_array_init, .-maybe_deduce_size_from_array_init
	.section	.rodata
	.align 4
.LC189:
	.string	"storage size of `%D' isn't known"
	.align 4
.LC190:
	.string	"storage size of `%D' isn't constant"
	.text
	.type	layout_var_decl, @function
layout_var_decl:
.LFB190:
	.loc 1 8110 0
	pushl	%ebp
.LCFI666:
	movl	%esp, %ebp
.LCFI667:
	pushl	%ebx
.LCFI668:
	subl	$36, %esp
.LCFI669:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8111 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 8121 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3542
	.loc 1 8122 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
.L3542:
	.loc 1 8123 0
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	jne	.L3544
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L3544
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3547
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L3544
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L3544
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L3544
.L3547:
	.loc 1 8129 0
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_decl@PLT
.L3544:
	.loc 1 8131 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3551
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	jne	.L3551
	.loc 1 8136 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC189@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8137 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
.L3551:
	.loc 1 8151 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3554
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3556
.L3554:
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L3556
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3556
	.loc 1 8155 0
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$26, %al
	jne	.L3559
	.loc 1 8156 0
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	constant_expression_warning@PLT
	jmp	.L3556
.L3559:
	.loc 1 8158 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC190@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3556:
	.loc 1 8161 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3566
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L3566
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3566
	movl	8(%ebp), %eax
	movl	56(%eax), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L3566
	.loc 1 8165 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_local_name
.L3566:
	.loc 1 8166 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE190:
	.size	layout_var_decl, .-layout_var_decl
	.section	.rodata
	.align 4
.LC191:
	.string	"sorry: semantics of inline function static data `%#D' are wrong (you'll wind up with multiple copies)"
	.align 4
.LC192:
	.string	"  you can work around this by removing the initializer"
	.text
	.type	maybe_commonize_var, @function
maybe_commonize_var:
.LFB191:
	.loc 1 8175 0
	pushl	%ebp
.LCFI670:
	movl	%esp, %ebp
.LCFI671:
	pushl	%ebx
.LCFI672:
	subl	$20, %esp
.LCFI673:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8178 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3568
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L3568
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L3568
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3568
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	35(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L3573
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3575
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3568
.L3575:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L3568
.L3573:
	.loc 1 8190 0
	movl	flag_weak@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3577
	.loc 1 8195 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	comdat_linkage@PLT
	jmp	.L3586
.L3577:
	.loc 1 8199 0
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3580
	movl	8(%ebp), %eax
	movl	68(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L3582
.L3580:
	.loc 1 8204 0
	movl	8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movb	%al, 10(%edx)
	.loc 1 8205 0
	movl	8(%ebp), %edx
	movzbl	34(%edx), %eax
	orl	$64, %eax
	movb	%al, 34(%edx)
	.loc 1 8199 0
	jmp	.L3586
.L3582:
	.loc 1 8212 0
	movl	8(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$-9, %eax
	movb	%al, 10(%edx)
	.loc 1 8213 0
	movl	8(%ebp), %edx
	movzbl	34(%edx), %eax
	andl	$-65, %eax
	movb	%al, 34(%edx)
	.loc 1 8214 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC191@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
	.loc 1 8215 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC192@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
	.loc 1 8178 0
	jmp	.L3586
.L3568:
	.loc 1 8219 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L3586
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L3586
	.loc 1 8222 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	comdat_linkage@PLT
.L3586:
	.loc 1 8223 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE191:
	.size	maybe_commonize_var, .-maybe_commonize_var
	.section	.rodata
.LC193:
	.string	"uninitialized const `%D'"
	.text
	.type	check_for_uninitialized_const_var, @function
check_for_uninitialized_const_var:
.LFB192:
	.loc 1 8230 0
	pushl	%ebp
.LCFI674:
	movl	%esp, %ebp
.LCFI675:
	pushl	%ebx
.LCFI676:
	subl	$36, %esp
.LCFI677:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8231 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 8236 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3594
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	je	.L3594
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	andl	$1, %eax
	testb	%al, %al
	je	.L3594
	movl	-8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L3594
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L3594
	.loc 1 8241 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC193@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3594:
	.loc 1 8242 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE192:
	.size	check_for_uninitialized_const_var, .-check_for_uninitialized_const_var
	.type	next_initializable_field, @function
next_initializable_field:
.LFB193:
	.loc 1 8251 0
	pushl	%ebp
.LCFI678:
	movl	%esp, %ebp
.LCFI679:
	.loc 1 8252 0
	jmp	.L3596
.L3597:
	.loc 1 8256 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%ebp)
.L3596:
	.loc 1 8252 0
	cmpl	$0, 8(%ebp)
	je	.L3598
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	jne	.L3597
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L3601
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L3597
.L3601:
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L3597
.L3598:
	.loc 1 8258 0
	movl	8(%ebp), %eax
	.loc 1 8259 0
	popl	%ebp
	ret
.LFE193:
	.size	next_initializable_field, .-next_initializable_field
	.section	.rodata
	.type	__FUNCTION__.26841, @object
	.size	__FUNCTION__.26841, 13
__FUNCTION__.26841:
	.string	"reshape_init"
	.align 4
.LC194:
	.string	"brace-enclosed initializer used to initialize `%T'"
	.align 4
.LC195:
	.string	"initializer for `%T' must be brace-enclosed"
	.align 4
.LC196:
	.string	"ISO C++ does not allow designated initializers"
	.align 4
.LC197:
	.string	"`%T' has no non-static data member named `%D'"
	.align 4
.LC198:
	.string	"too many initializers for `%T'"
	.text
	.type	reshape_init, @function
reshape_init:
.LFB194:
	.loc 1 8278 0
	pushl	%ebp
.LCFI680:
	movl	%esp, %ebp
.LCFI681:
	pushl	%ebx
.LCFI682:
	subl	$84, %esp
.LCFI683:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8285 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 8286 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L3605
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, -64(%ebp)
	jmp	.L3607
.L3605:
	movl	-40(%ebp), %eax
	movl	%eax, -64(%ebp)
.L3607:
	movl	-64(%ebp), %eax
	movl	%eax, -36(%ebp)
	.loc 1 8290 0
	cmpl	$0, -36(%ebp)
	jne	.L3608
	.loc 1 8292 0
	movl	-40(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	je	.L3610
	leal	__FUNCTION__.26841@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8292, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3610:
	.loc 1 8293 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 8294 0
	movl	-40(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8295 0
	movl	-40(%ebp), %eax
	movl	%eax, -60(%ebp)
	jmp	.L3612
.L3608:
	.loc 1 8301 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L3613
	movl	-36(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3613
	.loc 1 8304 0
	movl	-40(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8305 0
	movl	-40(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 8306 0
	movl	-36(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 8307 0
	leal	-44(%ebp), %eax
	movl	%eax, 12(%ebp)
	.loc 1 8308 0
	movb	$1, -5(%ebp)
	.loc 1 8301 0
	jmp	.L3616
.L3613:
	.loc 1 8312 0
	movl	$0, -44(%ebp)
	.loc 1 8313 0
	movb	$0, -5(%ebp)
.L3616:
	.loc 1 8318 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	je	.L3617
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L3619
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L3621
.L3619:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3622
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3622
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3622
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3622
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3621
.L3622:
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3617
.L3621:
	.loc 1 8320 0
	movl	-40(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8321 0
	movl	-40(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 8324 0
	cmpb	$0, -5(%ebp)
	je	.L3627
	.loc 1 8326 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC194@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8328 0
	movl	-40(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L3629
	.loc 1 8329 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%edx, 20(%eax)
	jmp	.L3627
.L3629:
	.loc 1 8331 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
.L3627:
	.loc 1 8334 0
	movl	-40(%ebp), %eax
	movl	%eax, -60(%ebp)
	jmp	.L3612
.L3617:
	.loc 1 8346 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L3631
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L3633
.L3631:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3634
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3634
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3634
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3634
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3633
.L3634:
	movzbl	-5(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L3633
	movl	-36(%ebp), %eax
	movl	4(%eax), %edx
	movl	-36(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	can_convert_arg@PLT
	testl	%eax, %eax
	je	.L3633
	.loc 1 8350 0
	movl	-40(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8351 0
	movl	-40(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 8352 0
	movl	-40(%ebp), %eax
	movl	%eax, -60(%ebp)
	jmp	.L3612
.L3633:
	.loc 1 8355 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L3641
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L3641
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	72(%eax), %eax
	movl	%eax, (%esp)
	call	char_type_p@PLT
	testl	%eax, %eax
	je	.L3641
	.loc 1 8365 0
	movl	-40(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 8367 0
	movl	-40(%ebp), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8368 0
	movl	-40(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 8355 0
	jmp	.L3645
.L3641:
	.loc 1 8373 0
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$47, (%esp)
	call	build@PLT
	movl	%eax, -32(%ebp)
	.loc 1 8374 0
	movl	-32(%ebp), %edx
	movzbl	11(%edx), %eax
	orl	$16, %eax
	movb	%al, 11(%edx)
	.loc 1 8376 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L3646
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L3648
.L3646:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3649
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3649
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3649
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3649
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3648
.L3649:
.LBB81:
	.loc 1 8380 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	next_initializable_field
	movl	%eax, -28(%ebp)
	.loc 1 8382 0
	cmpl	$0, -28(%ebp)
	jne	.L3659
	.loc 1 8389 0
	movzbl	-5(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L3669
	.loc 1 8390 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC195@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L3669
.L3660:
.LBB82:
	.loc 1 8402 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3661
	.loc 1 8404 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3663
	.loc 1 8405 0
	leal	.LC196@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L3663:
	.loc 1 8406 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_field_1@PLT
	movl	%eax, -28(%ebp)
	.loc 1 8408 0
	cmpl	$0, -28(%ebp)
	je	.L3665
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	je	.L3661
.L3665:
	.loc 1 8409 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC197@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3661:
	.loc 1 8412 0
	cmpl	$0, -28(%ebp)
	je	.L3669
	.loc 1 8415 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	reshape_init
	movl	%eax, -24(%ebp)
	.loc 1 8416 0
	movl	-32(%ebp), %eax
	movl	24(%eax), %edx
	movl	-24(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8417 0
	movl	-32(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 24(%edx)
	.loc 1 8423 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	je	.L3669
	.loc 1 8425 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	next_initializable_field
	movl	%eax, -28(%ebp)
.L3659:
.LBE82:
	.loc 1 8397 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3660
	.loc 1 8376 0
	jmp	.L3669
.L3648:
.LBE81:
	.loc 1 8429 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L3670
.LBB83:
	.loc 1 8436 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3672
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	array_type_nelts@PLT
	movl	%eax, -56(%ebp)
	jmp	.L3674
.L3672:
	movl	$0, -56(%ebp)
.L3674:
	movl	-56(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 8439 0
	movl	global_trees@GOT(%ebx), %eax
	movl	80(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 8440 0
	jmp	.L3675
.L3676:
.LBB84:
	.loc 1 8445 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	reshape_init
	movl	%eax, -12(%ebp)
	.loc 1 8446 0
	movl	-32(%ebp), %eax
	movl	24(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 8447 0
	movl	-32(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 24(%edx)
	.loc 1 8448 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3677
	.loc 1 8449 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -20(%ebp)
.L3677:
.LBE84:
	.loc 1 8441 0
	movl	global_trees@GOT(%ebx), %eax
	movl	84(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$60, (%esp)
	call	size_binop@PLT
	movl	%eax, -20(%ebp)
.L3675:
	.loc 1 8440 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3669
	cmpl	$0, -16(%ebp)
	je	.L3676
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_int_cst_lt@PLT
	testl	%eax, %eax
	je	.L3676
	jmp	.L3669
.L3670:
.LBE83:
	.loc 1 8453 0
	leal	__FUNCTION__.26841@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8453, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3669:
	.loc 1 8457 0
	movl	-32(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	nreverse@PLT
	movl	%eax, %edx
	movl	-32(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 1 8459 0
	movl	-40(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L3645
	.loc 1 8460 0
	movl	-40(%ebp), %eax
	movl	16(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_tree_list@PLT
	movl	%eax, -32(%ebp)
.L3645:
	.loc 1 8465 0
	cmpb	$0, -5(%ebp)
	je	.L3683
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3683
	.loc 1 8466 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC198@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3683:
	.loc 1 8468 0
	movl	-32(%ebp), %eax
	movl	%eax, -60(%ebp)
.L3612:
	movl	-60(%ebp), %eax
	.loc 1 8469 0
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE194:
	.size	reshape_init, .-reshape_init
	.section	.rodata
	.type	__FUNCTION__.27038, @object
	.size	__FUNCTION__.27038, 18
__FUNCTION__.27038:
	.string	"check_initializer"
	.align 4
.LC199:
	.string	"variable-sized object `%D' may not be initialized"
.LC200:
	.string	"`%D' has incomplete type"
	.align 4
.LC201:
	.string	"`%D' must be initialized by constructor, not by `{...}'"
	.align 4
.LC202:
	.string	"structure `%D' with uninitialized const members"
	.align 4
.LC203:
	.string	"structure `%D' with uninitialized reference members"
	.text
	.type	check_initializer, @function
check_initializer:
.LFB195:
	.loc 1 8480 0
	pushl	%ebp
.LCFI684:
	movl	%esp, %ebp
.LCFI685:
	pushl	%ebx
.LCFI686:
	subl	$36, %esp
.LCFI687:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8481 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 8484 0
	movl	12(%ebp), %eax
	testl	%eax, %eax
	je	.L3688
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L3688
	.loc 1 8485 0
	movl	$0, 12(%ebp)
.L3688:
	.loc 1 8491 0
	movl	8(%ebp), %eax
	movl	$0, 68(%eax)
	.loc 1 8495 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	%eax, -16(%ebp)
	movl	8(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 8497 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-16(%ebp), %eax
	jne	.L3691
	.loc 1 8499 0
	movl	$0, 12(%ebp)
	jmp	.L3693
.L3691:
	.loc 1 8500 0
	movl	12(%ebp), %eax
	testl	%eax, %eax
	je	.L3694
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L3694
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3694
	.loc 1 8503 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC199@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8504 0
	movl	$0, 12(%ebp)
	.loc 1 8500 0
	jmp	.L3693
.L3694:
	.loc 1 8506 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L3698
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3698
	.loc 1 8509 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC181@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8510 0
	movl	$0, 12(%ebp)
	.loc 1 8506 0
	jmp	.L3693
.L3698:
	.loc 1 8512 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	je	.L3693
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3693
	.loc 1 8514 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC200@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8515 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 8516 0
	movl	$0, 12(%ebp)
.L3693:
	.loc 1 8519 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	jne	.L3703
	.loc 1 8521 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L3705
	leal	__FUNCTION__.27038@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8521, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3705:
	.loc 1 8523 0
	movl	12(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 68(%edx)
	.loc 1 8525 0
	movl	12(%ebp), %eax
	testl	%eax, %eax
	jne	.L3707
	leal	__FUNCTION__.27038@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8525, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3707:
	.loc 1 8526 0
	movl	$0, 12(%ebp)
	jmp	.L3709
.L3703:
	.loc 1 8528 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3710
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L3710
	.loc 1 8529 0
	movl	12(%ebp), %edx
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	%edx, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	grok_reference_init
	movl	%eax, 12(%ebp)
	.loc 1 8528 0
	jmp	.L3709
.L3710:
	.loc 1 8530 0
	movl	12(%ebp), %eax
	testl	%eax, %eax
	je	.L3713
	.loc 1 8532 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L3715
	movl	12(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3715
	.loc 1 8543 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	je	.L3718
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L3720
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L3715
.L3720:
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3722
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3722
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3722
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3722
	movl	-16(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3715
.L3722:
	movl	-16(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L3715
.L3718:
	.loc 1 8544 0
	leal	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	reshape_init
	movl	%eax, 12(%ebp)
.L3715:
	.loc 1 8549 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_deduce_size_from_array_init
	.loc 1 8550 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 8551 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L3727
	movl	12(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3727
	.loc 1 8552 0
	movl	12(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 4(%edx)
.L3727:
	.loc 1 8554 0
	movl	-16(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3730
	movl	-16(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3732
.L3730:
	.loc 1 8556 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	je	.L3733
	.loc 1 8558 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L3733
	movl	12(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3733
	.loc 1 8561 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3737
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3737
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3737
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3737
	movl	-16(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3732
.L3737:
	movl	-16(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3732
	.loc 1 8563 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC201@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8565 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 8554 0
	jmp	.L3709
.L3733:
.LBB85:
	.loc 1 8575 0
	movl	$0, -12(%ebp)
	.loc 1 8576 0
	call	current_stmt_tree@PLT
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3744
	.loc 1 8578 0
	call	stmts_are_full_exprs_p@PLT
	movl	%eax, -12(%ebp)
	.loc 1 8579 0
	call	current_stmt_tree@PLT
	movl	$1, 12(%eax)
.L3744:
	.loc 1 8581 0
	movl	12(%ebp), %edx
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_aggr_init@PLT
	movl	%eax, 12(%ebp)
	.loc 1 8582 0
	call	current_stmt_tree@PLT
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3746
	.loc 1 8583 0
	call	current_stmt_tree@PLT
	movl	%eax, %edx
	movl	-12(%ebp), %eax
	movl	%eax, 12(%edx)
.L3746:
	.loc 1 8585 0
	movl	12(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3748
.L3732:
.LBE85:
	.loc 1 8591 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$4, %al
	je	.L3709
	.loc 1 8592 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	store_init_value@PLT
	movl	%eax, 12(%ebp)
	jmp	.L3709
.L3713:
	.loc 1 8595 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3709
	.loc 1 8597 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L3751
	movl	-16(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L3733
.L3751:
	.loc 1 8599 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3753
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3753
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3753
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3753
	movl	-16(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3758
.L3753:
.LBB86:
	.loc 1 8601 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	strip_array_types@PLT
	movl	%eax, -8(%ebp)
	.loc 1 8603 0
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L3759
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3759
	.loc 1 8604 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC202@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3759:
	.loc 1 8605 0
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L3762
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L3762
	.loc 1 8606 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC203@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3762:
	.loc 1 8609 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_for_uninitialized_const_var
	.loc 1 8599 0
	jmp	.L3709
.L3758:
.LBE86:
	.loc 1 8612 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_for_uninitialized_const_var
.L3709:
	.loc 1 8614 0
	movl	12(%ebp), %eax
	testl	%eax, %eax
	je	.L3765
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	cmpl	%eax, %edx
	je	.L3765
	.loc 1 8615 0
	movl	12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$50, (%esp)
	call	build@PLT
	movl	%eax, 12(%ebp)
.L3765:
	.loc 1 8617 0
	movl	12(%ebp), %eax
	movl	%eax, -24(%ebp)
.L3748:
	movl	-24(%ebp), %eax
	.loc 1 8618 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE195:
	.size	check_initializer, .-check_initializer
	.section	.rodata
	.type	__FUNCTION__.27265, @object
	.size	__FUNCTION__.27265, 27
__FUNCTION__.27265:
	.string	"make_rtl_for_nonlocal_decl"
	.text
	.type	make_rtl_for_nonlocal_decl, @function
make_rtl_for_nonlocal_decl:
.LFB196:
	.loc 1 8627 0
	pushl	%ebp
.LCFI688:
	movl	%esp, %ebp
.LCFI689:
	pushl	%ebx
.LCFI690:
	subl	$36, %esp
.LCFI691:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8628 0
	call	toplevel_bindings_p@PLT
	movl	%eax, -12(%ebp)
	.loc 1 8632 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L3770
	.loc 1 8634 0
	movl	at_eof@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	rest_of_decl_compilation@PLT
	.loc 1 8635 0
	jmp	.L3811
.L3770:
	.loc 1 8640 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L3773
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3773
	.loc 1 8642 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L3776
	leal	__FUNCTION__.27265@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8642, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3776:
	.loc 1 8645 0
	cmpl	$0, 12(%ebp)
	jne	.L3773
	.loc 1 8646 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3773
	leal	__FUNCTION__.27265@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8646, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3773:
	.loc 1 8650 0
	cmpl	$0, 16(%ebp)
	je	.L3781
	.loc 1 8652 0
	movl	16(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 92(%eax)
	.loc 1 8656 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3781
	.loc 1 8657 0
	movl	8(%ebp), %eax
	movzbl	38(%eax), %edx
	orl	$2, %edx
	movb	%dl, 38(%eax)
.L3781:
	.loc 1 8661 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L3784
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3784
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3811
.L3784:
	.loc 1 8666 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L3787
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L3789
.L3787:
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3790
.L3789:
	movl	$1, -24(%ebp)
	jmp	.L3791
.L3790:
	movl	$0, -24(%ebp)
.L3791:
	movl	-24(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 8670 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L3792
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3792
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3792
	movl	8(%ebp), %eax
	movl	68(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L3792
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L3797
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	jne	.L3797
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3792
.L3797:
	cmpl	$0, -12(%ebp)
	je	.L3792
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L3792
	.loc 1 8680 0
	movl	interface_unknown@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3802
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L3802
	.loc 1 8682 0
	movl	8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movb	%al, 10(%edx)
	.loc 1 8683 0
	movl	interface_only@GOT(%ebx), %eax
	movl	(%eax), %eax
	andl	$1, %eax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	andl	$1, %ecx
	movzbl	33(%edx), %eax
	andl	$-2, %eax
	orl	%ecx, %eax
	movb	%al, 33(%edx)
.L3802:
	.loc 1 8686 0
	movl	$1, -8(%ebp)
	.loc 1 8670 0
	jmp	.L3805
.L3792:
	.loc 1 8689 0
	movl	8(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L3805
	.loc 1 8690 0
	movl	$1, -8(%ebp)
.L3805:
	.loc 1 8697 0
	cmpl	$0, -8(%ebp)
	je	.L3807
	cmpl	$0, 16(%ebp)
	je	.L3807
	.loc 1 8698 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	.loc 1 8697 0
	jmp	.L3811
.L3807:
	.loc 1 8700 0
	cmpl	$0, -8(%ebp)
	jne	.L3811
	.loc 1 8701 0
	movl	at_eof@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	rest_of_decl_compilation@PLT
.L3811:
	.loc 1 8702 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE196:
	.size	make_rtl_for_nonlocal_decl, .-make_rtl_for_nonlocal_decl
.globl maybe_inject_for_scope_var
	.type	maybe_inject_for_scope_var, @function
maybe_inject_for_scope_var:
.LFB197:
	.loc 1 8713 0
	pushl	%ebp
.LCFI692:
	movl	%esp, %ebp
.LCFI693:
	pushl	%ebx
.LCFI694:
	subl	$52, %esp
.LCFI695:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8714 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 8716 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	jne	.L3813
	.loc 1 8717 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	jmp	.L3845
.L3813:
	.loc 1 8722 0
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3816
	.loc 1 8723 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	jmp	.L3845
.L3816:
	.loc 1 8725 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3818
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3818
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L3821
.L3818:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -40(%ebp)
.L3821:
	movl	-40(%ebp), %edx
	movzbl	61(%edx), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3822
.LBB87:
	.loc 1 8728 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3824
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3824
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L3827
.L3824:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L3827:
	movl	-36(%ebp), %edx
	movl	52(%edx), %eax
	movl	%eax, -12(%ebp)
	.loc 1 8740 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	44(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 8742 0
	cmpl	$0, -8(%ebp)
	je	.L3828
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	cmpl	-12(%ebp), %eax
	jne	.L3828
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3828
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3828
	.loc 1 8747 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	64(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 8749 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3833
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3833
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L3836
.L3833:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -32(%ebp)
.L3836:
	movl	-32(%ebp), %edx
	movzbl	61(%edx), %eax
	andl	$-5, %eax
	movl	-32(%ebp), %edx
	movb	%al, 61(%edx)
	.loc 1 8742 0
	jmp	.L3822
.L3828:
	.loc 1 8751 0
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L3822
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L3838
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L3840
.L3838:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -28(%ebp)
.L3840:
	movl	-28(%ebp), %edx
	movzwl	(%edx), %eax
	cmpw	$76, %ax
	jne	.L3822
	.loc 1 8752 0
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L3842
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L3844
.L3842:
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	movl	8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, -24(%ebp)
.L3844:
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	preserve_temp_slots@PLT
.L3822:
.LBE87:
	.loc 1 8755 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
.L3845:
	.loc 1 8756 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE197:
	.size	maybe_inject_for_scope_var, .-maybe_inject_for_scope_var
	.section	.rodata
	.type	__FUNCTION__.27461, @object
	.size	__FUNCTION__.27461, 21
__FUNCTION__.27461:
	.string	"initialize_local_var"
	.text
	.type	initialize_local_var, @function
initialize_local_var:
.LFB198:
	.loc 1 8764 0
	pushl	%ebp
.LCFI696:
	movl	%esp, %ebp
.LCFI697:
	pushl	%ebx
.LCFI698:
	subl	$36, %esp
.LCFI699:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8765 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 8768 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L3847
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$37, %al
	jne	.L3849
.L3847:
	movl	$1, -28(%ebp)
	jmp	.L3850
.L3849:
	movl	$0, -28(%ebp)
.L3850:
	cmpl	$0, -28(%ebp)
	jne	.L3851
	leal	__FUNCTION__.27461@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8770, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3851:
	.loc 1 8771 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3853
	leal	__FUNCTION__.27461@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8771, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3853:
	.loc 1 8773 0
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	jne	.L3855
	.loc 1 8776 0
	movl	8(%ebp), %eax
	movl	$0, 68(%eax)
	.loc 1 8777 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	9(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 9(%ecx)
.L3855:
	.loc 1 8780 0
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L3857
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-20(%ebp), %eax
	je	.L3857
.LBB88:
	.loc 1 8785 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3860
	movl	-20(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3862
.L3860:
	movl	$1, -24(%ebp)
	jmp	.L3863
.L3862:
	movl	$0, -24(%ebp)
.L3863:
	movl	-24(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 8788 0
	cmpl	$0, 12(%ebp)
	je	.L3864
.LBB89:
	.loc 1 8792 0
	call	current_stmt_tree@PLT
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L3866
	leal	__FUNCTION__.27461@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8792, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3866:
	.loc 1 8793 0
	call	stmts_are_full_exprs_p@PLT
	movl	%eax, -8(%ebp)
	.loc 1 8794 0
	call	current_stmt_tree@PLT
	movl	$1, 12(%eax)
	.loc 1 8795 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_expr_stmt@PLT
	.loc 1 8796 0
	call	current_stmt_tree@PLT
	movl	%eax, %edx
	movl	-8(%ebp), %eax
	movl	%eax, 12(%edx)
.L3864:
.LBE89:
	.loc 1 8806 0
	movl	-20(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3868
	cmpl	$0, -12(%ebp)
	jne	.L3868
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L3868
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L3868
	.loc 1 8810 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %edx
	andl	$-2, %edx
	movb	%dl, 10(%eax)
	.loc 1 8806 0
	jmp	.L3857
.L3868:
	.loc 1 8811 0
	cmpl	$0, -12(%ebp)
	je	.L3857
	.loc 1 8812 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %edx
	orl	$1, %edx
	movb	%dl, 10(%eax)
.L3857:
.LBE88:
	.loc 1 8816 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	cxx_maybe_build_cleanup@PLT
	movl	%eax, -16(%ebp)
	.loc 1 8817 0
	movl	8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L3877
	cmpl	$0, -16(%ebp)
	je	.L3877
	.loc 1 8818 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_decl_cleanup@PLT
.L3877:
	.loc 1 8819 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE198:
	.size	initialize_local_var, .-initialize_local_var
	.section	.rodata
	.type	__FUNCTION__.27542, @object
	.size	__FUNCTION__.27542, 15
__FUNCTION__.27542:
	.string	"cp_finish_decl"
	.align 4
.LC204:
	.string	"assignment (not initialization) in declaration"
	.align 4
.LC205:
	.string	"cannot initialize `%D' to namespace `%D'"
	.align 4
.LC206:
	.string	"shadowing previous type declaration of `%#D'"
	.align 4
.LC207:
	.string	"`%D' cannot be thread-local because it has non-POD type `%T'"
	.align 4
.LC208:
	.string	"`%D' is thread-local and so cannot be dynamically initialized"
	.text
.globl cp_finish_decl
	.type	cp_finish_decl, @function
cp_finish_decl:
.LFB199:
	.loc 1 8837 0
	pushl	%ebp
.LCFI700:
	movl	%esp, %ebp
.LCFI701:
	pushl	%ebx
.LCFI702:
	subl	$68, %esp
.LCFI703:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 8839 0
	movl	$0, -20(%ebp)
	.loc 1 8841 0
	movl	$0, -16(%ebp)
	.loc 1 8842 0
	movl	$0, -12(%ebp)
	.loc 1 8844 0
	cmpl	$0, 8(%ebp)
	jne	.L3879
	.loc 1 8846 0
	cmpl	$0, 12(%ebp)
	je	.L4016
	.loc 1 8847 0
	leal	.LC204@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8848 0
	jmp	.L4016
.L3879:
	.loc 1 8852 0
	movl	$0, -28(%ebp)
	.loc 1 8855 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3884
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L3884
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L3887
.L3884:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -48(%ebp)
.L3887:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	%eax, -48(%ebp)
	jne	.L3888
	.loc 1 8856 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_apply_renaming_pragma@PLT
	movl	%eax, 16(%ebp)
.L3888:
	.loc 1 8857 0
	cmpl	$0, 16(%ebp)
	je	.L3890
	.loc 1 8858 0
	movl	16(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -16(%ebp)
.L3890:
	.loc 1 8860 0
	cmpl	$0, 12(%ebp)
	je	.L3892
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L3892
	.loc 1 8862 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC205@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8864 0
	movl	$0, 12(%ebp)
.L3892:
	.loc 1 8867 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L3895
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L3897
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L3899
.L3897:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
.L3899:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, -44(%ebp)
	jne	.L3895
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L3895
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L3902
	cmpl	$0, 12(%ebp)
	je	.L3895
.L3902:
	.loc 1 8871 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$64, %eax
	movb	%al, 6(%edx)
.L3895:
	.loc 1 8873 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3904
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L3904
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L3904
	movl	8(%ebp), %eax
	movl	56(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	je	.L3904
	cmpl	$0, 12(%ebp)
	je	.L3904
	.loc 1 8880 0
	call	pop_decl_namespace@PLT
.L3904:
	.loc 1 8883 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 8885 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L4016
	.loc 1 8888 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_has_mutable_p@PLT
	testl	%eax, %eax
	je	.L3911
	.loc 1 8889 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %edx
	andl	$-17, %edx
	movb	%dl, 9(%eax)
.L3911:
	.loc 1 8891 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L3913
	.loc 1 8894 0
	call	at_function_scope_p@PLT
	testl	%eax, %eax
	je	.L3915
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$37, %al
	je	.L3915
	.loc 1 8896 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	add_decl_stmt@PLT
.L3915:
	.loc 1 8898 0
	cmpl	$0, 12(%ebp)
	je	.L3921
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L3921
	.loc 1 8899 0
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 8900 0
	jmp	.L3921
.L3913:
	.loc 1 8904 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	jne	.L3922
	leal	__FUNCTION__.27542@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$8904, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L3922:
	.loc 1 8907 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L3924
	.loc 1 8909 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3926
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L3928
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L3928
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L3928
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L3928
	movl	-24(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L3926
.L3928:
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L3926
	.loc 1 8912 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L3934
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L3934
	.loc 1 8913 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC206@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L3934:
	.loc 1 8914 0
	movl	8(%ebp), %eax
	movl	52(%eax), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	set_identifier_type_value@PLT
	.loc 1 8915 0
	movl	-24(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	8(%edx), %eax
	orl	$16, %eax
	movb	%al, 8(%edx)
.L3926:
	.loc 1 8921 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	72(%eax), %eax
	movl	(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L3937
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L3937
	.loc 1 8923 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$1, %edx
	movb	%dl, 33(%eax)
.L3937:
	.loc 1 8925 0
	movl	at_eof@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	sete	%al
	movzbl	%al, %eax
	movl	%edx, 12(%esp)
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	rest_of_decl_compilation@PLT
	.loc 1 8927 0
	jmp	.L3940
.L3924:
	.loc 1 8930 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L3941
	.loc 1 8931 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	target_type@PLT
	movl	%eax, -20(%ebp)
.L3941:
	.loc 1 8933 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L3943
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L3943
	movl	-24(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L3946
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L3943
.L3946:
	.loc 1 8941 0
	movl	$1, -12(%ebp)
	.loc 1 8942 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %edx
	andl	$-17, %edx
	movb	%dl, 9(%eax)
.L3943:
	.loc 1 8945 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$38, %al
	jne	.L3948
	cmpl	$0, -16(%ebp)
	je	.L3948
	.loc 1 8949 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 104(%eax)
	.loc 1 8950 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 92(%eax)
	.loc 1 8951 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_decl_rtl@PLT
	.loc 1 8945 0
	jmp	.L3951
.L3948:
	.loc 1 8953 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$37, %al
	jne	.L3952
	.loc 1 8954 0
	leal	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_initializer
	movl	%eax, 12(%ebp)
	jmp	.L3951
.L3952:
	.loc 1 8955 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3951
	.loc 1 8959 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3955
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	pod_type_p@PLT
	testl	%eax, %eax
	jne	.L3955
	.loc 1 8960 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC207@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L3955:
	.loc 1 8964 0
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L3958
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3960
	cmpl	$0, 12(%ebp)
	je	.L3958
.L3960:
	.loc 1 8971 0
	leal	-28(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_initializer
	movl	%eax, 12(%ebp)
	.loc 1 8973 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3962
	cmpl	$0, 12(%ebp)
	je	.L3962
	.loc 1 8975 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC208@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 8977 0
	movl	$0, 12(%ebp)
.L3962:
	.loc 1 8991 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3965
	movl	8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L3965
	.loc 1 8992 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	$1, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	build_zero_init@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 68(%eax)
.L3965:
	.loc 1 8997 0
	movl	8(%ebp), %eax
	movzbl	11(%eax), %edx
	orl	$2, %edx
	movb	%dl, 11(%eax)
	.loc 1 8964 0
	jmp	.L3951
.L3958:
	.loc 1 9003 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L3951
	.loc 1 9004 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
.L3951:
	.loc 1 9010 0
	call	current_stmt_tree@PLT
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L3969
	call	at_function_scope_p@PLT
	testl	%eax, %eax
	je	.L3969
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$37, %al
	je	.L3969
	.loc 1 9013 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	add_decl_stmt@PLT
.L3969:
	.loc 1 9015 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3973
	.loc 1 9016 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_var_decl
.L3973:
	.loc 1 9021 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L3975
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L3975
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$37, %al
	jne	.L3978
.L3975:
	.loc 1 9024 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L3979
	.loc 1 9025 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_commonize_var
.L3979:
	.loc 1 9027 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	make_rtl_for_nonlocal_decl
	.loc 1 9029 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	je	.L3981
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L3983
.L3981:
	.loc 1 9031 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	strip_array_types@PLT
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	abstract_virtuals_error@PLT
	.loc 1 9029 0
	jmp	.L3984
.L3983:
	.loc 1 9034 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	strip_array_types@PLT
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	abstract_virtuals_error@PLT
.L3984:
	.loc 1 9036 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L3921
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L3921
	.loc 1 9040 0
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L3987
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L3989
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L3987
.L3989:
	.loc 1 9044 0
	cmpl	$0, 12(%ebp)
	je	.L3921
	.loc 1 9045 0
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 9040 0
	jmp	.L3921
.L3987:
	.loc 1 9050 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L3993
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3993
	.loc 1 9053 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L3996
	.loc 1 9054 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_inject_for_scope_var@PLT
.L3996:
	.loc 1 9056 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L3998
	.loc 1 9058 0
	cmpl	$0, 12(%ebp)
	jne	.L4000
	movl	8(%ebp), %eax
	movl	68(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L3993
.L4000:
	.loc 1 9059 0
	movl	8(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 68(%edx)
	jmp	.L3993
.L3998:
	.loc 1 9061 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L3993
	.loc 1 9062 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	initialize_local_var
.L3993:
	.loc 1 9065 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L3921
	.loc 1 9066 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	expand_static_init
.L3921:
.LBB90:
	.loc 1 9074 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L4005
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L4007
.L4005:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
.L4007:
	movl	-40(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 9075 0
	cmpl	$0, -8(%ebp)
	je	.L3978
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L3978
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L4010
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L3978
.L4010:
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L3978
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	-8(%ebp), %eax
	jne	.L3978
	.loc 1 9086 0
	call	pop_nested_class@PLT
.L3978:
.LBE90:
	.loc 1 9092 0
	movl	-28(%ebp), %eax
	testl	%eax, %eax
	je	.L3940
	.loc 1 9093 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	add_stmt@PLT
.L3940:
	.loc 1 9097 0
	cmpl	$0, -12(%ebp)
	je	.L4016
	.loc 1 9098 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %edx
	orl	$16, %edx
	movb	%dl, 9(%eax)
.L4016:
	.loc 1 9099 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE199:
	.size	cp_finish_decl, .-cp_finish_decl
.globl finish_decl
	.type	finish_decl, @function
finish_decl:
.LFB200:
	.loc 1 9107 0
	pushl	%ebp
.LCFI704:
	movl	%esp, %ebp
.LCFI705:
	pushl	%ebx
.LCFI706:
	subl	$20, %esp
.LCFI707:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9108 0
	movl	$0, 12(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_finish_decl@PLT
	.loc 1 9109 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE200:
	.size	finish_decl, .-finish_decl
.globl declare_global_var
	.type	declare_global_var, @function
declare_global_var:
.LFB201:
	.loc 1 9122 0
	pushl	%ebp
.LCFI708:
	movl	%esp, %ebp
.LCFI709:
	pushl	%ebx
.LCFI710:
	subl	$36, %esp
.LCFI711:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9125 0
	call	push_to_top_level@PLT
	.loc 1 9126 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$35, (%esp)
	call	build_decl@PLT
	movl	%eax, -8(%ebp)
	.loc 1 9127 0
	movl	-8(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movb	%al, 10(%edx)
	.loc 1 9128 0
	movl	-8(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$1, %eax
	movb	%al, 33(%edx)
	.loc 1 9129 0
	movl	-8(%ebp), %edx
	movzbl	35(%edx), %eax
	orl	$8, %eax
	movb	%al, 35(%edx)
	.loc 1 9130 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	.loc 1 9131 0
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_finish_decl@PLT
	.loc 1 9132 0
	call	pop_from_top_level@PLT
	.loc 1 9134 0
	movl	-8(%ebp), %eax
	.loc 1 9135 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE201:
	.size	declare_global_var, .-declare_global_var
	.section	.rodata
.LC209:
	.string	"__cxa_atexit"
.LC210:
	.string	"atexit"
	.text
	.type	get_atexit_node, @function
get_atexit_node:
.LFB202:
	.loc 1 9143 0
	pushl	%ebp
.LCFI712:
	movl	%esp, %ebp
.LCFI713:
	pushl	%ebx
.LCFI714:
	subl	$52, %esp
.LCFI715:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9150 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	280(%eax), %eax
	testl	%eax, %eax
	je	.L4022
	.loc 1 9151 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	280(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L4024
.L4022:
	.loc 1 9153 0
	movl	flag_use_cxa_atexit@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4025
	.loc 1 9164 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9165 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_function_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9166 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9168 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9169 0
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9170 0
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9172 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_function_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9173 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9174 0
	leal	.LC209@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L4027
.L4025:
	.loc 1 9184 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9185 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9186 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9188 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_function_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9189 0
	leal	.LC210@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
.L4027:
	.loc 1 9193 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	248(%eax), %eax
	movl	%eax, (%esp)
	call	push_lang_context@PLT
	.loc 1 9194 0
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_library_fn_ptr@PLT
	movl	%eax, -24(%ebp)
	.loc 1 9195 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	mark_used@PLT
	.loc 1 9196 0
	call	pop_lang_context@PLT
	.loc 1 9197 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	default_conversion@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 280(%eax)
	.loc 1 9199 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	280(%eax), %eax
	movl	%eax, -40(%ebp)
.L4024:
	movl	-40(%ebp), %eax
	.loc 1 9200 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE202:
	.size	get_atexit_node, .-get_atexit_node
	.section	.rodata
.LC211:
	.string	"__dso_handle"
	.text
	.type	get_dso_handle_node, @function
get_dso_handle_node:
.LFB203:
	.loc 1 9206 0
	pushl	%ebp
.LCFI716:
	movl	%esp, %ebp
.LCFI717:
	pushl	%esi
.LCFI718:
	pushl	%ebx
.LCFI719:
	subl	$16, %esp
.LCFI720:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9207 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	284(%eax), %eax
	testl	%eax, %eax
	je	.L4030
	.loc 1 9208 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	284(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L4032
.L4030:
	.loc 1 9211 0
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %esi
	movl	$12, 4(%esp)
	leal	.LC211@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	declare_global_var@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 284(%eax)
	.loc 1 9214 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	284(%eax), %eax
	movl	%eax, -12(%ebp)
.L4032:
	movl	-12(%ebp), %eax
	.loc 1 9215 0
	addl	$16, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE203:
	.size	get_dso_handle_node, .-get_dso_handle_node
	.local	counter.27933
	.comm	counter.27933,4,4
	.section	.rodata
.LC212:
	.string	"__tcf_%d"
	.text
	.type	start_cleanup_fn, @function
start_cleanup_fn:
.LFB204:
	.loc 1 9222 0
	pushl	%ebp
.LCFI721:
	movl	%esp, %ebp
.LCFI722:
	pushl	%ebx
.LCFI723:
	subl	$84, %esp
.LCFI724:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9222 0
	movl	%gs:20, %eax
	movl	%eax, -8(%ebp)
	xorl	%eax, %eax
	.loc 1 9224 0
	movl	interface_only@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -64(%ebp)
	.loc 1 9225 0
	movl	interface_unknown@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 1 9231 0
	call	push_to_top_level@PLT
	.loc 1 9234 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	248(%eax), %eax
	movl	%eax, (%esp)
	call	push_lang_context@PLT
	.loc 1 9236 0
	movl	interface_only@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 9237 0
	movl	interface_unknown@GOT(%ebx), %eax
	movl	$1, (%eax)
	.loc 1 9240 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 9245 0
	movl	flag_use_cxa_atexit@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4035
	.loc 1 9246 0
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %edx
	movl	-56(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -56(%ebp)
.L4035:
	.loc 1 9248 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_function_type@PLT
	movl	%eax, -52(%ebp)
	.loc 1 9250 0
	movl	counter.27933@GOTOFF(%ebx), %eax
	movl	%eax, %edx
	addl	$1, %eax
	movl	%eax, counter.27933@GOTOFF(%ebx)
	movl	%edx, 8(%esp)
	leal	.LC212@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	sprintf@PLT
	.loc 1 9252 0
	leal	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	get_identifier@PLT
	movl	%eax, %edx
	movl	-52(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$31, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -48(%ebp)
	.loc 1 9255 0
	movl	-48(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$-9, %eax
	movb	%al, 10(%edx)
	.loc 1 9256 0
	movl	-48(%ebp), %edx
	movzbl	35(%edx), %eax
	orl	$8, %eax
	movb	%al, 35(%edx)
	.loc 1 9261 0
	movl	-48(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$8, %eax
	movb	%al, 33(%edx)
	.loc 1 9263 0
	movl	flag_use_cxa_atexit@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4037
.LBB91:
	.loc 1 9267 0
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	cp_build_parm_decl@PLT
	movl	%eax, -44(%ebp)
	.loc 1 9268 0
	movl	-44(%ebp), %edx
	movl	-48(%ebp), %eax
	movl	%eax, 56(%edx)
	.loc 1 9269 0
	movl	-44(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$1, %eax
	movb	%al, 10(%edx)
	.loc 1 9270 0
	movl	-48(%ebp), %edx
	movl	-44(%ebp), %eax
	movl	%eax, 60(%edx)
.L4037:
.LBE91:
	.loc 1 9273 0
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	.loc 1 9274 0
	movl	$1, 12(%esp)
	movl	$0, 8(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	start_function@PLT
	.loc 1 9276 0
	movl	interface_unknown@GOT(%ebx), %edx
	movl	-60(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 9277 0
	movl	interface_only@GOT(%ebx), %edx
	movl	-64(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 9279 0
	call	pop_lang_context@PLT
	.loc 1 9281 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	.loc 1 9282 0
	movl	-8(%ebp), %edx
	xorl	%gs:20, %edx
	je	.L4040
	call	__stack_chk_fail_local
.L4040:
	addl	$84, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE204:
	.size	start_cleanup_fn, .-start_cleanup_fn
	.type	end_cleanup_fn, @function
end_cleanup_fn:
.LFB205:
	.loc 1 9288 0
	pushl	%ebp
.LCFI725:
	movl	%esp, %ebp
.LCFI726:
	pushl	%ebx
.LCFI727:
	subl	$4, %esp
.LCFI728:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9289 0
	movl	$0, (%esp)
	call	finish_function@PLT
	movl	%eax, (%esp)
	call	expand_body@PLT
	.loc 1 9291 0
	call	pop_from_top_level@PLT
	.loc 1 9292 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE205:
	.size	end_cleanup_fn, .-end_cleanup_fn
.globl register_dtor_fn
	.type	register_dtor_fn, @function
register_dtor_fn:
.LFB206:
	.loc 1 9300 0
	pushl	%ebp
.LCFI729:
	movl	%esp, %ebp
.LCFI730:
	pushl	%ebx
.LCFI731:
	subl	$52, %esp
.LCFI732:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9308 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	39(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L4049
	.loc 1 9314 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cleanup@PLT
	.loc 1 9317 0
	call	start_cleanup_fn
	movl	%eax, -24(%ebp)
	.loc 1 9323 0
	movl	flag_access_control@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 9324 0
	movl	flag_access_control@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 9325 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cleanup@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9326 0
	movl	flag_access_control@GOT(%ebx), %edx
	movl	-8(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 9329 0
	movl	$0, (%esp)
	call	begin_compound_stmt@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9330 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_expr_stmt@PLT
	.loc 1 9331 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	finish_compound_stmt@PLT
	.loc 1 9332 0
	call	end_cleanup_fn
	.loc 1 9335 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	cxx_mark_addressable@PLT
	.loc 1 9336 0
	movl	$0, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$123, (%esp)
	call	build_unary_op@PLT
	movl	%eax, -24(%ebp)
	.loc 1 9337 0
	movl	flag_use_cxa_atexit@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4046
	.loc 1 9339 0
	call	get_dso_handle_node
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$123, (%esp)
	call	build_unary_op@PLT
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9342 0
	movl	global_trees@GOT(%ebx), %eax
	movl	56(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9343 0
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -16(%ebp)
	jmp	.L4048
.L4046:
	.loc 1 9346 0
	movl	$0, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -16(%ebp)
.L4048:
	.loc 1 9347 0
	call	get_atexit_node
	movl	-16(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_call@PLT
	movl	%eax, (%esp)
	call	finish_expr_stmt@PLT
.L4049:
	.loc 1 9348 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE206:
	.size	register_dtor_fn, .-register_dtor_fn
	.section	.rodata
	.type	__FUNCTION__.28000, @object
	.size	__FUNCTION__.28000, 19
__FUNCTION__.28000:
	.string	"expand_static_init"
	.align 4
.LC213:
	.string	"multiple initializations given for `%D'"
	.text
	.type	expand_static_init, @function
expand_static_init:
.LFB207:
	.loc 1 9358 0
	pushl	%ebp
.LCFI733:
	movl	%esp, %ebp
.LCFI734:
	pushl	%ebx
.LCFI735:
	subl	$52, %esp
.LCFI736:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9361 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L4051
	leal	__FUNCTION__.28000@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9361, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4051:
	.loc 1 9362 0
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L4053
	leal	__FUNCTION__.28000@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9362, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4053:
	.loc 1 9365 0
	cmpl	$0, 12(%ebp)
	jne	.L4055
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L4055
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	39(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L4069
.L4055:
	.loc 1 9370 0
	movl	static_aggregates@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	value_member@PLT
	movl	%eax, -28(%ebp)
	.loc 1 9372 0
	cmpl	$0, -28(%ebp)
	je	.L4059
	.loc 1 9374 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L4069
	cmpl	$0, 12(%ebp)
	je	.L4069
	.loc 1 9375 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC213@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4069
.L4059:
	.loc 1 9377 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	jne	.L4064
.LBB92:
	.loc 1 9412 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	get_guard@PLT
	movl	%eax, -12(%ebp)
	.loc 1 9415 0
	call	begin_if_stmt@PLT
	movl	%eax, -24(%ebp)
	.loc 1 9416 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	get_guard_cond@PLT
	movl	%eax, %edx
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	finish_if_stmt_cond@PLT
	.loc 1 9417 0
	movl	$0, (%esp)
	call	begin_compound_stmt@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9420 0
	movl	12(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 9430 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	set_guard@PLT
	movl	%eax, -8(%ebp)
	.loc 1 9431 0
	cmpl	$0, -16(%ebp)
	je	.L4066
	.loc 1 9433 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	build_tree_list@PLT
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9436 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_compound_expr@PLT
	movl	%eax, -16(%ebp)
	jmp	.L4068
.L4066:
	.loc 1 9439 0
	movl	-8(%ebp), %eax
	movl	%eax, -16(%ebp)
.L4068:
	.loc 1 9440 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_expr_stmt@PLT
	.loc 1 9444 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	register_dtor_fn@PLT
	.loc 1 9446 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	finish_compound_stmt@PLT
	.loc 1 9447 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_then_clause@PLT
	.loc 1 9448 0
	call	finish_if_stmt@PLT
	jmp	.L4069
.L4064:
.LBE92:
	.loc 1 9451 0
	movl	static_aggregates@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	static_aggregates@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L4069:
	.loc 1 9452 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE207:
	.size	expand_static_init, .-expand_static_init
	.section	.rodata
.LC214:
	.string	"invalid catch parameter"
	.text
.globl start_handler_parms
	.type	start_handler_parms, @function
start_handler_parms:
.LFB208:
	.loc 1 9460 0
	pushl	%ebp
.LCFI737:
	movl	%esp, %ebp
.LCFI738:
	pushl	%ebx
.LCFI739:
	subl	$36, %esp
.LCFI740:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9462 0
	cmpl	$0, 8(%ebp)
	je	.L4071
	.loc 1 9464 0
	movl	$0, 16(%esp)
	movl	$1, 12(%esp)
	movl	$3, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	grokdeclarator@PLT
	movl	%eax, -8(%ebp)
	.loc 1 9466 0
	cmpl	$0, -8(%ebp)
	jne	.L4075
	.loc 1 9467 0
	leal	.LC214@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4075
.L4071:
	.loc 1 9470 0
	movl	$0, -8(%ebp)
.L4075:
	.loc 1 9472 0
	movl	-8(%ebp), %eax
	.loc 1 9473 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE208:
	.size	start_handler_parms, .-start_handler_parms
.globl complete_array_type
	.type	complete_array_type, @function
complete_array_type:
.LFB209:
	.loc 1 9484 0
	pushl	%ebp
.LCFI741:
	movl	%esp, %ebp
.LCFI742:
	pushl	%ebx
.LCFI743:
	subl	$52, %esp
.LCFI744:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9485 0
	movl	$0, -40(%ebp)
	.loc 1 9486 0
	movl	$0, -24(%ebp)
	.loc 1 9488 0
	cmpl	$0, 12(%ebp)
	je	.L4078
	.loc 1 9492 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	72(%eax), %eax
	movl	%eax, (%esp)
	call	char_type_p@PLT
	testl	%eax, %eax
	je	.L4080
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L4080
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L4080
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L4080
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4080
	.loc 1 9498 0
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
.L4080:
	.loc 1 9502 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L4086
.LBB93:
	.loc 1 9505 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	int_size_in_bytes@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9506 0
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	movl	%edx, %eax
	sarl	$31, %edx
	idivl	-20(%ebp)
	subl	$1, %eax
	movl	%eax, %edx
	sarl	$31, %edx
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	%eax, (%esp)
	movl	%edx, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, -40(%ebp)
	jmp	.L4078
.L4086:
.LBE93:
	.loc 1 9509 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$47, %al
	jne	.L4088
.LBB94:
	.loc 1 9511 0
	movl	12(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 9513 0
	movl	$1, 8(%esp)
	movl	$-1, (%esp)
	movl	$-1, 4(%esp)
	call	size_int_wide@PLT
	movl	%eax, -40(%ebp)
	.loc 1 9514 0
	jmp	.L4090
.L4091:
	.loc 1 9516 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L4092
	.loc 1 9517 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L4094
.L4092:
	.loc 1 9519 0
	movl	$1, 8(%esp)
	movl	$1, (%esp)
	movl	$0, 4(%esp)
	call	size_int_wide@PLT
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$60, (%esp)
	call	size_binop@PLT
	movl	%eax, -40(%ebp)
.L4094:
	.loc 1 9514 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L4090:
	cmpl	$0, -16(%ebp)
	jne	.L4091
	.loc 1 9521 0
	movl	-40(%ebp), %edx
	movl	%edx, (%esp)
	call	copy_node@PLT
	movl	%eax, -40(%ebp)
	jmp	.L4078
.L4088:
.LBE94:
	.loc 1 9526 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	12(%ebp), %eax
	je	.L4096
	.loc 1 9527 0
	movl	$1, -24(%ebp)
	jmp	.L4098
.L4096:
	.loc 1 9529 0
	movl	$0, 12(%ebp)
.L4098:
	.loc 1 9532 0
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$0, (%esp)
	movl	$0, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, -40(%ebp)
.L4078:
	.loc 1 9536 0
	cmpl	$0, -40(%ebp)
	jne	.L4099
	.loc 1 9538 0
	cmpl	$0, 16(%ebp)
	je	.L4101
	.loc 1 9539 0
	movl	$0, 8(%esp)
	movl	$0, 12(%esp)
	movl	$0, (%esp)
	movl	$0, 4(%esp)
	call	build_int_2_wide@PLT
	movl	%eax, -40(%ebp)
.L4101:
	.loc 1 9540 0
	movl	$2, -24(%ebp)
.L4099:
	.loc 1 9543 0
	cmpl	$0, -40(%ebp)
	je	.L4103
.LBB95:
	.loc 1 9548 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	build_index_type@PLT
	movl	%eax, -8(%ebp)
	.loc 1 9549 0
	movl	8(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 16(%edx)
	.loc 1 9551 0
	movl	-40(%ebp), %edx
	movl	4(%edx), %eax
	testl	%eax, %eax
	jne	.L4105
	.loc 1 9552 0
	movl	-8(%ebp), %eax
	movl	-40(%ebp), %edx
	movl	%eax, 4(%edx)
.L4105:
	.loc 1 9553 0
	cmpl	$0, 12(%ebp)
	je	.L4107
	.loc 1 9554 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L4109
.L4107:
	.loc 1 9556 0
	movl	$0, -12(%ebp)
.L4109:
	.loc 1 9557 0
	cmpl	$0, -12(%ebp)
	je	.L4110
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L4110
	.loc 1 9558 0
	movl	-12(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 16(%edx)
.L4110:
	.loc 1 9562 0
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L4103
	.loc 1 9563 0
	movl	8(%ebp), %eax
	movl	72(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 16(%edx)
.L4103:
.LBE95:
	.loc 1 9568 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
	.loc 1 9570 0
	movl	-24(%ebp), %eax
	.loc 1 9571 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE209:
	.size	complete_array_type, .-complete_array_type
	.section	.rodata
	.align 4
.LC215:
	.string	"destructor for alien class `%T' cannot be a member"
	.align 4
.LC216:
	.string	"constructor for alien class `%T' cannot be a member"
	.text
	.type	member_function_or_else, @function
member_function_or_else:
.LFB210:
	.loc 1 9581 0
	pushl	%ebp
.LCFI745:
	movl	%esp, %ebp
.LCFI746:
	pushl	%ebx
.LCFI747:
	subl	$20, %esp
.LCFI748:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9582 0
	cmpl	$0, 8(%ebp)
	je	.L4116
	movl	8(%ebp), %eax
	cmpl	12(%ebp), %eax
	je	.L4116
	.loc 1 9584 0
	cmpl	$1, 16(%ebp)
	jne	.L4119
	.loc 1 9585 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC215@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4121
.L4119:
	.loc 1 9588 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC216@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4121:
	.loc 1 9590 0
	movl	$0, -8(%ebp)
	jmp	.L4122
.L4116:
	.loc 1 9592 0
	movl	$1, -8(%ebp)
.L4122:
	movl	-8(%ebp), %eax
	.loc 1 9593 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE210:
	.size	member_function_or_else, .-member_function_or_else
	.section	.rodata
	.align 4
.LC217:
	.string	"`%D' declared as a `virtual' %s"
	.align 4
.LC218:
	.string	"`%D' declared as an `inline' %s"
	.align 4
.LC219:
	.string	"`const' and `volatile' function specifiers on `%D' invalid in %s declaration"
.LC220:
	.string	"`%D' declared as a friend"
	.align 4
.LC221:
	.string	"`%D' declared with an exception specification"
	.text
	.type	bad_specifiers, @function
bad_specifiers:
.LFB211:
	.loc 1 9605 0
	pushl	%ebp
.LCFI749:
	movl	%esp, %ebp
.LCFI750:
	pushl	%ebx
.LCFI751:
	subl	$20, %esp
.LCFI752:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9606 0
	cmpl	$0, 16(%ebp)
	je	.L4125
	.loc 1 9607 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC217@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4125:
	.loc 1 9608 0
	cmpl	$0, 24(%ebp)
	je	.L4127
	.loc 1 9609 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC218@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4127:
	.loc 1 9610 0
	cmpl	$0, 20(%ebp)
	je	.L4129
	.loc 1 9611 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC219@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4129:
	.loc 1 9613 0
	cmpl	$0, 28(%ebp)
	je	.L4131
	.loc 1 9614 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC220@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L4131:
	.loc 1 9615 0
	cmpl	$0, 32(%ebp)
	je	.L4143
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L4135
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$14, %al
	jne	.L4137
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	je	.L4143
.L4137:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L4139
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	je	.L4143
.L4139:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	jne	.L4135
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L4135
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	92(%eax), %eax
	movzbl	8(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L4143
.L4135:
	.loc 1 9620 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC221@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
.L4143:
	.loc 1 9621 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE211:
	.size	bad_specifiers, .-bad_specifiers
	.section	.rodata
	.type	__FUNCTION__.28248, @object
	.size	__FUNCTION__.28248, 11
__FUNCTION__.28248:
	.string	"grokfndecl"
.LC222:
	.string	"builtin_"
	.align 4
.LC223:
	.string	"cannot declare `::main' to be a template"
	.align 4
.LC224:
	.string	"cannot declare `::main' to be inline"
	.align 4
.LC225:
	.string	"cannot declare `::main' to be static"
.LC226:
	.string	"`main' must return `int'"
	.align 4
.LC227:
	.string	"non-local function `%#D' uses anonymous type"
	.align 4
.LC228:
	.string	"`%#D' does not refer to the unqualified type, so it is not used for linkage"
	.align 4
.LC229:
	.string	"non-local function `%#D' uses local type `%T'"
.LC230:
	.string	"static "
.LC231:
	.string	"non-"
	.align 4
.LC232:
	.string	"%smember function `%D' cannot have `%T' method qualifier"
	.align 4
.LC233:
	.string	"defining explicit specialization `%D' in friend declaration"
	.align 4
.LC234:
	.string	"invalid use of template-id `%D' in declaration of primary template"
	.align 4
.LC235:
	.string	"default arguments are not allowed in declaration of friend template specialization `%D'"
	.align 4
.LC236:
	.string	"`inline' is not allowed in declaration of friend template specialization `%D'"
	.align 4
.LC237:
	.string	"definition of implicitly-declared `%D'"
	.align 4
.LC238:
	.string	"no `%#D' member function declared in class `%T'"
	.text
	.type	grokfndecl, @function
grokfndecl:
.LFB212:
	.loc 1 9650 0
	pushl	%ebp
.LCFI753:
	movl	%esp, %ebp
.LCFI754:
	pushl	%edi
.LCFI755:
	pushl	%esi
.LCFI756:
	pushl	%ebx
.LCFI757:
	subl	$124, %esp
.LCFI758:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9652 0
	cmpl	$0, 8(%ebp)
	je	.L4145
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L4145
	movl	$1, -100(%ebp)
	jmp	.L4148
.L4145:
	movl	$0, -100(%ebp)
.L4148:
	movl	-100(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 1 9653 0
	movl	$0, -36(%ebp)
	.loc 1 9656 0
	cmpl	$0, 36(%ebp)
	je	.L4149
	.loc 1 9657 0
	movl	36(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, 12(%ebp)
.L4149:
	.loc 1 9659 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$31, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -44(%ebp)
	.loc 1 9661 0
	movl	12(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4151
	.loc 1 9662 0
	movl	-44(%ebp), %eax
	movzbl	9(%eax), %edx
	orl	$8, %edx
	movb	%dl, 9(%eax)
.L4151:
	.loc 1 9665 0
	cmpl	$0, 64(%ebp)
	je	.L4153
	.loc 1 9666 0
	movl	44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	64(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	set_decl_namespace@PLT
	jmp	.L4155
.L4153:
	.loc 1 9667 0
	cmpl	$0, 8(%ebp)
	jne	.L4155
	.loc 1 9668 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L4157
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -96(%ebp)
	jmp	.L4159
.L4157:
	movl	$0, -96(%ebp)
.L4159:
	movl	-44(%ebp), %eax
	movl	-96(%ebp), %edx
	movl	%edx, 56(%eax)
.L4155:
	.loc 1 9671 0
	movl	global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	16(%ebp), %eax
	je	.L4160
	movl	16(%ebp), %eax
	movl	20(%eax), %eax
	cmpl	$10, %eax
	jbe	.L4162
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L4162
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L4162
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	addl	$2, %eax
	movl	%eax, -104(%ebp)
	leal	.LC222@GOTOFF(%ebx), %ecx
	movl	%ecx, -108(%ebp)
	movl	$8, -112(%ebp)
	cld
	movl	-104(%ebp), %esi
	movl	-108(%ebp), %edi
	movl	-112(%ebp), %ecx
	repz
	cmpsb
	seta	%dl
	setb	%al
	movl	%edx, %ecx
	subb	%al, %cl
	movl	%ecx, %eax
	movsbl	%al,%eax
	testl	%eax, %eax
	jne	.L4162
.L4160:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	32(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4162
	cmpl	$0, 8(%ebp)
	jne	.L4162
	movl	-44(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L4162
	.loc 1 9680 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movb	$0, 4(%eax)
.L4162:
	.loc 1 9683 0
	cmpl	$0, -40(%ebp)
	je	.L4169
	.loc 1 9685 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	5(%edx), %eax
	orl	$16, %eax
	movb	%al, 5(%edx)
	.loc 1 9686 0
	movl	-44(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 56(%edx)
.L4169:
	.loc 1 9689 0
	cmpl	$0, 8(%ebp)
	je	.L4171
	.loc 1 9690 0
	movl	-44(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 56(%edx)
.L4171:
	.loc 1 9692 0
	cmpl	$0, 8(%ebp)
	jne	.L4173
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L4173
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L4176
	movl	-44(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L4173
.L4176:
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L4178
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	sete	-90(%ebp)
	jmp	.L4180
.L4178:
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	sete	-90(%ebp)
.L4180:
	cmpb	$0, -90(%ebp)
	je	.L4173
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L4173
	movl	-44(%ebp), %eax
	movl	52(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4173
	.loc 1 9694 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L4184
	.loc 1 9695 0
	leal	.LC223@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4184:
	.loc 1 9696 0
	cmpl	$0, 52(%ebp)
	je	.L4186
	.loc 1 9697 0
	leal	.LC224@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4186:
	.loc 1 9698 0
	cmpl	$0, 48(%ebp)
	jne	.L4188
	.loc 1 9699 0
	leal	.LC225@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4188:
	.loc 1 9700 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L4190
	.loc 1 9702 0
	leal	.LC226@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4190:
	.loc 1 9703 0
	movl	$0, 52(%ebp)
	.loc 1 9704 0
	movl	$1, 48(%ebp)
.L4173:
	.loc 1 9710 0
	cmpl	$0, 8(%ebp)
	je	.L4192
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L4194
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L4196
.L4194:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L4197
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L4197
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L4197
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L4197
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L4197
.L4196:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	jne	.L4202
.L4197:
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L4202
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	je	.L4204
.L4202:
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	decl_function_context@PLT
	testl	%eax, %eax
	je	.L4192
.L4204:
	.loc 1 9712 0
	movl	$0, 48(%ebp)
.L4192:
	.loc 1 9714 0
	cmpl	$0, 48(%ebp)
	je	.L4205
	.loc 1 9721 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	no_linkage_check@PLT
	movl	%eax, -32(%ebp)
	.loc 1 9722 0
	cmpl	$0, -32(%ebp)
	je	.L4205
	.loc 1 9724 0
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L4208
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L4210
.L4208:
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L4211
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L4211
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L4211
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L4211
	movl	-32(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L4211
.L4210:
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	jne	.L4216
.L4211:
	movl	-32(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L4216
	movl	-32(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L4216
	.loc 1 9726 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L4219
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	sete	-89(%ebp)
	jmp	.L4221
.L4219:
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	sete	-89(%ebp)
.L4221:
	movzbl	-89(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L4205
	.loc 1 9730 0
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC227@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 9732 0
	movl	-32(%ebp), %eax
	movl	56(%eax), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L4205
	.loc 1 9733 0
	movl	-32(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC228@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_pedwarn_at@PLT
	.loc 1 9724 0
	jmp	.L4205
.L4216:
	.loc 1 9739 0
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC229@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L4205:
	.loc 1 9744 0
	movl	48(%ebp), %eax
	andl	$1, %eax
	movl	-44(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	10(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 9745 0
	cmpl	$0, 48(%ebp)
	jne	.L4225
	.loc 1 9747 0
	movl	-44(%ebp), %edx
	movzbl	38(%edx), %eax
	orl	$4, %eax
	movb	%al, 38(%edx)
	.loc 1 9748 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$16, %eax
	movb	%al, 6(%edx)
.L4225:
	.loc 1 9751 0
	movl	-44(%ebp), %eax
	movzbl	37(%eax), %edx
	andl	$-9, %edx
	movb	%dl, 37(%eax)
	.loc 1 9753 0
	cmpl	$0, 52(%ebp)
	je	.L4227
	.loc 1 9754 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	(%edx), %eax
	orl	$1, %eax
	movb	%al, (%edx)
.L4227:
	.loc 1 9757 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4229
	.loc 1 9758 0
	movl	-44(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$8, %edx
	movb	%dl, 33(%eax)
.L4229:
	.loc 1 9759 0
	movl	flag_inline_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$2, %eax
	jne	.L4231
	movl	-44(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L4231
	cmpl	$0, 56(%ebp)
	je	.L4231
	.loc 1 9761 0
	movl	-44(%ebp), %edx
	movzbl	37(%edx), %eax
	orl	$8, %eax
	movb	%al, 37(%edx)
	.loc 1 9762 0
	movl	-44(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$8, %eax
	movb	%al, 33(%edx)
.L4231:
	.loc 1 9765 0
	movl	-44(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$1, %edx
	movb	%dl, 33(%eax)
	.loc 1 9766 0
	cmpl	$0, 32(%ebp)
	je	.L4235
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L4235
	.loc 1 9768 0
	movl	32(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -88(%ebp)
	cmpl	$0, 8(%ebp)
	je	.L4238
	leal	.LC230@GOTOFF(%ebx), %esi
	movl	%esi, -84(%ebp)
	jmp	.L4240
.L4238:
	leal	.LC231@GOTOFF(%ebx), %edi
	movl	%edi, -84(%ebp)
.L4240:
	movl	-88(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-84(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	.LC232@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 9770 0
	movl	$0, 32(%ebp)
.L4235:
	.loc 1 9773 0
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L4241
	.loc 1 9774 0
	movl	44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	grok_op_properties@PLT
.L4241:
	.loc 1 9776 0
	cmpl	$0, 8(%ebp)
	je	.L4243
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_function_context@PLT
	testl	%eax, %eax
	je	.L4243
	.loc 1 9777 0
	movl	-44(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$4, %edx
	movb	%dl, 33(%eax)
.L4243:
	.loc 1 9779 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L4246
.L4247:
	.loc 1 9780 0
	movl	-32(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L4248
	movl	-32(%ebp), %eax
	movl	16(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-54, %al
	jne	.L4248
	.loc 1 9783 0
	movl	$1, -36(%ebp)
	.loc 1 9784 0
	jmp	.L4251
.L4248:
	.loc 1 9779 0
	movl	-32(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
.L4246:
	cmpl	$0, -32(%ebp)
	jne	.L4247
.L4251:
	.loc 1 9787 0
	cmpl	$0, 44(%ebp)
	je	.L4252
	movl	20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L4252
	.loc 1 9790 0
	cmpl	$0, 56(%ebp)
	je	.L4255
	.loc 1 9791 0
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC233@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4252
.L4255:
.LBB96:
	.loc 1 9796 0
	movl	20(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 9797 0
	movl	20(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 9799 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	60(%eax), %esi
	movl	64(%eax), %edi
	movl	%esi, -80(%ebp)
	movl	%edi, -76(%ebp)
	call	current_scope@PLT
	movl	%eax, (%esp)
	call	template_class_depth@PLT
	movl	%eax, -72(%ebp)
	movl	%eax, %edi
	sarl	$31, %edi
	movl	%edi, -68(%ebp)
	movl	-68(%ebp), %eax
	cmpl	%eax, -76(%ebp)
	jl	.L4257
	movl	-68(%ebp), %edx
	cmpl	%edx, -76(%ebp)
	jg	.L4259
	movl	-72(%ebp), %ecx
	cmpl	%ecx, -80(%ebp)
	jbe	.L4257
.L4259:
	.loc 1 9802 0
	movl	20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC234@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 9804 0
	movl	$0, -64(%ebp)
	jmp	.L4260
.L4257:
	.loc 1 9810 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	andl	$-7, %eax
	orl	$2, %eax
	movb	%al, 6(%edx)
	.loc 1 9812 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$40, %al
	jne	.L4261
	.loc 1 9819 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	je	.L4263
	leal	__FUNCTION__.28248@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9820, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4263:
	.loc 1 9821 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -28(%ebp)
.L4261:
	.loc 1 9823 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L4265
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-50, %al
	je	.L4265
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-52, %al
	jne	.L4268
.L4265:
	movl	$1, -60(%ebp)
	jmp	.L4269
.L4268:
	movl	$0, -60(%ebp)
.L4269:
	cmpl	$0, -60(%ebp)
	jne	.L4270
	leal	__FUNCTION__.28248@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9825, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4270:
	.loc 1 9826 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %esi
	movl	$0, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, 8(%esi)
	.loc 1 9828 0
	cmpl	$0, -36(%ebp)
	je	.L4272
	.loc 1 9830 0
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC235@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 9832 0
	movl	$0, -64(%ebp)
	jmp	.L4260
.L4272:
	.loc 1 9835 0
	cmpl	$0, 52(%ebp)
	je	.L4252
	.loc 1 9837 0
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC236@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 9839 0
	movl	$0, -64(%ebp)
	jmp	.L4260
.L4252:
.LBE96:
	.loc 1 9844 0
	cmpl	$0, -36(%ebp)
	je	.L4275
	.loc 1 9845 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	add_defarg_fn@PLT
.L4275:
	.loc 1 9847 0
	cmpl	$0, 56(%ebp)
	je	.L4277
	.loc 1 9850 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-44(%ebp), %eax
	movl	%edx, 68(%eax)
.L4277:
	.loc 1 9852 0
	movl	12(%ebp), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L4279
	movl	12(%ebp), %eax
	movl	76(%eax), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L4281
.L4279:
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	nothrow_libfn_p@PLT
	testl	%eax, %eax
	je	.L4282
.L4281:
	.loc 1 9853 0
	movl	-44(%ebp), %eax
	movzbl	10(%eax), %edx
	orl	$2, %edx
	movb	%dl, 10(%eax)
.L4282:
	.loc 1 9856 0
	cmpl	$0, 40(%ebp)
	jns	.L4283
	.loc 1 9857 0
	movl	-44(%ebp), %esi
	movl	%esi, -64(%ebp)
	jmp	.L4260
.L4283:
	.loc 1 9859 0
	cmpl	$0, 28(%ebp)
	jne	.L4285
	cmpl	$0, 8(%ebp)
	je	.L4285
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	cmpl	16(%ebp), %eax
	jne	.L4285
	.loc 1 9860 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	5(%edx), %eax
	orl	$2, %eax
	movb	%al, 5(%edx)
.L4285:
	.loc 1 9865 0
	cmpl	$0, 8(%ebp)
	je	.L4289
	.loc 1 9866 0
	movl	32(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	grokclassfn@PLT
.L4289:
	.loc 1 9868 0
	cmpl	$0, 56(%ebp)
	je	.L4291
	movl	$2, -56(%ebp)
	jmp	.L4293
.L4291:
	movl	$0, -56(%ebp)
.L4293:
	cmpl	$0, 44(%ebp)
	je	.L4294
	movl	$4, -52(%ebp)
	jmp	.L4296
.L4294:
	movl	$0, -52(%ebp)
.L4296:
	movl	-56(%ebp), %eax
	addl	-52(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	60(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	20(%ebp), %eax
	movl	%eax, (%esp)
	call	check_explicit_specialization@PLT
	movl	%eax, -44(%ebp)
	.loc 1 9872 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L4297
	.loc 1 9873 0
	movl	$0, -64(%ebp)
	jmp	.L4260
.L4297:
	.loc 1 9875 0
	cmpl	$0, 8(%ebp)
	je	.L4299
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4301
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	check_java_method@PLT
	testl	%eax, %eax
	je	.L4299
.L4301:
	cmpl	$0, 40(%ebp)
	je	.L4299
.LBB97:
	.loc 1 9881 0
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_classfn@PLT
	movl	%eax, -20(%ebp)
	.loc 1 9883 0
	cmpl	$0, -20(%ebp)
	je	.L4304
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L4304
	.loc 1 9888 0
	movl	-20(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -20(%ebp)
.L4304:
	.loc 1 9890 0
	cmpl	$0, -20(%ebp)
	je	.L4307
	movl	-20(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L4307
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L4307
	.loc 1 9895 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	revert_static_member_fn@PLT
	.loc 1 9896 0
	movl	last_function_parms@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	last_function_parms@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L4307:
	.loc 1 9898 0
	cmpl	$0, -20(%ebp)
	je	.L4311
	movl	-20(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4311
	.loc 1 9899 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC237@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4311:
	.loc 1 9901 0
	cmpl	$0, -20(%ebp)
	je	.L4299
	.loc 1 9905 0
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L4315
	.loc 1 9906 0
	movl	-44(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -44(%ebp)
.L4315:
	.loc 1 9910 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	duplicate_decls@PLT
	testl	%eax, %eax
	jne	.L4317
	.loc 1 9911 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC238@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4317:
	.loc 1 9913 0
	movl	-20(%ebp), %edi
	movl	%edi, -64(%ebp)
	jmp	.L4260
.L4299:
.LBE97:
	.loc 1 9917 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L4319
	movl	-44(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	grok_ctor_properties@PLT
	testl	%eax, %eax
	jne	.L4319
	.loc 1 9918 0
	movl	$0, -64(%ebp)
	jmp	.L4260
.L4319:
	.loc 1 9920 0
	cmpl	$0, 8(%ebp)
	je	.L4322
	cmpl	$0, 40(%ebp)
	je	.L4324
.L4322:
	.loc 1 9921 0
	movl	-44(%ebp), %eax
	movl	%eax, -64(%ebp)
	jmp	.L4260
.L4324:
	.loc 1 9923 0
	cmpl	$0, 24(%ebp)
	je	.L4325
	.loc 1 9924 0
	movl	-44(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$32, %edx
	movb	%dl, 33(%eax)
.L4325:
	.loc 1 9926 0
	movl	-44(%ebp), %edx
	movl	%edx, -64(%ebp)
.L4260:
	movl	-64(%ebp), %eax
	.loc 1 9927 0
	addl	$124, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE212:
	.size	grokfndecl, .-grokfndecl
	.section	.rodata
	.type	__FUNCTION__.28651, @object
	.size	__FUNCTION__.28651, 12
__FUNCTION__.28651:
	.string	"grokvardecl"
	.align 4
.LC239:
	.string	"thread-local storage not supported for this target"
	.align 4
.LC240:
	.string	"non-local variable `%#D' uses local type `%T'"
	.text
	.type	grokvardecl, @function
grokvardecl:
.LFB213:
	.loc 1 9943 0
	pushl	%ebp
.LCFI759:
	movl	%esp, %ebp
.LCFI760:
	pushl	%ebx
.LCFI761:
	subl	$36, %esp
.LCFI762:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 9947 0
	cmpl	$0, 12(%ebp)
	je	.L4329
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	jne	.L4331
.L4329:
	movl	$1, -28(%ebp)
	jmp	.L4332
.L4331:
	movl	$0, -28(%ebp)
.L4332:
	cmpl	$0, -28(%ebp)
	jne	.L4333
	leal	__FUNCTION__.28651@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$9948, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4333:
	.loc 1 9950 0
	movl	16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 9953 0
	cmpl	$0, 28(%ebp)
	jne	.L4335
	.loc 1 9957 0
	movl	-12(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L4337
	.loc 1 9958 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 28(%ebp)
	jmp	.L4335
.L4337:
	.loc 1 9959 0
	call	at_function_scope_p@PLT
	testl	%eax, %eax
	jne	.L4335
	.loc 1 9961 0
	call	current_scope@PLT
	movl	%eax, 28(%ebp)
	.loc 1 9962 0
	cmpl	$0, 28(%ebp)
	jne	.L4335
	.loc 1 9963 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, 28(%ebp)
.L4335:
	.loc 1 9967 0
	cmpl	$0, 28(%ebp)
	je	.L4341
	movl	28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L4343
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L4345
.L4343:
	movl	28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L4346
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	32(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4345
.L4346:
	movl	28(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L4341
.L4345:
	.loc 1 9977 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$35, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -16(%ebp)
	.loc 1 9967 0
	jmp	.L4348
.L4341:
	.loc 1 9979 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$35, (%esp)
	call	build_decl@PLT
	movl	%eax, -16(%ebp)
.L4348:
	.loc 1 9981 0
	cmpl	$0, 28(%ebp)
	je	.L4349
	movl	28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L4349
	.loc 1 9982 0
	movl	$0, 8(%esp)
	movl	28(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	set_decl_namespace@PLT
	.loc 1 9981 0
	jmp	.L4352
.L4349:
	.loc 1 9984 0
	movl	-16(%ebp), %edx
	movl	28(%ebp), %eax
	movl	%eax, 56(%edx)
.L4352:
	.loc 1 9986 0
	cmpl	$0, 12(%ebp)
	je	.L4353
	cmpl	$0, 28(%ebp)
	je	.L4353
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	32(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	248(%eax), %eax
	cmpl	%eax, %edx
	je	.L4353
	.loc 1 9990 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	mangle_decl@PLT
.L4353:
	.loc 1 9992 0
	movl	-12(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L4357
	.loc 1 9994 0
	movl	-16(%ebp), %edx
	movzbl	37(%edx), %eax
	orl	$-128, %eax
	movb	%al, 37(%edx)
	.loc 1 9995 0
	cmpl	$0, 20(%ebp)
	sete	%al
	movl	-16(%ebp), %edx
	movl	%eax, %ecx
	andl	$1, %ecx
	movzbl	33(%edx), %eax
	andl	$-2, %eax
	orl	%ecx, %eax
	movb	%al, 33(%edx)
.L4357:
	.loc 1 10000 0
	movl	-16(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L4359
	movl	-16(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L4359
	.loc 1 10002 0
	movl	-16(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$8, %eax
	movb	%al, 10(%edx)
	.loc 1 10003 0
	movl	-16(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$4, %eax
	movb	%al, 10(%edx)
	.loc 1 10004 0
	movl	-16(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$-2, %eax
	movb	%al, 33(%edx)
	.loc 1 10000 0
	jmp	.L4362
.L4359:
	.loc 1 10008 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	je	.L4363
	.loc 1 10010 0
	movl	-12(%ebp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L4365
	movl	-16(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L4367
	cmpl	$0, 24(%ebp)
	jne	.L4365
.L4367:
	movl	$1, -24(%ebp)
	jmp	.L4369
.L4365:
	movl	$0, -24(%ebp)
.L4369:
	movzbl	-24(%ebp), %eax
	andl	$1, %eax
	movl	-16(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	10(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 10012 0
	movl	-16(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	sete	%al
	movl	-16(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	10(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	jmp	.L4362
.L4363:
	.loc 1 10017 0
	movl	-12(%ebp), %eax
	andl	$1, %eax
	andl	$1, %eax
	andl	$1, %eax
	movl	-16(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	10(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 10018 0
	movl	-16(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	movl	-16(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	10(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
.L4362:
	.loc 1 10021 0
	movl	-12(%ebp), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4370
	.loc 1 10023 0
	movl	targetm@GOT(%ebx), %eax
	movzbl	246(%eax), %eax
	testb	%al, %al
	je	.L4372
	.loc 1 10024 0
	movl	-16(%ebp), %eax
	movzbl	37(%eax), %edx
	orl	$4, %edx
	movb	%dl, 37(%eax)
	jmp	.L4370
.L4372:
	.loc 1 10028 0
	leal	.LC239@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4370:
	.loc 1 10032 0
	movl	-12(%ebp), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4374
	.loc 1 10033 0
	movl	-16(%ebp), %eax
	movzbl	34(%eax), %edx
	orl	$1, %edx
	movb	%dl, 34(%eax)
	jmp	.L4376
.L4374:
	.loc 1 10034 0
	movl	-12(%ebp), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L4377
	.loc 1 10035 0
	movl	-16(%ebp), %eax
	movzbl	34(%eax), %edx
	orl	$4, %edx
	movb	%dl, 34(%eax)
	jmp	.L4376
.L4377:
	.loc 1 10036 0
	movl	-12(%ebp), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L4379
	.loc 1 10037 0
	movl	-16(%ebp), %eax
	movzbl	34(%eax), %edx
	orl	$8, %edx
	movb	%dl, 34(%eax)
	jmp	.L4376
.L4379:
	.loc 1 10038 0
	movl	-12(%ebp), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L4376
	.loc 1 10039 0
	movl	-16(%ebp), %eax
	movzbl	34(%eax), %edx
	orl	$16, %edx
	movb	%dl, 34(%eax)
.L4376:
	.loc 1 10043 0
	movl	-16(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4382
.LBB98:
	.loc 1 10050 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	no_linkage_check@PLT
	movl	%eax, -8(%ebp)
	.loc 1 10051 0
	cmpl	$0, -8(%ebp)
	je	.L4382
	.loc 1 10053 0
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L4385
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L4387
.L4385:
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L4388
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L4388
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L4388
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L4388
	movl	-8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L4388
.L4387:
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	jne	.L4393
.L4388:
	movl	-8(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L4393
	movl	-8(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L4393
	jmp	.L4382
.L4393:
	.loc 1 10056 0
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC240@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L4382:
.LBE98:
	.loc 1 10061 0
	movl	-16(%ebp), %eax
	.loc 1 10062 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE213:
	.size	grokvardecl, .-grokvardecl
	.section	.rodata
.LC241:
	.string	"__ptrmemfunc_type"
	.text
.globl build_ptrmemfunc_type
	.type	build_ptrmemfunc_type, @function
build_ptrmemfunc_type:
.LFB214:
	.loc 1 10069 0
	pushl	%ebp
.LCFI763:
	movl	%esp, %ebp
.LCFI764:
	pushl	%ebx
.LCFI765:
	subl	$68, %esp
.LCFI766:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10072 0
	movl	$0, -8(%ebp)
	.loc 1 10074 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L4398
	.loc 1 10075 0
	movl	8(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L4400
.L4398:
	.loc 1 10081 0
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L4401
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L4403
.L4401:
	movl	$0, -40(%ebp)
.L4403:
	movl	-40(%ebp), %eax
	movl	%eax, -12(%ebp)
	cmpl	$0, -12(%ebp)
	je	.L4404
	.loc 1 10082 0
	movl	-12(%ebp), %eax
	movl	%eax, -44(%ebp)
	jmp	.L4400
.L4404:
	.loc 1 10086 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	testl	%eax, %eax
	je	.L4406
	.loc 1 10087 0
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, (%esp)
	call	build_ptrmemfunc_type@PLT
	movl	%eax, -8(%ebp)
.L4406:
	.loc 1 10090 0
	movl	$21, (%esp)
	call	make_aggr_type@PLT
	movl	%eax, -12(%ebp)
	.loc 1 10092 0
	movl	-12(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	8(%edx), %eax
	orl	$32, %eax
	movb	%al, 8(%edx)
	.loc 1 10094 0
	movl	-12(%ebp), %edx
	movzbl	39(%edx), %eax
	andl	$-33, %eax
	movb	%al, 39(%edx)
	.loc 1 10096 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	236(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -28(%ebp)
	.loc 1 10097 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	40(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	216(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -24(%ebp)
	.loc 1 10099 0
	movl	global_trees@GOT(%ebx), %eax
	movl	132(%eax), %eax
	movl	%eax, 16(%esp)
	movl	$1, 12(%esp)
	leal	-28(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC241@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_builtin_type@PLT
	.loc 1 10103 0
	movl	-12(%ebp), %eax
	movl	$0, 56(%eax)
	.loc 1 10109 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	testl	%eax, %eax
	je	.L4408
	.loc 1 10111 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	build_qualified_type@PLT
	movl	%eax, -12(%ebp)
	.loc 1 10112 0
	movl	-12(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 72(%edx)
	.loc 1 10113 0
	movl	-8(%ebp), %eax
	movl	68(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, 68(%eax)
	.loc 1 10114 0
	movl	-8(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 68(%edx)
.L4408:
	.loc 1 10119 0
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	jne	.L4410
	movl	$8, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 92(%eax)
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	andl	$-2, %eax
	movb	%al, (%edx)
.L4410:
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 10122 0
	movl	-12(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	8(%edx), %eax
	orl	$16, %eax
	movb	%al, 8(%edx)
	.loc 1 10124 0
	movl	-12(%ebp), %eax
	movl	%eax, -44(%ebp)
.L4400:
	movl	-44(%ebp), %eax
	.loc 1 10125 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE214:
	.size	build_ptrmemfunc_type, .-build_ptrmemfunc_type
.globl build_ptrmem_type
	.type	build_ptrmem_type, @function
build_ptrmem_type:
.LFB215:
	.loc 1 10131 0
	pushl	%ebp
.LCFI767:
	movl	%esp, %ebp
.LCFI768:
	pushl	%ebx
.LCFI769:
	subl	$20, %esp
.LCFI770:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10132 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_offset_type@PLT
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	.loc 1 10133 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE215:
	.size	build_ptrmem_type, .-build_ptrmem_type
	.section	.rodata
	.align 4
.LC242:
	.string	"invalid in-class initialization of static data member of non-integral type `%T'"
	.align 4
.LC243:
	.string	"ISO C++ forbids in-class initialization of non-const static member `%D'"
	.align 4
.LC244:
	.string	"ISO C++ forbids initialization of member constant `%D' of non-integral type `%T'"
	.text
.globl check_static_variable_definition
	.type	check_static_variable_definition, @function
check_static_variable_definition:
.LFB216:
	.loc 1 10144 0
	pushl	%ebp
.LCFI771:
	movl	%esp, %ebp
.LCFI772:
	pushl	%ebx
.LCFI773:
	subl	$20, %esp
.LCFI774:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10151 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$12, %al
	je	.L4416
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$7, %al
	je	.L4416
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	je	.L4416
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	je	.L4416
	.loc 1 10153 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC242@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10159 0
	movl	$1, -8(%ebp)
	jmp	.L4421
.L4416:
	.loc 1 10161 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L4422
	.loc 1 10162 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC243@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4424
.L4422:
	.loc 1 10164 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4424
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$7, %al
	je	.L4424
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	je	.L4424
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$12, %al
	je	.L4424
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$13, %al
	je	.L4424
	.loc 1 10165 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC244@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L4424:
	.loc 1 10167 0
	movl	$0, -8(%ebp)
.L4421:
	movl	-8(%ebp), %eax
	.loc 1 10168 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE216:
	.size	check_static_variable_definition, .-check_static_variable_definition
	.section	.rodata
	.align 4
.LC245:
	.string	"size of array `%D' has non-integer type"
	.align 4
.LC246:
	.string	"size of array has non-integer type"
	.align 4
.LC247:
	.string	"size of array `%D' is negative"
.LC248:
	.string	"size of array is negative"
	.align 4
.LC249:
	.string	"ISO C++ forbids zero-size array `%D'"
	.align 4
.LC250:
	.string	"ISO C++ forbids zero-size array"
	.align 4
.LC251:
	.string	"size of array `%D' is not an integral constant-expression"
	.align 4
.LC252:
	.string	"size of array is not an integral constant-expression"
	.align 4
.LC253:
	.string	"ISO C++ forbids variable-size array `%D'"
	.align 4
.LC254:
	.string	"ISO C++ forbids variable-size array"
.LC255:
	.string	"overflow in array dimension"
	.text
.globl compute_array_index_type
	.type	compute_array_index_type, @function
compute_array_index_type:
.LFB217:
	.loc 1 10178 0
	pushl	%ebp
.LCFI775:
	movl	%esp, %ebp
.LCFI776:
	pushl	%edi
.LCFI777:
	pushl	%esi
.LCFI778:
	pushl	%ebx
.LCFI779:
	subl	$76, %esp
.LCFI780:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10186 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L4439
	.loc 1 10190 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-71, %al
	jne	.L4434
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4434
.LBB99:
	.loc 1 10194 0
	movl	12(%ebp), %eax
	movl	24(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	lookup_field@PLT
	movl	%eax, -28(%ebp)
	.loc 1 10195 0
	cmpl	$0, -28(%ebp)
	je	.L4434
	.loc 1 10196 0
	movl	-28(%ebp), %eax
	movl	%eax, 12(%ebp)
.L4434:
.LBE99:
	.loc 1 10199 0
	movl	global_trees@GOT(%ebx), %eax
	movl	48(%eax), %edx
	movl	sizetype_tab@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	%edx, 12(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	$61, (%esp)
	call	build_min@PLT
	movl	%eax, (%esp)
	call	build_index_type@PLT
	movl	%eax, -68(%ebp)
	jmp	.L4438
.L4440:
	.loc 1 10204 0
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
.L4439:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$117, %al
	je	.L4441
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$116, %al
	je	.L4441
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$118, %al
	jne	.L4444
.L4441:
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L4444
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	je	.L4440
.L4444:
	.loc 1 10207 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_constant_value@PLT
	movl	%eax, 12(%ebp)
	.loc 1 10210 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$7, %al
	je	.L4446
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	je	.L4446
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$12, %al
	je	.L4446
	.loc 1 10214 0
	cmpl	$0, 8(%ebp)
	je	.L4450
	.loc 1 10215 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC245@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4452
.L4450:
	.loc 1 10217 0
	leal	.LC246@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4452:
	.loc 1 10218 0
	movl	global_trees@GOT(%ebx), %eax
	movl	48(%eax), %eax
	movl	%eax, 12(%ebp)
.L4446:
	.loc 1 10222 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$26, %al
	jne	.L4453
.LBB100:
	.loc 1 10226 0
	movl	flag_pedantic_errors@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 10227 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 10228 0
	movl	flag_pedantic_errors@GOT(%ebx), %eax
	movl	$1, (%eax)
	movl	flag_pedantic_errors@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	pedantic@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 10229 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	constant_expression_warning@PLT
	.loc 1 10230 0
	movl	pedantic@GOT(%ebx), %edx
	movl	-20(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 10231 0
	movl	flag_pedantic_errors@GOT(%ebx), %edx
	movl	-24(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 10234 0
	movl	12(%ebp), %eax
	movl	28(%eax), %edx
	movl	32(%eax), %ecx
	movl	%edx, -64(%ebp)
	movl	%ecx, -60(%ebp)
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %eax
	movl	28(%eax), %edx
	movl	32(%eax), %ecx
	movl	%edx, -56(%ebp)
	movl	%ecx, -52(%ebp)
	movl	-52(%ebp), %ecx
	cmpl	%ecx, -60(%ebp)
	jl	.L4455
	movl	-52(%ebp), %eax
	cmpl	%eax, -60(%ebp)
	jg	.L4457
	movl	-56(%ebp), %edx
	cmpl	%edx, -64(%ebp)
	jb	.L4455
.L4457:
	movl	12(%ebp), %eax
	movl	28(%eax), %esi
	movl	32(%eax), %edi
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %eax
	movl	32(%eax), %edx
	movl	28(%eax), %eax
	movl	%edi, %ecx
	xorl	%edx, %ecx
	xorl	%esi, %eax
	orl	%ecx, %eax
	testl	%eax, %eax
	jne	.L4458
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	movl	24(%eax), %ecx
	movl	%edx, -48(%ebp)
	movl	%ecx, -44(%ebp)
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %eax
	movl	20(%eax), %edx
	movl	24(%eax), %ecx
	movl	%edx, -40(%ebp)
	movl	%ecx, -36(%ebp)
	movl	-36(%ebp), %ecx
	cmpl	%ecx, -44(%ebp)
	ja	.L4458
	movl	-36(%ebp), %eax
	cmpl	%eax, -44(%ebp)
	jb	.L4455
	movl	-40(%ebp), %edx
	cmpl	%edx, -48(%ebp)
	jae	.L4458
.L4455:
	.loc 1 10236 0
	cmpl	$0, 8(%ebp)
	je	.L4461
	.loc 1 10237 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC247@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4463
.L4461:
	.loc 1 10239 0
	leal	.LC248@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4463:
	.loc 1 10240 0
	movl	global_trees@GOT(%ebx), %eax
	movl	48(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 10234 0
	jmp	.L4470
.L4458:
	.loc 1 10245 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	integer_zerop@PLT
	testl	%eax, %eax
	je	.L4470
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4470
	movl	in_system_header@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4470
	.loc 1 10247 0
	cmpl	$0, 8(%ebp)
	je	.L4468
	.loc 1 10248 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC249@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L4470
.L4468:
	.loc 1 10250 0
	leal	.LC250@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L4470
.L4453:
.LBE100:
	.loc 1 10253 0
	movl	12(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L4470
	.loc 1 10256 0
	cmpl	$0, 8(%ebp)
	je	.L4472
	.loc 1 10257 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC251@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4470
.L4472:
	.loc 1 10260 0
	leal	.LC252@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4470:
	.loc 1 10265 0
	movl	global_trees@GOT(%ebx), %eax
	movl	48(%eax), %edx
	movl	sizetype_tab@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	cp_convert@PLT
	movl	%eax, %esi
	movl	sizetype_tab@GOT(%ebx), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	cp_convert@PLT
	movl	$1, 12(%esp)
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$61, (%esp)
	call	build_binary_op@PLT
	movl	%eax, (%esp)
	call	fold@PLT
	movl	%eax, -32(%ebp)
	.loc 1 10273 0
	movl	-32(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L4474
	.loc 1 10275 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4476
	.loc 1 10277 0
	cmpl	$0, 8(%ebp)
	je	.L4478
	.loc 1 10278 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC253@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L4476
.L4478:
	.loc 1 10281 0
	leal	.LC254@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L4476:
	.loc 1 10285 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	variable_size@PLT
	movl	%eax, -32(%ebp)
	jmp	.L4480
.L4474:
	.loc 1 10290 0
	movl	-32(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L4480
	.loc 1 10292 0
	leal	.LC255@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10293 0
	movl	-32(%ebp), %edx
	movzbl	10(%edx), %eax
	andl	$-9, %eax
	movb	%al, 10(%edx)
.L4480:
	.loc 1 10297 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	build_index_type@PLT
	movl	%eax, -68(%ebp)
.L4438:
	movl	-68(%ebp), %eax
	.loc 1 10298 0
	addl	$76, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE217:
	.size	compute_array_index_type, .-compute_array_index_type
	.section	.rodata
.LC256:
	.string	"array of void"
.LC257:
	.string	"array of functions"
.LC258:
	.string	"array of references"
.LC259:
	.string	"array of data members"
.LC260:
	.string	"array of function members"
.LC261:
	.string	"declaration of `%D' as %s"
.LC262:
	.string	"creating %s"
	.align 4
.LC263:
	.string	"declaration of `%D' as multidimensional array must have bounds for all dimensions except the first"
	.align 4
.LC264:
	.string	"multidimensional array must have bounds for all dimensions except the first"
	.text
	.type	create_array_type_for_decl, @function
create_array_type_for_decl:
.LFB218:
	.loc 1 10309 0
	pushl	%ebp
.LCFI781:
	movl	%esp, %ebp
.LCFI782:
	pushl	%ebx
.LCFI783:
	subl	$36, %esp
.LCFI784:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10310 0
	movl	$0, -12(%ebp)
	.loc 1 10314 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	12(%ebp), %eax
	je	.L4484
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	16(%ebp), %eax
	jne	.L4486
.L4484:
	.loc 1 10315 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L4487
.L4486:
	.loc 1 10318 0
	movl	$0, -8(%ebp)
	.loc 1 10321 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	subl	$6, %eax
	movl	%eax, -28(%ebp)
	cmpl	$18, -28(%ebp)
	ja	.L4488
	movl	-28(%ebp), %eax
	sall	$2, %eax
	movl	.L4494@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L4494:
	.long	.L4489@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4490@GOTOFF
	.long	.L4491@GOTOFF
	.long	.L4492@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4488@GOTOFF
	.long	.L4493@GOTOFF
	.text
.L4489:
	.loc 1 10324 0
	leal	.LC256@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 10325 0
	jmp	.L4488
.L4493:
	.loc 1 10328 0
	leal	.LC257@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 10329 0
	jmp	.L4488
.L4491:
	.loc 1 10332 0
	leal	.LC258@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 10333 0
	jmp	.L4488
.L4490:
	.loc 1 10336 0
	leal	.LC259@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	.loc 1 10337 0
	jmp	.L4488
.L4492:
	.loc 1 10340 0
	leal	.LC260@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
.L4488:
	.loc 1 10348 0
	cmpl	$0, -8(%ebp)
	je	.L4495
	.loc 1 10350 0
	cmpl	$0, 8(%ebp)
	je	.L4497
	.loc 1 10351 0
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC261@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4499
.L4497:
	.loc 1 10353 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC262@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4499:
	.loc 1 10355 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L4487
.L4495:
	.loc 1 10362 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L4500
	movl	12(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L4500
	.loc 1 10364 0
	cmpl	$0, 8(%ebp)
	je	.L4503
	.loc 1 10365 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC263@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4505
.L4503:
	.loc 1 10368 0
	leal	.LC264@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4505:
	.loc 1 10370 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L4487
.L4500:
	.loc 1 10374 0
	cmpl	$0, 16(%ebp)
	je	.L4506
	.loc 1 10375 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	compute_array_index_type@PLT
	movl	%eax, -12(%ebp)
.L4506:
	.loc 1 10377 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cplus_array_type@PLT
	movl	%eax, -24(%ebp)
.L4487:
	movl	-24(%ebp), %eax
	.loc 1 10378 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE218:
	.size	create_array_type_for_decl, .-create_array_type_for_decl
	.section	.rodata
	.align 32
	.type	__FUNCTION__.29079, @object
	.size	__FUNCTION__.29079, 35
__FUNCTION__.29079:
	.string	"check_special_function_return_type"
	.align 4
.LC265:
	.string	"return type specification for constructor invalid"
	.align 4
.LC266:
	.string	"return type specification for destructor invalid"
	.align 4
.LC267:
	.string	"operator `%T' declared to return `%T'"
	.align 4
.LC268:
	.string	"return type specified for `operator %T'"
	.text
	.type	check_special_function_return_type, @function
check_special_function_return_type:
.LFB219:
	.loc 1 10392 0
	pushl	%ebp
.LCFI785:
	movl	%esp, %ebp
.LCFI786:
	pushl	%ebx
.LCFI787:
	subl	$20, %esp
.LCFI788:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10393 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	cmpl	$4, -8(%ebp)
	je	.L4512
	cmpl	$8, -8(%ebp)
	je	.L4513
	cmpl	$1, -8(%ebp)
	je	.L4511
	jmp	.L4510
.L4511:
	.loc 1 10396 0
	cmpl	$0, 12(%ebp)
	je	.L4514
	.loc 1 10397 0
	leal	.LC265@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4514:
	.loc 1 10399 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 10400 0
	jmp	.L4516
.L4512:
	.loc 1 10403 0
	cmpl	$0, 12(%ebp)
	je	.L4517
	.loc 1 10404 0
	leal	.LC266@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4517:
	.loc 1 10405 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 10406 0
	jmp	.L4516
.L4513:
	.loc 1 10409 0
	cmpl	$0, 12(%ebp)
	je	.L4519
	movl	$0, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L4519
	.loc 1 10410 0
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC267@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10409 0
	jmp	.L4522
.L4519:
	.loc 1 10411 0
	cmpl	$0, 12(%ebp)
	je	.L4522
	.loc 1 10412 0
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC268@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L4522:
	.loc 1 10413 0
	movl	16(%ebp), %eax
	movl	%eax, 12(%ebp)
	.loc 1 10414 0
	jmp	.L4516
.L4510:
	.loc 1 10417 0
	leal	__FUNCTION__.29079@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$10417, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4516:
	.loc 1 10421 0
	movl	12(%ebp), %eax
	.loc 1 10422 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE219:
	.size	check_special_function_return_type, .-check_special_function_return_type
	.section	.rodata
	.type	__FUNCTION__.29141, @object
	.size	__FUNCTION__.29141, 15
__FUNCTION__.29141:
	.string	"grokdeclarator"
	.align 4
.LC269:
	.string	"destructors must be member functions"
	.align 4
.LC270:
	.string	"destructor `%T' must match class name `%T'"
	.align 4
.LC271:
	.string	"variable declaration is not allowed here"
.LC272:
	.string	"invalid declarator"
	.align 4
.LC273:
	.string	"declarator-id missing; using reserved word `%D'"
.LC274:
	.string	"<invalid operator>"
	.align 4
.LC275:
	.string	"type `%T' is not derived from type `%T'"
	.align 4
.LC276:
	.string	"`%T' specified as declarator-id"
	.align 4
.LC277:
	.string	"  perhaps you want `%T' for a constructor"
	.align 4
.LC278:
	.string	"invalid use of template-name '%E' in a declarator"
	.align 4
.LC279:
	.string	"declaration of `%D' as non-function"
.LC280:
	.string	"parameter"
.LC281:
	.string	"type name"
.LC282:
	.string	"`bool' is now a keyword"
.LC283:
	.string	"extraneous `%T' ignored"
	.align 4
.LC284:
	.string	"multiple declarations `%T' and `%T'"
	.align 4
.LC285:
	.string	"ISO C++ does not support `long long'"
	.align 4
.LC286:
	.string	"`long long long' is too long for GCC"
.LC287:
	.string	"duplicate `%s'"
.LC288:
	.string	"`__thread' before `extern'"
.LC289:
	.string	"`__thread' before `static'"
	.align 4
.LC290:
	.string	"two or more data types in declaration of `%s'"
	.align 4
.LC291:
	.string	"`%s' fails to be a typedef or built in type"
	.align 4
.LC292:
	.string	"ISO C++ forbids declaration of `%s' with no type"
.LC293:
	.string	"`%T' is implicitly a typename"
.LC294:
	.string	"implicit typename"
	.align 4
.LC295:
	.string	"%s is deprecated, please see the documentation for details"
	.align 4
.LC296:
	.string	"short, signed or unsigned invalid for `%s'"
	.align 4
.LC297:
	.string	"long, short, signed or unsigned invalid for `%s'"
	.align 4
.LC298:
	.string	"long and short specified together for `%s'"
	.align 4
.LC299:
	.string	"long or short specified with char for `%s'"
	.align 4
.LC300:
	.string	"long or short specified with floating type for `%s'"
	.align 4
.LC301:
	.string	"signed and unsigned given together for `%s'"
	.align 4
.LC302:
	.string	"long, short, signed or unsigned used invalidly for `%s'"
.LC303:
	.string	"complex invalid for `%s'"
	.align 4
.LC304:
	.string	"qualifiers are not allowed on declaration of `operator %T'"
	.align 4
.LC305:
	.string	"member `%D' cannot be declared both virtual and static"
	.align 4
.LC306:
	.string	"`%T::%D' is not a valid declarator"
	.align 4
.LC307:
	.string	"storage class specifiers invalid in parameter declarations"
	.align 4
.LC308:
	.string	"typedef declaration invalid in parameter declaration"
	.align 4
.LC309:
	.string	"virtual outside class declaration"
	.align 4
.LC310:
	.string	"multiple storage classes in declaration of `%s'"
.LC311:
	.string	"member operator"
.LC312:
	.string	"field"
	.align 4
.LC313:
	.string	"storage class specified for %s `%s'"
	.align 4
.LC314:
	.string	"storage class specified for parameter `%s'"
	.align 4
.LC315:
	.string	"storage class specified for typename"
	.align 4
.LC316:
	.string	"`%s' initialized and declared `extern'"
	.align 4
.LC317:
	.string	"`%s' has both `extern' and initializer"
	.align 4
.LC318:
	.string	"nested function `%s' declared `extern'"
	.align 4
.LC319:
	.string	"top-level declaration of `%s' specifies `auto'"
	.align 4
.LC320:
	.string	"function-scope `%s' implicitly auto and declared `__thread'"
	.align 4
.LC321:
	.string	"storage class specifiers invalid in friend function declarations"
	.align 4
.LC322:
	.string	"`%s' declared as function returning a function"
	.align 4
.LC323:
	.string	"`%s' declared as function returning an array"
	.align 4
.LC324:
	.string	"destructor cannot be static member function"
.LC325:
	.string	"destructors may not be `%s'"
	.align 4
.LC326:
	.string	"constructor cannot be static member function"
	.align 4
.LC327:
	.string	"constructors cannot be declared virtual"
.LC328:
	.string	"constructors may not be `%s'"
	.align 4
.LC329:
	.string	"return value type specifier for constructor ignored"
	.align 4
.LC330:
	.string	"can't initialize friend function `%s'"
	.align 4
.LC331:
	.string	"virtual functions cannot be friends"
	.align 4
.LC332:
	.string	"friend declaration not in class definition"
	.align 4
.LC333:
	.string	"can't define friend function `%s' in a local class definition"
	.align 4
.LC334:
	.string	"destructors may not have parameters"
	.align 4
.LC335:
	.string	"cannot declare reference to `%#T'"
	.align 4
.LC336:
	.string	"cannot declare pointer to `%#T'"
	.align 4
.LC337:
	.string	"cannot declare pointer to `%#T' member"
	.align 4
.LC338:
	.string	"invalid type modifier within pointer declarator"
.LC339:
	.string	"duplicate `const'"
.LC340:
	.string	"duplicate `volatile'"
.LC341:
	.string	"duplicate `restrict'"
	.align 4
.LC342:
	.string	"extra qualification `%T::' on member `%s' ignored"
	.align 4
.LC343:
	.string	"cannot declare member function `%T::%s' within `%T'"
	.align 4
.LC344:
	.string	"cannot declare member `%T::%s' within `%T'"
	.align 4
.LC345:
	.string	"size of array `%s' is too large"
	.align 4
.LC346:
	.string	"data member may not have variably modified type `%T'"
	.align 4
.LC347:
	.string	"parameter may not have variably modified type `%T'"
	.align 4
.LC348:
	.string	"only declarations of constructors can be `explicit'"
	.align 4
.LC349:
	.string	"non-member `%s' cannot be declared `mutable'"
	.align 4
.LC350:
	.string	"non-object member `%s' cannot be declared `mutable'"
	.align 4
.LC351:
	.string	"function `%s' cannot be declared `mutable'"
	.align 4
.LC352:
	.string	"static `%s' cannot be declared `mutable'"
	.align 4
.LC353:
	.string	"const `%s' cannot be declared `mutable'"
	.align 4
.LC354:
	.string	"template-id `%D' used as a declarator"
	.align 4
.LC355:
	.string	"ISO C++ forbids nested type `%D' with same name as enclosing class"
	.align 4
.LC356:
	.string	"typedef name may not be class-qualified"
	.align 4
.LC357:
	.string	"invalid type qualifier for non-member function type"
.LC358:
	.string	"type"
	.align 4
.LC359:
	.string	"type qualifiers specified for friend class declaration"
	.align 4
.LC360:
	.string	"`inline' specified for friend class declaration"
	.align 4
.LC361:
	.string	"template parameters cannot be friends"
	.align 4
.LC362:
	.string	"friend declaration requires class-key, i.e. `friend class %T::%D'"
	.align 4
.LC363:
	.string	"friend declaration requires class-key, i.e. `friend %#T'"
	.align 4
.LC364:
	.string	"trying to make class `%T' a friend of global scope"
	.align 4
.LC365:
	.string	"invalid qualifiers on non-member function type"
	.align 4
.LC366:
	.string	"abstract declarator `%T' used as declaration"
	.align 4
.LC367:
	.string	"unnamed variable or field declared void"
	.align 4
.LC368:
	.string	"variable or field `%s' declared void"
	.align 4
.LC369:
	.string	"variable or field declared void"
	.align 4
.LC370:
	.string	"cannot use `::' in parameter declaration"
.LC371:
	.string	"invalid use of `::'"
	.align 4
.LC372:
	.string	"function `%D' cannot be declared friend"
	.align 4
.LC373:
	.string	"can't make `%D' into a method -- not in a class"
	.align 4
.LC374:
	.string	"function `%D' declared virtual inside a union"
	.align 4
.LC375:
	.string	"`%D' cannot be declared virtual, since it is always static"
	.align 4
.LC376:
	.string	"field `%D' has incomplete type"
.LC377:
	.string	"name `%T' has incomplete type"
	.align 4
.LC378:
	.string	"  in instantiation of template `%T'"
	.align 4
.LC379:
	.string	"`%s' is neither function nor member function; cannot be declared friend"
	.align 4
.LC380:
	.string	"member functions are implicitly friends of their class"
	.align 4
.LC381:
	.string	"ISO C++ forbids initialization of member `%D'"
.LC382:
	.string	"making `%D' static"
	.align 4
.LC383:
	.string	"ISO C++ forbids static data member `%D' with same name as enclosing class"
	.align 4
.LC384:
	.string	"storage class `auto' invalid for function `%s'"
	.align 4
.LC385:
	.string	"storage class `register' invalid for function `%s'"
	.align 4
.LC386:
	.string	"storage class `__thread' invalid for function `%s'"
	.align 4
.LC387:
	.string	"storage class `static' invalid for function `%s' declared out of global scope"
	.align 4
.LC388:
	.string	"storage class `inline' invalid for function `%s' declared out of global scope"
	.align 4
.LC389:
	.string	"virtual non-class function `%s'"
	.align 4
.LC390:
	.string	"cannot declare member function `%D' to have static linkage"
	.align 4
.LC391:
	.string	"cannot declare static function inside another function"
.LC392:
	.string	"variable"
	.align 4
.LC393:
	.string	"`static' may not be used when defining (as opposed to declaring) a static data member"
	.align 4
.LC394:
	.string	"static member `%D' declared `register'"
	.align 4
.LC395:
	.string	"cannot explicitly declare member `%#D' to have extern linkage"
	.text
.globl grokdeclarator
	.type	grokdeclarator, @function
grokdeclarator:
.LFB220:
	.loc 1 10492 0
	pushl	%ebp
.LCFI789:
	movl	%esp, %ebp
.LCFI790:
	pushl	%esi
.LCFI791:
	pushl	%ebx
.LCFI792:
	subl	$496, %esp
.LCFI793:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 10494 0
	movl	$0, -296(%ebp)
	.loc 1 10496 0
	movl	$0, -304(%ebp)
	.loc 1 10497 0
	movl	$0, -288(%ebp)
	.loc 1 10500 0
	movl	$0, -260(%ebp)
	.loc 1 10501 0
	movl	$0, -256(%ebp)
	.loc 1 10502 0
	movl	$0, -252(%ebp)
	.loc 1 10503 0
	movl	$0, -248(%ebp)
	.loc 1 10504 0
	movl	$0, -244(%ebp)
	.loc 1 10506 0
	movl	$0, -240(%ebp)
	.loc 1 10508 0
	movl	$0, -232(%ebp)
	.loc 1 10509 0
	movl	$0, -228(%ebp)
	.loc 1 10510 0
	movl	$0, -224(%ebp)
	.loc 1 10511 0
	movl	$0, -220(%ebp)
	.loc 1 10518 0
	movl	$0, -216(%ebp)
	.loc 1 10523 0
	movl	$0, -212(%ebp)
	.loc 1 10525 0
	movl	$0, -208(%ebp)
	.loc 1 10526 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -204(%ebp)
	.loc 1 10527 0
	movl	$0, -200(%ebp)
	.loc 1 10528 0
	movl	$0, -196(%ebp)
	.loc 1 10529 0
	movl	$0, -192(%ebp)
	.loc 1 10530 0
	movl	$0, -188(%ebp)
	.loc 1 10531 0
	movl	$0, -184(%ebp)
	.loc 1 10532 0
	movl	$0, -180(%ebp)
	.loc 1 10533 0
	movl	$0, -308(%ebp)
	.loc 1 10535 0
	movl	$0, -300(%ebp)
	.loc 1 10536 0
	cmpl	$1, 16(%ebp)
	jne	.L4526
	.loc 1 10537 0
	movl	$1, -228(%ebp)
	movl	$0, 16(%ebp)
	jmp	.L4528
.L4526:
	.loc 1 10538 0
	cmpl	$7, 16(%ebp)
	jne	.L4529
	.loc 1 10539 0
	movl	$-1, -228(%ebp)
	movl	$4, 16(%ebp)
	jmp	.L4528
.L4529:
	.loc 1 10540 0
	cmpl	$5, 16(%ebp)
	jne	.L4528
	.loc 1 10541 0
	movl	$1, -220(%ebp)
	movl	$4, 16(%ebp)
.L4528:
.LBB101:
	.loc 1 10546 0
	leal	8(%ebp), %eax
	movl	%eax, -176(%ebp)
	.loc 1 10548 0
	movl	$0, -236(%ebp)
	.loc 1 10550 0
	jmp	.L5576
.L4533:
	.loc 1 10552 0
	movl	-176(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -344(%ebp)
	.loc 1 10553 0
	movl	-344(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -444(%ebp)
	cmpl	$52, -444(%ebp)
	je	.L4540
	cmpl	$52, -444(%ebp)
	ja	.L4547
	cmpl	$3, -444(%ebp)
	je	.L4537
	cmpl	$3, -444(%ebp)
	ja	.L4548
	cmpl	$0, -444(%ebp)
	je	.L4535
	cmpl	$1, -444(%ebp)
	je	.L4536
	jmp	.L4534
.L4548:
	cmpl	$42, -444(%ebp)
	je	.L4539
	cmpl	$44, -444(%ebp)
	je	.L4539
	cmpl	$34, -444(%ebp)
	je	.L4538
	jmp	.L4534
.L4547:
	cmpl	$185, -444(%ebp)
	je	.L4543
	cmpl	$185, -444(%ebp)
	ja	.L4549
	cmpl	$92, -444(%ebp)
	je	.L4542
	cmpl	$123, -444(%ebp)
	je	.L4539
	cmpl	$54, -444(%ebp)
	je	.L4541
	jmp	.L4534
.L4549:
	cmpl	$192, -444(%ebp)
	je	.L4545
	cmpl	$203, -444(%ebp)
	je	.L4546
	cmpl	$191, -444(%ebp)
	je	.L4544
	jmp	.L4534
.L4537:
	.loc 1 10557 0
	movl	-344(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -176(%ebp)
	.loc 1 10558 0
	jmp	.L4532
.L4540:
	.loc 1 10561 0
	movl	$0, -204(%ebp)
	.loc 1 10562 0
	movl	-344(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -176(%ebp)
	.loc 1 10563 0
	jmp	.L4532
.L4542:
.LBB102:
	.loc 1 10567 0
	movl	-344(%ebp), %ecx
	movl	20(%ecx), %eax
	movl	%eax, -312(%ebp)
	.loc 1 10568 0
	movl	$0, -172(%ebp)
	.loc 1 10570 0
	cmpl	$0, -196(%ebp)
	je	.L4550
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$10570, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4550:
	.loc 1 10571 0
	movl	$1, -196(%ebp)
	.loc 1 10572 0
	movl	$4, -212(%ebp)
	.loc 1 10573 0
	movl	-312(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L4552
	.loc 1 10574 0
	movl	-312(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	%eax, -312(%ebp)
	movl	-312(%ebp), %eax
	movl	-344(%ebp), %esi
	movl	%eax, 20(%esi)
.L4552:
	.loc 1 10575 0
	movl	-312(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L4554
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$10575, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4554:
	.loc 1 10576 0
	cmpl	$0, -204(%ebp)
	jne	.L4556
	.loc 1 10578 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L4558
	.loc 1 10580 0
	leal	.LC269@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10581 0
	movl	$0, -196(%ebp)
	jmp	.L4562
.L4558:
.LBB103:
	.loc 1 10585 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	%eax, -168(%ebp)
	.loc 1 10586 0
	movl	-312(%ebp), %eax
	cmpl	%eax, -168(%ebp)
	je	.L4562
	.loc 1 10587 0
	movl	-168(%ebp), %eax
	movl	%eax, -172(%ebp)
	jmp	.L4562
.L4556:
.LBE103:
.LBB104:
	.loc 1 10592 0
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	%eax, -164(%ebp)
	.loc 1 10593 0
	movl	-312(%ebp), %eax
	cmpl	%eax, -164(%ebp)
	je	.L4562
	.loc 1 10594 0
	movl	-164(%ebp), %eax
	movl	%eax, -172(%ebp)
.L4562:
.LBE104:
	.loc 1 10597 0
	cmpl	$0, -172(%ebp)
	je	.L4564
	.loc 1 10599 0
	movl	-312(%ebp), %edx
	movl	-172(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC270@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10601 0
	movl	-172(%ebp), %eax
	movl	-344(%ebp), %edx
	movl	%eax, 20(%edx)
.L4564:
	.loc 1 10603 0
	leal	-312(%ebp), %eax
	movl	%eax, -176(%ebp)
	.loc 1 10605 0
	jmp	.L4532
.L4539:
.LBE102:
	.loc 1 10611 0
	movl	$0, -204(%ebp)
	.loc 1 10612 0
	movl	-344(%ebp), %ecx
	movzbl	8(%ecx), %eax
	movzbl	%al, %eax
	movl	%eax, -224(%ebp)
	.loc 1 10613 0
	movl	-344(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -176(%ebp)
	.loc 1 10614 0
	jmp	.L4532
.L4541:
	.loc 1 10617 0
	movl	-344(%ebp), %esi
	movl	24(%esi), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	parmlist_is_exprlist@PLT
	testl	%eax, %eax
	je	.L4566
.LBB105:
	.loc 1 10626 0
	cmpl	$0, 16(%ebp)
	je	.L4568
	.loc 1 10628 0
	leal	.LC271@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10629 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L4568:
	.loc 1 10632 0
	movl	-344(%ebp), %eax
	movl	20(%eax), %edx
	movl	-176(%ebp), %eax
	movl	%edx, (%eax)
	.loc 1 10633 0
	movl	-344(%ebp), %edx
	movl	24(%edx), %eax
	movl	16(%eax), %eax
	movl	%eax, -216(%ebp)
	.loc 1 10635 0
	cmpl	$0, 24(%ebp)
	je	.L4571
	.loc 1 10637 0
	movl	24(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -160(%ebp)
	jmp	.L4573
.L4571:
	.loc 1 10641 0
	movl	$0, -160(%ebp)
.L4573:
	.loc 1 10644 0
	movl	8(%ebp), %edx
	movl	$0, 16(%esp)
	movl	-160(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$1, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	start_decl@PLT
	movl	%eax, -344(%ebp)
	.loc 1 10646 0
	movl	-344(%ebp), %ecx
	movl	%ecx, (%esp)
	call	decl_type_access_control@PLT
	.loc 1 10647 0
	cmpl	$0, -344(%ebp)
	je	.L4574
	.loc 1 10650 0
	movl	-344(%ebp), %esi
	movl	4(%esi), %eax
	movzbl	10(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4576
	.loc 1 10651 0
	movl	-344(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$1, %eax
	movl	-344(%ebp), %ecx
	movb	%al, 10(%ecx)
.L4576:
	.loc 1 10652 0
	movl	$0, 8(%esp)
	movl	-216(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-344(%ebp), %esi
	movl	%esi, (%esp)
	call	finish_decl@PLT
	jmp	.L4578
.L4574:
	.loc 1 10655 0
	leal	.LC272@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4578:
	.loc 1 10656 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L4566:
.LBE105:
	.loc 1 10658 0
	movl	-344(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -224(%ebp)
	.loc 1 10659 0
	cmpl	$4, 16(%ebp)
	jne	.L4579
	cmpl	$0, -204(%ebp)
	jne	.L4579
	.loc 1 10660 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -204(%ebp)
.L4579:
	.loc 1 10661 0
	cmpl	$0, -204(%ebp)
	je	.L4582
	movl	-344(%ebp), %ecx
	movl	20(%ecx), %eax
	testl	%eax, %eax
	je	.L4582
	movl	-344(%ebp), %esi
	movl	20(%esi), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L4582
	movl	-344(%ebp), %edx
	movl	20(%edx), %eax
	movl	52(%eax), %edx
	movl	-204(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	constructor_name_p@PLT
	testb	%al, %al
	je	.L4582
	.loc 1 10666 0
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	-344(%ebp), %ecx
	movl	%eax, 20(%ecx)
.L4582:
	.loc 1 10667 0
	movl	-344(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -176(%ebp)
	.loc 1 10668 0
	movl	-176(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -344(%ebp)
	.loc 1 10669 0
	cmpl	$0, -204(%ebp)
	je	.L4587
	cmpl	$0, -344(%ebp)
	je	.L4587
	cmpl	$1, -196(%ebp)
	je	.L4587
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	cmpl	-344(%ebp), %eax
	jne	.L4587
	.loc 1 10673 0
	movl	$1, -212(%ebp)
	.loc 1 10674 0
	movl	-204(%ebp), %eax
	movl	%eax, -200(%ebp)
.L4587:
	.loc 1 10676 0
	movl	$0, -204(%ebp)
	.loc 1 10677 0
	jmp	.L4532
.L4546:
.LBB106:
	.loc 1 10681 0
	movl	-344(%ebp), %esi
	movl	20(%esi), %eax
	movl	%eax, -156(%ebp)
	.loc 1 10683 0
	movl	-156(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-50, %al
	jne	.L4592
	.loc 1 10684 0
	movl	-156(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -156(%ebp)
.L4592:
	.loc 1 10686 0
	movl	-156(%ebp), %eax
	movl	%eax, -208(%ebp)
	.loc 1 10687 0
	movl	-208(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$40, %al
	jne	.L4594
	.loc 1 10688 0
	movl	-208(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -208(%ebp)
.L4594:
	.loc 1 10689 0
	movl	-208(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L4536
	.loc 1 10691 0
	movl	-208(%ebp), %eax
	movl	%eax, (%esp)
	call	is_overloaded_fn@PLT
	testl	%eax, %eax
	jne	.L4597
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$10692, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4597:
	.loc 1 10693 0
	movl	-208(%ebp), %eax
	movl	%eax, (%esp)
	call	get_first_fn@PLT
	movl	52(%eax), %eax
	movl	%eax, -208(%ebp)
.L4536:
.LBE106:
	.loc 1 10699 0
	movl	-344(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$1, %al
	jne	.L4599
	.loc 1 10700 0
	movl	-344(%ebp), %ecx
	movl	%ecx, -208(%ebp)
.L4599:
	.loc 1 10702 0
	movl	$0, -176(%ebp)
	.loc 1 10704 0
	movl	-208(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L4601
	.loc 1 10706 0
	movl	-208(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC273@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10708 0
	movl	-208(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -236(%ebp)
	jmp	.L4532
.L4601:
	.loc 1 10710 0
	movl	-208(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L4604
	.loc 1 10711 0
	movl	-208(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -236(%ebp)
	jmp	.L4532
.L4604:
	.loc 1 10714 0
	cmpl	$0, -196(%ebp)
	je	.L4606
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$10714, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4606:
	.loc 1 10715 0
	movl	$3, -196(%ebp)
	.loc 1 10716 0
	movl	-208(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -200(%ebp)
	.loc 1 10717 0
	movl	$8, -212(%ebp)
	.loc 1 10718 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-208(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	testl	%eax, %eax
	je	.L4608
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-208(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L4608
	.loc 1 10721 0
	movl	-208(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -236(%ebp)
	.loc 1 10718 0
	jmp	.L4532
.L4608:
	.loc 1 10723 0
	leal	.LC274@GOTOFF(%ebx), %eax
	movl	%eax, -236(%ebp)
	.loc 1 10725 0
	jmp	.L4532
.L4543:
.LBB107:
	.loc 1 10731 0
	movl	-344(%ebp), %esi
	movl	20(%esi), %eax
	movl	%eax, -152(%ebp)
	.loc 1 10732 0
	cmpl	$0, -152(%ebp)
	jne	.L4611
	.loc 1 10733 0
	movl	$0, -204(%ebp)
	jmp	.L4613
.L4611:
	.loc 1 10734 0
	movl	-152(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L4614
	.loc 1 10736 0
	movl	$0, -204(%ebp)
	.loc 1 10737 0
	movl	-344(%ebp), %edx
	movl	20(%edx), %eax
	movl	%eax, -180(%ebp)
	.loc 1 10738 0
	movl	-344(%ebp), %ecx
	movl	$0, 20(%ecx)
	jmp	.L4613
.L4614:
	.loc 1 10740 0
	movl	$1, 4(%esp)
	movl	-152(%ebp), %eax
	movl	%eax, (%esp)
	call	is_aggr_type@PLT
	testl	%eax, %eax
	jne	.L4616
	.loc 1 10741 0
	movl	-344(%ebp), %esi
	movl	$0, 20(%esi)
	jmp	.L4613
.L4616:
	.loc 1 10744 0
	movl	-344(%ebp), %edx
	movl	24(%edx), %eax
	testl	%eax, %eax
	je	.L4618
	movl	-344(%ebp), %ecx
	movl	24(%ecx), %eax
	movzbl	8(%eax), %eax
	cmpb	$42, %al
	jne	.L4618
	.loc 1 10746 0
	movl	-152(%ebp), %eax
	movl	%eax, -204(%ebp)
	.loc 1 10744 0
	jmp	.L4613
.L4618:
	.loc 1 10747 0
	movl	-152(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L4621
	movl	-152(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	jne	.L4623
.L4621:
	.loc 1 10752 0
	movl	-152(%ebp), %eax
	movl	%eax, -204(%ebp)
	.loc 1 10753 0
	movl	-344(%ebp), %esi
	movl	24(%esi), %eax
	movl	%eax, -244(%ebp)
	.loc 1 10747 0
	jmp	.L4613
.L4623:
	.loc 1 10755 0
	cmpl	$0, -204(%ebp)
	jne	.L4624
	.loc 1 10756 0
	movl	-152(%ebp), %eax
	movl	%eax, -204(%ebp)
	jmp	.L4613
.L4624:
	.loc 1 10757 0
	movl	-344(%ebp), %edx
	movl	16(%edx), %eax
	movl	current_class_depth@GOT(%ebx), %edx
	movl	(%edx), %edx
	cmpl	%edx, %eax
	jne	.L4626
	.loc 1 10758 0
	movl	-204(%ebp), %eax
	movl	-344(%ebp), %ecx
	movl	%eax, 20(%ecx)
	jmp	.L4613
.L4626:
	.loc 1 10761 0
	movl	$0, 12(%esp)
	movl	$5, 8(%esp)
	movl	-152(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_base@PLT
	testl	%eax, %eax
	jne	.L4628
	.loc 1 10763 0
	movl	-204(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-152(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC275@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10765 0
	movl	-344(%ebp), %esi
	movl	$0, 20(%esi)
	jmp	.L4613
.L4628:
	.loc 1 10768 0
	movl	-152(%ebp), %eax
	movl	%eax, -204(%ebp)
.L4613:
	.loc 1 10776 0
	movl	-344(%ebp), %edx
	movl	24(%edx), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	jne	.L4630
	.loc 1 10777 0
	movl	-344(%ebp), %ecx
	movl	24(%ecx), %eax
	movl	52(%eax), %eax
	movl	-344(%ebp), %esi
	movl	%eax, 24(%esi)
.L4630:
	.loc 1 10779 0
	cmpl	$0, -204(%ebp)
	je	.L4632
	movl	-344(%ebp), %edx
	movl	24(%edx), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L4632
	movl	-344(%ebp), %ecx
	movl	24(%ecx), %eax
	movl	52(%eax), %edx
	movl	-204(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	constructor_name_p@PLT
	testb	%al, %al
	je	.L4632
	.loc 1 10782 0
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	-344(%ebp), %esi
	movl	%eax, 24(%esi)
.L4632:
	.loc 1 10783 0
	movl	-344(%ebp), %eax
	addl	$20, %eax
	addl	$4, %eax
	movl	%eax, -176(%ebp)
	.loc 1 10784 0
	movl	-176(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -344(%ebp)
	.loc 1 10785 0
	cmpl	$0, -204(%ebp)
	je	.L4532
	.loc 1 10787 0
	movl	-344(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$1, %al
	jne	.L4638
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	cmpl	-344(%ebp), %eax
	jne	.L4638
	.loc 1 10790 0
	movl	$1, -212(%ebp)
	.loc 1 10791 0
	movl	-204(%ebp), %eax
	movl	%eax, -200(%ebp)
	.loc 1 10787 0
	jmp	.L4532
.L4638:
	.loc 1 10793 0
	movl	-344(%ebp), %ecx
	movzbl	8(%ecx), %eax
	cmpb	$92, %al
	jne	.L4532
	movl	-344(%ebp), %esi
	movl	20(%esi), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	jne	.L4532
	movl	-344(%ebp), %edx
	movl	20(%edx), %eax
	movl	-204(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	constructor_name_p@PLT
	testb	%al, %al
	je	.L4532
	.loc 1 10798 0
	movl	$4, -212(%ebp)
	.loc 1 10799 0
	movl	-204(%ebp), %eax
	movl	%eax, -200(%ebp)
	.loc 1 10800 0
	movl	$1, -196(%ebp)
	.loc 1 10801 0
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	-344(%ebp), %ecx
	movl	%eax, 20(%ecx)
	.loc 1 10802 0
	movl	-344(%ebp), %eax
	addl	$20, %eax
	movl	%eax, -176(%ebp)
	.loc 1 10806 0
	jmp	.L4532
.L4535:
.LBE107:
	.loc 1 10809 0
	movl	$0, -176(%ebp)
	.loc 1 10810 0
	jmp	.L4532
.L4538:
	.loc 1 10815 0
	movl	-344(%ebp), %esi
	movl	52(%esi), %eax
	movl	%eax, 4(%esp)
	leal	.LC276@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10816 0
	movl	-344(%ebp), %eax
	movl	4(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4644
	.loc 1 10817 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC277@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4644:
	.loc 1 10819 0
	movl	-344(%ebp), %edx
	movl	52(%edx), %eax
	movl	%eax, -208(%ebp)
	.loc 1 10820 0
	movl	-208(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -236(%ebp)
	.loc 1 10823 0
	movl	-208(%ebp), %eax
	movl	$0, 48(%eax)
	.loc 1 10825 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, 12(%ebp)
	.loc 1 10826 0
	movl	-176(%ebp), %edx
	movl	-208(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 10827 0
	movl	$0, -176(%ebp)
	.loc 1 10828 0
	jmp	.L4532
.L4544:
	.loc 1 10831 0
	movl	-344(%ebp), %eax
	addl	$20, %eax
	addl	$4, %eax
	movl	%eax, -176(%ebp)
	.loc 1 10832 0
	jmp	.L4532
.L4545:
	.loc 1 10839 0
	movl	-344(%ebp), %ecx
	movl	%ecx, 4(%esp)
	leal	.LC278@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10840 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L4534:
	.loc 1 10844 0
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$10844, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4532:
.L5576:
	.loc 1 10550 0
	cmpl	$0, -176(%ebp)
	je	.L4646
	movl	-176(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4533
.L4646:
.LBE101:
	.loc 1 10852 0
	cmpl	$0, -228(%ebp)
	je	.L4648
	cmpl	$54, -224(%ebp)
	je	.L4648
	.loc 1 10853 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L4648:
	.loc 1 10855 0
	cmpl	$0, -208(%ebp)
	je	.L4651
	movl	-208(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L4653
.L4651:
	cmpl	$3, -196(%ebp)
	jne	.L4654
.L4653:
	cmpl	$54, -224(%ebp)
	je	.L4654
	cmpl	$0, -204(%ebp)
	je	.L4656
	cmpl	$0, 12(%ebp)
	je	.L4654
.L4656:
	.loc 1 10859 0
	movl	-208(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC279@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 10860 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L4654:
	.loc 1 10877 0
	cmpl	$0, 16(%ebp)
	jne	.L4658
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	jne	.L4658
.LBB108:
	.loc 1 10879 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4661
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L4661
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -436(%ebp)
	jmp	.L4664
.L4661:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -436(%ebp)
.L4664:
	movl	-436(%ebp), %esi
	movl	%esi, -148(%ebp)
	.loc 1 10881 0
	movl	-148(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
	.loc 1 10885 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4665
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L4665
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	setne	-429(%ebp)
	jmp	.L4668
.L4665:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	testl	%eax, %eax
	setne	-429(%ebp)
.L4668:
	cmpb	$0, -429(%ebp)
	je	.L4669
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	je	.L4669
	.loc 1 10886 0
	movl	$2, 16(%ebp)
.L4669:
	.loc 1 10888 0
	movl	-148(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
.L4658:
.LBE108:
	.loc 1 10894 0
	cmpl	$0, -236(%ebp)
	jne	.L4672
	.loc 1 10895 0
	cmpl	$2, 16(%ebp)
	jne	.L4674
	leal	.LC280@GOTOFF(%ebx), %eax
	movl	%eax, -428(%ebp)
	jmp	.L4676
.L4674:
	leal	.LC281@GOTOFF(%ebx), %edx
	movl	%edx, -428(%ebp)
.L4676:
	movl	-428(%ebp), %ecx
	movl	%ecx, -236(%ebp)
.L4672:
	.loc 1 10913 0
	movl	12(%ebp), %eax
	movl	%eax, -292(%ebp)
	jmp	.L4677
.L4678:
.LBB109:
	.loc 1 10921 0
	movl	-292(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	je	.L4679
	.loc 1 10922 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L4679:
	.loc 1 10924 0
	movl	-292(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -336(%ebp)
	.loc 1 10928 0
	movl	adding_implicit_members@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4681
	cmpl	$0, -336(%ebp)
	je	.L4681
	movl	-336(%ebp), %esi
	movzbl	10(%esi), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L4681
	.loc 1 10930 0
	movl	deprecated_state@GOTOFF(%ebx), %eax
	cmpl	$1, %eax
	je	.L4681
	.loc 1 10931 0
	movl	-336(%ebp), %eax
	movl	%eax, (%esp)
	call	warn_deprecated_use@PLT
.L4681:
	.loc 1 10934 0
	movl	-336(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$1, %al
	jne	.L4686
	.loc 1 10936 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	subl	$-128, %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	je	.L4688
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$132, %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	je	.L4688
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$280, %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	je	.L4688
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$284, %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	jne	.L4692
.L4688:
	.loc 1 10941 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	je	.L4693
	.loc 1 10943 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$280, %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	jne	.L4695
	.loc 1 10944 0
	leal	.LC282@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4703
.L4695:
	.loc 1 10946 0
	movl	-336(%ebp), %ecx
	movl	%ecx, 4(%esp)
	leal	.LC283@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4703
.L4693:
	.loc 1 10950 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	subl	$-128, %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	jne	.L4699
	.loc 1 10951 0
	movl	$1, -260(%ebp)
	jmp	.L4701
.L4699:
	.loc 1 10952 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$132, %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	jne	.L4701
	.loc 1 10953 0
	movl	$1, -256(%ebp)
.L4701:
	.loc 1 10954 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-336(%ebp), %esi
	movl	%esi, (%esp)
	call	namespace_binding@PLT
	movl	4(%eax), %eax
	movl	%eax, -304(%ebp)
	.loc 1 10956 0
	jmp	.L4703
.L4692:
	.loc 1 10959 0
	movl	-336(%ebp), %eax
	movl	%eax, (%esp)
	call	identifier_type_value@PLT
	testl	%eax, %eax
	je	.L4704
	.loc 1 10961 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	je	.L4706
	.loc 1 10962 0
	movl	-304(%ebp), %eax
	movl	-336(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	.LC284@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4703
.L4706:
	.loc 1 10964 0
	movl	-336(%ebp), %ecx
	movl	%ecx, (%esp)
	call	identifier_type_value@PLT
	movl	%eax, -304(%ebp)
	.loc 1 10965 0
	jmp	.L4703
.L4704:
	.loc 1 10968 0
	movl	$0, -340(%ebp)
	jmp	.L4709
.L4710:
	.loc 1 10970 0
	movl	-340(%ebp), %eax
	sall	$2, %eax
	movl	%eax, %edx
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	jne	.L4711
	.loc 1 10972 0
	cmpl	$2, -340(%ebp)
	jne	.L4713
	movl	-300(%ebp), %eax
	movzbl	-340(%ebp), %ecx
	shrl	%cl, %eax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L4713
	.loc 1 10974 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4716
	movl	in_system_header@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4716
	movl	warn_long_long@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4716
	.loc 1 10975 0
	leal	.LC285@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L4716:
	.loc 1 10976 0
	cmpl	$0, -288(%ebp)
	je	.L4720
	.loc 1 10977 0
	leal	.LC286@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4723
.L4720:
	.loc 1 10979 0
	movl	$1, -288(%ebp)
	.loc 1 10972 0
	jmp	.L4723
.L4713:
	.loc 1 10981 0
	movl	-300(%ebp), %eax
	movzbl	-340(%ebp), %ecx
	shrl	%cl, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4723
	.loc 1 10982 0
	movl	-336(%ebp), %esi
	movl	16(%esi), %eax
	movl	%eax, 4(%esp)
	leal	.LC287@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L4723:
	.loc 1 10986 0
	cmpl	$20, -340(%ebp)
	jne	.L4725
	.loc 1 10988 0
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L4727
	.loc 1 10989 0
	leal	.LC288@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4727:
	.loc 1 10990 0
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4725
	.loc 1 10991 0
	leal	.LC289@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4725:
	.loc 1 10994 0
	cmpl	$4, -340(%ebp)
	jne	.L4730
	movl	-292(%ebp), %eax
	movl	16(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4730
	.loc 1 10997 0
	movl	$1, -248(%ebp)
.L4730:
	.loc 1 10999 0
	movl	$1, %eax
	movl	%eax, %edx
	movzbl	-340(%ebp), %ecx
	sall	%cl, %edx
	movl	-300(%ebp), %eax
	orl	%edx, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11000 0
	jmp	.L4703
.L4711:
	.loc 1 10968 0
	addl	$1, -340(%ebp)
.L4709:
	cmpl	$31, -340(%ebp)
	jle	.L4710
	jmp	.L4734
.L4686:
	.loc 1 11004 0
	movl	-336(%ebp), %esi
	movzbl	8(%esi), %eax
	cmpb	$34, %al
	jne	.L4734
	.loc 1 11006 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	je	.L4736
	.loc 1 11007 0
	movl	-336(%ebp), %edx
	movl	4(%edx), %eax
	movl	-304(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC284@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4703
.L4736:
	.loc 1 11011 0
	movl	-336(%ebp), %ecx
	movl	4(%ecx), %eax
	movl	%eax, -304(%ebp)
	.loc 1 11012 0
	movl	-304(%ebp), %edx
	movl	-292(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 11013 0
	movl	-336(%ebp), %esi
	movl	%esi, -240(%ebp)
	.loc 1 11015 0
	jmp	.L4703
.L4734:
	.loc 1 11017 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	je	.L4739
	.loc 1 11018 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC290@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4703
.L4739:
	.loc 1 11019 0
	movl	-336(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$1, %al
	jne	.L4741
.LBB110:
	.loc 1 11021 0
	movl	$1, 4(%esp)
	movl	-336(%ebp), %ecx
	movl	%ecx, (%esp)
	call	lookup_name@PLT
	movl	%eax, -332(%ebp)
	.loc 1 11022 0
	cmpl	$0, -332(%ebp)
	je	.L4743
	movl	-332(%ebp), %esi
	movzbl	8(%esi), %eax
	cmpb	$34, %al
	je	.L4745
.L4743:
	.loc 1 11023 0
	movl	-336(%ebp), %edx
	movl	16(%edx), %eax
	movl	%eax, 4(%esp)
	leal	.LC291@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11022 0
	jmp	.L4703
.L4745:
	.loc 1 11027 0
	movl	-332(%ebp), %ecx
	movl	4(%ecx), %eax
	movl	%eax, -304(%ebp)
	.loc 1 11028 0
	movl	-332(%ebp), %esi
	movl	%esi, -240(%ebp)
	jmp	.L4703
.L4741:
.LBE110:
	.loc 1 11031 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-336(%ebp), %eax
	je	.L4703
	.loc 1 11033 0
	movl	-336(%ebp), %eax
	movl	%eax, -304(%ebp)
.L4703:
.LBE109:
	.loc 1 10913 0
	movl	-292(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -292(%ebp)
.L4677:
	cmpl	$0, -292(%ebp)
	jne	.L4678
	.loc 1 11043 0
	movl	-304(%ebp), %eax
	movl	%eax, -232(%ebp)
	.loc 1 11048 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	jne	.L4749
	movl	-300(%ebp), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	jne	.L4751
	movl	-300(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L4751
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	jne	.L4751
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4749
.L4751:
	.loc 1 11055 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, -304(%ebp)
	.loc 1 11056 0
	movl	$1, -252(%ebp)
.L4749:
	.loc 1 11059 0
	cmpl	$0, -212(%ebp)
	je	.L4755
	.loc 1 11060 0
	movl	-304(%ebp), %edx
	movl	-200(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-212(%ebp), %eax
	movl	%eax, (%esp)
	call	check_special_function_return_type
	movl	%eax, -304(%ebp)
	jmp	.L4757
.L4755:
	.loc 1 11062 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	jne	.L4757
.LBB111:
	.loc 1 11066 0
	movl	$-1, -260(%ebp)
	.loc 1 11071 0
	cmpl	$0, -228(%ebp)
	je	.L4759
	cmpl	$0, -208(%ebp)
	je	.L4759
	movl	global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	-208(%ebp), %eax
	jne	.L4759
	cmpl	$0, -204(%ebp)
	jne	.L4759
	cmpl	$0, -180(%ebp)
	jne	.L4759
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4759
	movl	$1, -424(%ebp)
	jmp	.L4766
.L4759:
	movl	$0, -424(%ebp)
.L4766:
	movl	-424(%ebp), %edx
	movl	%edx, -144(%ebp)
	.loc 1 11077 0
	movl	in_system_header@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4767
	movl	flag_ms_extensions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4767
	.loc 1 11079 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4770
	cmpl	$0, -144(%ebp)
	jne	.L4772
.L4770:
	.loc 1 11080 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC292@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 11079 0
	jmp	.L4767
.L4772:
	.loc 1 11082 0
	movl	warn_return_type@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4767
	.loc 1 11083 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC292@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L4767:
	.loc 1 11086 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, -304(%ebp)
.L4757:
.LBE111:
	.loc 1 11089 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	je	.L4774
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L4774
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L4774
	.loc 1 11093 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC293@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 11094 0
	movl	warn_deprecated@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4778
	leal	.LC294@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	.LC295@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L4778:
	.loc 1 11100 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_node@PLT
	movl	%eax, -304(%ebp)
	.loc 1 11101 0
	movl	-304(%ebp), %eax
	movl	$0, 4(%eax)
.L4774:
	.loc 1 11104 0
	movl	$0, -204(%ebp)
	.loc 1 11111 0
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	je	.L4780
	movl	-304(%ebp), %eax
	movl	72(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	120(%eax), %eax
	cmpl	%eax, %edx
	jne	.L4780
	.loc 1 11114 0
	movl	-300(%ebp), %eax
	andl	$-5, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11115 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	movl	%eax, %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	124(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_qualified_type@PLT
	movl	%eax, -304(%ebp)
.L4780:
	.loc 1 11121 0
	movl	-300(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L4783
	movl	-300(%ebp), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	jne	.L4783
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	jne	.L4783
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4787
.L4783:
.LBB112:
	.loc 1 11126 0
	movl	$0, -140(%ebp)
	.loc 1 11128 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	jne	.L4788
	.loc 1 11129 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC296@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4790
.L4788:
	.loc 1 11130 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$7, %al
	je	.L4791
	.loc 1 11131 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC297@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4790
.L4791:
	.loc 1 11132 0
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	je	.L4793
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4793
	.loc 1 11134 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC298@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11132 0
	jmp	.L4790
.L4793:
	.loc 1 11135 0
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	jne	.L4796
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4798
.L4796:
	cmpl	$0, -256(%ebp)
	je	.L4798
	.loc 1 11138 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC299@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11135 0
	jmp	.L4790
.L4798:
	.loc 1 11139 0
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	jne	.L4800
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4802
.L4800:
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	jne	.L4802
	.loc 1 11142 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC300@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11139 0
	jmp	.L4790
.L4802:
	.loc 1 11143 0
	movl	-300(%ebp), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L4804
	movl	-300(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L4804
	.loc 1 11145 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC301@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11143 0
	jmp	.L4790
.L4804:
	.loc 1 11148 0
	movl	$1, -140(%ebp)
	.loc 1 11149 0
	cmpl	$0, -260(%ebp)
	jne	.L4790
	cmpl	$0, -252(%ebp)
	jne	.L4790
	cmpl	$0, -256(%ebp)
	jne	.L4790
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4790
	.loc 1 11151 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC302@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 11153 0
	movl	flag_pedantic_errors@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L4790
	.loc 1 11154 0
	movl	$0, -140(%ebp)
.L4790:
	.loc 1 11159 0
	cmpl	$0, -140(%ebp)
	jne	.L4787
	.loc 1 11161 0
	movl	-300(%ebp), %eax
	andl	$-3, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11162 0
	movl	-300(%ebp), %eax
	andb	$251, %ah
	movl	%eax, -300(%ebp)
	.loc 1 11163 0
	movl	-300(%ebp), %eax
	andl	$-5, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11164 0
	movl	-300(%ebp), %eax
	andb	$127, %al
	movl	%eax, -300(%ebp)
	.loc 1 11165 0
	movl	$0, -288(%ebp)
.L4787:
.LBE112:
	.loc 1 11169 0
	movl	-300(%ebp), %eax
	andl	$524288, %eax
	testl	%eax, %eax
	je	.L4813
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$7, %al
	je	.L4813
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$8, %al
	je	.L4813
	.loc 1 11172 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC303@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11173 0
	movl	-300(%ebp), %eax
	andl	$-524289, %eax
	movl	%eax, -300(%ebp)
.L4813:
	.loc 1 11178 0
	movl	-300(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L4817
	cmpl	$0, -220(%ebp)
	je	.L4819
	movl	flag_signed_bitfields@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L4819
	movl	-300(%ebp), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	jne	.L4819
	cmpl	$0, -240(%ebp)
	je	.L4823
	movl	-240(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	jne	.L4819
.L4823:
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$7, %al
	je	.L4825
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$13, %al
	jne	.L4819
.L4825:
	movl	c_global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-304(%ebp), %eax
	movl	72(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L4819
.L4817:
	.loc 1 11198 0
	cmpl	$0, -288(%ebp)
	je	.L4827
	.loc 1 11199 0
	movl	integer_types@GOT(%ebx), %eax
	movl	40(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4838
.L4827:
	.loc 1 11200 0
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	je	.L4830
	.loc 1 11201 0
	movl	integer_types@GOT(%ebx), %eax
	movl	32(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4838
.L4830:
	.loc 1 11202 0
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4832
	.loc 1 11203 0
	movl	integer_types@GOT(%ebx), %eax
	movl	16(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4838
.L4832:
	.loc 1 11204 0
	movl	integer_types@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L4834
	.loc 1 11205 0
	movl	integer_types@GOT(%ebx), %eax
	movl	8(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4838
.L4834:
	.loc 1 11206 0
	cmpl	$0, -240(%ebp)
	je	.L4836
	.loc 1 11207 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	c_common_unsigned_type@PLT
	movl	%eax, -304(%ebp)
	jmp	.L4838
.L4836:
	.loc 1 11209 0
	movl	integer_types@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movl	%eax, -304(%ebp)
	.loc 1 11178 0
	jmp	.L4838
.L4819:
	.loc 1 11211 0
	movl	-300(%ebp), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	je	.L4839
	movl	integer_types@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L4839
	.loc 1 11213 0
	movl	integer_types@GOT(%ebx), %eax
	movl	4(%eax), %eax
	movl	%eax, -304(%ebp)
	.loc 1 11211 0
	jmp	.L4838
.L4839:
	.loc 1 11214 0
	cmpl	$0, -288(%ebp)
	je	.L4842
	.loc 1 11215 0
	movl	integer_types@GOT(%ebx), %eax
	movl	36(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4838
.L4842:
	.loc 1 11216 0
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	je	.L4844
	.loc 1 11217 0
	movl	integer_types@GOT(%ebx), %eax
	movl	28(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4838
.L4844:
	.loc 1 11218 0
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	je	.L4838
	.loc 1 11219 0
	movl	integer_types@GOT(%ebx), %eax
	movl	12(%eax), %eax
	movl	%eax, -304(%ebp)
.L4838:
	.loc 1 11221 0
	movl	-300(%ebp), %eax
	andl	$524288, %eax
	testl	%eax, %eax
	je	.L4847
	.loc 1 11228 0
	cmpl	$0, -252(%ebp)
	je	.L4849
	cmpl	$0, -288(%ebp)
	jne	.L4849
	movl	-300(%ebp), %eax
	andl	$4, %eax
	testl	%eax, %eax
	jne	.L4849
	movl	-300(%ebp), %eax
	andl	$128, %eax
	testl	%eax, %eax
	jne	.L4849
	movl	-300(%ebp), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	jne	.L4849
	movl	-300(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	jne	.L4849
	.loc 1 11233 0
	movl	global_trees@GOT(%ebx), %eax
	movl	108(%eax), %eax
	movl	%eax, -304(%ebp)
	.loc 1 11228 0
	jmp	.L4847
.L4849:
	.loc 1 11234 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L4856
	.loc 1 11235 0
	movl	global_trees@GOT(%ebx), %eax
	movl	100(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4847
.L4856:
	.loc 1 11236 0
	movl	global_trees@GOT(%ebx), %eax
	movl	116(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L4858
	.loc 1 11237 0
	movl	global_trees@GOT(%ebx), %eax
	movl	104(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4847
.L4858:
	.loc 1 11238 0
	movl	global_trees@GOT(%ebx), %eax
	movl	120(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L4860
	.loc 1 11239 0
	movl	global_trees@GOT(%ebx), %eax
	movl	108(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4847
.L4860:
	.loc 1 11240 0
	movl	global_trees@GOT(%ebx), %eax
	movl	124(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L4862
	.loc 1 11241 0
	movl	global_trees@GOT(%ebx), %eax
	movl	112(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L4847
.L4862:
	.loc 1 11243 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	build_complex_type@PLT
	movl	%eax, -304(%ebp)
.L4847:
	.loc 1 11246 0
	movl	$0, -284(%ebp)
	.loc 1 11247 0
	movl	-300(%ebp), %eax
	andl	$8, %eax
	testl	%eax, %eax
	je	.L4864
	.loc 1 11248 0
	orl	$1, -284(%ebp)
.L4864:
	.loc 1 11249 0
	movl	-300(%ebp), %eax
	andl	$512, %eax
	testl	%eax, %eax
	je	.L4866
	.loc 1 11250 0
	orl	$2, -284(%ebp)
.L4866:
	.loc 1 11251 0
	movl	-300(%ebp), %eax
	andl	$4096, %eax
	testl	%eax, %eax
	je	.L4868
	.loc 1 11252 0
	orl	$4, -284(%ebp)
.L4868:
	.loc 1 11253 0
	cmpl	$8, -212(%ebp)
	jne	.L4870
	cmpl	$0, -284(%ebp)
	je	.L4870
	.loc 1 11254 0
	movl	-200(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC304@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4870:
	.loc 1 11258 0
	movl	-300(%ebp), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L4873
	.loc 1 11259 0
	orl	$16, -284(%ebp)
.L4873:
	.loc 1 11260 0
	movl	-300(%ebp), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L4875
	.loc 1 11261 0
	orl	$64, -284(%ebp)
.L4875:
	.loc 1 11262 0
	movl	-300(%ebp), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L4877
	.loc 1 11263 0
	orl	$128, -284(%ebp)
.L4877:
	.loc 1 11264 0
	movl	-300(%ebp), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L4879
	.loc 1 11265 0
	orl	$256, -284(%ebp)
.L4879:
	.loc 1 11269 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	orl	%eax, -284(%ebp)
	.loc 1 11270 0
	cmpl	$0, -240(%ebp)
	je	.L4881
	movl	-240(%ebp), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L4881
	movl	$11, -420(%ebp)
	jmp	.L4884
.L4881:
	movl	$3, -420(%ebp)
.L4884:
	movl	-304(%ebp), %edx
	movl	-420(%ebp), %ecx
	movl	%ecx, 8(%esp)
	movl	-284(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	cp_build_qualified_type_real@PLT
	movl	%eax, -304(%ebp)
	.loc 1 11274 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	movl	%eax, -284(%ebp)
	.loc 1 11276 0
	movl	$0, -264(%ebp)
	.loc 1 11277 0
	movl	-300(%ebp), %eax
	andl	$256, %eax
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -268(%ebp)
	.loc 1 11278 0
	movl	-300(%ebp), %eax
	andl	$4194304, %eax
	movl	%eax, -280(%ebp)
	.loc 1 11279 0
	movl	-300(%ebp), %eax
	andl	$-4194305, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11280 0
	movl	-300(%ebp), %eax
	andl	$8388608, %eax
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -276(%ebp)
	.loc 1 11281 0
	movl	-300(%ebp), %eax
	andl	$-8388609, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11283 0
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4885
	.loc 1 11284 0
	cmpl	$4, 16(%ebp)
	jne	.L4887
	movl	$2, -416(%ebp)
	jmp	.L4889
.L4887:
	movl	$1, -416(%ebp)
.L4889:
	movl	-416(%ebp), %esi
	movl	%esi, -264(%ebp)
.L4885:
	.loc 1 11286 0
	cmpl	$0, -280(%ebp)
	je	.L4890
	cmpl	$2, -264(%ebp)
	jne	.L4890
	.loc 1 11288 0
	movl	-208(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC305@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11290 0
	movl	$0, -264(%ebp)
.L4890:
	.loc 1 11292 0
	movl	-300(%ebp), %eax
	andl	$2097152, %eax
	movl	%eax, -272(%ebp)
	.loc 1 11293 0
	movl	-300(%ebp), %eax
	andl	$-2097153, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11295 0
	cmpl	$0, -244(%ebp)
	je	.L4893
	cmpl	$0, -272(%ebp)
	jne	.L4893
	.loc 1 11297 0
	movl	-244(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC306@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11298 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L4893:
	.loc 1 11303 0
	movl	-300(%ebp), %eax
	testl	%eax, %eax
	je	.L4896
	.loc 1 11305 0
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4898
	addl	$1, -296(%ebp)
.L4898:
	.loc 1 11306 0
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L4900
	cmpl	$0, -248(%ebp)
	jne	.L4900
	addl	$1, -296(%ebp)
.L4900:
	.loc 1 11307 0
	movl	-300(%ebp), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4903
	addl	$1, -296(%ebp)
.L4903:
	.loc 1 11308 0
	cmpl	$2, 16(%ebp)
	jne	.L4905
	cmpl	$0, -296(%ebp)
	jle	.L4905
	.loc 1 11309 0
	leal	.LC307@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4905:
	.loc 1 11310 0
	movl	-300(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L4908
	.loc 1 11312 0
	cmpl	$2, 16(%ebp)
	jne	.L4910
	.loc 1 11313 0
	leal	.LC308@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4910:
	.loc 1 11314 0
	addl	$1, -296(%ebp)
.L4908:
	.loc 1 11316 0
	movl	-300(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L4912
	addl	$1, -296(%ebp)
.L4912:
	.loc 1 11317 0
	movl	-300(%ebp), %eax
	andl	$32, %eax
	testl	%eax, %eax
	je	.L4914
	addl	$1, -296(%ebp)
.L4914:
	.loc 1 11318 0
	cmpl	$0, -296(%ebp)
	jne	.L4896
	cmpl	$0, -272(%ebp)
	jne	.L4896
	cmpl	$0, -248(%ebp)
	je	.L4896
	.loc 1 11319 0
	addl	$1, -296(%ebp)
.L4896:
	.loc 1 11323 0
	cmpl	$0, -280(%ebp)
	je	.L4919
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L4921
	cmpl	$4, 16(%ebp)
	je	.L4919
.L4921:
	.loc 1 11326 0
	leal	.LC309@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11327 0
	movl	$0, -280(%ebp)
.L4919:
	.loc 1 11331 0
	cmpl	$0, -264(%ebp)
	je	.L4923
	cmpl	$6, 16(%ebp)
	jne	.L4923
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	jne	.L4923
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L4927
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L4923
.L4927:
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L4929
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L4929
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L4929
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L4929
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L4923
.L4929:
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	92(%eax), %eax
	movzbl	9(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L4923
	.loc 1 11334 0
	movl	$4, 16(%ebp)
.L4923:
	.loc 1 11340 0
	cmpl	$2, -296(%ebp)
	jne	.L4935
	movl	-300(%ebp), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4935
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L4938
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L4935
.L4938:
	.loc 1 11344 0
	movl	$1, -296(%ebp)
.L4935:
	.loc 1 11346 0
	cmpl	$1, -296(%ebp)
	jle	.L4940
	.loc 1 11347 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC310@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4942
.L4940:
	.loc 1 11348 0
	cmpl	$0, 16(%ebp)
	je	.L4943
	cmpl	$0, -296(%ebp)
	jle	.L4943
	.loc 1 11350 0
	cmpl	$2, 16(%ebp)
	je	.L4946
	cmpl	$3, 16(%ebp)
	jne	.L4948
.L4946:
	movl	-300(%ebp), %eax
	andl	$32, %eax
	testl	%eax, %eax
	jne	.L4942
	movl	-300(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L4948
	jmp	.L4942
.L4948:
	.loc 1 11354 0
	movl	-300(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	jne	.L4942
	.loc 1 11356 0
	cmpl	$4, 16(%ebp)
	jne	.L4953
	movl	-300(%ebp), %eax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	jne	.L4953
	jmp	.L4942
.L4953:
	.loc 1 11364 0
	cmpl	$4, 16(%ebp)
	jne	.L4956
.LBB113:
	.loc 1 11366 0
	movl	$0, -136(%ebp)
	.loc 1 11367 0
	movl	$0, -328(%ebp)
	.loc 1 11369 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L4958
	.loc 1 11372 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	jne	.L4960
	.loc 1 11373 0
	movl	8(%ebp), %eax
	movl	%eax, -136(%ebp)
	jmp	.L4962
.L4960:
	.loc 1 11375 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -136(%ebp)
.L4962:
	.loc 1 11376 0
	movl	-136(%ebp), %eax
	movzbl	11(%eax), %eax
	shrb	$2, %al
	andl	$1, %eax
	movzbl	%al, %eax
	movl	%eax, -328(%ebp)
	.loc 1 11377 0
	movl	-136(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L4958
	.loc 1 11379 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-136(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	testl	%eax, %eax
	je	.L4964
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-136(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L4964
	.loc 1 11382 0
	movl	-136(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -236(%ebp)
	.loc 1 11379 0
	jmp	.L4958
.L4964:
	.loc 1 11384 0
	leal	.LC274@GOTOFF(%ebx), %eax
	movl	%eax, -236(%ebp)
.L4958:
	.loc 1 11387 0
	cmpl	$0, -328(%ebp)
	je	.L4967
	leal	.LC311@GOTOFF(%ebx), %eax
	movl	%eax, -412(%ebp)
	jmp	.L4969
.L4967:
	leal	.LC312@GOTOFF(%ebx), %edx
	movl	%edx, -412(%ebp)
.L4969:
	movl	-236(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-412(%ebp), %ecx
	movl	%ecx, 4(%esp)
	leal	.LC313@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4970
.L4956:
.LBE113:
	.loc 1 11393 0
	cmpl	$2, 16(%ebp)
	je	.L4971
	cmpl	$3, 16(%ebp)
	jne	.L4973
.L4971:
	.loc 1 11394 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC314@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11393 0
	jmp	.L4970
.L4973:
	.loc 1 11396 0
	leal	.LC315@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L4970:
	.loc 1 11398 0
	movl	-300(%ebp), %eax
	andl	$-33, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11399 0
	movl	-300(%ebp), %eax
	andb	$247, %ah
	movl	%eax, -300(%ebp)
	.loc 1 11400 0
	movl	-300(%ebp), %eax
	andl	$-17, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11401 0
	movl	-300(%ebp), %eax
	andl	$-1048577, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11348 0
	jmp	.L4942
.L4943:
	.loc 1 11404 0
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L4974
	cmpl	$0, 20(%ebp)
	je	.L4974
	cmpl	$0, -228(%ebp)
	jne	.L4974
	.loc 1 11406 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	je	.L4978
	.loc 1 11410 0
	movl	-284(%ebp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L4942
	.loc 1 11411 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC316@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	jmp	.L4942
.L4978:
	.loc 1 11414 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC317@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11404 0
	jmp	.L4942
.L4974:
	.loc 1 11416 0
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L4983
	cmpl	$0, -228(%ebp)
	je	.L4983
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	jne	.L4983
	.loc 1 11418 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC318@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11416 0
	jmp	.L4942
.L4983:
	.loc 1 11419 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	je	.L4987
	.loc 1 11421 0
	movl	-300(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L4942
	.loc 1 11422 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC319@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L4942
.L4987:
	.loc 1 11424 0
	movl	-300(%ebp), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L4942
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L4942
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L4942
	.loc 1 11428 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC320@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11430 0
	movl	-300(%ebp), %eax
	andl	$-1048577, %eax
	movl	%eax, -300(%ebp)
.L4942:
	.loc 1 11433 0
	cmpl	$0, -296(%ebp)
	jle	.L5577
	cmpl	$0, -272(%ebp)
	je	.L5577
	.loc 1 11434 0
	leal	.LC321@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11440 0
	jmp	.L5577
.L4998:
	.loc 1 11464 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L4999
	.loc 1 11466 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-71, %al
	jne	.L5001
	.loc 1 11467 0
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, 8(%ebp)
	jmp	.L4997
.L5001:
	.loc 1 11469 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11470 0
	jmp	.L4997
.L4999:
	.loc 1 11472 0
	cmpl	$0, -192(%ebp)
	je	.L5004
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L5006
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-71, %al
	je	.L5004
.L5006:
	.loc 1 11476 0
	cmpl	$0, -204(%ebp)
	jne	.L5008
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5008
	.loc 1 11477 0
	movl	-304(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -204(%ebp)
.L5008:
	.loc 1 11478 0
	cmpl	$0, -204(%ebp)
	je	.L5004
.LBB114:
	.loc 1 11480 0
	movl	-304(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, -132(%ebp)
	.loc 1 11481 0
	movl	-192(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-132(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	grok_method_quals@PLT
	.loc 1 11482 0
	movl	-132(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -304(%ebp)
	.loc 1 11483 0
	movl	-304(%ebp), %eax
	movl	16(%eax), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -204(%ebp)
	.loc 1 11484 0
	movl	$0, -192(%ebp)
.L5004:
.LBE114:
	.loc 1 11488 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -408(%ebp)
	cmpl	$42, -408(%ebp)
	je	.L5016
	cmpl	$42, -408(%ebp)
	ja	.L5022
	cmpl	$11, -408(%ebp)
	je	.L5015
	cmpl	$11, -408(%ebp)
	ja	.L5023
	cmpl	$0, -408(%ebp)
	je	.L5013
	cmpl	$3, -408(%ebp)
	je	.L5014
	jmp	.L5012
.L5023:
	movl	-408(%ebp), %eax
	subl	$21, %eax
	cmpl	$1, %eax
	ja	.L5012
	jmp	.L5015
.L5022:
	cmpl	$92, -408(%ebp)
	je	.L5019
	cmpl	$92, -408(%ebp)
	ja	.L5024
	cmpl	$44, -408(%ebp)
	je	.L5017
	cmpl	$54, -408(%ebp)
	je	.L5018
	jmp	.L5012
.L5024:
	cmpl	$185, -408(%ebp)
	je	.L5020
	cmpl	$191, -408(%ebp)
	je	.L5021
	cmpl	$123, -408(%ebp)
	je	.L5016
	jmp	.L5012
.L5014:
.LBB115:
	.loc 1 11494 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -128(%ebp)
	.loc 1 11498 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11499 0
	movl	8(%ebp), %eax
	movl	%eax, -124(%ebp)
	.loc 1 11500 0
	jmp	.L5025
.L5026:
	.loc 1 11502 0
	movl	-124(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -124(%ebp)
.L5025:
	.loc 1 11500 0
	cmpl	$0, -124(%ebp)
	je	.L5027
	movl	-124(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	je	.L5026
.L5027:
	.loc 1 11503 0
	movl	$0, -120(%ebp)
	.loc 1 11504 0
	cmpl	$0, -124(%ebp)
	je	.L5029
	movl	-124(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	jne	.L5031
.L5029:
	.loc 1 11506 0
	orl	$1, -120(%ebp)
.L5031:
	.loc 1 11507 0
	movl	-124(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$54, %al
	jne	.L5032
	.loc 1 11508 0
	orl	$2, -120(%ebp)
.L5032:
	.loc 1 11509 0
	movl	-124(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$44, %al
	jne	.L5034
	.loc 1 11510 0
	orl	$4, -120(%ebp)
.L5034:
	.loc 1 11511 0
	movl	-308(%ebp), %edx
	movl	-128(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	chainon@PLT
	movl	%eax, %edx
	movl	-120(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_attributes@PLT
	movl	%eax, -308(%ebp)
	.loc 1 11515 0
	jmp	.L4997
.L5017:
.LBE115:
.LBB116:
	.loc 1 11521 0
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -324(%ebp)
	.loc 1 11524 0
	cmpl	$0, -324(%ebp)
	jne	.L5036
	cmpl	$4, 16(%ebp)
	jne	.L5036
	cmpl	$0, -264(%ebp)
	jne	.L5036
	movl	-300(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	jne	.L5036
	.loc 1 11526 0
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %eax
	movl	%eax, -324(%ebp)
.L5036:
	.loc 1 11528 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11530 0
	movl	-304(%ebp), %eax
	movl	-324(%ebp), %esi
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-208(%ebp), %eax
	movl	%eax, (%esp)
	call	create_array_type_for_decl
	movl	%eax, -304(%ebp)
	.loc 1 11532 0
	movl	$0, -204(%ebp)
	.loc 1 11534 0
	jmp	.L4997
.L5018:
.LBE116:
.LBB117:
	.loc 1 11540 0
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -108(%ebp)
	.loc 1 11541 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -104(%ebp)
	.loc 1 11548 0
	movl	$0, -284(%ebp)
	.loc 1 11552 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L5041
	.loc 1 11554 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC322@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11555 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, -304(%ebp)
.L5041:
	.loc 1 11557 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L5043
	.loc 1 11559 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC323@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11560 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, -304(%ebp)
.L5043:
	.loc 1 11563 0
	cmpl	$0, -104(%ebp)
	je	.L5045
	movl	-104(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-71, %al
	jne	.L5045
	.loc 1 11564 0
	movl	-104(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -104(%ebp)
.L5045:
	.loc 1 11566 0
	cmpl	$0, -104(%ebp)
	je	.L5048
	movl	-104(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L5048
	.loc 1 11567 0
	movl	-208(%ebp), %eax
	movl	%eax, -104(%ebp)
.L5048:
	.loc 1 11570 0
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, -192(%ebp)
	.loc 1 11573 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -188(%ebp)
	.loc 1 11577 0
	cmpl	$0, -104(%ebp)
	je	.L5051
	movl	-104(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L5053
	movl	-104(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	je	.L5053
	movl	-104(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$92, %al
	jne	.L5051
.L5053:
	movl	$1, -404(%ebp)
	jmp	.L5056
.L5051:
	movl	$0, -404(%ebp)
.L5056:
	movl	-404(%ebp), %eax
	movl	%eax, -112(%ebp)
	.loc 1 11583 0
	cmpl	$0, -204(%ebp)
	jne	.L5057
	cmpl	$4, 16(%ebp)
	jne	.L5057
	cmpl	$0, -112(%ebp)
	je	.L5057
	cmpl	$0, -272(%ebp)
	je	.L5061
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	cmpl	-208(%ebp), %eax
	jne	.L5057
.L5061:
	.loc 1 11587 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -204(%ebp)
.L5057:
	.loc 1 11589 0
	cmpl	$0, -204(%ebp)
	je	.L5063
	cmpl	$8, -212(%ebp)
	jne	.L5063
	.loc 1 11590 0
	movl	-204(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	orl	$2, %eax
	movb	%al, (%edx)
.L5063:
	.loc 1 11591 0
	cmpl	$0, -204(%ebp)
	je	.L5066
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	cmpl	-208(%ebp), %eax
	jne	.L5066
	.loc 1 11598 0
	cmpl	$1, -196(%ebp)
	jne	.L5069
	.loc 1 11603 0
	cmpl	$2, -264(%ebp)
	jne	.L5071
	.loc 1 11604 0
	leal	.LC324@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5071:
	.loc 1 11605 0
	cmpl	$0, -192(%ebp)
	je	.L5073
	.loc 1 11607 0
	movl	-192(%ebp), %eax
	movl	20(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC325@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11609 0
	movl	$0, -192(%ebp)
.L5073:
	.loc 1 11611 0
	cmpl	$4, 16(%ebp)
	jne	.L5078
	.loc 1 11613 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %edx
	movl	-196(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	member_function_or_else
	testl	%eax, %eax
	jne	.L5078
	.loc 1 11616 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5069:
	.loc 1 11621 0
	cmpl	$1, -276(%ebp)
	jne	.L5079
	.loc 1 11622 0
	movl	$2, -276(%ebp)
.L5079:
	.loc 1 11627 0
	cmpl	$2, -264(%ebp)
	jne	.L5081
	.loc 1 11628 0
	leal	.LC326@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5081:
	.loc 1 11629 0
	cmpl	$0, -280(%ebp)
	je	.L5083
	.loc 1 11631 0
	leal	.LC327@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 11632 0
	movl	$0, -280(%ebp)
.L5083:
	.loc 1 11634 0
	cmpl	$0, -192(%ebp)
	je	.L5085
	.loc 1 11636 0
	movl	-192(%ebp), %eax
	movl	20(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC328@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11638 0
	movl	$0, -192(%ebp)
.L5085:
.LBB118:
	.loc 1 11642 0
	leal	-312(%ebp), %edx
	leal	-300(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%edx)
	.loc 1 11643 0
	movl	-312(%ebp), %eax
	andb	$254, %ah
	movl	%eax, -312(%ebp)
	.loc 1 11644 0
	movl	-312(%ebp), %eax
	andl	$-2, %eax
	movl	%eax, -312(%ebp)
	.loc 1 11645 0
	movl	-312(%ebp), %eax
	testl	%eax, %eax
	je	.L5087
	.loc 1 11646 0
	leal	.LC329@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5087:
.LBE118:
	.loc 1 11648 0
	cmpl	$4, 16(%ebp)
	jne	.L5078
	.loc 1 11650 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %edx
	movl	-196(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	member_function_or_else
	testl	%eax, %eax
	jne	.L5090
	.loc 1 11653 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5090:
	.loc 1 11654 0
	movl	-204(%ebp), %eax
	movzbl	39(%eax), %edx
	orl	$2, %edx
	movb	%dl, 39(%eax)
	.loc 1 11655 0
	cmpl	$1, -212(%ebp)
	je	.L5078
	.loc 1 11656 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L5078:
	.loc 1 11659 0
	cmpl	$4, 16(%ebp)
	jne	.L5095
	.loc 1 11660 0
	movl	$0, -264(%ebp)
	.loc 1 11591 0
	jmp	.L5095
.L5066:
	.loc 1 11662 0
	cmpl	$0, -272(%ebp)
	je	.L5095
	.loc 1 11664 0
	cmpl	$0, 20(%ebp)
	je	.L5097
	.loc 1 11665 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC330@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5097:
	.loc 1 11666 0
	cmpl	$0, -280(%ebp)
	je	.L5099
	.loc 1 11669 0
	leal	.LC331@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11670 0
	movl	-300(%ebp), %eax
	andl	$-2097153, %eax
	movl	%eax, -300(%ebp)
	.loc 1 11671 0
	movl	$0, -272(%ebp)
.L5099:
	.loc 1 11673 0
	cmpl	$0, 16(%ebp)
	jne	.L5101
	.loc 1 11674 0
	leal	.LC332@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5101:
	.loc 1 11675 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5095
	cmpl	$0, -228(%ebp)
	je	.L5095
	.loc 1 11676 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC333@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5095:
	.loc 1 11683 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11688 0
	movl	-108(%ebp), %eax
	movl	%eax, (%esp)
	call	grokparms
	movl	%eax, -116(%ebp)
	.loc 1 11690 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L5105
	cmpl	$1, -196(%ebp)
	jne	.L5105
	.loc 1 11695 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$92, %al
	jne	.L5108
	.loc 1 11696 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%ebp)
.L5108:
	.loc 1 11698 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-116(%ebp), %eax
	je	.L5105
	.loc 1 11700 0
	leal	.LC334@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11701 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	movl	%eax, -116(%ebp)
	.loc 1 11702 0
	movl	last_function_parms@GOT(%ebx), %eax
	movl	$0, (%eax)
.L5105:
	.loc 1 11708 0
	movl	-304(%ebp), %edx
	movl	-116(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_function_type@PLT
	movl	%eax, -304(%ebp)
.LBB119:
	.loc 1 11712 0
	movl	-116(%ebp), %eax
	movl	%eax, -100(%ebp)
	jmp	.L5111
.L5112:
	.loc 1 11713 0
	movl	-100(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L5113
	movl	-100(%ebp), %eax
	movl	16(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-54, %al
	jne	.L5113
	.loc 1 11716 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	add_defarg_fn@PLT
	.loc 1 11717 0
	jmp	.L4997
.L5113:
	.loc 1 11712 0
	movl	-100(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -100(%ebp)
.L5111:
	cmpl	$0, -100(%ebp)
	jne	.L5112
	.loc 1 11721 0
	jmp	.L4997
.L5016:
.LBE119:
.LBE117:
	.loc 1 11728 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L5117
	.loc 1 11730 0
	movl	-304(%ebp), %edx
	movl	%edx, -400(%ebp)
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$123, %al
	jne	.L5119
	leal	.LC335@GOTOFF(%ebx), %ecx
	movl	%ecx, -396(%ebp)
	jmp	.L5121
.L5119:
	leal	.LC336@GOTOFF(%ebx), %esi
	movl	%esi, -396(%ebp)
.L5121:
	movl	-400(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-396(%ebp), %edx
	movl	%edx, (%esp)
	call	error@PLT
	.loc 1 11733 0
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L5122
.L5117:
	.loc 1 11735 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L5122
	cmpl	$0, -204(%ebp)
	jne	.L5124
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$123, %al
	jne	.L5122
.L5124:
	.loc 1 11737 0
	movl	-304(%ebp), %ecx
	movl	%ecx, -392(%ebp)
	cmpl	$0, -204(%ebp)
	je	.L5126
	leal	.LC337@GOTOFF(%ebx), %esi
	movl	%esi, -388(%ebp)
	jmp	.L5128
.L5126:
	leal	.LC335@GOTOFF(%ebx), %eax
	movl	%eax, -388(%ebp)
.L5128:
	movl	-392(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-388(%ebp), %ecx
	movl	%ecx, (%esp)
	call	error@PLT
.L5122:
	.loc 1 11745 0
	movl	$0, -284(%ebp)
	.loc 1 11747 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$123, %al
	jne	.L5129
	.loc 1 11749 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	je	.L5133
	.loc 1 11750 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	build_reference_type@PLT
	movl	%eax, -304(%ebp)
	jmp	.L5133
.L5129:
	.loc 1 11752 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5134
	.loc 1 11753 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, (%esp)
	call	build_ptrmemfunc_type@PLT
	movl	%eax, -304(%ebp)
	jmp	.L5133
.L5134:
	.loc 1 11754 0
	cmpl	$0, -204(%ebp)
	je	.L5136
	.loc 1 11755 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	build_ptrmem_type@PLT
	movl	%eax, -304(%ebp)
	jmp	.L5133
.L5136:
	.loc 1 11757 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -304(%ebp)
.L5133:
	.loc 1 11762 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L5138
.LBB120:
	.loc 1 11765 0
	movl	$0, -96(%ebp)
	.loc 1 11766 0
	movl	$0, -92(%ebp)
	.loc 1 11767 0
	movl	$0, -88(%ebp)
	.loc 1 11768 0
	movl	$0, -84(%ebp)
	.loc 1 11770 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -320(%ebp)
	jmp	.L5140
.L5141:
.LBB121:
	.loc 1 11773 0
	movl	-320(%ebp), %esi
	movl	20(%esi), %eax
	movl	%eax, -80(%ebp)
	.loc 1 11775 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$12, %eax
	movl	(%eax), %eax
	cmpl	-80(%ebp), %eax
	jne	.L5142
	.loc 1 11777 0
	addl	$1, -92(%ebp)
	.loc 1 11778 0
	orl	$1, -284(%ebp)
	jmp	.L5144
.L5142:
	.loc 1 11780 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$36, %eax
	movl	(%eax), %eax
	cmpl	-80(%ebp), %eax
	jne	.L5145
	.loc 1 11782 0
	addl	$1, -88(%ebp)
	.loc 1 11783 0
	orl	$2, -284(%ebp)
	jmp	.L5144
.L5145:
	.loc 1 11785 0
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$48, %eax
	movl	(%eax), %eax
	cmpl	-80(%ebp), %eax
	jne	.L5147
	.loc 1 11787 0
	addl	$1, -84(%ebp)
	.loc 1 11788 0
	orl	$4, -284(%ebp)
	jmp	.L5144
.L5147:
	.loc 1 11790 0
	cmpl	$0, -96(%ebp)
	jne	.L5144
	.loc 1 11792 0
	movl	$1, -96(%ebp)
	.loc 1 11793 0
	leal	.LC338@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5144:
.LBE121:
	.loc 1 11771 0
	movl	-320(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -320(%ebp)
.L5140:
	.loc 1 11770 0
	cmpl	$0, -320(%ebp)
	jne	.L5141
	.loc 1 11796 0
	cmpl	$1, -92(%ebp)
	jle	.L5151
	.loc 1 11797 0
	leal	.LC339@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L5151:
	.loc 1 11798 0
	cmpl	$1, -88(%ebp)
	jle	.L5153
	.loc 1 11799 0
	leal	.LC340@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L5153:
	.loc 1 11800 0
	cmpl	$1, -84(%ebp)
	jle	.L5155
	.loc 1 11801 0
	leal	.LC341@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L5155:
	.loc 1 11802 0
	movl	-304(%ebp), %edx
	movl	$3, 8(%esp)
	movl	-284(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	cp_build_qualified_type_real@PLT
	movl	%eax, -304(%ebp)
	.loc 1 11803 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	movl	%eax, -284(%ebp)
.L5138:
.LBE120:
	.loc 1 11805 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11806 0
	movl	$0, -204(%ebp)
	.loc 1 11807 0
	jmp	.L4997
.L5020:
.LBB122:
	.loc 1 11817 0
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, -76(%ebp)
	.loc 1 11821 0
	movl	-76(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$92, %al
	jne	.L5157
	.loc 1 11822 0
	movl	-76(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -76(%ebp)
.L5157:
	.loc 1 11824 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L5159
	.loc 1 11827 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	cmpl	$-1, %eax
	jne	.L5161
	.loc 1 11829 0
	call	pop_decl_namespace@PLT
	jmp	.L5159
.L5161:
	.loc 1 11830 0
	cmpl	$0, -272(%ebp)
	je	.L5163
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	cmpl	$1, %eax
	jg	.L5163
	jmp	.L5159
.L5163:
	.loc 1 11832 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L5159
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L5167
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	je	.L5167
	jmp	.L5159
.L5167:
	.loc 1 11836 0
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	movl	current_class_depth@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	jne	.L5170
	.loc 1 11843 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L5172
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	je	.L5172
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	je	.L5172
.LBB123:
	.loc 1 11847 0
	call	current_template_args@PLT
	movl	%eax, -68(%ebp)
	.loc 1 11848 0
	movl	-304(%ebp), %edx
	movl	$0, 12(%esp)
	movl	$3, 8(%esp)
	movl	-68(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	tsubst@PLT
	movl	%eax, -304(%ebp)
.L5172:
.LBE123:
	.loc 1 11856 0
	call	pop_nested_class@PLT
	.loc 1 11857 0
	movl	8(%ebp), %eax
	movl	current_class_depth@GOT(%ebx), %edx
	movl	(%edx), %edx
	movl	%edx, 16(%eax)
	jmp	.L5159
.L5170:
	.loc 1 11860 0
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$11860, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5159:
	.loc 1 11862 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L5176
	.loc 1 11868 0
	movl	-76(%ebp), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11869 0
	jmp	.L4997
.L5176:
	.loc 1 11871 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -204(%ebp)
	.loc 1 11873 0
	movl	-204(%ebp), %eax
	movl	%eax, -72(%ebp)
	.loc 1 11874 0
	jmp	.L5178
.L5179:
	.loc 1 11886 0
	movl	-72(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L5180
	movl	-72(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	8(%eax), %eax
	shrb	$2, %al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L5182
	movl	-72(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	je	.L5180
.L5182:
	movl	-72(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %eax
	movl	60(%eax), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %edx
	movl	-72(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, %edx
	jne	.L5180
	.loc 1 11890 0
	addl	$1, -184(%ebp)
.L5180:
	.loc 1 11892 0
	movl	-72(%ebp), %eax
	movl	72(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, -72(%ebp)
	.loc 1 11893 0
	movl	-72(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -72(%ebp)
.L5178:
	.loc 1 11874 0
	cmpl	$0, -72(%ebp)
	je	.L5185
	movl	-72(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L5187
	movl	-72(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L5185
.L5187:
	movl	-72(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L5179
	movl	-72(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L5179
	movl	-72(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L5179
	movl	-72(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L5179
	movl	-72(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L5179
.L5185:
	.loc 1 11896 0
	cmpl	$0, -76(%ebp)
	je	.L5193
	.loc 1 11899 0
	movl	-76(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	jne	.L5195
	.loc 1 11904 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	-204(%ebp), %eax
	jne	.L5197
	.loc 1 11912 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5201
	.loc 1 11913 0
	movl	-236(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC342@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L5201
.L5197:
	.loc 1 11916 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L5202
	.loc 1 11918 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L5204
	cmpl	$0, -272(%ebp)
	je	.L5206
.L5204:
	.loc 1 11919 0
	movl	-304(%ebp), %eax
	movl	16(%eax), %edx
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cplus_method_type@PLT
	movl	%eax, -304(%ebp)
	jmp	.L5201
.L5206:
	.loc 1 11923 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 12(%esp)
	movl	-236(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC343@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11925 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5202:
	.loc 1 11928 0
	movl	-300(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	jne	.L5207
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L5209
.L5207:
	.loc 1 11936 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L5201
	.loc 1 11938 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 12(%esp)
	movl	-236(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC344@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 11940 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5209:
	.loc 1 11945 0
	movl	$0, 8(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	cxx_incomplete_type_diagnostic@PLT
	.loc 1 11946 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5201:
	.loc 1 11949 0
	movl	-76(%ebp), %eax
	movl	%eax, 8(%ebp)
	jmp	.L4997
.L5195:
	.loc 1 11951 0
	movl	-76(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-71, %al
	jne	.L5193
	.loc 1 11952 0
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$11952, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5193:
	.loc 1 11956 0
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11957 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L5214
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$54, %al
	jne	.L5214
	jmp	.L4997
.L5214:
	.loc 1 11960 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L4997
	.loc 1 11961 0
	movl	-304(%ebp), %eax
	movl	16(%eax), %edx
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cplus_method_type@PLT
	movl	%eax, -304(%ebp)
	.loc 1 11965 0
	jmp	.L4997
.L5019:
.LBE122:
	.loc 1 11968 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11969 0
	jmp	.L4997
.L5021:
	.loc 1 11972 0
	movl	8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, 8(%ebp)
	.loc 1 11973 0
	jmp	.L4997
.L5015:
	.loc 1 11978 0
	movl	$0, 8(%ebp)
	.loc 1 11979 0
	jmp	.L4997
.L5013:
	.loc 1 11982 0
	movl	$0, 8(%ebp)
	.loc 1 11983 0
	jmp	.L4997
.L5012:
	.loc 1 11986 0
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$11986, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L4997:
.L5577:
	.loc 1 11440 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L5218
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L5218
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L4998
.L5218:
	.loc 1 11990 0
	movl	-308(%ebp), %eax
	testl	%eax, %eax
	je	.L5221
	.loc 1 11992 0
	cmpl	$0, 24(%ebp)
	je	.L5223
	.loc 1 11993 0
	movl	24(%ebp), %eax
	movl	(%eax), %eax
	movl	-308(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	chainon@PLT
	movl	%eax, %edx
	movl	24(%ebp), %eax
	movl	%edx, (%eax)
	jmp	.L5221
.L5223:
	.loc 1 11995 0
	leal	-308(%ebp), %eax
	movl	%eax, 24(%ebp)
.L5221:
	.loc 1 12002 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L5225
	movl	-304(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L5225
	movl	-304(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L5225
	.loc 1 12006 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC345@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12009 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -304(%ebp)
.L5225:
	.loc 1 12012 0
	cmpl	$4, 16(%ebp)
	je	.L5229
	cmpl	$2, 16(%ebp)
	jne	.L5231
.L5229:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L5231
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	variably_modified_type_p@PLT
	testb	%al, %al
	je	.L5231
	.loc 1 12016 0
	cmpl	$4, 16(%ebp)
	jne	.L5234
	.loc 1 12017 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC346@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5236
.L5234:
	.loc 1 12019 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC347@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5236:
	.loc 1 12020 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -304(%ebp)
.L5231:
	.loc 1 12023 0
	cmpl	$1, -276(%ebp)
	je	.L5237
	cmpl	$0, -276(%ebp)
	je	.L5239
	cmpl	$0, -272(%ebp)
	je	.L5239
.L5237:
	.loc 1 12027 0
	leal	.LC348@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12028 0
	movl	$0, -276(%ebp)
.L5239:
	.loc 1 12031 0
	movl	-300(%ebp), %eax
	andl	$33554432, %eax
	testl	%eax, %eax
	je	.L5241
	.loc 1 12033 0
	cmpl	$4, 16(%ebp)
	jne	.L5243
	cmpl	$0, -272(%ebp)
	je	.L5245
.L5243:
	.loc 1 12035 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC349@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12036 0
	movl	-300(%ebp), %eax
	andl	$-33554433, %eax
	movl	%eax, -300(%ebp)
	.loc 1 12033 0
	jmp	.L5241
.L5245:
	.loc 1 12038 0
	cmpl	$6, 16(%ebp)
	je	.L5246
	movl	-300(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L5248
.L5246:
	.loc 1 12040 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC350@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12041 0
	movl	-300(%ebp), %eax
	andl	$-33554433, %eax
	movl	%eax, -300(%ebp)
	.loc 1 12038 0
	jmp	.L5241
.L5248:
	.loc 1 12043 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	je	.L5249
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5251
.L5249:
	.loc 1 12046 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC351@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12047 0
	movl	-300(%ebp), %eax
	andl	$-33554433, %eax
	movl	%eax, -300(%ebp)
	.loc 1 12043 0
	jmp	.L5241
.L5251:
	.loc 1 12049 0
	cmpl	$0, -264(%ebp)
	je	.L5252
	.loc 1 12051 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC352@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12052 0
	movl	-300(%ebp), %eax
	andl	$-33554433, %eax
	movl	%eax, -300(%ebp)
	jmp	.L5241
.L5252:
	.loc 1 12054 0
	movl	-284(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L5241
	.loc 1 12056 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC353@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12057 0
	movl	-300(%ebp), %eax
	andl	$-33554433, %eax
	movl	%eax, -300(%ebp)
.L5241:
	.loc 1 12061 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L5255
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L5255
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L5258
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	je	.L5255
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5258
	jmp	.L5255
.L5258:
	.loc 1 12067 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L5262
	.loc 1 12069 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC354@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12070 0
	movl	-208(%ebp), %eax
	movl	%eax, 8(%ebp)
	jmp	.L5255
.L5262:
	.loc 1 12074 0
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$12074, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5255:
	.loc 1 12078 0
	movl	-300(%ebp), %eax
	andl	$64, %eax
	testl	%eax, %eax
	je	.L5264
	cmpl	$6, 16(%ebp)
	je	.L5264
.LBB124:
	.loc 1 12084 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	32(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	256(%eax), %eax
	cmpl	%eax, %edx
	jne	.L5267
	.loc 1 12085 0
	movl	-304(%ebp), %eax
	movzbl	39(%eax), %edx
	orl	$8, %edx
	movb	%dl, 39(%eax)
.L5267:
	.loc 1 12087 0
	cmpl	$4, 16(%ebp)
	jne	.L5269
	.loc 1 12089 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L5271
	.loc 1 12090 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC355@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L5271:
	.loc 1 12092 0
	movl	-304(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$34, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -64(%ebp)
	jmp	.L5273
.L5269:
	.loc 1 12096 0
	movl	-304(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, -64(%ebp)
	.loc 1 12097 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L5273
	.loc 1 12098 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %edx
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L5275
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -384(%ebp)
	jmp	.L5277
.L5275:
	movl	$0, -384(%ebp)
.L5277:
	movl	-64(%ebp), %eax
	movl	-384(%ebp), %edx
	movl	%edx, 56(%eax)
.L5273:
	.loc 1 12105 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	je	.L5278
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L5278
	movl	-304(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L5278
	movl	-304(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L5278
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L5283
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L5285
.L5283:
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L5286
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L5286
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L5286
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L5286
	movl	-304(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L5286
.L5285:
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	jne	.L5278
.L5286:
	movl	-304(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	movzbl	(%eax), %eax
	cmpb	$46, %al
	jne	.L5278
	movl	-304(%ebp), %eax
	movl	72(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	16(%eax), %eax
	addl	$1, %eax
	movzbl	(%eax), %eax
	cmpb	$95, %al
	jne	.L5278
	cmpl	$0, 24(%ebp)
	je	.L5293
	movl	24(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L5278
.L5293:
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	testl	%eax, %eax
	jne	.L5278
.LBB125:
	.loc 1 12114 0
	movl	-304(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -60(%ebp)
	.loc 1 12118 0
	movl	8(%ebp), %eax
	movl	-304(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	lookup_tag_reverse
	.loc 1 12119 0
	movl	-304(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, -56(%ebp)
	jmp	.L5296
.L5297:
	.loc 1 12120 0
	movl	-56(%ebp), %eax
	movl	56(%eax), %eax
	cmpl	-60(%ebp), %eax
	jne	.L5298
	.loc 1 12121 0
	movl	-56(%ebp), %edx
	movl	-64(%ebp), %eax
	movl	%eax, 56(%edx)
.L5298:
	.loc 1 12119 0
	movl	-56(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, -56(%ebp)
.L5296:
	cmpl	$0, -56(%ebp)
	jne	.L5297
	.loc 1 12123 0
	movl	-304(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L5301
	.loc 1 12124 0
	movl	-304(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	8(%edx), %eax
	orl	$64, %eax
	movb	%al, 8(%edx)
.L5301:
	.loc 1 12129 0
	movl	-304(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L5278
	movl	-304(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L5278
	.loc 1 12130 0
	movl	-304(%ebp), %eax
	movl	92(%eax), %eax
	movl	64(%eax), %eax
	movl	16(%eax), %edx
	movl	-304(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	%eax, 52(%edx)
.L5278:
.LBE125:
	.loc 1 12137 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$15, %al
	je	.L5305
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5307
.L5305:
	.loc 1 12139 0
	movl	-64(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC356@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 12140 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L5307:
	.loc 1 12142 0
	cmpl	$0, -192(%ebp)
	je	.L5308
	.loc 1 12144 0
	cmpl	$0, -204(%ebp)
	jne	.L5310
	.loc 1 12146 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	je	.L5312
	.loc 1 12147 0
	movl	-64(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC357@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	jmp	.L5310
.L5312:
	.loc 1 12149 0
	movl	-304(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -204(%ebp)
.L5310:
	.loc 1 12151 0
	cmpl	$0, -204(%ebp)
	je	.L5308
	.loc 1 12152 0
	movl	-192(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	grok_method_quals@PLT
.L5308:
	.loc 1 12155 0
	movl	-300(%ebp), %eax
	andl	$1024, %eax
	testl	%eax, %eax
	jne	.L5315
	cmpl	$0, -240(%ebp)
	je	.L5317
	movl	-240(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L5317
.L5315:
	.loc 1 12157 0
	movl	-64(%ebp), %eax
	movzbl	37(%eax), %edx
	orl	$64, %edx
	movb	%dl, 37(%eax)
.L5317:
	.loc 1 12159 0
	cmpl	$0, -188(%ebp)
	setne	%al
	movzbl	%al, %edx
	cmpl	$0, -192(%ebp)
	setne	%al
	movzbl	%al, %ecx
	movl	%edx, 24(%esp)
	movl	-272(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-268(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	-280(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC358@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, (%esp)
	call	bad_specifiers
	.loc 1 12162 0
	movl	-64(%ebp), %ecx
	movl	%ecx, -440(%ebp)
	jmp	.L4570
.L5264:
.LBE124:
	.loc 1 12170 0
	movl	-304(%ebp), %eax
	testl	%eax, %eax
	je	.L5319
	cmpl	$0, -232(%ebp)
	je	.L5319
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L5319
	movl	-304(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L5319
	movl	-304(%ebp), %eax
	movl	72(%eax), %edx
	movl	-232(%ebp), %eax
	movl	72(%eax), %eax
	cmpl	%eax, %edx
	jne	.L5319
	.loc 1 12173 0
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	build_cplus_array_type@PLT
	movl	%eax, -304(%ebp)
.L5319:
	.loc 1 12179 0
	movl	-304(%ebp), %eax
	cmpl	-232(%ebp), %eax
	jne	.L5325
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L5325
.LBB126:
	.loc 1 12181 0
	movl	$0, -52(%ebp)
	.loc 1 12184 0
	movl	-304(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L5328
.L5329:
.LBB127:
	.loc 1 12186 0
	movl	-48(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	cp_build_parm_decl@PLT
	movl	%eax, -44(%ebp)
	.loc 1 12188 0
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 12189 0
	movl	-44(%ebp), %eax
	movl	%eax, -52(%ebp)
.LBE127:
	.loc 1 12184 0
	movl	-48(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
.L5328:
	cmpl	$0, -48(%ebp)
	jne	.L5329
	.loc 1 12192 0
	movl	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	nreverse@PLT
	movl	%eax, %edx
	movl	last_function_parms@GOT(%ebx), %eax
	movl	%edx, (%eax)
.L5325:
.LBE126:
	.loc 1 12198 0
	cmpl	$6, 16(%ebp)
	jne	.L5331
	.loc 1 12202 0
	cmpl	$0, -284(%ebp)
	je	.L5333
	.loc 1 12203 0
	movl	$0, -284(%ebp)
.L5333:
	.loc 1 12206 0
	cmpl	$0, -272(%ebp)
	je	.L5335
	.loc 1 12208 0
	cmpl	$0, -284(%ebp)
	je	.L5337
	.loc 1 12210 0
	leal	.LC359@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12211 0
	movl	$0, -284(%ebp)
.L5337:
	.loc 1 12213 0
	cmpl	$0, -268(%ebp)
	je	.L5339
	.loc 1 12215 0
	leal	.LC360@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12216 0
	movl	$0, -268(%ebp)
.L5339:
	.loc 1 12219 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	testl	%eax, %eax
	jne	.L5341
	.loc 1 12222 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	jne	.L5343
	.loc 1 12223 0
	leal	.LC361@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L5341
.L5343:
	.loc 1 12224 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	jne	.L5345
	.loc 1 12225 0
	movl	-304(%ebp), %eax
	movl	16(%eax), %edx
	movl	-304(%ebp), %eax
	movl	80(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	.LC362@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L5341
.L5345:
	.loc 1 12229 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC363@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L5341:
	.loc 1 12235 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	je	.L5352
	.loc 1 12237 0
	movl	-304(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, (%esp)
	call	decl_type_access_control@PLT
	.loc 1 12240 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L5349
	.loc 1 12241 0
	movl	-304(%ebp), %eax
	movl	72(%eax), %edx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	make_friend_class@PLT
	jmp	.L5351
.L5349:
	.loc 1 12243 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC364@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5351:
	.loc 1 12246 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -304(%ebp)
	jmp	.L5352
.L5335:
	.loc 1 12249 0
	cmpl	$0, -192(%ebp)
	je	.L5352
	.loc 1 12251 0
	cmpl	$0, -204(%ebp)
	jne	.L5354
	.loc 1 12253 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	je	.L5356
	.loc 1 12254 0
	leal	.LC365@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5354
.L5356:
	.loc 1 12256 0
	movl	-304(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -204(%ebp)
.L5354:
	.loc 1 12258 0
	cmpl	$0, -204(%ebp)
	je	.L5352
.LBB128:
	.loc 1 12260 0
	movl	-304(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$34, (%esp)
	call	build_decl@PLT
	movl	%eax, -40(%ebp)
	.loc 1 12261 0
	movl	-192(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	grok_method_quals@PLT
	.loc 1 12262 0
	movl	-40(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -304(%ebp)
.L5352:
.LBE128:
	.loc 1 12266 0
	movl	-304(%ebp), %esi
	movl	%esi, -440(%ebp)
	jmp	.L4570
.L5331:
	.loc 1 12268 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	jne	.L5359
	cmpl	$2, 16(%ebp)
	je	.L5359
	cmpl	$3, 16(%ebp)
	je	.L5359
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	je	.L5359
	cmpl	$0, -220(%ebp)
	jne	.L5359
	.loc 1 12273 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC366@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12274 0
	call	make_anon_name@PLT
	movl	%eax, 8(%ebp)
.L5359:
	.loc 1 12282 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L5365
	cmpl	$2, 16(%ebp)
	je	.L5365
	.loc 1 12284 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	jne	.L5368
	.loc 1 12285 0
	leal	.LC367@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5370
.L5368:
	.loc 1 12286 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	jne	.L5371
	.loc 1 12288 0
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L5373
	.loc 1 12289 0
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$12289, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5373:
	.loc 1 12291 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC368@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5370
.L5371:
	.loc 1 12294 0
	leal	.LC369@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5370:
	.loc 1 12295 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, -304(%ebp)
.L5365:
	.loc 1 12301 0
	cmpl	$2, 16(%ebp)
	je	.L5375
	cmpl	$3, 16(%ebp)
	jne	.L5377
.L5375:
	.loc 1 12303 0
	cmpl	$0, -204(%ebp)
	jne	.L5378
	cmpl	$0, -180(%ebp)
	je	.L5380
.L5378:
	.loc 1 12304 0
	leal	.LC370@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5380:
	.loc 1 12310 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L5381
	.loc 1 12313 0
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -304(%ebp)
	.loc 1 12314 0
	movl	$0, -284(%ebp)
	jmp	.L5377
.L5381:
	.loc 1 12316 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L5383
	.loc 1 12317 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -304(%ebp)
	jmp	.L5377
.L5383:
	.loc 1 12318 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$15, %al
	jne	.L5377
	.loc 1 12319 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -304(%ebp)
.L5377:
.LBB129:
	.loc 1 12325 0
	cmpl	$2, 16(%ebp)
	jne	.L5386
	.loc 1 12327 0
	movl	-304(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	cp_build_parm_decl@PLT
	movl	%eax, -316(%ebp)
	.loc 1 12329 0
	cmpl	$0, -188(%ebp)
	setne	%al
	movzbl	%al, %edx
	cmpl	$0, -192(%ebp)
	setne	%al
	movzbl	%al, %ecx
	movl	%edx, 24(%esp)
	movl	-272(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-268(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	-280(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC280@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-316(%ebp), %eax
	movl	%eax, (%esp)
	call	bad_specifiers
	jmp	.L5388
.L5386:
	.loc 1 12332 0
	cmpl	$4, 16(%ebp)
	jne	.L5389
	.loc 1 12334 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L5391
	.loc 1 12338 0
	movl	$0, -316(%ebp)
	jmp	.L5393
.L5391:
	.loc 1 12340 0
	cmpl	$0, -180(%ebp)
	je	.L5394
	cmpl	$0, -272(%ebp)
	jne	.L5394
	.loc 1 12343 0
	leal	.LC371@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12344 0
	movl	$0, -316(%ebp)
	.loc 1 12340 0
	jmp	.L5393
.L5394:
	.loc 1 12346 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L5397
.LBB130:
	.loc 1 12348 0
	movl	$0, -36(%ebp)
	.loc 1 12353 0
	cmpl	$0, -272(%ebp)
	je	.L5399
	movl	ridpointers@GOT(%ebx), %eax
	movl	(%eax), %eax
	addl	$40, %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L5399
	.loc 1 12355 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC372@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12357 0
	movl	$0, -272(%ebp)
.L5399:
	.loc 1 12360 0
	cmpl	$0, -272(%ebp)
	jne	.L5402
	.loc 1 12362 0
	cmpl	$0, -204(%ebp)
	jne	.L5404
	.loc 1 12363 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -204(%ebp)
.L5404:
	.loc 1 12365 0
	cmpl	$0, -204(%ebp)
	jne	.L5406
	.loc 1 12367 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC373@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12369 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5406:
	.loc 1 12374 0
	cmpl	$0, -280(%ebp)
	je	.L5408
	movl	-204(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L5408
	.loc 1 12376 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC374@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12378 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5408:
	.loc 1 12381 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2896(%eax), %edx
	movl	8(%ebp), %eax
	cmpl	%eax, %edx
	je	.L5411
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2912(%eax), %edx
	movl	8(%ebp), %eax
	cmpl	%eax, %edx
	je	.L5411
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2928(%eax), %edx
	movl	8(%ebp), %eax
	cmpl	%eax, %edx
	je	.L5411
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2944(%eax), %edx
	movl	8(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L5415
.L5411:
	.loc 1 12386 0
	cmpl	$0, -280(%ebp)
	je	.L5402
	.loc 1 12388 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC375@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12390 0
	movl	$0, -280(%ebp)
	.loc 1 12381 0
	jmp	.L5402
.L5415:
	.loc 1 12393 0
	cmpl	$1, -264(%ebp)
	jg	.L5402
	.loc 1 12394 0
	movl	-304(%ebp), %eax
	movl	16(%eax), %edx
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cplus_method_type@PLT
	movl	%eax, -304(%ebp)
.L5402:
	.loc 1 12399 0
	cmpl	$0, -204(%ebp)
	je	.L5419
	movl	-204(%ebp), %eax
	movl	72(%eax), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	decl_function_context@PLT
	movl	%eax, -380(%ebp)
	jmp	.L5421
.L5419:
	movl	$0, -380(%ebp)
.L5421:
	movl	-380(%ebp), %edx
	movl	%edx, -32(%ebp)
	.loc 1 12401 0
	cmpl	$0, -272(%ebp)
	je	.L5422
	cmpl	$0, -264(%ebp)
	jne	.L5424
.L5422:
	cmpl	$0, -32(%ebp)
	jne	.L5424
	movl	$1, -376(%ebp)
	jmp	.L5426
.L5424:
	movl	$0, -376(%ebp)
.L5426:
	movl	-376(%ebp), %ecx
	movl	%ecx, -36(%ebp)
	.loc 1 12403 0
	cmpl	$0, -272(%ebp)
	je	.L5427
	movl	$-1, -372(%ebp)
	jmp	.L5429
.L5427:
	movl	$0, -372(%ebp)
.L5429:
	movl	8(%ebp), %esi
	movl	%esi, -368(%ebp)
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	je	.L5430
	movl	8(%ebp), %eax
	movl	%eax, -364(%ebp)
	jmp	.L5432
.L5430:
	movl	-208(%ebp), %edx
	movl	%edx, -364(%ebp)
.L5432:
	movl	-304(%ebp), %edx
	movl	-180(%ebp), %eax
	movl	%eax, 56(%esp)
	movl	-184(%ebp), %eax
	movl	%eax, 52(%esp)
	movl	-228(%ebp), %eax
	movl	%eax, 48(%esp)
	movl	-268(%ebp), %eax
	movl	%eax, 44(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	-272(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-372(%ebp), %ecx
	movl	%ecx, 32(%esp)
	movl	-188(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-192(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-196(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-280(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	-368(%ebp), %esi
	movl	%esi, 12(%esp)
	movl	-364(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	grokfndecl
	movl	%eax, -316(%ebp)
	.loc 1 12410 0
	cmpl	$0, -316(%ebp)
	jne	.L5433
	.loc 1 12411 0
	movl	-316(%ebp), %edx
	movl	%edx, -440(%ebp)
	jmp	.L4570
.L5433:
	.loc 1 12425 0
	cmpl	$2, -276(%ebp)
	jne	.L5435
	.loc 1 12426 0
	movl	-316(%ebp), %ecx
	movl	136(%ecx), %eax
	movzbl	6(%eax), %edx
	orl	$8, %edx
	movb	%dl, 6(%eax)
	jmp	.L5393
.L5435:
	.loc 1 12427 0
	movl	-316(%ebp), %esi
	movl	136(%esi), %eax
	movzbl	5(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L5393
.LBB131:
	.loc 1 12433 0
	movl	-316(%ebp), %edx
	movl	4(%edx), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-316(%ebp), %ecx
	movl	%ecx, (%esp)
	call	skip_artificial_parms_for@PLT
	movl	%eax, -28(%ebp)
	.loc 1 12435 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-28(%ebp), %eax
	je	.L5439
	cmpl	$0, -28(%ebp)
	je	.L5393
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5393
	movl	-28(%ebp), %eax
	movl	(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	%eax, %edx
	je	.L5393
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L5393
.L5439:
	.loc 1 12440 0
	movl	-316(%ebp), %esi
	movl	136(%esi), %eax
	movzbl	6(%eax), %edx
	orl	$8, %edx
	movb	%dl, 6(%eax)
	jmp	.L5393
.L5397:
.LBE131:
.LBE130:
	.loc 1 12443 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5444
	.loc 1 12449 0
	cmpl	$0, -272(%ebp)
	je	.L5446
	movl	$-1, -360(%ebp)
	jmp	.L5448
.L5446:
	movl	$0, -360(%ebp)
.L5448:
	movl	8(%ebp), %edx
	movl	8(%ebp), %ecx
	movl	-304(%ebp), %esi
	movl	-180(%ebp), %eax
	movl	%eax, 56(%esp)
	movl	-184(%ebp), %eax
	movl	%eax, 52(%esp)
	movl	-228(%ebp), %eax
	movl	%eax, 48(%esp)
	movl	$0, 44(%esp)
	movl	$1, 40(%esp)
	movl	-272(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	-360(%ebp), %eax
	movl	%eax, 32(%esp)
	movl	-188(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-192(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-196(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-280(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%edx, 12(%esp)
	movl	%ecx, 8(%esp)
	movl	%esi, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	grokfndecl
	movl	%eax, -316(%ebp)
	.loc 1 12453 0
	cmpl	$0, -316(%ebp)
	jne	.L5393
	.loc 1 12454 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L5444:
	.loc 1 12456 0
	cmpl	$0, -264(%ebp)
	jne	.L5451
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L5451
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L5451
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L5455
	cmpl	$0, 20(%ebp)
	jne	.L5451
.L5455:
	.loc 1 12460 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	je	.L5457
	.loc 1 12461 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC376@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5459
.L5457:
	.loc 1 12463 0
	movl	-304(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC377@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5459:
	.loc 1 12467 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L5460
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L5460
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L5460
	cmpl	$0, 12(%ebp)
	je	.L5460
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L5460
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %edx
	movl	-304(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L5460
	.loc 1 12472 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC378@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5460:
	.loc 1 12475 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -304(%ebp)
	.loc 1 12476 0
	movl	$0, -316(%ebp)
	.loc 1 12456 0
	jmp	.L5393
.L5451:
	.loc 1 12480 0
	cmpl	$0, -272(%ebp)
	je	.L5467
	.loc 1 12482 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC379@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12484 0
	movl	$0, -272(%ebp)
.L5467:
	.loc 1 12486 0
	movl	$0, -316(%ebp)
.L5393:
	.loc 1 12489 0
	cmpl	$0, -272(%ebp)
	je	.L5469
	.loc 1 12492 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	-204(%ebp), %eax
	jne	.L5471
	.loc 1 12493 0
	leal	.LC380@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	jmp	.L5469
.L5471:
.LBB132:
	.loc 1 12496 0
	movl	$0, -24(%ebp)
	.loc 1 12497 0
	cmpl	$0, -316(%ebp)
	je	.L5473
	movl	-316(%ebp), %edx
	movl	52(%edx), %eax
	testl	%eax, %eax
	je	.L5473
	.loc 1 12499 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	template_class_depth@PLT
	testl	%eax, %eax
	jne	.L5476
	.loc 1 12501 0
	cmpl	$0, -228(%ebp)
	je	.L5478
	movl	$6, -356(%ebp)
	jmp	.L5480
.L5478:
	movl	$4, -356(%ebp)
.L5480:
	movl	8(%ebp), %edx
	movl	-356(%ebp), %ecx
	movl	%ecx, 12(%esp)
	movl	-184(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-316(%ebp), %esi
	movl	%esi, 4(%esp)
	movl	%edx, (%esp)
	call	check_explicit_specialization@PLT
	movl	%eax, -316(%ebp)
	.loc 1 12505 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-316(%ebp), %eax
	jne	.L5476
	.loc 1 12506 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5476:
	.loc 1 12509 0
	movl	24(%ebp), %eax
	movl	(%eax), %edx
	movl	last_function_parms@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	8(%ebp), %esi
	movl	-228(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-192(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-196(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	%edx, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	-316(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%esi, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	do_friend@PLT
	movl	%eax, -24(%ebp)
.L5473:
	.loc 1 12513 0
	cmpl	$0, -24(%ebp)
	je	.L5482
	cmpl	$0, -228(%ebp)
	je	.L5482
	.loc 1 12514 0
	movl	-24(%ebp), %edx
	movl	%edx, -440(%ebp)
	jmp	.L4570
.L5482:
	.loc 1 12516 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5469:
.LBE132:
	.loc 1 12522 0
	cmpl	$0, -316(%ebp)
	jne	.L5388
	.loc 1 12524 0
	cmpl	$0, 20(%ebp)
	je	.L5487
	.loc 1 12526 0
	cmpl	$0, -264(%ebp)
	jne	.L5489
	.loc 1 12540 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC381@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 12542 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC382@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 12543 0
	movl	$1, -264(%ebp)
.L5489:
	.loc 1 12546 0
	movl	-304(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L5487
	.loc 1 12549 0
	movl	-304(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	check_static_variable_definition@PLT
	testl	%eax, %eax
	je	.L5487
	.loc 1 12556 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -440(%ebp)
	jmp	.L4570
.L5487:
	.loc 1 12560 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L5493
	cmpl	$0, -264(%ebp)
	je	.L5493
	.loc 1 12566 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC383@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L5493:
	.loc 1 12569 0
	cmpl	$0, -264(%ebp)
	je	.L5496
	.loc 1 12573 0
	movl	-304(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$35, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -316(%ebp)
	.loc 1 12574 0
	movl	-316(%ebp), %ecx
	movzbl	10(%ecx), %eax
	orl	$4, %eax
	movl	-316(%ebp), %esi
	movb	%al, 10(%esi)
	.loc 1 12576 0
	movl	-316(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$1, %eax
	movl	-316(%ebp), %ecx
	movb	%al, 33(%ecx)
	movl	-316(%ebp), %esi
	movzbl	33(%esi), %eax
	andl	$1, %eax
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movl	-316(%ebp), %ecx
	movzbl	10(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movl	-316(%ebp), %esi
	movb	%al, 10(%esi)
	jmp	.L5498
.L5496:
	.loc 1 12580 0
	movl	-304(%ebp), %eax
	movl	8(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$38, (%esp)
	call	build_decl@PLT
	movl	%eax, -316(%ebp)
	.loc 1 12581 0
	movl	-220(%ebp), %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$7, %edx
	movl	-316(%ebp), %ecx
	movzbl	36(%ecx), %eax
	andl	$127, %eax
	orl	%edx, %eax
	movl	-316(%ebp), %esi
	movb	%al, 36(%esi)
	.loc 1 12582 0
	movl	-300(%ebp), %eax
	andl	$33554432, %eax
	testl	%eax, %eax
	je	.L5498
	.loc 1 12584 0
	movl	-316(%ebp), %edx
	movzbl	37(%edx), %eax
	orl	$32, %eax
	movl	-316(%ebp), %ecx
	movb	%al, 37(%ecx)
	.loc 1 12585 0
	movl	-300(%ebp), %eax
	andl	$-33554433, %eax
	movl	%eax, -300(%ebp)
.L5498:
	.loc 1 12589 0
	cmpl	$0, -188(%ebp)
	setne	%al
	movzbl	%al, %edx
	cmpl	$0, -192(%ebp)
	setne	%al
	movzbl	%al, %ecx
	movl	%edx, 24(%esp)
	movl	-272(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-268(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	-280(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC312@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-316(%ebp), %esi
	movl	%esi, (%esp)
	call	bad_specifiers
	jmp	.L5388
.L5389:
	.loc 1 12593 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	je	.L5500
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5502
.L5500:
.LBB133:
	.loc 1 12596 0
	movl	$0, -16(%ebp)
	.loc 1 12598 0
	movl	8(%ebp), %eax
	testl	%eax, %eax
	jne	.L5503
	.loc 1 12599 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L5503:
	.loc 1 12601 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-53, %al
	jne	.L5505
	.loc 1 12602 0
	movl	-208(%ebp), %eax
	movl	%eax, -20(%ebp)
	jmp	.L5507
.L5505:
	.loc 1 12604 0
	movl	8(%ebp), %eax
	movl	%eax, -20(%ebp)
.L5507:
	.loc 1 12606 0
	movl	-300(%ebp), %eax
	andl	$2048, %eax
	testl	%eax, %eax
	je	.L5508
	.loc 1 12607 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC384@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5510
.L5508:
	.loc 1 12608 0
	movl	-300(%ebp), %eax
	andl	$32, %eax
	testl	%eax, %eax
	je	.L5511
	.loc 1 12609 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC385@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5510
.L5511:
	.loc 1 12610 0
	movl	-300(%ebp), %eax
	andl	$1048576, %eax
	testl	%eax, %eax
	je	.L5510
	.loc 1 12611 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC386@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5510:
	.loc 1 12616 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	jne	.L5514
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L5516
	movl	-300(%ebp), %eax
	andl	$256, %eax
	testl	%eax, %eax
	je	.L5514
.L5516:
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5514
	.loc 1 12621 0
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L5519
	.loc 1 12622 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC387@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	jmp	.L5514
.L5519:
	.loc 1 12624 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC388@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L5514:
	.loc 1 12627 0
	cmpl	$0, -204(%ebp)
	jne	.L5521
	.loc 1 12629 0
	cmpl	$0, -280(%ebp)
	je	.L5525
	.loc 1 12631 0
	movl	-236(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC389@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12632 0
	movl	$0, -280(%ebp)
	jmp	.L5525
.L5521:
	.loc 1 12635 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L5525
	cmpl	$1, -264(%ebp)
	jg	.L5525
	.loc 1 12636 0
	movl	-304(%ebp), %eax
	movl	16(%eax), %edx
	movl	-304(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cplus_method_type@PLT
	movl	%eax, -304(%ebp)
.L5525:
	.loc 1 12640 0
	cmpl	$0, -204(%ebp)
	jne	.L5528
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	jne	.L5528
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L5531
.L5528:
	movl	$1, -352(%ebp)
	jmp	.L5532
.L5531:
	movl	$0, -352(%ebp)
.L5532:
	movl	-352(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 12644 0
	movl	8(%ebp), %edx
	movl	-304(%ebp), %ecx
	movl	-180(%ebp), %eax
	movl	%eax, 56(%esp)
	movl	-184(%ebp), %eax
	movl	%eax, 52(%esp)
	movl	-228(%ebp), %eax
	movl	%eax, 48(%esp)
	movl	-268(%ebp), %eax
	movl	%eax, 44(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 40(%esp)
	movl	-272(%ebp), %eax
	movl	%eax, 36(%esp)
	movl	$1, 32(%esp)
	movl	-188(%ebp), %eax
	movl	%eax, 28(%esp)
	movl	-192(%ebp), %eax
	movl	%eax, 24(%esp)
	movl	-196(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-280(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%edx, 12(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	-204(%ebp), %eax
	movl	%eax, (%esp)
	call	grokfndecl
	movl	%eax, -316(%ebp)
	.loc 1 12649 0
	cmpl	$0, -316(%ebp)
	jne	.L5533
	.loc 1 12650 0
	movl	$0, -440(%ebp)
	jmp	.L4570
.L5533:
	.loc 1 12652 0
	cmpl	$1, -264(%ebp)
	jne	.L5388
.LBB134:
	.loc 1 12654 0
	movl	$0, -12(%ebp)
	.loc 1 12658 0
	movl	-304(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5537
	.loc 1 12660 0
	movl	-316(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	.LC390@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 12661 0
	movl	$1, -12(%ebp)
	jmp	.L5539
.L5537:
	.loc 1 12663 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5539
	.loc 1 12666 0
	leal	.LC391@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12667 0
	movl	$1, -12(%ebp)
.L5539:
	.loc 1 12670 0
	cmpl	$0, -12(%ebp)
	je	.L5388
	.loc 1 12672 0
	movl	$0, -264(%ebp)
	.loc 1 12673 0
	movl	-300(%ebp), %eax
	andl	$-2, %eax
	movl	%eax, -300(%ebp)
	.loc 1 12593 0
	jmp	.L5388
.L5502:
.LBE134:
.LBE133:
	.loc 1 12682 0
	cmpl	$0, -204(%ebp)
	je	.L5542
	movl	-204(%ebp), %ecx
	movl	%ecx, -348(%ebp)
	jmp	.L5544
.L5542:
	movl	-180(%ebp), %esi
	movl	%esi, -348(%ebp)
.L5544:
	movl	-284(%ebp), %eax
	andl	$1, %eax
	movl	8(%ebp), %edx
	movl	-304(%ebp), %ecx
	movl	-348(%ebp), %esi
	movl	%esi, 20(%esp)
	movl	%eax, 16(%esp)
	movl	20(%ebp), %eax
	movl	%eax, 12(%esp)
	leal	-300(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	grokvardecl
	movl	%eax, -316(%ebp)
	.loc 1 12686 0
	cmpl	$0, -188(%ebp)
	setne	%al
	movzbl	%al, %edx
	cmpl	$0, -192(%ebp)
	setne	%al
	movzbl	%al, %ecx
	movl	%edx, 24(%esp)
	movl	-272(%ebp), %eax
	movl	%eax, 20(%esp)
	movl	-268(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%ecx, 12(%esp)
	movl	-280(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	.LC392@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	-316(%ebp), %eax
	movl	%eax, (%esp)
	call	bad_specifiers
	.loc 1 12689 0
	cmpl	$0, -204(%ebp)
	je	.L5388
	.loc 1 12691 0
	movl	-204(%ebp), %eax
	movl	-316(%ebp), %edx
	movl	%eax, 56(%edx)
	.loc 1 12692 0
	cmpl	$1, -264(%ebp)
	jne	.L5546
	.loc 1 12694 0
	leal	.LC393@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 12695 0
	movl	$0, -264(%ebp)
	.loc 1 12696 0
	movl	-300(%ebp), %eax
	andl	$-2, %eax
	movl	%eax, -300(%ebp)
.L5546:
	.loc 1 12698 0
	movl	-300(%ebp), %eax
	andl	$32, %eax
	testl	%eax, %eax
	je	.L5548
	movl	-316(%ebp), %ecx
	movzbl	10(%ecx), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L5548
	.loc 1 12700 0
	movl	-316(%ebp), %esi
	movl	%esi, 4(%esp)
	leal	.LC394@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12701 0
	movl	-300(%ebp), %eax
	andl	$-33, %eax
	movl	%eax, -300(%ebp)
.L5548:
	.loc 1 12703 0
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L5388
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L5388
	.loc 1 12705 0
	movl	-316(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC395@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 12707 0
	movl	-300(%ebp), %eax
	andl	$-17, %eax
	movl	%eax, -300(%ebp)
.L5388:
	.loc 1 12712 0
	movl	-300(%ebp), %eax
	andl	$33554432, %eax
	testl	%eax, %eax
	je	.L5553
	leal	__FUNCTION__.29141@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$12712, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5553:
	.loc 1 12717 0
	movl	-300(%ebp), %eax
	andl	$32, %eax
	testl	%eax, %eax
	je	.L5555
	.loc 1 12718 0
	movl	-316(%ebp), %edx
	movzbl	33(%edx), %eax
	orl	$4, %eax
	movl	-316(%ebp), %ecx
	movb	%al, 33(%ecx)
.L5555:
	.loc 1 12720 0
	movl	-300(%ebp), %eax
	andl	$16, %eax
	testl	%eax, %eax
	je	.L5557
	.loc 1 12721 0
	movl	-316(%ebp), %esi
	movzbl	37(%esi), %eax
	orl	$-128, %eax
	movl	-316(%ebp), %edx
	movb	%al, 37(%edx)
.L5557:
	.loc 1 12723 0
	movl	-300(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L5559
	.loc 1 12724 0
	movl	-316(%ebp), %ecx
	movzbl	38(%ecx), %eax
	orl	$8, %eax
	movl	-316(%ebp), %esi
	movb	%al, 38(%esi)
.L5559:
	.loc 1 12729 0
	movl	-300(%ebp), %eax
	andl	$8192, %eax
	testl	%eax, %eax
	je	.L5561
	.loc 1 12730 0
	movl	-316(%ebp), %edx
	movzbl	34(%edx), %eax
	orl	$1, %eax
	movl	-316(%ebp), %ecx
	movb	%al, 34(%ecx)
.L5561:
	.loc 1 12732 0
	movl	-300(%ebp), %eax
	andl	$16384, %eax
	testl	%eax, %eax
	je	.L5563
	.loc 1 12733 0
	movl	-316(%ebp), %esi
	movzbl	34(%esi), %eax
	orl	$4, %eax
	movl	-316(%ebp), %edx
	movb	%al, 34(%edx)
.L5563:
	.loc 1 12735 0
	movl	-300(%ebp), %eax
	andl	$32768, %eax
	testl	%eax, %eax
	je	.L5565
	.loc 1 12736 0
	movl	-316(%ebp), %ecx
	movzbl	34(%ecx), %eax
	orl	$8, %eax
	movl	-316(%ebp), %esi
	movb	%al, 34(%esi)
.L5565:
	.loc 1 12738 0
	movl	-300(%ebp), %eax
	andl	$65536, %eax
	testl	%eax, %eax
	je	.L5567
	.loc 1 12739 0
	movl	-316(%ebp), %edx
	movzbl	34(%edx), %eax
	orl	$16, %eax
	movl	-316(%ebp), %ecx
	movb	%al, 34(%ecx)
.L5567:
	.loc 1 12747 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L5569
	.loc 1 12748 0
	movl	-316(%ebp), %esi
	movl	%esi, 4(%esp)
	movl	-284(%ebp), %eax
	movl	%eax, (%esp)
	call	c_apply_type_quals_to_decl@PLT
.L5569:
	.loc 1 12751 0
	movl	In_MP_Region@GOT(%ebx), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	.L5571
	cmpl	$0, -316(%ebp)
	je	.L5571
	movl	-316(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$35, %al
	jne	.L5571
	.loc 1 12752 0
	movl	-316(%ebp), %ecx
	movl	%ecx, (%esp)
	call	push_mp_local_vars@PLT
.L5571:
	.loc 1 12754 0
	movl	-316(%ebp), %esi
	movl	%esi, -440(%ebp)
.L4570:
	movl	-440(%ebp), %eax
.LBE129:
	.loc 1 12756 0
	addl	$496, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE220:
	.size	grokdeclarator, .-grokdeclarator
.globl parmlist_is_exprlist
	.type	parmlist_is_exprlist, @function
parmlist_is_exprlist:
.LFB221:
	.loc 1 12766 0
	pushl	%ebp
.LCFI794:
	movl	%esp, %ebp
.LCFI795:
	pushl	%ebx
.LCFI796:
	subl	$4, %esp
.LCFI797:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 12767 0
	cmpl	$0, 8(%ebp)
	je	.L5579
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L5581
.L5579:
	.loc 1 12768 0
	movl	$0, -8(%ebp)
	jmp	.L5582
.L5581:
	.loc 1 12770 0
	call	toplevel_bindings_p@PLT
	testl	%eax, %eax
	je	.L5583
	.loc 1 12774 0
	jmp	.L5585
.L5586:
	.loc 1 12776 0
	movl	8(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$1, %al
	je	.L5587
	.loc 1 12777 0
	movl	$1, -8(%ebp)
	jmp	.L5582
.L5587:
	.loc 1 12778 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%ebp)
.L5585:
	.loc 1 12774 0
	cmpl	$0, 8(%ebp)
	jne	.L5586
	.loc 1 12780 0
	movl	$0, -8(%ebp)
	jmp	.L5582
.L5583:
	.loc 1 12782 0
	movl	$1, -8(%ebp)
.L5582:
	movl	-8(%ebp), %eax
	.loc 1 12783 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE221:
	.size	parmlist_is_exprlist, .-parmlist_is_exprlist
	.type	require_complete_types_for_parms, @function
require_complete_types_for_parms:
.LFB222:
	.loc 1 12792 0
	pushl	%ebp
.LCFI798:
	movl	%esp, %ebp
.LCFI799:
	pushl	%ebx
.LCFI800:
	subl	$20, %esp
.LCFI801:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 12793 0
	jmp	.L5592
.L5593:
	.loc 1 12795 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L5594
	.loc 1 12797 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	jmp	.L5596
.L5594:
	.loc 1 12798 0
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	complete_type_or_diagnostic@PLT
	testl	%eax, %eax
	je	.L5597
	.loc 1 12800 0
	movl	$0, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_decl@PLT
	.loc 1 12801 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	type_passed_as@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 68(%eax)
	jmp	.L5596
.L5597:
	.loc 1 12804 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
.L5596:
	.loc 1 12793 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 8(%ebp)
.L5592:
	cmpl	$0, 8(%ebp)
	jne	.L5593
	.loc 1 12806 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE222:
	.size	require_complete_types_for_parms, .-require_complete_types_for_parms
.globl local_variable_p
	.type	local_variable_p, @function
local_variable_p:
.LFB223:
	.loc 1 12813 0
	pushl	%ebp
.LCFI802:
	movl	%esp, %ebp
.LCFI803:
	subl	$12, %esp
.LCFI804:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 12814 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	jne	.L5602
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L5604
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -12(%ebp)
	jmp	.L5606
.L5604:
	movl	global_namespace@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L5606:
	movl	-12(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ecx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	je	.L5602
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L5608
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$33, %al
	je	.L5610
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	je	.L5610
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	je	.L5610
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	je	.L5610
.L5608:
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L5614
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L5616
.L5614:
	movl	global_namespace@GOT(%ecx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L5616:
	movl	-8(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$39, %al
	jne	.L5610
.L5602:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	jne	.L5617
.L5610:
	.loc 1 12821 0
	movl	$1, -4(%ebp)
	jmp	.L5618
.L5617:
	.loc 1 12823 0
	movl	$0, -4(%ebp)
.L5618:
	movl	-4(%ebp), %eax
	.loc 1 12824 0
	leave
	ret
.LFE223:
	.size	local_variable_p, .-local_variable_p
.globl nonstatic_local_decl_p
	.type	nonstatic_local_decl_p, @function
nonstatic_local_decl_p:
.LFB224:
	.loc 1 12833 0
	pushl	%ebp
.LCFI805:
	movl	%esp, %ebp
.LCFI806:
	pushl	%ebx
.LCFI807:
	subl	$20, %esp
.LCFI808:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 12834 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	local_variable_p@PLT
	testl	%eax, %eax
	je	.L5621
	movl	8(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L5623
.L5621:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$32, %al
	je	.L5623
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$37, %al
	jne	.L5625
.L5623:
	movl	$1, -8(%ebp)
	jmp	.L5626
.L5625:
	movl	$0, -8(%ebp)
.L5626:
	movl	-8(%ebp), %eax
	.loc 1 12837 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE224:
	.size	nonstatic_local_decl_p, .-nonstatic_local_decl_p
	.type	local_variable_p_walkfn, @function
local_variable_p_walkfn:
.LFB225:
	.loc 1 12847 0
	pushl	%ebp
.LCFI809:
	movl	%esp, %ebp
.LCFI810:
	pushl	%ebx
.LCFI811:
	subl	$20, %esp
.LCFI812:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 12848 0
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	local_variable_p@PLT
	testl	%eax, %eax
	je	.L5629
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movzbl	35(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L5629
	movl	8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L5632
.L5629:
	movl	$0, -8(%ebp)
.L5632:
	movl	-8(%ebp), %eax
	.loc 1 12850 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE225:
	.size	local_variable_p_walkfn, .-local_variable_p_walkfn
	.section	.rodata
	.align 4
.LC396:
	.string	"default argument for `%#D' has type `%T'"
	.align 4
.LC397:
	.string	"default argument for parameter of type `%T' has type `%T'"
	.align 4
.LC398:
	.string	"default argument `%E' uses local variable `%D'"
	.text
.globl check_default_argument
	.type	check_default_argument, @function
check_default_argument:
.LFB226:
	.loc 1 12861 0
	pushl	%ebp
.LCFI813:
	movl	%esp, %ebp
.LCFI814:
	pushl	%ebx
.LCFI815:
	subl	$36, %esp
.LCFI816:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 12865 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-54, %al
	jne	.L5635
	.loc 1 12869 0
	movl	12(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L5637
.L5635:
	.loc 1 12871 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L5638
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	je	.L5640
.L5638:
	.loc 1 12876 0
	movl	12(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L5637
.L5640:
	.loc 1 12878 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L5641
	.loc 1 12880 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 12881 0
	movl	$0, 8(%ebp)
	jmp	.L5643
.L5641:
	.loc 1 12884 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
.L5643:
	.loc 1 12886 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	12(%ebp), %eax
	cmpl	%eax, %edx
	je	.L5644
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L5644
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L5644
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-8(%ebp), %eax
	jne	.L5648
.L5644:
	.loc 1 12892 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L5637
.L5648:
	.loc 1 12898 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L5649
	movl	12(%ebp), %edx
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	can_convert_arg@PLT
	testl	%eax, %eax
	jne	.L5651
.L5649:
	.loc 1 12901 0
	cmpl	$0, 8(%ebp)
	je	.L5652
	.loc 1 12902 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC396@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5654
.L5652:
	.loc 1 12905 0
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC397@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5654:
	.loc 1 12908 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L5637
.L5651:
	.loc 1 12918 0
	movl	$0, 8(%esp)
	leal	local_variable_p_walkfn@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	leal	12(%ebp), %eax
	movl	%eax, (%esp)
	call	walk_tree_without_duplicates@PLT
	movl	%eax, -12(%ebp)
	.loc 1 12920 0
	cmpl	$0, -12(%ebp)
	je	.L5655
	.loc 1 12922 0
	movl	12(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC398@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12924 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L5637
.L5655:
	.loc 1 12928 0
	movl	12(%ebp), %eax
	movl	%eax, -24(%ebp)
.L5637:
	movl	-24(%ebp), %eax
	.loc 1 12929 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE226:
	.size	check_default_argument, .-check_default_argument
	.section	.rodata
	.type	__FUNCTION__.31862, @object
	.size	__FUNCTION__.31862, 10
__FUNCTION__.31862:
	.string	"grokparms"
.LC399:
	.string	"invalid string constant `%E'"
	.align 4
.LC400:
	.string	"invalid integer constant in parameter list, did you forget to give parameter name?"
	.align 4
.LC401:
	.string	"parameter `%D' invalidly declared method type"
	.align 4
.LC402:
	.string	"parameter `%D' invalidly declared offset type"
.LC403:
	.string	"pointer"
.LC404:
	.string	"reference"
	.align 4
.LC405:
	.string	"parameter `%D' includes %s to array of unknown bound `%T'"
	.text
	.type	grokparms, @function
grokparms:
.LFB227:
	.loc 1 12944 0
	pushl	%ebp
.LCFI817:
	movl	%esp, %ebp
.LCFI818:
	pushl	%esi
.LCFI819:
	pushl	%ebx
.LCFI820:
	subl	$112, %esp
.LCFI821:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 12945 0
	movl	$0, -48(%ebp)
	.loc 1 12946 0
	movl	$0, -44(%ebp)
	.loc 1 12947 0
	cmpl	$0, 8(%ebp)
	je	.L5659
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L5661
.L5659:
	movl	$1, -88(%ebp)
	jmp	.L5662
.L5661:
	movl	$0, -88(%ebp)
.L5662:
	movl	-88(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 1 12949 0
	movl	$0, -28(%ebp)
	.loc 1 12951 0
	cmpl	$0, 8(%ebp)
	je	.L5663
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L5665
.L5663:
	movl	$1, -84(%ebp)
	jmp	.L5666
.L5665:
	movl	$0, -84(%ebp)
.L5666:
	cmpl	$0, -84(%ebp)
	jne	.L5667
	leal	__FUNCTION__.31862@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$12951, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5667:
	.loc 1 12953 0
	movl	8(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L5669
.L5670:
.LBB135:
	.loc 1 12955 0
	movl	$0, -24(%ebp)
	.loc 1 12956 0
	movl	-36(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -52(%ebp)
	.loc 1 12957 0
	movl	-36(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 12960 0
	movl	-36(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 12962 0
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	je	.L5671
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$3, %al
	je	.L5671
	.loc 1 12966 0
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$30, %al
	jne	.L5674
	.loc 1 12967 0
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC399@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L5678
.L5674:
	.loc 1 12968 0
	movl	-52(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$26, %al
	jne	.L5678
	.loc 1 12969 0
	leal	.LC400@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 12970 0
	jmp	.L5678
.L5671:
	.loc 1 12973 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-36(%ebp), %eax
	je	.L5679
	.loc 1 12976 0
	movl	-52(%ebp), %eax
	movl	16(%eax), %edx
	leal	-60(%ebp), %eax
	movl	%eax, 8(%esp)
	leal	-56(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	split_specs_attrs@PLT
	.loc 1 12977 0
	cmpl	$0, -20(%ebp)
	setne	%al
	movzbl	%al, %edx
	movl	-56(%ebp), %ecx
	movl	-52(%ebp), %eax
	movl	20(%eax), %esi
	leal	-60(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	%edx, 12(%esp)
	movl	$2, 8(%esp)
	movl	%ecx, 4(%esp)
	movl	%esi, (%esp)
	call	grokdeclarator@PLT
	movl	%eax, -52(%ebp)
	.loc 1 12979 0
	movl	-52(%ebp), %eax
	testl	%eax, %eax
	je	.L5678
	movl	-52(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L5678
	.loc 1 12982 0
	movl	-60(%ebp), %eax
	testl	%eax, %eax
	je	.L5683
	.loc 1 12983 0
	movl	-60(%ebp), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-52(%ebp), %eax
	movl	%eax, (%esp)
	call	cplus_decl_attributes@PLT
.L5683:
	.loc 1 12985 0
	movl	-52(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 12986 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L5685
	.loc 1 12988 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	je	.L5687
	movl	-52(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	jne	.L5687
	cmpl	$0, -48(%ebp)
	jne	.L5687
	cmpl	$0, -32(%ebp)
	jne	.L5687
	cmpl	$0, -40(%ebp)
	je	.L5679
.L5687:
	.loc 1 12992 0
	movl	-52(%ebp), %edx
	movl	$0, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	cxx_incomplete_type_diagnostic@PLT
	.loc 1 12996 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 12997 0
	movl	-52(%ebp), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%edx)
.L5685:
	.loc 1 13000 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-24(%ebp), %eax
	je	.L5692
	.loc 1 13004 0
	movl	-24(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 13005 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5694
	.loc 1 13007 0
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC401@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13008 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -24(%ebp)
	.loc 1 13009 0
	movl	-52(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 4(%edx)
	jmp	.L5696
.L5694:
	.loc 1 13011 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$15, %al
	jne	.L5697
	.loc 1 13013 0
	movl	-52(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC402@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13014 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	build_pointer_type@PLT
	movl	%eax, -24(%ebp)
	.loc 1 13015 0
	movl	-52(%ebp), %edx
	movl	-24(%ebp), %eax
	movl	%eax, 4(%edx)
	jmp	.L5696
.L5697:
	.loc 1 13017 0
	movl	-52(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	abstract_virtuals_error@PLT
	testl	%eax, %eax
	je	.L5699
	.loc 1 13018 0
	movl	$1, -28(%ebp)
	jmp	.L5696
.L5699:
	.loc 1 13019 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$14, %al
	je	.L5701
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L5696
.L5701:
.LBB136:
	.loc 1 13023 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 13024 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$14, %al
	jne	.L5703
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$15, %al
	je	.L5703
	movl	$1, -80(%ebp)
	jmp	.L5706
.L5703:
	movl	$0, -80(%ebp)
.L5706:
	movl	-80(%ebp), %edx
	movl	%edx, -12(%ebp)
.L5707:
	.loc 1 13028 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$14, %al
	jne	.L5708
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$15, %al
	je	.L5708
	.loc 1 13029 0
	movl	$1, -12(%ebp)
	.loc 1 13028 0
	jmp	.L5711
.L5708:
	.loc 1 13030 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L5712
	.loc 1 13032 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L5712
.L5711:
	.loc 1 13034 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 13035 0
	jmp	.L5707
.L5712:
	.loc 1 13036 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L5696
	.loc 1 13037 0
	cmpl	$0, -12(%ebp)
	je	.L5715
	leal	.LC403@GOTOFF(%ebx), %eax
	movl	%eax, -76(%ebp)
	jmp	.L5717
.L5715:
	leal	.LC404@GOTOFF(%ebx), %edx
	movl	%edx, -76(%ebp)
.L5717:
	movl	-52(%ebp), %eax
	movl	-16(%ebp), %edx
	movl	%edx, 12(%esp)
	movl	-76(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	.LC405@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L5696:
.LBE136:
	.loc 1 13041 0
	cmpl	$0, -28(%ebp)
	jne	.L5718
	cmpl	$0, -20(%ebp)
	je	.L5718
	.loc 1 13042 0
	movl	-52(%ebp), %eax
	movl	-20(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	check_default_argument@PLT
	movl	%eax, -20(%ebp)
	.loc 1 13041 0
	jmp	.L5692
.L5718:
	.loc 1 13044 0
	movl	$0, -20(%ebp)
.L5692:
	.loc 1 13047 0
	movl	-52(%ebp), %edx
	movl	-44(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 13048 0
	movl	-52(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 13049 0
	movl	-48(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, -48(%ebp)
.L5678:
.LBE135:
	.loc 1 12953 0
	movl	-32(%ebp), %eax
	movl	%eax, -36(%ebp)
.L5669:
	cmpl	$0, -36(%ebp)
	jne	.L5670
.L5679:
	.loc 1 13051 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	nreverse@PLT
	movl	%eax, -44(%ebp)
	.loc 1 13052 0
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	nreverse@PLT
	movl	%eax, -48(%ebp)
	.loc 1 13053 0
	cmpl	$0, -40(%ebp)
	jne	.L5721
	.loc 1 13054 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-48(%ebp), %eax
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	%eax, -48(%ebp)
.L5721:
	.loc 1 13055 0
	movl	last_function_parms@GOT(%ebx), %edx
	movl	-44(%ebp), %eax
	movl	%eax, (%edx)
	.loc 1 13057 0
	movl	-48(%ebp), %eax
	.loc 1 13058 0
	addl	$112, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE227:
	.size	grokparms, .-grokparms
	.section	.rodata
	.type	__FUNCTION__.32028, @object
	.size	__FUNCTION__.32028, 10
__FUNCTION__.32028:
	.string	"copy_fn_p"
	.text
.globl copy_fn_p
	.type	copy_fn_p, @function
copy_fn_p:
.LFB228:
	.loc 1 13082 0
	pushl	%ebp
.LCFI822:
	movl	%esp, %ebp
.LCFI823:
	pushl	%ebx
.LCFI824:
	subl	$36, %esp
.LCFI825:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13085 0
	movl	$1, -8(%ebp)
	.loc 1 13087 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	je	.L5725
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L5727
.L5725:
	movl	$1, -28(%ebp)
	jmp	.L5728
.L5727:
	movl	$0, -28(%ebp)
.L5728:
	cmpl	$0, -28(%ebp)
	jne	.L5729
	leal	__FUNCTION__.32028@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$13087, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5729:
	.loc 1 13089 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L5731
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	is_member_template@PLT
	testl	%eax, %eax
	je	.L5731
	.loc 1 13094 0
	movl	$0, -24(%ebp)
	jmp	.L5734
.L5731:
	.loc 1 13096 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	skip_artificial_parms_for@PLT
	movl	%eax, -16(%ebp)
	.loc 1 13097 0
	cmpl	$0, -16(%ebp)
	jne	.L5735
	.loc 1 13098 0
	movl	$0, -24(%ebp)
	jmp	.L5734
.L5735:
	.loc 1 13100 0
	movl	-16(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 13102 0
	movl	-12(%ebp), %eax
	movl	72(%eax), %edx
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	cmpl	%eax, %edx
	jne	.L5737
	.loc 1 13105 0
	movl	$-1, -8(%ebp)
	jmp	.L5739
.L5737:
	.loc 1 13107 0
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L5740
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	72(%eax), %edx
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	cmpl	%eax, %edx
	jne	.L5740
	.loc 1 13110 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	andl	$1, %eax
	testb	%al, %al
	je	.L5739
	.loc 1 13111 0
	movl	$2, -8(%ebp)
	.loc 1 13107 0
	jmp	.L5739
.L5740:
	.loc 1 13114 0
	movl	$0, -24(%ebp)
	jmp	.L5734
.L5739:
	.loc 1 13116 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 13118 0
	cmpl	$0, -16(%ebp)
	je	.L5745
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-16(%ebp), %eax
	je	.L5745
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L5745
	.loc 1 13120 0
	movl	$0, -24(%ebp)
	jmp	.L5734
.L5745:
	.loc 1 13122 0
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
.L5734:
	movl	-24(%ebp), %eax
	.loc 1 13123 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE228:
	.size	copy_fn_p, .-copy_fn_p
.globl grok_special_member_properties
	.type	grok_special_member_properties, @function
grok_special_member_properties:
.LFB229:
	.loc 1 13129 0
	pushl	%ebp
.LCFI826:
	movl	%esp, %ebp
.LCFI827:
	pushl	%ebx
.LCFI828:
	subl	$36, %esp
.LCFI829:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13130 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L5767
	.loc 1 13132 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L5753
.LBB137:
	.loc 1 13134 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_fn_p@PLT
	movl	%eax, -12(%ebp)
	.loc 1 13136 0
	cmpl	$0, -12(%ebp)
	jle	.L5755
	.loc 1 13145 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	orl	$4, %eax
	movb	%al, (%edx)
	.loc 1 13146 0
	cmpl	$1, -12(%ebp)
	jle	.L5767
	.loc 1 13147 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	92(%eax), %edx
	movzbl	9(%edx), %eax
	orl	$1, %eax
	movb	%al, 9(%edx)
	jmp	.L5767
.L5755:
	.loc 1 13149 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	skip_artificial_parms_for@PLT
	movl	%eax, (%esp)
	call	sufficient_parms_p@PLT
	testl	%eax, %eax
	je	.L5767
	.loc 1 13150 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	orl	$8, %eax
	movb	%al, (%edx)
	jmp	.L5767
.L5753:
.LBE137:
	.loc 1 13152 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L5767
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	40(%eax), %eax
	cmpl	$117, %eax
	jne	.L5767
.LBB138:
	.loc 1 13160 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_fn_p@PLT
	movl	%eax, -8(%ebp)
	.loc 1 13162 0
	cmpl	$0, -8(%ebp)
	je	.L5767
	.loc 1 13164 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	92(%eax), %edx
	movzbl	5(%edx), %eax
	orl	$32, %eax
	movb	%al, 5(%edx)
	.loc 1 13165 0
	cmpl	$1, -8(%ebp)
	je	.L5764
	.loc 1 13166 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	orl	$-128, %eax
	movb	%al, (%edx)
.L5764:
	.loc 1 13167 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L5767
	.loc 1 13168 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	92(%eax), %edx
	movzbl	9(%edx), %eax
	orl	$8, %eax
	movb	%al, 9(%edx)
.L5767:
.LBE138:
	.loc 1 13171 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE229:
	.size	grok_special_member_properties, .-grok_special_member_properties
	.section	.rodata
	.align 4
.LC406:
	.string	"invalid constructor; you probably meant `%T (const %T&)'"
	.text
.globl grok_ctor_properties
	.type	grok_ctor_properties, @function
grok_ctor_properties:
.LFB230:
	.loc 1 13179 0
	pushl	%ebp
.LCFI830:
	movl	%esp, %ebp
.LCFI831:
	pushl	%esi
.LCFI832:
	pushl	%ebx
.LCFI833:
	subl	$32, %esp
.LCFI834:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13180 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_fn_p@PLT
	movl	%eax, -12(%ebp)
	.loc 1 13182 0
	cmpl	$0, -12(%ebp)
	jns	.L5769
	.loc 1 13199 0
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC406@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13201 0
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L5773
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, %esi
	movl	$12, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, 56(%esi)
.L5773:
	movl	12(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%edx)
	.loc 1 13202 0
	movl	$0, -28(%ebp)
	jmp	.L5774
.L5769:
	.loc 1 13205 0
	movl	$1, -28(%ebp)
.L5774:
	movl	-28(%ebp), %eax
	.loc 1 13206 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE230:
	.size	grok_ctor_properties, .-grok_ctor_properties
	.type	ambi_op_p, @function
ambi_op_p:
.LFB231:
	.loc 1 13213 0
	pushl	%ebp
.LCFI835:
	movl	%esp, %ebp
.LCFI836:
	subl	$4, %esp
.LCFI837:
	.loc 1 13214 0
	cmpl	$42, 8(%ebp)
	je	.L5777
	cmpl	$123, 8(%ebp)
	je	.L5777
	cmpl	$116, 8(%ebp)
	je	.L5777
	cmpl	$79, 8(%ebp)
	je	.L5777
	cmpl	$132, 8(%ebp)
	je	.L5777
	cmpl	$131, 8(%ebp)
	jne	.L5783
.L5777:
	movl	$1, -4(%ebp)
	jmp	.L5784
.L5783:
	movl	$0, -4(%ebp)
.L5784:
	movl	-4(%ebp), %eax
	.loc 1 13220 0
	leave
	ret
.LFE231:
	.size	ambi_op_p, .-ambi_op_p
	.type	unary_op_p, @function
unary_op_p:
.LFB232:
	.loc 1 13227 0
	pushl	%ebp
.LCFI838:
	movl	%esp, %ebp
.LCFI839:
	subl	$4, %esp
.LCFI840:
	.loc 1 13228 0
	cmpl	$98, 8(%ebp)
	je	.L5787
	cmpl	$92, 8(%ebp)
	je	.L5787
	cmpl	$40, 8(%ebp)
	je	.L5787
	cmpl	$187, 8(%ebp)
	jne	.L5791
.L5787:
	movl	$1, -4(%ebp)
	jmp	.L5792
.L5791:
	movl	$0, -4(%ebp)
.L5792:
	movl	-4(%ebp), %eax
	.loc 1 13232 0
	leave
	ret
.LFE232:
	.size	unary_op_p, .-unary_op_p
	.section	.rodata
	.type	__FUNCTION__.32209, @object
	.size	__FUNCTION__.32209, 19
__FUNCTION__.32209:
	.string	"grok_op_properties"
	.align 4
.LC407:
	.string	"`%D' must be a nonstatic member function"
	.align 4
.LC408:
	.string	"`%D' must be either a non-static member function or a non-member function"
	.align 4
.LC409:
	.string	"`%D' must have an argument of class or enumerated type"
.LC410:
	.string	"void"
.LC411:
	.string	"the same type"
.LC412:
	.string	"a base class"
.LC413:
	.string	"a reference to "
	.align 4
.LC414:
	.string	"conversion to %s%s will never use a type conversion operator"
	.align 4
.LC415:
	.string	"ISO C++ prohibits overloading operator ?:"
	.align 4
.LC416:
	.string	"postfix `%D' must take `int' as its argument"
	.align 4
.LC417:
	.string	"postfix `%D' must take `int' as its second argument"
	.align 4
.LC418:
	.string	"`%D' must take either zero or one argument"
	.align 4
.LC419:
	.string	"`%D' must take either one or two arguments"
	.align 4
.LC420:
	.string	"prefix `%D' should return `%T'"
	.align 4
.LC421:
	.string	"postfix `%D' should return `%T'"
.LC422:
	.string	"`%D' must take `void'"
	.align 4
.LC423:
	.string	"`%D' must take exactly one argument"
	.align 4
.LC424:
	.string	"`%D' must take exactly two arguments"
	.align 4
.LC425:
	.string	"user-defined `%D' always evaluates both arguments"
.LC426:
	.string	"`%D' should return by value"
	.align 4
.LC427:
	.string	"`%D' cannot have default arguments"
	.text
.globl grok_op_properties
	.type	grok_op_properties, @function
grok_op_properties:
.LFB233:
	.loc 1 13240 0
	pushl	%ebp
.LCFI841:
	movl	%esp, %ebp
.LCFI842:
	pushl	%ebx
.LCFI843:
	subl	$100, %esp
.LCFI844:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13241 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -56(%ebp)
	.loc 1 13243 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -48(%ebp)
	.loc 1 13244 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, -44(%ebp)
	.loc 1 13249 0
	movl	-56(%ebp), %eax
	movl	%eax, -52(%ebp)
	movl	$0, -36(%ebp)
	.loc 1 13250 0
	jmp	.L5795
.L5796:
	.loc 1 13252 0
	addl	$1, -36(%ebp)
	.loc 1 13251 0
	movl	-52(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -52(%ebp)
.L5795:
	.loc 1 13250 0
	cmpl	$0, -52(%ebp)
	je	.L5797
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-52(%ebp), %eax
	jne	.L5796
.L5797:
	.loc 1 13254 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	jne	.L5799
	.loc 1 13255 0
	movl	$1, 12(%ebp)
.L5799:
	.loc 1 13257 0
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L5801
	.loc 1 13258 0
	movl	$187, -40(%ebp)
	jmp	.L5803
.L5801:
	.file 2 "../../../kg++fe/gnu/cp/operators.def"
	.loc 2 81 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2896(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5804
	movl	$181, -40(%ebp)
	jmp	.L5803
.L5804:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2896(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5806
	movl	$181, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5806:
	.loc 2 82 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2912(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5808
	movl	$182, -40(%ebp)
	jmp	.L5803
.L5808:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2912(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5810
	movl	$182, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5810:
	.loc 2 83 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2928(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5812
	movl	$183, -40(%ebp)
	jmp	.L5803
.L5812:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2928(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5814
	movl	$183, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5814:
	.loc 2 84 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2944(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5816
	movl	$184, -40(%ebp)
	jmp	.L5803
.L5816:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2944(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5818
	movl	$184, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5818:
	.loc 2 87 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1856(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5820
	movl	$116, -40(%ebp)
	jmp	.L5803
.L5820:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1856(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5822
	movl	$116, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5822:
	.loc 2 88 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1264(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5824
	movl	$79, -40(%ebp)
	jmp	.L5803
.L5824:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1264(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5826
	movl	$79, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5826:
	.loc 2 89 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1968(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5828
	movl	$123, -40(%ebp)
	jmp	.L5803
.L5828:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1968(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5830
	movl	$123, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5830:
	.loc 2 90 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	672(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5832
	movl	$42, -40(%ebp)
	jmp	.L5803
.L5832:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	672(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5834
	movl	$42, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5834:
	.loc 2 91 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1472(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5836
	movl	$92, -40(%ebp)
	jmp	.L5803
.L5836:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1472(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5838
	movl	$92, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5838:
	.loc 2 92 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1568(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5840
	movl	$98, -40(%ebp)
	jmp	.L5803
.L5840:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1568(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5842
	movl	$98, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5842:
	.loc 2 93 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2112(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5844
	movl	$132, -40(%ebp)
	jmp	.L5803
.L5844:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2112(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5846
	movl	$132, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5846:
	.loc 2 94 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2096(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5848
	movl	$131, -40(%ebp)
	jmp	.L5803
.L5848:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2096(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5850
	movl	$131, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5850:
	.loc 2 95 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2448(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5852
	movl	$153, -40(%ebp)
	jmp	.L5803
.L5852:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2448(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5854
	movl	$153, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5854:
	.loc 2 97 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2480(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5856
	movl	$155, -40(%ebp)
	jmp	.L5803
.L5856:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2480(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5858
	movl	$155, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5858:
	.loc 2 100 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2992(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5860
	movl	$187, -40(%ebp)
	jmp	.L5803
.L5860:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2992(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5862
	movl	$187, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5862:
	.loc 2 101 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	3328(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5864
	movl	$208, -40(%ebp)
	jmp	.L5803
.L5864:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	3328(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5866
	movl	$208, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5866:
	.loc 2 102 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	3360(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5868
	movl	$210, -40(%ebp)
	jmp	.L5803
.L5868:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	3360(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5870
	movl	$210, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5870:
	.loc 2 103 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	3376(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5872
	movl	$211, -40(%ebp)
	jmp	.L5803
.L5872:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	3376(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5874
	movl	$211, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5874:
	.loc 2 106 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	960(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5876
	movl	$60, -40(%ebp)
	jmp	.L5803
.L5876:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	960(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5878
	movl	$60, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5878:
	.loc 2 107 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	976(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5880
	movl	$61, -40(%ebp)
	jmp	.L5803
.L5880:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	976(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5882
	movl	$61, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5882:
	.loc 2 108 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	992(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5884
	movl	$62, -40(%ebp)
	jmp	.L5803
.L5884:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	992(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5886
	movl	$62, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5886:
	.loc 2 109 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1008(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5888
	movl	$63, -40(%ebp)
	jmp	.L5803
.L5888:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1008(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5890
	movl	$63, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5890:
	.loc 2 110 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1072(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5892
	movl	$67, -40(%ebp)
	jmp	.L5803
.L5892:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1072(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5894
	movl	$67, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5894:
	.loc 2 111 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1440(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5896
	movl	$90, -40(%ebp)
	jmp	.L5803
.L5896:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1440(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5898
	movl	$90, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5898:
	.loc 2 112 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1408(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5900
	movl	$88, -40(%ebp)
	jmp	.L5803
.L5900:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1408(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5902
	movl	$88, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5902:
	.loc 2 113 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1424(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5904
	movl	$89, -40(%ebp)
	jmp	.L5803
.L5904:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1424(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5906
	movl	$89, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5906:
	.loc 2 114 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1344(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5908
	movl	$84, -40(%ebp)
	jmp	.L5803
.L5908:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1344(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5910
	movl	$84, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5910:
	.loc 2 115 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1360(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5912
	movl	$85, -40(%ebp)
	jmp	.L5803
.L5912:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1360(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5914
	movl	$85, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5914:
	.loc 2 116 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1648(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5916
	movl	$103, -40(%ebp)
	jmp	.L5803
.L5916:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1648(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5918
	movl	$103, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5918:
	.loc 2 117 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1664(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5920
	movl	$104, -40(%ebp)
	jmp	.L5803
.L5920:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1664(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5922
	movl	$104, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5922:
	.loc 2 118 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1584(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5924
	movl	$99, -40(%ebp)
	jmp	.L5803
.L5924:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1584(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5926
	movl	$99, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5926:
	.loc 2 119 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1616(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5928
	movl	$101, -40(%ebp)
	jmp	.L5803
.L5928:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1616(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5930
	movl	$101, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5930:
	.loc 2 120 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1600(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5932
	movl	$100, -40(%ebp)
	jmp	.L5803
.L5932:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1600(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5934
	movl	$100, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5934:
	.loc 2 121 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1632(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5936
	movl	$102, -40(%ebp)
	jmp	.L5803
.L5936:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1632(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5938
	movl	$102, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5938:
	.loc 2 122 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1488(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5940
	movl	$93, -40(%ebp)
	jmp	.L5803
.L5940:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1488(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5942
	movl	$93, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5942:
	.loc 2 123 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1504(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5944
	movl	$94, -40(%ebp)
	jmp	.L5803
.L5944:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1504(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5946
	movl	$94, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5946:
	.loc 2 124 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	768(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5948
	movl	$48, -40(%ebp)
	jmp	.L5803
.L5948:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	768(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5950
	movl	$48, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5950:
	.loc 2 125 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2976(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5952
	movl	$186, -40(%ebp)
	jmp	.L5803
.L5952:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2976(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5954
	movl	$186, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5954:
	.loc 2 126 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	640(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5956
	movl	$40, -40(%ebp)
	jmp	.L5803
.L5956:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	640(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5958
	movl	$40, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5958:
	.loc 2 127 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	704(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5960
	movl	$44, -40(%ebp)
	jmp	.L5803
.L5960:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	704(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5962
	movl	$44, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5962:
	.loc 2 128 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2144(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5964
	movl	$134, -40(%ebp)
	jmp	.L5803
.L5964:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2144(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5966
	movl	$134, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5966:
	.loc 2 129 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2128(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5968
	movl	$133, -40(%ebp)
	jmp	.L5803
.L5968:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2128(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5970
	movl	$133, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5970:
	.loc 2 131 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1280(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5972
	movl	$80, -40(%ebp)
	jmp	.L5803
.L5972:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1280(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5974
	movl	$80, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5974:
	.loc 2 132 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1296(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5976
	movl	$81, -40(%ebp)
	jmp	.L5803
.L5976:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1296(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5978
	movl	$81, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5978:
	.loc 2 134 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	2960(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5980
	movl	$185, -40(%ebp)
	jmp	.L5803
.L5980:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	2960(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5982
	movl	$185, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5982:
	.loc 2 137 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1872(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5984
	movl	$117, -40(%ebp)
	jmp	.L5803
.L5984:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1872(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5986
	movl	$117, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5986:
	.loc 2 138 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	960(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5988
	movl	$60, -40(%ebp)
	jmp	.L5803
.L5988:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	960(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5990
	movl	$60, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5990:
	.loc 2 139 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	976(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5992
	movl	$61, -40(%ebp)
	jmp	.L5803
.L5992:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	976(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5994
	movl	$61, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5994:
	.loc 2 140 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	992(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5996
	movl	$62, -40(%ebp)
	jmp	.L5803
.L5996:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	992(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L5998
	movl	$62, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L5998:
	.loc 2 141 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1008(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6000
	movl	$63, -40(%ebp)
	jmp	.L5803
.L6000:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1008(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6002
	movl	$63, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6002:
	.loc 2 142 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1072(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6004
	movl	$67, -40(%ebp)
	jmp	.L5803
.L6004:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1072(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6006
	movl	$67, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6006:
	.loc 2 143 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1440(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6008
	movl	$90, -40(%ebp)
	jmp	.L5803
.L6008:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1440(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6010
	movl	$90, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6010:
	.loc 2 144 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1408(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6012
	movl	$88, -40(%ebp)
	jmp	.L5803
.L6012:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1408(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6014
	movl	$88, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6014:
	.loc 2 145 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1424(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6016
	movl	$89, -40(%ebp)
	jmp	.L5803
.L6016:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1424(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6018
	movl	$89, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6018:
	.loc 2 146 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1344(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6020
	movl	$84, -40(%ebp)
	jmp	.L5803
.L6020:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1344(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6022
	movl	$84, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6022:
	.loc 2 147 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1360(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6024
	movl	$85, -40(%ebp)
	jmp	.L5803
.L6024:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1360(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6026
	movl	$85, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6026:
	.loc 2 149 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1280(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6028
	movl	$80, -40(%ebp)
	jmp	.L5803
.L6028:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1280(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6030
	movl	$80, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6030:
	.loc 2 150 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	1296(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6032
	movl	$81, -40(%ebp)
	jmp	.L5803
.L6032:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	1296(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6034
	movl	$81, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6034:
	.loc 2 153 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	832(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6036
	movl	$52, -40(%ebp)
	jmp	.L5803
.L6036:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	832(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6038
	movl	$52, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6038:
	.loc 2 156 0
	movl	operator_name_info@GOT(%ebx), %eax
	movl	864(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6040
	movl	$54, -40(%ebp)
	jmp	.L5803
.L6040:
	movl	assignment_operator_name_info@GOT(%ebx), %eax
	movl	864(%eax), %eax
	cmpl	-44(%ebp), %eax
	jne	.L6042
	movl	$54, -40(%ebp)
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$-128, %eax
	movb	%al, 6(%edx)
	jmp	.L5803
.L6042:
	.loc 1 13278 0
	leal	__FUNCTION__.32209@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$13278, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L5803:
	.loc 1 13281 0
	cmpl	$234, -40(%ebp)
	jne	.L6044
	leal	__FUNCTION__.32209@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$13281, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6044:
	.loc 1 13282 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 40(%edx)
	.loc 1 13284 0
	cmpl	$0, 12(%ebp)
	jne	.L6046
	.loc 1 13286 0
	movl	-40(%ebp), %eax
	movl	%eax, -76(%ebp)
	cmpl	$181, -76(%ebp)
	je	.L6051
	cmpl	$181, -76(%ebp)
	ja	.L6055
	cmpl	$44, -76(%ebp)
	je	.L6049
	cmpl	$54, -76(%ebp)
	je	.L6050
	cmpl	$40, -76(%ebp)
	je	.L6048
	jmp	.L6046
.L6055:
	cmpl	$183, -76(%ebp)
	je	.L6053
	cmpl	$183, -76(%ebp)
	jb	.L6052
	cmpl	$184, -76(%ebp)
	je	.L6054
	cmpl	$186, -76(%ebp)
	je	.L6048
	jmp	.L6046
.L6050:
	.loc 1 13289 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$4, %eax
	movb	%al, 6(%edx)
	.loc 1 13290 0
	jmp	.L6046
.L6049:
	.loc 1 13293 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$8, %eax
	movb	%al, 6(%edx)
	.loc 1 13294 0
	jmp	.L6046
.L6048:
	.loc 1 13298 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %edx
	movzbl	6(%edx), %eax
	orl	$16, %eax
	movb	%al, 6(%edx)
	.loc 1 13299 0
	jmp	.L6046
.L6051:
	.loc 1 13302 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %edx
	movzbl	5(%edx), %eax
	orl	$64, %eax
	movb	%al, 5(%edx)
	.loc 1 13303 0
	jmp	.L6046
.L6053:
	.loc 1 13306 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %ecx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$3, %eax
	orl	$1, %eax
	andl	$3, %eax
	movl	%eax, %edx
	andl	$3, %edx
	movzbl	6(%ecx), %eax
	andl	$-4, %eax
	orl	%edx, %eax
	movb	%al, 6(%ecx)
	.loc 1 13307 0
	jmp	.L6046
.L6052:
	.loc 1 13310 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %edx
	movzbl	5(%edx), %eax
	orl	$-128, %eax
	movb	%al, 5(%edx)
	.loc 1 13311 0
	jmp	.L6046
.L6054:
	.loc 1 13314 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %ecx
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$3, %eax
	orl	$2, %eax
	andl	$3, %eax
	movl	%eax, %edx
	andl	$3, %edx
	movzbl	6(%ecx), %eax
	andl	$-4, %eax
	orl	%edx, %eax
	movb	%al, 6(%ecx)
.L6046:
	.loc 1 13322 0
	cmpl	$181, -40(%ebp)
	je	.L6056
	cmpl	$182, -40(%ebp)
	jne	.L6058
.L6056:
	.loc 1 13326 0
	cmpl	$0, -48(%ebp)
	je	.L6059
	.loc 1 13327 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	revert_static_member_fn@PLT
.L6059:
	.loc 1 13329 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	coerce_new_type@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 13322 0
	jmp	.L6193
.L6058:
	.loc 1 13331 0
	cmpl	$183, -40(%ebp)
	je	.L6062
	cmpl	$184, -40(%ebp)
	jne	.L6064
.L6062:
	.loc 1 13333 0
	cmpl	$0, -48(%ebp)
	je	.L6065
	.loc 1 13334 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	revert_static_member_fn@PLT
.L6065:
	.loc 1 13336 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	coerce_delete_type@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 13331 0
	jmp	.L6193
.L6064:
	.loc 1 13343 0
	cmpl	$0, -48(%ebp)
	je	.L6067
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L6069
.L6067:
	.loc 1 13345 0
	cmpl	$187, -40(%ebp)
	je	.L6070
	cmpl	$54, -40(%ebp)
	je	.L6070
	cmpl	$40, -40(%ebp)
	je	.L6070
	cmpl	$44, -40(%ebp)
	je	.L6070
	cmpl	$117, -40(%ebp)
	jne	.L6075
.L6070:
	.loc 1 13350 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC407@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13345 0
	jmp	.L6069
.L6075:
.LBB139:
	.loc 1 13353 0
	movl	-56(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 13355 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L6076
	.loc 1 13356 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC408@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L6076:
	.loc 1 13358 0
	cmpl	$0, -32(%ebp)
	je	.L6078
	.loc 1 13359 0
	jmp	.L6080
.L6081:
.LBB140:
	.loc 1 13361 0
	movl	-32(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -28(%ebp)
	.loc 1 13362 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L6082
	.loc 1 13363 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
.L6082:
	.loc 1 13366 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6069
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6069
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6069
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6069
	movl	-28(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L6069
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$11, %al
	je	.L6069
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6069
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6069
.LBE140:
	.loc 1 13359 0
	movl	-32(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
.L6080:
	movl	-32(%ebp), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L6081
.L6078:
	.loc 1 13372 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC409@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L6069:
.LBE139:
	.loc 1 13380 0
	cmpl	$54, -40(%ebp)
	je	.L6193
	.loc 1 13383 0
	movl	-44(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L6093
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	jne	.L6093
.LBB141:
	.loc 1 13385 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 13386 0
	cmpl	$0, 12(%ebp)
	jne	.L6093
.LBB142:
	.loc 1 13388 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	sete	%al
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 1 13389 0
	movl	$0, -16(%ebp)
	.loc 1 13391 0
	cmpl	$0, -20(%ebp)
	je	.L6097
	.loc 1 13392 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %eax
	movl	72(%eax), %eax
	movl	%eax, -24(%ebp)
.L6097:
	.loc 1 13394 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L6099
	.loc 1 13395 0
	leal	.LC410@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
	jmp	.L6101
.L6099:
	.loc 1 13396 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	-24(%ebp), %eax
	jne	.L6102
	.loc 1 13397 0
	leal	.LC411@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
	jmp	.L6101
.L6102:
	.loc 1 13399 0
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6104
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6104
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6104
	movl	-24(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6104
	movl	-24(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6101
.L6104:
	movl	-24(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L6101
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %edx
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	lookup_base@PLT
	testl	%eax, %eax
	je	.L6101
	.loc 1 13402 0
	leal	.LC412@GOTOFF(%ebx), %eax
	movl	%eax, -16(%ebp)
.L6101:
	.loc 1 13404 0
	cmpl	$0, -16(%ebp)
	je	.L6093
	movl	warn_conversion@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6093
	.loc 1 13405 0
	cmpl	$0, -20(%ebp)
	je	.L6113
	leal	.LC413@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
	jmp	.L6115
.L6113:
	leal	.LC7@GOTOFF(%ebx), %eax
	movl	%eax, -72(%ebp)
.L6115:
	movl	-16(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-72(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC414@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L6093:
.LBE142:
.LBE141:
	.loc 1 13409 0
	cmpl	$52, -40(%ebp)
	jne	.L6116
	.loc 1 13412 0
	leal	.LC415@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6118
.L6116:
	.loc 1 13414 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	ambi_op_p
	testl	%eax, %eax
	je	.L6119
	.loc 1 13416 0
	cmpl	$1, -36(%ebp)
	je	.L6121
	.loc 1 13420 0
	cmpl	$2, -36(%ebp)
	jne	.L6123
	.loc 1 13424 0
	movl	-40(%ebp), %eax
	movl	%eax, -80(%ebp)
	cmpl	$116, -80(%ebp)
	je	.L6128
	cmpl	$116, -80(%ebp)
	ja	.L6132
	cmpl	$42, -80(%ebp)
	je	.L6126
	cmpl	$79, -80(%ebp)
	je	.L6127
	jmp	.L6125
.L6132:
	cmpl	$131, -80(%ebp)
	je	.L6130
	cmpl	$132, -80(%ebp)
	je	.L6131
	cmpl	$123, -80(%ebp)
	je	.L6129
	jmp	.L6125
.L6126:
	.loc 1 13427 0
	movl	$62, -40(%ebp)
	.loc 1 13428 0
	jmp	.L6133
.L6129:
	.loc 1 13431 0
	movl	$90, -40(%ebp)
	.loc 1 13432 0
	jmp	.L6133
.L6128:
	.loc 1 13435 0
	movl	$60, -40(%ebp)
	.loc 1 13436 0
	jmp	.L6133
.L6127:
	.loc 1 13439 0
	movl	$61, -40(%ebp)
	.loc 1 13440 0
	jmp	.L6133
.L6131:
	.loc 1 13443 0
	movl	$134, -40(%ebp)
	.loc 1 13444 0
	jmp	.L6133
.L6130:
	.loc 1 13447 0
	movl	$133, -40(%ebp)
	.loc 1 13448 0
	jmp	.L6133
.L6125:
	.loc 1 13451 0
	leal	__FUNCTION__.32209@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$13451, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6133:
	.loc 1 13454 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	-40(%ebp), %eax
	movl	%eax, 40(%edx)
	.loc 1 13456 0
	cmpl	$134, -40(%ebp)
	je	.L6134
	cmpl	$133, -40(%ebp)
	jne	.L6121
.L6134:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6121
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %edx
	movl	-56(%ebp), %eax
	movl	(%eax), %eax
	movl	20(%eax), %eax
	movl	$0, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L6121
	.loc 1 13461 0
	cmpl	$0, -48(%ebp)
	je	.L6139
	.loc 1 13462 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC416@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6121
.L6139:
	.loc 1 13465 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC417@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6121
.L6123:
	.loc 1 13472 0
	cmpl	$0, -48(%ebp)
	je	.L6141
	.loc 1 13473 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC418@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6121
.L6141:
	.loc 1 13475 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC419@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L6121:
	.loc 1 13479 0
	movl	warn_ecpp@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6118
	cmpl	$134, -40(%ebp)
	je	.L6145
	cmpl	$133, -40(%ebp)
	je	.L6145
	cmpl	$132, -40(%ebp)
	je	.L6145
	cmpl	$131, -40(%ebp)
	jne	.L6118
.L6145:
.LBB143:
	.loc 1 13485 0
	movl	-56(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 13486 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 13487 0
	cmpl	$0, -48(%ebp)
	jne	.L6149
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L6151
.L6149:
	.loc 1 13488 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
.L6151:
	.loc 1 13489 0
	movl	-12(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 13490 0
	cmpl	$132, -40(%ebp)
	je	.L6152
	cmpl	$131, -40(%ebp)
	jne	.L6154
.L6152:
	.loc 1 13493 0
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L6155
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	72(%eax), %edx
	movl	$0, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L6118
.L6155:
	.loc 1 13496 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	build_reference_type@PLT
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC420@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 13490 0
	jmp	.L6118
.L6154:
	.loc 1 13501 0
	movl	-8(%ebp), %eax
	movl	72(%eax), %edx
	movl	$0, 8(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	jne	.L6118
	.loc 1 13502 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC421@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	jmp	.L6118
.L6119:
.LBE143:
	.loc 1 13506 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	unary_op_p
	testl	%eax, %eax
	je	.L6159
	.loc 1 13508 0
	cmpl	$1, -36(%ebp)
	je	.L6118
	.loc 1 13510 0
	cmpl	$0, -48(%ebp)
	je	.L6163
	.loc 1 13511 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC422@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6118
.L6163:
	.loc 1 13513 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC423@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6118
.L6159:
	.loc 1 13518 0
	cmpl	$2, -36(%ebp)
	je	.L6165
	.loc 1 13520 0
	cmpl	$0, -48(%ebp)
	je	.L6167
	.loc 1 13521 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC423@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6165
.L6167:
	.loc 1 13523 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC424@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L6165:
	.loc 1 13527 0
	movl	warn_ecpp@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6118
	cmpl	$93, -40(%ebp)
	je	.L6170
	cmpl	$94, -40(%ebp)
	je	.L6170
	cmpl	$48, -40(%ebp)
	jne	.L6118
.L6170:
	.loc 1 13531 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC425@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L6118:
	.loc 1 13536 0
	movl	warn_ecpp@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6183
	cmpl	$2, -36(%ebp)
	jne	.L6183
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	jne	.L6183
	cmpl	$60, -40(%ebp)
	je	.L6177
	cmpl	$61, -40(%ebp)
	je	.L6177
	cmpl	$63, -40(%ebp)
	je	.L6177
	cmpl	$62, -40(%ebp)
	je	.L6177
	cmpl	$67, -40(%ebp)
	jne	.L6183
.L6177:
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$16, %al
	jne	.L6183
	.loc 1 13545 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC426@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 13548 0
	jmp	.L6183
.L6184:
	.loc 1 13550 0
	movl	-56(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L6185
	.loc 1 13552 0
	movl	-56(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 1 13553 0
	cmpl	$134, -40(%ebp)
	je	.L6187
	cmpl	$133, -40(%ebp)
	jne	.L6189
.L6187:
	.loc 1 13556 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6185
	.loc 1 13557 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC427@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
	.loc 1 13553 0
	jmp	.L6185
.L6189:
	.loc 1 13560 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC427@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L6185:
	.loc 1 13549 0
	movl	-56(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -56(%ebp)
.L6183:
	.loc 1 13548 0
	cmpl	$0, -56(%ebp)
	je	.L6193
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	cmpl	-56(%ebp), %eax
	jne	.L6184
.L6193:
	.loc 1 13564 0
	addl	$100, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE233:
	.size	grok_op_properties, .-grok_op_properties
	.section	.rodata
	.type	__FUNCTION__.32957, @object
	.size	__FUNCTION__.32957, 9
__FUNCTION__.32957:
	.string	"tag_name"
.LC428:
	.string	"struct"
.LC429:
	.string	"class"
.LC430:
	.string	"union "
.LC431:
	.string	"enum"
	.text
	.type	tag_name, @function
tag_name:
.LFB234:
	.loc 1 13569 0
	pushl	%ebp
.LCFI845:
	movl	%esp, %ebp
.LCFI846:
	pushl	%ebx
.LCFI847:
	subl	$20, %esp
.LCFI848:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13570 0
	movl	8(%ebp), %eax
	movl	%eax, -12(%ebp)
	cmpl	$1, -12(%ebp)
	je	.L6197
	cmpl	$1, -12(%ebp)
	jb	.L6196
	cmpl	$2, -12(%ebp)
	je	.L6198
	cmpl	$3, -12(%ebp)
	je	.L6199
	jmp	.L6195
.L6196:
	.loc 1 13573 0
	leal	.LC428@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L6200
.L6197:
	.loc 1 13575 0
	leal	.LC429@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L6200
.L6198:
	.loc 1 13577 0
	leal	.LC430@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L6200
.L6199:
	.loc 1 13579 0
	leal	.LC431@GOTOFF(%ebx), %eax
	movl	%eax, -8(%ebp)
	jmp	.L6200
.L6195:
	.loc 1 13581 0
	leal	__FUNCTION__.32957@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$13581, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6200:
	movl	-8(%ebp), %eax
	.loc 1 13583 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE234:
	.size	tag_name, .-tag_name
	.section	.rodata
	.align 4
.LC432:
	.string	"using typedef-name `%D' after `%s'"
	.align 4
.LC433:
	.string	"using template type parameter `%T' after `%s'"
	.text
	.type	check_elaborated_type_specifier, @function
check_elaborated_type_specifier:
.LFB235:
	.loc 1 13593 0
	pushl	%ebp
.LCFI849:
	movl	%esp, %ebp
.LCFI850:
	pushl	%ebx
.LCFI851:
	subl	$36, %esp
.LCFI852:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13596 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	follow_tag_typedef
	movl	%eax, -8(%ebp)
	.loc 1 13601 0
	cmpl	$0, -8(%ebp)
	jne	.L6203
	.loc 1 13603 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tag_name
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	56(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	leal	.LC432@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13605 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	jmp	.L6205
.L6203:
	.loc 1 13607 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	jne	.L6205
	.loc 1 13609 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tag_name
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC433@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13611 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
.L6205:
	.loc 1 13614 0
	movl	-8(%ebp), %eax
	.loc 1 13615 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE235:
	.size	check_elaborated_type_specifier, .-check_elaborated_type_specifier
	.local	explained.32995
	.comm	explained.32995,4,4
	.section	.rodata
	.type	__FUNCTION__.32994, @object
	.size	__FUNCTION__.32994, 9
__FUNCTION__.32994:
	.string	"xref_tag"
	.align 4
.LC434:
	.string	"`%s %T' declares a new type at namespace scope"
	.align 4
.LC435:
	.string	"  names from dependent base classes are not visible to unqualified name lookup - to refer to the inherited type, say `%s %T::%T'"
	.align 4
.LC436:
	.string	"use of enum `%#D' without previous declaration"
	.text
.globl xref_tag
	.type	xref_tag, @function
xref_tag:
.LFB236:
	.loc 1 13630 0
	pushl	%ebp
.LCFI853:
	movl	%esp, %ebp
.LCFI854:
	pushl	%edi
.LCFI855:
	pushl	%esi
.LCFI856:
	pushl	%ebx
.LCFI857:
	subl	$108, %esp
.LCFI858:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	movl	20(%ebp), %eax
	movb	%al, -52(%ebp)
	.loc 1 13633 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6209
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6209
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -88(%ebp)
	jmp	.L6212
.L6209:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -88(%ebp)
.L6212:
	movl	-88(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 13634 0
	movl	$0, -28(%ebp)
	.loc 1 13636 0
	movl	$11, (%esp)
	call	timevar_push@PLT
	.loc 1 13638 0
	movl	8(%ebp), %edx
	movl	%edx, -92(%ebp)
	cmpl	$2, -92(%ebp)
	je	.L6215
	cmpl	$2, -92(%ebp)
	jb	.L6214
	cmpl	$3, -92(%ebp)
	je	.L6216
	jmp	.L6213
.L6214:
	.loc 1 13642 0
	movl	$21, -36(%ebp)
	.loc 1 13643 0
	jmp	.L6217
.L6215:
	.loc 1 13645 0
	movl	$22, -36(%ebp)
	.loc 1 13646 0
	jmp	.L6217
.L6216:
	.loc 1 13648 0
	movl	$11, -36(%ebp)
	.loc 1 13649 0
	jmp	.L6217
.L6213:
	.loc 1 13651 0
	leal	__FUNCTION__.32994@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$13651, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6217:
	.loc 1 13656 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_type@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	cmpb	$116, %al
	jne	.L6218
	.loc 1 13658 0
	movl	12(%ebp), %ecx
	movl	%ecx, -56(%ebp)
	.loc 1 13659 0
	movl	-56(%ebp), %edx
	movl	56(%edx), %eax
	movl	52(%eax), %eax
	movl	%eax, 12(%ebp)
	jmp	.L6220
.L6218:
	.loc 1 13662 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	identifier_type_value@PLT
	movl	%eax, -56(%ebp)
.L6220:
	.loc 1 13665 0
	cmpl	$0, -56(%ebp)
	je	.L6221
	cmpb	$0, -52(%ebp)
	je	.L6221
	movl	-56(%ebp), %ecx
	movzbl	8(%ecx), %eax
	cmpb	$-59, %al
	jne	.L6221
.LBB144:
	.loc 1 13670 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tag_name
	movl	%eax, %edx
	movl	12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC434@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
	.loc 1 13672 0
	movl	explained.32995@GOTOFF(%ebx), %eax
	addl	$1, %eax
	movl	%eax, explained.32995@GOTOFF(%ebx)
	movl	explained.32995@GOTOFF(%ebx), %eax
	cmpl	$1, %eax
	jne	.L6225
	.loc 1 13673 0
	movl	-56(%ebp), %edx
	movl	56(%edx), %eax
	movl	52(%eax), %edi
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	constructor_name@PLT
	movl	%eax, %esi
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tag_name
	movl	%edi, 12(%esp)
	movl	%esi, 8(%esp)
	movl	%eax, 4(%esp)
	leal	.LC435@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L6225:
	.loc 1 13680 0
	movl	-32(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, -24(%ebp)
	.loc 1 13681 0
	jmp	.L6227
.L6228:
	.loc 1 13683 0
	movl	-24(%ebp), %eax
	movl	4(%eax), %edx
	movl	-56(%ebp), %ecx
	movl	56(%ecx), %eax
	cmpl	%eax, %edx
	jne	.L6229
	.loc 1 13685 0
	movl	-24(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 1 13686 0
	jmp	.L6221
.L6229:
	.loc 1 13682 0
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
.L6227:
	.loc 1 13681 0
	cmpl	$0, -24(%ebp)
	jne	.L6228
.L6221:
.LBE144:
	.loc 1 13690 0
	cmpl	$0, -56(%ebp)
	je	.L6231
	movl	-56(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %eax
	cmpl	-36(%ebp), %eax
	je	.L6231
	movl	-56(%ebp), %ecx
	movzbl	8(%ecx), %eax
	cmpb	$-62, %al
	je	.L6231
	movl	-56(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-60, %al
	je	.L6231
	.loc 1 13692 0
	movl	$0, -56(%ebp)
.L6231:
	.loc 1 13694 0
	movzbl	-52(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L6236
	.loc 1 13698 0
	movl	$1, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_tag
	movl	%eax, -60(%ebp)
	jmp	.L6238
.L6236:
	.loc 1 13702 0
	cmpl	$0, -56(%ebp)
	je	.L6239
	.loc 1 13704 0
	movl	-56(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_elaborated_type_specifier
	movl	%eax, -60(%ebp)
	.loc 1 13705 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-60(%ebp), %eax
	jne	.L6244
	.loc 1 13706 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -84(%ebp)
	jmp	.L6243
.L6239:
	.loc 1 13709 0
	movl	$0, 12(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_tag
	movl	%eax, -60(%ebp)
.L6244:
	.loc 1 13711 0
	cmpl	$0, -60(%ebp)
	jne	.L6245
	.loc 1 13715 0
	movl	$1, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	lookup_name@PLT
	movl	%eax, -60(%ebp)
	.loc 1 13717 0
	cmpl	$0, -60(%ebp)
	je	.L6247
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L6247
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-64, %al
	jne	.L6247
	movl	-60(%ebp), %ecx
	movl	64(%ecx), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L6247
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-64, %al
	jne	.L6252
	movl	-60(%ebp), %ecx
	movzbl	37(%ecx), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6252
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$33, %al
	je	.L6247
	movl	-60(%ebp), %ecx
	movzbl	8(%ecx), %eax
	cmpb	$36, %al
	je	.L6247
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$34, %al
	je	.L6247
	movl	-60(%ebp), %ecx
	movzbl	8(%ecx), %eax
	cmpb	$-64, %al
	je	.L6247
.L6252:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	template_class_depth@PLT
	testl	%eax, %eax
	jne	.L6247
	.loc 1 13723 0
	movl	-60(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -60(%ebp)
.L6247:
	.loc 1 13725 0
	cmpl	$0, -60(%ebp)
	je	.L6259
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$34, %al
	jne	.L6259
	.loc 1 13727 0
	movl	-60(%ebp), %ecx
	movl	4(%ecx), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_elaborated_type_specifier
	movl	%eax, -60(%ebp)
	.loc 1 13729 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-60(%ebp), %eax
	jne	.L6262
	.loc 1 13730 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -84(%ebp)
	jmp	.L6243
.L6262:
	.loc 1 13731 0
	cmpl	$0, -60(%ebp)
	je	.L6245
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	movzbl	%al, %eax
	cmpl	-36(%ebp), %eax
	je	.L6245
	.loc 1 13732 0
	movl	$0, -60(%ebp)
	.loc 1 13725 0
	jmp	.L6245
.L6259:
	.loc 1 13735 0
	movl	$0, -60(%ebp)
.L6245:
	.loc 1 13738 0
	cmpl	$0, -60(%ebp)
	je	.L6238
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L6238
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	template_class_depth@PLT
	testl	%eax, %eax
	je	.L6238
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	60(%eax), %edx
	movl	64(%eax), %ecx
	movl	%edx, -80(%ebp)
	movl	%ecx, -76(%ebp)
	call	current_scope@PLT
	movl	%eax, (%esp)
	call	template_class_depth@PLT
	movl	%eax, -72(%ebp)
	movl	%eax, %ecx
	sarl	$31, %ecx
	movl	%ecx, -68(%ebp)
	movl	-68(%ebp), %eax
	cmpl	%eax, -76(%ebp)
	jl	.L6238
	movl	-68(%ebp), %edx
	cmpl	%edx, -76(%ebp)
	jg	.L6271
	movl	-72(%ebp), %ecx
	cmpl	%ecx, -80(%ebp)
	jbe	.L6238
.L6271:
	.loc 1 13778 0
	movl	-60(%ebp), %edx
	movl	80(%edx), %eax
	movl	%eax, -28(%ebp)
	.loc 1 13779 0
	movl	$0, -60(%ebp)
.L6238:
	.loc 1 13783 0
	cmpl	$0, -60(%ebp)
	jne	.L6272
	.loc 1 13789 0
	cmpl	$11, -36(%ebp)
	jne	.L6274
	.loc 1 13791 0
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC436@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13793 0
	movl	$11, (%esp)
	call	make_node@PLT
	movl	%eax, -60(%ebp)
	.loc 1 13797 0
	movl	integer_types@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	leal	(%eax,%eax), %edx
	movl	-60(%ebp), %ecx
	movzbl	37(%ecx), %eax
	andl	$1, %eax
	orl	%edx, %eax
	movl	-60(%ebp), %edx
	movb	%al, 37(%edx)
	.loc 1 13798 0
	movl	integer_types@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movl	40(%eax), %eax
	movl	-60(%ebp), %ecx
	movl	%eax, 40(%ecx)
	.loc 1 13799 0
	movl	-60(%ebp), %edx
	movzbl	39(%edx), %eax
	andl	$127, %eax
	movl	-60(%ebp), %ecx
	movb	%al, 39(%ecx)
	.loc 1 13800 0
	movl	-60(%ebp), %edx
	movzbl	9(%edx), %eax
	orl	$32, %eax
	movl	-60(%ebp), %ecx
	movb	%al, 9(%ecx)
	.loc 1 13801 0
	movl	integer_types@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movl	%eax, %edx
	andw	$511, %dx
	movl	-60(%ebp), %ecx
	movzwl	36(%ecx), %eax
	andw	$-512, %ax
	orl	%edx, %eax
	movl	-60(%ebp), %edx
	movw	%ax, 36(%edx)
	.loc 1 13802 0
	movl	integer_types@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movl	60(%eax), %eax
	movl	-60(%ebp), %ecx
	movl	%eax, 60(%ecx)
	.loc 1 13803 0
	movl	integer_types@GOT(%ebx), %eax
	movl	24(%eax), %eax
	movl	64(%eax), %eax
	movl	-60(%ebp), %edx
	movl	%eax, 64(%edx)
	.loc 1 13810 0
	movzbl	-52(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-60(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	pushtag@PLT
	jmp	.L6277
.L6274:
.LBB145:
	.loc 1 13814 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	96(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 13816 0
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	make_aggr_type@PLT
	movl	%eax, -60(%ebp)
	.loc 1 13817 0
	movl	-28(%ebp), %eax
	movl	-60(%ebp), %edx
	movl	%eax, 80(%edx)
	.loc 1 13823 0
	movzbl	-52(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-60(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	pushtag@PLT
	.loc 1 13824 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 96(%edx)
	jmp	.L6277
.L6272:
.LBE145:
	.loc 1 13829 0
	movzbl	-52(%ebp), %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L6277
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L6277
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-62, %al
	je	.L6280
	movl	-60(%ebp), %ecx
	movzbl	8(%ecx), %eax
	cmpb	$-59, %al
	je	.L6280
	movl	-60(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-57, %al
	je	.L6280
	movl	-60(%ebp), %ecx
	movzbl	8(%ecx), %eax
	cmpb	$-60, %al
	je	.L6280
	movl	-60(%ebp), %edx
	movzbl	39(%edx), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6277
.L6280:
	.loc 1 13830 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	36(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-60(%ebp), %ecx
	movl	%ecx, (%esp)
	call	redeclare_class_template@PLT
.L6277:
	.loc 1 13833 0
	movl	16(%ebp), %eax
	movl	-60(%ebp), %edx
	movl	%eax, 28(%edx)
	.loc 1 13835 0
	movl	$11, (%esp)
	call	timevar_pop@PLT
	movl	-60(%ebp), %ecx
	movl	%ecx, -84(%ebp)
.L6243:
	movl	-84(%ebp), %eax
	.loc 1 13836 0
	addl	$108, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE236:
	.size	xref_tag, .-xref_tag
.globl xref_tag_from_type
	.type	xref_tag_from_type, @function
xref_tag_from_type:
.LFB237:
	.loc 1 13842 0
	pushl	%ebp
.LCFI859:
	movl	%esp, %ebp
.LCFI860:
	pushl	%ebx
.LCFI861:
	subl	$36, %esp
.LCFI862:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13845 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	jne	.L6287
	.loc 1 13846 0
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	jmp	.L6289
.L6287:
	.loc 1 13848 0
	movl	$2, -8(%ebp)
.L6289:
	.loc 1 13850 0
	cmpl	$0, 12(%ebp)
	jne	.L6290
	.loc 1 13851 0
	movl	8(%ebp), %eax
	movl	56(%eax), %eax
	movl	52(%eax), %eax
	movl	%eax, 12(%ebp)
.L6290:
	.loc 1 13853 0
	cmpl	$0, 16(%ebp)
	setne	%al
	movzbl	%al, %eax
	movl	%eax, 12(%esp)
	movl	$0, 8(%esp)
	movl	12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	xref_tag@PLT
	.loc 1 13854 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE237:
	.size	xref_tag_from_type, .-xref_tag_from_type
	.section	.rodata
.LC437:
	.string	"derived union `%T' invalid"
	.align 4
.LC438:
	.string	"base type `%T' fails to be a struct or class type"
	.align 4
.LC439:
	.string	"base class `%T' has incomplete type"
.LC440:
	.string	"recursive type `%T' undefined"
	.align 4
.LC441:
	.string	"duplicate base type `%T' invalid"
	.text
.globl xref_basetypes
	.type	xref_basetypes, @function
xref_basetypes:
.LFB238:
	.loc 1 13866 0
	pushl	%ebp
.LCFI863:
	movl	%esp, %ebp
.LCFI864:
	pushl	%edi
.LCFI865:
	pushl	%esi
.LCFI866:
	pushl	%ebx
.LCFI867:
	subl	$92, %esp
.LCFI868:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 13875 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6294
	.loc 1 13877 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC437@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13878 0
	jmp	.L6423
.L6294:
	.loc 1 13881 0
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -36(%ebp)
	.loc 1 13883 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	list_length@PLT
	movl	%eax, -40(%ebp)
	.loc 1 13889 0
	movl	12(%ebp), %eax
	movl	%eax, -48(%ebp)
	jmp	.L6297
.L6298:
	.loc 1 13890 0
	movl	-48(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	.loc 1 13889 0
	movl	-48(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -48(%ebp)
.L6297:
	cmpl	$0, -48(%ebp)
	jne	.L6298
	.loc 1 13892 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6300
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6302
.L6300:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6303
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6303
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6303
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6303
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6302
.L6303:
	movl	8(%ebp), %eax
	movl	92(%eax), %ecx
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzwl	6(%eax), %eax
	shrw	$7, %ax
	andl	$63, %eax
	orl	$1, %eax
	andl	$63, %eax
	movzbw	%al, %ax
	andl	$63, %eax
	movl	%eax, %edx
	sall	$7, %edx
	movzwl	6(%ecx), %eax
	andw	$-8065, %ax
	orl	%edx, %eax
	movw	%ax, 6(%ecx)
	jmp	.L6308
.L6302:
	movl	8(%ebp), %eax
	movl	84(%eax), %esi
	movl	88(%eax), %edi
	movl	%esi, %eax
	orl	$1, %eax
	movl	%edi, %edx
	orb	$0, %dh
	movl	8(%ebp), %ecx
	movl	%eax, 84(%ecx)
	movl	%edx, 88(%ecx)
.L6308:
	.loc 1 13893 0
	movl	8(%ebp), %eax
	movl	76(%eax), %esi
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	make_tree_vec@PLT
	movl	%eax, -52(%ebp)
	movl	-52(%ebp), %eax
	movl	%eax, 36(%esi)
	.loc 1 13895 0
	movl	$0, -44(%ebp)
	jmp	.L6309
.L6310:
.LBB146:
	.loc 1 13903 0
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	160(%eax), %eax
	cmpl	%eax, %edx
	je	.L6311
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	176(%eax), %eax
	cmpl	%eax, %edx
	je	.L6311
	cmpl	$1, -36(%ebp)
	je	.L6314
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	156(%eax), %eax
	cmpl	%eax, %edx
	je	.L6311
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	172(%eax), %eax
	cmpl	%eax, %edx
	jne	.L6314
.L6311:
	movl	$1, -84(%ebp)
	jmp	.L6317
.L6314:
	movl	$0, -84(%ebp)
.L6317:
	movl	-84(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 13906 0
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	164(%eax), %eax
	cmpl	%eax, %edx
	je	.L6318
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	180(%eax), %eax
	cmpl	%eax, %edx
	jne	.L6320
.L6318:
	movl	$1, -80(%ebp)
	jmp	.L6321
.L6320:
	movl	$0, -80(%ebp)
.L6321:
	movl	-80(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 1 13911 0
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	184(%eax), %eax
	cmpl	%eax, %edx
	je	.L6322
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	180(%eax), %eax
	cmpl	%eax, %edx
	je	.L6322
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	176(%eax), %eax
	cmpl	%eax, %edx
	je	.L6322
	movl	12(%ebp), %eax
	movl	16(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	172(%eax), %eax
	cmpl	%eax, %edx
	jne	.L6326
.L6322:
	movl	$1, -76(%ebp)
	jmp	.L6327
.L6326:
	movl	$0, -76(%ebp)
.L6327:
	movl	-76(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 1 13912 0
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 13915 0
	cmpl	$0, -20(%ebp)
	je	.L6328
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$34, %al
	jne	.L6328
	.loc 1 13916 0
	movl	-20(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -20(%ebp)
.L6328:
	.loc 1 13917 0
	cmpl	$0, -20(%ebp)
	je	.L6331
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6333
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6333
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6333
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6333
.L6331:
	.loc 1 13923 0
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC438@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13925 0
	jmp	.L6337
.L6333:
	.loc 1 13930 0
	movl	-20(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L6338
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L6340
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	uses_template_parms@PLT
	testl	%eax, %eax
	jne	.L6338
.L6340:
	.loc 1 13933 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC439@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13934 0
	jmp	.L6337
.L6338:
	.loc 1 13938 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6342
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6344
.L6342:
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6345
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6345
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6345
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6345
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6344
.L6345:
	movl	-20(%ebp), %eax
	movl	92(%eax), %eax
	movzwl	6(%eax), %eax
	shrw	$7, %ax
	andl	$63, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	movb	%al, -69(%ebp)
	jmp	.L6350
.L6344:
	movl	-20(%ebp), %eax
	movl	88(%eax), %edx
	movl	84(%eax), %eax
	andl	$1, %eax
	movb	%al, -69(%ebp)
.L6350:
	cmpb	$0, -69(%ebp)
	je	.L6351
	.loc 1 13940 0
	movl	-20(%ebp), %eax
	cmpl	8(%ebp), %eax
	jne	.L6353
	.loc 1 13941 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC440@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6337
.L6353:
	.loc 1 13943 0
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC441@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 13944 0
	jmp	.L6337
.L6351:
	.loc 1 13947 0
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6356
	call	current_lang_depth@PLT
	testl	%eax, %eax
	jne	.L6356
	.loc 1 13949 0
	movl	8(%ebp), %eax
	movzbl	39(%eax), %edx
	orl	$8, %edx
	movb	%dl, 39(%eax)
.L6356:
	.loc 1 13959 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6359
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6361
.L6359:
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6362
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6362
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6362
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6362
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6361
.L6362:
	movl	-20(%ebp), %eax
	movl	76(%eax), %eax
	movl	32(%eax), %eax
	movl	%eax, -68(%ebp)
	jmp	.L6367
.L6361:
	movl	$0, -68(%ebp)
.L6367:
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6368
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6370
.L6368:
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6371
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6371
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6371
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6371
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6370
.L6371:
	movl	-20(%ebp), %eax
	movl	76(%eax), %eax
	movl	28(%eax), %eax
	movl	%eax, -64(%ebp)
	jmp	.L6376
.L6370:
	movl	$0, -64(%ebp)
.L6376:
	movl	global_trees@GOT(%ebx), %eax
	movl	80(%eax), %edx
	movl	-68(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	-64(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	make_binfo@PLT
	movl	%eax, -16(%ebp)
	.loc 1 13966 0
	movl	-44(%ebp), %ecx
	movl	-52(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 20(%edx,%ecx,4)
	.loc 1 13967 0
	movl	-32(%ebp), %eax
	andl	$1, %eax
	movl	-16(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,8), %edx
	movzbl	10(%ecx), %eax
	andl	$-9, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 13968 0
	movl	-28(%ebp), %eax
	andl	$1, %eax
	movl	-16(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$5, %edx
	movzbl	10(%ecx), %eax
	andl	$-33, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 13969 0
	movl	-24(%ebp), %eax
	andl	$1, %eax
	movl	-16(%ebp), %ecx
	andl	$1, %eax
	leal	0(,%eax,4), %edx
	movzbl	10(%ecx), %eax
	andl	$-5, %eax
	orl	%edx, %eax
	movb	%al, 10(%ecx)
	.loc 1 13970 0
	movl	8(%ebp), %eax
	movl	76(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 13974 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	unshare_base_binfos@PLT
	.loc 1 13976 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6377
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6379
.L6377:
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6380
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6380
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6380
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6380
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6379
.L6380:
	movl	-20(%ebp), %eax
	movl	92(%eax), %ecx
	movl	-20(%ebp), %eax
	movl	92(%eax), %eax
	movzwl	6(%eax), %eax
	shrw	$7, %ax
	andl	$63, %eax
	orl	$1, %eax
	andl	$63, %eax
	movzbw	%al, %ax
	andl	$63, %eax
	movl	%eax, %edx
	sall	$7, %edx
	movzwl	6(%ecx), %eax
	andw	$-8065, %ax
	orl	%edx, %eax
	movw	%ax, 6(%ecx)
	jmp	.L6385
.L6379:
	movl	-20(%ebp), %eax
	movl	84(%eax), %esi
	movl	88(%eax), %edi
	movl	%esi, %eax
	orl	$1, %eax
	movl	%edi, %edx
	orb	$0, %dh
	movl	-20(%ebp), %ecx
	movl	%eax, 84(%ecx)
	movl	%edx, 88(%ecx)
.L6385:
	.loc 1 13980 0
	cmpl	$0, -24(%ebp)
	jne	.L6386
	movl	-20(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6388
.L6386:
	.loc 1 13982 0
	movl	8(%ebp), %edx
	movzbl	11(%edx), %eax
	orl	$8, %eax
	movb	%al, 11(%edx)
	.loc 1 13985 0
	movl	8(%ebp), %edx
	movzbl	11(%edx), %eax
	orl	$2, %eax
	movb	%al, 11(%edx)
.L6388:
	.loc 1 13988 0
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6389
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6391
.L6389:
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6392
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6392
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6392
	movl	-20(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6392
	movl	-20(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6391
.L6392:
	.loc 1 13990 0
	movl	8(%ebp), %eax
	movl	92(%eax), %ecx
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	5(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	5(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$6, %edx
	movzbl	5(%ecx), %eax
	andl	$-65, %eax
	orl	%edx, %eax
	movb	%al, 5(%ecx)
	.loc 1 13992 0
	movl	8(%ebp), %eax
	movl	92(%eax), %ecx
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	5(%eax), %eax
	shrb	$7, %al
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	5(%eax), %eax
	shrb	$7, %al
	orl	%edx, %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$7, %edx
	movzbl	5(%ecx), %eax
	andl	$127, %eax
	orl	%edx, %eax
	movb	%al, 5(%ecx)
	.loc 1 13994 0
	movl	8(%ebp), %eax
	movl	92(%eax), %ecx
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$3, %eax
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$3, %eax
	orl	%edx, %eax
	andl	$3, %eax
	movl	%eax, %edx
	andl	$3, %edx
	movzbl	6(%ecx), %eax
	andl	$-4, %eax
	orl	%edx, %eax
	movb	%al, 6(%ecx)
	.loc 1 13996 0
	movl	8(%ebp), %eax
	movl	92(%eax), %ecx
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	(%eax), %eax
	shrb	$4, %al
	andl	$1, %eax
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	(%eax), %eax
	shrb	$4, %al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	andl	$1, %eax
	movl	%eax, %edx
	sall	$4, %edx
	movzbl	(%ecx), %eax
	andl	$-17, %eax
	orl	%edx, %eax
	movb	%al, (%ecx)
	.loc 1 14001 0
	movl	8(%ebp), %eax
	movzbl	11(%eax), %eax
	shrb	%al
	andl	$1, %eax
	movl	%eax, %edx
	movl	-20(%ebp), %eax
	movzbl	11(%eax), %eax
	shrb	%al
	andl	$1, %eax
	orl	%edx, %eax
	andl	$1, %eax
	movl	8(%ebp), %ecx
	andl	$1, %eax
	leal	(%eax,%eax), %edx
	movzbl	11(%ecx), %eax
	andl	$-3, %eax
	orl	%edx, %eax
	movb	%al, 11(%ecx)
.L6391:
	.loc 1 14005 0
	addl	$1, -44(%ebp)
.L6337:
.LBE146:
	.loc 1 13895 0
	movl	12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, 12(%ebp)
.L6309:
	cmpl	$0, 12(%ebp)
	jne	.L6310
	.loc 1 14008 0
	cmpl	$0, -44(%ebp)
	je	.L6398
	.loc 1 14009 0
	movl	-52(%ebp), %edx
	movl	-44(%ebp), %eax
	movl	%eax, 16(%edx)
	jmp	.L6400
.L6398:
	.loc 1 14011 0
	movl	8(%ebp), %eax
	movl	76(%eax), %eax
	movl	$0, 36(%eax)
.L6400:
	.loc 1 14013 0
	cmpl	$1, -44(%ebp)
	jle	.L6424
	.loc 1 14015 0
	movl	8(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	(%edx), %eax
	orl	$16, %eax
	movb	%al, (%edx)
	.loc 1 14018 0
	movl	8(%ebp), %edx
	movzbl	11(%edx), %eax
	orl	$2, %eax
	movb	%al, 11(%edx)
	.loc 1 14022 0
	jmp	.L6424
.L6404:
	.loc 1 14023 0
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6405
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6407
.L6405:
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6408
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6408
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6408
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6408
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6407
.L6408:
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movl	92(%eax), %ecx
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movl	92(%eax), %eax
	movzwl	6(%eax), %eax
	shrw	$7, %ax
	andl	$63, %eax
	andl	$62, %eax
	andl	$63, %eax
	movzbw	%al, %ax
	andl	$63, %eax
	movl	%eax, %edx
	sall	$7, %edx
	movzwl	6(%ecx), %eax
	andw	$-8065, %ax
	orl	%edx, %eax
	movw	%ax, 6(%ecx)
	jmp	.L6403
.L6407:
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %ecx
	movl	-44(%ebp), %edx
	movl	-52(%ebp), %eax
	movl	20(%eax,%edx,4), %eax
	movl	4(%eax), %eax
	movl	84(%eax), %esi
	movl	88(%eax), %edi
	movl	%esi, %eax
	andl	$-2, %eax
	movl	%edi, %edx
	andb	$255, %dh
	movl	%eax, 84(%ecx)
	movl	%edx, 88(%ecx)
.L6403:
.L6424:
	.loc 1 14022 0
	subl	$1, -44(%ebp)
	cmpl	$0, -44(%ebp)
	jns	.L6404
	.loc 1 14024 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6414
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6416
.L6414:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6417
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6417
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6417
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6417
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6416
.L6417:
	movl	8(%ebp), %eax
	movl	92(%eax), %ecx
	movl	8(%ebp), %eax
	movl	92(%eax), %eax
	movzwl	6(%eax), %eax
	shrw	$7, %ax
	andl	$63, %eax
	andl	$62, %eax
	andl	$63, %eax
	movzbw	%al, %ax
	andl	$63, %eax
	movl	%eax, %edx
	sall	$7, %edx
	movzwl	6(%ecx), %eax
	andw	$-8065, %ax
	orl	%edx, %eax
	movw	%ax, 6(%ecx)
	jmp	.L6422
.L6416:
	movl	8(%ebp), %eax
	movl	84(%eax), %esi
	movl	88(%eax), %edi
	movl	%esi, %eax
	andl	$-2, %eax
	movl	%edi, %edx
	andb	$255, %dh
	movl	8(%ebp), %ecx
	movl	%eax, 84(%ecx)
	movl	%edx, 88(%ecx)
.L6422:
	.loc 1 14028 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	get_vbase_types@PLT
.L6423:
	.loc 1 14029 0
	addl	$92, %esp
	popl	%ebx
	popl	%esi
	popl	%edi
	popl	%ebp
	ret
.LFE238:
	.size	xref_basetypes, .-xref_basetypes
	.section	.rodata
.LC442:
	.string	"multiple definition of `%#T'"
.LC443:
	.string	"previous definition here"
	.text
.globl start_enum
	.type	start_enum, @function
start_enum:
.LFB239:
	.loc 1 14041 0
	pushl	%ebp
.LCFI869:
	movl	%esp, %ebp
.LCFI870:
	pushl	%ebx
.LCFI871:
	subl	$52, %esp
.LCFI872:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14042 0
	movl	$0, -24(%ebp)
	.loc 1 14043 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6426
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6426
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L6429
.L6426:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -28(%ebp)
.L6429:
	movl	-28(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 1 14049 0
	cmpl	$0, 8(%ebp)
	je	.L6430
	.loc 1 14050 0
	movl	$1, 12(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$11, (%esp)
	call	lookup_tag
	movl	%eax, -24(%ebp)
.L6430:
	.loc 1 14052 0
	cmpl	$0, -24(%ebp)
	je	.L6432
	movl	-24(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$11, %al
	jne	.L6432
	.loc 1 14054 0
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC442@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 14055 0
	movl	-24(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	.LC443@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_error_at@PLT
	.loc 1 14057 0
	movl	-24(%ebp), %eax
	movl	$0, 16(%eax)
	.loc 1 14052 0
	jmp	.L6435
.L6432:
	.loc 1 14061 0
	movl	$11, (%esp)
	call	make_node@PLT
	movl	%eax, -24(%ebp)
	.loc 1 14062 0
	movl	$0, 8(%esp)
	movl	-24(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	pushtag@PLT
.L6435:
	.loc 1 14065 0
	movl	-24(%ebp), %eax
	.loc 1 14066 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE239:
	.size	start_enum, .-start_enum
	.section	.rodata
	.align 4
.LC444:
	.string	"no integral type can represent all of the enumerator values for `%T'"
	.text
.globl finish_enum
	.type	finish_enum, @function
finish_enum:
.LFB240:
	.loc 1 14075 0
	pushl	%ebp
.LCFI873:
	movl	%esp, %ebp
.LCFI874:
	pushl	%ebx
.LCFI875:
	subl	$68, %esp
.LCFI876:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14086 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	nreverse@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 1 14092 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L6438
	.loc 1 14094 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L6440
.L6441:
	.loc 1 14095 0
	movl	-44(%ebp), %eax
	movl	20(%eax), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 14094 0
	movl	-44(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
.L6440:
	cmpl	$0, -44(%ebp)
	jne	.L6441
	.loc 1 14096 0
	call	at_function_scope_p@PLT
	testl	%eax, %eax
	je	.L6473
	.loc 1 14097 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$222, (%esp)
	call	build_min@PLT
	movl	%eax, (%esp)
	call	add_stmt@PLT
	.loc 1 14098 0
	jmp	.L6473
.L6438:
	.loc 1 14101 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L6446
	.loc 1 14103 0
	movl	$0, -36(%ebp)
	movl	-36(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 1 14105 0
	movl	8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L6448
.L6449:
.LBB147:
	.loc 1 14107 0
	movl	-44(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 14108 0
	movl	-16(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 14114 0
	movl	-16(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 14118 0
	cmpl	$0, -40(%ebp)
	jne	.L6450
	.loc 1 14119 0
	movl	-12(%ebp), %eax
	movl	%eax, -36(%ebp)
	movl	-36(%ebp), %eax
	movl	%eax, -40(%ebp)
	jmp	.L6452
.L6450:
	.loc 1 14120 0
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_int_cst_lt@PLT
	testl	%eax, %eax
	je	.L6453
	.loc 1 14121 0
	movl	-12(%ebp), %eax
	movl	%eax, -36(%ebp)
	jmp	.L6452
.L6453:
	.loc 1 14122 0
	movl	-40(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_int_cst_lt@PLT
	testl	%eax, %eax
	je	.L6452
	.loc 1 14123 0
	movl	-12(%ebp), %eax
	movl	%eax, -40(%ebp)
.L6452:
	.loc 1 14129 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	8(%ebp), %eax
	je	.L6456
	.loc 1 14131 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_node@PLT
	movl	%eax, %edx
	movl	-16(%ebp), %eax
	movl	%edx, 68(%eax)
	movl	-16(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 14132 0
	movl	-12(%ebp), %edx
	movl	8(%ebp), %eax
	movl	%eax, 4(%edx)
.L6456:
	.loc 1 14137 0
	movl	-44(%ebp), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 20(%edx)
.LBE147:
	.loc 1 14105 0
	movl	-44(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -44(%ebp)
.L6448:
	cmpl	$0, -44(%ebp)
	jne	.L6449
	jmp	.L6459
.L6446:
	.loc 1 14141 0
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %eax
	movl	%eax, -36(%ebp)
	movl	-36(%ebp), %eax
	movl	%eax, -40(%ebp)
.L6459:
	.loc 1 14147 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_int_cst_sgn@PLT
	notl	%eax
	shrl	$31, %eax
	movb	%al, -5(%ebp)
	.loc 1 14148 0
	movzbl	-5(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	min_precision@PLT
	movl	%eax, -28(%ebp)
	.loc 1 14149 0
	movzbl	-5(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-36(%ebp), %eax
	movl	%eax, (%esp)
	call	min_precision@PLT
	movl	%eax, -24(%ebp)
	.loc 1 14150 0
	movl	-28(%ebp), %eax
	movl	%eax, -60(%ebp)
	movl	-24(%ebp), %eax
	movl	%eax, -56(%ebp)
	movl	-60(%ebp), %eax
	cmpl	%eax, -56(%ebp)
	jge	.L6460
	movl	-60(%ebp), %eax
	movl	%eax, -56(%ebp)
.L6460:
	movl	-56(%ebp), %eax
	movl	%eax, -20(%ebp)
	.loc 1 14156 0
	movl	integer_types@GOT(%ebx), %eax
	movl	36(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %eax
	cmpl	-20(%ebp), %eax
	jge	.L6461
	.loc 1 14158 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC444@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 14160 0
	movl	integer_types@GOT(%ebx), %eax
	movl	36(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %eax
	movl	%eax, -20(%ebp)
.L6461:
	.loc 1 14165 0
	movl	-20(%ebp), %eax
	andw	$511, %ax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	andw	$511, %cx
	movzwl	36(%edx), %eax
	andw	$-512, %ax
	orl	%ecx, %eax
	movw	%ax, 36(%edx)
	.loc 1 14166 0
	movl	8(%ebp), %eax
	movl	$0, 20(%eax)
	.loc 1 14167 0
	cmpb	$0, -5(%ebp)
	je	.L6463
	.loc 1 14168 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fixup_unsigned_type@PLT
	jmp	.L6465
.L6463:
	.loc 1 14170 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	fixup_signed_type@PLT
.L6465:
	.loc 1 14172 0
	movl	flag_short_enums@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6466
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movzwl	%ax, %eax
	cmpl	-20(%ebp), %eax
	jge	.L6468
.L6466:
	.loc 1 14175 0
	movl	-20(%ebp), %eax
	movl	$1, 4(%esp)
	movl	%eax, (%esp)
	call	c_common_type_for_size@PLT
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	andw	$511, %cx
	movzwl	36(%edx), %eax
	andw	$-512, %ax
	orl	%ecx, %eax
	movw	%ax, 36(%edx)
	.loc 1 14172 0
	jmp	.L6469
.L6468:
	.loc 1 14178 0
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movl	8(%ebp), %edx
	movl	%eax, %ecx
	andw	$511, %cx
	movzwl	36(%edx), %eax
	andw	$-512, %ax
	orl	%ecx, %eax
	movw	%ax, 36(%edx)
.L6469:
	.loc 1 14180 0
	movl	8(%ebp), %eax
	movl	$0, 20(%eax)
	.loc 1 14181 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	layout_type@PLT
	.loc 1 14184 0
	movl	8(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L6470
.L6471:
	.loc 1 14186 0
	movl	8(%ebp), %eax
	movl	16(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 1 14187 0
	movl	8(%ebp), %eax
	movl	60(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, 60(%eax)
	.loc 1 14188 0
	movl	8(%ebp), %eax
	movl	64(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, 64(%eax)
	.loc 1 14189 0
	movl	8(%ebp), %eax
	movl	20(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, 20(%eax)
	.loc 1 14190 0
	movl	8(%ebp), %eax
	movl	24(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, 24(%eax)
	.loc 1 14191 0
	movl	8(%ebp), %eax
	movzbl	37(%eax), %eax
	shrb	%al
	movl	-32(%ebp), %edx
	leal	(%eax,%eax), %ecx
	movzbl	37(%edx), %eax
	andl	$1, %eax
	orl	%ecx, %eax
	movb	%al, 37(%edx)
	.loc 1 14192 0
	movl	8(%ebp), %eax
	movzwl	36(%eax), %eax
	andw	$511, %ax
	movl	-32(%ebp), %edx
	movl	%eax, %ecx
	andw	$511, %cx
	movzwl	36(%edx), %eax
	andw	$-512, %ax
	orl	%ecx, %eax
	movw	%ax, 36(%edx)
	.loc 1 14193 0
	movl	8(%ebp), %eax
	movl	40(%eax), %edx
	movl	-32(%ebp), %eax
	movl	%edx, 40(%eax)
	.loc 1 14194 0
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	shrb	$7, %al
	movl	-32(%ebp), %edx
	movl	%eax, %ecx
	sall	$7, %ecx
	movzbl	39(%edx), %eax
	andl	$127, %eax
	orl	%ecx, %eax
	movb	%al, 39(%edx)
	.loc 1 14195 0
	movl	8(%ebp), %eax
	movzbl	9(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	movl	-32(%ebp), %ecx
	andl	$1, %eax
	movl	%eax, %edx
	sall	$5, %edx
	movzbl	9(%ecx), %eax
	andl	$-33, %eax
	orl	%edx, %eax
	movb	%al, 9(%ecx)
	.loc 1 14184 0
	movl	-32(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, -32(%ebp)
.L6470:
	cmpl	$0, -32(%ebp)
	jne	.L6471
	.loc 1 14199 0
	call	namespace_bindings_p@PLT
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	rest_of_type_compilation@PLT
.L6473:
	.loc 1 14200 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE240:
	.size	finish_enum, .-finish_enum
	.section	.rodata
	.align 4
.LC445:
	.string	"enumerator value for `%D' not integer constant"
	.align 4
.LC446:
	.string	"overflow in enumeration values at `%D'"
	.text
.globl build_enumerator
	.type	build_enumerator, @function
build_enumerator:
.LFB241:
	.loc 1 14211 0
	pushl	%ebp
.LCFI877:
	movl	%esp, %ebp
.LCFI878:
	pushl	%ebx
.LCFI879:
	subl	$52, %esp
.LCFI880:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14217 0
	cmpl	$0, 12(%ebp)
	je	.L6475
	.loc 1 14218 0
	jmp	.L6477
.L6478:
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
.L6477:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$117, %al
	je	.L6479
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$116, %al
	je	.L6479
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$118, %al
	jne	.L6475
.L6479:
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L6475
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	je	.L6478
.L6475:
	.loc 1 14220 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6483
	.loc 1 14223 0
	cmpl	$0, 12(%ebp)
	je	.L6485
	.loc 1 14225 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_constant_value@PLT
	movl	%eax, 12(%ebp)
	.loc 1 14227 0
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$26, %al
	jne	.L6487
	.loc 1 14229 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	default_conversion@PLT
	movl	%eax, 12(%ebp)
	.loc 1 14230 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	constant_expression_warning@PLT
	jmp	.L6485
.L6487:
	.loc 1 14234 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC445@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 14235 0
	movl	$0, 12(%ebp)
.L6485:
	.loc 1 14240 0
	cmpl	$0, 12(%ebp)
	jne	.L6496
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6496
.LBB148:
	.loc 1 14244 0
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L6492
	.loc 1 14247 0
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	movl	20(%eax), %eax
	movl	68(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 14249 0
	movl	global_trees@GOT(%ebx), %eax
	movl	48(%eax), %eax
	movl	$1, 12(%esp)
	movl	%eax, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$60, (%esp)
	call	build_binary_op@PLT
	movl	%eax, 12(%ebp)
	.loc 1 14253 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_int_cst_lt@PLT
	testl	%eax, %eax
	je	.L6496
	.loc 1 14254 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC446@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6496
.L6492:
	.loc 1 14257 0
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %eax
	movl	%eax, 12(%ebp)
	.loc 1 14261 0
	jmp	.L6496
.L6497:
.LBE148:
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 12(%ebp)
.L6496:
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$117, %al
	je	.L6498
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$116, %al
	je	.L6498
	movl	12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$118, %al
	jne	.L6483
.L6498:
	movl	12(%ebp), %eax
	movl	20(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L6483
	movl	12(%ebp), %eax
	movl	4(%eax), %edx
	movl	12(%ebp), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %eax
	cmpl	%eax, %edx
	je	.L6497
.L6483:
	.loc 1 14265 0
	call	current_scope@PLT
	movl	%eax, -16(%ebp)
	.loc 1 14280 0
	cmpl	$0, 12(%ebp)
	je	.L6502
	movl	12(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L6504
.L6502:
	movl	$0, -28(%ebp)
.L6504:
	movl	-28(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 1 14282 0
	cmpl	$0, -16(%ebp)
	je	.L6505
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	-16(%ebp), %eax
	jne	.L6505
	.loc 1 14285 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$33, (%esp)
	call	build_lang_decl@PLT
	movl	%eax, -20(%ebp)
	.loc 1 14282 0
	jmp	.L6508
.L6505:
	.loc 1 14289 0
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$33, (%esp)
	call	build_decl@PLT
	movl	%eax, -20(%ebp)
.L6508:
	.loc 1 14291 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, -16(%ebp)
	je	.L6509
	movl	-16(%ebp), %edx
	movl	%edx, -24(%ebp)
	jmp	.L6511
.L6509:
	movl	$0, -24(%ebp)
.L6511:
	movl	-20(%ebp), %eax
	movl	-24(%ebp), %edx
	movl	%edx, 56(%eax)
	.loc 1 14292 0
	movl	-20(%ebp), %edx
	movl	12(%ebp), %eax
	movl	%eax, 68(%edx)
	.loc 1 14293 0
	movl	-20(%ebp), %edx
	movzbl	9(%edx), %eax
	orl	$16, %eax
	movb	%al, 9(%edx)
	.loc 1 14295 0
	cmpl	$0, -16(%ebp)
	je	.L6512
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	-16(%ebp), %eax
	jne	.L6512
	.loc 1 14299 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_member_declaration@PLT
	.loc 1 14295 0
	jmp	.L6515
.L6512:
	.loc 1 14301 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
.L6515:
	.loc 1 14304 0
	movl	16(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	16(%ebp), %eax
	movl	%edx, 16(%eax)
	.loc 1 14305 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE241:
	.size	build_enumerator, .-build_enumerator
	.section	.rodata
	.align 4
.LC447:
	.string	"return type `%#T' is incomplete"
	.text
	.type	check_function_type, @function
check_function_type:
.LFB242:
	.loc 1 14314 0
	pushl	%ebp
.LCFI881:
	movl	%esp, %ebp
.LCFI882:
	pushl	%ebx
.LCFI883:
	subl	$36, %esp
.LCFI884:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14315 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 14316 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	movl	%eax, -12(%ebp)
	.loc 1 14319 0
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	require_complete_types_for_parms
	.loc 1 14321 0
	movl	-12(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L6518
	movl	-12(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	je	.L6518
	.loc 1 14323 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	leal	.LC447@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 14327 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L6521
.LBB149:
	.loc 1 14329 0
	movl	-16(%ebp), %eax
	movl	16(%eax), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 14330 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %eax
	movl	(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	build_cplus_method_type@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	jmp	.L6523
.L6521:
.LBE149:
	.loc 1 14336 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	16(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
.L6523:
	.loc 1 14339 0
	movl	-16(%ebp), %eax
	movl	76(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%edx, 4(%eax)
	.loc 1 14321 0
	jmp	.L6525
.L6518:
	.loc 1 14344 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	abstract_virtuals_error@PLT
.L6525:
	.loc 1 14345 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE242:
	.size	check_function_type, .-check_function_type
	.section	.rodata
	.type	__FUNCTION__.33853, @object
	.size	__FUNCTION__.33853, 15
__FUNCTION__.33853:
	.string	"start_function"
	.align 4
.LC448:
	.string	"semicolon missing after declaration of `%#T'"
	.align 4
.LC449:
	.string	"return type for `main' changed to `int'"
	.align 4
.LC450:
	.string	"`%D' implicitly declared before its definition"
	.align 4
.LC451:
	.string	"`operator=' should return a reference to `*this'"
	.text
.globl start_function
	.type	start_function, @function
start_function:
.LFB243:
	.loc 1 14373 0
	pushl	%ebp
.LCFI885:
	movl	%esp, %ebp
.LCFI886:
	pushl	%esi
.LCFI887:
	pushl	%ebx
.LCFI888:
	addl	$-128, %esp
.LCFI889:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14375 0
	movl	$0, -40(%ebp)
	.loc 1 14378 0
	movl	$0, -28(%ebp)
	.loc 1 14383 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	movl	20(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	je	.L6527
	leal	__FUNCTION__.33853@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14383, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6527:
	.loc 1 14384 0
	movl	global_trees@GOT(%ebx), %eax
	movl	152(%eax), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6529
	leal	__FUNCTION__.33853@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14384, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6529:
	.loc 1 14387 0
	movl	have_extern_spec@GOT(%ebx), %eax
	movzbl	(%eax), %eax
	testb	%al, %al
	je	.L6531
	.loc 1 14389 0
	movl	$6, 4(%esp)
	leal	.LC169@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	get_identifier_with_length@PLT
	movl	%eax, %edx
	movl	8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, 8(%ebp)
	.loc 1 14390 0
	movl	have_extern_spec@GOT(%ebx), %eax
	movb	$0, (%eax)
.L6531:
	.loc 1 14393 0
	movl	20(%ebp), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6533
	.loc 1 14395 0
	movl	12(%ebp), %eax
	movl	%eax, -44(%ebp)
	.loc 1 14397 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 14398 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L6535
	.loc 1 14399 0
	movl	-36(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -40(%ebp)
.L6535:
	.loc 1 14403 0
	cmpl	$0, -40(%ebp)
	jne	.L6537
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6537
	.loc 1 14405 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6540
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	je	.L6540
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L6540
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, -112(%ebp)
	jmp	.L6544
.L6540:
	movl	$0, -112(%ebp)
.L6544:
	movl	-112(%ebp), %eax
	movl	%eax, -40(%ebp)
	.loc 1 14410 0
	cmpl	$0, -40(%ebp)
	je	.L6545
	movl	-40(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6545
	.loc 1 14411 0
	movl	$0, -40(%ebp)
	.loc 1 14410 0
	jmp	.L6537
.L6545:
	.loc 1 14413 0
	movl	$1, -28(%ebp)
.L6537:
	.loc 1 14416 0
	movl	-44(%ebp), %eax
	movl	60(%eax), %edx
	movl	last_function_parms@GOT(%ebx), %eax
	movl	%edx, (%eax)
	jmp	.L6548
.L6533:
	.loc 1 14420 0
	movl	$0, 16(%esp)
	movl	$1, 12(%esp)
	movl	$1, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	grokdeclarator@PLT
	movl	%eax, -44(%ebp)
	.loc 1 14423 0
	movl	-44(%ebp), %eax
	testl	%eax, %eax
	je	.L6549
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L6551
.L6549:
	.loc 1 14424 0
	movl	$0, -108(%ebp)
	jmp	.L6552
.L6551:
	.loc 1 14426 0
	movl	$0, 8(%esp)
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	cplus_decl_attributes@PLT
	.loc 1 14429 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6553
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6553
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -104(%ebp)
	jmp	.L6556
.L6553:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -104(%ebp)
.L6556:
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	cmpl	%eax, -104(%ebp)
	jne	.L6557
	.loc 1 14430 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_apply_pragma_weak@PLT
.L6557:
	.loc 1 14432 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -36(%ebp)
	.loc 1 14434 0
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 14435 0
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6559
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6561
.L6559:
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6562
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6562
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6562
	movl	-32(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6562
	movl	-32(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6561
.L6562:
	movl	-32(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	8(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L6561
	.loc 1 14437 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC448@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	.loc 1 14438 0
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	build_tree_list@PLT
	movl	%eax, (%esp)
	call	shadow_tag@PLT
	.loc 1 14439 0
	movl	-32(%ebp), %eax
	movl	92(%eax), %edx
	movzbl	8(%edx), %eax
	orl	$16, %eax
	movb	%al, 8(%edx)
	.loc 1 14440 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$24, %al
	jne	.L6568
	.loc 1 14441 0
	movl	-36(%ebp), %eax
	movl	16(%eax), %edx
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_function_type@PLT
	movl	%eax, -36(%ebp)
	jmp	.L6570
.L6568:
	.loc 1 14444 0
	movl	-36(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -100(%ebp)
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%eax, -96(%ebp)
	movl	-44(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -92(%ebp)
	movl	-44(%ebp), %eax
	movzbl	9(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6571
	movl	$2, -88(%ebp)
	jmp	.L6573
.L6571:
	movl	$0, -88(%ebp)
.L6573:
	movl	-92(%ebp), %edx
	orl	-88(%ebp), %edx
	movl	-36(%ebp), %eax
	movl	64(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	build_qualified_type@PLT
	movl	-100(%ebp), %edx
	movl	%edx, 8(%esp)
	movl	-96(%ebp), %ecx
	movl	%ecx, 4(%esp)
	movl	%eax, (%esp)
	call	build_cplus_method_type@PLT
	movl	%eax, -36(%ebp)
.L6570:
	.loc 1 14447 0
	movl	-44(%ebp), %edx
	movl	-36(%ebp), %eax
	movl	%eax, 4(%edx)
.L6561:
	.loc 1 14450 0
	movl	-36(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L6574
	.loc 1 14451 0
	movl	-36(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, -40(%ebp)
	jmp	.L6548
.L6574:
	.loc 1 14452 0
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L6548
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L6577
	movl	-44(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L6548
.L6577:
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L6579
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	sete	-81(%ebp)
	jmp	.L6581
.L6579:
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	sete	-81(%ebp)
.L6581:
	cmpb	$0, -81(%ebp)
	je	.L6548
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L6548
	movl	-44(%ebp), %eax
	movl	52(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	%eax, %edx
	jne	.L6548
	.loc 1 14455 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	4(%eax), %edx
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	cmpl	%eax, %edx
	je	.L6548
	.loc 1 14457 0
	movl	pedantic@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6586
	movl	warn_return_type@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6588
.L6586:
	.loc 1 14458 0
	leal	.LC449@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	pedwarn@PLT
.L6588:
	.loc 1 14459 0
	movl	-44(%ebp), %edx
	movl	c_global_trees@GOT(%ebx), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	movl	-36(%ebp), %eax
	movl	%eax, 4(%edx)
.L6548:
	.loc 1 14464 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6589
	movl	16(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC34@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	lookup_attribute@PLT
	testl	%eax, %eax
	je	.L6589
	.loc 1 14466 0
	movl	-44(%ebp), %edx
	leal	.LC175@GOTOFF(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	warning_with_decl@PLT
.L6589:
	.loc 1 14469 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L6592
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L6594
	movl	-44(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-64, %al
	jne	.L6596
.L6594:
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L6596
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	jne	.L6592
.L6596:
	.loc 1 14473 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	adjust_clone_args@PLT
.L6592:
	.loc 1 14477 0
	cmpl	$0, -40(%ebp)
	je	.L6598
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L6598
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L6598
	.loc 1 14480 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	revert_static_member_fn@PLT
	.loc 1 14481 0
	movl	last_function_parms@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	last_function_parms@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 14482 0
	movl	$0, -40(%ebp)
.L6598:
	.loc 1 14487 0
	movl	warn_implicit@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6602
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L6602
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L6602
	.loc 1 14489 0
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L6606
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	movl	56(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, -80(%ebp)
	jmp	.L6608
.L6606:
	movl	$0, -80(%ebp)
.L6608:
	movl	-80(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC450@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	cp_warning_at@PLT
.L6602:
	.loc 1 14493 0
	cmpl	$0, -40(%ebp)
	je	.L6609
	.loc 1 14494 0
	movl	$1, 4(%esp)
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	push_nested_class@PLT
	jmp	.L6611
.L6609:
	.loc 1 14495 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L6611
	.loc 1 14496 0
	movl	-44(%ebp), %eax
	movl	56(%eax), %eax
	movl	$2, 4(%esp)
	movl	%eax, (%esp)
	call	push_nested_class@PLT
.L6611:
	.loc 1 14504 0
	movl	20(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	je	.L6613
	.loc 1 14505 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_begin_member_template_processing@PLT
.L6613:
	.loc 1 14508 0
	movl	warn_ecpp@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6615
	movl	-44(%ebp), %eax
	movl	52(%eax), %eax
	movzbl	11(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L6615
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movl	40(%eax), %eax
	cmpl	$117, %eax
	jne	.L6615
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	jne	.L6615
	.loc 1 14511 0
	leal	.LC451@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L6615:
	.loc 1 14515 0
	movl	-44(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	jne	.L6620
	.loc 1 14516 0
	movl	-44(%ebp), %eax
	movl	global_trees@GOT(%ebx), %edx
	movl	(%edx), %edx
	movl	%edx, 68(%eax)
.L6620:
	.loc 1 14520 0
	movl	-44(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$4, %eax
	movb	%al, 10(%edx)
	.loc 1 14526 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L6622
	.loc 1 14527 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	push_template_decl@PLT
	movl	%eax, -44(%ebp)
.L6622:
	.loc 1 14530 0
	movl	-44(%ebp), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 14534 0
	movl	last_function_parms@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -20(%ebp)
	.loc 1 14539 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6624
	.loc 1 14540 0
	movl	-44(%ebp), %edx
	movl	-20(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	check_function_type
.L6624:
	.loc 1 14543 0
	movl	-36(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 14545 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	c_promoting_integer_type_p@PLT
	testb	%al, %al
	je	.L6626
	.loc 1 14546 0
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	type_promotes_to@PLT
	movl	%eax, -32(%ebp)
.L6626:
	.loc 1 14547 0
	movl	-44(%ebp), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	jne	.L6628
	.loc 1 14549 0
	movl	-44(%ebp), %esi
	movl	-32(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, 8(%esp)
	movl	$0, 4(%esp)
	movl	$37, (%esp)
	call	build_decl@PLT
	movl	%eax, 64(%esi)
	.loc 1 14551 0
	movl	-44(%ebp), %eax
	movl	64(%eax), %esi
	movl	-32(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	movl	%esi, 4(%esp)
	movl	%eax, (%esp)
	call	c_apply_type_quals_to_decl@PLT
.L6628:
	.loc 1 14560 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6630
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6630
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -76(%ebp)
	jmp	.L6633
.L6630:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -76(%ebp)
.L6633:
	movl	-76(%ebp), %edx
	movl	%edx, -24(%ebp)
	.loc 1 14561 0
	movl	lineno@GOT(%ebx), %eax
	movl	(%eax), %ecx
	movl	input_filename@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	-44(%ebp), %edx
	movl	%ecx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	init_function_start@PLT
	.loc 1 14563 0
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_to_current_binding_level
	.loc 1 14572 0
	movl	immediate_size_expand@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 14573 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %edx
	movzbl	298(%edx), %eax
	orl	$16, %eax
	movb	%al, 298(%edx)
	.loc 1 14576 0
	movl	-44(%ebp), %eax
	addl	$116, %eax
	movl	%eax, (%esp)
	call	begin_stmt_tree@PLT
	.loc 1 14579 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	announce_function@PLT
	.loc 1 14584 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6634
	movl	20(%ebp), %eax
	andl	$1, %eax
	testl	%eax, %eax
	jne	.L6634
	.loc 1 14587 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	cmpb	$4, %al
	je	.L6637
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	je	.L6637
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L6637
	.loc 1 14589 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	movl	%eax, -44(%ebp)
	.loc 1 14587 0
	jmp	.L6641
.L6637:
	.loc 1 14593 0
	movl	-44(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L6642
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L6642
	.loc 1 14594 0
	movl	-44(%ebp), %edx
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movl	8(%eax), %eax
	movl	16(%eax), %eax
	movl	56(%eax), %eax
	movl	%eax, 56(%edx)
.L6642:
	.loc 1 14596 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	check_default_args@PLT
.L6641:
	.loc 1 14598 0
	movl	-44(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -36(%ebp)
.L6634:
	.loc 1 14602 0
	movl	-44(%ebp), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 14603 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	-44(%ebp), %eax
	movl	%eax, 24(%edx)
	.loc 1 14607 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	44(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L6645
	.loc 1 14608 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movl	$0, 48(%eax)
.L6645:
	.loc 1 14610 0
	cmpl	$0, -40(%ebp)
	je	.L6647
	cmpl	$0, -28(%ebp)
	jne	.L6647
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L6647
.LBB150:
	.loc 1 14616 0
	movl	-44(%ebp), %eax
	movl	60(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 14618 0
	cmpl	$0, -16(%ebp)
	je	.L6651
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$36, %al
	jne	.L6651
	movl	$1, -72(%ebp)
	jmp	.L6654
.L6651:
	movl	$0, -72(%ebp)
.L6654:
	cmpl	$0, -72(%ebp)
	jne	.L6655
	leal	__FUNCTION__.33853@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14619, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6655:
	.loc 1 14620 0
	movl	-16(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$14, %al
	je	.L6657
	leal	__FUNCTION__.33853@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14621, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6657:
	.loc 1 14623 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %esi
	movl	$0, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_indirect_ref@PLT
	movl	%eax, 28(%esi)
	.loc 1 14625 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 24(%edx)
	.loc 1 14629 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 14630 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$64, %eax
	testb	%al, %al
	je	.L6659
	.loc 1 14632 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 36(%edx)
	.loc 1 14633 0
	movl	-16(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -16(%ebp)
.L6659:
	.loc 1 14635 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L6647
	.loc 1 14637 0
	movl	-16(%ebp), %eax
	movl	52(%eax), %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	224(%eax), %eax
	cmpl	%eax, %edx
	je	.L6662
	.loc 1 14638 0
	leal	__FUNCTION__.33853@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14638, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6662:
	.loc 1 14639 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 40(%edx)
.L6647:
.LBE150:
	.loc 1 14643 0
	movl	-44(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L6664
.LBB151:
	.loc 1 14645 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_function_context@PLT
	movl	%eax, -12(%ebp)
	.loc 1 14647 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L6666
	.loc 1 14648 0
	movl	-44(%ebp), %eax
	movzbl	33(%eax), %edx
	andl	$-2, %edx
	movb	%dl, 33(%eax)
.L6666:
	.loc 1 14650 0
	cmpl	$0, -12(%ebp)
	je	.L6672
	movl	-12(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6672
	movl	-12(%ebp), %eax
	movzbl	10(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6672
	.loc 1 14654 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	comdat_linkage@PLT
	jmp	.L6672
.L6664:
.LBE151:
	.loc 1 14659 0
	movl	interface_unknown@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6673
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testl	%eax, %eax
	je	.L6675
	movl	flag_alt_external_templates@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6673
.L6675:
	.loc 1 14663 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L6677
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L6677
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L6680
.L6677:
	.loc 1 14667 0
	movl	-44(%ebp), %ecx
	movl	%ecx, -68(%ebp)
	movl	interface_only@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6681
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6683
	movl	flag_implement_inlines@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6683
	movl	-44(%ebp), %eax
	movl	124(%eax), %eax
	testl	%eax, %eax
	jne	.L6683
.L6681:
	movl	$1, -64(%ebp)
	jmp	.L6686
.L6683:
	movl	$0, -64(%ebp)
.L6686:
	movzbl	-64(%ebp), %eax
	andl	$1, %eax
	movl	%eax, %edx
	andl	$1, %edx
	movl	-68(%ebp), %ecx
	movzbl	33(%ecx), %eax
	andl	$-2, %eax
	orl	%edx, %eax
	movl	-68(%ebp), %edx
	movb	%al, 33(%edx)
	.loc 1 14674 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	maybe_make_one_only@PLT
	.loc 1 14663 0
	jmp	.L6687
.L6680:
	.loc 1 14677 0
	movl	-44(%ebp), %eax
	movzbl	33(%eax), %edx
	andl	$-2, %edx
	movb	%dl, 33(%eax)
.L6687:
	.loc 1 14678 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	6(%edx), %eax
	andl	$-17, %eax
	movb	%al, 6(%edx)
	.loc 1 14679 0
	movl	-44(%ebp), %edx
	movzbl	38(%edx), %eax
	orl	$4, %eax
	movb	%al, 38(%edx)
	.loc 1 14659 0
	jmp	.L6672
.L6673:
	.loc 1 14681 0
	movl	interface_unknown@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6688
	movl	interface_only@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6688
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testl	%eax, %eax
	je	.L6691
	movl	flag_alt_external_templates@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6688
.L6691:
	.loc 1 14690 0
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	comdat_linkage@PLT
	.loc 1 14691 0
	movl	-44(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$-2, %eax
	movb	%al, 33(%edx)
	.loc 1 14692 0
	movl	-44(%ebp), %edx
	movzbl	38(%edx), %eax
	orl	$4, %eax
	movb	%al, 38(%edx)
	.loc 1 14693 0
	movl	-44(%ebp), %edx
	movzbl	34(%edx), %eax
	orl	$-128, %eax
	movb	%al, 34(%edx)
	.loc 1 14681 0
	jmp	.L6672
.L6688:
	.loc 1 14699 0
	movl	-44(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$-2, %eax
	movb	%al, 33(%edx)
	.loc 1 14701 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	jne	.L6693
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	shrb	%al
	andl	$3, %eax
	movzbl	%al, %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6695
.L6693:
	movl	-44(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L6695
	movl	-44(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_function_context@PLT
	testl	%eax, %eax
	jne	.L6695
	.loc 1 14706 0
	movl	-44(%ebp), %eax
	movzbl	34(%eax), %edx
	orl	$-128, %edx
	movb	%dl, 34(%eax)
	.loc 1 14701 0
	jmp	.L6672
.L6695:
	.loc 1 14708 0
	movl	-44(%ebp), %eax
	movzbl	38(%eax), %edx
	orl	$4, %edx
	movb	%dl, 38(%eax)
.L6672:
	.loc 1 14711 0
	movl	$0, (%esp)
	call	pushlevel@PLT
	.loc 1 14712 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6698
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6698
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -60(%ebp)
	jmp	.L6701
.L6698:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -60(%ebp)
.L6701:
	movl	-60(%ebp), %ecx
	movzbl	60(%ecx), %eax
	andl	$-4, %eax
	orl	$1, %eax
	movl	-60(%ebp), %edx
	movb	%al, 60(%edx)
	.loc 1 14714 0
	movl	function_depth@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	1(%eax), %edx
	movl	function_depth@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 14716 0
	movl	-44(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L6702
	.loc 1 14718 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %esi
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	$32, (%esp)
	call	build_decl@PLT
	movl	%eax, 20(%esi)
	.loc 1 14719 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	20(%eax), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 56(%edx)
.L6702:
	.loc 1 14722 0
	call	start_fname_decls@PLT
	.loc 1 14724 0
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	store_parm_decls
	.loc 1 14726 0
	movl	$1, -108(%ebp)
.L6552:
	movl	-108(%ebp), %eax
	.loc 1 14727 0
	subl	$-128, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE243:
	.size	start_function, .-start_function
	.section	.rodata
.LC452:
	.string	"parameter `%D' declared void"
	.text
	.type	store_parm_decls, @function
store_parm_decls:
.LFB244:
	.loc 1 14738 0
	pushl	%ebp
.LCFI890:
	movl	%esp, %ebp
.LCFI891:
	pushl	%esi
.LCFI892:
	pushl	%ebx
.LCFI893:
	subl	$32, %esp
.LCFI894:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14739 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -32(%ebp)
	.loc 1 14745 0
	movl	$0, -20(%ebp)
	.loc 1 14747 0
	cmpl	$0, 8(%ebp)
	je	.L6706
.LBB152:
	.loc 1 14754 0
	movl	8(%ebp), %eax
	movl	%eax, -16(%ebp)
	.loc 1 14759 0
	movl	$0, (%esp)
	call	storedecls
	.loc 1 14764 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	nreverse@PLT
	movl	%eax, -16(%ebp)
	.loc 1 14766 0
	movl	-16(%ebp), %eax
	movl	%eax, -28(%ebp)
	jmp	.L6708
.L6709:
	.loc 1 14768 0
	movl	-28(%ebp), %edx
	movl	(%edx), %eax
	movl	%eax, -12(%ebp)
	.loc 1 14769 0
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$36, %al
	jne	.L6710
	.loc 1 14771 0
	movl	-28(%ebp), %edx
	movl	52(%edx), %eax
	testl	%eax, %eax
	je	.L6712
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$6, %al
	je	.L6714
.L6712:
	.loc 1 14773 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	pushdecl@PLT
	.loc 1 14771 0
	jmp	.L6716
.L6714:
	.loc 1 14775 0
	movl	-28(%ebp), %edx
	movl	%edx, 4(%esp)
	leal	.LC452@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
	jmp	.L6716
.L6710:
	.loc 1 14781 0
	movl	-28(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 14782 0
	movl	-28(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	%eax, -20(%ebp)
.L6716:
	.loc 1 14766 0
	movl	-12(%ebp), %eax
	movl	%eax, -28(%ebp)
.L6708:
	cmpl	$0, -28(%ebp)
	jne	.L6709
	.loc 1 14789 0
	call	getdecls@PLT
	movl	-32(%ebp), %edx
	movl	%eax, 60(%edx)
	jmp	.L6718
.L6706:
.LBE152:
	.loc 1 14792 0
	movl	-32(%ebp), %eax
	movl	$0, 60(%eax)
.L6718:
	.loc 1 14798 0
	movl	-32(%ebp), %edx
	movl	60(%edx), %eax
	movl	%eax, 4(%esp)
	movl	-20(%ebp), %eax
	movl	%eax, (%esp)
	call	chainon@PLT
	movl	%eax, (%esp)
	call	storedecls
	.loc 1 14801 0
	movl	flag_exceptions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6724
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6724
	movl	flag_enforce_eh_specs@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6724
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L6724
	.loc 1 14804 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %esi
	call	begin_eh_spec_block@PLT
	movl	%eax, 32(%esi)
.L6724:
	.loc 1 14805 0
	addl	$32, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE244:
	.size	store_parm_decls, .-store_parm_decls
	.section	.rodata
	.type	__FUNCTION__.34507, @object
	.size	__FUNCTION__.34507, 19
__FUNCTION__.34507:
	.string	"save_function_data"
	.text
	.type	save_function_data, @function
save_function_data:
.LFB245:
	.loc 1 14815 0
	pushl	%ebp
.LCFI895:
	movl	%esp, %ebp
.LCFI896:
	pushl	%ebx
.LCFI897:
	subl	$36, %esp
.LCFI898:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14820 0
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	44(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L6726
	leal	__FUNCTION__.34507@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$14821, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6726:
	.loc 1 14824 0
	movl	$100, (%esp)
	call	ggc_alloc@PLT
	movl	%eax, -8(%ebp)
	.loc 1 14826 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, %ecx
	movl	$100, %eax
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	movl	%ecx, (%esp)
	call	memcpy@PLT
	.loc 1 14827 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 48(%edx)
	.loc 1 14830 0
	movl	-8(%ebp), %eax
	movl	$0, (%eax)
	.loc 1 14831 0
	movl	-8(%ebp), %eax
	movl	$0, 4(%eax)
	.loc 1 14832 0
	movl	-8(%ebp), %eax
	movl	$0, 76(%eax)
	.loc 1 14833 0
	movl	-8(%ebp), %eax
	movl	$0, 84(%eax)
	.loc 1 14834 0
	movl	-8(%ebp), %eax
	movl	$0, 88(%eax)
	.loc 1 14837 0
	movl	-8(%ebp), %eax
	movl	$1, 68(%eax)
	.loc 1 14842 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	124(%eax), %eax
	testl	%eax, %eax
	je	.L6730
	.loc 1 14844 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	124(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%edx, 92(%eax)
	.loc 1 14845 0
	movl	8(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$-9, %eax
	movb	%al, 33(%edx)
.L6730:
	.loc 1 14847 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE245:
	.size	save_function_data, .-save_function_data
	.type	begin_constructor_body, @function
begin_constructor_body:
.LFB246:
	.loc 1 14855 0
	pushl	%ebp
.LCFI899:
	movl	%esp, %ebp
.LCFI900:
	.loc 1 14856 0
	popl	%ebp
	ret
.LFE246:
	.size	begin_constructor_body, .-begin_constructor_body
	.type	finish_constructor_body, @function
finish_constructor_body:
.LFB247:
	.loc 1 14864 0
	pushl	%ebp
.LCFI901:
	movl	%esp, %ebp
.LCFI902:
	.loc 1 14865 0
	popl	%ebp
	ret
.LFE247:
	.size	finish_constructor_body, .-finish_constructor_body
	.type	begin_destructor_body, @function
begin_destructor_body:
.LFB248:
	.loc 1 14872 0
	pushl	%ebp
.LCFI903:
	movl	%esp, %ebp
.LCFI904:
	pushl	%ebx
.LCFI905:
	subl	$36, %esp
.LCFI906:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14889 0
	call	begin_if_stmt@PLT
	movl	%eax, -12(%ebp)
	.loc 1 14896 0
	movl	c_global_trees@GOT(%ebx), %eax
	movl	64(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	finish_if_stmt_cond@PLT
	.loc 1 14898 0
	movl	$0, (%esp)
	call	begin_compound_stmt@PLT
	movl	%eax, -8(%ebp)
	.loc 1 14903 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6736
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	24(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L6738
.L6736:
	movl	$0, -24(%ebp)
.L6738:
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	initialize_vtbl_ptrs@PLT
	.loc 1 14905 0
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	finish_compound_stmt@PLT
	.loc 1 14906 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_then_clause@PLT
	.loc 1 14907 0
	call	finish_if_stmt@PLT
	.loc 1 14911 0
	call	push_base_cleanups@PLT
	.loc 1 14912 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE248:
	.size	begin_destructor_body, .-begin_destructor_body
	.type	finish_destructor_body, @function
finish_destructor_body:
.LFB249:
	.loc 1 14919 0
	pushl	%ebp
.LCFI907:
	movl	%esp, %ebp
.LCFI908:
	pushl	%ebx
.LCFI909:
	subl	$52, %esp
.LCFI910:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14924 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$168, (%esp)
	call	build_stmt@PLT
	movl	%eax, (%esp)
	call	add_stmt@PLT
	.loc 1 14927 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	33(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6746
.LBB153:
	.loc 1 14930 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	$1, 8(%esp)
	movl	$153, 4(%esp)
	movl	%eax, (%esp)
	call	cxx_sizeof_or_alignof_type@PLT
	movl	%eax, -8(%ebp)
	.loc 1 14938 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6743
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	24(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L6745
.L6743:
	movl	$0, -24(%ebp)
.L6745:
	movl	$0, 16(%esp)
	movl	$67, 12(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	-24(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$183, (%esp)
	call	build_op_delete_call@PLT
	movl	%eax, -16(%ebp)
	.loc 1 14942 0
	call	begin_if_stmt@PLT
	movl	%eax, -12(%ebp)
	.loc 1 14943 0
	movl	global_trees@GOT(%ebx), %eax
	movl	48(%eax), %ecx
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	36(%eax), %edx
	movl	integer_types@GOT(%ebx), %eax
	movl	20(%eax), %eax
	movl	%ecx, 12(%esp)
	movl	%edx, 8(%esp)
	movl	%eax, 4(%esp)
	movl	$90, (%esp)
	call	build@PLT
	movl	%eax, %edx
	movl	-12(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	finish_if_stmt_cond@PLT
	.loc 1 14947 0
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_expr_stmt@PLT
	.loc 1 14948 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	finish_then_clause@PLT
	.loc 1 14949 0
	call	finish_if_stmt@PLT
.L6746:
.LBE153:
	.loc 1 14951 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE249:
	.size	finish_destructor_body, .-finish_destructor_body
.globl begin_function_body
	.type	begin_function_body, @function
begin_function_body:
.LFB250:
	.loc 1 14961 0
	pushl	%ebp
.LCFI911:
	movl	%esp, %ebp
.LCFI912:
	pushl	%ebx
.LCFI913:
	subl	$20, %esp
.LCFI914:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14964 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6748
	.loc 1 14970 0
	movl	$1, (%esp)
	call	keep_next_level@PLT
.L6748:
	.loc 1 14972 0
	movl	$0, (%esp)
	call	begin_compound_stmt@PLT
	movl	%eax, -8(%ebp)
	.loc 1 14973 0
	movl	-8(%ebp), %edx
	movzbl	11(%edx), %eax
	orl	$8, %eax
	movb	%al, 11(%edx)
	.loc 1 14975 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6750
	.loc 1 14977 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L6752
	.loc 1 14978 0
	call	begin_constructor_body
	jmp	.L6750
.L6752:
	.loc 1 14979 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L6750
	.loc 1 14980 0
	call	begin_destructor_body
.L6750:
	.loc 1 14982 0
	movl	-8(%ebp), %eax
	.loc 1 14983 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE250:
	.size	begin_function_body, .-begin_function_body
.globl finish_function_body
	.type	finish_function_body, @function
finish_function_body:
.LFB251:
	.loc 1 14997 0
	pushl	%ebp
.LCFI915:
	movl	%esp, %ebp
.LCFI916:
	pushl	%ebx
.LCFI917:
	subl	$20, %esp
.LCFI918:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 14999 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	finish_compound_stmt@PLT
	.loc 1 15001 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6762
	.loc 1 15003 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	je	.L6759
	.loc 1 15004 0
	call	finish_constructor_body
	jmp	.L6762
.L6759:
	.loc 1 15005 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	je	.L6762
	.loc 1 15006 0
	call	finish_destructor_body
.L6762:
	.loc 1 15007 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE251:
	.size	finish_function_body, .-finish_function_body
	.section	.rodata
	.type	__FUNCTION__.34635, @object
	.size	__FUNCTION__.34635, 16
__FUNCTION__.34635:
	.string	"finish_function"
	.align 4
.LC453:
	.string	"no return statement in function returning non-void"
	.text
.globl finish_function
	.type	finish_function, @function
finish_function:
.LFB252:
	.loc 1 15022 0
	pushl	%ebp
.LCFI919:
	movl	%esp, %ebp
.LCFI920:
	pushl	%ebx
.LCFI921:
	subl	$68, %esp
.LCFI922:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15023 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -40(%ebp)
	.loc 1 15024 0
	movl	$0, -28(%ebp)
	.loc 1 15025 0
	movl	8(%ebp), %eax
	andl	$2, %eax
	testl	%eax, %eax
	setne	%al
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	.loc 1 15030 0
	cmpl	$0, -40(%ebp)
	jne	.L6764
	.loc 1 15031 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, -60(%ebp)
	jmp	.L6766
.L6764:
	.loc 1 15033 0
	movl	-40(%ebp), %edx
	movl	4(%edx), %eax
	movzbl	8(%eax), %eax
	cmpb	$17, %al
	jne	.L6767
	movl	-40(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6767
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6767
.LBB154:
	.loc 1 15037 0
	movl	-40(%ebp), %edx
	movl	56(%edx), %eax
	movl	%eax, -16(%ebp)
	.loc 1 15038 0
	movl	-16(%ebp), %eax
	movl	92(%eax), %eax
	movl	56(%eax), %eax
	cmpl	-40(%ebp), %eax
	jne	.L6767
	.loc 1 15039 0
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	292(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, %edx
	movl	cp_global_trees@GOT(%ebx), %eax
	movl	%edx, 292(%eax)
.L6767:
.LBE154:
	.loc 1 15042 0
	movl	function_depth@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	$1, %eax
	setg	%al
	movzbl	%al, %eax
	movl	%eax, -20(%ebp)
	.loc 1 15043 0
	movl	-40(%ebp), %edx
	movl	4(%edx), %eax
	movl	%eax, -32(%ebp)
	.loc 1 15049 0
	call	current_stmt_tree@PLT
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6772
	leal	__FUNCTION__.34635@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$15049, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6772:
	.loc 1 15051 0
	call	finish_fname_decls@PLT
	.loc 1 15055 0
	movl	-40(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$31, %al
	je	.L6774
	movl	-40(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$-64, %al
	jne	.L6776
.L6774:
	movl	-40(%ebp), %edx
	movl	136(%edx), %eax
	testl	%eax, %eax
	je	.L6776
	movl	-40(%ebp), %edx
	movl	136(%edx), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	jne	.L6778
.L6776:
	.loc 1 15057 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L6779
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L6781
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L6779
.L6781:
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L6783
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	sete	-53(%ebp)
	jmp	.L6785
.L6783:
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	sete	-53(%ebp)
.L6785:
	cmpb	$0, -53(%ebp)
	je	.L6779
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L6779
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	52(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	252(%eax), %eax
	cmpl	%eax, %edx
	jne	.L6779
	.loc 1 15063 0
	movl	global_trees@GOT(%ebx), %eax
	movl	44(%eax), %eax
	movl	%eax, (%esp)
	call	finish_return_stmt@PLT
.L6779:
	.loc 1 15068 0
	movl	flag_exceptions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6778
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6778
	movl	flag_enforce_eh_specs@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6778
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L6778
	.loc 1 15071 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	32(%eax), %edx
	movl	current_function_decl@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	4(%eax), %eax
	movl	76(%eax), %eax
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	finish_eh_spec_block@PLT
.L6778:
	.loc 1 15077 0
	movl	-40(%ebp), %eax
	addl	$116, %eax
	movl	%eax, (%esp)
	call	finish_stmt_tree@PLT
	.loc 1 15080 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6793
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movzbl	72(%eax), %eax
	andl	$1, %eax
	xorl	$1, %eax
	testb	%al, %al
	je	.L6793
	movl	flag_non_call_exceptions@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6793
	.loc 1 15083 0
	movl	-40(%ebp), %edx
	movzbl	10(%edx), %eax
	orl	$2, %eax
	movl	-40(%ebp), %edx
	movb	%al, 10(%edx)
.L6793:
	.loc 1 15092 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6797
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6797
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -52(%ebp)
	jmp	.L6800
.L6797:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -52(%ebp)
.L6800:
	movl	-52(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$1, %al
	je	.L6801
	.loc 1 15095 0
	movl	global_dc@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	220(%eax), %eax
	testl	%eax, %eax
	jne	.L6803
	.loc 1 15096 0
	leal	__FUNCTION__.34635@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$15096, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6803:
	.loc 1 15100 0
	movl	$0, 4(%esp)
	movl	$157, (%esp)
	call	build_stmt@PLT
	movl	-40(%ebp), %edx
	movl	%eax, 116(%edx)
	.loc 1 15102 0
	jmp	.L6848
.L6806:
	.loc 1 15104 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6807
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6807
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -48(%ebp)
	jmp	.L6810
.L6807:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -48(%ebp)
.L6810:
	movl	-48(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$2, %al
	jne	.L6811
	.loc 1 15105 0
	call	pop_nested_class@PLT
	jmp	.L6805
.L6811:
	.loc 1 15107 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	$0, (%esp)
	call	poplevel@PLT
.L6805:
.L6848:
	.loc 1 15102 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6813
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6813
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -44(%ebp)
	jmp	.L6816
.L6813:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -44(%ebp)
.L6816:
	movl	-44(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$3, %eax
	cmpb	$1, %al
	jne	.L6806
.L6801:
	.loc 1 15110 0
	movl	$1, 8(%esp)
	movl	$0, 4(%esp)
	movl	$1, (%esp)
	call	poplevel@PLT
	.loc 1 15116 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L6817
.LBB155:
	.loc 1 15118 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 15121 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-12(%ebp), %eax
	je	.L6819
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movzbl	296(%eax), %eax
	andl	$2, %eax
	testb	%al, %al
	jne	.L6819
	movl	struct_value_incoming_rtx@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6819
	movl	-40(%ebp), %edx
	movl	4(%edx), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	aggregate_value_p@PLT
	testl	%eax, %eax
	je	.L6819
	movl	-40(%ebp), %edx
	movl	68(%edx), %eax
	movl	24(%eax), %eax
	movl	%eax, -8(%ebp)
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	chain_member@PLT
	testl	%eax, %eax
	je	.L6819
	.loc 1 15141 0
	movl	-40(%ebp), %edx
	movl	64(%edx), %eax
	movl	40(%eax), %eax
	andl	$16777215, %eax
	movl	-12(%ebp), %edx
	movl	%eax, %ecx
	andl	$16777215, %ecx
	movl	40(%edx), %eax
	andl	$-16777216, %eax
	orl	%ecx, %eax
	movl	%eax, 40(%edx)
	.loc 1 15142 0
	movl	-40(%ebp), %edx
	addl	$116, %edx
	movl	-12(%ebp), %eax
	movl	%eax, 8(%esp)
	movl	nullify_returns_r@GOT(%ebx), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	walk_tree_without_duplicates@PLT
	.loc 1 15121 0
	jmp	.L6817
.L6819:
	.loc 1 15149 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	$0, 44(%eax)
	.loc 1 15153 0
	movl	-40(%ebp), %edx
	movl	136(%edx), %eax
	movl	$0, 36(%eax)
.L6817:
.LBE155:
	.loc 1 15159 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L6825
	.loc 1 15160 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	%eax, -28(%ebp)
.L6825:
	.loc 1 15163 0
	movl	-40(%ebp), %edx
	movl	64(%edx), %eax
	movl	-40(%ebp), %edx
	movl	%edx, 56(%eax)
	.loc 1 15167 0
	movl	-40(%ebp), %edx
	movl	68(%edx), %eax
	movl	-40(%ebp), %edx
	movl	%edx, 28(%eax)
	.loc 1 15170 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6827
	.loc 1 15171 0
	movl	-40(%ebp), %eax
	movl	%eax, (%esp)
	call	save_function_data
.L6827:
	.loc 1 15182 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6829
	movl	-40(%ebp), %edx
	movl	%edx, (%esp)
	call	calls_setjmp_p@PLT
	testl	%eax, %eax
	je	.L6829
	.loc 1 15183 0
	movl	-40(%ebp), %edx
	movzbl	37(%edx), %eax
	orl	$2, %eax
	movl	-40(%ebp), %edx
	movb	%al, 37(%edx)
.L6829:
	.loc 1 15186 0
	movl	warn_return_type@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6832
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6832
	movl	-32(%ebp), %eax
	movl	4(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$6, %al
	je	.L6832
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	jne	.L6832
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	jne	.L6832
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	jne	.L6832
	movl	-40(%ebp), %edx
	movl	64(%edx), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	jne	.L6832
	movl	-40(%ebp), %edx
	movzbl	33(%edx), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6832
	.loc 1 15196 0
	leal	.LC453@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	warning@PLT
.L6832:
	.loc 1 15199 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	free_after_parsing@PLT
	.loc 1 15202 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	free_after_compilation@PLT
	.loc 1 15203 0
	movl	cfun@GOT(%ebx), %eax
	movl	$0, (%eax)
	.loc 1 15209 0
	cmpl	$0, -24(%ebp)
	je	.L6841
	.loc 1 15210 0
	call	maybe_end_member_template_processing@PLT
.L6841:
	.loc 1 15213 0
	cmpl	$0, -28(%ebp)
	je	.L6843
	.loc 1 15214 0
	call	pop_nested_class@PLT
.L6843:
	.loc 1 15216 0
	movl	function_depth@GOT(%ebx), %eax
	movl	(%eax), %eax
	leal	-1(%eax), %edx
	movl	function_depth@GOT(%ebx), %eax
	movl	%edx, (%eax)
	.loc 1 15219 0
	cmpl	$0, -20(%ebp)
	jne	.L6845
	.loc 1 15223 0
	movl	current_function_decl@GOT(%ebx), %eax
	movl	$0, (%eax)
.L6845:
	.loc 1 15225 0
	movl	-40(%ebp), %eax
	movl	%eax, -60(%ebp)
.L6766:
	movl	-60(%ebp), %eax
	.loc 1 15226 0
	addl	$68, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE252:
	.size	finish_function, .-finish_function
	.section	.rodata
	.align 4
.LC454:
	.string	"`%D' is already defined in class `%T'"
	.text
.globl start_method
	.type	start_method, @function
start_method:
.LFB253:
	.loc 1 15252 0
	pushl	%ebp
.LCFI923:
	movl	%esp, %ebp
.LCFI924:
	pushl	%ebx
.LCFI925:
	subl	$52, %esp
.LCFI926:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15254 0
	leal	16(%ebp), %eax
	movl	%eax, 16(%esp)
	movl	$0, 12(%esp)
	movl	$7, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	12(%ebp), %eax
	movl	%eax, (%esp)
	call	grokdeclarator@PLT
	movl	%eax, -8(%ebp)
	.loc 1 15257 0
	movl	-8(%ebp), %eax
	testl	%eax, %eax
	jne	.L6850
	.loc 1 15258 0
	movl	$0, -32(%ebp)
	jmp	.L6852
.L6850:
	.loc 1 15260 0
	movl	16(%ebp), %eax
	testl	%eax, %eax
	je	.L6853
	.loc 1 15261 0
	movl	16(%ebp), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	leal	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	cplus_decl_attributes@PLT
.L6853:
	.loc 1 15264 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %edx
	movl	-8(%ebp), %eax
	cmpl	%eax, %edx
	jne	.L6855
	.loc 1 15265 0
	movl	-8(%ebp), %eax
	movl	%eax, -32(%ebp)
	jmp	.L6852
.L6855:
	.loc 1 15267 0
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	je	.L6857
	.loc 1 15269 0
	movl	$0, -32(%ebp)
	jmp	.L6852
.L6857:
	.loc 1 15271 0
	movl	-8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6859
	.loc 1 15273 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L6861
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	decl_assembler_name@PLT
	movl	56(%eax), %eax
	movl	8(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L6863
.L6861:
	movl	$0, -28(%ebp)
.L6863:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	cmpl	%eax, -28(%ebp)
	je	.L6864
	.loc 1 15275 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L6864
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movzbl	8(%eax), %eax
	cmpb	$39, %al
	je	.L6864
	.loc 1 15277 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	-8(%ebp), %edx
	movl	%eax, 8(%esp)
	movl	%edx, 4(%esp)
	leal	.LC454@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L6864:
	.loc 1 15280 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, -32(%ebp)
	jmp	.L6852
.L6859:
	.loc 1 15283 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	check_template_shadow@PLT
	.loc 1 15285 0
	movl	-8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	(%edx), %eax
	orl	$1, %eax
	movb	%al, (%edx)
	.loc 1 15287 0
	movl	-8(%ebp), %edx
	movzbl	37(%edx), %eax
	andl	$-9, %eax
	movb	%al, 37(%edx)
	.loc 1 15288 0
	movl	flag_default_inline@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6868
	.loc 1 15289 0
	movl	-8(%ebp), %eax
	movzbl	33(%eax), %edx
	orl	$8, %edx
	movb	%dl, 33(%eax)
.L6868:
	.loc 1 15292 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	je	.L6870
	movl	-8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	6(%eax), %eax
	andl	$6, %eax
	cmpb	$4, %al
	je	.L6870
	.loc 1 15293 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	push_template_decl@PLT
	movl	%eax, -8(%ebp)
.L6870:
	.loc 1 15295 0
	movl	-8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	5(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	jne	.L6873
	.loc 1 15297 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6875
	.loc 1 15299 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	copy_node@PLT
	movl	%eax, -8(%ebp)
	.loc 1 15300 0
	movl	-8(%ebp), %eax
	movl	$0, (%eax)
.L6875:
	.loc 1 15302 0
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	grok_special_member_properties@PLT
.L6873:
	.loc 1 15305 0
	movl	-8(%ebp), %eax
	movl	$0, 12(%esp)
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	%eax, (%esp)
	call	cp_finish_decl@PLT
	.loc 1 15308 0
	movl	$0, (%esp)
	call	pushlevel@PLT
	.loc 1 15309 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6877
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6877
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -24(%ebp)
	jmp	.L6880
.L6877:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -24(%ebp)
.L6880:
	movl	-24(%ebp), %edx
	movzbl	60(%edx), %eax
	andl	$-4, %eax
	orl	$1, %eax
	movl	-24(%ebp), %edx
	movb	%al, 60(%edx)
	.loc 1 15311 0
	movl	-8(%ebp), %edx
	movzbl	38(%edx), %eax
	orl	$1, %eax
	movb	%al, 38(%edx)
	.loc 1 15312 0
	movl	-8(%ebp), %eax
	movl	%eax, -32(%ebp)
.L6852:
	movl	-32(%ebp), %eax
	.loc 1 15313 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE253:
	.size	start_method, .-start_method
	.section	.rodata
	.type	__FUNCTION__.35007, @object
	.size	__FUNCTION__.35007, 14
__FUNCTION__.35007:
	.string	"finish_method"
	.text
.globl finish_method
	.type	finish_method, @function
finish_method:
.LFB254:
	.loc 1 15330 0
	pushl	%ebp
.LCFI927:
	movl	%esp, %ebp
.LCFI928:
	pushl	%esi
.LCFI929:
	pushl	%ebx
.LCFI930:
	subl	$48, %esp
.LCFI931:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15331 0
	movl	8(%ebp), %eax
	movl	%eax, -32(%ebp)
	.loc 1 15336 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	cmpl	8(%ebp), %eax
	jne	.L6883
	.loc 1 15337 0
	movl	8(%ebp), %edx
	movl	%edx, -40(%ebp)
	jmp	.L6885
.L6883:
	.loc 1 15339 0
	movl	-32(%ebp), %edx
	movl	68(%edx), %eax
	movl	%eax, -12(%ebp)
	.loc 1 15351 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6886
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L6886
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	84(%eax), %eax
	movl	%eax, -36(%ebp)
	jmp	.L6889
.L6886:
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	100(%eax), %eax
	movl	%eax, -36(%ebp)
.L6889:
	movl	-36(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
	jmp	.L6890
.L6891:
	.loc 1 15353 0
	movl	-28(%ebp), %edx
	movl	52(%edx), %eax
	testl	%eax, %eax
	je	.L6892
	.loc 1 15354 0
	movl	-28(%ebp), %edx
	movl	52(%edx), %eax
	movl	-28(%ebp), %edx
	movl	%edx, 4(%esp)
	movl	%eax, (%esp)
	call	pop_binding
.L6892:
	.loc 1 15355 0
	movl	-28(%ebp), %edx
	movzbl	8(%edx), %eax
	cmpb	$31, %al
	jne	.L6894
	leal	__FUNCTION__.35007@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$15355, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6894:
	.loc 1 15356 0
	movl	-28(%ebp), %eax
	movl	$0, 56(%eax)
	.loc 1 15351 0
	movl	-28(%ebp), %edx
	movl	(%edx), %edx
	movl	%edx, -28(%ebp)
.L6890:
	cmpl	$0, -28(%ebp)
	jne	.L6891
	.loc 1 15359 0
	movl	$0, 8(%esp)
	movl	$0, 4(%esp)
	movl	$0, (%esp)
	call	poplevel@PLT
	.loc 1 15361 0
	movl	-12(%ebp), %eax
	movl	-32(%ebp), %edx
	movl	%eax, 68(%edx)
	.loc 1 15366 0
	movl	-32(%ebp), %edx
	movl	136(%edx), %eax
	movzbl	5(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6897
	.loc 1 15368 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %esi
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	92(%eax), %eax
	movl	44(%eax), %eax
	movl	%eax, 8(%esp)
	movl	-32(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, 44(%esi)
	.loc 1 15370 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, 8(%ebp)
.L6897:
	.loc 1 15373 0
	movl	8(%ebp), %edx
	movl	%edx, -40(%ebp)
.L6885:
	movl	-40(%ebp), %eax
	.loc 1 15374 0
	addl	$48, %esp
	popl	%ebx
	popl	%esi
	popl	%ebp
	ret
.LFE254:
	.size	finish_method, .-finish_method
	.section	.rodata
	.type	__FUNCTION__.35053, @object
	.size	__FUNCTION__.35053, 30
__FUNCTION__.35053:
	.string	"maybe_register_incomplete_var"
	.text
.globl maybe_register_incomplete_var
	.type	maybe_register_incomplete_var, @function
maybe_register_incomplete_var:
.LFB255:
	.loc 1 15383 0
	pushl	%ebp
.LCFI932:
	movl	%esp, %ebp
.LCFI933:
	pushl	%ebx
.LCFI934:
	subl	$36, %esp
.LCFI935:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15384 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$35, %al
	je	.L6901
	leal	__FUNCTION__.35053@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$15384, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6901:
	.loc 1 15387 0
	movl	scope_chain@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	64(%eax), %edx
	movl	60(%eax), %eax
	orl	%edx, %eax
	testl	%eax, %eax
	jne	.L6920
	movl	8(%ebp), %eax
	movl	4(%eax), %edx
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	%eax, %edx
	je	.L6920
	movl	8(%ebp), %eax
	movzbl	33(%eax), %eax
	andl	$1, %eax
	testb	%al, %al
	je	.L6920
.LBB156:
	.loc 1 15390 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 15392 0
	jmp	.L6907
.L6908:
	.loc 1 15393 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -8(%ebp)
.L6907:
	.loc 1 15392 0
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	je	.L6908
	.loc 1 15394 0
	movl	-8(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 15396 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	jne	.L6910
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6912
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6910
.L6912:
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6914
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6914
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6914
	movl	-8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6914
	movl	-8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	jne	.L6914
.L6910:
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L6920
	movl	-8(%ebp), %eax
	movl	92(%eax), %eax
	movzbl	7(%eax), %eax
	andl	$-128, %eax
	testb	%al, %al
	je	.L6920
.L6914:
	.loc 1 15400 0
	movl	incomplete_vars@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_cons@PLT
	movl	%eax, incomplete_vars@GOTOFF(%ebx)
.L6920:
.LBE156:
	.loc 1 15402 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE255:
	.size	maybe_register_incomplete_var, .-maybe_register_incomplete_var
	.section	.rodata
	.type	__FUNCTION__.35106, @object
	.size	__FUNCTION__.35106, 14
__FUNCTION__.35106:
	.string	"complete_vars"
	.text
.globl complete_vars
	.type	complete_vars, @function
complete_vars:
.LFB256:
	.loc 1 15411 0
	pushl	%ebp
.LCFI936:
	movl	%esp, %ebp
.LCFI937:
	pushl	%ebx
.LCFI938:
	subl	$36, %esp
.LCFI939:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15412 0
	leal	incomplete_vars@GOTOFF(%ebx), %eax
	movl	%eax, -12(%ebp)
	.loc 1 15414 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$21, %al
	je	.L6922
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$22, %al
	jne	.L6924
.L6922:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-62, %al
	je	.L6925
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-59, %al
	je	.L6925
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-57, %al
	je	.L6925
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$-60, %al
	je	.L6925
	movl	8(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$32, %eax
	testb	%al, %al
	je	.L6924
.L6925:
	movl	$1, -24(%ebp)
	jmp	.L6930
.L6924:
	movl	$0, -24(%ebp)
.L6930:
	cmpl	$0, -24(%ebp)
	jne	.L6939
	leal	__FUNCTION__.35106@GOTOFF(%ebx), %eax
	movl	%eax, 8(%esp)
	movl	$15414, 4(%esp)
	leal	.LC0@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	fancy_abort@PLT
.L6934:
	.loc 1 15417 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	16(%eax), %eax
	movl	$0, 8(%esp)
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	comptypes@PLT
	testl	%eax, %eax
	je	.L6935
.LBB157:
	.loc 1 15419 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	20(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 15422 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	complete_type@PLT
	.loc 1 15424 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	(%eax), %edx
	movl	-12(%ebp), %eax
	movl	%edx, (%eax)
	jmp	.L6933
.L6935:
.LBE157:
	.loc 1 15427 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -12(%ebp)
.L6933:
.L6939:
	.loc 1 15415 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	jne	.L6934
	.loc 1 15429 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE256:
	.size	complete_vars, .-complete_vars
.globl cxx_maybe_build_cleanup
	.type	cxx_maybe_build_cleanup, @function
cxx_maybe_build_cleanup:
.LFB257:
	.loc 1 15437 0
	pushl	%ebp
.LCFI940:
	movl	%esp, %ebp
.LCFI941:
	pushl	%ebx
.LCFI942:
	subl	$52, %esp
.LCFI943:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15438 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 1 15440 0
	movl	global_trees@GOT(%ebx), %eax
	movl	(%eax), %eax
	cmpl	-16(%ebp), %eax
	je	.L6941
	movl	-16(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	je	.L6941
.LBB158:
	.loc 1 15442 0
	movl	$515, -12(%ebp)
	.loc 1 15445 0
	movl	-16(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$19, %al
	jne	.L6944
	.loc 1 15446 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	jmp	.L6946
.L6944:
	.loc 1 15449 0
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	cxx_mark_addressable@PLT
	.loc 1 15450 0
	movl	$0, 8(%esp)
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$123, (%esp)
	call	build_unary_op@PLT
	movl	%eax, -8(%ebp)
.L6946:
	.loc 1 15454 0
	movl	-16(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6947
	movl	flag_expensive_optimizations@GOT(%ebx), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L6949
.L6947:
	.loc 1 15456 0
	orl	$8, -12(%ebp)
.L6949:
	.loc 1 15458 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %edx
	movl	$0, 16(%esp)
	movl	-12(%ebp), %eax
	movl	%eax, 12(%esp)
	movl	$5, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_delete@PLT
	movl	%eax, -8(%ebp)
	.loc 1 15461 0
	movl	-16(%ebp), %eax
	movzbl	11(%eax), %eax
	andl	$8, %eax
	testb	%al, %al
	je	.L6950
	movl	-16(%ebp), %eax
	movzbl	39(%eax), %eax
	andl	$4, %eax
	testb	%al, %al
	jne	.L6950
	.loc 1 15463 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_vbase_delete@PLT
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	build_tree_list@PLT
	movl	%eax, 8(%esp)
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	tree_cons@PLT
	movl	%eax, (%esp)
	call	build_compound_expr@PLT
	movl	%eax, -8(%ebp)
.L6950:
	.loc 1 15466 0
	movl	-8(%ebp), %eax
	movl	%eax, -24(%ebp)
	jmp	.L6953
.L6941:
.LBE158:
	.loc 1 15468 0
	movl	$0, -24(%ebp)
.L6953:
	movl	-24(%ebp), %eax
	.loc 1 15469 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE257:
	.size	cxx_maybe_build_cleanup, .-cxx_maybe_build_cleanup
.globl finish_stmt
	.type	finish_stmt, @function
finish_stmt:
.LFB258:
	.loc 1 15475 0
	pushl	%ebp
.LCFI944:
	movl	%esp, %ebp
.LCFI945:
	pushl	%ebx
.LCFI946:
	subl	$4, %esp
.LCFI947:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15479 0
	call	current_stmt_tree@PLT
	movl	$0, 4(%eax)
	.loc 1 15480 0
	addl	$4, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE258:
	.size	finish_stmt, .-finish_stmt
	.section	.rodata
	.align 4
.LC455:
	.string	"static member function `%#D' declared with type qualifiers"
	.text
.globl revert_static_member_fn
	.type	revert_static_member_fn, @function
revert_static_member_fn:
.LFB259:
	.loc 1 15488 0
	pushl	%ebp
.LCFI948:
	movl	%esp, %ebp
.LCFI949:
	pushl	%ebx
.LCFI950:
	subl	$36, %esp
.LCFI951:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15490 0
	movl	8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, -12(%ebp)
	.loc 1 15491 0
	movl	-12(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 15493 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	testl	%eax, %eax
	je	.L6958
	.loc 1 15495 0
	movl	8(%ebp), %eax
	movl	%eax, 4(%esp)
	leal	.LC455@GOTOFF(%ebx), %eax
	movl	%eax, (%esp)
	call	error@PLT
.L6958:
	.loc 1 15498 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -8(%ebp)
	.loc 1 15499 0
	movl	-12(%ebp), %eax
	movl	4(%eax), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 4(%esp)
	movl	%edx, (%esp)
	call	build_function_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 15500 0
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_type_quals@PLT
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_qualified_type@PLT
	movl	%eax, -16(%ebp)
	.loc 1 15501 0
	movl	-12(%ebp), %eax
	movl	76(%eax), %eax
	movl	%eax, 4(%esp)
	movl	-16(%ebp), %eax
	movl	%eax, (%esp)
	call	build_exception_variant@PLT
	movl	%eax, -16(%ebp)
	.loc 1 15503 0
	movl	8(%ebp), %edx
	movl	-16(%ebp), %eax
	movl	%eax, 4(%edx)
	.loc 1 15504 0
	movl	8(%ebp), %eax
	movl	60(%eax), %eax
	testl	%eax, %eax
	je	.L6960
	.loc 1 15505 0
	movl	8(%ebp), %eax
	movl	60(%eax), %eax
	movl	(%eax), %edx
	movl	8(%ebp), %eax
	movl	%edx, 60(%eax)
.L6960:
	.loc 1 15506 0
	movl	8(%ebp), %eax
	movl	136(%eax), %edx
	movzbl	5(%edx), %eax
	orl	$16, %eax
	movb	%al, 5(%edx)
	.loc 1 15507 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE259:
	.size	revert_static_member_fn, .-revert_static_member_fn
.globl cxx_push_function_context
	.type	cxx_push_function_context, @function
cxx_push_function_context:
.LFB260:
	.loc 1 15515 0
	pushl	%ebp
.LCFI952:
	movl	%esp, %ebp
.LCFI953:
	pushl	%ebx
.LCFI954:
	subl	$20, %esp
.LCFI955:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15518 0
	movl	$100, (%esp)
	call	ggc_alloc_cleared@PLT
	movl	%eax, -8(%ebp)
	.loc 1 15519 0
	movl	8(%ebp), %edx
	movl	-8(%ebp), %eax
	movl	%eax, 288(%edx)
	.loc 1 15523 0
	movl	cfun@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	288(%eax), %eax
	movl	$0, 68(%eax)
	.loc 1 15527 0
	call	current_stmt_tree@PLT
	movl	$1, 12(%eax)
	.loc 1 15528 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE260:
	.size	cxx_push_function_context, .-cxx_push_function_context
.globl cxx_pop_function_context
	.type	cxx_pop_function_context, @function
cxx_pop_function_context:
.LFB261:
	.loc 1 15536 0
	pushl	%ebp
.LCFI956:
	movl	%esp, %ebp
.LCFI957:
	.loc 1 15537 0
	movl	8(%ebp), %eax
	movl	$0, 288(%eax)
	.loc 1 15538 0
	popl	%ebp
	ret
.LFE261:
	.size	cxx_pop_function_context, .-cxx_pop_function_context
.globl cp_tree_node_structure
	.type	cp_tree_node_structure, @function
cp_tree_node_structure:
.LFB262:
	.loc 1 15546 0
	pushl	%ebp
.LCFI958:
	movl	%esp, %ebp
.LCFI959:
	subl	$8, %esp
.LCFI960:
	.loc 1 15547 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	cmpl	$193, -8(%ebp)
	je	.L6972
	cmpl	$193, -8(%ebp)
	ja	.L6976
	cmpl	$152, -8(%ebp)
	je	.L6970
	cmpl	$180, -8(%ebp)
	je	.L6971
	cmpl	$1, -8(%ebp)
	je	.L6969
	jmp	.L6968
.L6976:
	cmpl	$204, -8(%ebp)
	je	.L6974
	cmpl	$205, -8(%ebp)
	je	.L6975
	cmpl	$202, -8(%ebp)
	je	.L6973
	jmp	.L6968
.L6973:
	.loc 1 15549 0
	movl	$2, -4(%ebp)
	jmp	.L6977
.L6969:
	.loc 1 15550 0
	movl	$2, -4(%ebp)
	jmp	.L6977
.L6974:
	.loc 1 15551 0
	movl	$5, -4(%ebp)
	jmp	.L6977
.L6972:
	.loc 1 15552 0
	movl	$3, -4(%ebp)
	jmp	.L6977
.L6971:
	.loc 1 15553 0
	movl	$4, -4(%ebp)
	jmp	.L6977
.L6975:
	.loc 1 15554 0
	movl	$6, -4(%ebp)
	jmp	.L6977
.L6970:
	.loc 1 15555 0
	movl	$7, -4(%ebp)
	jmp	.L6977
.L6968:
	.loc 1 15556 0
	movl	$1, -4(%ebp)
.L6977:
	movl	-4(%ebp), %eax
	.loc 1 15558 0
	leave
	ret
.LFE262:
	.size	cp_tree_node_structure, .-cp_tree_node_structure
.globl identifier_global_value
	.type	identifier_global_value, @function
identifier_global_value:
.LFB263:
	.loc 1 15566 0
	pushl	%ebp
.LCFI961:
	movl	%esp, %ebp
.LCFI962:
	pushl	%ebx
.LCFI963:
	subl	$20, %esp
.LCFI964:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15567 0
	movl	global_namespace@GOT(%ebx), %eax
	movl	(%eax), %eax
	movl	%eax, 4(%esp)
	movl	8(%ebp), %eax
	movl	%eax, (%esp)
	call	namespace_binding@PLT
	.loc 1 15568 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE263:
	.size	identifier_global_value, .-identifier_global_value
.globl build_void_list_node
	.type	build_void_list_node, @function
build_void_list_node:
.LFB264:
	.loc 1 15573 0
	pushl	%ebp
.LCFI965:
	movl	%esp, %ebp
.LCFI966:
	pushl	%ebx
.LCFI967:
	subl	$36, %esp
.LCFI968:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 1 15574 0
	movl	global_trees@GOT(%ebx), %eax
	movl	128(%eax), %eax
	movl	%eax, 4(%esp)
	movl	$0, (%esp)
	call	build_tree_list@PLT
	movl	%eax, -8(%ebp)
	.loc 1 15575 0
	movl	-8(%ebp), %edx
	movzbl	11(%edx), %eax
	orl	$4, %eax
	movb	%al, 11(%edx)
	.loc 1 15576 0
	movl	-8(%ebp), %eax
	.loc 1 15577 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE264:
	.size	build_void_list_node, .-build_void_list_node
	.type	cp_missing_noreturn_ok_p, @function
cp_missing_noreturn_ok_p:
.LFB265:
	.loc 1 15582 0
	pushl	%ebp
.LCFI969:
	movl	%esp, %ebp
.LCFI970:
	subl	$4, %esp
.LCFI971:
	call	__i686.get_pc_thunk.cx
	addl	$_GLOBAL_OFFSET_TABLE_, %ecx
	.loc 1 15584 0
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L6984
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L6986
	movl	8(%ebp), %eax
	movzbl	38(%eax), %eax
	andl	$16, %eax
	testb	%al, %al
	jne	.L6984
.L6986:
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L6988
	movl	8(%ebp), %eax
	movl	136(%eax), %eax
	movzbl	4(%eax), %eax
	testb	%al, %al
	jne	.L6984
	jmp	.L6991
.L6988:
	movl	8(%ebp), %eax
	movzbl	8(%eax), %eax
	cmpb	$31, %al
	jne	.L6984
.L6991:
	movl	8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L6984
	movl	8(%ebp), %eax
	movl	52(%eax), %edx
	movl	global_trees@GOT(%ecx), %eax
	movl	252(%eax), %eax
	cmpl	%eax, %edx
	jne	.L6984
	movl	$1, -4(%ebp)
	jmp	.L6994
.L6984:
	movl	$0, -4(%ebp)
.L6994:
	movl	-4(%ebp), %eax
	.loc 1 15585 0
	leave
	ret
.LFE265:
	.size	cp_missing_noreturn_ok_p, .-cp_missing_noreturn_ok_p
.globl gt_ggc_mx_named_label_list
	.type	gt_ggc_mx_named_label_list, @function
gt_ggc_mx_named_label_list:
.LFB266:
	.file 3 "../../../kg++fe/gnu/MIPS/gt-cp-decl.h"
	.loc 3 26 0
	pushl	%ebp
.LCFI972:
	movl	%esp, %ebp
.LCFI973:
	pushl	%ebx
.LCFI974:
	subl	$20, %esp
.LCFI975:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 3 27 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 3 28 0
	cmpl	$0, -8(%ebp)
	je	.L7012
	cmpl	$1, -8(%ebp)
	je	.L7012
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7012
	.loc 3 30 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7001
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7001:
	.loc 3 31 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7003
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7003:
	.loc 3 32 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7005
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7005:
	.loc 3 33 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7007
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7007:
	.loc 3 34 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7009
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7009:
	.loc 3 35 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7012
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_named_label_list@PLT
.L7012:
	.loc 3 37 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE266:
	.size	gt_ggc_mx_named_label_list, .-gt_ggc_mx_named_label_list
.globl gt_ggc_mx_named_label_use_list
	.type	gt_ggc_mx_named_label_use_list, @function
gt_ggc_mx_named_label_use_list:
.LFB267:
	.loc 3 42 0
	pushl	%ebp
.LCFI976:
	movl	%esp, %ebp
.LCFI977:
	pushl	%ebx
.LCFI978:
	subl	$20, %esp
.LCFI979:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 3 43 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 3 44 0
	cmpl	$0, -8(%ebp)
	je	.L7025
	cmpl	$1, -8(%ebp)
	je	.L7025
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7025
	.loc 3 46 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7018
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7018:
	.loc 3 47 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7020
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7020:
	.loc 3 48 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7022
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7022:
	.loc 3 49 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7025
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_named_label_use_list@PLT
.L7025:
	.loc 3 51 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE267:
	.size	gt_ggc_mx_named_label_use_list, .-gt_ggc_mx_named_label_use_list
.globl gt_ggc_mx_binding_table_s
	.type	gt_ggc_mx_binding_table_s, @function
gt_ggc_mx_binding_table_s:
.LFB268:
	.loc 3 56 0
	pushl	%ebp
.LCFI980:
	movl	%esp, %ebp
.LCFI981:
	pushl	%ebx
.LCFI982:
	subl	$20, %esp
.LCFI983:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 3 57 0
	movl	8(%ebp), %eax
	movl	%eax, -12(%ebp)
	.loc 3 58 0
	cmpl	$0, -12(%ebp)
	je	.L7036
	cmpl	$1, -12(%ebp)
	je	.L7036
	movl	-12(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7036
	.loc 3 60 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7036
.LBB159:
	.loc 3 62 0
	movl	-12(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	.loc 3 63 0
	movl	$0, -8(%ebp)
	jmp	.L7032
.L7033:
	.loc 3 64 0
	movl	-12(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7034
	movl	-12(%ebp), %eax
	movl	(%eax), %edx
	movl	-8(%ebp), %eax
	sall	$2, %eax
	leal	(%edx,%eax), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_binding_entry_s@PLT
.L7034:
	.loc 3 63 0
	addl	$1, -8(%ebp)
.L7032:
	movl	-12(%ebp), %eax
	movl	4(%eax), %eax
	cmpl	-8(%ebp), %eax
	ja	.L7033
.L7036:
.LBE159:
	.loc 3 68 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE268:
	.size	gt_ggc_mx_binding_table_s, .-gt_ggc_mx_binding_table_s
.globl gt_ggc_mx_cp_binding_level
	.type	gt_ggc_mx_cp_binding_level, @function
gt_ggc_mx_cp_binding_level:
.LFB269:
	.loc 3 73 0
	pushl	%ebp
.LCFI984:
	movl	%esp, %ebp
.LCFI985:
	pushl	%ebx
.LCFI986:
	subl	$20, %esp
.LCFI987:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 3 74 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 3 75 0
	cmpl	$0, -8(%ebp)
	je	.L7069
	cmpl	$1, -8(%ebp)
	je	.L7069
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7069
	.loc 3 77 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7042
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7042:
	.loc 3 78 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7044
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7044:
	.loc 3 79 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7046
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_varray_head_tag@PLT
.L7046:
	.loc 3 80 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7048
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7048:
	.loc 3 81 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7050
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_binding_table_s@PLT
.L7050:
	.loc 3 82 0
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7052
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7052:
	.loc 3 83 0
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7054
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7054:
	.loc 3 84 0
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	je	.L7056
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7056:
	.loc 3 85 0
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L7058
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7058:
	.loc 3 86 0
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L7060
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7060:
	.loc 3 87 0
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L7062
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7062:
	.loc 3 88 0
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7064
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7064:
	.loc 3 89 0
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L7066
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7066:
	.loc 3 90 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L7069
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7069:
	.loc 3 92 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE269:
	.size	gt_ggc_mx_cp_binding_level, .-gt_ggc_mx_cp_binding_level
.globl gt_ggc_mx_cxx_saved_binding
	.type	gt_ggc_mx_cxx_saved_binding, @function
gt_ggc_mx_cxx_saved_binding:
.LFB270:
	.loc 3 97 0
	pushl	%ebp
.LCFI988:
	movl	%esp, %ebp
.LCFI989:
	pushl	%ebx
.LCFI990:
	subl	$20, %esp
.LCFI991:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 3 98 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 3 99 0
	cmpl	$0, -8(%ebp)
	je	.L7084
	cmpl	$1, -8(%ebp)
	je	.L7084
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7084
	.loc 3 101 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7075
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cxx_saved_binding@PLT
.L7075:
	.loc 3 102 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7077
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7077:
	.loc 3 103 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7079
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cxx_binding@PLT
.L7079:
	.loc 3 104 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7081
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7081:
	.loc 3 105 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7084
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7084:
	.loc 3 107 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE270:
	.size	gt_ggc_mx_cxx_saved_binding, .-gt_ggc_mx_cxx_saved_binding
.globl gt_ggc_r_gt_cp_decl_h
	.section	.data.rel.ro
	.align 32
	.type	gt_ggc_r_gt_cp_decl_h, @object
	.size	gt_ggc_r_gt_cp_decl_h, 64
gt_ggc_r_gt_cp_decl_h:
	.long	typename_htab
	.long	1
	.long	4
	.long	gt_ggc_m_P9tree_node4htab
	.long	incomplete_vars
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	global_type_node
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	0
	.long	0
	.long	0
	.long	0
.globl gt_ggc_rd_gt_cp_decl_h
	.section	.data.rel.ro.local
	.align 32
	.type	gt_ggc_rd_gt_cp_decl_h, @object
	.size	gt_ggc_rd_gt_cp_decl_h, 64
gt_ggc_rd_gt_cp_decl_h:
	.long	free_bindings
	.long	1
	.long	4
	.long	0
	.long	free_binding_level
	.long	1
	.long	4
	.long	0
	.long	free_binding_entry
	.long	1
	.long	4
	.long	0
	.long	0
	.long	0
	.long	0
	.long	0
	.text
.globl gt_ggc_mx_saved_scope
	.type	gt_ggc_mx_saved_scope, @function
gt_ggc_mx_saved_scope:
.LFB271:
	.file 4 "../../../kg++fe/gnu/MIPS/gtype-cp.h"
	.loc 4 26 0
	pushl	%ebp
.LCFI992:
	movl	%esp, %ebp
.LCFI993:
	pushl	%ebx
.LCFI994:
	subl	$20, %esp
.LCFI995:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 27 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 4 28 0
	cmpl	$0, -8(%ebp)
	je	.L7129
	cmpl	$1, -8(%ebp)
	je	.L7129
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7129
	.loc 4 30 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7090
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cxx_saved_binding@PLT
.L7090:
	.loc 4 31 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7092
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7092:
	.loc 4 32 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7094
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7094:
	.loc 4 33 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7096
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7096:
	.loc 4 34 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7098
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7098:
	.loc 4 35 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7100
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7100:
	.loc 4 36 0
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7102
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7102:
	.loc 4 37 0
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7104
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_varray_head_tag@PLT
.L7104:
	.loc 4 38 0
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	je	.L7106
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7106:
	.loc 4 39 0
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L7108
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7108:
	.loc 4 40 0
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L7110
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7110:
	.loc 4 41 0
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L7112
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7112:
	.loc 4 42 0
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7114
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7114:
	.loc 4 43 0
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L7116
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7116:
	.loc 4 44 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L7118
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7118:
	.loc 4 45 0
	movl	-8(%ebp), %eax
	movl	80(%eax), %eax
	testl	%eax, %eax
	je	.L7120
	movl	-8(%ebp), %eax
	movl	80(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7120:
	.loc 4 46 0
	movl	-8(%ebp), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L7122
	movl	-8(%ebp), %eax
	movl	84(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7122:
	.loc 4 47 0
	movl	-8(%ebp), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	je	.L7124
	movl	-8(%ebp), %eax
	movl	96(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7124:
	.loc 4 48 0
	movl	-8(%ebp), %eax
	movl	100(%eax), %eax
	testl	%eax, %eax
	je	.L7126
	movl	-8(%ebp), %eax
	movl	100(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7126:
	.loc 4 49 0
	movl	-8(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L7129
	movl	-8(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_saved_scope@PLT
.L7129:
	.loc 4 51 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE271:
	.size	gt_ggc_mx_saved_scope, .-gt_ggc_mx_saved_scope
.globl gt_ggc_mx_lang_id2
	.type	gt_ggc_mx_lang_id2, @function
gt_ggc_mx_lang_id2:
.LFB272:
	.loc 4 56 0
	pushl	%ebp
.LCFI996:
	movl	%esp, %ebp
.LCFI997:
	pushl	%ebx
.LCFI998:
	subl	$20, %esp
.LCFI999:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 57 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 4 58 0
	cmpl	$0, -8(%ebp)
	je	.L7140
	cmpl	$1, -8(%ebp)
	je	.L7140
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7140
	.loc 4 60 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7135
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7135:
	.loc 4 61 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7137
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7137:
	.loc 4 62 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7140
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7140:
	.loc 4 64 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE272:
	.size	gt_ggc_mx_lang_id2, .-gt_ggc_mx_lang_id2
.globl gt_ggc_mx_binding_entry_s
	.type	gt_ggc_mx_binding_entry_s, @function
gt_ggc_mx_binding_entry_s:
.LFB273:
	.loc 4 69 0
	pushl	%ebp
.LCFI1000:
	movl	%esp, %ebp
.LCFI1001:
	pushl	%ebx
.LCFI1002:
	subl	$20, %esp
.LCFI1003:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 70 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 4 71 0
	cmpl	$0, -8(%ebp)
	je	.L7151
	cmpl	$1, -8(%ebp)
	je	.L7151
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7151
	.loc 4 73 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7146
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_binding_entry_s@PLT
.L7146:
	.loc 4 74 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7148
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7148:
	.loc 4 75 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7151
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7151:
	.loc 4 77 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE273:
	.size	gt_ggc_mx_binding_entry_s, .-gt_ggc_mx_binding_entry_s
.globl gt_ggc_mx_cxx_binding
	.type	gt_ggc_mx_cxx_binding, @function
gt_ggc_mx_cxx_binding:
.LFB274:
	.loc 4 82 0
	pushl	%ebp
.LCFI1004:
	movl	%esp, %ebp
.LCFI1005:
	pushl	%ebx
.LCFI1006:
	subl	$36, %esp
.LCFI1007:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 83 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 4 84 0
	cmpl	$0, -8(%ebp)
	je	.L7168
	cmpl	$1, -8(%ebp)
	je	.L7168
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7168
	.loc 4 86 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7157
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cxx_binding@PLT
.L7157:
	.loc 4 87 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7159
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7159:
	.loc 4 88 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7161
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7161:
	.loc 4 89 0
	movl	-8(%ebp), %eax
	movzbl	16(%eax), %eax
	andl	$1, %eax
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	cmpl	$0, -24(%ebp)
	je	.L7163
	cmpl	$1, -24(%ebp)
	je	.L7164
	jmp	.L7168
.L7163:
	.loc 4 92 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7168
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 93 0
	jmp	.L7168
.L7164:
	.loc 4 95 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7168
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7168:
	.loc 4 101 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE274:
	.size	gt_ggc_mx_cxx_binding, .-gt_ggc_mx_cxx_binding
.globl gt_ggc_mx_lang_tree_node
	.type	gt_ggc_mx_lang_tree_node, @function
gt_ggc_mx_lang_tree_node:
.LFB275:
	.loc 4 106 0
	pushl	%ebp
.LCFI1008:
	movl	%esp, %ebp
.LCFI1009:
	pushl	%ebx
.LCFI1010:
	subl	$52, %esp
.LCFI1011:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 107 0
	movl	8(%ebp), %eax
	movl	%eax, -28(%ebp)
	.loc 4 108 0
	movl	-28(%ebp), %eax
	movl	%eax, -24(%ebp)
	.loc 4 109 0
	jmp	.L7170
.L7171:
	.loc 4 110 0
	movl	-24(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -24(%ebp)
.L7170:
	.loc 4 109 0
	cmpl	$0, -24(%ebp)
	je	.L7175
	cmpl	$1, -24(%ebp)
	je	.L7175
	movl	-24(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	je	.L7171
	.loc 4 111 0
	jmp	.L7175
.L7176:
	.loc 4 113 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	cp_tree_node_structure@PLT
	movl	%eax, -52(%ebp)
	cmpl	$7, -52(%ebp)
	ja	.L7177
	movl	-52(%ebp), %eax
	sall	$2, %eax
	movl	.L7186@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L7186:
	.long	.L7178@GOTOFF
	.long	.L7179@GOTOFF
	.long	.L7180@GOTOFF
	.long	.L7181@GOTOFF
	.long	.L7182@GOTOFF
	.long	.L7183@GOTOFF
	.long	.L7184@GOTOFF
	.long	.L7185@GOTOFF
	.text
.L7178:
	.loc 4 116 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7187
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7187:
	.loc 4 117 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 118 0
	jmp	.L7177
.L7179:
	.loc 4 120 0
	movl	-28(%ebp), %eax
	movl	%eax, (%esp)
	call	tree_node_structure@PLT
	movl	%eax, -48(%ebp)
	cmpl	$12, -48(%ebp)
	ja	.L7177
	movl	-48(%ebp), %eax
	sall	$2, %eax
	movl	.L7205@GOTOFF(%eax,%ebx), %eax
	addl	%ebx, %eax
	jmp	*%eax
	.section	.rodata
	.align 4
	.align 4
.L7205:
	.long	.L7192@GOTOFF
	.long	.L7193@GOTOFF
	.long	.L7194@GOTOFF
	.long	.L7195@GOTOFF
	.long	.L7196@GOTOFF
	.long	.L7197@GOTOFF
	.long	.L7198@GOTOFF
	.long	.L7199@GOTOFF
	.long	.L7200@GOTOFF
	.long	.L7201@GOTOFF
	.long	.L7202@GOTOFF
	.long	.L7203@GOTOFF
	.long	.L7204@GOTOFF
	.text
.L7192:
	.loc 4 123 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7206
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7206:
	.loc 4 124 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 125 0
	jmp	.L7177
.L7193:
	.loc 4 127 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7210
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7210:
	.loc 4 128 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7212
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7212:
	.loc 4 129 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
	.loc 4 130 0
	jmp	.L7177
.L7194:
	.loc 4 132 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7216
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7216:
	.loc 4 133 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7218
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7218:
	.loc 4 134 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7220
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7220:
	.loc 4 135 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_real_value@PLT
	.loc 4 136 0
	jmp	.L7177
.L7195:
	.loc 4 138 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7224
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7224:
	.loc 4 139 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7226
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7226:
	.loc 4 140 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7228
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7228:
	.loc 4 141 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 142 0
	jmp	.L7177
.L7196:
	.loc 4 144 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7232
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7232:
	.loc 4 145 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7234
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7234:
	.loc 4 146 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
	.loc 4 147 0
	jmp	.L7177
.L7197:
	.loc 4 149 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7238
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7238:
	.loc 4 150 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7240
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7240:
	.loc 4 151 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7242
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7242:
	.loc 4 152 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7244
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7244:
	.loc 4 153 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 154 0
	jmp	.L7177
.L7198:
	.loc 4 156 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7248
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7248:
	.loc 4 157 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 158 0
	jmp	.L7177
.L7199:
	.loc 4 160 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7252
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7252:
	.loc 4 161 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7254
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7254:
	.loc 4 162 0
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7256
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7256:
	.loc 4 163 0
	movl	-28(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7258
	movl	-28(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7258:
	.loc 4 164 0
	movl	-28(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L7260
	movl	-28(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7260:
	.loc 4 165 0
	movl	-28(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L7262
	movl	-28(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7262:
	.loc 4 166 0
	movl	-28(%ebp), %eax
	movl	60(%eax), %eax
	testl	%eax, %eax
	je	.L7264
	movl	-28(%ebp), %eax
	movl	60(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7264:
	.loc 4 167 0
	movl	-28(%ebp), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L7266
	movl	-28(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7266:
	.loc 4 168 0
	movl	-28(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L7268
	movl	-28(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7268:
	.loc 4 169 0
	movl	-28(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L7270
	movl	-28(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7270:
	.loc 4 170 0
	movl	-28(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L7272
	movl	-28(%ebp), %eax
	movl	92(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7272:
	.loc 4 171 0
	movl	-28(%ebp), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	je	.L7274
	movl	-28(%ebp), %eax
	movl	96(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7274:
	.loc 4 172 0
	movl	-28(%ebp), %eax
	movl	100(%eax), %eax
	testl	%eax, %eax
	je	.L7276
	movl	-28(%ebp), %eax
	movl	100(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7276:
	.loc 4 173 0
	movl	-28(%ebp), %eax
	movl	104(%eax), %eax
	testl	%eax, %eax
	je	.L7278
	movl	-28(%ebp), %eax
	movl	104(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7278:
	.loc 4 174 0
	movl	-28(%ebp), %eax
	movl	108(%eax), %eax
	testl	%eax, %eax
	je	.L7280
	movl	-28(%ebp), %eax
	movl	108(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7280:
	.loc 4 175 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -44(%ebp)
	cmpl	$36, -44(%ebp)
	je	.L7284
	cmpl	$38, -44(%ebp)
	je	.L7285
	cmpl	$31, -44(%ebp)
	je	.L7283
	jmp	.L7282
.L7283:
	.loc 4 178 0
	movl	-28(%ebp), %eax
	movl	112(%eax), %eax
	testl	%eax, %eax
	je	.L7282
	movl	-28(%ebp), %eax
	movl	112(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_function@PLT
	.loc 4 179 0
	jmp	.L7282
.L7284:
	.loc 4 181 0
	movl	-28(%ebp), %eax
	movl	112(%eax), %eax
	testl	%eax, %eax
	je	.L7282
	movl	-28(%ebp), %eax
	movl	112(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
	.loc 4 182 0
	jmp	.L7282
.L7285:
	.loc 4 184 0
	movl	-28(%ebp), %eax
	movl	112(%eax), %eax
	testl	%eax, %eax
	je	.L7282
	movl	-28(%ebp), %eax
	movl	112(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7282:
	.loc 4 189 0
	movl	-28(%ebp), %eax
	movl	116(%eax), %eax
	testl	%eax, %eax
	je	.L7291
	movl	-28(%ebp), %eax
	movl	116(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7291:
	.loc 4 190 0
	movl	-28(%ebp), %eax
	movl	120(%eax), %eax
	testl	%eax, %eax
	je	.L7293
	movl	-28(%ebp), %eax
	movl	120(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7293:
	.loc 4 191 0
	movl	-28(%ebp), %eax
	movl	124(%eax), %eax
	testl	%eax, %eax
	je	.L7295
	movl	-28(%ebp), %eax
	movl	124(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7295:
	.loc 4 192 0
	movl	-28(%ebp), %eax
	movl	136(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	136(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_decl@PLT
	.loc 4 193 0
	jmp	.L7177
.L7200:
	.loc 4 195 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7299
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7299:
	.loc 4 196 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7301
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7301:
	.loc 4 197 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7303
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7303:
	.loc 4 198 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7305
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7305:
	.loc 4 199 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7307
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7307:
	.loc 4 200 0
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7309
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7309:
	.loc 4 201 0
	movl	-28(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L7311
	movl	-28(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7311:
	.loc 4 202 0
	movl	-28(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7313
	movl	-28(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7313:
	.loc 4 203 0
	movl	debug_hooks@GOT(%ebx), %eax
	movl	(%eax), %edx
	movl	sdb_debug_hooks@GOT(%ebx), %eax
	cmpl	%eax, %edx
	je	.L7320
.L7320:
	.loc 4 210 0
	movl	-28(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L7321
	movl	-28(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7321:
	.loc 4 211 0
	movl	-28(%ebp), %eax
	movl	60(%eax), %eax
	testl	%eax, %eax
	je	.L7323
	movl	-28(%ebp), %eax
	movl	60(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7323:
	.loc 4 212 0
	movl	-28(%ebp), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L7325
	movl	-28(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7325:
	.loc 4 213 0
	movl	-28(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L7327
	movl	-28(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7327:
	.loc 4 214 0
	movl	-28(%ebp), %eax
	movl	72(%eax), %eax
	testl	%eax, %eax
	je	.L7329
	movl	-28(%ebp), %eax
	movl	72(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7329:
	.loc 4 215 0
	movl	-28(%ebp), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L7331
	movl	-28(%ebp), %eax
	movl	76(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7331:
	.loc 4 216 0
	movl	-28(%ebp), %eax
	movl	80(%eax), %eax
	testl	%eax, %eax
	je	.L7333
	movl	-28(%ebp), %eax
	movl	80(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7333:
	.loc 4 217 0
	movl	-28(%ebp), %eax
	movl	92(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	92(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_type@PLT
	.loc 4 218 0
	jmp	.L7177
.L7201:
	.loc 4 220 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7337
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7337:
	.loc 4 221 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7339
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7339:
	.loc 4 222 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7341
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7341:
	.loc 4 223 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 224 0
	jmp	.L7177
.L7202:
	.loc 4 226 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7345
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7345:
	.loc 4 227 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7347
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7347:
.LBB160:
	.loc 4 230 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, -16(%ebp)
	.loc 4 231 0
	movl	$0, -20(%ebp)
	jmp	.L7349
.L7350:
	.loc 4 232 0
	movl	-20(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	20(%edx,%eax,4), %eax
	testl	%eax, %eax
	je	.L7351
	movl	-20(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	20(%edx,%eax,4), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7351:
	.loc 4 231 0
	addl	$1, -20(%ebp)
.L7349:
	movl	-20(%ebp), %eax
	cmpl	-16(%ebp), %eax
	jb	.L7350
	.loc 4 235 0
	jmp	.L7177
.L7203:
.LBE160:
	.loc 4 237 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7354
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7354:
	.loc 4 238 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7356
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7356:
	.loc 4 239 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %eax
	movl	%eax, -40(%ebp)
	cmpl	$120, -40(%ebp)
	je	.L7361
	cmpl	$120, -40(%ebp)
	ja	.L7364
	cmpl	$55, -40(%ebp)
	je	.L7359
	cmpl	$56, -40(%ebp)
	je	.L7360
	jmp	.L7358
.L7364:
	cmpl	$122, -40(%ebp)
	je	.L7362
	cmpl	$138, -40(%ebp)
	je	.L7363
	jmp	.L7358
.L7359:
	.loc 4 242 0
	movl	-28(%ebp), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	je	.L7365
	movl	-28(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7365:
	.loc 4 243 0
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7367
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7367:
	.loc 4 244 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7369
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7369:
	.loc 4 245 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 246 0
	jmp	.L7177
.L7360:
	.loc 4 248 0
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7374
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7374:
	.loc 4 249 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7376
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7376:
	.loc 4 250 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 251 0
	jmp	.L7177
.L7362:
	.loc 4 253 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7380
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7380:
	.loc 4 254 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
	.loc 4 255 0
	jmp	.L7177
.L7363:
	.loc 4 257 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7384
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7384:
	.loc 4 258 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
	.loc 4 259 0
	jmp	.L7177
.L7361:
	.loc 4 261 0
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7388
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7388:
	.loc 4 262 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7390
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7390:
	.loc 4 263 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 264 0
	jmp	.L7177
.L7358:
.LBB161:
	.loc 4 268 0
	movl	-28(%ebp), %eax
	movzbl	8(%eax), %eax
	movzbl	%al, %edx
	movl	tree_code_length@GOT(%ebx), %eax
	movzbl	(%eax,%edx), %eax
	movzbl	%al, %eax
	movl	%eax, -8(%ebp)
	.loc 4 269 0
	movl	$0, -12(%ebp)
	jmp	.L7394
.L7395:
	.loc 4 270 0
	movl	-12(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	20(%edx,%eax,4), %eax
	testl	%eax, %eax
	je	.L7396
	movl	-12(%ebp), %eax
	movl	-28(%ebp), %edx
	movl	20(%edx,%eax,4), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7396:
	.loc 4 269 0
	addl	$1, -12(%ebp)
.L7394:
	movl	-12(%ebp), %eax
	cmpl	-8(%ebp), %eax
	jb	.L7395
	.loc 4 275 0
	jmp	.L7177
.L7204:
.LBE161:
	.loc 4 277 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7398
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7398:
	.loc 4 278 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7400
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7400:
	.loc 4 279 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7402
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7402:
	.loc 4 280 0
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7404
	movl	-28(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7404:
	.loc 4 281 0
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7406
	movl	-28(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7406:
	.loc 4 282 0
	movl	-28(%ebp), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	je	.L7408
	movl	-28(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7408:
	.loc 4 283 0
	movl	-28(%ebp), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L7410
	movl	-28(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7410:
	.loc 4 284 0
	movl	-28(%ebp), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 289 0
	jmp	.L7177
.L7181:
	.loc 4 291 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7413
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7413:
	.loc 4 292 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7415
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7415:
	.loc 4 293 0
	movl	-28(%ebp), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 294 0
	jmp	.L7177
.L7182:
	.loc 4 296 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7419
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7419:
	.loc 4 297 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7421
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7421:
	.loc 4 298 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7423
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_rtx_def@PLT
.L7423:
	.loc 4 299 0
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 300 0
	jmp	.L7177
.L7183:
	.loc 4 302 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7427
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7427:
	.loc 4 303 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7429
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7429:
	.loc 4 304 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 305 0
	jmp	.L7177
.L7184:
	.loc 4 307 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7433
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7433:
	.loc 4 308 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7435
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7435:
	.loc 4 309 0
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_z_candidate@PLT
	.loc 4 310 0
	jmp	.L7177
.L7185:
	.loc 4 312 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7439
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7439:
	.loc 4 313 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 314 0
	jmp	.L7177
.L7180:
	.loc 4 316 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7443
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7443:
	.loc 4 317 0
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7445
	movl	-28(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7445:
	.loc 4 318 0
	movl	-28(%ebp), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L7447
	movl	-28(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cxx_binding@PLT
.L7447:
	.loc 4 319 0
	movl	-28(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L7449
	movl	-28(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cxx_binding@PLT
.L7449:
	.loc 4 320 0
	movl	-28(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7451
	movl	-28(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7451:
	.loc 4 321 0
	movl	-28(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L7453
	movl	-28(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7453:
	.loc 4 322 0
	movl	-28(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L7177
	movl	-28(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_id2@PLT
.L7177:
	.loc 4 327 0
	movl	-28(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, -28(%ebp)
.L7175:
	.loc 4 111 0
	movl	-28(%ebp), %eax
	cmpl	-24(%ebp), %eax
	jne	.L7176
	.loc 4 329 0
	addl	$52, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE275:
	.size	gt_ggc_mx_lang_tree_node, .-gt_ggc_mx_lang_tree_node
.globl gt_ggc_mx_lang_decl
	.type	gt_ggc_mx_lang_decl, @function
gt_ggc_mx_lang_decl:
.LFB276:
	.loc 4 334 0
	pushl	%ebp
.LCFI1012:
	movl	%esp, %ebp
.LCFI1013:
	pushl	%ebx
.LCFI1014:
	subl	$36, %esp
.LCFI1015:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 335 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 4 336 0
	cmpl	$0, -8(%ebp)
	je	.L7488
	cmpl	$1, -8(%ebp)
	je	.L7488
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7488
	.loc 4 338 0
	movl	-8(%ebp), %eax
	movzbl	7(%eax), %eax
	shrb	$4, %al
	andl	$1, %eax
	movzbl	%al, %eax
	movl	%eax, -28(%ebp)
	cmpl	$0, -28(%ebp)
	je	.L7464
	cmpl	$1, -28(%ebp)
	je	.L7465
	jmp	.L7463
.L7464:
	.loc 4 341 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7463
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 342 0
	jmp	.L7463
.L7465:
	.loc 4 344 0
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	testl	%eax, %eax
	je	.L7463
	movl	-8(%ebp), %eax
	movl	8(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7463:
	.loc 4 349 0
	movl	-8(%ebp), %eax
	movzbl	7(%eax), %eax
	shrb	$5, %al
	andl	$1, %eax
	movzbl	%al, %eax
	testl	%eax, %eax
	je	.L7470
	jmp	.L7469
.L7470:
	.loc 4 352 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7469
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7469:
	.loc 4 360 0
	movl	-8(%ebp), %eax
	movzbl	7(%eax), %eax
	shrb	$6, %al
	andl	$1, %eax
	movzbl	%al, %eax
	cmpl	$1, %eax
	je	.L7473
	jmp	.L7488
.L7473:
	.loc 4 363 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7474
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7474:
	.loc 4 364 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7476
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7476:
	.loc 4 365 0
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7478
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7478:
	.loc 4 366 0
	movl	-8(%ebp), %eax
	movzbl	44(%eax), %eax
	andl	$1, %eax
	movzbl	%al, %edx
	movl	-8(%ebp), %eax
	movzbl	44(%eax), %eax
	shrb	%al
	andl	$1, %eax
	movzbl	%al, %eax
	addl	%eax, %edx
	movl	%edx, -24(%ebp)
	cmpl	$1, -24(%ebp)
	je	.L7481
	cmpl	$2, -24(%ebp)
	je	.L7482
	cmpl	$0, -24(%ebp)
	je	.L7480
	jmp	.L7488
.L7480:
	.loc 4 369 0
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7488
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 370 0
	jmp	.L7488
.L7482:
	.loc 4 372 0
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7488
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_unparsed_text@PLT
	.loc 4 373 0
	jmp	.L7488
.L7481:
	.loc 4 375 0
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7488
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_language_function@PLT
.L7488:
	.loc 4 385 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE276:
	.size	gt_ggc_mx_lang_decl, .-gt_ggc_mx_lang_decl
.globl gt_ggc_mx_lang_type
	.type	gt_ggc_mx_lang_type, @function
gt_ggc_mx_lang_type:
.LFB277:
	.loc 4 390 0
	pushl	%ebp
.LCFI1016:
	movl	%esp, %ebp
.LCFI1017:
	pushl	%ebx
.LCFI1018:
	subl	$36, %esp
.LCFI1019:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 391 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 4 392 0
	cmpl	$0, -8(%ebp)
	je	.L7527
	cmpl	$1, -8(%ebp)
	je	.L7527
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7527
	.loc 4 394 0
	movl	-8(%ebp), %eax
	movzbl	(%eax), %eax
	andl	$1, %eax
	movzbl	%al, %eax
	movl	%eax, -24(%ebp)
	cmpl	$0, -24(%ebp)
	je	.L7494
	cmpl	$1, -24(%ebp)
	je	.L7495
	jmp	.L7527
.L7495:
	.loc 4 399 0
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	testl	%eax, %eax
	je	.L7496
	movl	-8(%ebp), %eax
	movl	12(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7496:
	.loc 4 400 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7498
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7498:
	.loc 4 401 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7500
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7500:
	.loc 4 402 0
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7502
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7502:
	.loc 4 403 0
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7504
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7504:
	.loc 4 404 0
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	je	.L7506
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7506:
	.loc 4 405 0
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L7508
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_binding_table_s@PLT
.L7508:
	.loc 4 406 0
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L7510
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7510:
	.loc 4 407 0
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L7512
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7512:
	.loc 4 408 0
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	testl	%eax, %eax
	je	.L7514
	movl	-8(%ebp), %eax
	movl	48(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7514:
	.loc 4 409 0
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	testl	%eax, %eax
	je	.L7516
	movl	-8(%ebp), %eax
	movl	52(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7516:
	.loc 4 410 0
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	testl	%eax, %eax
	je	.L7518
	movl	-8(%ebp), %eax
	movl	56(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7518:
	.loc 4 411 0
	movl	-8(%ebp), %eax
	movl	60(%eax), %eax
	testl	%eax, %eax
	je	.L7520
	movl	-8(%ebp), %eax
	movl	60(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7520:
	.loc 4 412 0
	movl	-8(%ebp), %eax
	movl	64(%eax), %eax
	testl	%eax, %eax
	je	.L7522
	movl	-8(%ebp), %eax
	movl	64(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7522:
	.loc 4 413 0
	movl	-8(%ebp), %eax
	movl	68(%eax), %eax
	testl	%eax, %eax
	je	.L7527
	movl	-8(%ebp), %eax
	movl	68(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
	.loc 4 414 0
	jmp	.L7527
.L7494:
	.loc 4 416 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7527
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7527:
	.loc 4 422 0
	addl	$36, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE277:
	.size	gt_ggc_mx_lang_type, .-gt_ggc_mx_lang_type
.globl gt_ggc_mx_language_function
	.type	gt_ggc_mx_language_function, @function
gt_ggc_mx_language_function:
.LFB278:
	.loc 4 427 0
	pushl	%ebp
.LCFI1020:
	movl	%esp, %ebp
.LCFI1021:
	pushl	%ebx
.LCFI1022:
	subl	$20, %esp
.LCFI1023:
	call	__i686.get_pc_thunk.bx
	addl	$_GLOBAL_OFFSET_TABLE_, %ebx
	.loc 4 428 0
	movl	8(%ebp), %eax
	movl	%eax, -8(%ebp)
	.loc 4 429 0
	cmpl	$0, -8(%ebp)
	je	.L7562
	cmpl	$1, -8(%ebp)
	je	.L7562
	movl	-8(%ebp), %eax
	movl	%eax, (%esp)
	call	ggc_set_mark@PLT
	testl	%eax, %eax
	jne	.L7562
	.loc 4 431 0
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	testl	%eax, %eax
	je	.L7533
	movl	-8(%ebp), %eax
	movl	(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7533:
	.loc 4 432 0
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	testl	%eax, %eax
	je	.L7535
	movl	-8(%ebp), %eax
	movl	4(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7535:
	.loc 4 433 0
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	testl	%eax, %eax
	je	.L7537
	movl	-8(%ebp), %eax
	movl	16(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7537:
	.loc 4 434 0
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	testl	%eax, %eax
	je	.L7539
	movl	-8(%ebp), %eax
	movl	20(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7539:
	.loc 4 435 0
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	testl	%eax, %eax
	je	.L7541
	movl	-8(%ebp), %eax
	movl	24(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7541:
	.loc 4 436 0
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	testl	%eax, %eax
	je	.L7543
	movl	-8(%ebp), %eax
	movl	28(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7543:
	.loc 4 437 0
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	testl	%eax, %eax
	je	.L7545
	movl	-8(%ebp), %eax
	movl	32(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7545:
	.loc 4 438 0
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	testl	%eax, %eax
	je	.L7547
	movl	-8(%ebp), %eax
	movl	36(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7547:
	.loc 4 439 0
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	testl	%eax, %eax
	je	.L7549
	movl	-8(%ebp), %eax
	movl	40(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7549:
	.loc 4 440 0
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	testl	%eax, %eax
	je	.L7551
	movl	-8(%ebp), %eax
	movl	44(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_lang_tree_node@PLT
.L7551:
	.loc 4 441 0
	movl	-8(%ebp), %eax
	movl	76(%eax), %eax
	testl	%eax, %eax
	je	.L7553
	movl	-8(%ebp), %eax
	movl	76(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_named_label_use_list@PLT
.L7553:
	.loc 4 442 0
	movl	-8(%ebp), %eax
	movl	80(%eax), %eax
	testl	%eax, %eax
	je	.L7555
	movl	-8(%ebp), %eax
	movl	80(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_named_label_list@PLT
.L7555:
	.loc 4 443 0
	movl	-8(%ebp), %eax
	movl	84(%eax), %eax
	testl	%eax, %eax
	je	.L7557
	movl	-8(%ebp), %eax
	movl	84(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_cp_binding_level@PLT
.L7557:
	.loc 4 444 0
	movl	-8(%ebp), %eax
	movl	88(%eax), %eax
	testl	%eax, %eax
	je	.L7559
	movl	-8(%ebp), %eax
	movl	88(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_varray_head_tag@PLT
.L7559:
	.loc 4 445 0
	movl	-8(%ebp), %eax
	movl	96(%eax), %eax
	testl	%eax, %eax
	je	.L7562
	movl	-8(%ebp), %eax
	movl	96(%eax), %eax
	movl	%eax, (%esp)
	call	gt_ggc_mx_unparsed_text@PLT
.L7562:
	.loc 4 447 0
	addl	$20, %esp
	popl	%ebx
	popl	%ebp
	ret
.LFE278:
	.size	gt_ggc_mx_language_function, .-gt_ggc_mx_language_function
.globl gt_ggc_r_gtype_cp_h
	.section	.data.rel.ro
	.align 32
	.type	gt_ggc_r_gtype_cp_h, @object
	.size	gt_ggc_r_gtype_cp_h, 256
gt_ggc_r_gtype_cp_h:
	.long	got_object
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	got_scope
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	lastiddecl
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	last_function_parms
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	static_dtors
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	static_ctors
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	static_aggregates
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	local_classes
	.long	1
	.long	4
	.long	gt_ggc_mx_varray_head_tag
	.long	anonymous_namespace_name
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	integer_three_node
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	integer_two_node
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	error_mark_list
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	global_namespace
	.long	1
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	scope_chain
	.long	1
	.long	4
	.long	gt_ggc_mx_saved_scope
	.long	cp_global_trees
	.long	74
	.long	4
	.long	gt_ggc_mx_lang_tree_node
	.long	0
	.long	0
	.long	0
	.long	0
.globl gt_ggc_rtab
	.align 32
	.type	gt_ggc_rtab, @object
	.size	gt_ggc_rtab, 136
gt_ggc_rtab:
	.long	gt_ggc_r_gtype_desc_c
	.long	gt_ggc_r_gt_alias_h
	.long	gt_ggc_r_gt_cselib_h
	.long	gt_ggc_r_gt_dwarf2out_h
	.long	gt_ggc_r_gt_emit_rtl_h
	.long	gt_ggc_r_gt_except_h
	.long	gt_ggc_r_gt_explow_h
	.long	gt_ggc_r_gt_expr_h
	.long	gt_ggc_r_gt_fold_const_h
	.long	gt_ggc_r_gt_function_h
	.long	gt_ggc_r_gt_gcse_h
	.long	gt_ggc_r_gt_integrate_h
	.long	gt_ggc_r_gt_optabs_h
	.long	gt_ggc_r_gt_profile_h
	.long	gt_ggc_r_gt_ra_build_h
	.long	gt_ggc_r_gt_regclass_h
	.long	gt_ggc_r_gt_reg_stack_h
	.long	gt_ggc_r_gt_sdbout_h
	.long	gt_ggc_r_gt_stor_layout_h
	.long	gt_ggc_r_gt_varasm_h
	.long	gt_ggc_r_gt_mips_h
	.long	gt_ggc_r_gt_cp_mangle_h
	.long	gt_ggc_r_gtype_cp_h
	.long	gt_ggc_r_gt_cp_call_h
	.long	gt_ggc_r_gt_cp_decl_h
	.long	gt_ggc_r_gt_cp_decl2_h
	.long	gt_ggc_r_gt_cp_parse_h
	.long	gt_ggc_r_gt_cp_pt_h
	.long	gt_ggc_r_gt_cp_repo_h
	.long	gt_ggc_r_gt_cp_spew_h
	.long	gt_ggc_r_gt_cp_tree_h
	.long	gt_ggc_r_gt_c_common_h
	.long	gt_ggc_r_gt_c_pragma_h
	.long	0
.globl gt_ggc_deletable_rtab
	.align 4
	.type	gt_ggc_deletable_rtab, @object
	.size	gt_ggc_deletable_rtab, 24
gt_ggc_deletable_rtab:
	.long	gt_ggc_rd_gt_bitmap_h
	.long	gt_ggc_rd_gt_cselib_h
	.long	gt_ggc_rd_gt_emit_rtl_h
	.long	gt_ggc_rd_gt_lists_h
	.long	gt_ggc_rd_gt_cp_decl_h
	.long	0
.globl gt_ggc_cache_rtab
	.align 4
	.type	gt_ggc_cache_rtab, @object
	.size	gt_ggc_cache_rtab, 16
gt_ggc_cache_rtab:
	.long	gt_ggc_rc_gt_emit_rtl_h
	.long	gt_ggc_rc_gt_fold_const_h
	.long	gt_ggc_rc_gt_tree_h
	.long	0
	.local	global_type_node
	.comm	global_type_node,4,4
	.local	only_namespace_names
	.comm	only_namespace_names,4,4
	.local	free_binding_entry
	.comm	free_binding_entry,4,4
	.local	free_binding_level
	.comm	free_binding_level,4,4
	.local	keep_next_level_flag
	.comm	keep_next_level_flag,4,4
	.local	incomplete_vars
	.comm	incomplete_vars,4,4
	.local	free_bindings
	.comm	free_bindings,4,4
	.local	switch_stack
	.comm	switch_stack,4,4
	.local	typename_htab
	.comm	typename_htab,4,4
	.comm	cp_global_trees,296,32
	.comm	scope_chain,4,4
	.comm	error_mark_list,4,4
	.comm	integer_two_node,4,4
	.comm	integer_three_node,4,4
	.comm	anonymous_namespace_name,4,4
	.comm	function_depth,4,4
	.comm	static_aggregates,4,4
	.comm	have_extern_spec,1,1
	.comm	last_function_parms,4,4
	.section	.debug_frame,"",@progbits
.Lframe0:
	.long	.LECIE0-.LSCIE0
.LSCIE0:
	.long	0xffffffff
	.byte	0x1
	.string	""
	.uleb128 0x1
	.sleb128 -4
	.byte	0x8
	.byte	0xc
	.uleb128 0x4
	.uleb128 0x4
	.byte	0x88
	.uleb128 0x1
	.align 4
.LECIE0:
.LSFDE0:
	.long	.LEFDE0-.LASFDE0
.LASFDE0:
	.long	.Lframe0
	.long	.LFB20
	.long	.LFE20-.LFB20
	.byte	0x4
	.long	.LCFI0-.LFB20
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1-.LCFI0
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE0:
.LSFDE2:
	.long	.LEFDE2-.LASFDE2
.LASFDE2:
	.long	.Lframe0
	.long	.LFB17
	.long	.LFE17-.LFB17
	.byte	0x4
	.long	.LCFI3-.LFB17
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI4-.LCFI3
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI6-.LCFI4
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE2:
.LSFDE4:
	.long	.LEFDE4-.LASFDE4
.LASFDE4:
	.long	.Lframe0
	.long	.LFB22
	.long	.LFE22-.LFB22
	.byte	0x4
	.long	.LCFI7-.LFB22
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI8-.LCFI7
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE4:
.LSFDE6:
	.long	.LEFDE6-.LASFDE6
.LASFDE6:
	.long	.Lframe0
	.long	.LFB25
	.long	.LFE25-.LFB25
	.byte	0x4
	.long	.LCFI10-.LFB25
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI11-.LCFI10
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE6:
.LSFDE8:
	.long	.LEFDE8-.LASFDE8
.LASFDE8:
	.long	.Lframe0
	.long	.LFB16
	.long	.LFE16-.LFB16
	.byte	0x4
	.long	.LCFI13-.LFB16
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI14-.LCFI13
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE8:
.LSFDE10:
	.long	.LEFDE10-.LASFDE10
.LASFDE10:
	.long	.Lframe0
	.long	.LFB26
	.long	.LFE26-.LFB26
	.byte	0x4
	.long	.LCFI15-.LFB26
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI16-.LCFI15
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE10:
.LSFDE12:
	.long	.LEFDE12-.LASFDE12
.LASFDE12:
	.long	.Lframe0
	.long	.LFB28
	.long	.LFE28-.LFB28
	.byte	0x4
	.long	.LCFI18-.LFB28
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI19-.LCFI18
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI21-.LCFI19
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE12:
.LSFDE14:
	.long	.LEFDE14-.LASFDE14
.LASFDE14:
	.long	.Lframe0
	.long	.LFB29
	.long	.LFE29-.LFB29
	.byte	0x4
	.long	.LCFI22-.LFB29
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI23-.LCFI22
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI25-.LCFI23
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE14:
.LSFDE16:
	.long	.LEFDE16-.LASFDE16
.LASFDE16:
	.long	.Lframe0
	.long	.LFB27
	.long	.LFE27-.LFB27
	.byte	0x4
	.long	.LCFI26-.LFB27
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI27-.LCFI26
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE16:
.LSFDE18:
	.long	.LEFDE18-.LASFDE18
.LASFDE18:
	.long	.Lframe0
	.long	.LFB30
	.long	.LFE30-.LFB30
	.byte	0x4
	.long	.LCFI28-.LFB30
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI29-.LCFI28
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE18:
.LSFDE20:
	.long	.LEFDE20-.LASFDE20
.LASFDE20:
	.long	.Lframe0
	.long	.LFB31
	.long	.LFE31-.LFB31
	.byte	0x4
	.long	.LCFI31-.LFB31
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI32-.LCFI31
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI34-.LCFI32
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE20:
.LSFDE22:
	.long	.LEFDE22-.LASFDE22
.LASFDE22:
	.long	.Lframe0
	.long	.LFB18
	.long	.LFE18-.LFB18
	.byte	0x4
	.long	.LCFI35-.LFB18
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI36-.LCFI35
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE22:
.LSFDE24:
	.long	.LEFDE24-.LASFDE24
.LASFDE24:
	.long	.Lframe0
	.long	.LFB32
	.long	.LFE32-.LFB32
	.byte	0x4
	.long	.LCFI38-.LFB32
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI39-.LCFI38
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI41-.LCFI39
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE24:
.LSFDE26:
	.long	.LEFDE26-.LASFDE26
.LASFDE26:
	.long	.Lframe0
	.long	.LFB33
	.long	.LFE33-.LFB33
	.byte	0x4
	.long	.LCFI42-.LFB33
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI43-.LCFI42
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI45-.LCFI43
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE26:
.LSFDE28:
	.long	.LEFDE28-.LASFDE28
.LASFDE28:
	.long	.Lframe0
	.long	.LFB34
	.long	.LFE34-.LFB34
	.byte	0x4
	.long	.LCFI46-.LFB34
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI47-.LCFI46
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI49-.LCFI47
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE28:
.LSFDE30:
	.long	.LEFDE30-.LASFDE30
.LASFDE30:
	.long	.Lframe0
	.long	.LFB35
	.long	.LFE35-.LFB35
	.byte	0x4
	.long	.LCFI50-.LFB35
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI51-.LCFI50
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE30:
.LSFDE32:
	.long	.LEFDE32-.LASFDE32
.LASFDE32:
	.long	.Lframe0
	.long	.LFB36
	.long	.LFE36-.LFB36
	.byte	0x4
	.long	.LCFI53-.LFB36
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI54-.LCFI53
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE32:
.LSFDE34:
	.long	.LEFDE34-.LASFDE34
.LASFDE34:
	.long	.Lframe0
	.long	.LFB37
	.long	.LFE37-.LFB37
	.byte	0x4
	.long	.LCFI56-.LFB37
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI57-.LCFI56
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE34:
.LSFDE36:
	.long	.LEFDE36-.LASFDE36
.LASFDE36:
	.long	.Lframe0
	.long	.LFB38
	.long	.LFE38-.LFB38
	.byte	0x4
	.long	.LCFI59-.LFB38
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI60-.LCFI59
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE36:
.LSFDE38:
	.long	.LEFDE38-.LASFDE38
.LASFDE38:
	.long	.Lframe0
	.long	.LFB39
	.long	.LFE39-.LFB39
	.byte	0x4
	.long	.LCFI62-.LFB39
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI63-.LCFI62
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE38:
.LSFDE40:
	.long	.LEFDE40-.LASFDE40
.LASFDE40:
	.long	.Lframe0
	.long	.LFB40
	.long	.LFE40-.LFB40
	.byte	0x4
	.long	.LCFI64-.LFB40
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI65-.LCFI64
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE40:
.LSFDE42:
	.long	.LEFDE42-.LASFDE42
.LASFDE42:
	.long	.Lframe0
	.long	.LFB41
	.long	.LFE41-.LFB41
	.byte	0x4
	.long	.LCFI67-.LFB41
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI68-.LCFI67
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE42:
.LSFDE44:
	.long	.LEFDE44-.LASFDE44
.LASFDE44:
	.long	.Lframe0
	.long	.LFB42
	.long	.LFE42-.LFB42
	.byte	0x4
	.long	.LCFI70-.LFB42
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI71-.LCFI70
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE44:
.LSFDE46:
	.long	.LEFDE46-.LASFDE46
.LASFDE46:
	.long	.Lframe0
	.long	.LFB43
	.long	.LFE43-.LFB43
	.byte	0x4
	.long	.LCFI73-.LFB43
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI74-.LCFI73
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE46:
.LSFDE48:
	.long	.LEFDE48-.LASFDE48
.LASFDE48:
	.long	.Lframe0
	.long	.LFB44
	.long	.LFE44-.LFB44
	.byte	0x4
	.long	.LCFI76-.LFB44
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI77-.LCFI76
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE48:
.LSFDE50:
	.long	.LEFDE50-.LASFDE50
.LASFDE50:
	.long	.Lframe0
	.long	.LFB45
	.long	.LFE45-.LFB45
	.byte	0x4
	.long	.LCFI79-.LFB45
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI80-.LCFI79
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE50:
.LSFDE52:
	.long	.LEFDE52-.LASFDE52
.LASFDE52:
	.long	.Lframe0
	.long	.LFB46
	.long	.LFE46-.LFB46
	.byte	0x4
	.long	.LCFI81-.LFB46
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI82-.LCFI81
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI84-.LCFI82
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE52:
.LSFDE54:
	.long	.LEFDE54-.LASFDE54
.LASFDE54:
	.long	.Lframe0
	.long	.LFB47
	.long	.LFE47-.LFB47
	.byte	0x4
	.long	.LCFI85-.LFB47
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI86-.LCFI85
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI88-.LCFI86
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE54:
.LSFDE56:
	.long	.LEFDE56-.LASFDE56
.LASFDE56:
	.long	.Lframe0
	.long	.LFB48
	.long	.LFE48-.LFB48
	.byte	0x4
	.long	.LCFI89-.LFB48
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI90-.LCFI89
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI92-.LCFI90
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE56:
.LSFDE58:
	.long	.LEFDE58-.LASFDE58
.LASFDE58:
	.long	.Lframe0
	.long	.LFB49
	.long	.LFE49-.LFB49
	.byte	0x4
	.long	.LCFI93-.LFB49
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI94-.LCFI93
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI96-.LCFI94
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE58:
.LSFDE60:
	.long	.LEFDE60-.LASFDE60
.LASFDE60:
	.long	.Lframe0
	.long	.LFB50
	.long	.LFE50-.LFB50
	.byte	0x4
	.long	.LCFI97-.LFB50
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI98-.LCFI97
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE60:
.LSFDE62:
	.long	.LEFDE62-.LASFDE62
.LASFDE62:
	.long	.Lframe0
	.long	.LFB51
	.long	.LFE51-.LFB51
	.byte	0x4
	.long	.LCFI100-.LFB51
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI101-.LCFI100
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE62:
.LSFDE64:
	.long	.LEFDE64-.LASFDE64
.LASFDE64:
	.long	.Lframe0
	.long	.LFB52
	.long	.LFE52-.LFB52
	.byte	0x4
	.long	.LCFI103-.LFB52
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI104-.LCFI103
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE64:
.LSFDE66:
	.long	.LEFDE66-.LASFDE66
.LASFDE66:
	.long	.Lframe0
	.long	.LFB53
	.long	.LFE53-.LFB53
	.byte	0x4
	.long	.LCFI106-.LFB53
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI107-.LCFI106
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI109-.LCFI107
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE66:
.LSFDE68:
	.long	.LEFDE68-.LASFDE68
.LASFDE68:
	.long	.Lframe0
	.long	.LFB54
	.long	.LFE54-.LFB54
	.byte	0x4
	.long	.LCFI110-.LFB54
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI111-.LCFI110
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI113-.LCFI111
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE68:
.LSFDE70:
	.long	.LEFDE70-.LASFDE70
.LASFDE70:
	.long	.Lframe0
	.long	.LFB55
	.long	.LFE55-.LFB55
	.byte	0x4
	.long	.LCFI114-.LFB55
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI115-.LCFI114
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI118-.LCFI115
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE70:
.LSFDE72:
	.long	.LEFDE72-.LASFDE72
.LASFDE72:
	.long	.Lframe0
	.long	.LFB56
	.long	.LFE56-.LFB56
	.byte	0x4
	.long	.LCFI119-.LFB56
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI120-.LCFI119
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI122-.LCFI120
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE72:
.LSFDE74:
	.long	.LEFDE74-.LASFDE74
.LASFDE74:
	.long	.Lframe0
	.long	.LFB57
	.long	.LFE57-.LFB57
	.byte	0x4
	.long	.LCFI123-.LFB57
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI124-.LCFI123
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI126-.LCFI124
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE74:
.LSFDE76:
	.long	.LEFDE76-.LASFDE76
.LASFDE76:
	.long	.Lframe0
	.long	.LFB58
	.long	.LFE58-.LFB58
	.byte	0x4
	.long	.LCFI127-.LFB58
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI128-.LCFI127
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI130-.LCFI128
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE76:
.LSFDE78:
	.long	.LEFDE78-.LASFDE78
.LASFDE78:
	.long	.Lframe0
	.long	.LFB59
	.long	.LFE59-.LFB59
	.byte	0x4
	.long	.LCFI131-.LFB59
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI132-.LCFI131
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI135-.LCFI132
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE78:
.LSFDE80:
	.long	.LEFDE80-.LASFDE80
.LASFDE80:
	.long	.Lframe0
	.long	.LFB60
	.long	.LFE60-.LFB60
	.byte	0x4
	.long	.LCFI136-.LFB60
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI137-.LCFI136
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI139-.LCFI137
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE80:
.LSFDE82:
	.long	.LEFDE82-.LASFDE82
.LASFDE82:
	.long	.Lframe0
	.long	.LFB61
	.long	.LFE61-.LFB61
	.byte	0x4
	.long	.LCFI140-.LFB61
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI141-.LCFI140
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI143-.LCFI141
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE82:
.LSFDE84:
	.long	.LEFDE84-.LASFDE84
.LASFDE84:
	.long	.Lframe0
	.long	.LFB62
	.long	.LFE62-.LFB62
	.byte	0x4
	.long	.LCFI144-.LFB62
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI145-.LCFI144
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE84:
.LSFDE86:
	.long	.LEFDE86-.LASFDE86
.LASFDE86:
	.long	.Lframe0
	.long	.LFB63
	.long	.LFE63-.LFB63
	.byte	0x4
	.long	.LCFI147-.LFB63
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI148-.LCFI147
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI150-.LCFI148
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE86:
.LSFDE88:
	.long	.LEFDE88-.LASFDE88
.LASFDE88:
	.long	.Lframe0
	.long	.LFB64
	.long	.LFE64-.LFB64
	.byte	0x4
	.long	.LCFI151-.LFB64
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI152-.LCFI151
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI154-.LCFI152
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE88:
.LSFDE90:
	.long	.LEFDE90-.LASFDE90
.LASFDE90:
	.long	.Lframe0
	.long	.LFB65
	.long	.LFE65-.LFB65
	.byte	0x4
	.long	.LCFI155-.LFB65
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI156-.LCFI155
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI158-.LCFI156
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE90:
.LSFDE92:
	.long	.LEFDE92-.LASFDE92
.LASFDE92:
	.long	.Lframe0
	.long	.LFB66
	.long	.LFE66-.LFB66
	.byte	0x4
	.long	.LCFI159-.LFB66
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI160-.LCFI159
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI162-.LCFI160
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE92:
.LSFDE94:
	.long	.LEFDE94-.LASFDE94
.LASFDE94:
	.long	.Lframe0
	.long	.LFB67
	.long	.LFE67-.LFB67
	.byte	0x4
	.long	.LCFI163-.LFB67
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI164-.LCFI163
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE94:
.LSFDE96:
	.long	.LEFDE96-.LASFDE96
.LASFDE96:
	.long	.Lframe0
	.long	.LFB68
	.long	.LFE68-.LFB68
	.byte	0x4
	.long	.LCFI166-.LFB68
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI167-.LCFI166
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE96:
.LSFDE98:
	.long	.LEFDE98-.LASFDE98
.LASFDE98:
	.long	.Lframe0
	.long	.LFB69
	.long	.LFE69-.LFB69
	.byte	0x4
	.long	.LCFI169-.LFB69
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI170-.LCFI169
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE98:
.LSFDE100:
	.long	.LEFDE100-.LASFDE100
.LASFDE100:
	.long	.Lframe0
	.long	.LFB70
	.long	.LFE70-.LFB70
	.byte	0x4
	.long	.LCFI172-.LFB70
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI173-.LCFI172
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE100:
.LSFDE102:
	.long	.LEFDE102-.LASFDE102
.LASFDE102:
	.long	.Lframe0
	.long	.LFB71
	.long	.LFE71-.LFB71
	.byte	0x4
	.long	.LCFI174-.LFB71
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI175-.LCFI174
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE102:
.LSFDE104:
	.long	.LEFDE104-.LASFDE104
.LASFDE104:
	.long	.Lframe0
	.long	.LFB72
	.long	.LFE72-.LFB72
	.byte	0x4
	.long	.LCFI177-.LFB72
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI178-.LCFI177
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI180-.LCFI178
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE104:
.LSFDE106:
	.long	.LEFDE106-.LASFDE106
.LASFDE106:
	.long	.Lframe0
	.long	.LFB73
	.long	.LFE73-.LFB73
	.byte	0x4
	.long	.LCFI181-.LFB73
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI182-.LCFI181
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE106:
.LSFDE108:
	.long	.LEFDE108-.LASFDE108
.LASFDE108:
	.long	.Lframe0
	.long	.LFB74
	.long	.LFE74-.LFB74
	.byte	0x4
	.long	.LCFI184-.LFB74
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI185-.LCFI184
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI187-.LCFI185
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE108:
.LSFDE110:
	.long	.LEFDE110-.LASFDE110
.LASFDE110:
	.long	.Lframe0
	.long	.LFB75
	.long	.LFE75-.LFB75
	.byte	0x4
	.long	.LCFI188-.LFB75
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI189-.LCFI188
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE110:
.LSFDE112:
	.long	.LEFDE112-.LASFDE112
.LASFDE112:
	.long	.Lframe0
	.long	.LFB76
	.long	.LFE76-.LFB76
	.byte	0x4
	.long	.LCFI191-.LFB76
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI192-.LCFI191
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI194-.LCFI192
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE112:
.LSFDE114:
	.long	.LEFDE114-.LASFDE114
.LASFDE114:
	.long	.Lframe0
	.long	.LFB77
	.long	.LFE77-.LFB77
	.byte	0x4
	.long	.LCFI195-.LFB77
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI196-.LCFI195
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI198-.LCFI196
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE114:
.LSFDE116:
	.long	.LEFDE116-.LASFDE116
.LASFDE116:
	.long	.Lframe0
	.long	.LFB78
	.long	.LFE78-.LFB78
	.byte	0x4
	.long	.LCFI199-.LFB78
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI200-.LCFI199
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI202-.LCFI200
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE116:
.LSFDE118:
	.long	.LEFDE118-.LASFDE118
.LASFDE118:
	.long	.Lframe0
	.long	.LFB79
	.long	.LFE79-.LFB79
	.byte	0x4
	.long	.LCFI203-.LFB79
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI204-.LCFI203
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI208-.LCFI204
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE118:
.LSFDE120:
	.long	.LEFDE120-.LASFDE120
.LASFDE120:
	.long	.Lframe0
	.long	.LFB80
	.long	.LFE80-.LFB80
	.byte	0x4
	.long	.LCFI209-.LFB80
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI210-.LCFI209
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI212-.LCFI210
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE120:
.LSFDE122:
	.long	.LEFDE122-.LASFDE122
.LASFDE122:
	.long	.Lframe0
	.long	.LFB81
	.long	.LFE81-.LFB81
	.byte	0x4
	.long	.LCFI213-.LFB81
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI214-.LCFI213
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI216-.LCFI214
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE122:
.LSFDE124:
	.long	.LEFDE124-.LASFDE124
.LASFDE124:
	.long	.Lframe0
	.long	.LFB83
	.long	.LFE83-.LFB83
	.byte	0x4
	.long	.LCFI217-.LFB83
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI218-.LCFI217
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE124:
.LSFDE126:
	.long	.LEFDE126-.LASFDE126
.LASFDE126:
	.long	.Lframe0
	.long	.LFB82
	.long	.LFE82-.LFB82
	.byte	0x4
	.long	.LCFI220-.LFB82
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI221-.LCFI220
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI223-.LCFI221
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE126:
.LSFDE128:
	.long	.LEFDE128-.LASFDE128
.LASFDE128:
	.long	.Lframe0
	.long	.LFB84
	.long	.LFE84-.LFB84
	.byte	0x4
	.long	.LCFI224-.LFB84
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI225-.LCFI224
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI227-.LCFI225
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE128:
.LSFDE130:
	.long	.LEFDE130-.LASFDE130
.LASFDE130:
	.long	.Lframe0
	.long	.LFB85
	.long	.LFE85-.LFB85
	.byte	0x4
	.long	.LCFI228-.LFB85
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI229-.LCFI228
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI231-.LCFI229
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE130:
.LSFDE132:
	.long	.LEFDE132-.LASFDE132
.LASFDE132:
	.long	.Lframe0
	.long	.LFB86
	.long	.LFE86-.LFB86
	.byte	0x4
	.long	.LCFI232-.LFB86
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI233-.LCFI232
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI235-.LCFI233
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE132:
.LSFDE134:
	.long	.LEFDE134-.LASFDE134
.LASFDE134:
	.long	.Lframe0
	.long	.LFB87
	.long	.LFE87-.LFB87
	.byte	0x4
	.long	.LCFI236-.LFB87
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI237-.LCFI236
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI239-.LCFI237
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE134:
.LSFDE136:
	.long	.LEFDE136-.LASFDE136
.LASFDE136:
	.long	.Lframe0
	.long	.LFB19
	.long	.LFE19-.LFB19
	.byte	0x4
	.long	.LCFI240-.LFB19
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI241-.LCFI240
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI243-.LCFI241
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE136:
.LSFDE138:
	.long	.LEFDE138-.LASFDE138
.LASFDE138:
	.long	.Lframe0
	.long	.LFB88
	.long	.LFE88-.LFB88
	.byte	0x4
	.long	.LCFI244-.LFB88
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI245-.LCFI244
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI247-.LCFI245
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE138:
.LSFDE140:
	.long	.LEFDE140-.LASFDE140
.LASFDE140:
	.long	.Lframe0
	.long	.LFB89
	.long	.LFE89-.LFB89
	.byte	0x4
	.long	.LCFI248-.LFB89
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI249-.LCFI248
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI251-.LCFI249
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE140:
.LSFDE142:
	.long	.LEFDE142-.LASFDE142
.LASFDE142:
	.long	.Lframe0
	.long	.LFB90
	.long	.LFE90-.LFB90
	.byte	0x4
	.long	.LCFI252-.LFB90
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI253-.LCFI252
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI255-.LCFI253
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE142:
.LSFDE144:
	.long	.LEFDE144-.LASFDE144
.LASFDE144:
	.long	.Lframe0
	.long	.LFB91
	.long	.LFE91-.LFB91
	.byte	0x4
	.long	.LCFI256-.LFB91
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI257-.LCFI256
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI259-.LCFI257
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE144:
.LSFDE146:
	.long	.LEFDE146-.LASFDE146
.LASFDE146:
	.long	.Lframe0
	.long	.LFB92
	.long	.LFE92-.LFB92
	.byte	0x4
	.long	.LCFI260-.LFB92
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI261-.LCFI260
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI264-.LCFI261
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE146:
.LSFDE148:
	.long	.LEFDE148-.LASFDE148
.LASFDE148:
	.long	.Lframe0
	.long	.LFB93
	.long	.LFE93-.LFB93
	.byte	0x4
	.long	.LCFI265-.LFB93
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI266-.LCFI265
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI268-.LCFI266
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE148:
.LSFDE150:
	.long	.LEFDE150-.LASFDE150
.LASFDE150:
	.long	.Lframe0
	.long	.LFB94
	.long	.LFE94-.LFB94
	.byte	0x4
	.long	.LCFI269-.LFB94
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI270-.LCFI269
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI272-.LCFI270
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE150:
.LSFDE152:
	.long	.LEFDE152-.LASFDE152
.LASFDE152:
	.long	.Lframe0
	.long	.LFB95
	.long	.LFE95-.LFB95
	.byte	0x4
	.long	.LCFI273-.LFB95
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI274-.LCFI273
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI276-.LCFI274
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE152:
.LSFDE154:
	.long	.LEFDE154-.LASFDE154
.LASFDE154:
	.long	.Lframe0
	.long	.LFB96
	.long	.LFE96-.LFB96
	.byte	0x4
	.long	.LCFI277-.LFB96
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI278-.LCFI277
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI280-.LCFI278
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE154:
.LSFDE156:
	.long	.LEFDE156-.LASFDE156
.LASFDE156:
	.long	.Lframe0
	.long	.LFB97
	.long	.LFE97-.LFB97
	.byte	0x4
	.long	.LCFI281-.LFB97
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI282-.LCFI281
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI284-.LCFI282
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE156:
.LSFDE158:
	.long	.LEFDE158-.LASFDE158
.LASFDE158:
	.long	.Lframe0
	.long	.LFB98
	.long	.LFE98-.LFB98
	.byte	0x4
	.long	.LCFI285-.LFB98
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI286-.LCFI285
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI288-.LCFI286
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE158:
.LSFDE160:
	.long	.LEFDE160-.LASFDE160
.LASFDE160:
	.long	.Lframe0
	.long	.LFB99
	.long	.LFE99-.LFB99
	.byte	0x4
	.long	.LCFI289-.LFB99
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI290-.LCFI289
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI293-.LCFI290
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE160:
.LSFDE162:
	.long	.LEFDE162-.LASFDE162
.LASFDE162:
	.long	.Lframe0
	.long	.LFB21
	.long	.LFE21-.LFB21
	.byte	0x4
	.long	.LCFI294-.LFB21
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI295-.LCFI294
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE162:
.LSFDE164:
	.long	.LEFDE164-.LASFDE164
.LASFDE164:
	.long	.Lframe0
	.long	.LFB15
	.long	.LFE15-.LFB15
	.byte	0x4
	.long	.LCFI297-.LFB15
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI298-.LCFI297
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI300-.LCFI298
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE164:
.LSFDE166:
	.long	.LEFDE166-.LASFDE166
.LASFDE166:
	.long	.Lframe0
	.long	.LFB100
	.long	.LFE100-.LFB100
	.byte	0x4
	.long	.LCFI301-.LFB100
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI302-.LCFI301
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI304-.LCFI302
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE166:
.LSFDE168:
	.long	.LEFDE168-.LASFDE168
.LASFDE168:
	.long	.Lframe0
	.long	.LFB101
	.long	.LFE101-.LFB101
	.byte	0x4
	.long	.LCFI305-.LFB101
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI306-.LCFI305
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI309-.LCFI306
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE168:
.LSFDE170:
	.long	.LEFDE170-.LASFDE170
.LASFDE170:
	.long	.Lframe0
	.long	.LFB102
	.long	.LFE102-.LFB102
	.byte	0x4
	.long	.LCFI310-.LFB102
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI311-.LCFI310
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI314-.LCFI311
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE170:
.LSFDE172:
	.long	.LEFDE172-.LASFDE172
.LASFDE172:
	.long	.Lframe0
	.long	.LFB103
	.long	.LFE103-.LFB103
	.byte	0x4
	.long	.LCFI315-.LFB103
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI316-.LCFI315
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI318-.LCFI316
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE172:
.LSFDE174:
	.long	.LEFDE174-.LASFDE174
.LASFDE174:
	.long	.Lframe0
	.long	.LFB104
	.long	.LFE104-.LFB104
	.byte	0x4
	.long	.LCFI319-.LFB104
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI320-.LCFI319
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI322-.LCFI320
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE174:
.LSFDE176:
	.long	.LEFDE176-.LASFDE176
.LASFDE176:
	.long	.Lframe0
	.long	.LFB105
	.long	.LFE105-.LFB105
	.byte	0x4
	.long	.LCFI323-.LFB105
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI324-.LCFI323
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI326-.LCFI324
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE176:
.LSFDE178:
	.long	.LEFDE178-.LASFDE178
.LASFDE178:
	.long	.Lframe0
	.long	.LFB106
	.long	.LFE106-.LFB106
	.byte	0x4
	.long	.LCFI327-.LFB106
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI328-.LCFI327
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI330-.LCFI328
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE178:
.LSFDE180:
	.long	.LEFDE180-.LASFDE180
.LASFDE180:
	.long	.Lframe0
	.long	.LFB107
	.long	.LFE107-.LFB107
	.byte	0x4
	.long	.LCFI331-.LFB107
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI332-.LCFI331
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI336-.LCFI332
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE180:
.LSFDE182:
	.long	.LEFDE182-.LASFDE182
.LASFDE182:
	.long	.Lframe0
	.long	.LFB108
	.long	.LFE108-.LFB108
	.byte	0x4
	.long	.LCFI337-.LFB108
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI338-.LCFI337
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI340-.LCFI338
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE182:
.LSFDE184:
	.long	.LEFDE184-.LASFDE184
.LASFDE184:
	.long	.Lframe0
	.long	.LFB109
	.long	.LFE109-.LFB109
	.byte	0x4
	.long	.LCFI341-.LFB109
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI342-.LCFI341
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI344-.LCFI342
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE184:
.LSFDE186:
	.long	.LEFDE186-.LASFDE186
.LASFDE186:
	.long	.Lframe0
	.long	.LFB110
	.long	.LFE110-.LFB110
	.byte	0x4
	.long	.LCFI345-.LFB110
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI346-.LCFI345
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI348-.LCFI346
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE186:
.LSFDE188:
	.long	.LEFDE188-.LASFDE188
.LASFDE188:
	.long	.Lframe0
	.long	.LFB111
	.long	.LFE111-.LFB111
	.byte	0x4
	.long	.LCFI349-.LFB111
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI350-.LCFI349
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI352-.LCFI350
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE188:
.LSFDE190:
	.long	.LEFDE190-.LASFDE190
.LASFDE190:
	.long	.Lframe0
	.long	.LFB112
	.long	.LFE112-.LFB112
	.byte	0x4
	.long	.LCFI353-.LFB112
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI354-.LCFI353
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE190:
.LSFDE192:
	.long	.LEFDE192-.LASFDE192
.LASFDE192:
	.long	.Lframe0
	.long	.LFB113
	.long	.LFE113-.LFB113
	.byte	0x4
	.long	.LCFI356-.LFB113
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI357-.LCFI356
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE192:
.LSFDE194:
	.long	.LEFDE194-.LASFDE194
.LASFDE194:
	.long	.Lframe0
	.long	.LFB114
	.long	.LFE114-.LFB114
	.byte	0x4
	.long	.LCFI359-.LFB114
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI360-.LCFI359
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI362-.LCFI360
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE194:
.LSFDE196:
	.long	.LEFDE196-.LASFDE196
.LASFDE196:
	.long	.Lframe0
	.long	.LFB115
	.long	.LFE115-.LFB115
	.byte	0x4
	.long	.LCFI363-.LFB115
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI364-.LCFI363
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI366-.LCFI364
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE196:
.LSFDE198:
	.long	.LEFDE198-.LASFDE198
.LASFDE198:
	.long	.Lframe0
	.long	.LFB116
	.long	.LFE116-.LFB116
	.byte	0x4
	.long	.LCFI367-.LFB116
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI368-.LCFI367
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI371-.LCFI368
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE198:
.LSFDE200:
	.long	.LEFDE200-.LASFDE200
.LASFDE200:
	.long	.Lframe0
	.long	.LFB117
	.long	.LFE117-.LFB117
	.byte	0x4
	.long	.LCFI372-.LFB117
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI373-.LCFI372
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI375-.LCFI373
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE200:
.LSFDE202:
	.long	.LEFDE202-.LASFDE202
.LASFDE202:
	.long	.Lframe0
	.long	.LFB118
	.long	.LFE118-.LFB118
	.byte	0x4
	.long	.LCFI376-.LFB118
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI377-.LCFI376
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI379-.LCFI377
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE202:
.LSFDE204:
	.long	.LEFDE204-.LASFDE204
.LASFDE204:
	.long	.Lframe0
	.long	.LFB119
	.long	.LFE119-.LFB119
	.byte	0x4
	.long	.LCFI380-.LFB119
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI381-.LCFI380
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI383-.LCFI381
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE204:
.LSFDE206:
	.long	.LEFDE206-.LASFDE206
.LASFDE206:
	.long	.Lframe0
	.long	.LFB120
	.long	.LFE120-.LFB120
	.byte	0x4
	.long	.LCFI384-.LFB120
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI385-.LCFI384
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI388-.LCFI385
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE206:
.LSFDE208:
	.long	.LEFDE208-.LASFDE208
.LASFDE208:
	.long	.Lframe0
	.long	.LFB121
	.long	.LFE121-.LFB121
	.byte	0x4
	.long	.LCFI389-.LFB121
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI390-.LCFI389
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI392-.LCFI390
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE208:
.LSFDE210:
	.long	.LEFDE210-.LASFDE210
.LASFDE210:
	.long	.Lframe0
	.long	.LFB122
	.long	.LFE122-.LFB122
	.byte	0x4
	.long	.LCFI393-.LFB122
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI394-.LCFI393
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI397-.LCFI394
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE210:
.LSFDE212:
	.long	.LEFDE212-.LASFDE212
.LASFDE212:
	.long	.Lframe0
	.long	.LFB123
	.long	.LFE123-.LFB123
	.byte	0x4
	.long	.LCFI398-.LFB123
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI399-.LCFI398
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI401-.LCFI399
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE212:
.LSFDE214:
	.long	.LEFDE214-.LASFDE214
.LASFDE214:
	.long	.Lframe0
	.long	.LFB124
	.long	.LFE124-.LFB124
	.byte	0x4
	.long	.LCFI402-.LFB124
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI403-.LCFI402
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI405-.LCFI403
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE214:
.LSFDE216:
	.long	.LEFDE216-.LASFDE216
.LASFDE216:
	.long	.Lframe0
	.long	.LFB125
	.long	.LFE125-.LFB125
	.byte	0x4
	.long	.LCFI406-.LFB125
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI407-.LCFI406
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI409-.LCFI407
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE216:
.LSFDE218:
	.long	.LEFDE218-.LASFDE218
.LASFDE218:
	.long	.Lframe0
	.long	.LFB126
	.long	.LFE126-.LFB126
	.byte	0x4
	.long	.LCFI410-.LFB126
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI411-.LCFI410
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI413-.LCFI411
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE218:
.LSFDE220:
	.long	.LEFDE220-.LASFDE220
.LASFDE220:
	.long	.Lframe0
	.long	.LFB127
	.long	.LFE127-.LFB127
	.byte	0x4
	.long	.LCFI414-.LFB127
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI415-.LCFI414
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI417-.LCFI415
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE220:
.LSFDE222:
	.long	.LEFDE222-.LASFDE222
.LASFDE222:
	.long	.Lframe0
	.long	.LFB128
	.long	.LFE128-.LFB128
	.byte	0x4
	.long	.LCFI418-.LFB128
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI419-.LCFI418
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI422-.LCFI419
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE222:
.LSFDE224:
	.long	.LEFDE224-.LASFDE224
.LASFDE224:
	.long	.Lframe0
	.long	.LFB129
	.long	.LFE129-.LFB129
	.byte	0x4
	.long	.LCFI423-.LFB129
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI424-.LCFI423
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE224:
.LSFDE226:
	.long	.LEFDE226-.LASFDE226
.LASFDE226:
	.long	.Lframe0
	.long	.LFB130
	.long	.LFE130-.LFB130
	.byte	0x4
	.long	.LCFI426-.LFB130
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI427-.LCFI426
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI429-.LCFI427
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE226:
.LSFDE228:
	.long	.LEFDE228-.LASFDE228
.LASFDE228:
	.long	.Lframe0
	.long	.LFB131
	.long	.LFE131-.LFB131
	.byte	0x4
	.long	.LCFI430-.LFB131
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI431-.LCFI430
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI433-.LCFI431
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE228:
.LSFDE230:
	.long	.LEFDE230-.LASFDE230
.LASFDE230:
	.long	.Lframe0
	.long	.LFB132
	.long	.LFE132-.LFB132
	.byte	0x4
	.long	.LCFI434-.LFB132
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI435-.LCFI434
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI437-.LCFI435
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE230:
.LSFDE232:
	.long	.LEFDE232-.LASFDE232
.LASFDE232:
	.long	.Lframe0
	.long	.LFB133
	.long	.LFE133-.LFB133
	.byte	0x4
	.long	.LCFI438-.LFB133
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI439-.LCFI438
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI441-.LCFI439
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE232:
.LSFDE234:
	.long	.LEFDE234-.LASFDE234
.LASFDE234:
	.long	.Lframe0
	.long	.LFB134
	.long	.LFE134-.LFB134
	.byte	0x4
	.long	.LCFI442-.LFB134
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI443-.LCFI442
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI445-.LCFI443
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE234:
.LSFDE236:
	.long	.LEFDE236-.LASFDE236
.LASFDE236:
	.long	.Lframe0
	.long	.LFB135
	.long	.LFE135-.LFB135
	.byte	0x4
	.long	.LCFI446-.LFB135
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI447-.LCFI446
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI449-.LCFI447
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE236:
.LSFDE238:
	.long	.LEFDE238-.LASFDE238
.LASFDE238:
	.long	.Lframe0
	.long	.LFB136
	.long	.LFE136-.LFB136
	.byte	0x4
	.long	.LCFI450-.LFB136
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI451-.LCFI450
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE238:
.LSFDE240:
	.long	.LEFDE240-.LASFDE240
.LASFDE240:
	.long	.Lframe0
	.long	.LFB137
	.long	.LFE137-.LFB137
	.byte	0x4
	.long	.LCFI453-.LFB137
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI454-.LCFI453
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE240:
.LSFDE242:
	.long	.LEFDE242-.LASFDE242
.LASFDE242:
	.long	.Lframe0
	.long	.LFB138
	.long	.LFE138-.LFB138
	.byte	0x4
	.long	.LCFI456-.LFB138
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI457-.LCFI456
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE242:
.LSFDE244:
	.long	.LEFDE244-.LASFDE244
.LASFDE244:
	.long	.Lframe0
	.long	.LFB139
	.long	.LFE139-.LFB139
	.byte	0x4
	.long	.LCFI459-.LFB139
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI460-.LCFI459
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI462-.LCFI460
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE244:
.LSFDE246:
	.long	.LEFDE246-.LASFDE246
.LASFDE246:
	.long	.Lframe0
	.long	.LFB140
	.long	.LFE140-.LFB140
	.byte	0x4
	.long	.LCFI463-.LFB140
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI464-.LCFI463
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI466-.LCFI464
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE246:
.LSFDE248:
	.long	.LEFDE248-.LASFDE248
.LASFDE248:
	.long	.Lframe0
	.long	.LFB23
	.long	.LFE23-.LFB23
	.byte	0x4
	.long	.LCFI467-.LFB23
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI468-.LCFI467
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE248:
.LSFDE250:
	.long	.LEFDE250-.LASFDE250
.LASFDE250:
	.long	.Lframe0
	.long	.LFB141
	.long	.LFE141-.LFB141
	.byte	0x4
	.long	.LCFI470-.LFB141
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI471-.LCFI470
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI473-.LCFI471
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE250:
.LSFDE252:
	.long	.LEFDE252-.LASFDE252
.LASFDE252:
	.long	.Lframe0
	.long	.LFB24
	.long	.LFE24-.LFB24
	.byte	0x4
	.long	.LCFI474-.LFB24
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI475-.LCFI474
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE252:
.LSFDE254:
	.long	.LEFDE254-.LASFDE254
.LASFDE254:
	.long	.Lframe0
	.long	.LFB142
	.long	.LFE142-.LFB142
	.byte	0x4
	.long	.LCFI477-.LFB142
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI478-.LCFI477
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI480-.LCFI478
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE254:
.LSFDE256:
	.long	.LEFDE256-.LASFDE256
.LASFDE256:
	.long	.Lframe0
	.long	.LFB143
	.long	.LFE143-.LFB143
	.byte	0x4
	.long	.LCFI481-.LFB143
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI482-.LCFI481
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI485-.LCFI482
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE256:
.LSFDE258:
	.long	.LEFDE258-.LASFDE258
.LASFDE258:
	.long	.Lframe0
	.long	.LFB144
	.long	.LFE144-.LFB144
	.byte	0x4
	.long	.LCFI486-.LFB144
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI487-.LCFI486
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI489-.LCFI487
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE258:
.LSFDE260:
	.long	.LEFDE260-.LASFDE260
.LASFDE260:
	.long	.Lframe0
	.long	.LFB145
	.long	.LFE145-.LFB145
	.byte	0x4
	.long	.LCFI490-.LFB145
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI491-.LCFI490
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI493-.LCFI491
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE260:
.LSFDE262:
	.long	.LEFDE262-.LASFDE262
.LASFDE262:
	.long	.Lframe0
	.long	.LFB146
	.long	.LFE146-.LFB146
	.byte	0x4
	.long	.LCFI494-.LFB146
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI495-.LCFI494
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI497-.LCFI495
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE262:
.LSFDE264:
	.long	.LEFDE264-.LASFDE264
.LASFDE264:
	.long	.Lframe0
	.long	.LFB147
	.long	.LFE147-.LFB147
	.byte	0x4
	.long	.LCFI498-.LFB147
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI499-.LCFI498
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI501-.LCFI499
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE264:
.LSFDE266:
	.long	.LEFDE266-.LASFDE266
.LASFDE266:
	.long	.Lframe0
	.long	.LFB148
	.long	.LFE148-.LFB148
	.byte	0x4
	.long	.LCFI502-.LFB148
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI503-.LCFI502
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI505-.LCFI503
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE266:
.LSFDE268:
	.long	.LEFDE268-.LASFDE268
.LASFDE268:
	.long	.Lframe0
	.long	.LFB149
	.long	.LFE149-.LFB149
	.byte	0x4
	.long	.LCFI506-.LFB149
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI507-.LCFI506
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI509-.LCFI507
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE268:
.LSFDE270:
	.long	.LEFDE270-.LASFDE270
.LASFDE270:
	.long	.Lframe0
	.long	.LFB150
	.long	.LFE150-.LFB150
	.byte	0x4
	.long	.LCFI510-.LFB150
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI511-.LCFI510
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE270:
.LSFDE272:
	.long	.LEFDE272-.LASFDE272
.LASFDE272:
	.long	.Lframe0
	.long	.LFB151
	.long	.LFE151-.LFB151
	.byte	0x4
	.long	.LCFI513-.LFB151
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI514-.LCFI513
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE272:
.LSFDE274:
	.long	.LEFDE274-.LASFDE274
.LASFDE274:
	.long	.Lframe0
	.long	.LFB152
	.long	.LFE152-.LFB152
	.byte	0x4
	.long	.LCFI516-.LFB152
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI517-.LCFI516
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI519-.LCFI517
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE274:
.LSFDE276:
	.long	.LEFDE276-.LASFDE276
.LASFDE276:
	.long	.Lframe0
	.long	.LFB153
	.long	.LFE153-.LFB153
	.byte	0x4
	.long	.LCFI520-.LFB153
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI521-.LCFI520
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI523-.LCFI521
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE276:
.LSFDE278:
	.long	.LEFDE278-.LASFDE278
.LASFDE278:
	.long	.Lframe0
	.long	.LFB154
	.long	.LFE154-.LFB154
	.byte	0x4
	.long	.LCFI524-.LFB154
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI525-.LCFI524
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI528-.LCFI525
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE278:
.LSFDE280:
	.long	.LEFDE280-.LASFDE280
.LASFDE280:
	.long	.Lframe0
	.long	.LFB155
	.long	.LFE155-.LFB155
	.byte	0x4
	.long	.LCFI529-.LFB155
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI530-.LCFI529
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE280:
.LSFDE282:
	.long	.LEFDE282-.LASFDE282
.LASFDE282:
	.long	.Lframe0
	.long	.LFB156
	.long	.LFE156-.LFB156
	.byte	0x4
	.long	.LCFI532-.LFB156
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI533-.LCFI532
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI535-.LCFI533
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE282:
.LSFDE284:
	.long	.LEFDE284-.LASFDE284
.LASFDE284:
	.long	.Lframe0
	.long	.LFB157
	.long	.LFE157-.LFB157
	.byte	0x4
	.long	.LCFI536-.LFB157
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI537-.LCFI536
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE284:
.LSFDE286:
	.long	.LEFDE286-.LASFDE286
.LASFDE286:
	.long	.Lframe0
	.long	.LFB158
	.long	.LFE158-.LFB158
	.byte	0x4
	.long	.LCFI539-.LFB158
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI540-.LCFI539
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE286:
.LSFDE288:
	.long	.LEFDE288-.LASFDE288
.LASFDE288:
	.long	.Lframe0
	.long	.LFB159
	.long	.LFE159-.LFB159
	.byte	0x4
	.long	.LCFI542-.LFB159
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI543-.LCFI542
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI545-.LCFI543
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE288:
.LSFDE290:
	.long	.LEFDE290-.LASFDE290
.LASFDE290:
	.long	.Lframe0
	.long	.LFB160
	.long	.LFE160-.LFB160
	.byte	0x4
	.long	.LCFI546-.LFB160
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI547-.LCFI546
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI549-.LCFI547
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE290:
.LSFDE292:
	.long	.LEFDE292-.LASFDE292
.LASFDE292:
	.long	.Lframe0
	.long	.LFB161
	.long	.LFE161-.LFB161
	.byte	0x4
	.long	.LCFI550-.LFB161
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI551-.LCFI550
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE292:
.LSFDE294:
	.long	.LEFDE294-.LASFDE294
.LASFDE294:
	.long	.Lframe0
	.long	.LFB162
	.long	.LFE162-.LFB162
	.byte	0x4
	.long	.LCFI552-.LFB162
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI553-.LCFI552
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE294:
.LSFDE296:
	.long	.LEFDE296-.LASFDE296
.LASFDE296:
	.long	.Lframe0
	.long	.LFB163
	.long	.LFE163-.LFB163
	.byte	0x4
	.long	.LCFI554-.LFB163
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI555-.LCFI554
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI557-.LCFI555
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE296:
.LSFDE298:
	.long	.LEFDE298-.LASFDE298
.LASFDE298:
	.long	.Lframe0
	.long	.LFB164
	.long	.LFE164-.LFB164
	.byte	0x4
	.long	.LCFI558-.LFB164
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI559-.LCFI558
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI561-.LCFI559
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE298:
.LSFDE300:
	.long	.LEFDE300-.LASFDE300
.LASFDE300:
	.long	.Lframe0
	.long	.LFB165
	.long	.LFE165-.LFB165
	.byte	0x4
	.long	.LCFI562-.LFB165
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI563-.LCFI562
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI565-.LCFI563
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE300:
.LSFDE302:
	.long	.LEFDE302-.LASFDE302
.LASFDE302:
	.long	.Lframe0
	.long	.LFB166
	.long	.LFE166-.LFB166
	.byte	0x4
	.long	.LCFI566-.LFB166
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI567-.LCFI566
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI570-.LCFI567
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE302:
.LSFDE304:
	.long	.LEFDE304-.LASFDE304
.LASFDE304:
	.long	.Lframe0
	.long	.LFB167
	.long	.LFE167-.LFB167
	.byte	0x4
	.long	.LCFI571-.LFB167
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI572-.LCFI571
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI575-.LCFI572
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE304:
.LSFDE306:
	.long	.LEFDE306-.LASFDE306
.LASFDE306:
	.long	.Lframe0
	.long	.LFB168
	.long	.LFE168-.LFB168
	.byte	0x4
	.long	.LCFI576-.LFB168
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI577-.LCFI576
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI580-.LCFI577
	.byte	0x83
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE306:
.LSFDE308:
	.long	.LEFDE308-.LASFDE308
.LASFDE308:
	.long	.Lframe0
	.long	.LFB169
	.long	.LFE169-.LFB169
	.byte	0x4
	.long	.LCFI581-.LFB169
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI582-.LCFI581
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI584-.LCFI582
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE308:
.LSFDE310:
	.long	.LEFDE310-.LASFDE310
.LASFDE310:
	.long	.Lframe0
	.long	.LFB170
	.long	.LFE170-.LFB170
	.byte	0x4
	.long	.LCFI585-.LFB170
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI586-.LCFI585
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI589-.LCFI586
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE310:
.LSFDE312:
	.long	.LEFDE312-.LASFDE312
.LASFDE312:
	.long	.Lframe0
	.long	.LFB171
	.long	.LFE171-.LFB171
	.byte	0x4
	.long	.LCFI590-.LFB171
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI591-.LCFI590
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI593-.LCFI591
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE312:
.LSFDE314:
	.long	.LEFDE314-.LASFDE314
.LASFDE314:
	.long	.Lframe0
	.long	.LFB172
	.long	.LFE172-.LFB172
	.byte	0x4
	.long	.LCFI594-.LFB172
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI595-.LCFI594
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI597-.LCFI595
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE314:
.LSFDE316:
	.long	.LEFDE316-.LASFDE316
.LASFDE316:
	.long	.Lframe0
	.long	.LFB173
	.long	.LFE173-.LFB173
	.byte	0x4
	.long	.LCFI598-.LFB173
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI599-.LCFI598
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE316:
.LSFDE318:
	.long	.LEFDE318-.LASFDE318
.LASFDE318:
	.long	.Lframe0
	.long	.LFB174
	.long	.LFE174-.LFB174
	.byte	0x4
	.long	.LCFI601-.LFB174
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI602-.LCFI601
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI604-.LCFI602
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE318:
.LSFDE320:
	.long	.LEFDE320-.LASFDE320
.LASFDE320:
	.long	.Lframe0
	.long	.LFB175
	.long	.LFE175-.LFB175
	.byte	0x4
	.long	.LCFI605-.LFB175
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI606-.LCFI605
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI608-.LCFI606
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE320:
.LSFDE322:
	.long	.LEFDE322-.LASFDE322
.LASFDE322:
	.long	.Lframe0
	.long	.LFB176
	.long	.LFE176-.LFB176
	.byte	0x4
	.long	.LCFI609-.LFB176
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI610-.LCFI609
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI612-.LCFI610
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE322:
.LSFDE324:
	.long	.LEFDE324-.LASFDE324
.LASFDE324:
	.long	.Lframe0
	.long	.LFB177
	.long	.LFE177-.LFB177
	.byte	0x4
	.long	.LCFI613-.LFB177
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI614-.LCFI613
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI616-.LCFI614
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE324:
.LSFDE326:
	.long	.LEFDE326-.LASFDE326
.LASFDE326:
	.long	.Lframe0
	.long	.LFB178
	.long	.LFE178-.LFB178
	.byte	0x4
	.long	.LCFI617-.LFB178
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI618-.LCFI617
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI620-.LCFI618
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE326:
.LSFDE328:
	.long	.LEFDE328-.LASFDE328
.LASFDE328:
	.long	.Lframe0
	.long	.LFB179
	.long	.LFE179-.LFB179
	.byte	0x4
	.long	.LCFI621-.LFB179
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI622-.LCFI621
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI624-.LCFI622
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE328:
.LSFDE330:
	.long	.LEFDE330-.LASFDE330
.LASFDE330:
	.long	.Lframe0
	.long	.LFB180
	.long	.LFE180-.LFB180
	.byte	0x4
	.long	.LCFI625-.LFB180
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI626-.LCFI625
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI628-.LCFI626
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE330:
.LSFDE332:
	.long	.LEFDE332-.LASFDE332
.LASFDE332:
	.long	.Lframe0
	.long	.LFB181
	.long	.LFE181-.LFB181
	.byte	0x4
	.long	.LCFI629-.LFB181
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI630-.LCFI629
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI632-.LCFI630
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE332:
.LSFDE334:
	.long	.LEFDE334-.LASFDE334
.LASFDE334:
	.long	.Lframe0
	.long	.LFB182
	.long	.LFE182-.LFB182
	.byte	0x4
	.long	.LCFI633-.LFB182
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI634-.LCFI633
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI636-.LCFI634
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE334:
.LSFDE336:
	.long	.LEFDE336-.LASFDE336
.LASFDE336:
	.long	.Lframe0
	.long	.LFB183
	.long	.LFE183-.LFB183
	.byte	0x4
	.long	.LCFI637-.LFB183
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI638-.LCFI637
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI640-.LCFI638
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE336:
.LSFDE338:
	.long	.LEFDE338-.LASFDE338
.LASFDE338:
	.long	.Lframe0
	.long	.LFB184
	.long	.LFE184-.LFB184
	.byte	0x4
	.long	.LCFI641-.LFB184
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI642-.LCFI641
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI644-.LCFI642
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE338:
.LSFDE340:
	.long	.LEFDE340-.LASFDE340
.LASFDE340:
	.long	.Lframe0
	.long	.LFB185
	.long	.LFE185-.LFB185
	.byte	0x4
	.long	.LCFI645-.LFB185
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI646-.LCFI645
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI648-.LCFI646
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE340:
.LSFDE342:
	.long	.LEFDE342-.LASFDE342
.LASFDE342:
	.long	.Lframe0
	.long	.LFB186
	.long	.LFE186-.LFB186
	.byte	0x4
	.long	.LCFI649-.LFB186
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI650-.LCFI649
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI653-.LCFI650
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE342:
.LSFDE344:
	.long	.LEFDE344-.LASFDE344
.LASFDE344:
	.long	.Lframe0
	.long	.LFB187
	.long	.LFE187-.LFB187
	.byte	0x4
	.long	.LCFI654-.LFB187
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI655-.LCFI654
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI657-.LCFI655
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE344:
.LSFDE346:
	.long	.LEFDE346-.LASFDE346
.LASFDE346:
	.long	.Lframe0
	.long	.LFB188
	.long	.LFE188-.LFB188
	.byte	0x4
	.long	.LCFI658-.LFB188
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI659-.LCFI658
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI661-.LCFI659
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE346:
.LSFDE348:
	.long	.LEFDE348-.LASFDE348
.LASFDE348:
	.long	.Lframe0
	.long	.LFB189
	.long	.LFE189-.LFB189
	.byte	0x4
	.long	.LCFI662-.LFB189
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI663-.LCFI662
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI665-.LCFI663
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE348:
.LSFDE350:
	.long	.LEFDE350-.LASFDE350
.LASFDE350:
	.long	.Lframe0
	.long	.LFB190
	.long	.LFE190-.LFB190
	.byte	0x4
	.long	.LCFI666-.LFB190
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI667-.LCFI666
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI669-.LCFI667
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE350:
.LSFDE352:
	.long	.LEFDE352-.LASFDE352
.LASFDE352:
	.long	.Lframe0
	.long	.LFB191
	.long	.LFE191-.LFB191
	.byte	0x4
	.long	.LCFI670-.LFB191
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI671-.LCFI670
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI673-.LCFI671
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE352:
.LSFDE354:
	.long	.LEFDE354-.LASFDE354
.LASFDE354:
	.long	.Lframe0
	.long	.LFB192
	.long	.LFE192-.LFB192
	.byte	0x4
	.long	.LCFI674-.LFB192
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI675-.LCFI674
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI677-.LCFI675
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE354:
.LSFDE356:
	.long	.LEFDE356-.LASFDE356
.LASFDE356:
	.long	.Lframe0
	.long	.LFB193
	.long	.LFE193-.LFB193
	.byte	0x4
	.long	.LCFI678-.LFB193
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI679-.LCFI678
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE356:
.LSFDE358:
	.long	.LEFDE358-.LASFDE358
.LASFDE358:
	.long	.Lframe0
	.long	.LFB194
	.long	.LFE194-.LFB194
	.byte	0x4
	.long	.LCFI680-.LFB194
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI681-.LCFI680
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI683-.LCFI681
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE358:
.LSFDE360:
	.long	.LEFDE360-.LASFDE360
.LASFDE360:
	.long	.Lframe0
	.long	.LFB195
	.long	.LFE195-.LFB195
	.byte	0x4
	.long	.LCFI684-.LFB195
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI685-.LCFI684
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI687-.LCFI685
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE360:
.LSFDE362:
	.long	.LEFDE362-.LASFDE362
.LASFDE362:
	.long	.Lframe0
	.long	.LFB196
	.long	.LFE196-.LFB196
	.byte	0x4
	.long	.LCFI688-.LFB196
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI689-.LCFI688
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI691-.LCFI689
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE362:
.LSFDE364:
	.long	.LEFDE364-.LASFDE364
.LASFDE364:
	.long	.Lframe0
	.long	.LFB197
	.long	.LFE197-.LFB197
	.byte	0x4
	.long	.LCFI692-.LFB197
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI693-.LCFI692
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI695-.LCFI693
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE364:
.LSFDE366:
	.long	.LEFDE366-.LASFDE366
.LASFDE366:
	.long	.Lframe0
	.long	.LFB198
	.long	.LFE198-.LFB198
	.byte	0x4
	.long	.LCFI696-.LFB198
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI697-.LCFI696
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI699-.LCFI697
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE366:
.LSFDE368:
	.long	.LEFDE368-.LASFDE368
.LASFDE368:
	.long	.Lframe0
	.long	.LFB199
	.long	.LFE199-.LFB199
	.byte	0x4
	.long	.LCFI700-.LFB199
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI701-.LCFI700
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI703-.LCFI701
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE368:
.LSFDE370:
	.long	.LEFDE370-.LASFDE370
.LASFDE370:
	.long	.Lframe0
	.long	.LFB200
	.long	.LFE200-.LFB200
	.byte	0x4
	.long	.LCFI704-.LFB200
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI705-.LCFI704
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI707-.LCFI705
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE370:
.LSFDE372:
	.long	.LEFDE372-.LASFDE372
.LASFDE372:
	.long	.Lframe0
	.long	.LFB201
	.long	.LFE201-.LFB201
	.byte	0x4
	.long	.LCFI708-.LFB201
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI709-.LCFI708
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI711-.LCFI709
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE372:
.LSFDE374:
	.long	.LEFDE374-.LASFDE374
.LASFDE374:
	.long	.Lframe0
	.long	.LFB202
	.long	.LFE202-.LFB202
	.byte	0x4
	.long	.LCFI712-.LFB202
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI713-.LCFI712
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI715-.LCFI713
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE374:
.LSFDE376:
	.long	.LEFDE376-.LASFDE376
.LASFDE376:
	.long	.Lframe0
	.long	.LFB203
	.long	.LFE203-.LFB203
	.byte	0x4
	.long	.LCFI716-.LFB203
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI717-.LCFI716
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI720-.LCFI717
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE376:
.LSFDE378:
	.long	.LEFDE378-.LASFDE378
.LASFDE378:
	.long	.Lframe0
	.long	.LFB204
	.long	.LFE204-.LFB204
	.byte	0x4
	.long	.LCFI721-.LFB204
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI722-.LCFI721
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI724-.LCFI722
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE378:
.LSFDE380:
	.long	.LEFDE380-.LASFDE380
.LASFDE380:
	.long	.Lframe0
	.long	.LFB205
	.long	.LFE205-.LFB205
	.byte	0x4
	.long	.LCFI725-.LFB205
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI726-.LCFI725
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI728-.LCFI726
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE380:
.LSFDE382:
	.long	.LEFDE382-.LASFDE382
.LASFDE382:
	.long	.Lframe0
	.long	.LFB206
	.long	.LFE206-.LFB206
	.byte	0x4
	.long	.LCFI729-.LFB206
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI730-.LCFI729
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI732-.LCFI730
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE382:
.LSFDE384:
	.long	.LEFDE384-.LASFDE384
.LASFDE384:
	.long	.Lframe0
	.long	.LFB207
	.long	.LFE207-.LFB207
	.byte	0x4
	.long	.LCFI733-.LFB207
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI734-.LCFI733
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI736-.LCFI734
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE384:
.LSFDE386:
	.long	.LEFDE386-.LASFDE386
.LASFDE386:
	.long	.Lframe0
	.long	.LFB208
	.long	.LFE208-.LFB208
	.byte	0x4
	.long	.LCFI737-.LFB208
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI738-.LCFI737
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI740-.LCFI738
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE386:
.LSFDE388:
	.long	.LEFDE388-.LASFDE388
.LASFDE388:
	.long	.Lframe0
	.long	.LFB209
	.long	.LFE209-.LFB209
	.byte	0x4
	.long	.LCFI741-.LFB209
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI742-.LCFI741
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI744-.LCFI742
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE388:
.LSFDE390:
	.long	.LEFDE390-.LASFDE390
.LASFDE390:
	.long	.Lframe0
	.long	.LFB210
	.long	.LFE210-.LFB210
	.byte	0x4
	.long	.LCFI745-.LFB210
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI746-.LCFI745
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI748-.LCFI746
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE390:
.LSFDE392:
	.long	.LEFDE392-.LASFDE392
.LASFDE392:
	.long	.Lframe0
	.long	.LFB211
	.long	.LFE211-.LFB211
	.byte	0x4
	.long	.LCFI749-.LFB211
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI750-.LCFI749
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI752-.LCFI750
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE392:
.LSFDE394:
	.long	.LEFDE394-.LASFDE394
.LASFDE394:
	.long	.Lframe0
	.long	.LFB212
	.long	.LFE212-.LFB212
	.byte	0x4
	.long	.LCFI753-.LFB212
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI754-.LCFI753
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI758-.LCFI754
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE394:
.LSFDE396:
	.long	.LEFDE396-.LASFDE396
.LASFDE396:
	.long	.Lframe0
	.long	.LFB213
	.long	.LFE213-.LFB213
	.byte	0x4
	.long	.LCFI759-.LFB213
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI760-.LCFI759
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI762-.LCFI760
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE396:
.LSFDE398:
	.long	.LEFDE398-.LASFDE398
.LASFDE398:
	.long	.Lframe0
	.long	.LFB214
	.long	.LFE214-.LFB214
	.byte	0x4
	.long	.LCFI763-.LFB214
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI764-.LCFI763
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI766-.LCFI764
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE398:
.LSFDE400:
	.long	.LEFDE400-.LASFDE400
.LASFDE400:
	.long	.Lframe0
	.long	.LFB215
	.long	.LFE215-.LFB215
	.byte	0x4
	.long	.LCFI767-.LFB215
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI768-.LCFI767
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI770-.LCFI768
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE400:
.LSFDE402:
	.long	.LEFDE402-.LASFDE402
.LASFDE402:
	.long	.Lframe0
	.long	.LFB216
	.long	.LFE216-.LFB216
	.byte	0x4
	.long	.LCFI771-.LFB216
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI772-.LCFI771
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI774-.LCFI772
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE402:
.LSFDE404:
	.long	.LEFDE404-.LASFDE404
.LASFDE404:
	.long	.Lframe0
	.long	.LFB217
	.long	.LFE217-.LFB217
	.byte	0x4
	.long	.LCFI775-.LFB217
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI776-.LCFI775
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI780-.LCFI776
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE404:
.LSFDE406:
	.long	.LEFDE406-.LASFDE406
.LASFDE406:
	.long	.Lframe0
	.long	.LFB218
	.long	.LFE218-.LFB218
	.byte	0x4
	.long	.LCFI781-.LFB218
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI782-.LCFI781
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI784-.LCFI782
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE406:
.LSFDE408:
	.long	.LEFDE408-.LASFDE408
.LASFDE408:
	.long	.Lframe0
	.long	.LFB219
	.long	.LFE219-.LFB219
	.byte	0x4
	.long	.LCFI785-.LFB219
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI786-.LCFI785
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI788-.LCFI786
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE408:
.LSFDE410:
	.long	.LEFDE410-.LASFDE410
.LASFDE410:
	.long	.Lframe0
	.long	.LFB220
	.long	.LFE220-.LFB220
	.byte	0x4
	.long	.LCFI789-.LFB220
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI790-.LCFI789
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI793-.LCFI790
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE410:
.LSFDE412:
	.long	.LEFDE412-.LASFDE412
.LASFDE412:
	.long	.Lframe0
	.long	.LFB221
	.long	.LFE221-.LFB221
	.byte	0x4
	.long	.LCFI794-.LFB221
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI795-.LCFI794
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI797-.LCFI795
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE412:
.LSFDE414:
	.long	.LEFDE414-.LASFDE414
.LASFDE414:
	.long	.Lframe0
	.long	.LFB222
	.long	.LFE222-.LFB222
	.byte	0x4
	.long	.LCFI798-.LFB222
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI799-.LCFI798
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI801-.LCFI799
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE414:
.LSFDE416:
	.long	.LEFDE416-.LASFDE416
.LASFDE416:
	.long	.Lframe0
	.long	.LFB223
	.long	.LFE223-.LFB223
	.byte	0x4
	.long	.LCFI802-.LFB223
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI803-.LCFI802
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE416:
.LSFDE418:
	.long	.LEFDE418-.LASFDE418
.LASFDE418:
	.long	.Lframe0
	.long	.LFB224
	.long	.LFE224-.LFB224
	.byte	0x4
	.long	.LCFI805-.LFB224
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI806-.LCFI805
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI808-.LCFI806
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE418:
.LSFDE420:
	.long	.LEFDE420-.LASFDE420
.LASFDE420:
	.long	.Lframe0
	.long	.LFB225
	.long	.LFE225-.LFB225
	.byte	0x4
	.long	.LCFI809-.LFB225
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI810-.LCFI809
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI812-.LCFI810
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE420:
.LSFDE422:
	.long	.LEFDE422-.LASFDE422
.LASFDE422:
	.long	.Lframe0
	.long	.LFB226
	.long	.LFE226-.LFB226
	.byte	0x4
	.long	.LCFI813-.LFB226
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI814-.LCFI813
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI816-.LCFI814
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE422:
.LSFDE424:
	.long	.LEFDE424-.LASFDE424
.LASFDE424:
	.long	.Lframe0
	.long	.LFB227
	.long	.LFE227-.LFB227
	.byte	0x4
	.long	.LCFI817-.LFB227
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI818-.LCFI817
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI821-.LCFI818
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE424:
.LSFDE426:
	.long	.LEFDE426-.LASFDE426
.LASFDE426:
	.long	.Lframe0
	.long	.LFB228
	.long	.LFE228-.LFB228
	.byte	0x4
	.long	.LCFI822-.LFB228
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI823-.LCFI822
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI825-.LCFI823
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE426:
.LSFDE428:
	.long	.LEFDE428-.LASFDE428
.LASFDE428:
	.long	.Lframe0
	.long	.LFB229
	.long	.LFE229-.LFB229
	.byte	0x4
	.long	.LCFI826-.LFB229
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI827-.LCFI826
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI829-.LCFI827
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE428:
.LSFDE430:
	.long	.LEFDE430-.LASFDE430
.LASFDE430:
	.long	.Lframe0
	.long	.LFB230
	.long	.LFE230-.LFB230
	.byte	0x4
	.long	.LCFI830-.LFB230
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI831-.LCFI830
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI834-.LCFI831
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE430:
.LSFDE432:
	.long	.LEFDE432-.LASFDE432
.LASFDE432:
	.long	.Lframe0
	.long	.LFB231
	.long	.LFE231-.LFB231
	.byte	0x4
	.long	.LCFI835-.LFB231
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI836-.LCFI835
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE432:
.LSFDE434:
	.long	.LEFDE434-.LASFDE434
.LASFDE434:
	.long	.Lframe0
	.long	.LFB232
	.long	.LFE232-.LFB232
	.byte	0x4
	.long	.LCFI838-.LFB232
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI839-.LCFI838
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE434:
.LSFDE436:
	.long	.LEFDE436-.LASFDE436
.LASFDE436:
	.long	.Lframe0
	.long	.LFB233
	.long	.LFE233-.LFB233
	.byte	0x4
	.long	.LCFI841-.LFB233
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI842-.LCFI841
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI844-.LCFI842
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE436:
.LSFDE438:
	.long	.LEFDE438-.LASFDE438
.LASFDE438:
	.long	.Lframe0
	.long	.LFB234
	.long	.LFE234-.LFB234
	.byte	0x4
	.long	.LCFI845-.LFB234
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI846-.LCFI845
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI848-.LCFI846
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE438:
.LSFDE440:
	.long	.LEFDE440-.LASFDE440
.LASFDE440:
	.long	.Lframe0
	.long	.LFB235
	.long	.LFE235-.LFB235
	.byte	0x4
	.long	.LCFI849-.LFB235
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI850-.LCFI849
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI852-.LCFI850
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE440:
.LSFDE442:
	.long	.LEFDE442-.LASFDE442
.LASFDE442:
	.long	.Lframe0
	.long	.LFB236
	.long	.LFE236-.LFB236
	.byte	0x4
	.long	.LCFI853-.LFB236
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI854-.LCFI853
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI858-.LCFI854
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE442:
.LSFDE444:
	.long	.LEFDE444-.LASFDE444
.LASFDE444:
	.long	.Lframe0
	.long	.LFB237
	.long	.LFE237-.LFB237
	.byte	0x4
	.long	.LCFI859-.LFB237
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI860-.LCFI859
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI862-.LCFI860
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE444:
.LSFDE446:
	.long	.LEFDE446-.LASFDE446
.LASFDE446:
	.long	.Lframe0
	.long	.LFB238
	.long	.LFE238-.LFB238
	.byte	0x4
	.long	.LCFI863-.LFB238
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI864-.LCFI863
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI868-.LCFI864
	.byte	0x83
	.uleb128 0x5
	.byte	0x86
	.uleb128 0x4
	.byte	0x87
	.uleb128 0x3
	.align 4
.LEFDE446:
.LSFDE448:
	.long	.LEFDE448-.LASFDE448
.LASFDE448:
	.long	.Lframe0
	.long	.LFB239
	.long	.LFE239-.LFB239
	.byte	0x4
	.long	.LCFI869-.LFB239
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI870-.LCFI869
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI872-.LCFI870
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE448:
.LSFDE450:
	.long	.LEFDE450-.LASFDE450
.LASFDE450:
	.long	.Lframe0
	.long	.LFB240
	.long	.LFE240-.LFB240
	.byte	0x4
	.long	.LCFI873-.LFB240
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI874-.LCFI873
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI876-.LCFI874
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE450:
.LSFDE452:
	.long	.LEFDE452-.LASFDE452
.LASFDE452:
	.long	.Lframe0
	.long	.LFB241
	.long	.LFE241-.LFB241
	.byte	0x4
	.long	.LCFI877-.LFB241
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI878-.LCFI877
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI880-.LCFI878
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE452:
.LSFDE454:
	.long	.LEFDE454-.LASFDE454
.LASFDE454:
	.long	.Lframe0
	.long	.LFB242
	.long	.LFE242-.LFB242
	.byte	0x4
	.long	.LCFI881-.LFB242
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI882-.LCFI881
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI884-.LCFI882
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE454:
.LSFDE456:
	.long	.LEFDE456-.LASFDE456
.LASFDE456:
	.long	.Lframe0
	.long	.LFB243
	.long	.LFE243-.LFB243
	.byte	0x4
	.long	.LCFI885-.LFB243
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI886-.LCFI885
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI889-.LCFI886
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE456:
.LSFDE458:
	.long	.LEFDE458-.LASFDE458
.LASFDE458:
	.long	.Lframe0
	.long	.LFB244
	.long	.LFE244-.LFB244
	.byte	0x4
	.long	.LCFI890-.LFB244
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI891-.LCFI890
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI894-.LCFI891
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE458:
.LSFDE460:
	.long	.LEFDE460-.LASFDE460
.LASFDE460:
	.long	.Lframe0
	.long	.LFB245
	.long	.LFE245-.LFB245
	.byte	0x4
	.long	.LCFI895-.LFB245
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI896-.LCFI895
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI898-.LCFI896
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE460:
.LSFDE462:
	.long	.LEFDE462-.LASFDE462
.LASFDE462:
	.long	.Lframe0
	.long	.LFB246
	.long	.LFE246-.LFB246
	.byte	0x4
	.long	.LCFI899-.LFB246
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI900-.LCFI899
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE462:
.LSFDE464:
	.long	.LEFDE464-.LASFDE464
.LASFDE464:
	.long	.Lframe0
	.long	.LFB247
	.long	.LFE247-.LFB247
	.byte	0x4
	.long	.LCFI901-.LFB247
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI902-.LCFI901
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE464:
.LSFDE466:
	.long	.LEFDE466-.LASFDE466
.LASFDE466:
	.long	.Lframe0
	.long	.LFB248
	.long	.LFE248-.LFB248
	.byte	0x4
	.long	.LCFI903-.LFB248
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI904-.LCFI903
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI906-.LCFI904
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE466:
.LSFDE468:
	.long	.LEFDE468-.LASFDE468
.LASFDE468:
	.long	.Lframe0
	.long	.LFB249
	.long	.LFE249-.LFB249
	.byte	0x4
	.long	.LCFI907-.LFB249
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI908-.LCFI907
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI910-.LCFI908
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE468:
.LSFDE470:
	.long	.LEFDE470-.LASFDE470
.LASFDE470:
	.long	.Lframe0
	.long	.LFB250
	.long	.LFE250-.LFB250
	.byte	0x4
	.long	.LCFI911-.LFB250
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI912-.LCFI911
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI914-.LCFI912
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE470:
.LSFDE472:
	.long	.LEFDE472-.LASFDE472
.LASFDE472:
	.long	.Lframe0
	.long	.LFB251
	.long	.LFE251-.LFB251
	.byte	0x4
	.long	.LCFI915-.LFB251
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI916-.LCFI915
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI918-.LCFI916
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE472:
.LSFDE474:
	.long	.LEFDE474-.LASFDE474
.LASFDE474:
	.long	.Lframe0
	.long	.LFB252
	.long	.LFE252-.LFB252
	.byte	0x4
	.long	.LCFI919-.LFB252
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI920-.LCFI919
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI922-.LCFI920
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE474:
.LSFDE476:
	.long	.LEFDE476-.LASFDE476
.LASFDE476:
	.long	.Lframe0
	.long	.LFB253
	.long	.LFE253-.LFB253
	.byte	0x4
	.long	.LCFI923-.LFB253
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI924-.LCFI923
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI926-.LCFI924
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE476:
.LSFDE478:
	.long	.LEFDE478-.LASFDE478
.LASFDE478:
	.long	.Lframe0
	.long	.LFB254
	.long	.LFE254-.LFB254
	.byte	0x4
	.long	.LCFI927-.LFB254
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI928-.LCFI927
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI931-.LCFI928
	.byte	0x83
	.uleb128 0x4
	.byte	0x86
	.uleb128 0x3
	.align 4
.LEFDE478:
.LSFDE480:
	.long	.LEFDE480-.LASFDE480
.LASFDE480:
	.long	.Lframe0
	.long	.LFB255
	.long	.LFE255-.LFB255
	.byte	0x4
	.long	.LCFI932-.LFB255
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI933-.LCFI932
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI935-.LCFI933
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE480:
.LSFDE482:
	.long	.LEFDE482-.LASFDE482
.LASFDE482:
	.long	.Lframe0
	.long	.LFB256
	.long	.LFE256-.LFB256
	.byte	0x4
	.long	.LCFI936-.LFB256
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI937-.LCFI936
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI939-.LCFI937
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE482:
.LSFDE484:
	.long	.LEFDE484-.LASFDE484
.LASFDE484:
	.long	.Lframe0
	.long	.LFB257
	.long	.LFE257-.LFB257
	.byte	0x4
	.long	.LCFI940-.LFB257
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI941-.LCFI940
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI943-.LCFI941
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE484:
.LSFDE486:
	.long	.LEFDE486-.LASFDE486
.LASFDE486:
	.long	.Lframe0
	.long	.LFB258
	.long	.LFE258-.LFB258
	.byte	0x4
	.long	.LCFI944-.LFB258
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI945-.LCFI944
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI947-.LCFI945
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE486:
.LSFDE488:
	.long	.LEFDE488-.LASFDE488
.LASFDE488:
	.long	.Lframe0
	.long	.LFB259
	.long	.LFE259-.LFB259
	.byte	0x4
	.long	.LCFI948-.LFB259
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI949-.LCFI948
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI951-.LCFI949
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE488:
.LSFDE490:
	.long	.LEFDE490-.LASFDE490
.LASFDE490:
	.long	.Lframe0
	.long	.LFB260
	.long	.LFE260-.LFB260
	.byte	0x4
	.long	.LCFI952-.LFB260
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI953-.LCFI952
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI955-.LCFI953
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE490:
.LSFDE492:
	.long	.LEFDE492-.LASFDE492
.LASFDE492:
	.long	.Lframe0
	.long	.LFB261
	.long	.LFE261-.LFB261
	.byte	0x4
	.long	.LCFI956-.LFB261
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI957-.LCFI956
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE492:
.LSFDE494:
	.long	.LEFDE494-.LASFDE494
.LASFDE494:
	.long	.Lframe0
	.long	.LFB262
	.long	.LFE262-.LFB262
	.byte	0x4
	.long	.LCFI958-.LFB262
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI959-.LCFI958
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE494:
.LSFDE496:
	.long	.LEFDE496-.LASFDE496
.LASFDE496:
	.long	.Lframe0
	.long	.LFB263
	.long	.LFE263-.LFB263
	.byte	0x4
	.long	.LCFI961-.LFB263
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI962-.LCFI961
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI964-.LCFI962
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE496:
.LSFDE498:
	.long	.LEFDE498-.LASFDE498
.LASFDE498:
	.long	.Lframe0
	.long	.LFB264
	.long	.LFE264-.LFB264
	.byte	0x4
	.long	.LCFI965-.LFB264
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI966-.LCFI965
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI968-.LCFI966
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE498:
.LSFDE500:
	.long	.LEFDE500-.LASFDE500
.LASFDE500:
	.long	.Lframe0
	.long	.LFB265
	.long	.LFE265-.LFB265
	.byte	0x4
	.long	.LCFI969-.LFB265
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI970-.LCFI969
	.byte	0xd
	.uleb128 0x5
	.align 4
.LEFDE500:
.LSFDE502:
	.long	.LEFDE502-.LASFDE502
.LASFDE502:
	.long	.Lframe0
	.long	.LFB266
	.long	.LFE266-.LFB266
	.byte	0x4
	.long	.LCFI972-.LFB266
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI973-.LCFI972
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI975-.LCFI973
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE502:
.LSFDE504:
	.long	.LEFDE504-.LASFDE504
.LASFDE504:
	.long	.Lframe0
	.long	.LFB267
	.long	.LFE267-.LFB267
	.byte	0x4
	.long	.LCFI976-.LFB267
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI977-.LCFI976
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI979-.LCFI977
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE504:
.LSFDE506:
	.long	.LEFDE506-.LASFDE506
.LASFDE506:
	.long	.Lframe0
	.long	.LFB268
	.long	.LFE268-.LFB268
	.byte	0x4
	.long	.LCFI980-.LFB268
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI981-.LCFI980
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI983-.LCFI981
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE506:
.LSFDE508:
	.long	.LEFDE508-.LASFDE508
.LASFDE508:
	.long	.Lframe0
	.long	.LFB269
	.long	.LFE269-.LFB269
	.byte	0x4
	.long	.LCFI984-.LFB269
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI985-.LCFI984
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI987-.LCFI985
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE508:
.LSFDE510:
	.long	.LEFDE510-.LASFDE510
.LASFDE510:
	.long	.Lframe0
	.long	.LFB270
	.long	.LFE270-.LFB270
	.byte	0x4
	.long	.LCFI988-.LFB270
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI989-.LCFI988
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI991-.LCFI989
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE510:
.LSFDE512:
	.long	.LEFDE512-.LASFDE512
.LASFDE512:
	.long	.Lframe0
	.long	.LFB271
	.long	.LFE271-.LFB271
	.byte	0x4
	.long	.LCFI992-.LFB271
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI993-.LCFI992
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI995-.LCFI993
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE512:
.LSFDE514:
	.long	.LEFDE514-.LASFDE514
.LASFDE514:
	.long	.Lframe0
	.long	.LFB272
	.long	.LFE272-.LFB272
	.byte	0x4
	.long	.LCFI996-.LFB272
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI997-.LCFI996
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI999-.LCFI997
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE514:
.LSFDE516:
	.long	.LEFDE516-.LASFDE516
.LASFDE516:
	.long	.Lframe0
	.long	.LFB273
	.long	.LFE273-.LFB273
	.byte	0x4
	.long	.LCFI1000-.LFB273
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1001-.LCFI1000
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1003-.LCFI1001
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE516:
.LSFDE518:
	.long	.LEFDE518-.LASFDE518
.LASFDE518:
	.long	.Lframe0
	.long	.LFB274
	.long	.LFE274-.LFB274
	.byte	0x4
	.long	.LCFI1004-.LFB274
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1005-.LCFI1004
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1007-.LCFI1005
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE518:
.LSFDE520:
	.long	.LEFDE520-.LASFDE520
.LASFDE520:
	.long	.Lframe0
	.long	.LFB275
	.long	.LFE275-.LFB275
	.byte	0x4
	.long	.LCFI1008-.LFB275
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1009-.LCFI1008
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1011-.LCFI1009
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE520:
.LSFDE522:
	.long	.LEFDE522-.LASFDE522
.LASFDE522:
	.long	.Lframe0
	.long	.LFB276
	.long	.LFE276-.LFB276
	.byte	0x4
	.long	.LCFI1012-.LFB276
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1013-.LCFI1012
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1015-.LCFI1013
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE522:
.LSFDE524:
	.long	.LEFDE524-.LASFDE524
.LASFDE524:
	.long	.Lframe0
	.long	.LFB277
	.long	.LFE277-.LFB277
	.byte	0x4
	.long	.LCFI1016-.LFB277
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1017-.LCFI1016
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1019-.LCFI1017
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE524:
.LSFDE526:
	.long	.LEFDE526-.LASFDE526
.LASFDE526:
	.long	.Lframe0
	.long	.LFB278
	.long	.LFE278-.LFB278
	.byte	0x4
	.long	.LCFI1020-.LFB278
	.byte	0xe
	.uleb128 0x8
	.byte	0x85
	.uleb128 0x2
	.byte	0x4
	.long	.LCFI1021-.LCFI1020
	.byte	0xd
	.uleb128 0x5
	.byte	0x4
	.long	.LCFI1023-.LCFI1021
	.byte	0x83
	.uleb128 0x3
	.align 4
.LEFDE526:
	.file 5 "../../../kg++fe/gnu/cp/cp-tree.h"
	.file 6 "../../../kg++fe/gnu/MIPS/config.h"
	.file 7 "../../../kg++fe/gnu/tree.h"
	.file 8 "../../../kg++fe/gnu/rtl.h"
	.file 9 "../../../kg++fe/gnu/machmode.h"
	.file 10 "../../../kg++fe/gnu/hashtable.h"
	.file 11 "../../../kg++fe/gnu/location.h"
	.file 12 "../../../kg++fe/gnu/function.h"
	.file 13 "../../../kg++fe/gnu/MIPS/mips.h"
	.file 14 "../../../kg++fe/gnu/c-common.h"
	.file 15 "/usr/lib/gcc/i486-linux-gnu/4.1.2/include/stddef.h"
	.file 16 "../../../kg++fe/gnu/varray.h"
	.file 17 "../../../kg++fe/omp_types.h"
	.file 18 "../../../include/gnu/splay-tree.h"
	.file 19 "../../../include/gnu/hashtab.h"
	.file 20 "../../../kg++fe/gnu/cp/lex.h"
	.file 21 "../../../kg++fe/gnu/cp/decl.h"
	.file 22 "../../../kg++fe/gnu/cpplib.h"
	.file 23 "/usr/include/stdio.h"
	.file 24 "/usr/include/libio.h"
	.file 25 "/usr/include/bits/types.h"
	.file 26 "../../../kg++fe/gnu/input.h"
	.file 27 "../../../kg++fe/gnu/flags.h"
	.file 28 "../../../kg++fe/gnu/tree-inline.h"
	.file 29 "../../../kg++fe/gnu/ggc.h"
	.file 30 "../../../kg++fe/gnu/target.h"
	.file 31 "../../../kg++fe/gnu/diagnostic.h"
	.file 32 "../../../include/gnu/obstack.h"
	.file 33 "/usr/lib/gcc/i486-linux-gnu/4.1.2/include/stdarg.h"
	.file 34 "../../../kg++fe/gnu/debug.h"
	.text
.Letext0:
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
.LLST0:
	.long	.LFB20-.Ltext0
	.long	.LCFI0-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI0-.Ltext0
	.long	.LCFI1-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1-.Ltext0
	.long	.LFE20-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST1:
	.long	.LFB17-.Ltext0
	.long	.LCFI3-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI3-.Ltext0
	.long	.LCFI4-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI4-.Ltext0
	.long	.LFE17-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST2:
	.long	.LFB22-.Ltext0
	.long	.LCFI7-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI7-.Ltext0
	.long	.LCFI8-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI8-.Ltext0
	.long	.LFE22-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST3:
	.long	.LFB25-.Ltext0
	.long	.LCFI10-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI10-.Ltext0
	.long	.LCFI11-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI11-.Ltext0
	.long	.LFE25-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST4:
	.long	.LFB16-.Ltext0
	.long	.LCFI13-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI13-.Ltext0
	.long	.LCFI14-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI14-.Ltext0
	.long	.LFE16-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST5:
	.long	.LFB26-.Ltext0
	.long	.LCFI15-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI15-.Ltext0
	.long	.LCFI16-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI16-.Ltext0
	.long	.LFE26-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST6:
	.long	.LFB28-.Ltext0
	.long	.LCFI18-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI18-.Ltext0
	.long	.LCFI19-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI19-.Ltext0
	.long	.LFE28-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST7:
	.long	.LFB29-.Ltext0
	.long	.LCFI22-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI22-.Ltext0
	.long	.LCFI23-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI23-.Ltext0
	.long	.LFE29-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST8:
	.long	.LFB27-.Ltext0
	.long	.LCFI26-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI26-.Ltext0
	.long	.LCFI27-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI27-.Ltext0
	.long	.LFE27-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST9:
	.long	.LFB30-.Ltext0
	.long	.LCFI28-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI28-.Ltext0
	.long	.LCFI29-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI29-.Ltext0
	.long	.LFE30-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST10:
	.long	.LFB31-.Ltext0
	.long	.LCFI31-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI31-.Ltext0
	.long	.LCFI32-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI32-.Ltext0
	.long	.LFE31-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST11:
	.long	.LFB18-.Ltext0
	.long	.LCFI35-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI35-.Ltext0
	.long	.LCFI36-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI36-.Ltext0
	.long	.LFE18-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST12:
	.long	.LFB32-.Ltext0
	.long	.LCFI38-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI38-.Ltext0
	.long	.LCFI39-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI39-.Ltext0
	.long	.LFE32-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST13:
	.long	.LFB33-.Ltext0
	.long	.LCFI42-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI42-.Ltext0
	.long	.LCFI43-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI43-.Ltext0
	.long	.LFE33-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST14:
	.long	.LFB34-.Ltext0
	.long	.LCFI46-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI46-.Ltext0
	.long	.LCFI47-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI47-.Ltext0
	.long	.LFE34-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST15:
	.long	.LFB35-.Ltext0
	.long	.LCFI50-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI50-.Ltext0
	.long	.LCFI51-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI51-.Ltext0
	.long	.LFE35-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST16:
	.long	.LFB36-.Ltext0
	.long	.LCFI53-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI53-.Ltext0
	.long	.LCFI54-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI54-.Ltext0
	.long	.LFE36-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST17:
	.long	.LFB37-.Ltext0
	.long	.LCFI56-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI56-.Ltext0
	.long	.LCFI57-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI57-.Ltext0
	.long	.LFE37-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST18:
	.long	.LFB38-.Ltext0
	.long	.LCFI59-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI59-.Ltext0
	.long	.LCFI60-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI60-.Ltext0
	.long	.LFE38-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST19:
	.long	.LFB39-.Ltext0
	.long	.LCFI62-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI62-.Ltext0
	.long	.LCFI63-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI63-.Ltext0
	.long	.LFE39-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST20:
	.long	.LFB40-.Ltext0
	.long	.LCFI64-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI64-.Ltext0
	.long	.LCFI65-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI65-.Ltext0
	.long	.LFE40-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST21:
	.long	.LFB41-.Ltext0
	.long	.LCFI67-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI67-.Ltext0
	.long	.LCFI68-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI68-.Ltext0
	.long	.LFE41-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST22:
	.long	.LFB42-.Ltext0
	.long	.LCFI70-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI70-.Ltext0
	.long	.LCFI71-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI71-.Ltext0
	.long	.LFE42-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST23:
	.long	.LFB43-.Ltext0
	.long	.LCFI73-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI73-.Ltext0
	.long	.LCFI74-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI74-.Ltext0
	.long	.LFE43-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST24:
	.long	.LFB44-.Ltext0
	.long	.LCFI76-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI76-.Ltext0
	.long	.LCFI77-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI77-.Ltext0
	.long	.LFE44-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST25:
	.long	.LFB45-.Ltext0
	.long	.LCFI79-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI79-.Ltext0
	.long	.LCFI80-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI80-.Ltext0
	.long	.LFE45-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST26:
	.long	.LFB46-.Ltext0
	.long	.LCFI81-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI81-.Ltext0
	.long	.LCFI82-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI82-.Ltext0
	.long	.LFE46-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST27:
	.long	.LFB47-.Ltext0
	.long	.LCFI85-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI85-.Ltext0
	.long	.LCFI86-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI86-.Ltext0
	.long	.LFE47-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST28:
	.long	.LFB48-.Ltext0
	.long	.LCFI89-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI89-.Ltext0
	.long	.LCFI90-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI90-.Ltext0
	.long	.LFE48-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST29:
	.long	.LFB49-.Ltext0
	.long	.LCFI93-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI93-.Ltext0
	.long	.LCFI94-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI94-.Ltext0
	.long	.LFE49-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST30:
	.long	.LFB50-.Ltext0
	.long	.LCFI97-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI97-.Ltext0
	.long	.LCFI98-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI98-.Ltext0
	.long	.LFE50-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST31:
	.long	.LFB51-.Ltext0
	.long	.LCFI100-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI100-.Ltext0
	.long	.LCFI101-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI101-.Ltext0
	.long	.LFE51-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST32:
	.long	.LFB52-.Ltext0
	.long	.LCFI103-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI103-.Ltext0
	.long	.LCFI104-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI104-.Ltext0
	.long	.LFE52-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST33:
	.long	.LFB53-.Ltext0
	.long	.LCFI106-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI106-.Ltext0
	.long	.LCFI107-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI107-.Ltext0
	.long	.LFE53-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST34:
	.long	.LFB54-.Ltext0
	.long	.LCFI110-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI110-.Ltext0
	.long	.LCFI111-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI111-.Ltext0
	.long	.LFE54-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST35:
	.long	.LFB55-.Ltext0
	.long	.LCFI114-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI114-.Ltext0
	.long	.LCFI115-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI115-.Ltext0
	.long	.LFE55-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST36:
	.long	.LFB56-.Ltext0
	.long	.LCFI119-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI119-.Ltext0
	.long	.LCFI120-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI120-.Ltext0
	.long	.LFE56-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST37:
	.long	.LFB57-.Ltext0
	.long	.LCFI123-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI123-.Ltext0
	.long	.LCFI124-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI124-.Ltext0
	.long	.LFE57-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST38:
	.long	.LFB58-.Ltext0
	.long	.LCFI127-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI127-.Ltext0
	.long	.LCFI128-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI128-.Ltext0
	.long	.LFE58-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST39:
	.long	.LFB59-.Ltext0
	.long	.LCFI131-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI131-.Ltext0
	.long	.LCFI132-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI132-.Ltext0
	.long	.LFE59-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST40:
	.long	.LFB60-.Ltext0
	.long	.LCFI136-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI136-.Ltext0
	.long	.LCFI137-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI137-.Ltext0
	.long	.LFE60-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST41:
	.long	.LFB61-.Ltext0
	.long	.LCFI140-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI140-.Ltext0
	.long	.LCFI141-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI141-.Ltext0
	.long	.LFE61-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST42:
	.long	.LFB62-.Ltext0
	.long	.LCFI144-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI144-.Ltext0
	.long	.LCFI145-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI145-.Ltext0
	.long	.LFE62-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST43:
	.long	.LFB63-.Ltext0
	.long	.LCFI147-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI147-.Ltext0
	.long	.LCFI148-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI148-.Ltext0
	.long	.LFE63-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST44:
	.long	.LFB64-.Ltext0
	.long	.LCFI151-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI151-.Ltext0
	.long	.LCFI152-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI152-.Ltext0
	.long	.LFE64-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST45:
	.long	.LFB65-.Ltext0
	.long	.LCFI155-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI155-.Ltext0
	.long	.LCFI156-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI156-.Ltext0
	.long	.LFE65-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST46:
	.long	.LFB66-.Ltext0
	.long	.LCFI159-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI159-.Ltext0
	.long	.LCFI160-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI160-.Ltext0
	.long	.LFE66-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST47:
	.long	.LFB67-.Ltext0
	.long	.LCFI163-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI163-.Ltext0
	.long	.LCFI164-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI164-.Ltext0
	.long	.LFE67-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST48:
	.long	.LFB68-.Ltext0
	.long	.LCFI166-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI166-.Ltext0
	.long	.LCFI167-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI167-.Ltext0
	.long	.LFE68-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST49:
	.long	.LFB69-.Ltext0
	.long	.LCFI169-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI169-.Ltext0
	.long	.LCFI170-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI170-.Ltext0
	.long	.LFE69-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST50:
	.long	.LFB70-.Ltext0
	.long	.LCFI172-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI172-.Ltext0
	.long	.LCFI173-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI173-.Ltext0
	.long	.LFE70-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST51:
	.long	.LFB71-.Ltext0
	.long	.LCFI174-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI174-.Ltext0
	.long	.LCFI175-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI175-.Ltext0
	.long	.LFE71-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST52:
	.long	.LFB72-.Ltext0
	.long	.LCFI177-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI177-.Ltext0
	.long	.LCFI178-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI178-.Ltext0
	.long	.LFE72-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST53:
	.long	.LFB73-.Ltext0
	.long	.LCFI181-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI181-.Ltext0
	.long	.LCFI182-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI182-.Ltext0
	.long	.LFE73-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST54:
	.long	.LFB74-.Ltext0
	.long	.LCFI184-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI184-.Ltext0
	.long	.LCFI185-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI185-.Ltext0
	.long	.LFE74-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST55:
	.long	.LFB75-.Ltext0
	.long	.LCFI188-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI188-.Ltext0
	.long	.LCFI189-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI189-.Ltext0
	.long	.LFE75-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST56:
	.long	.LFB76-.Ltext0
	.long	.LCFI191-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI191-.Ltext0
	.long	.LCFI192-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI192-.Ltext0
	.long	.LFE76-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST57:
	.long	.LFB77-.Ltext0
	.long	.LCFI195-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI195-.Ltext0
	.long	.LCFI196-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI196-.Ltext0
	.long	.LFE77-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST58:
	.long	.LFB78-.Ltext0
	.long	.LCFI199-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI199-.Ltext0
	.long	.LCFI200-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI200-.Ltext0
	.long	.LFE78-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST59:
	.long	.LFB79-.Ltext0
	.long	.LCFI203-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI203-.Ltext0
	.long	.LCFI204-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI204-.Ltext0
	.long	.LFE79-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST60:
	.long	.LFB80-.Ltext0
	.long	.LCFI209-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI209-.Ltext0
	.long	.LCFI210-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI210-.Ltext0
	.long	.LFE80-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST61:
	.long	.LFB81-.Ltext0
	.long	.LCFI213-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI213-.Ltext0
	.long	.LCFI214-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI214-.Ltext0
	.long	.LFE81-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST62:
	.long	.LFB83-.Ltext0
	.long	.LCFI217-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI217-.Ltext0
	.long	.LCFI218-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI218-.Ltext0
	.long	.LFE83-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST63:
	.long	.LFB82-.Ltext0
	.long	.LCFI220-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI220-.Ltext0
	.long	.LCFI221-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI221-.Ltext0
	.long	.LFE82-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST64:
	.long	.LFB84-.Ltext0
	.long	.LCFI224-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI224-.Ltext0
	.long	.LCFI225-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI225-.Ltext0
	.long	.LFE84-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST65:
	.long	.LFB85-.Ltext0
	.long	.LCFI228-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI228-.Ltext0
	.long	.LCFI229-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI229-.Ltext0
	.long	.LFE85-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST66:
	.long	.LFB86-.Ltext0
	.long	.LCFI232-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI232-.Ltext0
	.long	.LCFI233-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI233-.Ltext0
	.long	.LFE86-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST67:
	.long	.LFB87-.Ltext0
	.long	.LCFI236-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI236-.Ltext0
	.long	.LCFI237-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI237-.Ltext0
	.long	.LFE87-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST68:
	.long	.LFB19-.Ltext0
	.long	.LCFI240-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI240-.Ltext0
	.long	.LCFI241-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI241-.Ltext0
	.long	.LFE19-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST69:
	.long	.LFB88-.Ltext0
	.long	.LCFI244-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI244-.Ltext0
	.long	.LCFI245-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI245-.Ltext0
	.long	.LFE88-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST70:
	.long	.LFB89-.Ltext0
	.long	.LCFI248-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI248-.Ltext0
	.long	.LCFI249-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI249-.Ltext0
	.long	.LFE89-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST71:
	.long	.LFB90-.Ltext0
	.long	.LCFI252-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI252-.Ltext0
	.long	.LCFI253-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI253-.Ltext0
	.long	.LFE90-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST72:
	.long	.LFB91-.Ltext0
	.long	.LCFI256-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI256-.Ltext0
	.long	.LCFI257-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI257-.Ltext0
	.long	.LFE91-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST73:
	.long	.LFB92-.Ltext0
	.long	.LCFI260-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI260-.Ltext0
	.long	.LCFI261-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI261-.Ltext0
	.long	.LFE92-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST74:
	.long	.LFB93-.Ltext0
	.long	.LCFI265-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI265-.Ltext0
	.long	.LCFI266-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI266-.Ltext0
	.long	.LFE93-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST75:
	.long	.LFB94-.Ltext0
	.long	.LCFI269-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI269-.Ltext0
	.long	.LCFI270-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI270-.Ltext0
	.long	.LFE94-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST76:
	.long	.LFB95-.Ltext0
	.long	.LCFI273-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI273-.Ltext0
	.long	.LCFI274-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI274-.Ltext0
	.long	.LFE95-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST77:
	.long	.LFB96-.Ltext0
	.long	.LCFI277-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI277-.Ltext0
	.long	.LCFI278-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI278-.Ltext0
	.long	.LFE96-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST78:
	.long	.LFB97-.Ltext0
	.long	.LCFI281-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI281-.Ltext0
	.long	.LCFI282-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI282-.Ltext0
	.long	.LFE97-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST79:
	.long	.LFB98-.Ltext0
	.long	.LCFI285-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI285-.Ltext0
	.long	.LCFI286-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI286-.Ltext0
	.long	.LFE98-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST80:
	.long	.LFB99-.Ltext0
	.long	.LCFI289-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI289-.Ltext0
	.long	.LCFI290-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI290-.Ltext0
	.long	.LFE99-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST81:
	.long	.LFB21-.Ltext0
	.long	.LCFI294-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI294-.Ltext0
	.long	.LCFI295-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI295-.Ltext0
	.long	.LFE21-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST82:
	.long	.LFB15-.Ltext0
	.long	.LCFI297-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI297-.Ltext0
	.long	.LCFI298-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI298-.Ltext0
	.long	.LFE15-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST83:
	.long	.LFB100-.Ltext0
	.long	.LCFI301-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI301-.Ltext0
	.long	.LCFI302-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI302-.Ltext0
	.long	.LFE100-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST84:
	.long	.LFB101-.Ltext0
	.long	.LCFI305-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI305-.Ltext0
	.long	.LCFI306-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI306-.Ltext0
	.long	.LFE101-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST85:
	.long	.LFB102-.Ltext0
	.long	.LCFI310-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI310-.Ltext0
	.long	.LCFI311-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI311-.Ltext0
	.long	.LFE102-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST86:
	.long	.LFB103-.Ltext0
	.long	.LCFI315-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI315-.Ltext0
	.long	.LCFI316-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI316-.Ltext0
	.long	.LFE103-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST87:
	.long	.LFB104-.Ltext0
	.long	.LCFI319-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI319-.Ltext0
	.long	.LCFI320-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI320-.Ltext0
	.long	.LFE104-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST88:
	.long	.LFB105-.Ltext0
	.long	.LCFI323-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI323-.Ltext0
	.long	.LCFI324-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI324-.Ltext0
	.long	.LFE105-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST89:
	.long	.LFB106-.Ltext0
	.long	.LCFI327-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI327-.Ltext0
	.long	.LCFI328-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI328-.Ltext0
	.long	.LFE106-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST90:
	.long	.LFB107-.Ltext0
	.long	.LCFI331-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI331-.Ltext0
	.long	.LCFI332-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI332-.Ltext0
	.long	.LFE107-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST91:
	.long	.LFB108-.Ltext0
	.long	.LCFI337-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI337-.Ltext0
	.long	.LCFI338-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI338-.Ltext0
	.long	.LFE108-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST92:
	.long	.LFB109-.Ltext0
	.long	.LCFI341-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI341-.Ltext0
	.long	.LCFI342-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI342-.Ltext0
	.long	.LFE109-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST93:
	.long	.LFB110-.Ltext0
	.long	.LCFI345-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI345-.Ltext0
	.long	.LCFI346-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI346-.Ltext0
	.long	.LFE110-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST94:
	.long	.LFB111-.Ltext0
	.long	.LCFI349-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI349-.Ltext0
	.long	.LCFI350-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI350-.Ltext0
	.long	.LFE111-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST95:
	.long	.LFB112-.Ltext0
	.long	.LCFI353-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI353-.Ltext0
	.long	.LCFI354-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI354-.Ltext0
	.long	.LFE112-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST96:
	.long	.LFB113-.Ltext0
	.long	.LCFI356-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI356-.Ltext0
	.long	.LCFI357-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI357-.Ltext0
	.long	.LFE113-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST97:
	.long	.LFB114-.Ltext0
	.long	.LCFI359-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI359-.Ltext0
	.long	.LCFI360-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI360-.Ltext0
	.long	.LFE114-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST98:
	.long	.LFB115-.Ltext0
	.long	.LCFI363-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI363-.Ltext0
	.long	.LCFI364-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI364-.Ltext0
	.long	.LFE115-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST99:
	.long	.LFB116-.Ltext0
	.long	.LCFI367-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI367-.Ltext0
	.long	.LCFI368-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI368-.Ltext0
	.long	.LFE116-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST100:
	.long	.LFB117-.Ltext0
	.long	.LCFI372-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI372-.Ltext0
	.long	.LCFI373-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI373-.Ltext0
	.long	.LFE117-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST101:
	.long	.LFB118-.Ltext0
	.long	.LCFI376-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI376-.Ltext0
	.long	.LCFI377-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI377-.Ltext0
	.long	.LFE118-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST102:
	.long	.LFB119-.Ltext0
	.long	.LCFI380-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI380-.Ltext0
	.long	.LCFI381-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI381-.Ltext0
	.long	.LFE119-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST103:
	.long	.LFB120-.Ltext0
	.long	.LCFI384-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI384-.Ltext0
	.long	.LCFI385-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI385-.Ltext0
	.long	.LFE120-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST104:
	.long	.LFB121-.Ltext0
	.long	.LCFI389-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI389-.Ltext0
	.long	.LCFI390-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI390-.Ltext0
	.long	.LFE121-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST105:
	.long	.LFB122-.Ltext0
	.long	.LCFI393-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI393-.Ltext0
	.long	.LCFI394-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI394-.Ltext0
	.long	.LFE122-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST106:
	.long	.LFB123-.Ltext0
	.long	.LCFI398-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI398-.Ltext0
	.long	.LCFI399-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI399-.Ltext0
	.long	.LFE123-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST107:
	.long	.LFB124-.Ltext0
	.long	.LCFI402-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI402-.Ltext0
	.long	.LCFI403-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI403-.Ltext0
	.long	.LFE124-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST108:
	.long	.LFB125-.Ltext0
	.long	.LCFI406-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI406-.Ltext0
	.long	.LCFI407-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI407-.Ltext0
	.long	.LFE125-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST109:
	.long	.LFB126-.Ltext0
	.long	.LCFI410-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI410-.Ltext0
	.long	.LCFI411-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI411-.Ltext0
	.long	.LFE126-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST110:
	.long	.LFB127-.Ltext0
	.long	.LCFI414-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI414-.Ltext0
	.long	.LCFI415-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI415-.Ltext0
	.long	.LFE127-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST111:
	.long	.LFB128-.Ltext0
	.long	.LCFI418-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI418-.Ltext0
	.long	.LCFI419-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI419-.Ltext0
	.long	.LFE128-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST112:
	.long	.LFB129-.Ltext0
	.long	.LCFI423-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI423-.Ltext0
	.long	.LCFI424-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI424-.Ltext0
	.long	.LFE129-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST113:
	.long	.LFB130-.Ltext0
	.long	.LCFI426-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI426-.Ltext0
	.long	.LCFI427-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI427-.Ltext0
	.long	.LFE130-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST114:
	.long	.LFB131-.Ltext0
	.long	.LCFI430-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI430-.Ltext0
	.long	.LCFI431-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI431-.Ltext0
	.long	.LFE131-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST115:
	.long	.LFB132-.Ltext0
	.long	.LCFI434-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI434-.Ltext0
	.long	.LCFI435-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI435-.Ltext0
	.long	.LFE132-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST116:
	.long	.LFB133-.Ltext0
	.long	.LCFI438-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI438-.Ltext0
	.long	.LCFI439-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI439-.Ltext0
	.long	.LFE133-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST117:
	.long	.LFB134-.Ltext0
	.long	.LCFI442-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI442-.Ltext0
	.long	.LCFI443-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI443-.Ltext0
	.long	.LFE134-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST118:
	.long	.LFB135-.Ltext0
	.long	.LCFI446-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI446-.Ltext0
	.long	.LCFI447-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI447-.Ltext0
	.long	.LFE135-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST119:
	.long	.LFB136-.Ltext0
	.long	.LCFI450-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI450-.Ltext0
	.long	.LCFI451-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI451-.Ltext0
	.long	.LFE136-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST120:
	.long	.LFB137-.Ltext0
	.long	.LCFI453-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI453-.Ltext0
	.long	.LCFI454-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI454-.Ltext0
	.long	.LFE137-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST121:
	.long	.LFB138-.Ltext0
	.long	.LCFI456-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI456-.Ltext0
	.long	.LCFI457-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI457-.Ltext0
	.long	.LFE138-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST122:
	.long	.LFB139-.Ltext0
	.long	.LCFI459-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI459-.Ltext0
	.long	.LCFI460-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI460-.Ltext0
	.long	.LFE139-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST123:
	.long	.LFB140-.Ltext0
	.long	.LCFI463-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI463-.Ltext0
	.long	.LCFI464-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI464-.Ltext0
	.long	.LFE140-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST124:
	.long	.LFB23-.Ltext0
	.long	.LCFI467-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI467-.Ltext0
	.long	.LCFI468-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI468-.Ltext0
	.long	.LFE23-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST125:
	.long	.LFB141-.Ltext0
	.long	.LCFI470-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI470-.Ltext0
	.long	.LCFI471-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI471-.Ltext0
	.long	.LFE141-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST126:
	.long	.LFB24-.Ltext0
	.long	.LCFI474-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI474-.Ltext0
	.long	.LCFI475-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI475-.Ltext0
	.long	.LFE24-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST127:
	.long	.LFB142-.Ltext0
	.long	.LCFI477-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI477-.Ltext0
	.long	.LCFI478-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI478-.Ltext0
	.long	.LFE142-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST128:
	.long	.LFB143-.Ltext0
	.long	.LCFI481-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI481-.Ltext0
	.long	.LCFI482-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI482-.Ltext0
	.long	.LFE143-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST129:
	.long	.LFB144-.Ltext0
	.long	.LCFI486-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI486-.Ltext0
	.long	.LCFI487-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI487-.Ltext0
	.long	.LFE144-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST130:
	.long	.LFB145-.Ltext0
	.long	.LCFI490-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI490-.Ltext0
	.long	.LCFI491-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI491-.Ltext0
	.long	.LFE145-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST131:
	.long	.LFB146-.Ltext0
	.long	.LCFI494-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI494-.Ltext0
	.long	.LCFI495-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI495-.Ltext0
	.long	.LFE146-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST132:
	.long	.LFB147-.Ltext0
	.long	.LCFI498-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI498-.Ltext0
	.long	.LCFI499-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI499-.Ltext0
	.long	.LFE147-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST133:
	.long	.LFB148-.Ltext0
	.long	.LCFI502-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI502-.Ltext0
	.long	.LCFI503-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI503-.Ltext0
	.long	.LFE148-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST134:
	.long	.LFB149-.Ltext0
	.long	.LCFI506-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI506-.Ltext0
	.long	.LCFI507-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI507-.Ltext0
	.long	.LFE149-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST135:
	.long	.LFB150-.Ltext0
	.long	.LCFI510-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI510-.Ltext0
	.long	.LCFI511-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI511-.Ltext0
	.long	.LFE150-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST136:
	.long	.LFB151-.Ltext0
	.long	.LCFI513-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI513-.Ltext0
	.long	.LCFI514-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI514-.Ltext0
	.long	.LFE151-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST137:
	.long	.LFB152-.Ltext0
	.long	.LCFI516-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI516-.Ltext0
	.long	.LCFI517-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI517-.Ltext0
	.long	.LFE152-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST138:
	.long	.LFB153-.Ltext0
	.long	.LCFI520-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI520-.Ltext0
	.long	.LCFI521-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI521-.Ltext0
	.long	.LFE153-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST139:
	.long	.LFB154-.Ltext0
	.long	.LCFI524-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI524-.Ltext0
	.long	.LCFI525-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI525-.Ltext0
	.long	.LFE154-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST140:
	.long	.LFB155-.Ltext0
	.long	.LCFI529-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI529-.Ltext0
	.long	.LCFI530-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI530-.Ltext0
	.long	.LFE155-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST141:
	.long	.LFB156-.Ltext0
	.long	.LCFI532-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI532-.Ltext0
	.long	.LCFI533-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI533-.Ltext0
	.long	.LFE156-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST142:
	.long	.LFB157-.Ltext0
	.long	.LCFI536-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI536-.Ltext0
	.long	.LCFI537-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI537-.Ltext0
	.long	.LFE157-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST143:
	.long	.LFB158-.Ltext0
	.long	.LCFI539-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI539-.Ltext0
	.long	.LCFI540-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI540-.Ltext0
	.long	.LFE158-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST144:
	.long	.LFB159-.Ltext0
	.long	.LCFI542-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI542-.Ltext0
	.long	.LCFI543-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI543-.Ltext0
	.long	.LFE159-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST145:
	.long	.LFB160-.Ltext0
	.long	.LCFI546-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI546-.Ltext0
	.long	.LCFI547-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI547-.Ltext0
	.long	.LFE160-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST146:
	.long	.LFB161-.Ltext0
	.long	.LCFI550-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI550-.Ltext0
	.long	.LCFI551-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI551-.Ltext0
	.long	.LFE161-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST147:
	.long	.LFB162-.Ltext0
	.long	.LCFI552-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI552-.Ltext0
	.long	.LCFI553-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI553-.Ltext0
	.long	.LFE162-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST148:
	.long	.LFB163-.Ltext0
	.long	.LCFI554-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI554-.Ltext0
	.long	.LCFI555-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI555-.Ltext0
	.long	.LFE163-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST149:
	.long	.LFB164-.Ltext0
	.long	.LCFI558-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI558-.Ltext0
	.long	.LCFI559-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI559-.Ltext0
	.long	.LFE164-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST150:
	.long	.LFB165-.Ltext0
	.long	.LCFI562-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI562-.Ltext0
	.long	.LCFI563-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI563-.Ltext0
	.long	.LFE165-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST151:
	.long	.LFB166-.Ltext0
	.long	.LCFI566-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI566-.Ltext0
	.long	.LCFI567-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI567-.Ltext0
	.long	.LFE166-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST152:
	.long	.LFB167-.Ltext0
	.long	.LCFI571-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI571-.Ltext0
	.long	.LCFI572-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI572-.Ltext0
	.long	.LFE167-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST153:
	.long	.LFB168-.Ltext0
	.long	.LCFI576-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI576-.Ltext0
	.long	.LCFI577-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI577-.Ltext0
	.long	.LFE168-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST154:
	.long	.LFB169-.Ltext0
	.long	.LCFI581-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI581-.Ltext0
	.long	.LCFI582-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI582-.Ltext0
	.long	.LFE169-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST155:
	.long	.LFB170-.Ltext0
	.long	.LCFI585-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI585-.Ltext0
	.long	.LCFI586-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI586-.Ltext0
	.long	.LFE170-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST156:
	.long	.LFB171-.Ltext0
	.long	.LCFI590-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI590-.Ltext0
	.long	.LCFI591-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI591-.Ltext0
	.long	.LFE171-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST157:
	.long	.LFB172-.Ltext0
	.long	.LCFI594-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI594-.Ltext0
	.long	.LCFI595-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI595-.Ltext0
	.long	.LFE172-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST158:
	.long	.LFB173-.Ltext0
	.long	.LCFI598-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI598-.Ltext0
	.long	.LCFI599-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI599-.Ltext0
	.long	.LFE173-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST159:
	.long	.LFB174-.Ltext0
	.long	.LCFI601-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI601-.Ltext0
	.long	.LCFI602-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI602-.Ltext0
	.long	.LFE174-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST160:
	.long	.LFB175-.Ltext0
	.long	.LCFI605-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI605-.Ltext0
	.long	.LCFI606-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI606-.Ltext0
	.long	.LFE175-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST161:
	.long	.LFB176-.Ltext0
	.long	.LCFI609-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI609-.Ltext0
	.long	.LCFI610-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI610-.Ltext0
	.long	.LFE176-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST162:
	.long	.LFB177-.Ltext0
	.long	.LCFI613-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI613-.Ltext0
	.long	.LCFI614-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI614-.Ltext0
	.long	.LFE177-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST163:
	.long	.LFB178-.Ltext0
	.long	.LCFI617-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI617-.Ltext0
	.long	.LCFI618-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI618-.Ltext0
	.long	.LFE178-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST164:
	.long	.LFB179-.Ltext0
	.long	.LCFI621-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI621-.Ltext0
	.long	.LCFI622-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI622-.Ltext0
	.long	.LFE179-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST165:
	.long	.LFB180-.Ltext0
	.long	.LCFI625-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI625-.Ltext0
	.long	.LCFI626-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI626-.Ltext0
	.long	.LFE180-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST166:
	.long	.LFB181-.Ltext0
	.long	.LCFI629-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI629-.Ltext0
	.long	.LCFI630-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI630-.Ltext0
	.long	.LFE181-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST167:
	.long	.LFB182-.Ltext0
	.long	.LCFI633-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI633-.Ltext0
	.long	.LCFI634-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI634-.Ltext0
	.long	.LFE182-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST168:
	.long	.LFB183-.Ltext0
	.long	.LCFI637-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI637-.Ltext0
	.long	.LCFI638-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI638-.Ltext0
	.long	.LFE183-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST169:
	.long	.LFB184-.Ltext0
	.long	.LCFI641-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI641-.Ltext0
	.long	.LCFI642-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI642-.Ltext0
	.long	.LFE184-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST170:
	.long	.LFB185-.Ltext0
	.long	.LCFI645-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI645-.Ltext0
	.long	.LCFI646-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI646-.Ltext0
	.long	.LFE185-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST171:
	.long	.LFB186-.Ltext0
	.long	.LCFI649-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI649-.Ltext0
	.long	.LCFI650-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI650-.Ltext0
	.long	.LFE186-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST172:
	.long	.LFB187-.Ltext0
	.long	.LCFI654-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI654-.Ltext0
	.long	.LCFI655-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI655-.Ltext0
	.long	.LFE187-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST173:
	.long	.LFB188-.Ltext0
	.long	.LCFI658-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI658-.Ltext0
	.long	.LCFI659-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI659-.Ltext0
	.long	.LFE188-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST174:
	.long	.LFB189-.Ltext0
	.long	.LCFI662-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI662-.Ltext0
	.long	.LCFI663-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI663-.Ltext0
	.long	.LFE189-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST175:
	.long	.LFB190-.Ltext0
	.long	.LCFI666-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI666-.Ltext0
	.long	.LCFI667-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI667-.Ltext0
	.long	.LFE190-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST176:
	.long	.LFB191-.Ltext0
	.long	.LCFI670-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI670-.Ltext0
	.long	.LCFI671-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI671-.Ltext0
	.long	.LFE191-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST177:
	.long	.LFB192-.Ltext0
	.long	.LCFI674-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI674-.Ltext0
	.long	.LCFI675-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI675-.Ltext0
	.long	.LFE192-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST178:
	.long	.LFB193-.Ltext0
	.long	.LCFI678-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI678-.Ltext0
	.long	.LCFI679-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI679-.Ltext0
	.long	.LFE193-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST179:
	.long	.LFB194-.Ltext0
	.long	.LCFI680-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI680-.Ltext0
	.long	.LCFI681-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI681-.Ltext0
	.long	.LFE194-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST180:
	.long	.LFB195-.Ltext0
	.long	.LCFI684-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI684-.Ltext0
	.long	.LCFI685-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI685-.Ltext0
	.long	.LFE195-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST181:
	.long	.LFB196-.Ltext0
	.long	.LCFI688-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI688-.Ltext0
	.long	.LCFI689-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI689-.Ltext0
	.long	.LFE196-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST182:
	.long	.LFB197-.Ltext0
	.long	.LCFI692-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI692-.Ltext0
	.long	.LCFI693-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI693-.Ltext0
	.long	.LFE197-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST183:
	.long	.LFB198-.Ltext0
	.long	.LCFI696-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI696-.Ltext0
	.long	.LCFI697-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI697-.Ltext0
	.long	.LFE198-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST184:
	.long	.LFB199-.Ltext0
	.long	.LCFI700-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI700-.Ltext0
	.long	.LCFI701-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI701-.Ltext0
	.long	.LFE199-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST185:
	.long	.LFB200-.Ltext0
	.long	.LCFI704-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI704-.Ltext0
	.long	.LCFI705-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI705-.Ltext0
	.long	.LFE200-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST186:
	.long	.LFB201-.Ltext0
	.long	.LCFI708-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI708-.Ltext0
	.long	.LCFI709-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI709-.Ltext0
	.long	.LFE201-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST187:
	.long	.LFB202-.Ltext0
	.long	.LCFI712-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI712-.Ltext0
	.long	.LCFI713-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI713-.Ltext0
	.long	.LFE202-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST188:
	.long	.LFB203-.Ltext0
	.long	.LCFI716-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI716-.Ltext0
	.long	.LCFI717-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI717-.Ltext0
	.long	.LFE203-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST189:
	.long	.LFB204-.Ltext0
	.long	.LCFI721-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI721-.Ltext0
	.long	.LCFI722-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI722-.Ltext0
	.long	.LFE204-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST190:
	.long	.LFB205-.Ltext0
	.long	.LCFI725-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI725-.Ltext0
	.long	.LCFI726-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI726-.Ltext0
	.long	.LFE205-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST191:
	.long	.LFB206-.Ltext0
	.long	.LCFI729-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI729-.Ltext0
	.long	.LCFI730-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI730-.Ltext0
	.long	.LFE206-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST192:
	.long	.LFB207-.Ltext0
	.long	.LCFI733-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI733-.Ltext0
	.long	.LCFI734-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI734-.Ltext0
	.long	.LFE207-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST193:
	.long	.LFB208-.Ltext0
	.long	.LCFI737-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI737-.Ltext0
	.long	.LCFI738-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI738-.Ltext0
	.long	.LFE208-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST194:
	.long	.LFB209-.Ltext0
	.long	.LCFI741-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI741-.Ltext0
	.long	.LCFI742-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI742-.Ltext0
	.long	.LFE209-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST195:
	.long	.LFB210-.Ltext0
	.long	.LCFI745-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI745-.Ltext0
	.long	.LCFI746-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI746-.Ltext0
	.long	.LFE210-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST196:
	.long	.LFB211-.Ltext0
	.long	.LCFI749-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI749-.Ltext0
	.long	.LCFI750-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI750-.Ltext0
	.long	.LFE211-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST197:
	.long	.LFB212-.Ltext0
	.long	.LCFI753-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI753-.Ltext0
	.long	.LCFI754-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI754-.Ltext0
	.long	.LFE212-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST198:
	.long	.LFB213-.Ltext0
	.long	.LCFI759-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI759-.Ltext0
	.long	.LCFI760-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI760-.Ltext0
	.long	.LFE213-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST199:
	.long	.LFB214-.Ltext0
	.long	.LCFI763-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI763-.Ltext0
	.long	.LCFI764-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI764-.Ltext0
	.long	.LFE214-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST200:
	.long	.LFB215-.Ltext0
	.long	.LCFI767-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI767-.Ltext0
	.long	.LCFI768-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI768-.Ltext0
	.long	.LFE215-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST201:
	.long	.LFB216-.Ltext0
	.long	.LCFI771-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI771-.Ltext0
	.long	.LCFI772-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI772-.Ltext0
	.long	.LFE216-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST202:
	.long	.LFB217-.Ltext0
	.long	.LCFI775-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI775-.Ltext0
	.long	.LCFI776-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI776-.Ltext0
	.long	.LFE217-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST203:
	.long	.LFB218-.Ltext0
	.long	.LCFI781-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI781-.Ltext0
	.long	.LCFI782-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI782-.Ltext0
	.long	.LFE218-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST204:
	.long	.LFB219-.Ltext0
	.long	.LCFI785-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI785-.Ltext0
	.long	.LCFI786-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI786-.Ltext0
	.long	.LFE219-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST205:
	.long	.LFB220-.Ltext0
	.long	.LCFI789-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI789-.Ltext0
	.long	.LCFI790-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI790-.Ltext0
	.long	.LFE220-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST206:
	.long	.LFB221-.Ltext0
	.long	.LCFI794-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI794-.Ltext0
	.long	.LCFI795-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI795-.Ltext0
	.long	.LFE221-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST207:
	.long	.LFB222-.Ltext0
	.long	.LCFI798-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI798-.Ltext0
	.long	.LCFI799-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI799-.Ltext0
	.long	.LFE222-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST208:
	.long	.LFB223-.Ltext0
	.long	.LCFI802-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI802-.Ltext0
	.long	.LCFI803-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI803-.Ltext0
	.long	.LFE223-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST209:
	.long	.LFB224-.Ltext0
	.long	.LCFI805-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI805-.Ltext0
	.long	.LCFI806-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI806-.Ltext0
	.long	.LFE224-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST210:
	.long	.LFB225-.Ltext0
	.long	.LCFI809-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI809-.Ltext0
	.long	.LCFI810-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI810-.Ltext0
	.long	.LFE225-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST211:
	.long	.LFB226-.Ltext0
	.long	.LCFI813-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI813-.Ltext0
	.long	.LCFI814-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI814-.Ltext0
	.long	.LFE226-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST212:
	.long	.LFB227-.Ltext0
	.long	.LCFI817-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI817-.Ltext0
	.long	.LCFI818-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI818-.Ltext0
	.long	.LFE227-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST213:
	.long	.LFB228-.Ltext0
	.long	.LCFI822-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI822-.Ltext0
	.long	.LCFI823-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI823-.Ltext0
	.long	.LFE228-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST214:
	.long	.LFB229-.Ltext0
	.long	.LCFI826-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI826-.Ltext0
	.long	.LCFI827-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI827-.Ltext0
	.long	.LFE229-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST215:
	.long	.LFB230-.Ltext0
	.long	.LCFI830-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI830-.Ltext0
	.long	.LCFI831-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI831-.Ltext0
	.long	.LFE230-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST216:
	.long	.LFB231-.Ltext0
	.long	.LCFI835-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI835-.Ltext0
	.long	.LCFI836-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI836-.Ltext0
	.long	.LFE231-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST217:
	.long	.LFB232-.Ltext0
	.long	.LCFI838-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI838-.Ltext0
	.long	.LCFI839-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI839-.Ltext0
	.long	.LFE232-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST218:
	.long	.LFB233-.Ltext0
	.long	.LCFI841-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI841-.Ltext0
	.long	.LCFI842-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI842-.Ltext0
	.long	.LFE233-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST219:
	.long	.LFB234-.Ltext0
	.long	.LCFI845-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI845-.Ltext0
	.long	.LCFI846-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI846-.Ltext0
	.long	.LFE234-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST220:
	.long	.LFB235-.Ltext0
	.long	.LCFI849-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI849-.Ltext0
	.long	.LCFI850-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI850-.Ltext0
	.long	.LFE235-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST221:
	.long	.LFB236-.Ltext0
	.long	.LCFI853-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI853-.Ltext0
	.long	.LCFI854-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI854-.Ltext0
	.long	.LFE236-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST222:
	.long	.LFB237-.Ltext0
	.long	.LCFI859-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI859-.Ltext0
	.long	.LCFI860-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI860-.Ltext0
	.long	.LFE237-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST223:
	.long	.LFB238-.Ltext0
	.long	.LCFI863-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI863-.Ltext0
	.long	.LCFI864-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI864-.Ltext0
	.long	.LFE238-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST224:
	.long	.LFB239-.Ltext0
	.long	.LCFI869-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI869-.Ltext0
	.long	.LCFI870-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI870-.Ltext0
	.long	.LFE239-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST225:
	.long	.LFB240-.Ltext0
	.long	.LCFI873-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI873-.Ltext0
	.long	.LCFI874-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI874-.Ltext0
	.long	.LFE240-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST226:
	.long	.LFB241-.Ltext0
	.long	.LCFI877-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI877-.Ltext0
	.long	.LCFI878-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI878-.Ltext0
	.long	.LFE241-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST227:
	.long	.LFB242-.Ltext0
	.long	.LCFI881-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI881-.Ltext0
	.long	.LCFI882-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI882-.Ltext0
	.long	.LFE242-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST228:
	.long	.LFB243-.Ltext0
	.long	.LCFI885-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI885-.Ltext0
	.long	.LCFI886-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI886-.Ltext0
	.long	.LFE243-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST229:
	.long	.LFB244-.Ltext0
	.long	.LCFI890-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI890-.Ltext0
	.long	.LCFI891-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI891-.Ltext0
	.long	.LFE244-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST230:
	.long	.LFB245-.Ltext0
	.long	.LCFI895-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI895-.Ltext0
	.long	.LCFI896-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI896-.Ltext0
	.long	.LFE245-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST231:
	.long	.LFB246-.Ltext0
	.long	.LCFI899-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI899-.Ltext0
	.long	.LCFI900-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI900-.Ltext0
	.long	.LFE246-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST232:
	.long	.LFB247-.Ltext0
	.long	.LCFI901-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI901-.Ltext0
	.long	.LCFI902-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI902-.Ltext0
	.long	.LFE247-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST233:
	.long	.LFB248-.Ltext0
	.long	.LCFI903-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI903-.Ltext0
	.long	.LCFI904-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI904-.Ltext0
	.long	.LFE248-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST234:
	.long	.LFB249-.Ltext0
	.long	.LCFI907-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI907-.Ltext0
	.long	.LCFI908-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI908-.Ltext0
	.long	.LFE249-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST235:
	.long	.LFB250-.Ltext0
	.long	.LCFI911-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI911-.Ltext0
	.long	.LCFI912-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI912-.Ltext0
	.long	.LFE250-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST236:
	.long	.LFB251-.Ltext0
	.long	.LCFI915-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI915-.Ltext0
	.long	.LCFI916-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI916-.Ltext0
	.long	.LFE251-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST237:
	.long	.LFB252-.Ltext0
	.long	.LCFI919-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI919-.Ltext0
	.long	.LCFI920-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI920-.Ltext0
	.long	.LFE252-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST238:
	.long	.LFB253-.Ltext0
	.long	.LCFI923-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI923-.Ltext0
	.long	.LCFI924-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI924-.Ltext0
	.long	.LFE253-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST239:
	.long	.LFB254-.Ltext0
	.long	.LCFI927-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI927-.Ltext0
	.long	.LCFI928-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI928-.Ltext0
	.long	.LFE254-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST240:
	.long	.LFB255-.Ltext0
	.long	.LCFI932-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI932-.Ltext0
	.long	.LCFI933-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI933-.Ltext0
	.long	.LFE255-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST241:
	.long	.LFB256-.Ltext0
	.long	.LCFI936-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI936-.Ltext0
	.long	.LCFI937-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI937-.Ltext0
	.long	.LFE256-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST242:
	.long	.LFB257-.Ltext0
	.long	.LCFI940-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI940-.Ltext0
	.long	.LCFI941-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI941-.Ltext0
	.long	.LFE257-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST243:
	.long	.LFB258-.Ltext0
	.long	.LCFI944-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI944-.Ltext0
	.long	.LCFI945-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI945-.Ltext0
	.long	.LFE258-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST244:
	.long	.LFB259-.Ltext0
	.long	.LCFI948-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI948-.Ltext0
	.long	.LCFI949-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI949-.Ltext0
	.long	.LFE259-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST245:
	.long	.LFB260-.Ltext0
	.long	.LCFI952-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI952-.Ltext0
	.long	.LCFI953-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI953-.Ltext0
	.long	.LFE260-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST246:
	.long	.LFB261-.Ltext0
	.long	.LCFI956-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI956-.Ltext0
	.long	.LCFI957-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI957-.Ltext0
	.long	.LFE261-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST247:
	.long	.LFB262-.Ltext0
	.long	.LCFI958-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI958-.Ltext0
	.long	.LCFI959-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI959-.Ltext0
	.long	.LFE262-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST248:
	.long	.LFB263-.Ltext0
	.long	.LCFI961-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI961-.Ltext0
	.long	.LCFI962-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI962-.Ltext0
	.long	.LFE263-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST249:
	.long	.LFB264-.Ltext0
	.long	.LCFI965-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI965-.Ltext0
	.long	.LCFI966-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI966-.Ltext0
	.long	.LFE264-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST250:
	.long	.LFB265-.Ltext0
	.long	.LCFI969-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI969-.Ltext0
	.long	.LCFI970-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI970-.Ltext0
	.long	.LFE265-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST251:
	.long	.LFB266-.Ltext0
	.long	.LCFI972-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI972-.Ltext0
	.long	.LCFI973-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI973-.Ltext0
	.long	.LFE266-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST252:
	.long	.LFB267-.Ltext0
	.long	.LCFI976-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI976-.Ltext0
	.long	.LCFI977-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI977-.Ltext0
	.long	.LFE267-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST253:
	.long	.LFB268-.Ltext0
	.long	.LCFI980-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI980-.Ltext0
	.long	.LCFI981-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI981-.Ltext0
	.long	.LFE268-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST254:
	.long	.LFB269-.Ltext0
	.long	.LCFI984-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI984-.Ltext0
	.long	.LCFI985-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI985-.Ltext0
	.long	.LFE269-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST255:
	.long	.LFB270-.Ltext0
	.long	.LCFI988-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI988-.Ltext0
	.long	.LCFI989-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI989-.Ltext0
	.long	.LFE270-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST256:
	.long	.LFB271-.Ltext0
	.long	.LCFI992-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI992-.Ltext0
	.long	.LCFI993-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI993-.Ltext0
	.long	.LFE271-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST257:
	.long	.LFB272-.Ltext0
	.long	.LCFI996-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI996-.Ltext0
	.long	.LCFI997-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI997-.Ltext0
	.long	.LFE272-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST258:
	.long	.LFB273-.Ltext0
	.long	.LCFI1000-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI1000-.Ltext0
	.long	.LCFI1001-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1001-.Ltext0
	.long	.LFE273-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST259:
	.long	.LFB274-.Ltext0
	.long	.LCFI1004-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI1004-.Ltext0
	.long	.LCFI1005-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1005-.Ltext0
	.long	.LFE274-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST260:
	.long	.LFB275-.Ltext0
	.long	.LCFI1008-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI1008-.Ltext0
	.long	.LCFI1009-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1009-.Ltext0
	.long	.LFE275-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST261:
	.long	.LFB276-.Ltext0
	.long	.LCFI1012-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI1012-.Ltext0
	.long	.LCFI1013-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1013-.Ltext0
	.long	.LFE276-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST262:
	.long	.LFB277-.Ltext0
	.long	.LCFI1016-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI1016-.Ltext0
	.long	.LCFI1017-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1017-.Ltext0
	.long	.LFE277-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
.LLST263:
	.long	.LFB278-.Ltext0
	.long	.LCFI1020-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 4
	.long	.LCFI1020-.Ltext0
	.long	.LCFI1021-.Ltext0
	.value	0x2
	.byte	0x74
	.sleb128 8
	.long	.LCFI1021-.Ltext0
	.long	.LFE278-.Ltext0
	.value	0x2
	.byte	0x75
	.sleb128 8
	.long	0x0
	.long	0x0
	.section	.debug_info
	.long	0x13cbc
	.value	0x2
	.long	.Ldebug_abbrev0
	.byte	0x4
	.uleb128 0x1
	.long	.Ldebug_line0
	.long	.Letext0
	.long	.Ltext0
	.string	"GNU C 4.1.2 (Ubuntu 4.1.2-0ubuntu4)"
	.byte	0x1
	.string	"../../../kg++fe/gnu/cp/decl.c"
	.string	"/usa/handong/simplnano/cmplr-open64-merge/targia32_sl1/g++fe/gnu"
	.uleb128 0x2
	.string	"rtx"
	.byte	0x6
	.byte	0xc
	.long	0xa7
	.uleb128 0x3
	.byte	0x4
	.long	0xad
	.uleb128 0x4
	.long	0x19c
	.string	"rtx_def"
	.byte	0xc
	.byte	0x6
	.byte	0xb
	.uleb128 0x5
	.long	.LASF0
	.byte	0x8
	.byte	0x84
	.long	0x53db
	.byte	0x4
	.byte	0x10
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"mode"
	.byte	0x8
	.byte	0x87
	.long	0x86f
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"jump"
	.byte	0x8
	.byte	0x8e
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"call"
	.byte	0x8
	.byte	0x91
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"unchanging"
	.byte	0x8
	.byte	0x99
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"volatil"
	.byte	0x8
	.byte	0xa2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"in_struct"
	.byte	0x8
	.byte	0xb4
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"used"
	.byte	0x8
	.byte	0xbb
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"integrated"
	.byte	0x8
	.byte	0xc0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"frame_related"
	.byte	0x8
	.byte	0xc9
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"fld"
	.byte	0x8
	.byte	0xce
	.long	0x5e34
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"rtvec"
	.byte	0x6
	.byte	0xe
	.long	0x1a9
	.uleb128 0x3
	.byte	0x4
	.long	0x1af
	.uleb128 0x4
	.long	0x1e4
	.string	"rtvec_def"
	.byte	0x8
	.byte	0x6
	.byte	0xd
	.uleb128 0x7
	.string	"num_elem"
	.byte	0x8
	.byte	0xf2
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"elem"
	.byte	0x8
	.byte	0xf3
	.long	0x5e44
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"tree"
	.byte	0x6
	.byte	0x10
	.long	0x1f0
	.uleb128 0x3
	.byte	0x4
	.long	0x1f6
	.uleb128 0x8
	.long	0x2c5
	.string	"tree_node"
	.byte	0xa0
	.byte	0x6
	.byte	0xf
	.uleb128 0x9
	.long	.LASF1
	.byte	0x7
	.value	0x887
	.long	0x3175
	.uleb128 0xa
	.string	"int_cst"
	.byte	0x7
	.value	0x888
	.long	0x3490
	.uleb128 0xa
	.string	"real_cst"
	.byte	0x7
	.value	0x889
	.long	0x34d8
	.uleb128 0xa
	.string	"vector"
	.byte	0x7
	.value	0x88a
	.long	0x35f8
	.uleb128 0xa
	.string	"string"
	.byte	0x7
	.value	0x88b
	.long	0x3539
	.uleb128 0xa
	.string	"complex"
	.byte	0x7
	.value	0x88c
	.long	0x35a3
	.uleb128 0x9
	.long	.LASF2
	.byte	0x7
	.value	0x88d
	.long	0x382d
	.uleb128 0x9
	.long	.LASF3
	.byte	0x7
	.value	0x88e
	.long	0x4887
	.uleb128 0x9
	.long	.LASF4
	.byte	0x7
	.value	0x88f
	.long	0x3a87
	.uleb128 0xa
	.string	"list"
	.byte	0x7
	.value	0x890
	.long	0x3864
	.uleb128 0xa
	.string	"vec"
	.byte	0x7
	.value	0x891
	.long	0x38a9
	.uleb128 0xa
	.string	"exp"
	.byte	0x7
	.value	0x892
	.long	0x38f7
	.uleb128 0x9
	.long	.LASF5
	.byte	0x7
	.value	0x893
	.long	0x3943
	.uleb128 0xa
	.string	"omp"
	.byte	0x7
	.value	0x895
	.long	0x5283
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x2cb
	.uleb128 0xb
	.long	0x2d0
	.uleb128 0xc
	.string	"char"
	.byte	0x1
	.byte	0x8
	.uleb128 0xc
	.string	"int"
	.byte	0x4
	.byte	0x5
	.uleb128 0xd
	.long	0x3b1
	.string	"mips_args"
	.byte	0x40
	.byte	0xd
	.value	0xaaa
	.uleb128 0xe
	.string	"gp_reg_found"
	.byte	0xd
	.value	0xaad
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"arg_number"
	.byte	0xd
	.value	0xab0
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"num_gprs"
	.byte	0xd
	.value	0xab5
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"num_fprs"
	.byte	0xd
	.value	0xab8
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"stack_words"
	.byte	0xd
	.value	0xabb
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"fp_code"
	.byte	0xd
	.value	0xac8
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xe
	.string	"prototype"
	.byte	0xd
	.value	0xacb
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"num_adjusts"
	.byte	0xd
	.value	0xad3
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"adjust"
	.byte	0xd
	.value	0xad4
	.long	0x3b8
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.byte	0x0
	.uleb128 0xf
	.long	.LASF6
	.byte	0x4
	.byte	0x7
	.uleb128 0x10
	.long	0x3c8
	.long	0x9c
	.uleb128 0x11
	.long	0x3c8
	.byte	0x7
	.byte	0x0
	.uleb128 0xf
	.long	.LASF6
	.byte	0x4
	.byte	0x7
	.uleb128 0x12
	.string	"CUMULATIVE_ARGS"
	.byte	0xd
	.value	0xad5
	.long	0x2df
	.uleb128 0x2
	.string	"__gnuc_va_list"
	.byte	0x21
	.byte	0x2b
	.long	0x3fd
	.uleb128 0x3
	.byte	0x4
	.long	0x2d0
	.uleb128 0x2
	.string	"va_list"
	.byte	0x21
	.byte	0x69
	.long	0x3e7
	.uleb128 0x2
	.string	"size_t"
	.byte	0xf
	.byte	0xd6
	.long	0x3b1
	.uleb128 0xc
	.string	"unsigned char"
	.byte	0x1
	.byte	0x8
	.uleb128 0xc
	.string	"short unsigned int"
	.byte	0x2
	.byte	0x7
	.uleb128 0xc
	.string	"long unsigned int"
	.byte	0x4
	.byte	0x7
	.uleb128 0xc
	.string	"signed char"
	.byte	0x1
	.byte	0x6
	.uleb128 0xc
	.string	"short int"
	.byte	0x2
	.byte	0x5
	.uleb128 0xc
	.string	"long long int"
	.byte	0x8
	.byte	0x5
	.uleb128 0xc
	.string	"long long unsigned int"
	.byte	0x8
	.byte	0x7
	.uleb128 0x2
	.string	"__quad_t"
	.byte	0x19
	.byte	0x3b
	.long	0x478
	.uleb128 0x2
	.string	"__off_t"
	.byte	0x19
	.byte	0x90
	.long	0x4c2
	.uleb128 0xc
	.string	"long int"
	.byte	0x4
	.byte	0x5
	.uleb128 0x2
	.string	"__off64_t"
	.byte	0x19
	.byte	0x91
	.long	0x4a3
	.uleb128 0x13
	.byte	0x4
	.uleb128 0x3
	.byte	0x4
	.long	0x2d0
	.uleb128 0x2
	.string	"FILE"
	.byte	0x17
	.byte	0x2e
	.long	0x4f3
	.uleb128 0x14
	.long	0x76e
	.long	.LASF7
	.byte	0x94
	.byte	0x17
	.byte	0x2e
	.uleb128 0xe
	.string	"_flags"
	.byte	0x18
	.value	0x10c
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"_IO_read_ptr"
	.byte	0x18
	.value	0x111
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"_IO_read_end"
	.byte	0x18
	.value	0x112
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"_IO_read_base"
	.byte	0x18
	.value	0x113
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"_IO_write_base"
	.byte	0x18
	.value	0x114
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"_IO_write_ptr"
	.byte	0x18
	.value	0x115
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xe
	.string	"_IO_write_end"
	.byte	0x18
	.value	0x116
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"_IO_buf_base"
	.byte	0x18
	.value	0x117
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"_IO_buf_end"
	.byte	0x18
	.value	0x118
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0xe
	.string	"_IO_save_base"
	.byte	0x18
	.value	0x11a
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0xe
	.string	"_IO_backup_base"
	.byte	0x18
	.value	0x11b
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0xe
	.string	"_IO_save_end"
	.byte	0x18
	.value	0x11c
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0xe
	.string	"_markers"
	.byte	0x18
	.value	0x11e
	.long	0x7f8
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0xe
	.string	"_chain"
	.byte	0x18
	.value	0x120
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0xe
	.string	"_fileno"
	.byte	0x18
	.value	0x122
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0xe
	.string	"_flags2"
	.byte	0x18
	.value	0x126
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0xe
	.string	"_old_offset"
	.byte	0x18
	.value	0x128
	.long	0x4b3
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0xe
	.string	"_cur_column"
	.byte	0x18
	.value	0x12c
	.long	0x431
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0xe
	.string	"_vtable_offset"
	.byte	0x18
	.value	0x12d
	.long	0x45c
	.byte	0x2
	.byte	0x23
	.uleb128 0x46
	.uleb128 0xe
	.string	"_shortbuf"
	.byte	0x18
	.value	0x12e
	.long	0x804
	.byte	0x2
	.byte	0x23
	.uleb128 0x47
	.uleb128 0xe
	.string	"_lock"
	.byte	0x18
	.value	0x132
	.long	0x814
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0xe
	.string	"_offset"
	.byte	0x18
	.value	0x13b
	.long	0x4ce
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0xe
	.string	"__pad1"
	.byte	0x18
	.value	0x144
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0xe
	.string	"__pad2"
	.byte	0x18
	.value	0x145
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0xe
	.string	"__pad3"
	.byte	0x18
	.value	0x146
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0xe
	.string	"__pad4"
	.byte	0x18
	.value	0x147
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0xe
	.string	"__pad5"
	.byte	0x18
	.value	0x148
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0xe
	.string	"_mode"
	.byte	0x18
	.value	0x14a
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0xe
	.string	"_unused2"
	.byte	0x18
	.value	0x14c
	.long	0x81a
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.byte	0x0
	.uleb128 0x10
	.long	0x77e
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x3
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x784
	.uleb128 0xb
	.long	0x420
	.uleb128 0x3
	.byte	0x4
	.long	0x420
	.uleb128 0x3
	.byte	0x4
	.long	0x4df
	.uleb128 0x3
	.byte	0x4
	.long	0x79b
	.uleb128 0x15
	.long	0x7a7
	.byte	0x1
	.uleb128 0x16
	.long	0x4df
	.byte	0x0
	.uleb128 0x17
	.string	"_IO_lock_t"
	.byte	0x18
	.byte	0xb0
	.uleb128 0x4
	.long	0x7f8
	.string	"_IO_marker"
	.byte	0xc
	.byte	0x18
	.byte	0xb6
	.uleb128 0x7
	.string	"_next"
	.byte	0x18
	.byte	0xb7
	.long	0x7f8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"_sbuf"
	.byte	0x18
	.byte	0xb8
	.long	0x7fe
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"_pos"
	.byte	0x18
	.byte	0xbc
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7b5
	.uleb128 0x3
	.byte	0x4
	.long	0x4f3
	.uleb128 0x10
	.long	0x814
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7a7
	.uleb128 0x10
	.long	0x82a
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x27
	.byte	0x0
	.uleb128 0x10
	.long	0x83a
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x1f
	.byte	0x0
	.uleb128 0xb
	.long	0x2d8
	.uleb128 0x3
	.byte	0x4
	.long	0x2d8
	.uleb128 0x3
	.byte	0x4
	.long	0x84b
	.uleb128 0x18
	.long	0x860
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x860
	.uleb128 0x16
	.long	0x860
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x866
	.uleb128 0x19
	.uleb128 0x1a
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x867
	.uleb128 0x1b
	.long	0xab8
	.string	"machine_mode"
	.byte	0x4
	.byte	0x9
	.byte	0x1d
	.uleb128 0x1c
	.string	"VOIDmode"
	.sleb128 0
	.uleb128 0x1c
	.string	"BImode"
	.sleb128 1
	.uleb128 0x1c
	.string	"QImode"
	.sleb128 2
	.uleb128 0x1c
	.string	"HImode"
	.sleb128 3
	.uleb128 0x1c
	.string	"SImode"
	.sleb128 4
	.uleb128 0x1c
	.string	"DImode"
	.sleb128 5
	.uleb128 0x1c
	.string	"TImode"
	.sleb128 6
	.uleb128 0x1c
	.string	"OImode"
	.sleb128 7
	.uleb128 0x1c
	.string	"PQImode"
	.sleb128 8
	.uleb128 0x1c
	.string	"PHImode"
	.sleb128 9
	.uleb128 0x1c
	.string	"PSImode"
	.sleb128 10
	.uleb128 0x1c
	.string	"PDImode"
	.sleb128 11
	.uleb128 0x1c
	.string	"QFmode"
	.sleb128 12
	.uleb128 0x1c
	.string	"HFmode"
	.sleb128 13
	.uleb128 0x1c
	.string	"TQFmode"
	.sleb128 14
	.uleb128 0x1c
	.string	"SFmode"
	.sleb128 15
	.uleb128 0x1c
	.string	"DFmode"
	.sleb128 16
	.uleb128 0x1c
	.string	"XFmode"
	.sleb128 17
	.uleb128 0x1c
	.string	"TFmode"
	.sleb128 18
	.uleb128 0x1c
	.string	"QCmode"
	.sleb128 19
	.uleb128 0x1c
	.string	"HCmode"
	.sleb128 20
	.uleb128 0x1c
	.string	"SCmode"
	.sleb128 21
	.uleb128 0x1c
	.string	"DCmode"
	.sleb128 22
	.uleb128 0x1c
	.string	"XCmode"
	.sleb128 23
	.uleb128 0x1c
	.string	"TCmode"
	.sleb128 24
	.uleb128 0x1c
	.string	"CQImode"
	.sleb128 25
	.uleb128 0x1c
	.string	"CHImode"
	.sleb128 26
	.uleb128 0x1c
	.string	"CSImode"
	.sleb128 27
	.uleb128 0x1c
	.string	"CDImode"
	.sleb128 28
	.uleb128 0x1c
	.string	"CTImode"
	.sleb128 29
	.uleb128 0x1c
	.string	"COImode"
	.sleb128 30
	.uleb128 0x1c
	.string	"V1DImode"
	.sleb128 31
	.uleb128 0x1c
	.string	"V2QImode"
	.sleb128 32
	.uleb128 0x1c
	.string	"V2HImode"
	.sleb128 33
	.uleb128 0x1c
	.string	"V2SImode"
	.sleb128 34
	.uleb128 0x1c
	.string	"V2DImode"
	.sleb128 35
	.uleb128 0x1c
	.string	"V4QImode"
	.sleb128 36
	.uleb128 0x1c
	.string	"V4HImode"
	.sleb128 37
	.uleb128 0x1c
	.string	"V4SImode"
	.sleb128 38
	.uleb128 0x1c
	.string	"V4DImode"
	.sleb128 39
	.uleb128 0x1c
	.string	"V8QImode"
	.sleb128 40
	.uleb128 0x1c
	.string	"V8HImode"
	.sleb128 41
	.uleb128 0x1c
	.string	"V8SImode"
	.sleb128 42
	.uleb128 0x1c
	.string	"V8DImode"
	.sleb128 43
	.uleb128 0x1c
	.string	"V16QImode"
	.sleb128 44
	.uleb128 0x1c
	.string	"V2SFmode"
	.sleb128 45
	.uleb128 0x1c
	.string	"V2DFmode"
	.sleb128 46
	.uleb128 0x1c
	.string	"V4SFmode"
	.sleb128 47
	.uleb128 0x1c
	.string	"V4DFmode"
	.sleb128 48
	.uleb128 0x1c
	.string	"V8SFmode"
	.sleb128 49
	.uleb128 0x1c
	.string	"V8DFmode"
	.sleb128 50
	.uleb128 0x1c
	.string	"V16SFmode"
	.sleb128 51
	.uleb128 0x1c
	.string	"BLKmode"
	.sleb128 52
	.uleb128 0x1c
	.string	"CCmode"
	.sleb128 53
	.uleb128 0x1c
	.string	"MAX_MACHINE_MODE"
	.sleb128 54
	.byte	0x0
	.uleb128 0x4
	.long	0xaea
	.string	"location_s"
	.byte	0x8
	.byte	0xb
	.byte	0x1c
	.uleb128 0x7
	.string	"file"
	.byte	0xb
	.byte	0x1e
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"line"
	.byte	0xb
	.byte	0x21
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"location_t"
	.byte	0xb
	.byte	0x23
	.long	0xab8
	.uleb128 0x1b
	.long	0x141e
	.string	"tree_code"
	.byte	0x4
	.byte	0x7
	.byte	0x25
	.uleb128 0x1c
	.string	"ERROR_MARK"
	.sleb128 0
	.uleb128 0x1c
	.string	"IDENTIFIER_NODE"
	.sleb128 1
	.uleb128 0x1c
	.string	"OP_IDENTIFIER"
	.sleb128 2
	.uleb128 0x1c
	.string	"TREE_LIST"
	.sleb128 3
	.uleb128 0x1c
	.string	"TREE_VEC"
	.sleb128 4
	.uleb128 0x1c
	.string	"BLOCK"
	.sleb128 5
	.uleb128 0x1c
	.string	"VOID_TYPE"
	.sleb128 6
	.uleb128 0x1c
	.string	"INTEGER_TYPE"
	.sleb128 7
	.uleb128 0x1c
	.string	"REAL_TYPE"
	.sleb128 8
	.uleb128 0x1c
	.string	"COMPLEX_TYPE"
	.sleb128 9
	.uleb128 0x1c
	.string	"VECTOR_TYPE"
	.sleb128 10
	.uleb128 0x1c
	.string	"ENUMERAL_TYPE"
	.sleb128 11
	.uleb128 0x1c
	.string	"BOOLEAN_TYPE"
	.sleb128 12
	.uleb128 0x1c
	.string	"CHAR_TYPE"
	.sleb128 13
	.uleb128 0x1c
	.string	"POINTER_TYPE"
	.sleb128 14
	.uleb128 0x1c
	.string	"OFFSET_TYPE"
	.sleb128 15
	.uleb128 0x1c
	.string	"REFERENCE_TYPE"
	.sleb128 16
	.uleb128 0x1c
	.string	"METHOD_TYPE"
	.sleb128 17
	.uleb128 0x1c
	.string	"FILE_TYPE"
	.sleb128 18
	.uleb128 0x1c
	.string	"ARRAY_TYPE"
	.sleb128 19
	.uleb128 0x1c
	.string	"SET_TYPE"
	.sleb128 20
	.uleb128 0x1c
	.string	"RECORD_TYPE"
	.sleb128 21
	.uleb128 0x1c
	.string	"UNION_TYPE"
	.sleb128 22
	.uleb128 0x1c
	.string	"QUAL_UNION_TYPE"
	.sleb128 23
	.uleb128 0x1c
	.string	"FUNCTION_TYPE"
	.sleb128 24
	.uleb128 0x1c
	.string	"LANG_TYPE"
	.sleb128 25
	.uleb128 0x1c
	.string	"INTEGER_CST"
	.sleb128 26
	.uleb128 0x1c
	.string	"REAL_CST"
	.sleb128 27
	.uleb128 0x1c
	.string	"COMPLEX_CST"
	.sleb128 28
	.uleb128 0x1c
	.string	"VECTOR_CST"
	.sleb128 29
	.uleb128 0x1c
	.string	"STRING_CST"
	.sleb128 30
	.uleb128 0x1c
	.string	"FUNCTION_DECL"
	.sleb128 31
	.uleb128 0x1c
	.string	"LABEL_DECL"
	.sleb128 32
	.uleb128 0x1c
	.string	"CONST_DECL"
	.sleb128 33
	.uleb128 0x1c
	.string	"TYPE_DECL"
	.sleb128 34
	.uleb128 0x1c
	.string	"VAR_DECL"
	.sleb128 35
	.uleb128 0x1c
	.string	"PARM_DECL"
	.sleb128 36
	.uleb128 0x1c
	.string	"RESULT_DECL"
	.sleb128 37
	.uleb128 0x1c
	.string	"FIELD_DECL"
	.sleb128 38
	.uleb128 0x1c
	.string	"NAMESPACE_DECL"
	.sleb128 39
	.uleb128 0x1c
	.string	"COMPONENT_REF"
	.sleb128 40
	.uleb128 0x1c
	.string	"BIT_FIELD_REF"
	.sleb128 41
	.uleb128 0x1c
	.string	"INDIRECT_REF"
	.sleb128 42
	.uleb128 0x1c
	.string	"BUFFER_REF"
	.sleb128 43
	.uleb128 0x1c
	.string	"ARRAY_REF"
	.sleb128 44
	.uleb128 0x1c
	.string	"ARRAY_RANGE_REF"
	.sleb128 45
	.uleb128 0x1c
	.string	"VTABLE_REF"
	.sleb128 46
	.uleb128 0x1c
	.string	"CONSTRUCTOR"
	.sleb128 47
	.uleb128 0x1c
	.string	"COMPOUND_EXPR"
	.sleb128 48
	.uleb128 0x1c
	.string	"MODIFY_EXPR"
	.sleb128 49
	.uleb128 0x1c
	.string	"INIT_EXPR"
	.sleb128 50
	.uleb128 0x1c
	.string	"TARGET_EXPR"
	.sleb128 51
	.uleb128 0x1c
	.string	"COND_EXPR"
	.sleb128 52
	.uleb128 0x1c
	.string	"BIND_EXPR"
	.sleb128 53
	.uleb128 0x1c
	.string	"CALL_EXPR"
	.sleb128 54
	.uleb128 0x1c
	.string	"METHOD_CALL_EXPR"
	.sleb128 55
	.uleb128 0x1c
	.string	"WITH_CLEANUP_EXPR"
	.sleb128 56
	.uleb128 0x1c
	.string	"CLEANUP_POINT_EXPR"
	.sleb128 57
	.uleb128 0x1c
	.string	"PLACEHOLDER_EXPR"
	.sleb128 58
	.uleb128 0x1c
	.string	"WITH_RECORD_EXPR"
	.sleb128 59
	.uleb128 0x1c
	.string	"PLUS_EXPR"
	.sleb128 60
	.uleb128 0x1c
	.string	"MINUS_EXPR"
	.sleb128 61
	.uleb128 0x1c
	.string	"MULT_EXPR"
	.sleb128 62
	.uleb128 0x1c
	.string	"TRUNC_DIV_EXPR"
	.sleb128 63
	.uleb128 0x1c
	.string	"CEIL_DIV_EXPR"
	.sleb128 64
	.uleb128 0x1c
	.string	"FLOOR_DIV_EXPR"
	.sleb128 65
	.uleb128 0x1c
	.string	"ROUND_DIV_EXPR"
	.sleb128 66
	.uleb128 0x1c
	.string	"TRUNC_MOD_EXPR"
	.sleb128 67
	.uleb128 0x1c
	.string	"CEIL_MOD_EXPR"
	.sleb128 68
	.uleb128 0x1c
	.string	"FLOOR_MOD_EXPR"
	.sleb128 69
	.uleb128 0x1c
	.string	"ROUND_MOD_EXPR"
	.sleb128 70
	.uleb128 0x1c
	.string	"RDIV_EXPR"
	.sleb128 71
	.uleb128 0x1c
	.string	"EXACT_DIV_EXPR"
	.sleb128 72
	.uleb128 0x1c
	.string	"FIX_TRUNC_EXPR"
	.sleb128 73
	.uleb128 0x1c
	.string	"FIX_CEIL_EXPR"
	.sleb128 74
	.uleb128 0x1c
	.string	"FIX_FLOOR_EXPR"
	.sleb128 75
	.uleb128 0x1c
	.string	"FIX_ROUND_EXPR"
	.sleb128 76
	.uleb128 0x1c
	.string	"FLOAT_EXPR"
	.sleb128 77
	.uleb128 0x1c
	.string	"EXPON_EXPR"
	.sleb128 78
	.uleb128 0x1c
	.string	"NEGATE_EXPR"
	.sleb128 79
	.uleb128 0x1c
	.string	"MIN_EXPR"
	.sleb128 80
	.uleb128 0x1c
	.string	"MAX_EXPR"
	.sleb128 81
	.uleb128 0x1c
	.string	"ABS_EXPR"
	.sleb128 82
	.uleb128 0x1c
	.string	"FFS_EXPR"
	.sleb128 83
	.uleb128 0x1c
	.string	"LSHIFT_EXPR"
	.sleb128 84
	.uleb128 0x1c
	.string	"RSHIFT_EXPR"
	.sleb128 85
	.uleb128 0x1c
	.string	"LROTATE_EXPR"
	.sleb128 86
	.uleb128 0x1c
	.string	"RROTATE_EXPR"
	.sleb128 87
	.uleb128 0x1c
	.string	"BIT_IOR_EXPR"
	.sleb128 88
	.uleb128 0x1c
	.string	"BIT_XOR_EXPR"
	.sleb128 89
	.uleb128 0x1c
	.string	"BIT_AND_EXPR"
	.sleb128 90
	.uleb128 0x1c
	.string	"BIT_ANDTC_EXPR"
	.sleb128 91
	.uleb128 0x1c
	.string	"BIT_NOT_EXPR"
	.sleb128 92
	.uleb128 0x1c
	.string	"TRUTH_ANDIF_EXPR"
	.sleb128 93
	.uleb128 0x1c
	.string	"TRUTH_ORIF_EXPR"
	.sleb128 94
	.uleb128 0x1c
	.string	"TRUTH_AND_EXPR"
	.sleb128 95
	.uleb128 0x1c
	.string	"TRUTH_OR_EXPR"
	.sleb128 96
	.uleb128 0x1c
	.string	"TRUTH_XOR_EXPR"
	.sleb128 97
	.uleb128 0x1c
	.string	"TRUTH_NOT_EXPR"
	.sleb128 98
	.uleb128 0x1c
	.string	"LT_EXPR"
	.sleb128 99
	.uleb128 0x1c
	.string	"LE_EXPR"
	.sleb128 100
	.uleb128 0x1c
	.string	"GT_EXPR"
	.sleb128 101
	.uleb128 0x1c
	.string	"GE_EXPR"
	.sleb128 102
	.uleb128 0x1c
	.string	"EQ_EXPR"
	.sleb128 103
	.uleb128 0x1c
	.string	"NE_EXPR"
	.sleb128 104
	.uleb128 0x1c
	.string	"UNORDERED_EXPR"
	.sleb128 105
	.uleb128 0x1c
	.string	"ORDERED_EXPR"
	.sleb128 106
	.uleb128 0x1c
	.string	"UNLT_EXPR"
	.sleb128 107
	.uleb128 0x1c
	.string	"UNLE_EXPR"
	.sleb128 108
	.uleb128 0x1c
	.string	"UNGT_EXPR"
	.sleb128 109
	.uleb128 0x1c
	.string	"UNGE_EXPR"
	.sleb128 110
	.uleb128 0x1c
	.string	"UNEQ_EXPR"
	.sleb128 111
	.uleb128 0x1c
	.string	"IN_EXPR"
	.sleb128 112
	.uleb128 0x1c
	.string	"SET_LE_EXPR"
	.sleb128 113
	.uleb128 0x1c
	.string	"CARD_EXPR"
	.sleb128 114
	.uleb128 0x1c
	.string	"RANGE_EXPR"
	.sleb128 115
	.uleb128 0x1c
	.string	"CONVERT_EXPR"
	.sleb128 116
	.uleb128 0x1c
	.string	"NOP_EXPR"
	.sleb128 117
	.uleb128 0x1c
	.string	"NON_LVALUE_EXPR"
	.sleb128 118
	.uleb128 0x1c
	.string	"VIEW_CONVERT_EXPR"
	.sleb128 119
	.uleb128 0x1c
	.string	"SAVE_EXPR"
	.sleb128 120
	.uleb128 0x1c
	.string	"UNSAVE_EXPR"
	.sleb128 121
	.uleb128 0x1c
	.string	"RTL_EXPR"
	.sleb128 122
	.uleb128 0x1c
	.string	"ADDR_EXPR"
	.sleb128 123
	.uleb128 0x1c
	.string	"REFERENCE_EXPR"
	.sleb128 124
	.uleb128 0x1c
	.string	"ENTRY_VALUE_EXPR"
	.sleb128 125
	.uleb128 0x1c
	.string	"FDESC_EXPR"
	.sleb128 126
	.uleb128 0x1c
	.string	"COMPLEX_EXPR"
	.sleb128 127
	.uleb128 0x1c
	.string	"CONJ_EXPR"
	.sleb128 128
	.uleb128 0x1c
	.string	"REALPART_EXPR"
	.sleb128 129
	.uleb128 0x1c
	.string	"IMAGPART_EXPR"
	.sleb128 130
	.uleb128 0x1c
	.string	"PREDECREMENT_EXPR"
	.sleb128 131
	.uleb128 0x1c
	.string	"PREINCREMENT_EXPR"
	.sleb128 132
	.uleb128 0x1c
	.string	"POSTDECREMENT_EXPR"
	.sleb128 133
	.uleb128 0x1c
	.string	"POSTINCREMENT_EXPR"
	.sleb128 134
	.uleb128 0x1c
	.string	"VA_ARG_EXPR"
	.sleb128 135
	.uleb128 0x1c
	.string	"TRY_CATCH_EXPR"
	.sleb128 136
	.uleb128 0x1c
	.string	"TRY_FINALLY_EXPR"
	.sleb128 137
	.uleb128 0x1c
	.string	"GOTO_SUBROUTINE_EXPR"
	.sleb128 138
	.uleb128 0x1c
	.string	"POPDHC_EXPR"
	.sleb128 139
	.uleb128 0x1c
	.string	"POPDCC_EXPR"
	.sleb128 140
	.uleb128 0x1c
	.string	"LABEL_EXPR"
	.sleb128 141
	.uleb128 0x1c
	.string	"GOTO_EXPR"
	.sleb128 142
	.uleb128 0x1c
	.string	"RETURN_EXPR"
	.sleb128 143
	.uleb128 0x1c
	.string	"EXIT_EXPR"
	.sleb128 144
	.uleb128 0x1c
	.string	"LOOP_EXPR"
	.sleb128 145
	.uleb128 0x1c
	.string	"LABELED_BLOCK_EXPR"
	.sleb128 146
	.uleb128 0x1c
	.string	"EXIT_BLOCK_EXPR"
	.sleb128 147
	.uleb128 0x1c
	.string	"EXPR_WITH_FILE_LOCATION"
	.sleb128 148
	.uleb128 0x1c
	.string	"SWITCH_EXPR"
	.sleb128 149
	.uleb128 0x1c
	.string	"EXC_PTR_EXPR"
	.sleb128 150
	.uleb128 0x1c
	.string	"LAST_AND_UNUSED_TREE_CODE"
	.sleb128 151
	.byte	0x0
	.uleb128 0x2
	.string	"LABEL_IDX"
	.byte	0x7
	.byte	0x2f
	.long	0x3b1
	.uleb128 0x4
	.long	0x146c
	.string	"mongoose_gcc_DST_IDX"
	.byte	0x8
	.byte	0x7
	.byte	0x30
	.uleb128 0x1d
	.long	.LASF5
	.byte	0x7
	.byte	0x30
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"offset"
	.byte	0x7
	.byte	0x30
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x2
	.string	"ST"
	.byte	0x7
	.byte	0x34
	.long	0x1476
	.uleb128 0x1e
	.string	"st"
	.byte	0x1
	.uleb128 0x1f
	.long	0x14cb
	.long	.LASF8
	.byte	0x4
	.byte	0x7
	.byte	0x58
	.uleb128 0x1c
	.string	"NOT_BUILT_IN"
	.sleb128 0
	.uleb128 0x1c
	.string	"BUILT_IN_FRONTEND"
	.sleb128 1
	.uleb128 0x1c
	.string	"BUILT_IN_MD"
	.sleb128 2
	.uleb128 0x1c
	.string	"BUILT_IN_NORMAL"
	.sleb128 3
	.byte	0x0
	.uleb128 0x1b
	.long	0x3175
	.string	"built_in_function"
	.byte	0x4
	.byte	0x7
	.byte	0x67
	.uleb128 0x1c
	.string	"BUILT_IN_ALLOCA"
	.sleb128 0
	.uleb128 0x1c
	.string	"BUILT_IN_ABS"
	.sleb128 1
	.uleb128 0x1c
	.string	"BUILT_IN_LABS"
	.sleb128 2
	.uleb128 0x1c
	.string	"BUILT_IN_FABS"
	.sleb128 3
	.uleb128 0x1c
	.string	"BUILT_IN_FABSF"
	.sleb128 4
	.uleb128 0x1c
	.string	"BUILT_IN_FABSL"
	.sleb128 5
	.uleb128 0x1c
	.string	"BUILT_IN_LLABS"
	.sleb128 6
	.uleb128 0x1c
	.string	"BUILT_IN_IMAXABS"
	.sleb128 7
	.uleb128 0x1c
	.string	"BUILT_IN_CONJ"
	.sleb128 8
	.uleb128 0x1c
	.string	"BUILT_IN_CONJF"
	.sleb128 9
	.uleb128 0x1c
	.string	"BUILT_IN_CONJL"
	.sleb128 10
	.uleb128 0x1c
	.string	"BUILT_IN_CREAL"
	.sleb128 11
	.uleb128 0x1c
	.string	"BUILT_IN_CREALF"
	.sleb128 12
	.uleb128 0x1c
	.string	"BUILT_IN_CREALL"
	.sleb128 13
	.uleb128 0x1c
	.string	"BUILT_IN_CIMAG"
	.sleb128 14
	.uleb128 0x1c
	.string	"BUILT_IN_CIMAGF"
	.sleb128 15
	.uleb128 0x1c
	.string	"BUILT_IN_CIMAGL"
	.sleb128 16
	.uleb128 0x1c
	.string	"BUILT_IN_DIV"
	.sleb128 17
	.uleb128 0x1c
	.string	"BUILT_IN_LDIV"
	.sleb128 18
	.uleb128 0x1c
	.string	"BUILT_IN_FFLOOR"
	.sleb128 19
	.uleb128 0x1c
	.string	"BUILT_IN_FCEIL"
	.sleb128 20
	.uleb128 0x1c
	.string	"BUILT_IN_FMOD"
	.sleb128 21
	.uleb128 0x1c
	.string	"BUILT_IN_FREM"
	.sleb128 22
	.uleb128 0x1c
	.string	"BUILT_IN_BZERO"
	.sleb128 23
	.uleb128 0x1c
	.string	"BUILT_IN_BCOPY"
	.sleb128 24
	.uleb128 0x1c
	.string	"BUILT_IN_BCMP"
	.sleb128 25
	.uleb128 0x1c
	.string	"BUILT_IN_FFS"
	.sleb128 26
	.uleb128 0x1c
	.string	"BUILT_IN_INDEX"
	.sleb128 27
	.uleb128 0x1c
	.string	"BUILT_IN_RINDEX"
	.sleb128 28
	.uleb128 0x1c
	.string	"BUILT_IN_MEMCPY"
	.sleb128 29
	.uleb128 0x1c
	.string	"BUILT_IN_MEMMOVE"
	.sleb128 30
	.uleb128 0x1c
	.string	"BUILT_IN_MEMCMP"
	.sleb128 31
	.uleb128 0x1c
	.string	"BUILT_IN_MEMSET"
	.sleb128 32
	.uleb128 0x1c
	.string	"BUILT_IN_MEMPCPY"
	.sleb128 33
	.uleb128 0x1c
	.string	"BUILT_IN_STRCAT"
	.sleb128 34
	.uleb128 0x1c
	.string	"BUILT_IN_STRNCAT"
	.sleb128 35
	.uleb128 0x1c
	.string	"BUILT_IN_STPCPY"
	.sleb128 36
	.uleb128 0x1c
	.string	"BUILT_IN_STRCPY"
	.sleb128 37
	.uleb128 0x1c
	.string	"BUILT_IN_STRNCPY"
	.sleb128 38
	.uleb128 0x1c
	.string	"BUILT_IN_STRCMP"
	.sleb128 39
	.uleb128 0x1c
	.string	"BUILT_IN_STRNCMP"
	.sleb128 40
	.uleb128 0x1c
	.string	"BUILT_IN_STRLEN"
	.sleb128 41
	.uleb128 0x1c
	.string	"BUILT_IN_STRSTR"
	.sleb128 42
	.uleb128 0x1c
	.string	"BUILT_IN_STRPBRK"
	.sleb128 43
	.uleb128 0x1c
	.string	"BUILT_IN_STRSPN"
	.sleb128 44
	.uleb128 0x1c
	.string	"BUILT_IN_STRCSPN"
	.sleb128 45
	.uleb128 0x1c
	.string	"BUILT_IN_STRCHR"
	.sleb128 46
	.uleb128 0x1c
	.string	"BUILT_IN_STRRCHR"
	.sleb128 47
	.uleb128 0x1c
	.string	"BUILT_IN_CVT64_LOW"
	.sleb128 48
	.uleb128 0x1c
	.string	"BUILT_IN_CVT64_HIGH"
	.sleb128 49
	.uleb128 0x1c
	.string	"BUILT_IN_CVT32"
	.sleb128 50
	.uleb128 0x1c
	.string	"BUILT_IN_PERIPHERAL_RW_BEGIN"
	.sleb128 51
	.uleb128 0x1c
	.string	"BUILT_IN_PERIPHERAL_RW_END"
	.sleb128 52
	.uleb128 0x1c
	.string	"BUILT_IN_VBUF_OFFSET"
	.sleb128 53
	.uleb128 0x1c
	.string	"BUILT_IN_SBUF_OFFSET"
	.sleb128 54
	.uleb128 0x1c
	.string	"BUILD_IN_MUL_SHIFT_HI"
	.sleb128 55
	.uleb128 0x1c
	.string	"BUILD_IN_MUL_SHIFT"
	.sleb128 56
	.uleb128 0x1c
	.string	"BUILD_IN_C3_LEAD"
	.sleb128 57
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MAC"
	.sleb128 58
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MACN"
	.sleb128 59
	.uleb128 0x1c
	.string	"BUILD_IN_C3_ROUND"
	.sleb128 60
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAADDS"
	.sleb128 61
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SASUBS"
	.sleb128 62
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MULA"
	.sleb128 63
	.uleb128 0x1c
	.string	"BUILD_IN_C3_INIT_ACC"
	.sleb128 64
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAVE_ACC"
	.sleb128 65
	.uleb128 0x1c
	.string	"BUILD_IN_MPY_32_16"
	.sleb128 66
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MACD"
	.sleb128 67
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MULAD"
	.sleb128 68
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAADDSH"
	.sleb128 69
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SASUBSH"
	.sleb128 70
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MVFS"
	.sleb128 71
	.uleb128 0x1c
	.string	"BUILD_IN_C3_INIT_ADDR"
	.sleb128 72
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAVE_ADDR"
	.sleb128 73
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MAC_A"
	.sleb128 74
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MACN_A"
	.sleb128 75
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMAC_A"
	.sleb128 76
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMACN_A"
	.sleb128 77
	.uleb128 0x1c
	.string	"BUILD_IN_C3_INIT_DACC"
	.sleb128 78
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAVE_DACC"
	.sleb128 79
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAADDH_A"
	.sleb128 80
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SASUBH_A"
	.sleb128 81
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAMULSH"
	.sleb128 82
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MULA_A"
	.sleb128 83
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAMULH_A"
	.sleb128 84
	.uleb128 0x1c
	.string	"BUILD_IN_C3_PTR"
	.sleb128 85
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MAC_AR"
	.sleb128 86
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MACN_AR"
	.sleb128 87
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MULA_AR"
	.sleb128 88
	.uleb128 0x1c
	.string	"BUILD_IN_C3_INIT_PTR"
	.sleb128 89
	.uleb128 0x1c
	.string	"BUILD_IN_C3_TRBACK"
	.sleb128 90
	.uleb128 0x1c
	.string	"BUILD_IN_C3_VITERBI"
	.sleb128 91
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMULT"
	.sleb128 92
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMULT_A"
	.sleb128 93
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMULTN"
	.sleb128 94
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMULTN_A"
	.sleb128 95
	.uleb128 0x1c
	.string	"BUILD_IN_SET_CIRCBUF"
	.sleb128 96
	.uleb128 0x1c
	.string	"BUILD_IN_RESET_CIRCBUF"
	.sleb128 97
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DADD"
	.sleb128 98
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DSUB"
	.sleb128 99
	.uleb128 0x1c
	.string	"BUILD_IN_C3_FFT"
	.sleb128 100
	.uleb128 0x1c
	.string	"BUILD_IN_C3_FFTLD"
	.sleb128 101
	.uleb128 0x1c
	.string	"BUILD_IN_C3_FFTST"
	.sleb128 102
	.uleb128 0x1c
	.string	"BUILD_IN_DEPOSIT"
	.sleb128 103
	.uleb128 0x1c
	.string	"BUILD_IN_EXTRACT"
	.sleb128 104
	.uleb128 0x1c
	.string	"BUILD_IN_C3_BITR"
	.sleb128 105
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMAC"
	.sleb128 106
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DMACN"
	.sleb128 107
	.uleb128 0x1c
	.string	"BUILD_IN_C3_LOAD"
	.sleb128 108
	.uleb128 0x1c
	.string	"BUILD_IN_C3_STORE"
	.sleb128 109
	.uleb128 0x1c
	.string	"BUILD_IN_C3_REVB"
	.sleb128 110
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DSHL_I"
	.sleb128 111
	.uleb128 0x1c
	.string	"BUILD_IN_C3_DSHR_I"
	.sleb128 112
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MAC_I"
	.sleb128 113
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MACN_I"
	.sleb128 114
	.uleb128 0x1c
	.string	"BUILD_IN_C3_MULA_I"
	.sleb128 115
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAADD_A"
	.sleb128 116
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SADDHA"
	.sleb128 117
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SAADDHA_A"
	.sleb128 118
	.uleb128 0x1c
	.string	"BUILD_IN_C3_SASUB_A"
	.sleb128 119
	.uleb128 0x1c
	.string	"BUILD_IN_COPY_ADDR"
	.sleb128 120
	.uleb128 0x1c
	.string	"BUILD_IN_SET_ADDR"
	.sleb128 121
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVGR_G2R"
	.sleb128 122
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVGR_R2G"
	.sleb128 123
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVGR_G2S"
	.sleb128 124
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVGR_S2G"
	.sleb128 125
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVGC_C2G"
	.sleb128 126
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVGC_G2C"
	.sleb128 127
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_V"
	.sleb128 128
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_G"
	.sleb128 129
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_S"
	.sleb128 130
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ST_V"
	.sleb128 131
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ST_G"
	.sleb128 132
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_G_IMM"
	.sleb128 133
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_C_IMM"
	.sleb128 134
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_V_IMM"
	.sleb128 135
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ST_V_IMM"
	.sleb128 136
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ST_C_IMM"
	.sleb128 137
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ST_G_IMM"
	.sleb128 138
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VADDS"
	.sleb128 139
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VSUBS"
	.sleb128 140
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VMUL"
	.sleb128 141
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VNEG"
	.sleb128 142
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VSHFT"
	.sleb128 143
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VCLP"
	.sleb128 144
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VCLG"
	.sleb128 145
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VCMOV"
	.sleb128 146
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LCZERO"
	.sleb128 147
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VRND"
	.sleb128 148
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VSPAS"
	.sleb128 149
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VSPEL"
	.sleb128 150
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VSPEL_MAC"
	.sleb128 151
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MMUL"
	.sleb128 152
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VMOV"
	.sleb128 153
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VCOPY"
	.sleb128 154
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VCMPR"
	.sleb128 155
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SAD"
	.sleb128 156
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SAD_TMP"
	.sleb128 157
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SATD"
	.sleb128 158
	.uleb128 0x1c
	.string	"BUILT_IN_C2_INTRA"
	.sleb128 159
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVSEL"
	.sleb128 160
	.uleb128 0x1c
	.string	"BUILT_IN_C2_BCST"
	.sleb128 161
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VLCS_R"
	.sleb128 162
	.uleb128 0x1c
	.string	"BUILT_IN_C2_VLCS"
	.sleb128 163
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ADDS"
	.sleb128 164
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ADDS_R"
	.sleb128 165
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SUBS"
	.sleb128 166
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SUBS_R"
	.sleb128 167
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MULS"
	.sleb128 168
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MADS"
	.sleb128 169
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SMADS"
	.sleb128 170
	.uleb128 0x1c
	.string	"BUILT_IN_C2_CMOV"
	.sleb128 171
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MOV"
	.sleb128 172
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MOV_R"
	.sleb128 173
	.uleb128 0x1c
	.string	"BUILT_IN_C2_CLP"
	.sleb128 174
	.uleb128 0x1c
	.string	"BUILT_IN_C2_CHKRNG"
	.sleb128 175
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SCOND"
	.sleb128 176
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SCOND_R_WB"
	.sleb128 177
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SCOND_R"
	.sleb128 178
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SCOND_BR"
	.sleb128 179
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SCOND_BR_R"
	.sleb128 180
	.uleb128 0x1c
	.string	"BUILT_IN_C2_BOP"
	.sleb128 181
	.uleb128 0x1c
	.string	"BUILT_IN_C2_BDEP"
	.sleb128 182
	.uleb128 0x1c
	.string	"BUILT_IN_C2_WRAP"
	.sleb128 183
	.uleb128 0x1c
	.string	"BUILT_IN_C2_BXTR"
	.sleb128 184
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SUM4"
	.sleb128 185
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SUM3_SADDR"
	.sleb128 186
	.uleb128 0x1c
	.string	"BUILT_IN_C2_SUM4_R"
	.sleb128 187
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MED"
	.sleb128 188
	.uleb128 0x1c
	.string	"BUILT_IN_C2_GSUMS"
	.sleb128 189
	.uleb128 0x1c
	.string	"BUILT_IN_C2_CLZOB"
	.sleb128 190
	.uleb128 0x1c
	.string	"BUILT_IN_C2_THCTRL"
	.sleb128 191
	.uleb128 0x1c
	.string	"BUILT_IN_C2_BR_F"
	.sleb128 192
	.uleb128 0x1c
	.string	"BUILT_IN_C2_BR_T"
	.sleb128 193
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_V2G"
	.sleb128 194
	.uleb128 0x1c
	.string	"BUILT_IN_C2_LD_V2G_IMM"
	.sleb128 195
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ST_G2V"
	.sleb128 196
	.uleb128 0x1c
	.string	"BUILT_IN_C2_ST_G2V_IMM"
	.sleb128 197
	.uleb128 0x1c
	.string	"BUILT_IN_C2_MVGR_R2S"
	.sleb128 198
	.uleb128 0x1c
	.string	"BUILT_IN_C2_FORK"
	.sleb128 199
	.uleb128 0x1c
	.string	"BUILT_IN_C2_JOINT"
	.sleb128 200
	.uleb128 0x1c
	.string	"BUILT_IN_C2_THREAD_MAJOR"
	.sleb128 201
	.uleb128 0x1c
	.string	"BUILT_IN_C2_THREAD_MINOR"
	.sleb128 202
	.uleb128 0x1c
	.string	"BUILT_IN_FLOOR"
	.sleb128 203
	.uleb128 0x1c
	.string	"BUILT_IN_FLOORF"
	.sleb128 204
	.uleb128 0x1c
	.string	"BUILT_IN_FLOORL"
	.sleb128 205
	.uleb128 0x1c
	.string	"BUILT_IN_POW"
	.sleb128 206
	.uleb128 0x1c
	.string	"BUILT_IN_TAN"
	.sleb128 207
	.uleb128 0x1c
	.string	"BUILT_IN_ACOS"
	.sleb128 208
	.uleb128 0x1c
	.string	"BUILT_IN_ACOSF"
	.sleb128 209
	.uleb128 0x1c
	.string	"BUILT_IN_ACOSH"
	.sleb128 210
	.uleb128 0x1c
	.string	"BUILT_IN_ACOSHF"
	.sleb128 211
	.uleb128 0x1c
	.string	"BUILT_IN_ACOSHL"
	.sleb128 212
	.uleb128 0x1c
	.string	"BUILT_IN_ACOSL"
	.sleb128 213
	.uleb128 0x1c
	.string	"BUILT_IN_ASIN"
	.sleb128 214
	.uleb128 0x1c
	.string	"BUILT_IN_ASINF"
	.sleb128 215
	.uleb128 0x1c
	.string	"BUILT_IN_ASINH"
	.sleb128 216
	.uleb128 0x1c
	.string	"BUILT_IN_ASINHF"
	.sleb128 217
	.uleb128 0x1c
	.string	"BUILT_IN_ASINHL"
	.sleb128 218
	.uleb128 0x1c
	.string	"BUILT_IN_ASINL"
	.sleb128 219
	.uleb128 0x1c
	.string	"BUILT_IN_ATAN"
	.sleb128 220
	.uleb128 0x1c
	.string	"BUILT_IN_ATAN2"
	.sleb128 221
	.uleb128 0x1c
	.string	"BUILT_IN_ATAN2F"
	.sleb128 222
	.uleb128 0x1c
	.string	"BUILT_IN_ATAN2L"
	.sleb128 223
	.uleb128 0x1c
	.string	"BUILT_IN_ATANF"
	.sleb128 224
	.uleb128 0x1c
	.string	"BUILT_IN_ATANH"
	.sleb128 225
	.uleb128 0x1c
	.string	"BUILT_IN_ATANHF"
	.sleb128 226
	.uleb128 0x1c
	.string	"BUILT_IN_ATANHL"
	.sleb128 227
	.uleb128 0x1c
	.string	"BUILT_IN_ATANL"
	.sleb128 228
	.uleb128 0x1c
	.string	"BUILT_IN_CEIL"
	.sleb128 229
	.uleb128 0x1c
	.string	"BUILT_IN_CEILF"
	.sleb128 230
	.uleb128 0x1c
	.string	"BUILT_IN_CEILL"
	.sleb128 231
	.uleb128 0x1c
	.string	"BUILT_IN_FMODF"
	.sleb128 232
	.uleb128 0x1c
	.string	"BUILT_IN_FMODL"
	.sleb128 233
	.uleb128 0x1c
	.string	"BUILT_IN_FREXP"
	.sleb128 234
	.uleb128 0x1c
	.string	"BUILT_IN_FREXPF"
	.sleb128 235
	.uleb128 0x1c
	.string	"BUILT_IN_FREXPL"
	.sleb128 236
	.uleb128 0x1c
	.string	"BUILT_IN_LDEXP"
	.sleb128 237
	.uleb128 0x1c
	.string	"BUILT_IN_LDEXPF"
	.sleb128 238
	.uleb128 0x1c
	.string	"BUILT_IN_LDEXPL"
	.sleb128 239
	.uleb128 0x1c
	.string	"BUILT_IN_LOG10"
	.sleb128 240
	.uleb128 0x1c
	.string	"BUILT_IN_LOG10F"
	.sleb128 241
	.uleb128 0x1c
	.string	"BUILT_IN_LOG10L"
	.sleb128 242
	.uleb128 0x1c
	.string	"BUILT_IN_MODF"
	.sleb128 243
	.uleb128 0x1c
	.string	"BUILT_IN_MODFF"
	.sleb128 244
	.uleb128 0x1c
	.string	"BUILT_IN_MODFL"
	.sleb128 245
	.uleb128 0x1c
	.string	"BUILT_IN_POWF"
	.sleb128 246
	.uleb128 0x1c
	.string	"BUILT_IN_POWL"
	.sleb128 247
	.uleb128 0x1c
	.string	"BUILT_IN_SINH"
	.sleb128 248
	.uleb128 0x1c
	.string	"BUILT_IN_SINHF"
	.sleb128 249
	.uleb128 0x1c
	.string	"BUILT_IN_SINHL"
	.sleb128 250
	.uleb128 0x1c
	.string	"BUILT_IN_TANF"
	.sleb128 251
	.uleb128 0x1c
	.string	"BUILT_IN_TANH"
	.sleb128 252
	.uleb128 0x1c
	.string	"BUILT_IN_TANHF"
	.sleb128 253
	.uleb128 0x1c
	.string	"BUILT_IN_TANHL"
	.sleb128 254
	.uleb128 0x1c
	.string	"BUILT_IN_TANL"
	.sleb128 255
	.uleb128 0x1c
	.string	"BUILT_IN_COSH"
	.sleb128 256
	.uleb128 0x1c
	.string	"BUILT_IN_COSHF"
	.sleb128 257
	.uleb128 0x1c
	.string	"BUILT_IN_COSHL"
	.sleb128 258
	.uleb128 0x1c
	.string	"BUILT_IN_POPCOUNT"
	.sleb128 259
	.uleb128 0x1c
	.string	"BUILT_IN_POPCOUNTL"
	.sleb128 260
	.uleb128 0x1c
	.string	"BUILT_IN_POPCOUNTLL"
	.sleb128 261
	.uleb128 0x1c
	.string	"BUILT_IN_CTZ"
	.sleb128 262
	.uleb128 0x1c
	.string	"BUILT_IN_CTZL"
	.sleb128 263
	.uleb128 0x1c
	.string	"BUILT_IN_CTZLL"
	.sleb128 264
	.uleb128 0x1c
	.string	"BUILT_IN_SQRT"
	.sleb128 265
	.uleb128 0x1c
	.string	"BUILT_IN_SIN"
	.sleb128 266
	.uleb128 0x1c
	.string	"BUILT_IN_COS"
	.sleb128 267
	.uleb128 0x1c
	.string	"BUILT_IN_EXP"
	.sleb128 268
	.uleb128 0x1c
	.string	"BUILT_IN_LOG"
	.sleb128 269
	.uleb128 0x1c
	.string	"BUILT_IN_SQRTF"
	.sleb128 270
	.uleb128 0x1c
	.string	"BUILT_IN_SINF"
	.sleb128 271
	.uleb128 0x1c
	.string	"BUILT_IN_COSF"
	.sleb128 272
	.uleb128 0x1c
	.string	"BUILT_IN_EXPF"
	.sleb128 273
	.uleb128 0x1c
	.string	"BUILT_IN_LOGF"
	.sleb128 274
	.uleb128 0x1c
	.string	"BUILT_IN_SQRTL"
	.sleb128 275
	.uleb128 0x1c
	.string	"BUILT_IN_SINL"
	.sleb128 276
	.uleb128 0x1c
	.string	"BUILT_IN_COSL"
	.sleb128 277
	.uleb128 0x1c
	.string	"BUILT_IN_EXPL"
	.sleb128 278
	.uleb128 0x1c
	.string	"BUILT_IN_LOGL"
	.sleb128 279
	.uleb128 0x1c
	.string	"BUILT_IN_INF"
	.sleb128 280
	.uleb128 0x1c
	.string	"BUILT_IN_INFF"
	.sleb128 281
	.uleb128 0x1c
	.string	"BUILT_IN_INFL"
	.sleb128 282
	.uleb128 0x1c
	.string	"BUILT_IN_HUGE_VAL"
	.sleb128 283
	.uleb128 0x1c
	.string	"BUILT_IN_HUGE_VALF"
	.sleb128 284
	.uleb128 0x1c
	.string	"BUILT_IN_HUGE_VALL"
	.sleb128 285
	.uleb128 0x1c
	.string	"BUILT_IN_NAN"
	.sleb128 286
	.uleb128 0x1c
	.string	"BUILT_IN_NANF"
	.sleb128 287
	.uleb128 0x1c
	.string	"BUILT_IN_NANL"
	.sleb128 288
	.uleb128 0x1c
	.string	"BUILT_IN_NANS"
	.sleb128 289
	.uleb128 0x1c
	.string	"BUILT_IN_NANSF"
	.sleb128 290
	.uleb128 0x1c
	.string	"BUILT_IN_NANSL"
	.sleb128 291
	.uleb128 0x1c
	.string	"BUILT_IN_SAVEREGS"
	.sleb128 292
	.uleb128 0x1c
	.string	"BUILT_IN_CLASSIFY_TYPE"
	.sleb128 293
	.uleb128 0x1c
	.string	"BUILT_IN_NEXT_ARG"
	.sleb128 294
	.uleb128 0x1c
	.string	"BUILT_IN_ARGS_INFO"
	.sleb128 295
	.uleb128 0x1c
	.string	"BUILT_IN_CONSTANT_P"
	.sleb128 296
	.uleb128 0x1c
	.string	"BUILT_IN_FRAME_ADDRESS"
	.sleb128 297
	.uleb128 0x1c
	.string	"BUILT_IN_RETURN_ADDRESS"
	.sleb128 298
	.uleb128 0x1c
	.string	"BUILT_IN_AGGREGATE_INCOMING_ADDRESS"
	.sleb128 299
	.uleb128 0x1c
	.string	"BUILT_IN_APPLY_ARGS"
	.sleb128 300
	.uleb128 0x1c
	.string	"BUILT_IN_APPLY"
	.sleb128 301
	.uleb128 0x1c
	.string	"BUILT_IN_RETURN"
	.sleb128 302
	.uleb128 0x1c
	.string	"BUILT_IN_SETJMP"
	.sleb128 303
	.uleb128 0x1c
	.string	"BUILT_IN_LONGJMP"
	.sleb128 304
	.uleb128 0x1c
	.string	"BUILT_IN_TRAP"
	.sleb128 305
	.uleb128 0x1c
	.string	"BUILT_IN_PREFETCH"
	.sleb128 306
	.uleb128 0x1c
	.string	"BUILT_IN_PRINTF"
	.sleb128 307
	.uleb128 0x1c
	.string	"BUILT_IN_PUTCHAR"
	.sleb128 308
	.uleb128 0x1c
	.string	"BUILT_IN_PUTS"
	.sleb128 309
	.uleb128 0x1c
	.string	"BUILT_IN_SNPRINTF"
	.sleb128 310
	.uleb128 0x1c
	.string	"BUILT_IN_SPRINTF"
	.sleb128 311
	.uleb128 0x1c
	.string	"BUILT_IN_SCANF"
	.sleb128 312
	.uleb128 0x1c
	.string	"BUILT_IN_SSCANF"
	.sleb128 313
	.uleb128 0x1c
	.string	"BUILT_IN_VPRINTF"
	.sleb128 314
	.uleb128 0x1c
	.string	"BUILT_IN_VSCANF"
	.sleb128 315
	.uleb128 0x1c
	.string	"BUILT_IN_VSSCANF"
	.sleb128 316
	.uleb128 0x1c
	.string	"BUILT_IN_VSNPRINTF"
	.sleb128 317
	.uleb128 0x1c
	.string	"BUILT_IN_VSPRINTF"
	.sleb128 318
	.uleb128 0x1c
	.string	"BUILT_IN_FPUTC"
	.sleb128 319
	.uleb128 0x1c
	.string	"BUILT_IN_FPUTS"
	.sleb128 320
	.uleb128 0x1c
	.string	"BUILT_IN_FWRITE"
	.sleb128 321
	.uleb128 0x1c
	.string	"BUILT_IN_FPRINTF"
	.sleb128 322
	.uleb128 0x1c
	.string	"BUILT_IN_PUTCHAR_UNLOCKED"
	.sleb128 323
	.uleb128 0x1c
	.string	"BUILT_IN_PUTS_UNLOCKED"
	.sleb128 324
	.uleb128 0x1c
	.string	"BUILT_IN_PRINTF_UNLOCKED"
	.sleb128 325
	.uleb128 0x1c
	.string	"BUILT_IN_FPUTC_UNLOCKED"
	.sleb128 326
	.uleb128 0x1c
	.string	"BUILT_IN_FPUTS_UNLOCKED"
	.sleb128 327
	.uleb128 0x1c
	.string	"BUILT_IN_FWRITE_UNLOCKED"
	.sleb128 328
	.uleb128 0x1c
	.string	"BUILT_IN_ISGREATER"
	.sleb128 329
	.uleb128 0x1c
	.string	"BUILT_IN_ISGREATEREQUAL"
	.sleb128 330
	.uleb128 0x1c
	.string	"BUILT_IN_ISLESS"
	.sleb128 331
	.uleb128 0x1c
	.string	"BUILT_IN_ISLESSEQUAL"
	.sleb128 332
	.uleb128 0x1c
	.string	"BUILT_IN_ISLESSGREATER"
	.sleb128 333
	.uleb128 0x1c
	.string	"BUILT_IN_ISUNORDERED"
	.sleb128 334
	.uleb128 0x1c
	.string	"BUILT_IN_UNWIND_INIT"
	.sleb128 335
	.uleb128 0x1c
	.string	"BUILT_IN_DWARF_CFA"
	.sleb128 336
	.uleb128 0x1c
	.string	"BUILT_IN_DWARF_SP_COLUMN"
	.sleb128 337
	.uleb128 0x1c
	.string	"BUILT_IN_INIT_DWARF_REG_SIZES"
	.sleb128 338
	.uleb128 0x1c
	.string	"BUILT_IN_FROB_RETURN_ADDR"
	.sleb128 339
	.uleb128 0x1c
	.string	"BUILT_IN_EXTRACT_RETURN_ADDR"
	.sleb128 340
	.uleb128 0x1c
	.string	"BUILT_IN_EH_RETURN"
	.sleb128 341
	.uleb128 0x1c
	.string	"BUILT_IN_EH_RETURN_DATA_REGNO"
	.sleb128 342
	.uleb128 0x1c
	.string	"BUILT_IN_VA_START"
	.sleb128 343
	.uleb128 0x1c
	.string	"BUILT_IN_STDARG_START"
	.sleb128 344
	.uleb128 0x1c
	.string	"BUILT_IN_VA_END"
	.sleb128 345
	.uleb128 0x1c
	.string	"BUILT_IN_VA_COPY"
	.sleb128 346
	.uleb128 0x1c
	.string	"BUILT_IN_EXPECT"
	.sleb128 347
	.uleb128 0x1c
	.string	"BUILT_IN_EXTEND_POINTER"
	.sleb128 348
	.uleb128 0x1c
	.string	"BUILT_IN_NEW"
	.sleb128 349
	.uleb128 0x1c
	.string	"BUILT_IN_VEC_NEW"
	.sleb128 350
	.uleb128 0x1c
	.string	"BUILT_IN_DELETE"
	.sleb128 351
	.uleb128 0x1c
	.string	"BUILT_IN_VEC_DELETE"
	.sleb128 352
	.uleb128 0x1c
	.string	"BUILT_IN_ABORT"
	.sleb128 353
	.uleb128 0x1c
	.string	"BUILT_IN_EXIT"
	.sleb128 354
	.uleb128 0x1c
	.string	"BUILT_IN__EXIT"
	.sleb128 355
	.uleb128 0x1c
	.string	"BUILT_IN__EXIT2"
	.sleb128 356
	.uleb128 0x1c
	.string	"END_BUILTINS"
	.sleb128 357
	.byte	0x0
	.uleb128 0x4
	.long	0x3454
	.string	"tree_common"
	.byte	0x10
	.byte	0x7
	.byte	0x8c
	.uleb128 0x1d
	.long	.LASF9
	.byte	0x7
	.byte	0x8d
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x1d
	.long	.LASF4
	.byte	0x7
	.byte	0x8e
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x5
	.long	.LASF0
	.byte	0x7
	.byte	0x90
	.long	0xafc
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"side_effects_flag"
	.byte	0x7
	.byte	0x92
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"constant_flag"
	.byte	0x7
	.byte	0x93
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"addressable_flag"
	.byte	0x7
	.byte	0x94
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"volatile_flag"
	.byte	0x7
	.byte	0x95
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"readonly_flag"
	.byte	0x7
	.byte	0x96
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"unsigned_flag"
	.byte	0x7
	.byte	0x97
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"asm_written_flag"
	.byte	0x7
	.byte	0x98
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"not_emitted_by_gxx"
	.byte	0x7
	.byte	0x9a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"used_flag"
	.byte	0x7
	.byte	0x9f
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"nothrow_flag"
	.byte	0x7
	.byte	0xa0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"static_flag"
	.byte	0x7
	.byte	0xa1
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"public_flag"
	.byte	0x7
	.byte	0xa2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"private_flag"
	.byte	0x7
	.byte	0xa3
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"protected_flag"
	.byte	0x7
	.byte	0xa4
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"bounded_flag"
	.byte	0x7
	.byte	0xa5
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"deprecated_flag"
	.byte	0x7
	.byte	0xa6
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF10
	.byte	0x7
	.byte	0xa8
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF11
	.byte	0x7
	.byte	0xa9
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF12
	.byte	0x7
	.byte	0xaa
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF13
	.byte	0x7
	.byte	0xab
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF14
	.byte	0x7
	.byte	0xac
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF15
	.byte	0x7
	.byte	0xad
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF16
	.byte	0x7
	.byte	0xae
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x5
	.long	.LASF17
	.byte	0x7
	.byte	0xb0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x6
	.string	"sbuf"
	.byte	0x7
	.byte	0xb5
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"sdram"
	.byte	0x7
	.byte	0xb6
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"v1buf"
	.byte	0x7
	.byte	0xb7
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"v2buf"
	.byte	0x7
	.byte	0xb8
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1c
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"v4buf"
	.byte	0x7
	.byte	0xb9
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0xd
	.long	0x3490
	.string	"tree_int_cst_lowhi"
	.byte	0x10
	.byte	0x7
	.value	0x30a
	.uleb128 0xe
	.string	"low"
	.byte	0x7
	.value	0x30b
	.long	0x489
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"high"
	.byte	0x7
	.value	0x30c
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0xd
	.long	0x34d8
	.string	"tree_int_cst"
	.byte	0x24
	.byte	0x7
	.value	0x303
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x304
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"rtl"
	.byte	0x7
	.value	0x305
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"int_cst"
	.byte	0x7
	.value	0x30d
	.long	0x3454
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0xd
	.long	0x3526
	.string	"tree_real_cst"
	.byte	0x18
	.byte	0x7
	.value	0x31f
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x320
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"rtl"
	.byte	0x7
	.value	0x321
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"real_cst_ptr"
	.byte	0x7
	.value	0x322
	.long	0x3533
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x1e
	.string	"real_value"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x3526
	.uleb128 0xd
	.long	0x359d
	.string	"tree_string"
	.byte	0x20
	.byte	0x7
	.value	0x333
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x334
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"rtl"
	.byte	0x7
	.value	0x335
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x20
	.long	.LASF18
	.byte	0x7
	.value	0x336
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xe
	.string	"pointer"
	.byte	0x7
	.value	0x337
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"st"
	.byte	0x7
	.value	0x339
	.long	0x359d
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x146c
	.uleb128 0xd
	.long	0x35f8
	.string	"tree_complex"
	.byte	0x1c
	.byte	0x7
	.value	0x342
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x343
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"rtl"
	.byte	0x7
	.value	0x344
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"real"
	.byte	0x7
	.value	0x345
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xe
	.string	"imag"
	.byte	0x7
	.value	0x346
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.byte	0x0
	.uleb128 0xd
	.long	0x3640
	.string	"tree_vector"
	.byte	0x18
	.byte	0x7
	.value	0x355
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x356
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"rtl"
	.byte	0x7
	.value	0x357
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"elements"
	.byte	0x7
	.value	0x358
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x4
	.long	0x368a
	.string	"_obstack_chunk"
	.byte	0xc
	.byte	0x20
	.byte	0xa2
	.uleb128 0x7
	.string	"limit"
	.byte	0x20
	.byte	0xa3
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"prev"
	.byte	0x20
	.byte	0xa4
	.long	0x368a
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"contents"
	.byte	0x20
	.byte	0xa5
	.long	0x76e
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x3640
	.uleb128 0xd
	.long	0x37bd
	.string	"obstack"
	.byte	0x2c
	.byte	0x17
	.value	0x31b
	.uleb128 0x7
	.string	"chunk_size"
	.byte	0x20
	.byte	0xaa
	.long	0x4c2
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"chunk"
	.byte	0x20
	.byte	0xab
	.long	0x368a
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"object_base"
	.byte	0x20
	.byte	0xac
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"next_free"
	.byte	0x20
	.byte	0xad
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"chunk_limit"
	.byte	0x20
	.byte	0xae
	.long	0x4e1
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"temp"
	.byte	0x20
	.byte	0xaf
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"alignment_mask"
	.byte	0x20
	.byte	0xb0
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"chunkfun"
	.byte	0x20
	.byte	0xb5
	.long	0x37d2
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"freefun"
	.byte	0x20
	.byte	0xb6
	.long	0x37e9
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"extra_arg"
	.byte	0x20
	.byte	0xb7
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x6
	.string	"use_extra_arg"
	.byte	0x20
	.byte	0xbd
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x6
	.string	"maybe_empty_object"
	.byte	0x20
	.byte	0xbe
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x6
	.string	"alloc_failed"
	.byte	0x20
	.byte	0xc2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.byte	0x0
	.uleb128 0x18
	.long	0x37d2
	.byte	0x1
	.long	0x368a
	.uleb128 0x16
	.long	0x4df
	.uleb128 0x16
	.long	0x4c2
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x37bd
	.uleb128 0x15
	.long	0x37e9
	.byte	0x1
	.uleb128 0x16
	.long	0x4df
	.uleb128 0x16
	.long	0x368a
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x37d8
	.uleb128 0x14
	.long	0x382d
	.long	.LASF19
	.byte	0xc
	.byte	0xa
	.byte	0x19
	.uleb128 0x7
	.string	"str"
	.byte	0xa
	.byte	0x1c
	.long	0x77e
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"len"
	.byte	0xa
	.byte	0x1d
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"hash_value"
	.byte	0xa
	.byte	0x1e
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0xd
	.long	0x3864
	.string	"tree_identifier"
	.byte	0x1c
	.byte	0x7
	.value	0x376
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x377
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"id"
	.byte	0x7
	.value	0x378
	.long	0x37ef
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0xd
	.long	0x38a9
	.string	"tree_list"
	.byte	0x18
	.byte	0x7
	.value	0x380
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x381
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"purpose"
	.byte	0x7
	.value	0x382
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x20
	.long	.LASF20
	.byte	0x7
	.value	0x383
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0xd
	.long	0x38e7
	.string	"tree_vec"
	.byte	0x18
	.byte	0x7
	.value	0x38e
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x38f
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF18
	.byte	0x7
	.value	0x390
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"a"
	.byte	0x7
	.value	0x391
	.long	0x38e7
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x10
	.long	0x38f7
	.long	0x1e4
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0xd
	.long	0x3943
	.string	"tree_exp"
	.byte	0x18
	.byte	0x7
	.value	0x3d4
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x3d5
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"complexity"
	.byte	0x7
	.value	0x3d6
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"operands"
	.byte	0x7
	.value	0x3d9
	.long	0x38e7
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0xd
	.long	0x3a2d
	.string	"tree_block"
	.byte	0x2c
	.byte	0x7
	.value	0x40a
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x40b
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"handler_block_flag"
	.byte	0x7
	.value	0x40d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x22
	.long	.LASF21
	.byte	0x7
	.value	0x40e
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x21
	.string	"block_num"
	.byte	0x7
	.value	0x40f
	.long	0x3b1
	.byte	0x4
	.byte	0x1e
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"vars"
	.byte	0x7
	.value	0x411
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x20
	.long	.LASF22
	.byte	0x7
	.value	0x412
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"supercontext"
	.byte	0x7
	.value	0x413
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x20
	.long	.LASF23
	.byte	0x7
	.value	0x414
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0xe
	.string	"fragment_origin"
	.byte	0x7
	.value	0x415
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0xe
	.string	"fragment_chain"
	.byte	0x7
	.value	0x416
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.byte	0x0
	.uleb128 0x23
	.long	0x3a74
	.string	"tree_type_symtab"
	.byte	0x4
	.byte	0x7
	.value	0x570
	.uleb128 0xa
	.string	"address"
	.byte	0x7
	.value	0x571
	.long	0x2d8
	.uleb128 0xa
	.string	"pointer"
	.byte	0x7
	.value	0x572
	.long	0x4e1
	.uleb128 0xa
	.string	"die"
	.byte	0x7
	.value	0x573
	.long	0x3a81
	.byte	0x0
	.uleb128 0x1e
	.string	"die_struct"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x3a74
	.uleb128 0xd
	.long	0x3dc7
	.string	"tree_type"
	.byte	0x74
	.byte	0x7
	.value	0x551
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x552
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"values"
	.byte	0x7
	.value	0x553
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x20
	.long	.LASF24
	.byte	0x7
	.value	0x554
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x20
	.long	.LASF25
	.byte	0x7
	.value	0x555
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x20
	.long	.LASF26
	.byte	0x7
	.value	0x556
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"uid"
	.byte	0x7
	.value	0x557
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x22
	.long	.LASF27
	.byte	0x7
	.value	0x559
	.long	0x3b1
	.byte	0x4
	.byte	0x9
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"mode"
	.byte	0x7
	.value	0x55a
	.long	0x86f
	.byte	0x4
	.byte	0x7
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"string_flag"
	.byte	0x7
	.value	0x55c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"no_force_blk_flag"
	.byte	0x7
	.value	0x55d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"needs_constructing_flag"
	.byte	0x7
	.value	0x55e
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"transparent_union_flag"
	.byte	0x7
	.value	0x55f
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"packed_flag"
	.byte	0x7
	.value	0x560
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"restrict_flag"
	.byte	0x7
	.value	0x561
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF28
	.byte	0x7
	.value	0x562
	.long	0x3b1
	.byte	0x4
	.byte	0x2
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF10
	.byte	0x7
	.value	0x564
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF11
	.byte	0x7
	.value	0x565
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF12
	.byte	0x7
	.value	0x566
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF13
	.byte	0x7
	.value	0x567
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF14
	.byte	0x7
	.value	0x568
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF15
	.byte	0x7
	.value	0x569
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF16
	.byte	0x7
	.value	0x56a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF29
	.byte	0x7
	.value	0x56b
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x20
	.long	.LASF30
	.byte	0x7
	.value	0x56d
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0xe
	.string	"pointer_to"
	.byte	0x7
	.value	0x56e
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0xe
	.string	"reference_to"
	.byte	0x7
	.value	0x56f
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0xe
	.string	"symtab"
	.byte	0x7
	.value	0x574
	.long	0x3a2d
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x20
	.long	.LASF31
	.byte	0x7
	.value	0x576
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0xe
	.string	"minval"
	.byte	0x7
	.value	0x577
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0xe
	.string	"maxval"
	.byte	0x7
	.value	0x578
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0xe
	.string	"next_variant"
	.byte	0x7
	.value	0x579
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0xe
	.string	"main_variant"
	.byte	0x7
	.value	0x57a
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0xe
	.string	"binfo"
	.byte	0x7
	.value	0x57b
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x20
	.long	.LASF32
	.byte	0x7
	.value	0x57c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0xe
	.string	"alias_set"
	.byte	0x7
	.value	0x57d
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0x20
	.long	.LASF33
	.byte	0x7
	.value	0x57f
	.long	0x3de8
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0xe
	.string	"ty_idx"
	.byte	0x7
	.value	0x581
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0xe
	.string	"field_ids_used"
	.byte	0x7
	.value	0x582
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0xe
	.string	"dst_id"
	.byte	0x7
	.value	0x583
	.long	0x142f
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0xe
	.string	"extra_methods"
	.byte	0x7
	.value	0x58a
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x70
	.byte	0x0
	.uleb128 0xd
	.long	0x3de8
	.string	"lang_type"
	.byte	0x4c
	.byte	0x7
	.value	0x57f
	.uleb128 0xe
	.string	"u"
	.byte	0x5
	.value	0x4e0
	.long	0x8dee
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x3dc7
	.uleb128 0xd
	.long	0x3e31
	.string	"tree_decl_u1_a"
	.byte	0x4
	.byte	0x7
	.value	0x817
	.uleb128 0x22
	.long	.LASF30
	.byte	0x7
	.value	0x818
	.long	0x3b1
	.byte	0x4
	.byte	0x18
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"off_align"
	.byte	0x7
	.value	0x819
	.long	0x3b1
	.byte	0x4
	.byte	0x8
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.byte	0x0
	.uleb128 0x23
	.long	0x3e66
	.string	"tree_decl_u1"
	.byte	0x8
	.byte	0x7
	.value	0x80e
	.uleb128 0xa
	.string	"f"
	.byte	0x7
	.value	0x811
	.long	0x14cb
	.uleb128 0xa
	.string	"i"
	.byte	0x7
	.value	0x814
	.long	0x478
	.uleb128 0xa
	.string	"a"
	.byte	0x7
	.value	0x81a
	.long	0x3dee
	.byte	0x0
	.uleb128 0x23
	.long	0x3ea5
	.string	"tree_decl_u2"
	.byte	0x4
	.byte	0x7
	.value	0x837
	.uleb128 0xa
	.string	"f"
	.byte	0x7
	.value	0x838
	.long	0x4849
	.uleb128 0xa
	.string	"r"
	.byte	0x7
	.value	0x839
	.long	0x9c
	.uleb128 0xa
	.string	"t"
	.byte	0x7
	.value	0x83a
	.long	0x1e4
	.uleb128 0xa
	.string	"i"
	.byte	0x7
	.value	0x83b
	.long	0x2d8
	.byte	0x0
	.uleb128 0x24
	.long	0x4849
	.long	.LASF34
	.value	0x134
	.byte	0x7
	.value	0x7c2
	.uleb128 0x7
	.string	"eh"
	.byte	0xc
	.byte	0xb5
	.long	0x61b2
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"stmt"
	.byte	0xc
	.byte	0xb6
	.long	0x61c6
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"expr"
	.byte	0xc
	.byte	0xb7
	.long	0x61cc
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"emit"
	.byte	0xc
	.byte	0xb8
	.long	0x61d2
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"varasm"
	.byte	0xc
	.byte	0xb9
	.long	0x61e8
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x1d
	.long	.LASF31
	.byte	0xc
	.byte	0xbe
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x1d
	.long	.LASF3
	.byte	0xc
	.byte	0xc1
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"outer"
	.byte	0xc
	.byte	0xc4
	.long	0x4849
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"pops_args"
	.byte	0xc
	.byte	0xc9
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x1d
	.long	.LASF35
	.byte	0xc
	.byte	0xce
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"pretend_args_size"
	.byte	0xc
	.byte	0xd3
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"outgoing_args_size"
	.byte	0xc
	.byte	0xd7
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"arg_offset_rtx"
	.byte	0xc
	.byte	0xdb
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"args_info"
	.byte	0xc
	.byte	0xdf
	.long	0x3cf
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"return_rtx"
	.byte	0xc
	.byte	0xe5
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x74
	.uleb128 0x7
	.string	"internal_arg_pointer"
	.byte	0xc
	.byte	0xe8
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x78
	.uleb128 0x1d
	.long	.LASF36
	.byte	0xc
	.byte	0xec
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x7c
	.uleb128 0x7
	.string	"hard_reg_initial_vals"
	.byte	0xc
	.byte	0xf0
	.long	0x6205
	.byte	0x3
	.byte	0x23
	.uleb128 0x80
	.uleb128 0x7
	.string	"x_function_call_count"
	.byte	0xc
	.byte	0xf3
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x84
	.uleb128 0x7
	.string	"x_nonlocal_labels"
	.byte	0xc
	.byte	0xf8
	.long	0x1e4
	.byte	0x3
	.byte	0x23
	.uleb128 0x88
	.uleb128 0x7
	.string	"x_nonlocal_goto_handler_slots"
	.byte	0xc
	.byte	0xfe
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0x8c
	.uleb128 0xe
	.string	"x_nonlocal_goto_handler_labels"
	.byte	0xc
	.value	0x102
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0x90
	.uleb128 0xe
	.string	"x_nonlocal_goto_stack_level"
	.byte	0xc
	.value	0x107
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0x94
	.uleb128 0xe
	.string	"x_cleanup_label"
	.byte	0xc
	.value	0x10d
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0x98
	.uleb128 0xe
	.string	"x_return_label"
	.byte	0xc
	.value	0x112
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0x9c
	.uleb128 0xe
	.string	"computed_goto_common_label"
	.byte	0xc
	.value	0x115
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xa0
	.uleb128 0xe
	.string	"computed_goto_common_reg"
	.byte	0xc
	.value	0x116
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xa4
	.uleb128 0xe
	.string	"x_save_expr_regs"
	.byte	0xc
	.value	0x11a
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xa8
	.uleb128 0xe
	.string	"x_stack_slot_list"
	.byte	0xc
	.value	0x11e
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xac
	.uleb128 0xe
	.string	"x_rtl_expr_chain"
	.byte	0xc
	.value	0x121
	.long	0x1e4
	.byte	0x3
	.byte	0x23
	.uleb128 0xb0
	.uleb128 0xe
	.string	"x_tail_recursion_label"
	.byte	0xc
	.value	0x125
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xb4
	.uleb128 0xe
	.string	"x_tail_recursion_reentry"
	.byte	0xc
	.value	0x128
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xb8
	.uleb128 0xe
	.string	"x_arg_pointer_save_area"
	.byte	0xc
	.value	0x12e
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xbc
	.uleb128 0xe
	.string	"x_clobber_return_insn"
	.byte	0xc
	.value	0x133
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xc0
	.uleb128 0xe
	.string	"x_frame_offset"
	.byte	0xc
	.value	0x138
	.long	0x478
	.byte	0x3
	.byte	0x23
	.uleb128 0xc4
	.uleb128 0xe
	.string	"x_context_display"
	.byte	0xc
	.value	0x13d
	.long	0x1e4
	.byte	0x3
	.byte	0x23
	.uleb128 0xcc
	.uleb128 0xe
	.string	"x_trampoline_list"
	.byte	0xc
	.value	0x146
	.long	0x1e4
	.byte	0x3
	.byte	0x23
	.uleb128 0xd0
	.uleb128 0xe
	.string	"x_parm_birth_insn"
	.byte	0xc
	.value	0x149
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xd4
	.uleb128 0xe
	.string	"x_last_parm_insn"
	.byte	0xc
	.value	0x14d
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0xd8
	.uleb128 0xe
	.string	"x_max_parm_reg"
	.byte	0xc
	.value	0x151
	.long	0x3b1
	.byte	0x3
	.byte	0x23
	.uleb128 0xdc
	.uleb128 0xe
	.string	"x_parm_reg_stack_loc"
	.byte	0xc
	.value	0x157
	.long	0x5e54
	.byte	0x3
	.byte	0x23
	.uleb128 0xe0
	.uleb128 0xe
	.string	"x_temp_slots"
	.byte	0xc
	.value	0x15a
	.long	0x6217
	.byte	0x3
	.byte	0x23
	.uleb128 0xe4
	.uleb128 0xe
	.string	"x_temp_slot_level"
	.byte	0xc
	.value	0x15d
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0xe8
	.uleb128 0xe
	.string	"x_var_temp_slot_level"
	.byte	0xc
	.value	0x160
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0xec
	.uleb128 0xe
	.string	"x_target_temp_slot_level"
	.byte	0xc
	.value	0x166
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0xf0
	.uleb128 0xe
	.string	"fixup_var_refs_queue"
	.byte	0xc
	.value	0x16a
	.long	0x5eb9
	.byte	0x3
	.byte	0x23
	.uleb128 0xf4
	.uleb128 0xe
	.string	"inlinable"
	.byte	0xc
	.value	0x16d
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0xf8
	.uleb128 0xe
	.string	"no_debugging_symbols"
	.byte	0xc
	.value	0x16e
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0xfc
	.uleb128 0xe
	.string	"original_arg_vector"
	.byte	0xc
	.value	0x16f
	.long	0x19c
	.byte	0x3
	.byte	0x23
	.uleb128 0x100
	.uleb128 0xe
	.string	"original_decl_initial"
	.byte	0xc
	.value	0x170
	.long	0x1e4
	.byte	0x3
	.byte	0x23
	.uleb128 0x104
	.uleb128 0xe
	.string	"inl_last_parm_insn"
	.byte	0xc
	.value	0x173
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0x108
	.uleb128 0xe
	.string	"inl_max_label_num"
	.byte	0xc
	.value	0x175
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x10c
	.uleb128 0xe
	.string	"funcdef_no"
	.byte	0xc
	.value	0x178
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x110
	.uleb128 0xe
	.string	"machine"
	.byte	0xc
	.value	0x17d
	.long	0x6230
	.byte	0x3
	.byte	0x23
	.uleb128 0x114
	.uleb128 0xe
	.string	"stack_alignment_needed"
	.byte	0xc
	.value	0x17f
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x118
	.uleb128 0xe
	.string	"preferred_stack_boundary"
	.byte	0xc
	.value	0x181
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x11c
	.uleb128 0x20
	.long	.LASF37
	.byte	0xc
	.value	0x184
	.long	0x646c
	.byte	0x3
	.byte	0x23
	.uleb128 0x120
	.uleb128 0xe
	.string	"epilogue_delay_list"
	.byte	0xc
	.value	0x18a
	.long	0x9c
	.byte	0x3
	.byte	0x23
	.uleb128 0x124
	.uleb128 0x21
	.string	"returns_struct"
	.byte	0xc
	.value	0x190
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"returns_pcc_struct"
	.byte	0xc
	.value	0x194
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"returns_pointer"
	.byte	0xc
	.value	0x197
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"needs_context"
	.byte	0xc
	.value	0x19a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1c
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"calls_setjmp"
	.byte	0xc
	.value	0x19d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"calls_longjmp"
	.byte	0xc
	.value	0x1a0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1a
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"calls_alloca"
	.byte	0xc
	.value	0x1a4
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x19
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"calls_eh_return"
	.byte	0xc
	.value	0x1a7
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"has_nonlocal_label"
	.byte	0xc
	.value	0x1ab
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"has_nonlocal_goto"
	.byte	0xc
	.value	0x1af
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"contains_functions"
	.byte	0xc
	.value	0x1b2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"has_computed_jump"
	.byte	0xc
	.value	0x1b5
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"is_thunk"
	.byte	0xc
	.value	0x1ba
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"all_throwers_are_sibcalls"
	.byte	0xc
	.value	0x1c1
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"instrument_entry_exit"
	.byte	0xc
	.value	0x1c5
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"arc_profile"
	.byte	0xc
	.value	0x1c8
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"profile"
	.byte	0xc
	.value	0x1cb
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"limit_stack"
	.byte	0xc
	.value	0x1cf
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"stdarg"
	.byte	0xc
	.value	0x1d2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"x_whole_function_mode_p"
	.byte	0xc
	.value	0x1d8
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"x_dont_save_pending_sizes_p"
	.byte	0xc
	.value	0x1e1
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"uses_const_pool"
	.byte	0xc
	.value	0x1e4
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"uses_pic_offset_table"
	.byte	0xc
	.value	0x1e7
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"uses_eh_lsda"
	.byte	0xc
	.value	0x1ea
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x21
	.string	"arg_pointer_save_area_init"
	.byte	0xc
	.value	0x1ed
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x3
	.byte	0x23
	.uleb128 0x128
	.uleb128 0x20
	.long	.LASF38
	.byte	0xc
	.value	0x1fa
	.long	0x613c
	.byte	0x3
	.byte	0x23
	.uleb128 0x12c
	.uleb128 0xe
	.string	"max_jumptable_ents"
	.byte	0xc
	.value	0x1fe
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x130
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x3ea5
	.uleb128 0x25
	.long	0x4887
	.byte	0x4
	.byte	0x7
	.value	0x84e
	.uleb128 0xa
	.string	"st"
	.byte	0x7
	.value	0x84f
	.long	0x359d
	.uleb128 0xa
	.string	"label_idx"
	.byte	0x7
	.value	0x850
	.long	0x141e
	.uleb128 0xa
	.string	"field_id"
	.byte	0x7
	.value	0x851
	.long	0x3b1
	.byte	0x0
	.uleb128 0xd
	.long	0x4fc8
	.string	"tree_decl"
	.byte	0xa0
	.byte	0x7
	.value	0x7c5
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x7c6
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"locus"
	.byte	0x7
	.value	0x7c7
	.long	0xaea
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"uid"
	.byte	0x7
	.value	0x7c8
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x20
	.long	.LASF24
	.byte	0x7
	.value	0x7c9
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x21
	.string	"mode"
	.byte	0x7
	.value	0x7ca
	.long	0x86f
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"external_flag"
	.byte	0x7
	.value	0x7cc
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"nonlocal_flag"
	.byte	0x7
	.value	0x7cd
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"regdecl_flag"
	.byte	0x7
	.value	0x7ce
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"inline_flag"
	.byte	0x7
	.value	0x7cf
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"bit_field_flag"
	.byte	0x7
	.value	0x7d0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"virtual_flag"
	.byte	0x7
	.value	0x7d1
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"ignored_flag"
	.byte	0x7
	.value	0x7d2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x22
	.long	.LASF21
	.byte	0x7
	.value	0x7d3
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"sbuf_flag"
	.byte	0x7
	.value	0x7d7
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"sdram_flag"
	.byte	0x7
	.value	0x7d8
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"v1buf_flag"
	.byte	0x7
	.value	0x7d9
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"v2buf_flag"
	.byte	0x7
	.value	0x7da
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"v4buf_flag"
	.byte	0x7
	.value	0x7db
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"in_system_header_flag"
	.byte	0x7
	.value	0x7df
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"common_flag"
	.byte	0x7
	.value	0x7e0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"defer_output"
	.byte	0x7
	.value	0x7e1
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"transparent_union"
	.byte	0x7
	.value	0x7e2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"static_ctor_flag"
	.byte	0x7
	.value	0x7e3
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"static_dtor_flag"
	.byte	0x7
	.value	0x7e4
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"artificial_flag"
	.byte	0x7
	.value	0x7e5
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"weak_flag"
	.byte	0x7
	.value	0x7e6
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"non_addr_const_p"
	.byte	0x7
	.value	0x7e8
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"no_instrument_function_entry_exit"
	.byte	0x7
	.value	0x7e9
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"comdat_flag"
	.byte	0x7
	.value	0x7ea
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x21
	.string	"malloc_flag"
	.byte	0x7
	.value	0x7eb
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"no_limit_stack"
	.byte	0x7
	.value	0x7ec
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF8
	.byte	0x7
	.value	0x7ed
	.long	0x147b
	.byte	0x4
	.byte	0x2
	.byte	0x1c
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"pure_flag"
	.byte	0x7
	.value	0x7ee
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF28
	.byte	0x7
	.value	0x7f0
	.long	0x3b1
	.byte	0x4
	.byte	0x2
	.byte	0x19
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"non_addressable"
	.byte	0x7
	.value	0x7f1
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF29
	.byte	0x7
	.value	0x7f2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"uninlinable"
	.byte	0x7
	.value	0x7f3
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"thread_local_flag"
	.byte	0x7
	.value	0x7f4
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"inlined_function_flag"
	.byte	0x7
	.value	0x7f5
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"threadprivate_flag"
	.byte	0x7
	.value	0x7f7
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF10
	.byte	0x7
	.value	0x7fa
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF11
	.byte	0x7
	.value	0x7fb
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF12
	.byte	0x7
	.value	0x7fc
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF13
	.byte	0x7
	.value	0x7fd
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF14
	.byte	0x7
	.value	0x7fe
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF15
	.byte	0x7
	.value	0x7ff
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF16
	.byte	0x7
	.value	0x800
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x22
	.long	.LASF17
	.byte	0x7
	.value	0x801
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"syscall_linkage_flag"
	.byte	0x7
	.value	0x804
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"widen_retval_flag"
	.byte	0x7
	.value	0x805
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x21
	.string	"emitted_by_gxx"
	.byte	0x7
	.value	0x808
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0xe
	.string	"u1"
	.byte	0x7
	.value	0x81b
	.long	0x3e31
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x20
	.long	.LASF25
	.byte	0x7
	.value	0x81d
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x20
	.long	.LASF31
	.byte	0x7
	.value	0x81e
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x20
	.long	.LASF32
	.byte	0x7
	.value	0x81f
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0xe
	.string	"arguments"
	.byte	0x7
	.value	0x820
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x20
	.long	.LASF39
	.byte	0x7
	.value	0x821
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0xe
	.string	"initial"
	.byte	0x7
	.value	0x822
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0xe
	.string	"initial_2"
	.byte	0x7
	.value	0x824
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0xe
	.string	"alias_target"
	.byte	0x7
	.value	0x825
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0xe
	.string	"thunk_delta"
	.byte	0x7
	.value	0x829
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x20
	.long	.LASF23
	.byte	0x7
	.value	0x82b
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0xe
	.string	"assembler_name"
	.byte	0x7
	.value	0x82c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0xe
	.string	"section_name"
	.byte	0x7
	.value	0x82d
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x20
	.long	.LASF26
	.byte	0x7
	.value	0x82e
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0xe
	.string	"rtl"
	.byte	0x7
	.value	0x82f
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0xe
	.string	"live_range_rtl"
	.byte	0x7
	.value	0x830
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.uleb128 0xe
	.string	"u2"
	.byte	0x7
	.value	0x83c
	.long	0x3e66
	.byte	0x2
	.byte	0x23
	.uleb128 0x70
	.uleb128 0xe
	.string	"saved_tree"
	.byte	0x7
	.value	0x83f
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x74
	.uleb128 0xe
	.string	"inlined_fns"
	.byte	0x7
	.value	0x843
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x78
	.uleb128 0xe
	.string	"vindex"
	.byte	0x7
	.value	0x845
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x7c
	.uleb128 0xe
	.string	"pointer_alias_set"
	.byte	0x7
	.value	0x846
	.long	0x478
	.byte	0x3
	.byte	0x23
	.uleb128 0x80
	.uleb128 0x20
	.long	.LASF33
	.byte	0x7
	.value	0x848
	.long	0x4fff
	.byte	0x3
	.byte	0x23
	.uleb128 0x88
	.uleb128 0x21
	.string	"symtab_idx"
	.byte	0x7
	.value	0x84b
	.long	0x3b1
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x3
	.byte	0x23
	.uleb128 0x8c
	.uleb128 0x21
	.string	"label_defined"
	.byte	0x7
	.value	0x84c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x3
	.byte	0x23
	.uleb128 0x8c
	.uleb128 0xe
	.string	"sgi_u1"
	.byte	0x7
	.value	0x852
	.long	0x484f
	.byte	0x3
	.byte	0x23
	.uleb128 0x90
	.uleb128 0xe
	.string	"decl_dst_id"
	.byte	0x7
	.value	0x858
	.long	0x142f
	.byte	0x3
	.byte	0x23
	.uleb128 0x94
	.uleb128 0xe
	.string	"sl_model_name"
	.byte	0x7
	.value	0x85c
	.long	0x1e4
	.byte	0x3
	.byte	0x23
	.uleb128 0x9c
	.byte	0x0
	.uleb128 0xd
	.long	0x4fff
	.string	"lang_decl"
	.byte	0x34
	.byte	0x7
	.value	0x848
	.uleb128 0xe
	.string	"decl_flags"
	.byte	0x5
	.value	0x73a
	.long	0x8ea6
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"u"
	.byte	0x5
	.value	0x763
	.long	0x92bc
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x4fc8
	.uleb128 0x1b
	.long	0x5283
	.string	"omp_tree_type"
	.byte	0x4
	.byte	0x11
	.byte	0x1d
	.uleb128 0x1c
	.string	"parallel_dir_b"
	.sleb128 0
	.uleb128 0x1c
	.string	"parallel_dir_e"
	.sleb128 1
	.uleb128 0x1c
	.string	"for_dir_b"
	.sleb128 2
	.uleb128 0x1c
	.string	"for_dir_e"
	.sleb128 3
	.uleb128 0x1c
	.string	"sections_cons_b"
	.sleb128 4
	.uleb128 0x1c
	.string	"sections_cons_e"
	.sleb128 5
	.uleb128 0x1c
	.string	"section_cons_b"
	.sleb128 6
	.uleb128 0x1c
	.string	"section_cons_e"
	.sleb128 7
	.uleb128 0x1c
	.string	"single_cons_b"
	.sleb128 8
	.uleb128 0x1c
	.string	"single_cons_e"
	.sleb128 9
	.uleb128 0x1c
	.string	"par_for_cons_b"
	.sleb128 10
	.uleb128 0x1c
	.string	"par_for_cons_e"
	.sleb128 11
	.uleb128 0x1c
	.string	"par_sctn_cons_b"
	.sleb128 12
	.uleb128 0x1c
	.string	"par_sctn_cons_e"
	.sleb128 13
	.uleb128 0x1c
	.string	"master_cons_b"
	.sleb128 14
	.uleb128 0x1c
	.string	"master_cons_e"
	.sleb128 15
	.uleb128 0x1c
	.string	"critical_cons_b"
	.sleb128 16
	.uleb128 0x1c
	.string	"critical_cons_e"
	.sleb128 17
	.uleb128 0x1c
	.string	"barrier_dir"
	.sleb128 18
	.uleb128 0x1c
	.string	"flush_dir"
	.sleb128 19
	.uleb128 0x1c
	.string	"atomic_cons"
	.sleb128 20
	.uleb128 0x1c
	.string	"atomic_cons_b"
	.sleb128 21
	.uleb128 0x1c
	.string	"atomic_cons_e"
	.sleb128 22
	.uleb128 0x1c
	.string	"thdprv_dir"
	.sleb128 23
	.uleb128 0x1c
	.string	"ordered_cons_b"
	.sleb128 24
	.uleb128 0x1c
	.string	"ordered_cons_e"
	.sleb128 25
	.uleb128 0x1c
	.string	"options_dir"
	.sleb128 26
	.uleb128 0x1c
	.string	"exec_freq_dir"
	.sleb128 27
	.uleb128 0x1c
	.string	"sl2_sections_cons_b"
	.sleb128 28
	.uleb128 0x1c
	.string	"sl2_minor_sections_cons_b"
	.sleb128 29
	.uleb128 0x1c
	.string	"sl2_sections_cons_e"
	.sleb128 30
	.uleb128 0x1c
	.string	"sl2_section_cons_b"
	.sleb128 31
	.uleb128 0x1c
	.string	"sl2_section_cons_e"
	.sleb128 32
	.uleb128 0x1c
	.string	"sl2_minor_section_cons_b"
	.sleb128 33
	.uleb128 0x1c
	.string	"sl2_minor_section_cons_e"
	.sleb128 34
	.byte	0x0
	.uleb128 0xd
	.long	0x52d2
	.string	"tree_omp"
	.byte	0x18
	.byte	0x7
	.value	0x864
	.uleb128 0x20
	.long	.LASF1
	.byte	0x7
	.value	0x865
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"choice"
	.byte	0x7
	.value	0x866
	.long	0x5005
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"omp_clause_list"
	.byte	0x7
	.value	0x867
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0xd
	.long	0x538d
	.string	"attribute_spec"
	.byte	0x14
	.byte	0x7
	.value	0xa1d
	.uleb128 0x20
	.long	.LASF31
	.byte	0x7
	.value	0xa20
	.long	0x538d
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"min_length"
	.byte	0x7
	.value	0xa22
	.long	0x83a
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"max_length"
	.byte	0x7
	.value	0xa25
	.long	0x83a
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"decl_required"
	.byte	0x7
	.value	0xa2d
	.long	0x5392
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"type_required"
	.byte	0x7
	.value	0xa30
	.long	0x5392
	.byte	0x2
	.byte	0x23
	.uleb128 0xd
	.uleb128 0xe
	.string	"function_type_required"
	.byte	0x7
	.value	0xa35
	.long	0x5392
	.byte	0x2
	.byte	0x23
	.uleb128 0xe
	.uleb128 0xe
	.string	"handler"
	.byte	0x7
	.value	0xa44
	.long	0x53d0
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0xb
	.long	0x2c5
	.uleb128 0xb
	.long	0x5397
	.uleb128 0xc
	.string	"_Bool"
	.byte	0x1
	.byte	0x2
	.uleb128 0x18
	.long	0x53c4
	.byte	0x1
	.long	0x1e4
	.uleb128 0x16
	.long	0x53c4
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x2d8
	.uleb128 0x16
	.long	0x53ca
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x1e4
	.uleb128 0x3
	.byte	0x4
	.long	0x5397
	.uleb128 0xb
	.long	0x53d5
	.uleb128 0x3
	.byte	0x4
	.long	0x53a0
	.uleb128 0x1b
	.long	0x5baa
	.string	"rtx_code"
	.byte	0x4
	.byte	0x8
	.byte	0x29
	.uleb128 0x1c
	.string	"UNKNOWN"
	.sleb128 0
	.uleb128 0x1c
	.string	"NIL"
	.sleb128 1
	.uleb128 0x1c
	.string	"INCLUDE"
	.sleb128 2
	.uleb128 0x1c
	.string	"EXPR_LIST"
	.sleb128 3
	.uleb128 0x1c
	.string	"INSN_LIST"
	.sleb128 4
	.uleb128 0x1c
	.string	"MATCH_OPERAND"
	.sleb128 5
	.uleb128 0x1c
	.string	"MATCH_SCRATCH"
	.sleb128 6
	.uleb128 0x1c
	.string	"MATCH_DUP"
	.sleb128 7
	.uleb128 0x1c
	.string	"MATCH_OPERATOR"
	.sleb128 8
	.uleb128 0x1c
	.string	"MATCH_PARALLEL"
	.sleb128 9
	.uleb128 0x1c
	.string	"MATCH_OP_DUP"
	.sleb128 10
	.uleb128 0x1c
	.string	"MATCH_PAR_DUP"
	.sleb128 11
	.uleb128 0x1c
	.string	"MATCH_INSN"
	.sleb128 12
	.uleb128 0x1c
	.string	"DEFINE_INSN"
	.sleb128 13
	.uleb128 0x1c
	.string	"DEFINE_PEEPHOLE"
	.sleb128 14
	.uleb128 0x1c
	.string	"DEFINE_SPLIT"
	.sleb128 15
	.uleb128 0x1c
	.string	"DEFINE_INSN_AND_SPLIT"
	.sleb128 16
	.uleb128 0x1c
	.string	"DEFINE_PEEPHOLE2"
	.sleb128 17
	.uleb128 0x1c
	.string	"DEFINE_COMBINE"
	.sleb128 18
	.uleb128 0x1c
	.string	"DEFINE_EXPAND"
	.sleb128 19
	.uleb128 0x1c
	.string	"DEFINE_DELAY"
	.sleb128 20
	.uleb128 0x1c
	.string	"DEFINE_FUNCTION_UNIT"
	.sleb128 21
	.uleb128 0x1c
	.string	"DEFINE_ASM_ATTRIBUTES"
	.sleb128 22
	.uleb128 0x1c
	.string	"DEFINE_COND_EXEC"
	.sleb128 23
	.uleb128 0x1c
	.string	"SEQUENCE"
	.sleb128 24
	.uleb128 0x1c
	.string	"ADDRESS"
	.sleb128 25
	.uleb128 0x1c
	.string	"DEFINE_CPU_UNIT"
	.sleb128 26
	.uleb128 0x1c
	.string	"DEFINE_QUERY_CPU_UNIT"
	.sleb128 27
	.uleb128 0x1c
	.string	"EXCLUSION_SET"
	.sleb128 28
	.uleb128 0x1c
	.string	"PRESENCE_SET"
	.sleb128 29
	.uleb128 0x1c
	.string	"ABSENCE_SET"
	.sleb128 30
	.uleb128 0x1c
	.string	"DEFINE_BYPASS"
	.sleb128 31
	.uleb128 0x1c
	.string	"DEFINE_AUTOMATON"
	.sleb128 32
	.uleb128 0x1c
	.string	"AUTOMATA_OPTION"
	.sleb128 33
	.uleb128 0x1c
	.string	"DEFINE_RESERVATION"
	.sleb128 34
	.uleb128 0x1c
	.string	"DEFINE_INSN_RESERVATION"
	.sleb128 35
	.uleb128 0x1c
	.string	"DEFINE_ATTR"
	.sleb128 36
	.uleb128 0x1c
	.string	"ATTR"
	.sleb128 37
	.uleb128 0x1c
	.string	"SET_ATTR"
	.sleb128 38
	.uleb128 0x1c
	.string	"SET_ATTR_ALTERNATIVE"
	.sleb128 39
	.uleb128 0x1c
	.string	"EQ_ATTR"
	.sleb128 40
	.uleb128 0x1c
	.string	"ATTR_FLAG"
	.sleb128 41
	.uleb128 0x1c
	.string	"INSN"
	.sleb128 42
	.uleb128 0x1c
	.string	"JUMP_INSN"
	.sleb128 43
	.uleb128 0x1c
	.string	"CALL_INSN"
	.sleb128 44
	.uleb128 0x1c
	.string	"BARRIER"
	.sleb128 45
	.uleb128 0x1c
	.string	"CODE_LABEL"
	.sleb128 46
	.uleb128 0x1c
	.string	"NOTE"
	.sleb128 47
	.uleb128 0x1c
	.string	"COND_EXEC"
	.sleb128 48
	.uleb128 0x1c
	.string	"PARALLEL"
	.sleb128 49
	.uleb128 0x1c
	.string	"ASM_INPUT"
	.sleb128 50
	.uleb128 0x1c
	.string	"ASM_OPERANDS"
	.sleb128 51
	.uleb128 0x1c
	.string	"UNSPEC"
	.sleb128 52
	.uleb128 0x1c
	.string	"UNSPEC_VOLATILE"
	.sleb128 53
	.uleb128 0x1c
	.string	"ADDR_VEC"
	.sleb128 54
	.uleb128 0x1c
	.string	"ADDR_DIFF_VEC"
	.sleb128 55
	.uleb128 0x1c
	.string	"PREFETCH"
	.sleb128 56
	.uleb128 0x1c
	.string	"SET"
	.sleb128 57
	.uleb128 0x1c
	.string	"USE"
	.sleb128 58
	.uleb128 0x1c
	.string	"CLOBBER"
	.sleb128 59
	.uleb128 0x1c
	.string	"CALL"
	.sleb128 60
	.uleb128 0x1c
	.string	"RETURN"
	.sleb128 61
	.uleb128 0x1c
	.string	"TRAP_IF"
	.sleb128 62
	.uleb128 0x1c
	.string	"RESX"
	.sleb128 63
	.uleb128 0x1c
	.string	"CONST_INT"
	.sleb128 64
	.uleb128 0x1c
	.string	"CONST_DOUBLE"
	.sleb128 65
	.uleb128 0x1c
	.string	"CONST_VECTOR"
	.sleb128 66
	.uleb128 0x1c
	.string	"CONST_STRING"
	.sleb128 67
	.uleb128 0x1c
	.string	"CONST"
	.sleb128 68
	.uleb128 0x1c
	.string	"PC"
	.sleb128 69
	.uleb128 0x1c
	.string	"VALUE"
	.sleb128 70
	.uleb128 0x1c
	.string	"REG"
	.sleb128 71
	.uleb128 0x1c
	.string	"SCRATCH"
	.sleb128 72
	.uleb128 0x1c
	.string	"SUBREG"
	.sleb128 73
	.uleb128 0x1c
	.string	"STRICT_LOW_PART"
	.sleb128 74
	.uleb128 0x1c
	.string	"CONCAT"
	.sleb128 75
	.uleb128 0x1c
	.string	"MEM"
	.sleb128 76
	.uleb128 0x1c
	.string	"LABEL_REF"
	.sleb128 77
	.uleb128 0x1c
	.string	"SYMBOL_REF"
	.sleb128 78
	.uleb128 0x1c
	.string	"CC0"
	.sleb128 79
	.uleb128 0x1c
	.string	"ADDRESSOF"
	.sleb128 80
	.uleb128 0x1c
	.string	"QUEUED"
	.sleb128 81
	.uleb128 0x1c
	.string	"IF_THEN_ELSE"
	.sleb128 82
	.uleb128 0x1c
	.string	"COND"
	.sleb128 83
	.uleb128 0x1c
	.string	"COMPARE"
	.sleb128 84
	.uleb128 0x1c
	.string	"PLUS"
	.sleb128 85
	.uleb128 0x1c
	.string	"MINUS"
	.sleb128 86
	.uleb128 0x1c
	.string	"NEG"
	.sleb128 87
	.uleb128 0x1c
	.string	"MULT"
	.sleb128 88
	.uleb128 0x1c
	.string	"DIV"
	.sleb128 89
	.uleb128 0x1c
	.string	"MOD"
	.sleb128 90
	.uleb128 0x1c
	.string	"UDIV"
	.sleb128 91
	.uleb128 0x1c
	.string	"UMOD"
	.sleb128 92
	.uleb128 0x1c
	.string	"AND"
	.sleb128 93
	.uleb128 0x1c
	.string	"IOR"
	.sleb128 94
	.uleb128 0x1c
	.string	"XOR"
	.sleb128 95
	.uleb128 0x1c
	.string	"NOT"
	.sleb128 96
	.uleb128 0x1c
	.string	"ASHIFT"
	.sleb128 97
	.uleb128 0x1c
	.string	"ROTATE"
	.sleb128 98
	.uleb128 0x1c
	.string	"ASHIFTRT"
	.sleb128 99
	.uleb128 0x1c
	.string	"LSHIFTRT"
	.sleb128 100
	.uleb128 0x1c
	.string	"ROTATERT"
	.sleb128 101
	.uleb128 0x1c
	.string	"SMIN"
	.sleb128 102
	.uleb128 0x1c
	.string	"SMAX"
	.sleb128 103
	.uleb128 0x1c
	.string	"UMIN"
	.sleb128 104
	.uleb128 0x1c
	.string	"UMAX"
	.sleb128 105
	.uleb128 0x1c
	.string	"PRE_DEC"
	.sleb128 106
	.uleb128 0x1c
	.string	"PRE_INC"
	.sleb128 107
	.uleb128 0x1c
	.string	"POST_DEC"
	.sleb128 108
	.uleb128 0x1c
	.string	"POST_INC"
	.sleb128 109
	.uleb128 0x1c
	.string	"PRE_MODIFY"
	.sleb128 110
	.uleb128 0x1c
	.string	"POST_MODIFY"
	.sleb128 111
	.uleb128 0x1c
	.string	"NE"
	.sleb128 112
	.uleb128 0x1c
	.string	"EQ"
	.sleb128 113
	.uleb128 0x1c
	.string	"GE"
	.sleb128 114
	.uleb128 0x1c
	.string	"GT"
	.sleb128 115
	.uleb128 0x1c
	.string	"LE"
	.sleb128 116
	.uleb128 0x1c
	.string	"LT"
	.sleb128 117
	.uleb128 0x1c
	.string	"GEU"
	.sleb128 118
	.uleb128 0x1c
	.string	"GTU"
	.sleb128 119
	.uleb128 0x1c
	.string	"LEU"
	.sleb128 120
	.uleb128 0x1c
	.string	"LTU"
	.sleb128 121
	.uleb128 0x1c
	.string	"UNORDERED"
	.sleb128 122
	.uleb128 0x1c
	.string	"ORDERED"
	.sleb128 123
	.uleb128 0x1c
	.string	"UNEQ"
	.sleb128 124
	.uleb128 0x1c
	.string	"UNGE"
	.sleb128 125
	.uleb128 0x1c
	.string	"UNGT"
	.sleb128 126
	.uleb128 0x1c
	.string	"UNLE"
	.sleb128 127
	.uleb128 0x1c
	.string	"UNLT"
	.sleb128 128
	.uleb128 0x1c
	.string	"LTGT"
	.sleb128 129
	.uleb128 0x1c
	.string	"SIGN_EXTEND"
	.sleb128 130
	.uleb128 0x1c
	.string	"ZERO_EXTEND"
	.sleb128 131
	.uleb128 0x1c
	.string	"TRUNCATE"
	.sleb128 132
	.uleb128 0x1c
	.string	"FLOAT_EXTEND"
	.sleb128 133
	.uleb128 0x1c
	.string	"FLOAT_TRUNCATE"
	.sleb128 134
	.uleb128 0x1c
	.string	"FLOAT"
	.sleb128 135
	.uleb128 0x1c
	.string	"FIX"
	.sleb128 136
	.uleb128 0x1c
	.string	"UNSIGNED_FLOAT"
	.sleb128 137
	.uleb128 0x1c
	.string	"UNSIGNED_FIX"
	.sleb128 138
	.uleb128 0x1c
	.string	"ABS"
	.sleb128 139
	.uleb128 0x1c
	.string	"SQRT"
	.sleb128 140
	.uleb128 0x1c
	.string	"FFS"
	.sleb128 141
	.uleb128 0x1c
	.string	"SIGN_EXTRACT"
	.sleb128 142
	.uleb128 0x1c
	.string	"ZERO_EXTRACT"
	.sleb128 143
	.uleb128 0x1c
	.string	"HIGH"
	.sleb128 144
	.uleb128 0x1c
	.string	"LO_SUM"
	.sleb128 145
	.uleb128 0x1c
	.string	"RANGE_INFO"
	.sleb128 146
	.uleb128 0x1c
	.string	"RANGE_REG"
	.sleb128 147
	.uleb128 0x1c
	.string	"RANGE_VAR"
	.sleb128 148
	.uleb128 0x1c
	.string	"RANGE_LIVE"
	.sleb128 149
	.uleb128 0x1c
	.string	"CONSTANT_P_RTX"
	.sleb128 150
	.uleb128 0x1c
	.string	"CALL_PLACEHOLDER"
	.sleb128 151
	.uleb128 0x1c
	.string	"VEC_MERGE"
	.sleb128 152
	.uleb128 0x1c
	.string	"VEC_SELECT"
	.sleb128 153
	.uleb128 0x1c
	.string	"VEC_CONCAT"
	.sleb128 154
	.uleb128 0x1c
	.string	"VEC_DUPLICATE"
	.sleb128 155
	.uleb128 0x1c
	.string	"SS_PLUS"
	.sleb128 156
	.uleb128 0x1c
	.string	"US_PLUS"
	.sleb128 157
	.uleb128 0x1c
	.string	"SS_MINUS"
	.sleb128 158
	.uleb128 0x1c
	.string	"US_MINUS"
	.sleb128 159
	.uleb128 0x1c
	.string	"SS_TRUNCATE"
	.sleb128 160
	.uleb128 0x1c
	.string	"US_TRUNCATE"
	.sleb128 161
	.uleb128 0x1c
	.string	"PHI"
	.sleb128 162
	.uleb128 0x1c
	.string	"LAST_AND_UNUSED_RTX_CODE"
	.sleb128 163
	.byte	0x0
	.uleb128 0x26
	.long	0x5c84
	.byte	0x4
	.byte	0x8
	.byte	0x47
	.uleb128 0x6
	.string	"min_align"
	.byte	0x8
	.byte	0x49
	.long	0x3b1
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"base_after_vec"
	.byte	0x8
	.byte	0x4b
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"min_after_vec"
	.byte	0x8
	.byte	0x4c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"max_after_vec"
	.byte	0x8
	.byte	0x4e
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"min_after_base"
	.byte	0x8
	.byte	0x50
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"max_after_base"
	.byte	0x8
	.byte	0x52
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"offset_unsigned"
	.byte	0x8
	.byte	0x55
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x6
	.string	"scale"
	.byte	0x8
	.byte	0x57
	.long	0x3b1
	.byte	0x4
	.byte	0x8
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.byte	0x0
	.uleb128 0x2
	.string	"addr_diff_vec_flags"
	.byte	0x8
	.byte	0x58
	.long	0x5baa
	.uleb128 0x14
	.long	0x5cf8
	.long	.LASF40
	.byte	0x18
	.byte	0x8
	.byte	0x62
	.uleb128 0x7
	.string	"alias"
	.byte	0x8
	.byte	0x63
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"expr"
	.byte	0x8
	.byte	0x64
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"offset"
	.byte	0x8
	.byte	0x65
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x1d
	.long	.LASF24
	.byte	0x8
	.byte	0x66
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x1d
	.long	.LASF30
	.byte	0x8
	.byte	0x67
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x27
	.long	.LASF40
	.byte	0x8
	.byte	0x68
	.long	0x5c9f
	.uleb128 0x8
	.long	0x5dd5
	.string	"rtunion_def"
	.byte	0x8
	.byte	0x8
	.byte	0x6d
	.uleb128 0x28
	.string	"rtwint"
	.byte	0x8
	.byte	0x6e
	.long	0x478
	.uleb128 0x28
	.string	"rtint"
	.byte	0x8
	.byte	0x6f
	.long	0x2d8
	.uleb128 0x28
	.string	"rtuint"
	.byte	0x8
	.byte	0x70
	.long	0x3b1
	.uleb128 0x28
	.string	"rtstr"
	.byte	0x8
	.byte	0x71
	.long	0x2c5
	.uleb128 0x28
	.string	"rtx"
	.byte	0x8
	.byte	0x72
	.long	0x9c
	.uleb128 0x28
	.string	"rtvec"
	.byte	0x8
	.byte	0x73
	.long	0x19c
	.uleb128 0x28
	.string	"rttype"
	.byte	0x8
	.byte	0x74
	.long	0x86f
	.uleb128 0x28
	.string	"rt_addr_diff_vec_flags"
	.byte	0x8
	.byte	0x75
	.long	0x5c84
	.uleb128 0x28
	.string	"rt_cselib"
	.byte	0x8
	.byte	0x76
	.long	0x5de9
	.uleb128 0x28
	.string	"rtbit"
	.byte	0x8
	.byte	0x77
	.long	0x5e01
	.uleb128 0x28
	.string	"rttree"
	.byte	0x8
	.byte	0x78
	.long	0x1e4
	.uleb128 0x28
	.string	"bb"
	.byte	0x8
	.byte	0x79
	.long	0x5e19
	.uleb128 0x28
	.string	"rtmem"
	.byte	0x8
	.byte	0x7a
	.long	0x5e1f
	.byte	0x0
	.uleb128 0x1e
	.string	"cselib_val_struct"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x5dd5
	.uleb128 0x1e
	.string	"bitmap_head_def"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x5def
	.uleb128 0x1e
	.string	"basic_block_def"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x5e07
	.uleb128 0x3
	.byte	0x4
	.long	0x5cf8
	.uleb128 0x2
	.string	"rtunion"
	.byte	0x8
	.byte	0x7c
	.long	0x5d03
	.uleb128 0x10
	.long	0x5e44
	.long	0x5e25
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x5e54
	.long	0x9c
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9c
	.uleb128 0x4
	.long	0x5eb9
	.string	"var_refs_queue"
	.byte	0x10
	.byte	0xc
	.byte	0x17
	.uleb128 0x7
	.string	"modified"
	.byte	0xc
	.byte	0x18
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"promoted_mode"
	.byte	0xc
	.byte	0x19
	.long	0x86f
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x1d
	.long	.LASF41
	.byte	0xc
	.byte	0x1a
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x1d
	.long	.LASF42
	.byte	0xc
	.byte	0x1b
	.long	0x5eb9
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x5e5a
	.uleb128 0x14
	.long	0x5f07
	.long	.LASF43
	.byte	0x10
	.byte	0xc
	.byte	0x24
	.uleb128 0x7
	.string	"first"
	.byte	0xc
	.byte	0x26
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"last"
	.byte	0xc
	.byte	0x27
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x1d
	.long	.LASF44
	.byte	0xc
	.byte	0x28
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x1d
	.long	.LASF42
	.byte	0xc
	.byte	0x29
	.long	0x5f07
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x5ebf
	.uleb128 0x4
	.long	0x605c
	.string	"emit_status"
	.byte	0x34
	.byte	0xc
	.byte	0x37
	.uleb128 0x7
	.string	"x_reg_rtx_no"
	.byte	0xc
	.byte	0x3a
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"x_first_label_num"
	.byte	0xc
	.byte	0x3d
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"x_first_insn"
	.byte	0xc
	.byte	0x44
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"x_last_insn"
	.byte	0xc
	.byte	0x45
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x1d
	.long	.LASF44
	.byte	0xc
	.byte	0x4a
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x1d
	.long	.LASF43
	.byte	0xc
	.byte	0x50
	.long	0x5f07
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"x_cur_insn_uid"
	.byte	0xc
	.byte	0x54
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"x_last_linenum"
	.byte	0xc
	.byte	0x58
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"x_last_filename"
	.byte	0xc
	.byte	0x59
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"regno_pointer_align_length"
	.byte	0xc
	.byte	0x5f
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"regno_pointer_align"
	.byte	0xc
	.byte	0x65
	.long	0x789
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"regno_decl"
	.byte	0xc
	.byte	0x69
	.long	0x53c4
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"x_regno_reg_rtx"
	.byte	0xc
	.byte	0x70
	.long	0x5e54
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.byte	0x0
	.uleb128 0x4
	.long	0x613c
	.string	"expr_status"
	.byte	0x1c
	.byte	0xc
	.byte	0x7d
	.uleb128 0x7
	.string	"x_pending_stack_adjust"
	.byte	0xc
	.byte	0x80
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"x_inhibit_defer_pop"
	.byte	0xc
	.byte	0x91
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"x_stack_pointer_delta"
	.byte	0xc
	.byte	0x97
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"x_saveregs_value"
	.byte	0xc
	.byte	0x9c
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"x_apply_args_value"
	.byte	0xc
	.byte	0x9f
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"x_forced_labels"
	.byte	0xc
	.byte	0xa2
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"x_pending_chain"
	.byte	0xc
	.byte	0xa5
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.byte	0x0
	.uleb128 0x29
	.long	0x61a6
	.long	.LASF38
	.byte	0x4
	.byte	0xc
	.value	0x1f1
	.uleb128 0x1c
	.string	"FUNCTION_FREQUENCY_UNLIKELY_EXECUTED"
	.sleb128 0
	.uleb128 0x1c
	.string	"FUNCTION_FREQUENCY_NORMAL"
	.sleb128 1
	.uleb128 0x1c
	.string	"FUNCTION_FREQUENCY_HOT"
	.sleb128 2
	.byte	0x0
	.uleb128 0x1e
	.string	"eh_status"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x61a6
	.uleb128 0x1e
	.string	"stmt_status"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x61b8
	.uleb128 0x3
	.byte	0x4
	.long	0x605c
	.uleb128 0x3
	.byte	0x4
	.long	0x5f0d
	.uleb128 0x1e
	.string	"varasm_status"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x61d8
	.uleb128 0x1e
	.string	"initial_value_struct"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x61ee
	.uleb128 0x1e
	.string	"temp_slot"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x620b
	.uleb128 0x1e
	.string	"machine_function"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x621d
	.uleb128 0xd
	.long	0x646c
	.string	"language_function"
	.byte	0x64
	.byte	0xc
	.value	0x184
	.uleb128 0xe
	.string	"base"
	.byte	0x5
	.value	0x370
	.long	0x79b4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"x_dtor_label"
	.byte	0x5
	.value	0x372
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xe
	.string	"x_current_class_ptr"
	.byte	0x5
	.value	0x373
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"x_current_class_ref"
	.byte	0x5
	.value	0x374
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"x_eh_spec_block"
	.byte	0x5
	.value	0x375
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0xe
	.string	"x_in_charge_parm"
	.byte	0x5
	.value	0x376
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0xe
	.string	"x_vtt_parm"
	.byte	0x5
	.value	0x377
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0xe
	.string	"x_return_value"
	.byte	0x5
	.value	0x378
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0xe
	.string	"returns_value"
	.byte	0x5
	.value	0x37a
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0xe
	.string	"returns_null"
	.byte	0x5
	.value	0x37b
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0xe
	.string	"returns_abnormally"
	.byte	0x5
	.value	0x37c
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0xe
	.string	"in_function_try_handler"
	.byte	0x5
	.value	0x37d
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0xe
	.string	"in_base_initializer"
	.byte	0x5
	.value	0x37e
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0xe
	.string	"x_expanding_p"
	.byte	0x5
	.value	0x37f
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x21
	.string	"can_throw"
	.byte	0x5
	.value	0x382
	.long	0x5397
	.byte	0x1
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0xe
	.string	"x_named_label_uses"
	.byte	0x5
	.value	0x384
	.long	0x85b3
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0xe
	.string	"x_named_labels"
	.byte	0x5
	.value	0x385
	.long	0x866c
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x20
	.long	.LASF45
	.byte	0x5
	.value	0x386
	.long	0x7e07
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0xe
	.string	"x_local_names"
	.byte	0x5
	.value	0x387
	.long	0x6cfc
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x20
	.long	.LASF36
	.byte	0x5
	.value	0x389
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0xe
	.string	"unparsed_inlines"
	.byte	0x5
	.value	0x38a
	.long	0x8682
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6236
	.uleb128 0x2
	.string	"hashval_t"
	.byte	0x13
	.byte	0x32
	.long	0x3b1
	.uleb128 0x2
	.string	"htab_hash"
	.byte	0x13
	.byte	0x37
	.long	0x6494
	.uleb128 0x3
	.byte	0x4
	.long	0x649a
	.uleb128 0x18
	.long	0x64aa
	.byte	0x1
	.long	0x6472
	.uleb128 0x16
	.long	0x860
	.byte	0x0
	.uleb128 0x2
	.string	"htab_eq"
	.byte	0x13
	.byte	0x3e
	.long	0x845
	.uleb128 0x2
	.string	"htab_del"
	.byte	0x13
	.byte	0x42
	.long	0x795
	.uleb128 0x2
	.string	"htab_alloc"
	.byte	0x13
	.byte	0x4e
	.long	0x64db
	.uleb128 0x3
	.byte	0x4
	.long	0x64e1
	.uleb128 0x18
	.long	0x64f6
	.byte	0x1
	.long	0x4df
	.uleb128 0x16
	.long	0x412
	.uleb128 0x16
	.long	0x412
	.byte	0x0
	.uleb128 0x2
	.string	"htab_free"
	.byte	0x13
	.byte	0x51
	.long	0x795
	.uleb128 0x4
	.long	0x65d9
	.string	"htab"
	.byte	0x2c
	.byte	0x13
	.byte	0x59
	.uleb128 0x7
	.string	"hash_f"
	.byte	0x13
	.byte	0x5b
	.long	0x6483
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"eq_f"
	.byte	0x13
	.byte	0x5e
	.long	0x64aa
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"del_f"
	.byte	0x13
	.byte	0x61
	.long	0x64b9
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"entries"
	.byte	0x13
	.byte	0x64
	.long	0x78f
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x1d
	.long	.LASF24
	.byte	0x13
	.byte	0x67
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"n_elements"
	.byte	0x13
	.byte	0x6a
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"n_deleted"
	.byte	0x13
	.byte	0x6d
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"searches"
	.byte	0x13
	.byte	0x71
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"collisions"
	.byte	0x13
	.byte	0x75
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"alloc_f"
	.byte	0x13
	.byte	0x78
	.long	0x64c9
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"free_f"
	.byte	0x13
	.byte	0x79
	.long	0x64f6
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.byte	0x0
	.uleb128 0x2
	.string	"htab_t"
	.byte	0x13
	.byte	0x7c
	.long	0x65e7
	.uleb128 0x3
	.byte	0x4
	.long	0x6507
	.uleb128 0x2
	.string	"splay_tree_key"
	.byte	0x12
	.byte	0x2f
	.long	0x447
	.uleb128 0x2
	.string	"splay_tree_value"
	.byte	0x12
	.byte	0x30
	.long	0x447
	.uleb128 0x2
	.string	"splay_tree_node"
	.byte	0x12
	.byte	0x33
	.long	0x6632
	.uleb128 0x3
	.byte	0x4
	.long	0x6638
	.uleb128 0x4
	.long	0x668e
	.string	"splay_tree_node_s"
	.byte	0x10
	.byte	0x12
	.byte	0x33
	.uleb128 0x7
	.string	"key"
	.byte	0x12
	.byte	0x54
	.long	0x65ed
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x1d
	.long	.LASF20
	.byte	0x12
	.byte	0x57
	.long	0x6603
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"left"
	.byte	0x12
	.byte	0x5a
	.long	0x661b
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"right"
	.byte	0x12
	.byte	0x5b
	.long	0x661b
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x2
	.string	"splay_tree_compare_fn"
	.byte	0x12
	.byte	0x37
	.long	0x66ab
	.uleb128 0x3
	.byte	0x4
	.long	0x66b1
	.uleb128 0x18
	.long	0x66c6
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x65ed
	.uleb128 0x16
	.long	0x65ed
	.byte	0x0
	.uleb128 0x2
	.string	"splay_tree_delete_key_fn"
	.byte	0x12
	.byte	0x3b
	.long	0x66e6
	.uleb128 0x3
	.byte	0x4
	.long	0x66ec
	.uleb128 0x15
	.long	0x66f8
	.byte	0x1
	.uleb128 0x16
	.long	0x65ed
	.byte	0x0
	.uleb128 0x2
	.string	"splay_tree_delete_value_fn"
	.byte	0x12
	.byte	0x3f
	.long	0x671a
	.uleb128 0x3
	.byte	0x4
	.long	0x6720
	.uleb128 0x15
	.long	0x672c
	.byte	0x1
	.uleb128 0x16
	.long	0x6603
	.byte	0x0
	.uleb128 0x2
	.string	"splay_tree_allocate_fn"
	.byte	0x12
	.byte	0x48
	.long	0x674a
	.uleb128 0x3
	.byte	0x4
	.long	0x6750
	.uleb128 0x18
	.long	0x6765
	.byte	0x1
	.long	0x4df
	.uleb128 0x16
	.long	0x2d8
	.uleb128 0x16
	.long	0x4df
	.byte	0x0
	.uleb128 0x2
	.string	"splay_tree_deallocate_fn"
	.byte	0x12
	.byte	0x4e
	.long	0x6785
	.uleb128 0x3
	.byte	0x4
	.long	0x678b
	.uleb128 0x15
	.long	0x679c
	.byte	0x1
	.uleb128 0x16
	.long	0x4df
	.uleb128 0x16
	.long	0x4df
	.byte	0x0
	.uleb128 0x4
	.long	0x683c
	.string	"splay_tree_s"
	.byte	0x1c
	.byte	0x12
	.byte	0x60
	.uleb128 0x7
	.string	"root"
	.byte	0x12
	.byte	0x62
	.long	0x661b
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"comp"
	.byte	0x12
	.byte	0x65
	.long	0x668e
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"delete_key"
	.byte	0x12
	.byte	0x68
	.long	0x66c6
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"delete_value"
	.byte	0x12
	.byte	0x6b
	.long	0x66f8
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"allocate"
	.byte	0x12
	.byte	0x6e
	.long	0x672c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"deallocate"
	.byte	0x12
	.byte	0x6f
	.long	0x6765
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"allocate_data"
	.byte	0x12
	.byte	0x70
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.byte	0x0
	.uleb128 0x2
	.string	"splay_tree"
	.byte	0x12
	.byte	0x72
	.long	0x684e
	.uleb128 0x3
	.byte	0x4
	.long	0x679c
	.uleb128 0x4
	.long	0x688a
	.string	"const_equiv_data"
	.byte	0x8
	.byte	0x10
	.byte	0x24
	.uleb128 0x7
	.string	"rtx"
	.byte	0x10
	.byte	0x32
	.long	0xa7
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"age"
	.byte	0x10
	.byte	0x36
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x1b
	.long	0x6a25
	.string	"varray_data_enum"
	.byte	0x4
	.byte	0x10
	.byte	0x3c
	.uleb128 0x1c
	.string	"VARRAY_DATA_C"
	.sleb128 0
	.uleb128 0x1c
	.string	"VARRAY_DATA_UC"
	.sleb128 1
	.uleb128 0x1c
	.string	"VARRAY_DATA_S"
	.sleb128 2
	.uleb128 0x1c
	.string	"VARRAY_DATA_US"
	.sleb128 3
	.uleb128 0x1c
	.string	"VARRAY_DATA_I"
	.sleb128 4
	.uleb128 0x1c
	.string	"VARRAY_DATA_U"
	.sleb128 5
	.uleb128 0x1c
	.string	"VARRAY_DATA_L"
	.sleb128 6
	.uleb128 0x1c
	.string	"VARRAY_DATA_UL"
	.sleb128 7
	.uleb128 0x1c
	.string	"VARRAY_DATA_HINT"
	.sleb128 8
	.uleb128 0x1c
	.string	"VARRAY_DATA_UHINT"
	.sleb128 9
	.uleb128 0x1c
	.string	"VARRAY_DATA_GENERIC"
	.sleb128 10
	.uleb128 0x1c
	.string	"VARRAY_DATA_CPTR"
	.sleb128 11
	.uleb128 0x1c
	.string	"VARRAY_DATA_RTX"
	.sleb128 12
	.uleb128 0x1c
	.string	"VARRAY_DATA_RTVEC"
	.sleb128 13
	.uleb128 0x1c
	.string	"VARRAY_DATA_TREE"
	.sleb128 14
	.uleb128 0x1c
	.string	"VARRAY_DATA_BITMAP"
	.sleb128 15
	.uleb128 0x1c
	.string	"VARRAY_DATA_REG"
	.sleb128 16
	.uleb128 0x1c
	.string	"VARRAY_DATA_CONST_EQUIV"
	.sleb128 17
	.uleb128 0x1c
	.string	"VARRAY_DATA_BB"
	.sleb128 18
	.uleb128 0x1c
	.string	"VARRAY_DATA_TE"
	.sleb128 19
	.uleb128 0x1c
	.string	"NUM_VARRAY_DATA"
	.sleb128 20
	.byte	0x0
	.uleb128 0x8
	.long	0x6b21
	.string	"varray_data_tag"
	.byte	0x8
	.byte	0x10
	.byte	0x55
	.uleb128 0x28
	.string	"c"
	.byte	0x10
	.byte	0x56
	.long	0x804
	.uleb128 0x28
	.string	"uc"
	.byte	0x10
	.byte	0x58
	.long	0x6b21
	.uleb128 0x28
	.string	"s"
	.byte	0x10
	.byte	0x5a
	.long	0x6b31
	.uleb128 0x28
	.string	"us"
	.byte	0x10
	.byte	0x5c
	.long	0x6b41
	.uleb128 0x28
	.string	"i"
	.byte	0x10
	.byte	0x5e
	.long	0x6b51
	.uleb128 0x28
	.string	"u"
	.byte	0x10
	.byte	0x60
	.long	0x6b61
	.uleb128 0x28
	.string	"l"
	.byte	0x10
	.byte	0x62
	.long	0x6b71
	.uleb128 0x28
	.string	"ul"
	.byte	0x10
	.byte	0x64
	.long	0x6b81
	.uleb128 0x28
	.string	"hint"
	.byte	0x10
	.byte	0x66
	.long	0x6b91
	.uleb128 0x28
	.string	"uhint"
	.byte	0x10
	.byte	0x68
	.long	0x6ba1
	.uleb128 0x28
	.string	"generic"
	.byte	0x10
	.byte	0x6a
	.long	0x6bb1
	.uleb128 0x28
	.string	"cptr"
	.byte	0x10
	.byte	0x6c
	.long	0x6bc1
	.uleb128 0x28
	.string	"rtx"
	.byte	0x10
	.byte	0x6e
	.long	0x6bd1
	.uleb128 0x28
	.string	"rtvec"
	.byte	0x10
	.byte	0x70
	.long	0x6be1
	.uleb128 0x28
	.string	"tree"
	.byte	0x10
	.byte	0x72
	.long	0x6bf1
	.uleb128 0x28
	.string	"bitmap"
	.byte	0x10
	.byte	0x74
	.long	0x6c01
	.uleb128 0x28
	.string	"reg"
	.byte	0x10
	.byte	0x76
	.long	0x6c11
	.uleb128 0x28
	.string	"const_equiv"
	.byte	0x10
	.byte	0x78
	.long	0x6c36
	.uleb128 0x28
	.string	"bb"
	.byte	0x10
	.byte	0x7a
	.long	0x6c46
	.uleb128 0x28
	.string	"te"
	.byte	0x10
	.byte	0x7c
	.long	0x6c56
	.byte	0x0
	.uleb128 0x10
	.long	0x6b31
	.long	0x420
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6b41
	.long	0x46b
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6b51
	.long	0x431
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6b61
	.long	0x2d8
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6b71
	.long	0x3b1
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6b81
	.long	0x4c2
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6b91
	.long	0x447
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6ba1
	.long	0x478
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6bb1
	.long	0x489
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6bc1
	.long	0x4df
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6bd1
	.long	0x4e1
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6be1
	.long	0xa7
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6bf1
	.long	0x1a9
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6c01
	.long	0x1f0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6c11
	.long	0x5e01
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6c21
	.long	0x6c30
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x1e
	.string	"reg_info_def"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6c21
	.uleb128 0x10
	.long	0x6c46
	.long	0x6854
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6c56
	.long	0x5e19
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.long	0x6c66
	.long	0x6c71
	.uleb128 0x11
	.long	0x3c8
	.byte	0x0
	.byte	0x0
	.uleb128 0x1e
	.string	"elt_list"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x6c66
	.uleb128 0x2
	.string	"varray_data"
	.byte	0x10
	.byte	0x7e
	.long	0x6a25
	.uleb128 0x4
	.long	0x6cfc
	.string	"varray_head_tag"
	.byte	0x18
	.byte	0x10
	.byte	0x81
	.uleb128 0x7
	.string	"num_elements"
	.byte	0x10
	.byte	0x82
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"elements_used"
	.byte	0x10
	.byte	0x83
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x1d
	.long	.LASF4
	.byte	0x10
	.byte	0x85
	.long	0x688a
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x1d
	.long	.LASF31
	.byte	0x10
	.byte	0x86
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x1d
	.long	.LASF46
	.byte	0x10
	.byte	0x87
	.long	0x6c77
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x2
	.string	"varray_type"
	.byte	0x10
	.byte	0x8a
	.long	0x6d0f
	.uleb128 0x3
	.byte	0x4
	.long	0x6c8a
	.uleb128 0x14
	.long	0x6da7
	.long	.LASF47
	.byte	0x18
	.byte	0x16
	.byte	0x2e
	.uleb128 0xe
	.string	"ident"
	.byte	0x16
	.value	0x1e6
	.long	0x37ef
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"arg_index"
	.byte	0x16
	.value	0x1e7
	.long	0x431
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"directive_index"
	.byte	0x16
	.value	0x1e8
	.long	0x420
	.byte	0x2
	.byte	0x23
	.uleb128 0xe
	.uleb128 0xe
	.string	"rid_code"
	.byte	0x16
	.value	0x1e9
	.long	0x420
	.byte	0x2
	.byte	0x23
	.uleb128 0xf
	.uleb128 0x22
	.long	.LASF4
	.byte	0x16
	.value	0x1ea
	.long	0x715f
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x20
	.long	.LASF48
	.byte	0x16
	.value	0x1eb
	.long	0x420
	.byte	0x2
	.byte	0x23
	.uleb128 0x11
	.uleb128 0x20
	.long	.LASF20
	.byte	0x16
	.value	0x1f7
	.long	0x7212
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x27
	.long	.LASF49
	.byte	0x16
	.byte	0x2f
	.long	0x6db2
	.uleb128 0x2a
	.long	.LASF49
	.byte	0x1
	.uleb128 0x1b
	.long	0x715f
	.string	"cpp_ttype"
	.byte	0x4
	.byte	0x16
	.byte	0x97
	.uleb128 0x1c
	.string	"CPP_EQ"
	.sleb128 0
	.uleb128 0x1c
	.string	"CPP_NOT"
	.sleb128 1
	.uleb128 0x1c
	.string	"CPP_GREATER"
	.sleb128 2
	.uleb128 0x1c
	.string	"CPP_LESS"
	.sleb128 3
	.uleb128 0x1c
	.string	"CPP_PLUS"
	.sleb128 4
	.uleb128 0x1c
	.string	"CPP_MINUS"
	.sleb128 5
	.uleb128 0x1c
	.string	"CPP_MULT"
	.sleb128 6
	.uleb128 0x1c
	.string	"CPP_DIV"
	.sleb128 7
	.uleb128 0x1c
	.string	"CPP_MOD"
	.sleb128 8
	.uleb128 0x1c
	.string	"CPP_AND"
	.sleb128 9
	.uleb128 0x1c
	.string	"CPP_OR"
	.sleb128 10
	.uleb128 0x1c
	.string	"CPP_XOR"
	.sleb128 11
	.uleb128 0x1c
	.string	"CPP_RSHIFT"
	.sleb128 12
	.uleb128 0x1c
	.string	"CPP_LSHIFT"
	.sleb128 13
	.uleb128 0x1c
	.string	"CPP_MIN"
	.sleb128 14
	.uleb128 0x1c
	.string	"CPP_MAX"
	.sleb128 15
	.uleb128 0x1c
	.string	"CPP_COMPL"
	.sleb128 16
	.uleb128 0x1c
	.string	"CPP_AND_AND"
	.sleb128 17
	.uleb128 0x1c
	.string	"CPP_OR_OR"
	.sleb128 18
	.uleb128 0x1c
	.string	"CPP_QUERY"
	.sleb128 19
	.uleb128 0x1c
	.string	"CPP_COLON"
	.sleb128 20
	.uleb128 0x1c
	.string	"CPP_COMMA"
	.sleb128 21
	.uleb128 0x1c
	.string	"CPP_OPEN_PAREN"
	.sleb128 22
	.uleb128 0x1c
	.string	"CPP_CLOSE_PAREN"
	.sleb128 23
	.uleb128 0x1c
	.string	"CPP_EOF"
	.sleb128 24
	.uleb128 0x1c
	.string	"CPP_EQ_EQ"
	.sleb128 25
	.uleb128 0x1c
	.string	"CPP_NOT_EQ"
	.sleb128 26
	.uleb128 0x1c
	.string	"CPP_GREATER_EQ"
	.sleb128 27
	.uleb128 0x1c
	.string	"CPP_LESS_EQ"
	.sleb128 28
	.uleb128 0x1c
	.string	"CPP_PLUS_EQ"
	.sleb128 29
	.uleb128 0x1c
	.string	"CPP_MINUS_EQ"
	.sleb128 30
	.uleb128 0x1c
	.string	"CPP_MULT_EQ"
	.sleb128 31
	.uleb128 0x1c
	.string	"CPP_DIV_EQ"
	.sleb128 32
	.uleb128 0x1c
	.string	"CPP_MOD_EQ"
	.sleb128 33
	.uleb128 0x1c
	.string	"CPP_AND_EQ"
	.sleb128 34
	.uleb128 0x1c
	.string	"CPP_OR_EQ"
	.sleb128 35
	.uleb128 0x1c
	.string	"CPP_XOR_EQ"
	.sleb128 36
	.uleb128 0x1c
	.string	"CPP_RSHIFT_EQ"
	.sleb128 37
	.uleb128 0x1c
	.string	"CPP_LSHIFT_EQ"
	.sleb128 38
	.uleb128 0x1c
	.string	"CPP_MIN_EQ"
	.sleb128 39
	.uleb128 0x1c
	.string	"CPP_MAX_EQ"
	.sleb128 40
	.uleb128 0x1c
	.string	"CPP_HASH"
	.sleb128 41
	.uleb128 0x1c
	.string	"CPP_PASTE"
	.sleb128 42
	.uleb128 0x1c
	.string	"CPP_OPEN_SQUARE"
	.sleb128 43
	.uleb128 0x1c
	.string	"CPP_CLOSE_SQUARE"
	.sleb128 44
	.uleb128 0x1c
	.string	"CPP_OPEN_BRACE"
	.sleb128 45
	.uleb128 0x1c
	.string	"CPP_CLOSE_BRACE"
	.sleb128 46
	.uleb128 0x1c
	.string	"CPP_SEMICOLON"
	.sleb128 47
	.uleb128 0x1c
	.string	"CPP_ELLIPSIS"
	.sleb128 48
	.uleb128 0x1c
	.string	"CPP_PLUS_PLUS"
	.sleb128 49
	.uleb128 0x1c
	.string	"CPP_MINUS_MINUS"
	.sleb128 50
	.uleb128 0x1c
	.string	"CPP_DEREF"
	.sleb128 51
	.uleb128 0x1c
	.string	"CPP_DOT"
	.sleb128 52
	.uleb128 0x1c
	.string	"CPP_SCOPE"
	.sleb128 53
	.uleb128 0x1c
	.string	"CPP_DEREF_STAR"
	.sleb128 54
	.uleb128 0x1c
	.string	"CPP_DOT_STAR"
	.sleb128 55
	.uleb128 0x1c
	.string	"CPP_ATSIGN"
	.sleb128 56
	.uleb128 0x1c
	.string	"CPP_NAME"
	.sleb128 57
	.uleb128 0x1c
	.string	"CPP_NUMBER"
	.sleb128 58
	.uleb128 0x1c
	.string	"CPP_CHAR"
	.sleb128 59
	.uleb128 0x1c
	.string	"CPP_WCHAR"
	.sleb128 60
	.uleb128 0x1c
	.string	"CPP_OTHER"
	.sleb128 61
	.uleb128 0x1c
	.string	"CPP_STRING"
	.sleb128 62
	.uleb128 0x1c
	.string	"CPP_WSTRING"
	.sleb128 63
	.uleb128 0x1c
	.string	"CPP_HEADER_NAME"
	.sleb128 64
	.uleb128 0x1c
	.string	"CPP_COMMENT"
	.sleb128 65
	.uleb128 0x1c
	.string	"CPP_MACRO_ARG"
	.sleb128 66
	.uleb128 0x1c
	.string	"CPP_PADDING"
	.sleb128 67
	.uleb128 0x1c
	.string	"N_TTYPES"
	.sleb128 68
	.byte	0x0
	.uleb128 0x2b
	.long	0x7197
	.string	"node_type"
	.byte	0x4
	.byte	0x16
	.value	0x1c8
	.uleb128 0x1c
	.string	"NT_VOID"
	.sleb128 0
	.uleb128 0x1c
	.string	"NT_MACRO"
	.sleb128 1
	.uleb128 0x1c
	.string	"NT_ASSERTION"
	.sleb128 2
	.byte	0x0
	.uleb128 0x2b
	.long	0x7212
	.string	"builtin_type"
	.byte	0x4
	.byte	0x16
	.value	0x1d1
	.uleb128 0x1c
	.string	"BT_SPECLINE"
	.sleb128 0
	.uleb128 0x1c
	.string	"BT_DATE"
	.sleb128 1
	.uleb128 0x1c
	.string	"BT_FILE"
	.sleb128 2
	.uleb128 0x1c
	.string	"BT_BASE_FILE"
	.sleb128 3
	.uleb128 0x1c
	.string	"BT_INCLUDE_LEVEL"
	.sleb128 4
	.uleb128 0x1c
	.string	"BT_TIME"
	.sleb128 5
	.uleb128 0x1c
	.string	"BT_STDC"
	.sleb128 6
	.uleb128 0x1c
	.string	"BT_PRAGMA"
	.sleb128 7
	.byte	0x0
	.uleb128 0x25
	.long	0x7256
	.byte	0x4
	.byte	0x16
	.value	0x1ee
	.uleb128 0xa
	.string	"macro"
	.byte	0x16
	.value	0x1ef
	.long	0x7256
	.uleb128 0xa
	.string	"answers"
	.byte	0x16
	.value	0x1f0
	.long	0x7265
	.uleb128 0x9
	.long	.LASF50
	.byte	0x16
	.value	0x1f2
	.long	0x6db8
	.uleb128 0xa
	.string	"builtin"
	.byte	0x16
	.value	0x1f6
	.long	0x7197
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x6da7
	.uleb128 0x1e
	.string	"answer"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x725c
	.uleb128 0x1b
	.long	0x78ef
	.string	"rid"
	.byte	0x4
	.byte	0xe
	.byte	0x3b
	.uleb128 0x1c
	.string	"RID_STATIC"
	.sleb128 0
	.uleb128 0x1c
	.string	"RID_UNSIGNED"
	.sleb128 1
	.uleb128 0x1c
	.string	"RID_LONG"
	.sleb128 2
	.uleb128 0x1c
	.string	"RID_CONST"
	.sleb128 3
	.uleb128 0x1c
	.string	"RID_EXTERN"
	.sleb128 4
	.uleb128 0x1c
	.string	"RID_REGISTER"
	.sleb128 5
	.uleb128 0x1c
	.string	"RID_TYPEDEF"
	.sleb128 6
	.uleb128 0x1c
	.string	"RID_SHORT"
	.sleb128 7
	.uleb128 0x1c
	.string	"RID_INLINE"
	.sleb128 8
	.uleb128 0x1c
	.string	"RID_VOLATILE"
	.sleb128 9
	.uleb128 0x1c
	.string	"RID_SIGNED"
	.sleb128 10
	.uleb128 0x1c
	.string	"RID_AUTO"
	.sleb128 11
	.uleb128 0x1c
	.string	"RID_RESTRICT"
	.sleb128 12
	.uleb128 0x1c
	.string	"RID_SBUF"
	.sleb128 13
	.uleb128 0x1c
	.string	"RID_V1BUF"
	.sleb128 14
	.uleb128 0x1c
	.string	"RID_V2BUF"
	.sleb128 15
	.uleb128 0x1c
	.string	"RID_V4BUF"
	.sleb128 16
	.uleb128 0x1c
	.string	"RID_BOUNDED"
	.sleb128 17
	.uleb128 0x1c
	.string	"RID_UNBOUNDED"
	.sleb128 18
	.uleb128 0x1c
	.string	"RID_COMPLEX"
	.sleb128 19
	.uleb128 0x1c
	.string	"RID_THREAD"
	.sleb128 20
	.uleb128 0x1c
	.string	"RID_FRIEND"
	.sleb128 21
	.uleb128 0x1c
	.string	"RID_VIRTUAL"
	.sleb128 22
	.uleb128 0x1c
	.string	"RID_EXPLICIT"
	.sleb128 23
	.uleb128 0x1c
	.string	"RID_EXPORT"
	.sleb128 24
	.uleb128 0x1c
	.string	"RID_MUTABLE"
	.sleb128 25
	.uleb128 0x1c
	.string	"RID_IN"
	.sleb128 26
	.uleb128 0x1c
	.string	"RID_OUT"
	.sleb128 27
	.uleb128 0x1c
	.string	"RID_INOUT"
	.sleb128 28
	.uleb128 0x1c
	.string	"RID_BYCOPY"
	.sleb128 29
	.uleb128 0x1c
	.string	"RID_BYREF"
	.sleb128 30
	.uleb128 0x1c
	.string	"RID_ONEWAY"
	.sleb128 31
	.uleb128 0x1c
	.string	"RID_INT"
	.sleb128 32
	.uleb128 0x1c
	.string	"RID_CHAR"
	.sleb128 33
	.uleb128 0x1c
	.string	"RID_FLOAT"
	.sleb128 34
	.uleb128 0x1c
	.string	"RID_DOUBLE"
	.sleb128 35
	.uleb128 0x1c
	.string	"RID_VOID"
	.sleb128 36
	.uleb128 0x1c
	.string	"RID_ENUM"
	.sleb128 37
	.uleb128 0x1c
	.string	"RID_STRUCT"
	.sleb128 38
	.uleb128 0x1c
	.string	"RID_UNION"
	.sleb128 39
	.uleb128 0x1c
	.string	"RID_IF"
	.sleb128 40
	.uleb128 0x1c
	.string	"RID_ELSE"
	.sleb128 41
	.uleb128 0x1c
	.string	"RID_WHILE"
	.sleb128 42
	.uleb128 0x1c
	.string	"RID_DO"
	.sleb128 43
	.uleb128 0x1c
	.string	"RID_FOR"
	.sleb128 44
	.uleb128 0x1c
	.string	"RID_SWITCH"
	.sleb128 45
	.uleb128 0x1c
	.string	"RID_CASE"
	.sleb128 46
	.uleb128 0x1c
	.string	"RID_DEFAULT"
	.sleb128 47
	.uleb128 0x1c
	.string	"RID_BREAK"
	.sleb128 48
	.uleb128 0x1c
	.string	"RID_CONTINUE"
	.sleb128 49
	.uleb128 0x1c
	.string	"RID_RETURN"
	.sleb128 50
	.uleb128 0x1c
	.string	"RID_GOTO"
	.sleb128 51
	.uleb128 0x1c
	.string	"RID_SIZEOF"
	.sleb128 52
	.uleb128 0x1c
	.string	"RID_ASM"
	.sleb128 53
	.uleb128 0x1c
	.string	"RID_TYPEOF"
	.sleb128 54
	.uleb128 0x1c
	.string	"RID_ALIGNOF"
	.sleb128 55
	.uleb128 0x1c
	.string	"RID_ATTRIBUTE"
	.sleb128 56
	.uleb128 0x1c
	.string	"RID_VA_ARG"
	.sleb128 57
	.uleb128 0x1c
	.string	"RID_EXTENSION"
	.sleb128 58
	.uleb128 0x1c
	.string	"RID_IMAGPART"
	.sleb128 59
	.uleb128 0x1c
	.string	"RID_REALPART"
	.sleb128 60
	.uleb128 0x1c
	.string	"RID_LABEL"
	.sleb128 61
	.uleb128 0x1c
	.string	"RID_PTRBASE"
	.sleb128 62
	.uleb128 0x1c
	.string	"RID_PTREXTENT"
	.sleb128 63
	.uleb128 0x1c
	.string	"RID_PTRVALUE"
	.sleb128 64
	.uleb128 0x1c
	.string	"RID_CHOOSE_EXPR"
	.sleb128 65
	.uleb128 0x1c
	.string	"RID_TYPES_COMPATIBLE_P"
	.sleb128 66
	.uleb128 0x1c
	.string	"RID_FUNCTION_NAME"
	.sleb128 67
	.uleb128 0x1c
	.string	"RID_PRETTY_FUNCTION_NAME"
	.sleb128 68
	.uleb128 0x1c
	.string	"RID_C99_FUNCTION_NAME"
	.sleb128 69
	.uleb128 0x1c
	.string	"RID_BOOL"
	.sleb128 70
	.uleb128 0x1c
	.string	"RID_WCHAR"
	.sleb128 71
	.uleb128 0x1c
	.string	"RID_CLASS"
	.sleb128 72
	.uleb128 0x1c
	.string	"RID_PUBLIC"
	.sleb128 73
	.uleb128 0x1c
	.string	"RID_PRIVATE"
	.sleb128 74
	.uleb128 0x1c
	.string	"RID_PROTECTED"
	.sleb128 75
	.uleb128 0x1c
	.string	"RID_TEMPLATE"
	.sleb128 76
	.uleb128 0x1c
	.string	"RID_NULL"
	.sleb128 77
	.uleb128 0x1c
	.string	"RID_CATCH"
	.sleb128 78
	.uleb128 0x1c
	.string	"RID_DELETE"
	.sleb128 79
	.uleb128 0x1c
	.string	"RID_FALSE"
	.sleb128 80
	.uleb128 0x1c
	.string	"RID_NAMESPACE"
	.sleb128 81
	.uleb128 0x1c
	.string	"RID_NEW"
	.sleb128 82
	.uleb128 0x1c
	.string	"RID_OFFSETOF"
	.sleb128 83
	.uleb128 0x1c
	.string	"RID_OPERATOR"
	.sleb128 84
	.uleb128 0x1c
	.string	"RID_THIS"
	.sleb128 85
	.uleb128 0x1c
	.string	"RID_THROW"
	.sleb128 86
	.uleb128 0x1c
	.string	"RID_TRUE"
	.sleb128 87
	.uleb128 0x1c
	.string	"RID_TRY"
	.sleb128 88
	.uleb128 0x1c
	.string	"RID_TYPENAME"
	.sleb128 89
	.uleb128 0x1c
	.string	"RID_TYPEID"
	.sleb128 90
	.uleb128 0x1c
	.string	"RID_USING"
	.sleb128 91
	.uleb128 0x1c
	.string	"RID_CONSTCAST"
	.sleb128 92
	.uleb128 0x1c
	.string	"RID_DYNCAST"
	.sleb128 93
	.uleb128 0x1c
	.string	"RID_REINTCAST"
	.sleb128 94
	.uleb128 0x1c
	.string	"RID_STATCAST"
	.sleb128 95
	.uleb128 0x1c
	.string	"RID_ID"
	.sleb128 96
	.uleb128 0x1c
	.string	"RID_AT_ENCODE"
	.sleb128 97
	.uleb128 0x1c
	.string	"RID_AT_END"
	.sleb128 98
	.uleb128 0x1c
	.string	"RID_AT_CLASS"
	.sleb128 99
	.uleb128 0x1c
	.string	"RID_AT_ALIAS"
	.sleb128 100
	.uleb128 0x1c
	.string	"RID_AT_DEFS"
	.sleb128 101
	.uleb128 0x1c
	.string	"RID_AT_PRIVATE"
	.sleb128 102
	.uleb128 0x1c
	.string	"RID_AT_PROTECTED"
	.sleb128 103
	.uleb128 0x1c
	.string	"RID_AT_PUBLIC"
	.sleb128 104
	.uleb128 0x1c
	.string	"RID_AT_PROTOCOL"
	.sleb128 105
	.uleb128 0x1c
	.string	"RID_AT_SELECTOR"
	.sleb128 106
	.uleb128 0x1c
	.string	"RID_AT_INTERFACE"
	.sleb128 107
	.uleb128 0x1c
	.string	"RID_AT_IMPLEMENTATION"
	.sleb128 108
	.uleb128 0x1c
	.string	"RID_MAX"
	.sleb128 109
	.uleb128 0x1c
	.string	"RID_FIRST_MODIFIER"
	.sleb128 0
	.uleb128 0x1c
	.string	"RID_LAST_MODIFIER"
	.sleb128 31
	.uleb128 0x1c
	.string	"RID_FIRST_AT"
	.sleb128 97
	.uleb128 0x1c
	.string	"RID_LAST_AT"
	.sleb128 108
	.uleb128 0x1c
	.string	"RID_FIRST_PQ"
	.sleb128 26
	.uleb128 0x1c
	.string	"RID_LAST_PQ"
	.sleb128 31
	.byte	0x0
	.uleb128 0x4
	.long	0x7929
	.string	"c_common_identifier"
	.byte	0x28
	.byte	0xe
	.byte	0xc0
	.uleb128 0x1d
	.long	.LASF1
	.byte	0xe
	.byte	0xc1
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"node"
	.byte	0xe
	.byte	0xc2
	.long	0x6d15
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0xd
	.long	0x79b4
	.string	"stmt_tree_s"
	.byte	0x10
	.byte	0xe
	.value	0x101
	.uleb128 0xe
	.string	"x_last_stmt"
	.byte	0xe
	.value	0x103
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"x_last_expr_type"
	.byte	0xe
	.value	0x106
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"x_last_expr_filename"
	.byte	0xe
	.value	0x108
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"stmts_are_full_exprs_p"
	.byte	0xe
	.value	0x117
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0xd
	.long	0x79ff
	.string	"c_language_function"
	.byte	0x14
	.byte	0xe
	.value	0x11f
	.uleb128 0x20
	.long	.LASF51
	.byte	0xe
	.value	0x122
	.long	0x7929
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"x_scope_stmt_stack"
	.byte	0xe
	.value	0x124
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0xd
	.long	0x7a33
	.string	"c_lang_decl"
	.byte	0x4
	.byte	0xe
	.value	0x169
	.uleb128 0x21
	.string	"declared_inline"
	.byte	0xe
	.value	0x16a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.byte	0x0
	.uleb128 0x27
	.long	.LASF52
	.byte	0x5
	.byte	0xe4
	.long	0x7a3e
	.uleb128 0x14
	.long	0x7aa2
	.long	.LASF52
	.byte	0x14
	.byte	0x5
	.byte	0xe4
	.uleb128 0x20
	.long	.LASF53
	.byte	0x1
	.value	0xa4a
	.long	0x851e
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF2
	.byte	0x1
	.value	0xa4c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x20
	.long	.LASF54
	.byte	0x1
	.value	0xa4e
	.long	0x7e0d
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x20
	.long	.LASF55
	.byte	0x1
	.value	0xa4f
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"real_type_value"
	.byte	0x1
	.value	0xa50
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x27
	.long	.LASF56
	.byte	0x5
	.byte	0xe8
	.long	0x7aad
	.uleb128 0x14
	.long	0x7b3f
	.long	.LASF56
	.byte	0x14
	.byte	0x5
	.byte	0xe8
	.uleb128 0x1d
	.long	.LASF53
	.byte	0x5
	.byte	0xf3
	.long	0x7e0d
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x1d
	.long	.LASF20
	.byte	0x5
	.byte	0xf5
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x1d
	.long	.LASF4
	.byte	0x5
	.byte	0xf7
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x1d
	.long	.LASF57
	.byte	0x5
	.byte	0xfb
	.long	0x7b3f
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x6
	.string	"has_level"
	.byte	0x5
	.byte	0xfc
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x6
	.string	"value_is_inherited"
	.byte	0x5
	.byte	0xfd
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x6
	.string	"is_local"
	.byte	0x5
	.byte	0xfe
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x8
	.long	0x7b6d
	.string	"tree_binding_u"
	.byte	0x4
	.byte	0x5
	.byte	0xf8
	.uleb128 0x2c
	.long	.LASF57
	.byte	0x5
	.byte	0xf9
	.long	0x1e4
	.uleb128 0x2c
	.long	.LASF58
	.byte	0x5
	.byte	0xfa
	.long	0x7e07
	.byte	0x0
	.uleb128 0x4
	.long	0x7e07
	.string	"cp_binding_level"
	.byte	0x44
	.byte	0x5
	.byte	0xfa
	.uleb128 0xe
	.string	"names"
	.byte	0x1
	.value	0x240
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"names_size"
	.byte	0x1
	.value	0x243
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"namespaces"
	.byte	0x1
	.value	0x246
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"static_decls"
	.byte	0x1
	.value	0x249
	.long	0x6cfc
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"vtables"
	.byte	0x1
	.value	0x24c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"type_decls"
	.byte	0x1
	.value	0x24f
	.long	0x7e13
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xe
	.string	"usings"
	.byte	0x1
	.value	0x252
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"using_directives"
	.byte	0x1
	.value	0x256
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"class_shadowed"
	.byte	0x1
	.value	0x25c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0xe
	.string	"type_shadowed"
	.byte	0x1
	.value	0x261
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0xe
	.string	"shadowed_labels"
	.byte	0x1
	.value	0x266
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0xe
	.string	"blocks"
	.byte	0x1
	.value	0x26b
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0xe
	.string	"this_class"
	.byte	0x1
	.value	0x26e
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x20
	.long	.LASF59
	.byte	0x1
	.value	0x271
	.long	0x7e07
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0xe
	.string	"dead_vars_from_for"
	.byte	0x1
	.value	0x277
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x21
	.string	"parm_flag"
	.byte	0x1
	.value	0x27b
	.long	0x3b1
	.byte	0x4
	.byte	0x2
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"keep"
	.byte	0x1
	.value	0x27f
	.long	0x3b1
	.byte	0x4
	.byte	0x2
	.byte	0x1c
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x22
	.long	.LASF60
	.byte	0x1
	.value	0x282
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"more_cleanups_ok"
	.byte	0x1
	.value	0x286
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1a
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"have_cleanups"
	.byte	0x1
	.value	0x287
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x19
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"template_parms_p"
	.byte	0x1
	.value	0x28c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"template_spec_p"
	.byte	0x1
	.value	0x291
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"namespace_p"
	.byte	0x1
	.value	0x294
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"is_for_scope"
	.byte	0x1
	.value	0x298
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"is_try_scope"
	.byte	0x1
	.value	0x29c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x21
	.string	"is_catch_scope"
	.byte	0x1
	.value	0x2a0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x20
	.long	.LASF61
	.byte	0x1
	.value	0x2a5
	.long	0x3b1
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7b6d
	.uleb128 0x3
	.byte	0x4
	.long	0x7aa2
	.uleb128 0x12
	.string	"binding_table"
	.byte	0x5
	.value	0x103
	.long	0x7e29
	.uleb128 0x3
	.byte	0x4
	.long	0x7e2f
	.uleb128 0xd
	.long	0x7e7e
	.string	"binding_table_s"
	.byte	0xc
	.byte	0x5
	.value	0x103
	.uleb128 0x20
	.long	.LASF9
	.byte	0x1
	.value	0x159
	.long	0xa9bb
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF62
	.byte	0x1
	.value	0x15d
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"entry_count"
	.byte	0x1
	.value	0x160
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x12
	.string	"binding_entry"
	.byte	0x5
	.value	0x104
	.long	0x7e94
	.uleb128 0x3
	.byte	0x4
	.long	0x7e9a
	.uleb128 0xd
	.long	0x7ee1
	.string	"binding_entry_s"
	.byte	0xc
	.byte	0x5
	.value	0x104
	.uleb128 0x20
	.long	.LASF9
	.byte	0x5
	.value	0x10b
	.long	0x7e7e
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF31
	.byte	0x5
	.value	0x10c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x20
	.long	.LASF4
	.byte	0x5
	.value	0x10d
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x12
	.string	"bt_foreach_proc"
	.byte	0x5
	.value	0x107
	.long	0x7ef9
	.uleb128 0x3
	.byte	0x4
	.long	0x7eff
	.uleb128 0x15
	.long	0x7f10
	.byte	0x1
	.uleb128 0x16
	.long	0x7e7e
	.uleb128 0x16
	.long	0x4df
	.byte	0x0
	.uleb128 0xd
	.long	0x7fa6
	.string	"lang_identifier"
	.byte	0x3c
	.byte	0x5
	.value	0x117
	.uleb128 0xe
	.string	"c_common"
	.byte	0x5
	.value	0x118
	.long	0x78ef
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"namespace_bindings"
	.byte	0x5
	.value	0x119
	.long	0x7e0d
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x20
	.long	.LASF45
	.byte	0x5
	.value	0x11a
	.long	0x7e0d
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x20
	.long	.LASF55
	.byte	0x5
	.value	0x11b
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0xe
	.string	"class_template_info"
	.byte	0x5
	.value	0x11c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0xe
	.string	"x"
	.byte	0x5
	.value	0x11d
	.long	0x8000
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.byte	0x0
	.uleb128 0xd
	.long	0x8000
	.string	"lang_id2"
	.byte	0xc
	.byte	0x5
	.value	0x11d
	.uleb128 0xe
	.string	"label_value"
	.byte	0x5
	.value	0x12e
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"implicit_decl"
	.byte	0x5
	.value	0x12f
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"error_locus"
	.byte	0x5
	.value	0x130
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7fa6
	.uleb128 0xd
	.long	0x807a
	.string	"template_parm_index_s"
	.byte	0x2c
	.byte	0x5
	.value	0x13b
	.uleb128 0x20
	.long	.LASF1
	.byte	0x5
	.value	0x13c
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"index"
	.byte	0x5
	.value	0x13d
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x20
	.long	.LASF58
	.byte	0x5
	.value	0x13e
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"orig_level"
	.byte	0x5
	.value	0x13f
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x20
	.long	.LASF3
	.byte	0x5
	.value	0x140
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.byte	0x0
	.uleb128 0xd
	.long	0x80bf
	.string	"ptrmem_cst"
	.byte	0x18
	.byte	0x5
	.value	0x144
	.uleb128 0x20
	.long	.LASF1
	.byte	0x5
	.value	0x145
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"rtl"
	.byte	0x5
	.value	0x148
	.long	0x9c
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"member"
	.byte	0x5
	.value	0x149
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0xd
	.long	0x80f5
	.string	"tree_overload"
	.byte	0x14
	.byte	0x5
	.value	0x195
	.uleb128 0x20
	.long	.LASF1
	.byte	0x5
	.value	0x196
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF34
	.byte	0x5
	.value	0x197
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0xd
	.long	0x812a
	.string	"tree_wrapper"
	.byte	0x14
	.byte	0x5
	.value	0x1b4
	.uleb128 0x20
	.long	.LASF1
	.byte	0x5
	.value	0x1b5
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"z_c"
	.byte	0x5
	.value	0x1b6
	.long	0x8138
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x1e
	.string	"z_candidate"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x812a
	.uleb128 0xd
	.long	0x8185
	.string	"tree_srcloc"
	.byte	0x18
	.byte	0x5
	.value	0x1bc
	.uleb128 0x20
	.long	.LASF1
	.byte	0x5
	.value	0x1bd
	.long	0x3175
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF63
	.byte	0x5
	.value	0x1be
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"linenum"
	.byte	0x5
	.value	0x1bf
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x2b
	.long	0x823a
	.string	"cp_tree_node_structure_enum"
	.byte	0x4
	.byte	0x5
	.value	0x21b
	.uleb128 0x1c
	.string	"TS_CP_COMMON"
	.sleb128 0
	.uleb128 0x1c
	.string	"TS_CP_GENERIC"
	.sleb128 1
	.uleb128 0x1c
	.string	"TS_CP_IDENTIFIER"
	.sleb128 2
	.uleb128 0x1c
	.string	"TS_CP_TPI"
	.sleb128 3
	.uleb128 0x1c
	.string	"TS_CP_PTRMEM"
	.sleb128 4
	.uleb128 0x1c
	.string	"TS_CP_OVERLOAD"
	.sleb128 5
	.uleb128 0x1c
	.string	"TS_CP_WRAPPER"
	.sleb128 6
	.uleb128 0x1c
	.string	"TS_CP_SRCLOC"
	.sleb128 7
	.uleb128 0x1c
	.string	"LAST_TS_CP_ENUM"
	.sleb128 8
	.byte	0x0
	.uleb128 0x23
	.long	0x82c6
	.string	"lang_tree_node"
	.byte	0xa0
	.byte	0x5
	.value	0x22a
	.uleb128 0x9
	.long	.LASF1
	.byte	0x5
	.value	0x22b
	.long	0x3175
	.uleb128 0xa
	.string	"generic"
	.byte	0x5
	.value	0x22c
	.long	0x1f6
	.uleb128 0xa
	.string	"tpi"
	.byte	0x5
	.value	0x22e
	.long	0x8006
	.uleb128 0xa
	.string	"ptrmem"
	.byte	0x5
	.value	0x22f
	.long	0x807a
	.uleb128 0xa
	.string	"overload"
	.byte	0x5
	.value	0x230
	.long	0x80bf
	.uleb128 0xa
	.string	"wrapper"
	.byte	0x5
	.value	0x231
	.long	0x80f5
	.uleb128 0xa
	.string	"srcloc"
	.byte	0x5
	.value	0x232
	.long	0x813e
	.uleb128 0x9
	.long	.LASF2
	.byte	0x5
	.value	0x233
	.long	0x7f10
	.byte	0x0
	.uleb128 0xd
	.long	0x851e
	.string	"saved_scope"
	.byte	0x6c
	.byte	0x5
	.value	0x316
	.uleb128 0x20
	.long	.LASF64
	.byte	0x5
	.value	0x317
	.long	0x851e
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"old_namespace"
	.byte	0x5
	.value	0x318
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"decl_ns_list"
	.byte	0x5
	.value	0x319
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"class_name"
	.byte	0x5
	.value	0x31a
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x20
	.long	.LASF65
	.byte	0x5
	.value	0x31b
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"access_specifier"
	.byte	0x5
	.value	0x31c
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x20
	.long	.LASF66
	.byte	0x5
	.value	0x31d
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"lang_base"
	.byte	0x5
	.value	0x31e
	.long	0x6cfc
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"lang_name"
	.byte	0x5
	.value	0x31f
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0xe
	.string	"template_parms"
	.byte	0x5
	.value	0x320
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0xe
	.string	"x_previous_class_type"
	.byte	0x5
	.value	0x321
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0xe
	.string	"x_previous_class_values"
	.byte	0x5
	.value	0x322
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0xe
	.string	"x_saved_tree"
	.byte	0x5
	.value	0x323
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0xe
	.string	"lookups"
	.byte	0x5
	.value	0x324
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0xe
	.string	"last_parms"
	.byte	0x5
	.value	0x325
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0xe
	.string	"x_processing_template_decl"
	.byte	0x5
	.value	0x327
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0xe
	.string	"x_processing_specialization"
	.byte	0x5
	.value	0x328
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0xe
	.string	"x_processing_explicit_instantiation"
	.byte	0x5
	.value	0x329
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0xe
	.string	"need_pop_function_context"
	.byte	0x5
	.value	0x32a
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x20
	.long	.LASF51
	.byte	0x5
	.value	0x32c
	.long	0x7929
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0xe
	.string	"class_bindings"
	.byte	0x5
	.value	0x32e
	.long	0x7e07
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x20
	.long	.LASF45
	.byte	0x5
	.value	0x32f
	.long	0x7e07
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0xe
	.string	"prev"
	.byte	0x5
	.value	0x331
	.long	0x8524
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7a33
	.uleb128 0x3
	.byte	0x4
	.long	0x82c6
	.uleb128 0xd
	.long	0x85b3
	.string	"named_label_use_list"
	.byte	0x18
	.byte	0x5
	.value	0x384
	.uleb128 0x1d
	.long	.LASF67
	.byte	0x1
	.byte	0xe4
	.long	0x7e07
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x1d
	.long	.LASF68
	.byte	0x1
	.byte	0xe5
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x1d
	.long	.LASF69
	.byte	0x1
	.byte	0xe6
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"filename_o_goto"
	.byte	0x1
	.byte	0xe7
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"lineno_o_goto"
	.byte	0x1
	.byte	0xe8
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x1d
	.long	.LASF42
	.byte	0x1
	.byte	0xe9
	.long	0x85b3
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x852a
	.uleb128 0xd
	.long	0x866c
	.string	"named_label_list"
	.byte	0x1c
	.byte	0x5
	.value	0x385
	.uleb128 0x20
	.long	.LASF67
	.byte	0x1
	.value	0x105
	.long	0x7e07
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF68
	.byte	0x1
	.value	0x106
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x20
	.long	.LASF70
	.byte	0x1
	.value	0x107
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x20
	.long	.LASF69
	.byte	0x1
	.value	0x108
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"bad_decls"
	.byte	0x1
	.value	0x109
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x20
	.long	.LASF42
	.byte	0x1
	.value	0x10a
	.long	0x866c
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x21
	.string	"in_try_scope"
	.byte	0x1
	.value	0x10b
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x21
	.string	"in_catch_scope"
	.byte	0x1
	.value	0x10c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x85b9
	.uleb128 0x1e
	.string	"unparsed_text"
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x8672
	.uleb128 0x2b
	.long	0x86c2
	.string	"languages"
	.byte	0x4
	.byte	0x5
	.value	0x3f1
	.uleb128 0x1c
	.string	"lang_c"
	.sleb128 0
	.uleb128 0x1c
	.string	"lang_cplusplus"
	.sleb128 1
	.uleb128 0x1c
	.string	"lang_java"
	.sleb128 2
	.byte	0x0
	.uleb128 0xd
	.long	0x87e1
	.string	"lang_type_header"
	.byte	0x4
	.byte	0x5
	.value	0x464
	.uleb128 0x21
	.string	"is_lang_type_class"
	.byte	0x5
	.value	0x465
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"has_type_conversion"
	.byte	0x5
	.value	0x467
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"has_init_ref"
	.byte	0x5
	.value	0x468
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1d
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"has_default_ctor"
	.byte	0x5
	.value	0x469
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1c
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"uses_multiple_inheritance"
	.byte	0x5
	.value	0x46a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"const_needs_init"
	.byte	0x5
	.value	0x46b
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1a
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"ref_needs_init"
	.byte	0x5
	.value	0x46c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x19
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x21
	.string	"has_const_assign_ref"
	.byte	0x5
	.value	0x46d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.byte	0x0
	.uleb128 0xd
	.long	0x8db4
	.string	"lang_type_class"
	.byte	0x4c
	.byte	0x5
	.value	0x47e
	.uleb128 0xe
	.string	"h"
	.byte	0x5
	.value	0x47f
	.long	0x86c2
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF30
	.byte	0x5
	.value	0x481
	.long	0x420
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_mutable"
	.byte	0x5
	.value	0x483
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"com_interface"
	.byte	0x5
	.value	0x484
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"non_pod_class"
	.byte	0x5
	.value	0x485
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"nearly_empty_p"
	.byte	0x5
	.value	0x486
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x22
	.long	.LASF29
	.byte	0x5
	.value	0x487
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_assign_ref"
	.byte	0x5
	.value	0x488
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_new"
	.byte	0x5
	.value	0x489
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_array_new"
	.byte	0x5
	.value	0x48a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"gets_delete"
	.byte	0x5
	.value	0x48c
	.long	0x3b1
	.byte	0x4
	.byte	0x2
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_call_overloaded"
	.byte	0x5
	.value	0x48d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_array_ref_overloaded"
	.byte	0x5
	.value	0x48e
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_arrow_overloaded"
	.byte	0x5
	.value	0x48f
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x22
	.long	.LASF71
	.byte	0x5
	.value	0x490
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x22
	.long	.LASF72
	.byte	0x5
	.value	0x491
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"marks"
	.byte	0x5
	.value	0x493
	.long	0x3b1
	.byte	0x4
	.byte	0x6
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"vec_new_uses_cookie"
	.byte	0x5
	.value	0x494
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"declared_class"
	.byte	0x5
	.value	0x495
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"being_defined"
	.byte	0x5
	.value	0x497
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"redefined"
	.byte	0x5
	.value	0x498
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"debug_requested"
	.byte	0x5
	.value	0x499
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x22
	.long	.LASF73
	.byte	0x5
	.value	0x49a
	.long	0x3b1
	.byte	0x4
	.byte	0x2
	.byte	0x1c
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"got_semicolon"
	.byte	0x5
	.value	0x49b
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1b
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"ptrmemfunc_flag"
	.byte	0x5
	.value	0x49c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1a
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"was_anonymous"
	.byte	0x5
	.value	0x49d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x19
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"has_real_assign_ref"
	.byte	0x5
	.value	0x49f
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"has_const_init_ref"
	.byte	0x5
	.value	0x4a0
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"has_complex_init_ref"
	.byte	0x5
	.value	0x4a1
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"has_complex_assign_ref"
	.byte	0x5
	.value	0x4a2
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"has_abstract_assign_ref"
	.byte	0x5
	.value	0x4a3
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"non_aggregate"
	.byte	0x5
	.value	0x4a4
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"is_partial_instantiation"
	.byte	0x5
	.value	0x4a5
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"java_interface"
	.byte	0x5
	.value	0x4a6
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"anon_aggr"
	.byte	0x5
	.value	0x4a8
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"non_zero_init"
	.byte	0x5
	.value	0x4a9
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"empty_p"
	.byte	0x5
	.value	0x4aa
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xe
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"contains_empty_class_p"
	.byte	0x5
	.value	0x4ab
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"has_implicit_copy_constructor"
	.byte	0x5
	.value	0x4b7
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x21
	.string	"dummy"
	.byte	0x5
	.value	0x4b8
	.long	0x3b1
	.byte	0x4
	.byte	0x4
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"primary_base"
	.byte	0x5
	.value	0x4bd
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"vfields"
	.byte	0x5
	.value	0x4be
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0xe
	.string	"vcall_indices"
	.byte	0x5
	.value	0x4bf
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0xe
	.string	"vtables"
	.byte	0x5
	.value	0x4c0
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0xe
	.string	"typeinfo_var"
	.byte	0x5
	.value	0x4c1
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"vbases"
	.byte	0x5
	.value	0x4c2
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0xe
	.string	"nested_udts"
	.byte	0x5
	.value	0x4c3
	.long	0x7e13
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0xe
	.string	"as_base"
	.byte	0x5
	.value	0x4c4
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0xe
	.string	"pure_virtuals"
	.byte	0x5
	.value	0x4c5
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0xe
	.string	"friend_classes"
	.byte	0x5
	.value	0x4c6
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0xe
	.string	"methods"
	.byte	0x5
	.value	0x4c7
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0xe
	.string	"key_method"
	.byte	0x5
	.value	0x4c8
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0xe
	.string	"decl_list"
	.byte	0x5
	.value	0x4c9
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x20
	.long	.LASF74
	.byte	0x5
	.value	0x4ca
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x20
	.long	.LASF75
	.byte	0x5
	.value	0x4cb
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0xe
	.string	"copy_constructor"
	.byte	0x5
	.value	0x4cf
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.byte	0x0
	.uleb128 0xd
	.long	0x8dee
	.string	"lang_type_ptrmem"
	.byte	0x8
	.byte	0x5
	.value	0x4d4
	.uleb128 0xe
	.string	"h"
	.byte	0x5
	.value	0x4d5
	.long	0x86c2
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"record"
	.byte	0x5
	.value	0x4d6
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x23
	.long	0x8e27
	.string	"lang_type_u"
	.byte	0x4c
	.byte	0x5
	.value	0x4dc
	.uleb128 0xa
	.string	"h"
	.byte	0x5
	.value	0x4dd
	.long	0x86c2
	.uleb128 0xa
	.string	"c"
	.byte	0x5
	.value	0x4de
	.long	0x87e1
	.uleb128 0xa
	.string	"ptrmem"
	.byte	0x5
	.value	0x4df
	.long	0x8db4
	.byte	0x0
	.uleb128 0x23
	.long	0x8e55
	.string	"lang_decl_u"
	.byte	0x4
	.byte	0x5
	.value	0x722
	.uleb128 0x9
	.long	.LASF74
	.byte	0x5
	.value	0x725
	.long	0x1e4
	.uleb128 0x9
	.long	.LASF58
	.byte	0x5
	.value	0x728
	.long	0x7e07
	.byte	0x0
	.uleb128 0x23
	.long	0x8ea6
	.string	"lang_decl_u2"
	.byte	0x4
	.byte	0x5
	.value	0x72b
	.uleb128 0xa
	.string	"access"
	.byte	0x5
	.value	0x72d
	.long	0x1e4
	.uleb128 0xa
	.string	"discriminator"
	.byte	0x5
	.value	0x730
	.long	0x2d8
	.uleb128 0xa
	.string	"vcall_offset"
	.byte	0x5
	.value	0x734
	.long	0x1e4
	.byte	0x0
	.uleb128 0xd
	.long	0x9182
	.string	"lang_decl_flags"
	.byte	0x10
	.byte	0x5
	.value	0x703
	.uleb128 0xe
	.string	"base"
	.byte	0x5
	.value	0x704
	.long	0x79ff
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x22
	.long	.LASF37
	.byte	0x5
	.value	0x706
	.long	0x8688
	.byte	0x4
	.byte	0x8
	.byte	0x18
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"operator_attr"
	.byte	0x5
	.value	0x708
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x17
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"constructor_attr"
	.byte	0x5
	.value	0x709
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x16
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"destructor_attr"
	.byte	0x5
	.value	0x70a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x15
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"friend_attr"
	.byte	0x5
	.value	0x70b
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x14
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"static_function"
	.byte	0x5
	.value	0x70c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x13
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"pure_virtual"
	.byte	0x5
	.value	0x70d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x12
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_in_charge_parm_p"
	.byte	0x5
	.value	0x70e
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x11
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"has_vtt_parm_p"
	.byte	0x5
	.value	0x70f
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x10
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"deferred"
	.byte	0x5
	.value	0x711
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xf
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x22
	.long	.LASF73
	.byte	0x5
	.value	0x712
	.long	0x3b1
	.byte	0x4
	.byte	0x2
	.byte	0xd
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"nonconverting"
	.byte	0x5
	.value	0x713
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xc
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"not_really_extern"
	.byte	0x5
	.value	0x714
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xb
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"needs_final_overrider"
	.byte	0x5
	.value	0x715
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0xa
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"initialized_in_class"
	.byte	0x5
	.value	0x716
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x9
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"assignment_operator_p"
	.byte	0x5
	.value	0x717
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"global_ctor_p"
	.byte	0x5
	.value	0x719
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x7
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"global_dtor_p"
	.byte	0x5
	.value	0x71a
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x6
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"anticipated_p"
	.byte	0x5
	.value	0x71b
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x5
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"template_conv_p"
	.byte	0x5
	.value	0x71c
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"u1sel"
	.byte	0x5
	.value	0x71d
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x3
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"u2sel"
	.byte	0x5
	.value	0x71e
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x2
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"can_be_full"
	.byte	0x5
	.value	0x71f
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x21
	.string	"unused"
	.byte	0x5
	.value	0x720
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x0
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"u"
	.byte	0x5
	.value	0x729
	.long	0x8e27
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"u2"
	.byte	0x5
	.value	0x735
	.long	0x8e55
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x23
	.long	0x91eb
	.string	"lang_decl_u3"
	.byte	0x4
	.byte	0x5
	.value	0x75c
	.uleb128 0xa
	.string	"sorted_fields"
	.byte	0x5
	.value	0x75d
	.long	0x1e4
	.uleb128 0xa
	.string	"pending_inline_info"
	.byte	0x5
	.value	0x75e
	.long	0x8682
	.uleb128 0xa
	.string	"saved_language_function"
	.byte	0x5
	.value	0x760
	.long	0x646c
	.byte	0x0
	.uleb128 0xd
	.long	0x92bc
	.string	"full_lang_decl"
	.byte	0x24
	.byte	0x5
	.value	0x73f
	.uleb128 0x20
	.long	.LASF75
	.byte	0x5
	.value	0x740
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF32
	.byte	0x5
	.value	0x745
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"cloned_function"
	.byte	0x5
	.value	0x748
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"delta"
	.byte	0x5
	.value	0x74c
	.long	0x478
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0xe
	.string	"named_return_object"
	.byte	0x5
	.value	0x751
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x20
	.long	.LASF50
	.byte	0x5
	.value	0x756
	.long	0xafc
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x21
	.string	"u3sel"
	.byte	0x5
	.value	0x758
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1f
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x21
	.string	"pending_inline_p"
	.byte	0x5
	.value	0x759
	.long	0x3b1
	.byte	0x4
	.byte	0x1
	.byte	0x1e
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0xe
	.string	"u"
	.byte	0x5
	.value	0x761
	.long	0x9182
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.byte	0x0
	.uleb128 0x23
	.long	0x92dd
	.string	"lang_decl_u4"
	.byte	0x24
	.byte	0x5
	.value	0x73d
	.uleb128 0xa
	.string	"f"
	.byte	0x5
	.value	0x762
	.long	0x91eb
	.byte	0x0
	.uleb128 0x2b
	.long	0x931e
	.string	"tag_types"
	.byte	0x4
	.byte	0x5
	.value	0xc18
	.uleb128 0x1c
	.string	"record_type"
	.sleb128 0
	.uleb128 0x2d
	.long	.LASF65
	.sleb128 1
	.uleb128 0x1c
	.string	"union_type"
	.sleb128 2
	.uleb128 0x1c
	.string	"enum_type"
	.sleb128 3
	.byte	0x0
	.uleb128 0x29
	.long	0x9353
	.long	.LASF76
	.byte	0x4
	.byte	0x5
	.value	0xc23
	.uleb128 0x1c
	.string	"sk_template_parms"
	.sleb128 0
	.uleb128 0x1c
	.string	"sk_template_spec"
	.sleb128 1
	.byte	0x0
	.uleb128 0x2e
	.long	.LASF76
	.byte	0x5
	.value	0xc28
	.long	0x931e
	.uleb128 0x29
	.long	0x9408
	.long	.LASF77
	.byte	0x4
	.byte	0x5
	.value	0xc2b
	.uleb128 0x1c
	.string	"tsk_none"
	.sleb128 0
	.uleb128 0x1c
	.string	"tsk_invalid_member_spec"
	.sleb128 1
	.uleb128 0x1c
	.string	"tsk_invalid_expl_inst"
	.sleb128 2
	.uleb128 0x1c
	.string	"tsk_excessive_parms"
	.sleb128 3
	.uleb128 0x1c
	.string	"tsk_insufficient_parms"
	.sleb128 4
	.uleb128 0x1c
	.string	"tsk_template"
	.sleb128 5
	.uleb128 0x1c
	.string	"tsk_expl_spec"
	.sleb128 6
	.uleb128 0x1c
	.string	"tsk_expl_inst"
	.sleb128 7
	.byte	0x0
	.uleb128 0x2e
	.long	.LASF77
	.byte	0x5
	.value	0xc3a
	.long	0x935f
	.uleb128 0x29
	.long	0x94dc
	.long	.LASF78
	.byte	0x4
	.byte	0x5
	.value	0xc49
	.uleb128 0x1c
	.string	"sfk_none"
	.sleb128 0
	.uleb128 0x1c
	.string	"sfk_constructor"
	.sleb128 1
	.uleb128 0x1c
	.string	"sfk_copy_constructor"
	.sleb128 2
	.uleb128 0x1c
	.string	"sfk_assignment_operator"
	.sleb128 3
	.uleb128 0x1c
	.string	"sfk_destructor"
	.sleb128 4
	.uleb128 0x1c
	.string	"sfk_complete_destructor"
	.sleb128 5
	.uleb128 0x1c
	.string	"sfk_base_destructor"
	.sleb128 6
	.uleb128 0x1c
	.string	"sfk_deleting_destructor"
	.sleb128 7
	.uleb128 0x1c
	.string	"sfk_conversion"
	.sleb128 8
	.byte	0x0
	.uleb128 0x2e
	.long	.LASF78
	.byte	0x5
	.value	0xc57
	.long	0x9414
	.uleb128 0x29
	.long	0x9572
	.long	.LASF79
	.byte	0x4
	.byte	0x5
	.value	0xc71
	.uleb128 0x1c
	.string	"tf_none"
	.sleb128 0
	.uleb128 0x1c
	.string	"tf_error"
	.sleb128 1
	.uleb128 0x1c
	.string	"tf_warning"
	.sleb128 2
	.uleb128 0x1c
	.string	"tf_no_attributes"
	.sleb128 4
	.uleb128 0x1c
	.string	"tf_ignore_bad_quals"
	.sleb128 8
	.uleb128 0x1c
	.string	"tf_keep_type_decl"
	.sleb128 16
	.uleb128 0x1c
	.string	"tf_ptrmem_ok"
	.sleb128 32
	.uleb128 0x1c
	.string	"tf_parsing"
	.sleb128 64
	.byte	0x0
	.uleb128 0x2e
	.long	.LASF79
	.byte	0x5
	.value	0xc7e
	.long	0x94e8
	.uleb128 0x2b
	.long	0x95ca
	.string	"overload_flags"
	.byte	0x4
	.byte	0x5
	.value	0xd5a
	.uleb128 0x1c
	.string	"NO_SPECIAL"
	.sleb128 0
	.uleb128 0x1c
	.string	"DTOR_FLAG"
	.sleb128 1
	.uleb128 0x1c
	.string	"OP_FLAG"
	.sleb128 2
	.uleb128 0x1c
	.string	"TYPENAME_FLAG"
	.sleb128 3
	.byte	0x0
	.uleb128 0x2f
	.long	0x961f
	.long	.LASF80
	.byte	0x10
	.byte	0x5
	.value	0xe26
	.uleb128 0x20
	.long	.LASF2
	.byte	0x5
	.value	0xe28
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF31
	.byte	0x5
	.value	0xe2a
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"mangled_name"
	.byte	0x5
	.value	0xe2c
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"arity"
	.byte	0x5
	.value	0xe2e
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x2e
	.long	.LASF80
	.byte	0x5
	.value	0xe2f
	.long	0x95ca
	.uleb128 0x12
	.string	"walk_globals_pred"
	.byte	0x5
	.value	0xf28
	.long	0x9645
	.uleb128 0x3
	.byte	0x4
	.long	0x964b
	.uleb128 0x18
	.long	0x9660
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x4df
	.byte	0x0
	.uleb128 0x12
	.string	"walk_globals_fn"
	.byte	0x5
	.value	0xf29
	.long	0x9678
	.uleb128 0x3
	.byte	0x4
	.long	0x967e
	.uleb128 0x18
	.long	0x9693
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x53c4
	.uleb128 0x16
	.long	0x4df
	.byte	0x0
	.uleb128 0x12
	.string	"walk_namespaces_fn"
	.byte	0x5
	.value	0xf30
	.long	0x9645
	.uleb128 0x1f
	.long	0x970c
	.long	.LASF81
	.byte	0x4
	.byte	0x15
	.byte	0x17
	.uleb128 0x1c
	.string	"NORMAL"
	.sleb128 0
	.uleb128 0x1c
	.string	"FUNCDEF"
	.sleb128 1
	.uleb128 0x1c
	.string	"PARM"
	.sleb128 2
	.uleb128 0x1c
	.string	"CATCHPARM"
	.sleb128 3
	.uleb128 0x1c
	.string	"FIELD"
	.sleb128 4
	.uleb128 0x1c
	.string	"BITFIELD"
	.sleb128 5
	.uleb128 0x1c
	.string	"TYPENAME"
	.sleb128 6
	.uleb128 0x1c
	.string	"MEMFUNCDEF"
	.sleb128 7
	.byte	0x0
	.uleb128 0x2
	.string	"RID_BIT_TYPE"
	.byte	0x14
	.byte	0x37
	.long	0x447
	.uleb128 0x4
	.long	0x9772
	.string	"ggc_root_tab"
	.byte	0x10
	.byte	0x1d
	.byte	0x32
	.uleb128 0x7
	.string	"base"
	.byte	0x1d
	.byte	0x33
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"nelt"
	.byte	0x1d
	.byte	0x34
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"stride"
	.byte	0x1d
	.byte	0x35
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"cb"
	.byte	0x1d
	.byte	0x36
	.long	0x795
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x4
	.long	0x97d8
	.string	"ggc_cache_tab"
	.byte	0x14
	.byte	0x1d
	.byte	0x3f
	.uleb128 0x7
	.string	"base"
	.byte	0x1d
	.byte	0x40
	.long	0x97d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"nelt"
	.byte	0x1d
	.byte	0x41
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"stride"
	.byte	0x1d
	.byte	0x42
	.long	0x412
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"cb"
	.byte	0x1d
	.byte	0x43
	.long	0x795
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"marked_p"
	.byte	0x1d
	.byte	0x44
	.long	0x97ee
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x65e7
	.uleb128 0x18
	.long	0x97ee
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x860
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x97de
	.uleb128 0x4
	.long	0x983c
	.string	"asm_int_op"
	.byte	0x10
	.byte	0x1e
	.byte	0x3a
	.uleb128 0x7
	.string	"hi"
	.byte	0x1e
	.byte	0x3b
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"si"
	.byte	0x1e
	.byte	0x3c
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"di"
	.byte	0x1e
	.byte	0x3d
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"ti"
	.byte	0x1e
	.byte	0x3e
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x4
	.long	0x9a72
	.string	"asm_out"
	.byte	0x70
	.byte	0x1e
	.byte	0x33
	.uleb128 0x7
	.string	"open_paren"
	.byte	0x1e
	.byte	0x35
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"close_paren"
	.byte	0x1e
	.byte	0x35
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"byte_op"
	.byte	0x1e
	.byte	0x38
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"aligned_op"
	.byte	0x1e
	.byte	0x3f
	.long	0x97f4
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"unaligned_op"
	.byte	0x1e
	.byte	0x3f
	.long	0x97f4
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"integer"
	.byte	0x1e
	.byte	0x46
	.long	0x9a8c
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"globalize_label"
	.byte	0x1e
	.byte	0x49
	.long	0x9aa9
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"visibility"
	.byte	0x1e
	.byte	0x4d
	.long	0x9ac0
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"function_prologue"
	.byte	0x1e
	.byte	0x50
	.long	0x9ad7
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x7
	.string	"function_end_prologue"
	.byte	0x1e
	.byte	0x53
	.long	0x9ae9
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x7
	.string	"function_begin_epilogue"
	.byte	0x1e
	.byte	0x56
	.long	0x9ae9
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x7
	.string	"function_epilogue"
	.byte	0x1e
	.byte	0x59
	.long	0x9ad7
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x7
	.string	"named_section"
	.byte	0x1e
	.byte	0x5d
	.long	0x9b00
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x7
	.string	"exception_section"
	.byte	0x1e
	.byte	0x60
	.long	0x869
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x7
	.string	"eh_frame_section"
	.byte	0x1e
	.byte	0x63
	.long	0x869
	.byte	0x2
	.byte	0x23
	.uleb128 0x50
	.uleb128 0x7
	.string	"select_section"
	.byte	0x1e
	.byte	0x6a
	.long	0x9b1c
	.byte	0x2
	.byte	0x23
	.uleb128 0x54
	.uleb128 0x7
	.string	"select_rtx_section"
	.byte	0x1e
	.byte	0x6e
	.long	0x9b38
	.byte	0x2
	.byte	0x23
	.uleb128 0x58
	.uleb128 0x7
	.string	"unique_section"
	.byte	0x1e
	.byte	0x73
	.long	0x9ac0
	.byte	0x2
	.byte	0x23
	.uleb128 0x5c
	.uleb128 0x7
	.string	"constructor"
	.byte	0x1e
	.byte	0x76
	.long	0x9b4f
	.byte	0x2
	.byte	0x23
	.uleb128 0x60
	.uleb128 0x7
	.string	"destructor"
	.byte	0x1e
	.byte	0x79
	.long	0x9b4f
	.byte	0x2
	.byte	0x23
	.uleb128 0x64
	.uleb128 0x7
	.string	"output_mi_thunk"
	.byte	0x1e
	.byte	0x80
	.long	0x9b75
	.byte	0x2
	.byte	0x23
	.uleb128 0x68
	.uleb128 0x7
	.string	"can_output_mi_thunk"
	.byte	0x1e
	.byte	0x8b
	.long	0x9b9a
	.byte	0x2
	.byte	0x23
	.uleb128 0x6c
	.byte	0x0
	.uleb128 0x18
	.long	0x9a8c
	.byte	0x1
	.long	0x5397
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x3b1
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9a72
	.uleb128 0x15
	.long	0x9aa3
	.byte	0x1
	.uleb128 0x16
	.long	0x9aa3
	.uleb128 0x16
	.long	0x2c5
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x4e7
	.uleb128 0x3
	.byte	0x4
	.long	0x9a92
	.uleb128 0x15
	.long	0x9ac0
	.byte	0x1
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9aaf
	.uleb128 0x15
	.long	0x9ad7
	.byte	0x1
	.uleb128 0x16
	.long	0x9aa3
	.uleb128 0x16
	.long	0x478
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9ac6
	.uleb128 0x15
	.long	0x9ae9
	.byte	0x1
	.uleb128 0x16
	.long	0x9aa3
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9add
	.uleb128 0x15
	.long	0x9b00
	.byte	0x1
	.uleb128 0x16
	.long	0x2c5
	.uleb128 0x16
	.long	0x3b1
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9aef
	.uleb128 0x15
	.long	0x9b1c
	.byte	0x1
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x2d8
	.uleb128 0x16
	.long	0x489
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9b06
	.uleb128 0x15
	.long	0x9b38
	.byte	0x1
	.uleb128 0x16
	.long	0x86f
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x489
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9b22
	.uleb128 0x15
	.long	0x9b4f
	.byte	0x1
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9b3e
	.uleb128 0x15
	.long	0x9b75
	.byte	0x1
	.uleb128 0x16
	.long	0x9aa3
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x478
	.uleb128 0x16
	.long	0x478
	.uleb128 0x16
	.long	0x1e4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9b55
	.uleb128 0x18
	.long	0x9b9a
	.byte	0x1
	.long	0x5397
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x478
	.uleb128 0x16
	.long	0x478
	.uleb128 0x16
	.long	0x1e4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9b7b
	.uleb128 0x4
	.long	0x9d5b
	.string	"sched"
	.byte	0x40
	.byte	0x1e
	.byte	0x93
	.uleb128 0x7
	.string	"adjust_cost"
	.byte	0x1e
	.byte	0x97
	.long	0x9d7a
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"adjust_priority"
	.byte	0x1e
	.byte	0x9b
	.long	0x9d95
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"issue_rate"
	.byte	0x1e
	.byte	0xa0
	.long	0x9da1
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"variable_issue"
	.byte	0x1e
	.byte	0xa4
	.long	0x9dc6
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"md_init"
	.byte	0x1e
	.byte	0xa7
	.long	0x9de2
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"md_finish"
	.byte	0x1e
	.byte	0xaa
	.long	0x9df9
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"reorder"
	.byte	0x1e
	.byte	0xae
	.long	0x9e23
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"reorder2"
	.byte	0x1e
	.byte	0xaf
	.long	0x9e23
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"use_dfa_pipeline_interface"
	.byte	0x1e
	.byte	0xb4
	.long	0x9da1
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"init_dfa_pre_cycle_insn"
	.byte	0x1e
	.byte	0xc2
	.long	0x869
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"dfa_pre_cycle_insn"
	.byte	0x1e
	.byte	0xc3
	.long	0x9e2f
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"init_dfa_post_cycle_insn"
	.byte	0x1e
	.byte	0xc4
	.long	0x869
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"dfa_post_cycle_insn"
	.byte	0x1e
	.byte	0xc5
	.long	0x9e2f
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"first_cycle_multipass_dfa_lookahead"
	.byte	0x1e
	.byte	0xcd
	.long	0x9da1
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"init_dfa_bubbles"
	.byte	0x1e
	.byte	0xd8
	.long	0x869
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x7
	.string	"dfa_bubble"
	.byte	0x1e
	.byte	0xd9
	.long	0x9e45
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.byte	0x0
	.uleb128 0x18
	.long	0x9d7a
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9d5b
	.uleb128 0x18
	.long	0x9d95
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9d80
	.uleb128 0x30
	.byte	0x1
	.long	0x2d8
	.uleb128 0x3
	.byte	0x4
	.long	0x9d9b
	.uleb128 0x18
	.long	0x9dc6
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x9aa3
	.uleb128 0x16
	.long	0x2d8
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9da7
	.uleb128 0x15
	.long	0x9de2
	.byte	0x1
	.uleb128 0x16
	.long	0x9aa3
	.uleb128 0x16
	.long	0x2d8
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9dcc
	.uleb128 0x15
	.long	0x9df9
	.byte	0x1
	.uleb128 0x16
	.long	0x9aa3
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9de8
	.uleb128 0x18
	.long	0x9e23
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x9aa3
	.uleb128 0x16
	.long	0x2d8
	.uleb128 0x16
	.long	0x5e54
	.uleb128 0x16
	.long	0x83f
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9dff
	.uleb128 0x30
	.byte	0x1
	.long	0x9c
	.uleb128 0x3
	.byte	0x4
	.long	0x9e29
	.uleb128 0x18
	.long	0x9e45
	.byte	0x1
	.long	0x9c
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x9e35
	.uleb128 0x4
	.long	0xa134
	.string	"gcc_target"
	.byte	0xfc
	.byte	0x1e
	.byte	0x30
	.uleb128 0x7
	.string	"asm_out"
	.byte	0x1e
	.byte	0x8f
	.long	0x983c
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"sched"
	.byte	0x1e
	.byte	0xda
	.long	0x9ba0
	.byte	0x2
	.byte	0x23
	.uleb128 0x70
	.uleb128 0x7
	.string	"merge_decl_attributes"
	.byte	0x1e
	.byte	0xdd
	.long	0xa149
	.byte	0x3
	.byte	0x23
	.uleb128 0xb0
	.uleb128 0x7
	.string	"merge_type_attributes"
	.byte	0x1e
	.byte	0xe0
	.long	0xa149
	.byte	0x3
	.byte	0x23
	.uleb128 0xb4
	.uleb128 0x7
	.string	"attribute_table"
	.byte	0x1e
	.byte	0xe4
	.long	0xa14f
	.byte	0x3
	.byte	0x23
	.uleb128 0xb8
	.uleb128 0x7
	.string	"comp_type_attributes"
	.byte	0x1e
	.byte	0xe9
	.long	0xa16f
	.byte	0x3
	.byte	0x23
	.uleb128 0xbc
	.uleb128 0x7
	.string	"set_default_type_attributes"
	.byte	0x1e
	.byte	0xec
	.long	0xa181
	.byte	0x3
	.byte	0x23
	.uleb128 0xc0
	.uleb128 0x7
	.string	"insert_attributes"
	.byte	0x1e
	.byte	0xef
	.long	0xa198
	.byte	0x3
	.byte	0x23
	.uleb128 0xc4
	.uleb128 0x7
	.string	"function_attribute_inlinable_p"
	.byte	0x1e
	.byte	0xf3
	.long	0xa1ae
	.byte	0x3
	.byte	0x23
	.uleb128 0xc8
	.uleb128 0x7
	.string	"ms_bitfield_layout_p"
	.byte	0x1e
	.byte	0xf7
	.long	0xa1ae
	.byte	0x3
	.byte	0x23
	.uleb128 0xcc
	.uleb128 0x7
	.string	"init_builtins"
	.byte	0x1e
	.byte	0xfa
	.long	0x869
	.byte	0x3
	.byte	0x23
	.uleb128 0xd0
	.uleb128 0x7
	.string	"expand_builtin"
	.byte	0x1e
	.byte	0xfd
	.long	0xa1d8
	.byte	0x3
	.byte	0x23
	.uleb128 0xd4
	.uleb128 0xe
	.string	"section_type_flags"
	.byte	0x1e
	.value	0x103
	.long	0xa1f8
	.byte	0x3
	.byte	0x23
	.uleb128 0xd8
	.uleb128 0xe
	.string	"cannot_modify_jumps_p"
	.byte	0x1e
	.value	0x107
	.long	0xa204
	.byte	0x3
	.byte	0x23
	.uleb128 0xdc
	.uleb128 0xe
	.string	"cannot_force_const_mem"
	.byte	0x1e
	.value	0x10a
	.long	0xa21a
	.byte	0x3
	.byte	0x23
	.uleb128 0xe0
	.uleb128 0xe
	.string	"in_small_data_p"
	.byte	0x1e
	.value	0x10d
	.long	0xa1ae
	.byte	0x3
	.byte	0x23
	.uleb128 0xe4
	.uleb128 0xe
	.string	"binds_local_p"
	.byte	0x1e
	.value	0x111
	.long	0xa1ae
	.byte	0x3
	.byte	0x23
	.uleb128 0xe8
	.uleb128 0xe
	.string	"encode_section_info"
	.byte	0x1e
	.value	0x115
	.long	0x9ac0
	.byte	0x3
	.byte	0x23
	.uleb128 0xec
	.uleb128 0xe
	.string	"strip_name_encoding"
	.byte	0x1e
	.value	0x118
	.long	0xa230
	.byte	0x3
	.byte	0x23
	.uleb128 0xf0
	.uleb128 0xe
	.string	"have_named_sections"
	.byte	0x1e
	.value	0x11d
	.long	0x5397
	.byte	0x3
	.byte	0x23
	.uleb128 0xf4
	.uleb128 0xe
	.string	"have_ctors_dtors"
	.byte	0x1e
	.value	0x121
	.long	0x5397
	.byte	0x3
	.byte	0x23
	.uleb128 0xf5
	.uleb128 0xe
	.string	"have_tls"
	.byte	0x1e
	.value	0x124
	.long	0x5397
	.byte	0x3
	.byte	0x23
	.uleb128 0xf6
	.uleb128 0xe
	.string	"have_srodata_section"
	.byte	0x1e
	.value	0x127
	.long	0x5397
	.byte	0x3
	.byte	0x23
	.uleb128 0xf7
	.uleb128 0xe
	.string	"terminate_dw2_eh_frame_info"
	.byte	0x1e
	.value	0x12a
	.long	0x5397
	.byte	0x3
	.byte	0x23
	.uleb128 0xf8
	.byte	0x0
	.uleb128 0x18
	.long	0xa149
	.byte	0x1
	.long	0x1e4
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x1e4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa134
	.uleb128 0x3
	.byte	0x4
	.long	0xa155
	.uleb128 0xb
	.long	0x52d2
	.uleb128 0x18
	.long	0xa16f
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x1e4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa15a
	.uleb128 0x15
	.long	0xa181
	.byte	0x1
	.uleb128 0x16
	.long	0x1e4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa175
	.uleb128 0x15
	.long	0xa198
	.byte	0x1
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x53c4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa187
	.uleb128 0x18
	.long	0xa1ae
	.byte	0x1
	.long	0x5397
	.uleb128 0x16
	.long	0x1e4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa19e
	.uleb128 0x18
	.long	0xa1d8
	.byte	0x1
	.long	0x9c
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x9c
	.uleb128 0x16
	.long	0x86f
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa1b4
	.uleb128 0x18
	.long	0xa1f8
	.byte	0x1
	.long	0x3b1
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x2c5
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa1de
	.uleb128 0x30
	.byte	0x1
	.long	0x5397
	.uleb128 0x3
	.byte	0x4
	.long	0xa1fe
	.uleb128 0x18
	.long	0xa21a
	.byte	0x1
	.long	0x5397
	.uleb128 0x16
	.long	0x9c
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa20a
	.uleb128 0x18
	.long	0xa230
	.byte	0x1
	.long	0x2c5
	.uleb128 0x16
	.long	0x2c5
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa220
	.uleb128 0x26
	.long	0xa268
	.byte	0x8
	.byte	0x1f
	.byte	0x1f
	.uleb128 0x7
	.string	"format_spec"
	.byte	0x1f
	.byte	0x20
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"args_ptr"
	.byte	0x1f
	.byte	0x21
	.long	0xa268
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x403
	.uleb128 0x2
	.string	"text_info"
	.byte	0x1f
	.byte	0x22
	.long	0xa236
	.uleb128 0x31
	.long	0xa2ff
	.byte	0x4
	.byte	0x1f
	.byte	0x26
	.uleb128 0x1c
	.string	"DK_FATAL"
	.sleb128 0
	.uleb128 0x1c
	.string	"DK_ICE"
	.sleb128 1
	.uleb128 0x1c
	.string	"DK_SORRY"
	.sleb128 2
	.uleb128 0x1c
	.string	"DK_ERROR"
	.sleb128 3
	.uleb128 0x1c
	.string	"DK_WARNING"
	.sleb128 4
	.uleb128 0x1c
	.string	"DK_ANACHRONISM"
	.sleb128 5
	.uleb128 0x1c
	.string	"DK_NOTE"
	.sleb128 6
	.uleb128 0x1c
	.string	"DK_DEBUG"
	.sleb128 7
	.uleb128 0x1c
	.string	"DK_LAST_DIAGNOSTIC_KIND"
	.sleb128 8
	.byte	0x0
	.uleb128 0x2
	.string	"diagnostic_t"
	.byte	0x1f
	.byte	0x2b
	.long	0xa27f
	.uleb128 0x26
	.long	0xa350
	.byte	0x14
	.byte	0x1f
	.byte	0x31
	.uleb128 0x7
	.string	"message"
	.byte	0x1f
	.byte	0x32
	.long	0xa26e
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"location"
	.byte	0x1f
	.byte	0x33
	.long	0xaea
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"kind"
	.byte	0x1f
	.byte	0x35
	.long	0xa2ff
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.byte	0x0
	.uleb128 0x2
	.string	"diagnostic_info"
	.byte	0x1f
	.byte	0x36
	.long	0xa313
	.uleb128 0x31
	.long	0xa3d4
	.byte	0x4
	.byte	0x1f
	.byte	0x40
	.uleb128 0x1c
	.string	"DIAGNOSTICS_SHOW_PREFIX_ONCE"
	.sleb128 0
	.uleb128 0x1c
	.string	"DIAGNOSTICS_SHOW_PREFIX_NEVER"
	.sleb128 1
	.uleb128 0x1c
	.string	"DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE"
	.sleb128 2
	.byte	0x0
	.uleb128 0x2
	.string	"diagnostic_prefixing_rule_t"
	.byte	0x1f
	.byte	0x44
	.long	0xa367
	.uleb128 0x26
	.long	0xa4ac
	.byte	0x18
	.byte	0x1f
	.byte	0x48
	.uleb128 0x7
	.string	"prefix"
	.byte	0x1f
	.byte	0x4a
	.long	0x2c5
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"maximum_length"
	.byte	0x1f
	.byte	0x4e
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"ideal_maximum_length"
	.byte	0x1f
	.byte	0x52
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"indent_skip"
	.byte	0x1f
	.byte	0x55
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"emitted_prefix_p"
	.byte	0x1f
	.byte	0x58
	.long	0x5397
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"need_newline_p"
	.byte	0x1f
	.byte	0x5b
	.long	0x5397
	.byte	0x2
	.byte	0x23
	.uleb128 0x11
	.uleb128 0x7
	.string	"prefixing_rule"
	.byte	0x1f
	.byte	0x5e
	.long	0xa3d4
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.byte	0x0
	.uleb128 0x2
	.string	"output_state"
	.byte	0x1f
	.byte	0x5f
	.long	0xa3f7
	.uleb128 0x27
	.long	.LASF82
	.byte	0x1f
	.byte	0x64
	.long	0xa4cb
	.uleb128 0x14
	.long	0xa552
	.long	.LASF82
	.byte	0xd0
	.byte	0x1f
	.byte	0x64
	.uleb128 0x7
	.string	"state"
	.byte	0x1f
	.byte	0x6c
	.long	0xa4ac
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"stream"
	.byte	0x1f
	.byte	0x6f
	.long	0x9aa3
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"obstack"
	.byte	0x1f
	.byte	0x72
	.long	0x3690
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"line_length"
	.byte	0x1f
	.byte	0x75
	.long	0x2d8
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x7
	.string	"digit_buffer"
	.byte	0x1f
	.byte	0x79
	.long	0xa58b
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.uleb128 0x7
	.string	"format_decoder"
	.byte	0x1f
	.byte	0x83
	.long	0xa552
	.byte	0x3
	.byte	0x23
	.uleb128 0xcc
	.byte	0x0
	.uleb128 0x2
	.string	"printer_fn"
	.byte	0x1f
	.byte	0x65
	.long	0xa564
	.uleb128 0x3
	.byte	0x4
	.long	0xa56a
	.uleb128 0x18
	.long	0xa57f
	.byte	0x1
	.long	0x5397
	.uleb128 0x16
	.long	0xa57f
	.uleb128 0x16
	.long	0xa585
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa4c0
	.uleb128 0x3
	.byte	0x4
	.long	0xa26e
	.uleb128 0x10
	.long	0xa59b
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x7f
	.byte	0x0
	.uleb128 0x27
	.long	.LASF83
	.byte	0x1f
	.byte	0xac
	.long	0xa5a6
	.uleb128 0x32
	.long	0xa6aa
	.long	.LASF83
	.value	0x110
	.byte	0x5
	.byte	0x29
	.uleb128 0x7
	.string	"buffer"
	.byte	0x1f
	.byte	0xb8
	.long	0xa4c0
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"diagnostic_count"
	.byte	0x1f
	.byte	0xbb
	.long	0xa709
	.byte	0x3
	.byte	0x23
	.uleb128 0xd0
	.uleb128 0x7
	.string	"warnings_are_errors_message"
	.byte	0x1f
	.byte	0xbf
	.long	0x5397
	.byte	0x3
	.byte	0x23
	.uleb128 0xf0
	.uleb128 0x7
	.string	"begin_diagnostic"
	.byte	0x1f
	.byte	0xc8
	.long	0xa6aa
	.byte	0x3
	.byte	0x23
	.uleb128 0xf4
	.uleb128 0x7
	.string	"end_diagnostic"
	.byte	0x1f
	.byte	0xcb
	.long	0xa6ea
	.byte	0x3
	.byte	0x23
	.uleb128 0xf8
	.uleb128 0x7
	.string	"internal_error"
	.byte	0x1f
	.byte	0xce
	.long	0xa72a
	.byte	0x3
	.byte	0x23
	.uleb128 0xfc
	.uleb128 0x7
	.string	"last_function"
	.byte	0x1f
	.byte	0xd3
	.long	0x1e4
	.byte	0x3
	.byte	0x23
	.uleb128 0x100
	.uleb128 0x7
	.string	"last_module"
	.byte	0x1f
	.byte	0xd6
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x104
	.uleb128 0x7
	.string	"lock"
	.byte	0x1f
	.byte	0xd8
	.long	0x2d8
	.byte	0x3
	.byte	0x23
	.uleb128 0x108
	.uleb128 0x7
	.string	"x_data"
	.byte	0x1f
	.byte	0xdb
	.long	0x4df
	.byte	0x3
	.byte	0x23
	.uleb128 0x10c
	.byte	0x0
	.uleb128 0x2
	.string	"diagnostic_starter_fn"
	.byte	0x1f
	.byte	0xad
	.long	0xa6c7
	.uleb128 0x3
	.byte	0x4
	.long	0xa6cd
	.uleb128 0x15
	.long	0xa6de
	.byte	0x1
	.uleb128 0x16
	.long	0xa6de
	.uleb128 0x16
	.long	0xa6e4
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa59b
	.uleb128 0x3
	.byte	0x4
	.long	0xa350
	.uleb128 0x2
	.string	"diagnostic_finalizer_fn"
	.byte	0x1f
	.byte	0xaf
	.long	0xa6aa
	.uleb128 0x10
	.long	0xa719
	.long	0x2d8
	.uleb128 0x11
	.long	0x3c8
	.byte	0x7
	.byte	0x0
	.uleb128 0x15
	.long	0xa72a
	.byte	0x1
	.uleb128 0x16
	.long	0x2c5
	.uleb128 0x16
	.long	0xa268
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa719
	.uleb128 0x4
	.long	0xa908
	.string	"gcc_debug_hooks"
	.byte	0x50
	.byte	0x22
	.byte	0x19
	.uleb128 0x1d
	.long	.LASF84
	.byte	0x22
	.byte	0x1c
	.long	0xa914
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x7
	.string	"finish"
	.byte	0x22
	.byte	0x1f
	.long	0xa914
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x7
	.string	"define"
	.byte	0x22
	.byte	0x22
	.long	0xa92b
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0x7
	.string	"undef"
	.byte	0x22
	.byte	0x25
	.long	0xa92b
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.uleb128 0x7
	.string	"start_source_file"
	.byte	0x22
	.byte	0x29
	.long	0xa92b
	.byte	0x2
	.byte	0x23
	.uleb128 0x10
	.uleb128 0x7
	.string	"end_source_file"
	.byte	0x22
	.byte	0x2d
	.long	0xa93d
	.byte	0x2
	.byte	0x23
	.uleb128 0x14
	.uleb128 0x7
	.string	"begin_block"
	.byte	0x22
	.byte	0x31
	.long	0xa954
	.byte	0x2
	.byte	0x23
	.uleb128 0x18
	.uleb128 0x7
	.string	"end_block"
	.byte	0x22
	.byte	0x34
	.long	0xa954
	.byte	0x2
	.byte	0x23
	.uleb128 0x1c
	.uleb128 0x7
	.string	"ignore_block"
	.byte	0x22
	.byte	0x3b
	.long	0xa1ae
	.byte	0x2
	.byte	0x23
	.uleb128 0x20
	.uleb128 0x7
	.string	"source_line"
	.byte	0x22
	.byte	0x3e
	.long	0xa92b
	.byte	0x2
	.byte	0x23
	.uleb128 0x24
	.uleb128 0x7
	.string	"begin_prologue"
	.byte	0x22
	.byte	0x43
	.long	0xa92b
	.byte	0x2
	.byte	0x23
	.uleb128 0x28
	.uleb128 0x7
	.string	"end_prologue"
	.byte	0x22
	.byte	0x47
	.long	0xa92b
	.byte	0x2
	.byte	0x23
	.uleb128 0x2c
	.uleb128 0x7
	.string	"end_epilogue"
	.byte	0x22
	.byte	0x4a
	.long	0xa92b
	.byte	0x2
	.byte	0x23
	.uleb128 0x30
	.uleb128 0x7
	.string	"begin_function"
	.byte	0x22
	.byte	0x4d
	.long	0xa181
	.byte	0x2
	.byte	0x23
	.uleb128 0x34
	.uleb128 0x7
	.string	"end_function"
	.byte	0x22
	.byte	0x50
	.long	0xa93d
	.byte	0x2
	.byte	0x23
	.uleb128 0x38
	.uleb128 0x1d
	.long	.LASF66
	.byte	0x22
	.byte	0x56
	.long	0xa181
	.byte	0x2
	.byte	0x23
	.uleb128 0x3c
	.uleb128 0x7
	.string	"global_decl"
	.byte	0x22
	.byte	0x5a
	.long	0xa181
	.byte	0x2
	.byte	0x23
	.uleb128 0x40
	.uleb128 0x7
	.string	"deferred_inline_function"
	.byte	0x22
	.byte	0x5e
	.long	0xa181
	.byte	0x2
	.byte	0x23
	.uleb128 0x44
	.uleb128 0x7
	.string	"outlining_inline_function"
	.byte	0x22
	.byte	0x63
	.long	0xa181
	.byte	0x2
	.byte	0x23
	.uleb128 0x48
	.uleb128 0x7
	.string	"label"
	.byte	0x22
	.byte	0x67
	.long	0xa966
	.byte	0x2
	.byte	0x23
	.uleb128 0x4c
	.byte	0x0
	.uleb128 0x15
	.long	0xa914
	.byte	0x1
	.uleb128 0x16
	.long	0x2c5
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa908
	.uleb128 0x15
	.long	0xa92b
	.byte	0x1
	.uleb128 0x16
	.long	0x3b1
	.uleb128 0x16
	.long	0x2c5
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa91a
	.uleb128 0x15
	.long	0xa93d
	.byte	0x1
	.uleb128 0x16
	.long	0x3b1
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa931
	.uleb128 0x15
	.long	0xa954
	.byte	0x1
	.uleb128 0x16
	.long	0x3b1
	.uleb128 0x16
	.long	0x3b1
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa943
	.uleb128 0x15
	.long	0xa966
	.byte	0x1
	.uleb128 0x16
	.long	0x9c
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xa95a
	.uleb128 0xc
	.string	"float"
	.byte	0x4
	.byte	0x4
	.uleb128 0x2b
	.long	0xa9bb
	.string	"deprecated_states"
	.byte	0x4
	.byte	0x1
	.value	0x11f
	.uleb128 0x1c
	.string	"DEPRECATED_NORMAL"
	.sleb128 0
	.uleb128 0x1c
	.string	"DEPRECATED_SUPPRESS"
	.sleb128 1
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x7e7e
	.uleb128 0x33
	.long	0xaaaf
	.string	"binding_table_expand"
	.byte	0x1
	.value	0x194
	.byte	0x1
	.long	.LFB20
	.long	.LFE20
	.long	.LLST0
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x193
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"old_chain_count"
	.byte	0x1
	.value	0x195
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"old_entry_count"
	.byte	0x1
	.value	0x196
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"new_chain_count"
	.byte	0x1
	.value	0x197
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"old_chains"
	.byte	0x1
	.value	0x198
	.long	0xa9bb
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x199
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB2
	.long	.LBE2
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x19e
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB3
	.long	.LBE3
	.uleb128 0x35
	.string	"hash"
	.byte	0x1
	.value	0x1a1
	.long	0xaab4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.string	"j"
	.byte	0x1
	.value	0x1a2
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0xb
	.long	0x412
	.uleb128 0xb
	.long	0x3b1
	.uleb128 0x33
	.long	0xab05
	.string	"binding_table_construct"
	.byte	0x1
	.value	0x16d
	.byte	0x1
	.long	.LFB17
	.long	.LFE17
	.long	.LLST1
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x16c
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF62
	.byte	0x1
	.value	0x16c
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xab70
	.byte	0x1
	.string	"binding_table_find"
	.byte	0x1
	.value	0x1bf
	.byte	0x1
	.long	0x7e7e
	.long	.LFB22
	.long	.LFE22
	.long	.LLST2
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x1be
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1be
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"hash"
	.byte	0x1
	.value	0x1c0
	.long	0xaab4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x1c1
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x33
	.long	0xac04
	.string	"binding_table_remove_anonymous_types"
	.byte	0x1
	.value	0x1fd
	.byte	0x1
	.long	.LFB25
	.long	.LFE25
	.long	.LLST3
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x1fc
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF62
	.byte	0x1
	.value	0x1fe
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x1ff
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB4
	.long	.LBE4
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x203
	.long	0xa9bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x36
	.long	.LBB5
	.long	.LBE5
	.uleb128 0x35
	.string	"e"
	.byte	0x1
	.value	0x208
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xac3c
	.string	"binding_entry_free"
	.byte	0x1
	.value	0x14f
	.byte	0x1
	.long	.LFB16
	.long	.LFE16
	.long	.LLST4
	.uleb128 0x34
	.long	.LASF85
	.byte	0x1
	.value	0x14e
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0xaccc
	.byte	0x1
	.string	"binding_table_foreach"
	.byte	0x1
	.value	0x215
	.byte	0x1
	.long	.LFB26
	.long	.LFE26
	.long	.LLST5
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x214
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"proc"
	.byte	0x1
	.value	0x214
	.long	0x7ee1
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x214
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF62
	.byte	0x1
	.value	0x216
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x217
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x36
	.long	.LBB6
	.long	.LBE6
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x21b
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xad07
	.string	"indent"
	.byte	0x1
	.value	0x2dd
	.byte	0x1
	.long	.LFB28
	.long	.LFE28
	.long	.LLST6
	.uleb128 0x3a
	.string	"depth"
	.byte	0x1
	.value	0x2dc
	.long	0x3b1
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x2de
	.long	0x3b1
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xad5e
	.string	"push_binding_level"
	.byte	0x1
	.value	0x2ea
	.byte	0x1
	.long	.LFB29
	.long	.LFE29
	.long	.LLST7
	.uleb128 0x34
	.long	.LASF87
	.byte	0x1
	.value	0x2e8
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF60
	.byte	0x1
	.value	0x2e9
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"keep"
	.byte	0x1
	.value	0x2e9
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x33
	.long	0xada1
	.string	"copy_to_current_binding_level"
	.byte	0x1
	.value	0x2b3
	.byte	0x1
	.long	.LFB27
	.long	.LFE27
	.long	.LLST8
	.uleb128 0x34
	.long	.LASF58
	.byte	0x1
	.value	0x2b2
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x33
	.long	0xaddf
	.string	"find_class_binding_level"
	.byte	0x1
	.value	0x309
	.byte	0x1
	.long	.LFB30
	.long	.LFE30
	.long	.LLST9
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x30a
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x33
	.long	0xae34
	.string	"pop_binding_level"
	.byte	0x1
	.value	0x316
	.byte	0x1
	.long	.LFB31
	.long	.LFE31
	.long	.LLST10
	.uleb128 0x3b
	.long	0xae23
	.long	.LBB7
	.long	.LBE7
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x32a
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -8
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a4b
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.17599
	.byte	0x0
	.uleb128 0x33
	.long	0xae92
	.string	"binding_table_free"
	.byte	0x1
	.value	0x177
	.byte	0x1
	.long	.LFB18
	.long	.LFE18
	.long	.LLST11
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x176
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x178
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x36
	.long	.LBB8
	.long	.LBE8
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x180
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xaece
	.string	"suspend_binding_level"
	.byte	0x1
	.value	0x33e
	.byte	0x1
	.long	.LFB32
	.long	.LFE32
	.long	.LLST12
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a46
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.17701
	.byte	0x0
	.uleb128 0x33
	.long	0xaf16
	.string	"resume_binding_level"
	.byte	0x1
	.value	0x364
	.byte	0x1
	.long	.LFB33
	.long	.LFE33
	.long	.LLST13
	.uleb128 0x3a
	.string	"b"
	.byte	0x1
	.value	0x363
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a41
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.17790
	.byte	0x0
	.uleb128 0x3d
	.string	"make_binding_level"
	.byte	0x1
	.value	0x37f
	.byte	0x1
	.long	0x7e07
	.long	.LFB34
	.long	.LFE34
	.long	.LLST14
	.uleb128 0x3e
	.byte	0x1
	.string	"global_bindings_p"
	.byte	0x1
	.value	0x388
	.byte	0x1
	.long	0x2d8
	.long	.LFB35
	.long	.LFE35
	.long	.LLST15
	.uleb128 0x3f
	.long	0xafa6
	.string	"innermost_nonclass_level"
	.byte	0x1
	.value	0x390
	.byte	0x1
	.long	0x7e07
	.long	.LFB36
	.long	.LFE36
	.long	.LLST16
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x391
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x38
	.long	0xafe2
	.byte	0x1
	.string	"toplevel_bindings_p"
	.byte	0x1
	.value	0x3a2
	.byte	0x1
	.long	0x2d8
	.long	.LFB37
	.long	.LFE37
	.long	.LLST17
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x3a3
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x38
	.long	0xb01f
	.byte	0x1
	.string	"namespace_bindings_p"
	.byte	0x1
	.value	0x3ae
	.byte	0x1
	.long	0x2d8
	.long	.LFB38
	.long	.LFE38
	.long	.LLST18
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x3af
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x39
	.long	0xb056
	.byte	0x1
	.string	"keep_next_level"
	.byte	0x1
	.value	0x3bb
	.byte	0x1
	.long	.LFB39
	.long	.LFE39
	.long	.LLST19
	.uleb128 0x3a
	.string	"keep"
	.byte	0x1
	.value	0x3ba
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3e
	.byte	0x1
	.string	"kept_level_p"
	.byte	0x1
	.value	0x3c3
	.byte	0x1
	.long	0x2d8
	.long	.LFB40
	.long	.LFE40
	.long	.LLST20
	.uleb128 0x3e
	.byte	0x1
	.string	"innermost_scope_is_class_p"
	.byte	0x1
	.value	0x3cf
	.byte	0x1
	.long	0x5397
	.long	.LFB41
	.long	.LFE41
	.long	.LLST21
	.uleb128 0x40
	.string	"declare_namespace_level"
	.byte	0x1
	.value	0x3d5
	.byte	0x1
	.long	.LFB42
	.long	.LFE42
	.long	.LLST22
	.uleb128 0x3e
	.byte	0x1
	.string	"template_parm_scope_p"
	.byte	0x1
	.value	0x3de
	.byte	0x1
	.long	0x2d8
	.long	.LFB43
	.long	.LFE43
	.long	.LLST23
	.uleb128 0x38
	.long	0xb1c1
	.byte	0x1
	.string	"current_tmpl_spec_kind"
	.byte	0x1
	.value	0x3e9
	.byte	0x1
	.long	0x9408
	.long	.LFB44
	.long	.LFE44
	.long	.LLST24
	.uleb128 0x3a
	.string	"n_class_scopes"
	.byte	0x1
	.value	0x3e8
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"n_template_parm_scopes"
	.byte	0x1
	.value	0x3ea
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"seen_specialization_p"
	.byte	0x1
	.value	0x3eb
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"innermost_specialization_p"
	.byte	0x1
	.value	0x3ec
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x3ed
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x39
	.long	0xb1fd
	.byte	0x1
	.string	"set_class_shadows"
	.byte	0x1
	.value	0x43e
	.byte	0x1
	.long	.LFB45
	.long	.LFE45
	.long	.LLST25
	.uleb128 0x3a
	.string	"shadows"
	.byte	0x1
	.value	0x43d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0xb23c
	.byte	0x1
	.string	"pushlevel"
	.byte	0x1
	.value	0x449
	.byte	0x1
	.long	.LFB46
	.long	.LFE46
	.long	.LLST26
	.uleb128 0x34
	.long	.LASF60
	.byte	0x1
	.value	0x448
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF87
	.byte	0x1
	.value	0x44a
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xb27b
	.byte	0x1
	.string	"maybe_push_cleanup_level"
	.byte	0x1
	.value	0x463
	.byte	0x1
	.long	.LFB47
	.long	.LFE47
	.long	.LLST27
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x462
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0xb2bc
	.byte	0x1
	.string	"begin_scope"
	.byte	0x1
	.value	0x474
	.byte	0x1
	.long	.LFB48
	.long	.LFE48
	.long	.LLST28
	.uleb128 0x3a
	.string	"sk"
	.byte	0x1
	.value	0x473
	.long	0x9353
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a3c
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18128
	.byte	0x0
	.uleb128 0x41
	.byte	0x1
	.string	"finish_scope"
	.byte	0x1
	.value	0x48a
	.byte	0x1
	.long	.LFB49
	.long	.LFE49
	.long	.LLST29
	.uleb128 0x41
	.byte	0x1
	.string	"note_level_for_for"
	.byte	0x1
	.value	0x490
	.byte	0x1
	.long	.LFB50
	.long	.LFE50
	.long	.LLST30
	.uleb128 0x41
	.byte	0x1
	.string	"note_level_for_try"
	.byte	0x1
	.value	0x498
	.byte	0x1
	.long	.LFB51
	.long	.LFE51
	.long	.LLST31
	.uleb128 0x41
	.byte	0x1
	.string	"note_level_for_catch"
	.byte	0x1
	.value	0x4a0
	.byte	0x1
	.long	.LFB52
	.long	.LFE52
	.long	.LLST32
	.uleb128 0x33
	.long	0xb3aa
	.string	"push_binding"
	.byte	0x1
	.value	0x4b4
	.byte	0x1
	.long	.LFB53
	.long	.LFE53
	.long	.LLST33
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x4b1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x4b2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF58
	.byte	0x1
	.value	0x4b3
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x4b5
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xb40a
	.string	"add_binding"
	.byte	0x1
	.value	0x4d6
	.byte	0x1
	.long	0x2d8
	.long	.LFB54
	.long	.LFE54
	.long	.LLST34
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x4d4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x4d5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x4d7
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"ok"
	.byte	0x1
	.value	0x4d8
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xb44e
	.string	"add_decl_to_level"
	.byte	0x1
	.value	0x523
	.byte	0x1
	.long	.LFB55
	.long	.LFE55
	.long	.LLST35
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x521
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"b"
	.byte	0x1
	.value	0x522
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x39
	.long	0xb4b1
	.byte	0x1
	.string	"push_local_binding"
	.byte	0x1
	.value	0x54a
	.byte	0x1
	.long	.LFB56
	.long	.LFE56
	.long	.LLST36
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x547
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x548
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x549
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x54b
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xb539
	.byte	0x1
	.string	"push_class_binding"
	.byte	0x1
	.value	0x572
	.byte	0x1
	.long	0x2d8
	.long	.LFB57
	.long	.LFE57
	.long	.LLST37
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x570
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x571
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF39
	.byte	0x1
	.value	0x573
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x574
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF32
	.byte	0x1
	.value	0x575
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a37
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18391
	.byte	0x0
	.uleb128 0x33
	.long	0xb597
	.string	"pop_binding"
	.byte	0x1
	.value	0x5b5
	.byte	0x1
	.long	.LFB58
	.long	.LFE58
	.long	.LLST38
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x5b3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x5b4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x5b6
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a32
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18472
	.byte	0x0
	.uleb128 0x33
	.long	0xb5d7
	.string	"pop_label"
	.byte	0x1
	.value	0x5e4
	.byte	0x1
	.long	.LFB59
	.long	.LFE59
	.long	.LLST39
	.uleb128 0x3a
	.string	"label"
	.byte	0x1
	.value	0x5e2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF70
	.byte	0x1
	.value	0x5e3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x33
	.long	0xb617
	.string	"pop_labels"
	.byte	0x1
	.value	0x5fb
	.byte	0x1
	.long	.LFB60
	.long	.LFE60
	.long	.LLST40
	.uleb128 0x34
	.long	.LASF5
	.byte	0x1
	.value	0x5fa
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"link"
	.byte	0x1
	.value	0x5fc
	.long	0x866c
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xb7f3
	.byte	0x1
	.string	"poplevel"
	.byte	0x1
	.value	0x620
	.byte	0x1
	.long	0x1e4
	.long	.LFB61
	.long	.LFE61
	.long	.LLST41
	.uleb128 0x3a
	.string	"keep"
	.byte	0x1
	.value	0x61d
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"reverse"
	.byte	0x1
	.value	0x61e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"functionbody"
	.byte	0x1
	.value	0x61f
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"link"
	.byte	0x1
	.value	0x621
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -72
	.uleb128 0x37
	.long	.LASF89
	.byte	0x1
	.value	0x624
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x35
	.string	"tmp"
	.byte	0x1
	.value	0x625
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x35
	.string	"real_functionbody"
	.byte	0x1
	.value	0x626
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x37
	.long	.LASF22
	.byte	0x1
	.value	0x627
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x37
	.long	.LASF5
	.byte	0x1
	.value	0x628
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x629
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.string	"leaving_for_scope"
	.byte	0x1
	.value	0x62a
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x3b
	.long	0xb76f
	.long	.LBB9
	.long	.LBE9
	.uleb128 0x37
	.long	.LASF59
	.byte	0x1
	.value	0x647
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x36
	.long	.LBB10
	.long	.LBE10
	.uleb128 0x35
	.string	"uses"
	.byte	0x1
	.value	0x64b
	.long	0x85b3
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"labels"
	.byte	0x1
	.value	0x64c
	.long	0x866c
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x36
	.long	.LBB11
	.long	.LBE11
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x650
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0xb7a2
	.long	.LBB12
	.long	.LBE12
	.uleb128 0x37
	.long	.LASF90
	.byte	0x1
	.value	0x6ad
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"ns_binding"
	.byte	0x1
	.value	0x6af
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x3b
	.long	0xb7bd
	.long	.LBB13
	.long	.LBE13
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x713
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3b
	.long	0xb7e2
	.long	.LBB14
	.long	.LBE14
	.uleb128 0x35
	.string	"scope_stmts"
	.byte	0x1
	.value	0x744
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a2d
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.18566
	.byte	0x0
	.uleb128 0x39
	.long	0xb833
	.byte	0x1
	.string	"delete_block"
	.byte	0x1
	.value	0x75b
	.byte	0x1
	.long	.LFB62
	.long	.LFE62
	.long	.LLST42
	.uleb128 0x34
	.long	.LASF5
	.byte	0x1
	.value	0x75a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x75c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x39
	.long	0xb866
	.byte	0x1
	.string	"insert_block"
	.byte	0x1
	.value	0x773
	.byte	0x1
	.long	.LFB63
	.long	.LFE63
	.long	.LLST43
	.uleb128 0x34
	.long	.LASF5
	.byte	0x1
	.value	0x772
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0xb8a6
	.byte	0x1
	.string	"set_block"
	.byte	0x1
	.value	0x77f
	.byte	0x1
	.long	.LFB64
	.long	.LFE64
	.long	.LLST44
	.uleb128 0x34
	.long	.LASF5
	.byte	0x1
	.value	0x77e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a28
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.19222
	.byte	0x0
	.uleb128 0x39
	.long	0xb8dc
	.byte	0x1
	.string	"pushlevel_class"
	.byte	0x1
	.value	0x789
	.byte	0x1
	.long	.LFB65
	.long	.LFE65
	.long	.LLST45
	.uleb128 0x37
	.long	.LASF87
	.byte	0x1
	.value	0x78a
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -8
	.byte	0x0
	.uleb128 0x39
	.long	0xb964
	.byte	0x1
	.string	"poplevel_class"
	.byte	0x1
	.value	0x7a3
	.byte	0x1
	.long	.LFB66
	.long	.LFE66
	.long	.LLST46
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x7a4
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF91
	.byte	0x1
	.value	0x7a5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3b
	.long	0xb953
	.long	.LBB15
	.long	.LBE15
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x7b2
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB16
	.long	.LBE16
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x7c5
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a23
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.19269
	.byte	0x0
	.uleb128 0x39
	.long	0xb9a6
	.byte	0x1
	.string	"clear_identifier_class_values"
	.byte	0x1
	.value	0x7f1
	.byte	0x1
	.long	.LFB67
	.long	.LFE67
	.long	.LLST47
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x7f2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x38
	.long	0xb9eb
	.byte	0x1
	.string	"vtable_decl_p"
	.byte	0x1
	.value	0x803
	.byte	0x1
	.long	0x2d8
	.long	.LFB68
	.long	.LFE68
	.long	.LLST48
	.uleb128 0x3a
	.string	"t"
	.byte	0x1
	.value	0x801
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x802
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xba2f
	.byte	0x1
	.string	"vtype_decl_p"
	.byte	0x1
	.value	0x80e
	.byte	0x1
	.long	0x2d8
	.long	.LFB69
	.long	.LFE69
	.long	.LLST49
	.uleb128 0x3a
	.string	"t"
	.byte	0x1
	.value	0x80c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x80d
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xba6b
	.byte	0x1
	.string	"cp_namespace_decls"
	.byte	0x1
	.value	0x819
	.byte	0x1
	.long	0x1e4
	.long	.LFB70
	.long	.LFE70
	.long	.LLST50
	.uleb128 0x3a
	.string	"ns"
	.byte	0x1
	.value	0x818
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0xd
	.long	0xbab0
	.string	"walk_globals_data"
	.byte	0xc
	.byte	0x1
	.value	0x81d
	.uleb128 0xe
	.string	"p"
	.byte	0x1
	.value	0x81e
	.long	0x962b
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"f"
	.byte	0x1
	.value	0x81f
	.long	0x9660
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x20
	.long	.LASF46
	.byte	0x1
	.value	0x820
	.long	0x4df
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0x3f
	.long	0xbb3e
	.string	"walk_vtables_r"
	.byte	0x1
	.value	0x82b
	.byte	0x1
	.long	0x2d8
	.long	.LFB71
	.long	.LFE71
	.long	.LLST51
	.uleb128 0x34
	.long	.LASF92
	.byte	0x1
	.value	0x829
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x82a
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"wgd"
	.byte	0x1
	.value	0x82c
	.long	0xbb3e
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"f"
	.byte	0x1
	.value	0x82d
	.long	0x9660
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x82e
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x82f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF39
	.byte	0x1
	.value	0x830
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xba6b
	.uleb128 0x38
	.long	0xbba4
	.byte	0x1
	.string	"walk_vtables"
	.byte	0x1
	.value	0x840
	.byte	0x1
	.long	0x2d8
	.long	.LFB72
	.long	.LFE72
	.long	.LLST52
	.uleb128 0x3a
	.string	"p"
	.byte	0x1
	.value	0x83d
	.long	0x962b
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"f"
	.byte	0x1
	.value	0x83e
	.long	0x9660
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x83f
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"wgd"
	.byte	0x1
	.value	0x841
	.long	0xba6b
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x3f
	.long	0xbc1d
	.string	"walk_namespaces_r"
	.byte	0x1
	.value	0x851
	.byte	0x1
	.long	0x2d8
	.long	.LFB73
	.long	.LFE73
	.long	.LLST53
	.uleb128 0x34
	.long	.LASF92
	.byte	0x1
	.value	0x84e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"f"
	.byte	0x1
	.value	0x84f
	.long	0x9693
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x850
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF39
	.byte	0x1
	.value	0x852
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.string	"current"
	.byte	0x1
	.value	0x853
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x38
	.long	0xbc64
	.byte	0x1
	.string	"walk_namespaces"
	.byte	0x1
	.value	0x864
	.byte	0x1
	.long	0x2d8
	.long	.LFB74
	.long	.LFE74
	.long	.LLST54
	.uleb128 0x3a
	.string	"f"
	.byte	0x1
	.value	0x862
	.long	0x9693
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x863
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x3f
	.long	0xbd17
	.string	"walk_globals_r"
	.byte	0x1
	.value	0x870
	.byte	0x1
	.long	0x2d8
	.long	.LFB75
	.long	.LFE75
	.long	.LLST55
	.uleb128 0x34
	.long	.LASF92
	.byte	0x1
	.value	0x86e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x86f
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"wgd"
	.byte	0x1
	.value	0x871
	.long	0xbb3e
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x872
	.long	0x962b
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"f"
	.byte	0x1
	.value	0x873
	.long	0x9660
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x874
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x875
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF39
	.byte	0x1
	.value	0x876
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x36
	.long	.LBB17
	.long	.LBE17
	.uleb128 0x35
	.string	"glbl"
	.byte	0x1
	.value	0x87c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xbd77
	.byte	0x1
	.string	"walk_globals"
	.byte	0x1
	.value	0x893
	.byte	0x1
	.long	0x2d8
	.long	.LFB76
	.long	.LFE76
	.long	.LLST56
	.uleb128 0x3a
	.string	"p"
	.byte	0x1
	.value	0x890
	.long	0x962b
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"f"
	.byte	0x1
	.value	0x891
	.long	0x9660
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x892
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"wgd"
	.byte	0x1
	.value	0x894
	.long	0xba6b
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x38
	.long	0xbe22
	.byte	0x1
	.string	"wrapup_globals_for_namespace"
	.byte	0x1
	.value	0x8a4
	.byte	0x1
	.long	0x2d8
	.long	.LFB77
	.long	.LFE77
	.long	.LLST57
	.uleb128 0x34
	.long	.LASF92
	.byte	0x1
	.value	0x8a2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x8a3
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x8a5
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"statics"
	.byte	0x1
	.value	0x8a6
	.long	0x6cfc
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"vec"
	.byte	0x1
	.value	0x8a7
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"len"
	.byte	0x1
	.value	0x8a8
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"last_time"
	.byte	0x1
	.value	0x8a9
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xbe81
	.string	"bt_print_entry"
	.byte	0x1
	.value	0x8bf
	.byte	0x1
	.long	.LFB78
	.long	.LFE78
	.long	.LLST58
	.uleb128 0x34
	.long	.LASF85
	.byte	0x1
	.value	0x8be
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x8be
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x8c0
	.long	0x83f
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"len"
	.byte	0x1
	.value	0x8c1
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xbee4
	.byte	0x1
	.string	"print_binding_level"
	.byte	0x1
	.value	0x8e3
	.byte	0x1
	.long	.LFB79
	.long	.LFE79
	.long	.LLST59
	.uleb128 0x3a
	.string	"lvl"
	.byte	0x1
	.value	0x8e2
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x8e4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x8e5
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"len"
	.byte	0x1
	.value	0x8e5
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x39
	.long	0xbf35
	.byte	0x1
	.string	"print_other_binding_stack"
	.byte	0x1
	.value	0x92d
	.byte	0x1
	.long	.LFB80
	.long	.LFE80
	.long	.LLST60
	.uleb128 0x3a
	.string	"stack"
	.byte	0x1
	.value	0x92c
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x92e
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xbf6d
	.byte	0x1
	.string	"print_binding_stack"
	.byte	0x1
	.value	0x93a
	.byte	0x1
	.long	.LFB81
	.long	.LFE81
	.long	.LLST61
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x93b
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xbfd3
	.byte	0x1
	.string	"cxx_scope_find_binding_for_name"
	.byte	0x1
	.value	0x978
	.byte	0x1
	.long	0x7e0d
	.long	.LFB83
	.long	.LFE83
	.long	.LLST62
	.uleb128 0x34
	.long	.LASF57
	.byte	0x1
	.value	0x977
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x977
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x979
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x3f
	.long	0xc049
	.string	"find_binding"
	.byte	0x1
	.value	0x95c
	.byte	0x1
	.long	0x7e0d
	.long	.LFB82
	.long	.LFE82
	.long	.LLST63
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x95b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF57
	.byte	0x1
	.value	0x95b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"front"
	.byte	0x1
	.value	0x95b
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"iter"
	.byte	0x1
	.value	0x95d
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"prev"
	.byte	0x1
	.value	0x95e
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xc0a2
	.byte	0x1
	.string	"binding_for_name"
	.byte	0x1
	.value	0x98b
	.byte	0x1
	.long	0x7e0d
	.long	.LFB84
	.long	.LFE84
	.long	.LLST64
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x98a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF57
	.byte	0x1
	.value	0x98a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF39
	.byte	0x1
	.value	0x98c
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xc0fa
	.byte	0x1
	.string	"namespace_binding"
	.byte	0x1
	.value	0x9a3
	.byte	0x1
	.long	0x1e4
	.long	.LFB85
	.long	.LFE85
	.long	.LLST65
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x9a2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF57
	.byte	0x1
	.value	0x9a2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x9a4
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xc161
	.byte	0x1
	.string	"set_namespace_binding"
	.byte	0x1
	.value	0x9b1
	.byte	0x1
	.long	.LFB86
	.long	.LFE86
	.long	.LLST66
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x9ae
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF57
	.byte	0x1
	.value	0x9af
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"val"
	.byte	0x1
	.value	0x9b0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x9b2
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xc1f1
	.byte	0x1
	.string	"push_namespace"
	.byte	0x1
	.value	0x9c3
	.byte	0x1
	.long	.LFB87
	.long	.LFE87
	.long	.LLST67
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x9c2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x9c4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"need_new"
	.byte	0x1
	.value	0x9c5
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"implicit_use"
	.byte	0x1
	.value	0x9c6
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"global"
	.byte	0x1
	.value	0x9c7
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a1e
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.19818
	.byte	0x0
	.uleb128 0x3f
	.long	0xc23b
	.string	"binding_table_new"
	.byte	0x1
	.value	0x18b
	.byte	0x1
	.long	0x7e13
	.long	.LFB19
	.long	.LFE19
	.long	.LLST68
	.uleb128 0x34
	.long	.LASF62
	.byte	0x1
	.value	0x18a
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF86
	.byte	0x1
	.value	0x18c
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xc270
	.byte	0x1
	.string	"pop_namespace"
	.byte	0x1
	.value	0xa19
	.byte	0x1
	.long	.LFB88
	.long	.LFE88
	.long	.LLST69
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a19
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.19924
	.byte	0x0
	.uleb128 0x39
	.long	0xc2ab
	.byte	0x1
	.string	"push_nested_namespace"
	.byte	0x1
	.value	0xa26
	.byte	0x1
	.long	.LFB89
	.long	.LFE89
	.long	.LLST70
	.uleb128 0x3a
	.string	"ns"
	.byte	0x1
	.value	0xa25
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0xc2e5
	.byte	0x1
	.string	"pop_nested_namespace"
	.byte	0x1
	.value	0xa36
	.byte	0x1
	.long	.LFB90
	.long	.LFE90
	.long	.LLST71
	.uleb128 0x3a
	.string	"ns"
	.byte	0x1
	.value	0xa35
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3f
	.long	0xc3b1
	.string	"store_bindings"
	.byte	0x1
	.value	0xa5c
	.byte	0x1
	.long	0x851e
	.long	.LFB91
	.long	.LFE91
	.long	.LLST72
	.uleb128 0x3a
	.string	"names"
	.byte	0x1
	.value	0xa5b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF64
	.byte	0x1
	.value	0xa5b
	.long	0x851e
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0xa5d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"search_bindings"
	.byte	0x1
	.value	0xa5e
	.long	0x851e
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x42
	.string	"skip_it"
	.byte	0x1
	.value	0xa81
	.long	.L975
	.uleb128 0x3b
	.long	0xc3a0
	.long	.LBB18
	.long	.LBE18
	.uleb128 0x35
	.string	"id"
	.byte	0x1
	.value	0xa63
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"saved"
	.byte	0x1
	.value	0xa64
	.long	0x851e
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"t1"
	.byte	0x1
	.value	0xa65
	.long	0x851e
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a14
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.19987
	.byte	0x0
	.uleb128 0x39
	.long	0xc446
	.byte	0x1
	.string	"maybe_push_to_top_level"
	.byte	0x1
	.value	0xa8a
	.byte	0x1
	.long	.LFB92
	.long	.LFE92
	.long	.LLST73
	.uleb128 0x3a
	.string	"pseudo"
	.byte	0x1
	.value	0xa89
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"s"
	.byte	0x1
	.value	0xa8b
	.long	0x8524
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0xa8c
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF64
	.byte	0x1
	.value	0xa8d
	.long	0x851e
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"need_pop"
	.byte	0x1
	.value	0xa8e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB19
	.long	.LBE19
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0xaa7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x41
	.byte	0x1
	.string	"push_to_top_level"
	.byte	0x1
	.value	0xacb
	.byte	0x1
	.long	.LFB93
	.long	.LFE93
	.long	.LLST74
	.uleb128 0x39
	.long	0xc4ca
	.byte	0x1
	.string	"pop_from_top_level"
	.byte	0x1
	.value	0xad1
	.byte	0x1
	.long	.LFB94
	.long	.LFE94
	.long	.LLST75
	.uleb128 0x35
	.string	"s"
	.byte	0x1
	.value	0xad2
	.long	0x8524
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"saved"
	.byte	0x1
	.value	0xad3
	.long	0x851e
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB20
	.long	.LBE20
	.uleb128 0x35
	.string	"id"
	.byte	0x1
	.value	0xae0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xc570
	.string	"set_identifier_type_value_with_scope"
	.byte	0x1
	.value	0xb03
	.byte	0x1
	.long	.LFB95
	.long	.LFE95
	.long	.LLST76
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0xb00
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0xb01
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"b"
	.byte	0x1
	.value	0xb02
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3b
	.long	0xc556
	.long	.LBB21
	.long	.LBE21
	.uleb128 0x35
	.string	"old_type_value"
	.byte	0x1
	.value	0xb08
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x36
	.long	.LBB22
	.long	.LBE22
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0xb0e
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x39
	.long	0xc5be
	.byte	0x1
	.string	"set_identifier_type_value"
	.byte	0x1
	.value	0xb1c
	.byte	0x1
	.long	.LFB96
	.long	.LFE96
	.long	.LLST77
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0xb1a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0xb1b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xc5fd
	.byte	0x1
	.string	"identifier_type_value"
	.byte	0x1
	.value	0xb25
	.byte	0x1
	.long	0x1e4
	.long	.LFB97
	.long	.LFE97
	.long	.LLST78
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0xb24
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x41
	.byte	0x1
	.string	"pop_everything"
	.byte	0x1
	.value	0xb3b
	.byte	0x1
	.long	.LFB98
	.long	.LFE98
	.long	.LLST79
	.uleb128 0x3f
	.long	0xc6c7
	.string	"maybe_process_template_type_declaration"
	.byte	0x1
	.value	0xb57
	.byte	0x1
	.long	0x1e4
	.long	.LFB99
	.long	.LFE99
	.long	.LLST80
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0xb54
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF93
	.byte	0x1
	.value	0xb55
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"b"
	.byte	0x1
	.value	0xb56
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0xb58
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3b
	.long	0xc6b6
	.long	.LBB23
	.long	.LBE23
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0xb6e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a0f
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.20195
	.byte	0x0
	.uleb128 0x33
	.long	0xc74b
	.string	"binding_table_insert"
	.byte	0x1
	.value	0x1af
	.byte	0x1
	.long	.LFB21
	.long	.LFE21
	.long	.LLST81
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x1ae
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1ae
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1ae
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"hash"
	.byte	0x1
	.value	0x1b0
	.long	0xaab4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x1b1
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x1b2
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x3f
	.long	0xc7a5
	.string	"binding_entry_make"
	.byte	0x1
	.value	0x13b
	.byte	0x1
	.long	0x7e7e
	.long	.LFB15
	.long	.LFE15
	.long	.LLST82
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x13a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x13a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x13c
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xc805
	.byte	0x1
	.string	"create_implicit_typedef"
	.byte	0x1
	.value	0xb9b
	.byte	0x1
	.long	0x1e4
	.long	.LFB100
	.long	.LFE100
	.long	.LLST83
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0xb99
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0xb9a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0xb9c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xc874
	.string	"push_local_name"
	.byte	0x1
	.value	0xbae
	.byte	0x1
	.long	.LFB101
	.long	.LFE101
	.long	.LLST84
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0xbad
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0xbaf
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"nelts"
	.byte	0x1
	.value	0xbaf
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0xbb0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0xbb0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x39
	.long	0xc93a
	.byte	0x1
	.string	"pushtag"
	.byte	0x1
	.value	0xbd9
	.byte	0x1
	.long	.LFB102
	.long	.LFE102
	.long	.LLST85
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0xbd7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0xbd7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF93
	.byte	0x1
	.value	0xbd8
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0xbda
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -32
	.uleb128 0x3b
	.long	0xc922
	.long	.LBB24
	.long	.LBE24
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0xbf2
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x35
	.string	"in_class"
	.byte	0x1
	.value	0xbf3
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF32
	.byte	0x1
	.value	0xbf4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x36
	.long	.LBB25
	.long	.LBE25
	.uleb128 0x35
	.string	"cs"
	.byte	0x1
	.value	0xbf8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.byte	0x0
	.uleb128 0x36
	.long	.LBB26
	.long	.LBE26
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0xc4a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xc973
	.byte	0x1
	.string	"make_anon_name"
	.byte	0x1
	.value	0xc5a
	.byte	0x1
	.long	0x1e4
	.long	.LFB103
	.long	.LFE103
	.long	.LLST86
	.uleb128 0x35
	.string	"buf"
	.byte	0x1
	.value	0xc5b
	.long	0x82a
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.byte	0x0
	.uleb128 0x39
	.long	0xc9be
	.byte	0x1
	.string	"clear_anon_tags"
	.byte	0x1
	.value	0xc66
	.byte	0x1
	.long	.LFB104
	.long	.LFE104
	.long	.LLST87
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0xc67
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -8
	.uleb128 0x35
	.string	"last_cnt"
	.byte	0x1
	.value	0xc68
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	last_cnt.20526
	.byte	0x0
	.uleb128 0x38
	.long	0xca54
	.byte	0x1
	.string	"decls_match"
	.byte	0x1
	.value	0xc80
	.byte	0x1
	.long	0x2d8
	.long	.LFB105
	.long	.LFE105
	.long	.LLST88
	.uleb128 0x34
	.long	.LASF94
	.byte	0x1
	.value	0xc7f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF95
	.byte	0x1
	.value	0xc7f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF96
	.byte	0x1
	.value	0xc81
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x36
	.long	.LBB27
	.long	.LBE27
	.uleb128 0x35
	.string	"f1"
	.byte	0x1
	.value	0xc8d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"f2"
	.byte	0x1
	.value	0xc8e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"p1"
	.byte	0x1
	.value	0xc8f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"p2"
	.byte	0x1
	.value	0xc90
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xcb0f
	.string	"warn_extern_redeclared_static"
	.byte	0x1
	.value	0xced
	.byte	0x1
	.long	.LFB106
	.long	.LFE106
	.long	.LLST89
	.uleb128 0x34
	.long	.LASF94
	.byte	0x1
	.value	0xcec
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF95
	.byte	0x1
	.value	0xcec
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0xcf3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.string	"explicit_extern_static_warning"
	.byte	0x1
	.value	0xcee
	.long	0x538d
	.byte	0x5
	.byte	0x3
	.long	explicit_extern_static_warning.20748
	.uleb128 0x35
	.string	"implicit_extern_static_warning"
	.byte	0x1
	.value	0xcf0
	.long	0x538d
	.byte	0x5
	.byte	0x3
	.long	implicit_extern_static_warning.20749
	.byte	0x0
	.uleb128 0x38
	.long	0xcced
	.byte	0x1
	.string	"duplicate_decls"
	.byte	0x1
	.value	0xd1b
	.byte	0x1
	.long	0x2d8
	.long	.LFB107
	.long	.LFE107
	.long	.LLST90
	.uleb128 0x34
	.long	.LASF94
	.byte	0x1
	.value	0xd1a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF95
	.byte	0x1
	.value	0xd1a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"olddecl_uid"
	.byte	0x1
	.value	0xd1c
	.long	0x3b1
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.uleb128 0x35
	.string	"olddecl_friend"
	.byte	0x1
	.value	0xd1d
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x37
	.long	.LASF96
	.byte	0x1
	.value	0xd1d
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x35
	.string	"new_defines_function"
	.byte	0x1
	.value	0xd1e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x3b
	.long	0xcc0d
	.long	.LBB28
	.long	.LBE28
	.uleb128 0x35
	.string	"errmsg"
	.byte	0x1
	.value	0xe2b
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x36
	.long	.LBB29
	.long	.LBE29
	.uleb128 0x35
	.string	"t1"
	.byte	0x1
	.value	0xe54
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x35
	.string	"t2"
	.byte	0x1
	.value	0xe55
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0xe56
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0xcc3f
	.long	.LBB30
	.long	.LBE30
	.uleb128 0x37
	.long	.LASF97
	.byte	0x1
	.value	0xeb4
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -84
	.uleb128 0x35
	.string	"oldtype"
	.byte	0x1
	.value	0xeb5
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -80
	.byte	0x0
	.uleb128 0x3b
	.long	0xcc6f
	.long	.LBB31
	.long	.LBE31
	.uleb128 0x35
	.string	"oldtype"
	.byte	0x1
	.value	0xedb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x37
	.long	.LASF97
	.byte	0x1
	.value	0xedc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.byte	0x0
	.uleb128 0x3b
	.long	0xcc8c
	.long	.LBB32
	.long	.LBE32
	.uleb128 0x37
	.long	.LASF98
	.byte	0x1
	.value	0xf43
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x3b
	.long	0xccdc
	.long	.LBB33
	.long	.LBE33
	.uleb128 0x35
	.string	"function_size"
	.byte	0x1
	.value	0xfd9
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x36
	.long	.LBB34
	.long	.LBE34
	.uleb128 0x35
	.string	"tmpl"
	.byte	0x1
	.value	0xff9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF89
	.byte	0x1
	.value	0xffa
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a0a
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.20810
	.byte	0x0
	.uleb128 0x38
	.long	0xce6e
	.byte	0x1
	.string	"pushdecl"
	.byte	0x1
	.value	0x1028
	.byte	0x1
	.long	0x1e4
	.long	.LFB108
	.long	.LFE108
	.long	.LLST91
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x1027
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1029
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -60
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x102a
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -56
	.uleb128 0x35
	.string	"need_new_binding"
	.byte	0x1
	.value	0x102b
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x3b
	.long	0xce5d
	.long	.LBB35
	.long	.LBE35
	.uleb128 0x35
	.string	"different_binding_level"
	.byte	0x1
	.value	0x1054
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x3b
	.long	0xcda4
	.long	.LBB36
	.long	.LBE36
	.uleb128 0x35
	.string	"match"
	.byte	0x1
	.value	0x107e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.byte	0x0
	.uleb128 0x3b
	.long	0xcdc1
	.long	.LBB37
	.long	.LBE37
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x10f9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.byte	0x0
	.uleb128 0x3b
	.long	0xcdde
	.long	.LBB38
	.long	.LBE38
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x111d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x36
	.long	.LBB39
	.long	.LBE39
	.uleb128 0x35
	.string	"oldlocal"
	.byte	0x1
	.value	0x115d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"oldglobal"
	.byte	0x1
	.value	0x115e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x3b
	.long	0xce2b
	.long	.LBB40
	.long	.LBE40
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x1177
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x36
	.long	.LBB41
	.long	.LBE41
	.uleb128 0x35
	.string	"err"
	.byte	0x1
	.value	0x11a4
	.long	0x5397
	.byte	0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x36
	.long	.LBB42
	.long	.LBE42
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x11ac
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a05
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.21952
	.byte	0x0
	.uleb128 0x3f
	.long	0xced4
	.string	"pushdecl_with_scope"
	.byte	0x1
	.value	0x11e8
	.byte	0x1
	.long	0x1e4
	.long	.LFB109
	.long	.LFE109
	.long	.LLST92
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x11e6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF58
	.byte	0x1
	.value	0x11e7
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x11e9
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF66
	.byte	0x1
	.value	0x11ea
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xcf82
	.byte	0x1
	.string	"pushdecl_namespace_level"
	.byte	0x1
	.value	0x120f
	.byte	0x1
	.long	0x1e4
	.long	.LFB110
	.long	.LFE110
	.long	.LLST93
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x120e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x1210
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1211
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB43
	.long	.LBE43
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x121a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"newval"
	.byte	0x1
	.value	0x121b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"ptr"
	.byte	0x1
	.value	0x121c
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB44
	.long	.LBE44
	.uleb128 0x37
	.long	.LASF91
	.byte	0x1
	.value	0x121f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.long	0xcfcd
	.string	"pushdecl_top_level_1"
	.byte	0x1
	.value	0x123e
	.byte	0x1
	.long	0x1e4
	.long	.LFB111
	.long	.LFE111
	.long	.LLST94
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x123d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x123d
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xd008
	.byte	0x1
	.string	"pushdecl_top_level"
	.byte	0x1
	.value	0x124c
	.byte	0x1
	.long	0x1e4
	.long	.LFB112
	.long	.LFE112
	.long	.LLST95
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x124b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0xd05d
	.byte	0x1
	.string	"pushdecl_top_level_and_finish"
	.byte	0x1
	.value	0x1256
	.byte	0x1
	.long	0x1e4
	.long	.LFB113
	.long	.LFE113
	.long	.LLST96
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x1255
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x1255
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xd0d4
	.byte	0x1
	.string	"pushdecl_class_level"
	.byte	0x1
	.value	0x125f
	.byte	0x1
	.long	0x5397
	.long	.LFB114
	.long	.LFE114
	.long	.LLST97
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x125e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x1260
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"is_valid"
	.byte	0x1
	.value	0x1261
	.long	0x5397
	.byte	0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x36
	.long	.LBB45
	.long	.LBE45
	.uleb128 0x35
	.string	"f"
	.byte	0x1
	.value	0x1275
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xd11d
	.byte	0x1
	.string	"maybe_push_decl"
	.byte	0x1
	.value	0x128a
	.byte	0x1
	.long	0x1e4
	.long	.LFB115
	.long	.LFE115
	.long	.LLST98
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1289
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x128b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xd1a7
	.byte	0x1
	.string	"push_class_level_binding"
	.byte	0x1
	.value	0x12a7
	.byte	0x1
	.long	0x5397
	.long	.LFB116
	.long	.LFE116
	.long	.LLST99
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x12a6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"x"
	.byte	0x1
	.value	0x12a6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x12a8
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x36
	.long	.LBB46
	.long	.LBE46
	.uleb128 0x35
	.string	"shadow"
	.byte	0x1
	.value	0x12bf
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF99
	.byte	0x1
	.value	0x12c0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xd20f
	.byte	0x1
	.string	"push_using_decl"
	.byte	0x1
	.value	0x12fd
	.byte	0x1
	.long	0x1e4
	.long	.LFB117
	.long	.LFE117
	.long	.LLST100
	.uleb128 0x34
	.long	.LASF57
	.byte	0x1
	.value	0x12fb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x12fc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x12fe
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12a00
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.22998
	.byte	0x0
	.uleb128 0x38
	.long	0xd281
	.byte	0x1
	.string	"push_using_directive"
	.byte	0x1
	.value	0x1318
	.byte	0x1
	.long	0x1e4
	.long	.LFB118
	.long	.LFE118
	.long	.LLST101
	.uleb128 0x3a
	.string	"used"
	.byte	0x1
	.value	0x1317
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"ud"
	.byte	0x1
	.value	0x1319
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"iter"
	.byte	0x1
	.value	0x131a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"ancestor"
	.byte	0x1
	.value	0x131a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xd397
	.byte	0x1
	.string	"push_overloaded_decl"
	.byte	0x1
	.value	0x1345
	.byte	0x1
	.long	0x1e4
	.long	.LFB119
	.long	.LFE119
	.long	.LLST102
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1343
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x1344
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x1346
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"old"
	.byte	0x1
	.value	0x1347
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"new_binding"
	.byte	0x1
	.value	0x1348
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"doing_global"
	.byte	0x1
	.value	0x1349
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x3b
	.long	0xd336
	.long	.LBB47
	.long	.LBE47
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1356
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x3b
	.long	0xd36b
	.long	.LBB48
	.long	.LBE48
	.uleb128 0x35
	.string	"tmp"
	.byte	0x1
	.value	0x135f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB49
	.long	.LBE49
	.uleb128 0x35
	.string	"fn"
	.byte	0x1
	.value	0x1363
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0xd386
	.long	.LBB50
	.long	.LBE50
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x1394
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x129fb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.23137
	.byte	0x0
	.uleb128 0x38
	.long	0xd3ea
	.byte	0x1
	.string	"implicitly_declare"
	.byte	0x1
	.value	0x13bc
	.byte	0x1
	.long	0x1e4
	.long	.LFB120
	.long	.LFE120
	.long	.LLST103
	.uleb128 0x3a
	.string	"functionid"
	.byte	0x1
	.value	0x13bb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x13bd
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -12
	.byte	0x0
	.uleb128 0x3f
	.long	0xd43e
	.string	"redeclaration_error_message"
	.byte	0x1
	.value	0x13e1
	.byte	0x1
	.long	0x2c5
	.long	.LFB121
	.long	.LFE121
	.long	.LLST104
	.uleb128 0x34
	.long	.LASF94
	.byte	0x1
	.value	0x13e0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF95
	.byte	0x1
	.value	0x13e0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x3f
	.long	0xd498
	.string	"make_label_decl"
	.byte	0x1
	.value	0x142f
	.byte	0x1
	.long	0x1e4
	.long	.LFB122
	.long	.LFE122
	.long	.LLST105
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x142d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"local_p"
	.byte	0x1
	.value	0x142e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1430
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x33
	.long	0xd4e4
	.string	"use_label"
	.byte	0x1
	.value	0x144e
	.byte	0x1
	.long	.LFB123
	.long	.LFE123
	.long	.LLST106
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x144d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x36
	.long	.LBB51
	.long	.LBE51
	.uleb128 0x35
	.string	"new_ent"
	.byte	0x1
	.value	0x1453
	.long	0x85b3
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xd538
	.byte	0x1
	.string	"lookup_label"
	.byte	0x1
	.value	0x1467
	.byte	0x1
	.long	0x1e4
	.long	.LFB124
	.long	.LFE124
	.long	.LLST107
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x1466
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1468
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"ent"
	.byte	0x1
	.value	0x1469
	.long	0x866c
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xd584
	.byte	0x1
	.string	"declare_local_label"
	.byte	0x1
	.value	0x1491
	.byte	0x1
	.long	0x1e4
	.long	.LFB125
	.long	.LFE125
	.long	.LLST108
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x1490
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1492
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xd5be
	.string	"decl_jump_unsafe"
	.byte	0x1
	.value	0x14a8
	.byte	0x1
	.long	0x2d8
	.long	.LFB126
	.long	.LFE126
	.long	.LLST109
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x14a7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x33
	.long	0xd6b8
	.string	"check_previous_goto_1"
	.byte	0x1
	.value	0x14c5
	.byte	0x1
	.long	.LFB127
	.long	.LFE127
	.long	.LLST110
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x14c0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF58
	.byte	0x1
	.value	0x14c1
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"names"
	.byte	0x1
	.value	0x14c2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3a
	.string	"file"
	.byte	0x1
	.value	0x14c3
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3a
	.string	"line"
	.byte	0x1
	.value	0x14c4
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x37
	.long	.LASF100
	.byte	0x1
	.value	0x14c6
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"saw_eh"
	.byte	0x1
	.value	0x14c7
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x14c8
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x36
	.long	.LBB52
	.long	.LBE52
	.uleb128 0x35
	.string	"new_decls"
	.byte	0x1
	.value	0x14cb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"old_decls"
	.byte	0x1
	.value	0x14cc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB53
	.long	.LBE53
	.uleb128 0x35
	.string	"problem"
	.byte	0x1
	.value	0x14d0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xd6f1
	.string	"check_previous_goto"
	.byte	0x1
	.value	0x1503
	.byte	0x1
	.long	.LFB128
	.long	.LFE128
	.long	.LLST111
	.uleb128 0x3a
	.string	"use"
	.byte	0x1
	.value	0x1502
	.long	0x85b3
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x33
	.long	0xd728
	.string	"check_switch_goto"
	.byte	0x1
	.value	0x150c
	.byte	0x1
	.long	.LFB129
	.long	.LFE129
	.long	.LLST112
	.uleb128 0x34
	.long	.LASF58
	.byte	0x1
	.value	0x150b
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x33
	.long	0xd78b
	.string	"check_previous_gotos"
	.byte	0x1
	.value	0x1516
	.byte	0x1
	.long	.LFB130
	.long	.LFE130
	.long	.LLST113
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1515
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"usep"
	.byte	0x1
	.value	0x1517
	.long	0xd78b
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB54
	.long	.LBE54
	.uleb128 0x35
	.string	"use"
	.byte	0x1
	.value	0x151e
	.long	0x85b3
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x85b3
	.uleb128 0x39
	.long	0xd813
	.byte	0x1
	.string	"check_goto"
	.byte	0x1
	.value	0x152f
	.byte	0x1
	.long	.LFB131
	.long	.LFE131
	.long	.LLST114
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x152e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF100
	.byte	0x1
	.value	0x1530
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"bad"
	.byte	0x1
	.value	0x1531
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"lab"
	.byte	0x1
	.value	0x1532
	.long	0x866c
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB55
	.long	.LBE55
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x1553
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"u"
	.byte	0x1
	.value	0x1554
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xd894
	.byte	0x1
	.string	"define_label"
	.byte	0x1
	.value	0x156d
	.byte	0x1
	.long	0x1e4
	.long	.LFB132
	.long	.LFE132
	.long	.LLST115
	.uleb128 0x34
	.long	.LASF63
	.byte	0x1
	.value	0x156a
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"line"
	.byte	0x1
	.value	0x156b
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x156c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x156e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"ent"
	.byte	0x1
	.value	0x156f
	.long	0x866c
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x1570
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.byte	0x0
	.uleb128 0xd
	.long	0xd8e6
	.string	"cp_switch"
	.byte	0x10
	.byte	0x1
	.value	0x1596
	.uleb128 0x20
	.long	.LASF58
	.byte	0x1
	.value	0x1597
	.long	0x7e07
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0x20
	.long	.LASF42
	.byte	0x1
	.value	0x1598
	.long	0xd8e6
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0x20
	.long	.LASF101
	.byte	0x1
	.value	0x159a
	.long	0x1e4
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.uleb128 0xe
	.string	"cases"
	.byte	0x1
	.value	0x15a0
	.long	0x683c
	.byte	0x2
	.byte	0x23
	.uleb128 0xc
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xd894
	.uleb128 0x39
	.long	0xd92b
	.byte	0x1
	.string	"push_switch"
	.byte	0x1
	.value	0x15b1
	.byte	0x1
	.long	.LFB133
	.long	.LFE133
	.long	.LLST116
	.uleb128 0x34
	.long	.LASF101
	.byte	0x1
	.value	0x15b0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x15b2
	.long	0xd8e6
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xd95b
	.byte	0x1
	.string	"pop_switch"
	.byte	0x1
	.value	0x15bd
	.byte	0x1
	.long	.LFB134
	.long	.LFE134
	.long	.LLST117
	.uleb128 0x35
	.string	"cs"
	.byte	0x1
	.value	0x15be
	.long	0xd8e6
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xd9f8
	.byte	0x1
	.string	"finish_case_label"
	.byte	0x1
	.value	0x15cd
	.byte	0x1
	.long	0x1e4
	.long	.LFB135
	.long	.LFE135
	.long	.LLST118
	.uleb128 0x3a
	.string	"low_value"
	.byte	0x1
	.value	0x15cb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"high_value"
	.byte	0x1
	.value	0x15cc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"cond"
	.byte	0x1
	.value	0x15ce
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"r"
	.byte	0x1
	.value	0x15ce
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x15cf
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB56
	.long	.LBE56
	.uleb128 0x35
	.string	"label"
	.byte	0x1
	.value	0x15df
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x3e
	.byte	0x1
	.string	"getdecls"
	.byte	0x1
	.value	0x1601
	.byte	0x1
	.long	0x1e4
	.long	.LFB136
	.long	.LFE136
	.long	.LLST119
	.uleb128 0x33
	.long	0xda47
	.string	"storedecls"
	.byte	0x1
	.value	0x160c
	.byte	0x1
	.long	.LFB137
	.long	.LFE137
	.long	.LLST120
	.uleb128 0x34
	.long	.LASF89
	.byte	0x1
	.value	0x160b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0xda85
	.byte	0x1
	.string	"cxx_remember_type_decls"
	.byte	0x1
	.value	0x1615
	.byte	0x1
	.long	.LFB138
	.long	.LFE138
	.long	.LLST121
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x1614
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3f
	.long	0xdad5
	.string	"follow_tag_typedef"
	.byte	0x1
	.value	0x1634
	.byte	0x1
	.long	0x1e4
	.long	.LFB139
	.long	.LFE139
	.long	.LLST122
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1633
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"original"
	.byte	0x1
	.value	0x1635
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xdc25
	.string	"lookup_tag"
	.byte	0x1
	.value	0x1654
	.byte	0x1
	.long	0x1e4
	.long	.LFB140
	.long	.LFE140
	.long	.LLST123
	.uleb128 0x3a
	.string	"form"
	.byte	0x1
	.value	0x1650
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1651
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF67
	.byte	0x1
	.value	0x1652
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3a
	.string	"thislevel_only"
	.byte	0x1
	.value	0x1653
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x1655
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -44
	.uleb128 0x35
	.string	"allow_template_parms_p"
	.byte	0x1
	.value	0x1658
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"type_is_anonymous"
	.byte	0x1
	.value	0x1659
	.long	0x5397
	.byte	0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x36
	.long	.LBB57
	.long	.LBE57
	.uleb128 0x35
	.string	"tail"
	.byte	0x1
	.value	0x165f
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -40
	.uleb128 0x3b
	.long	0xdbc5
	.long	.LBB58
	.long	.LBE58
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1662
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x3b
	.long	0xdbf1
	.long	.LBB59
	.long	.LBE59
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x166c
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"old"
	.byte	0x1
	.value	0x166e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x36
	.long	.LBB60
	.long	.LBE60
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x1693
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB61
	.long	.LBE61
	.uleb128 0x37
	.long	.LASF0
	.byte	0x1
	.value	0x1696
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.long	0xdc99
	.string	"binding_table_find_anon_type"
	.byte	0x1
	.value	0x1cc
	.byte	0x1
	.long	0x1e4
	.long	.LFB23
	.long	.LFE23
	.long	.LLST124
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x1cb
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1cb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"hash"
	.byte	0x1
	.value	0x1cd
	.long	0xaab4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x1ce
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x3f
	.long	0xdd0c
	.string	"lookup_tag_reverse"
	.byte	0x1
	.value	0x16cf
	.byte	0x1
	.long	0x1e4
	.long	.LFB141
	.long	.LFE141
	.long	.LLST125
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x16cd
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x16ce
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x16d0
	.long	0x7e07
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB62
	.long	.LBE62
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x16d6
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.long	0xddad
	.string	"binding_table_reverse_maybe_remap"
	.byte	0x1
	.value	0x1da
	.byte	0x1
	.long	0x7e7e
	.long	.LFB24
	.long	.LFE24
	.long	.LLST126
	.uleb128 0x34
	.long	.LASF86
	.byte	0x1
	.value	0x1d9
	.long	0x7e13
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1d9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1d9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF62
	.byte	0x1
	.value	0x1db
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF85
	.byte	0x1
	.value	0x1dc
	.long	0x7e7e
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x1dd
	.long	0xa9bb
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x1de
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -12
	.byte	0x0
	.uleb128 0x38
	.long	0xde41
	.byte	0x1
	.string	"lookup_namespace_name"
	.byte	0x1
	.value	0x16e4
	.byte	0x1
	.long	0x1e4
	.long	.LFB142
	.long	.LFE142
	.long	.LLST127
	.uleb128 0x34
	.long	.LASF92
	.byte	0x1
	.value	0x16e3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x16e3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"val"
	.byte	0x1
	.value	0x16e5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"template_id"
	.byte	0x1
	.value	0x16e6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x16e7
	.long	0x7aa2
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x3c
	.long	.LASF88
	.long	0x129f6
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.24225
	.byte	0x0
	.uleb128 0x3f
	.long	0xde93
	.string	"typename_hash"
	.byte	0x1
	.value	0x1737
	.byte	0x1
	.long	0x6472
	.long	.LFB143
	.long	.LFE143
	.long	.LLST128
	.uleb128 0x3a
	.string	"k"
	.byte	0x1
	.value	0x1736
	.long	0x860
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"hash"
	.byte	0x1
	.value	0x1738
	.long	0x6472
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1739
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3f
	.long	0xdf12
	.string	"typename_compare"
	.byte	0x1
	.value	0x1747
	.byte	0x1
	.long	0x2d8
	.long	.LFB144
	.long	.LFE144
	.long	.LLST129
	.uleb128 0x3a
	.string	"k1"
	.byte	0x1
	.value	0x1745
	.long	0x860
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"k2"
	.byte	0x1
	.value	0x1746
	.long	0x860
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"t1"
	.byte	0x1
	.value	0x1748
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"t2"
	.byte	0x1
	.value	0x1749
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"d1"
	.byte	0x1
	.value	0x174a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"d2"
	.byte	0x1
	.value	0x174b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xdfaa
	.byte	0x1
	.string	"build_typename_type"
	.byte	0x1
	.value	0x176a
	.byte	0x1
	.long	0x1e4
	.long	.LFB145
	.long	.LFE145
	.long	.LLST130
	.uleb128 0x34
	.long	.LASF32
	.byte	0x1
	.value	0x1766
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1767
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF102
	.byte	0x1
	.value	0x1768
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3a
	.string	"base_type"
	.byte	0x1
	.value	0x1769
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x176b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x176c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"e"
	.byte	0x1
	.value	0x176d
	.long	0x78f
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xe05d
	.byte	0x1
	.string	"make_typename_type"
	.byte	0x1
	.value	0x1797
	.byte	0x1
	.long	0x1e4
	.long	.LFB146
	.long	.LFE146
	.long	.LLST131
	.uleb128 0x34
	.long	.LASF32
	.byte	0x1
	.value	0x1795
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1795
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF103
	.byte	0x1
	.value	0x1796
	.long	0x9572
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF102
	.byte	0x1
	.value	0x1798
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3b
	.long	0xe031
	.long	.LBB63
	.long	.LBE63
	.uleb128 0x35
	.string	"tmpl"
	.byte	0x1
	.value	0x17c8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3b
	.long	0xe04c
	.long	.LBB64
	.long	.LBE64
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x17e3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x129e1
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.24418
	.byte	0x0
	.uleb128 0x38
	.long	0xe109
	.byte	0x1
	.string	"make_unbound_class_template"
	.byte	0x1
	.value	0x1826
	.byte	0x1
	.long	0x1e4
	.long	.LFB147
	.long	.LFE147
	.long	.LLST132
	.uleb128 0x34
	.long	.LASF32
	.byte	0x1
	.value	0x1824
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1824
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF103
	.byte	0x1
	.value	0x1825
	.long	0x9572
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1827
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"d"
	.byte	0x1
	.value	0x1828
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x3b
	.long	0xe0f8
	.long	.LBB65
	.long	.LBE65
	.uleb128 0x35
	.string	"tmpl"
	.byte	0x1
	.value	0x1834
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x129dc
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.24606
	.byte	0x0
	.uleb128 0x3f
	.long	0xe15c
	.string	"select_decl"
	.byte	0x1
	.value	0x185e
	.byte	0x1
	.long	0x1e4
	.long	.LFB148
	.long	.LFE148
	.long	.LLST133
	.uleb128 0x34
	.long	.LASF54
	.byte	0x1
	.value	0x185d
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x185d
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"val"
	.byte	0x1
	.value	0x185f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xe23c
	.byte	0x1
	.string	"unqualified_namespace_lookup"
	.byte	0x1
	.value	0x1885
	.byte	0x1
	.long	0x1e4
	.long	.LFB149
	.long	.LFE149
	.long	.LLST134
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1882
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x1883
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"spacesp"
	.byte	0x1
	.value	0x1884
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"initial"
	.byte	0x1
	.value	0x1886
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x37
	.long	.LASF57
	.byte	0x1
	.value	0x1887
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"siter"
	.byte	0x1
	.value	0x1888
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x1889
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"val"
	.byte	0x1
	.value	0x188a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x188b
	.long	0x7aa2
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x36
	.long	.LBB66
	.long	.LBE66
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x1894
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.long	0xe281
	.string	"lookup_flags"
	.byte	0x1
	.value	0x18c8
	.byte	0x1
	.long	0x2d8
	.long	.LFB150
	.long	.LFE150
	.long	.LLST135
	.uleb128 0x34
	.long	.LASF104
	.byte	0x1
	.value	0x18c7
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF105
	.byte	0x1
	.value	0x18c7
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x3f
	.long	0xe2c8
	.string	"qualify_lookup"
	.byte	0x1
	.value	0x18d9
	.byte	0x1
	.long	0x1e4
	.long	.LFB151
	.long	.LFE151
	.long	.LLST136
	.uleb128 0x3a
	.string	"val"
	.byte	0x1
	.value	0x18d7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x18d8
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x33
	.long	0xe342
	.string	"warn_about_implicit_typename_lookup"
	.byte	0x1
	.value	0x18ef
	.byte	0x1
	.long	.LFB152
	.long	.LFE152
	.long	.LLST137
	.uleb128 0x34
	.long	.LASF106
	.byte	0x1
	.value	0x18ed
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF54
	.byte	0x1
	.value	0x18ee
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"subtype"
	.byte	0x1
	.value	0x18f0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x18f1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xe39b
	.byte	0x1
	.string	"check_for_out_of_scope_variable"
	.byte	0x1
	.value	0x190c
	.byte	0x1
	.long	0x1e4
	.long	.LFB153
	.long	.LFE153
	.long	.LLST138
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x190b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF91
	.byte	0x1
	.value	0x190d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xe531
	.string	"lookup_name_real"
	.byte	0x1
	.value	0x1950
	.byte	0x1
	.long	0x1e4
	.long	.LFB154
	.long	.LFE154
	.long	.LLST139
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x194e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF104
	.byte	0x1
	.value	0x194f
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"nonclass"
	.byte	0x1
	.value	0x194f
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF105
	.byte	0x1
	.value	0x194f
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1951
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x35
	.string	"val"
	.byte	0x1
	.value	0x1952
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x35
	.string	"yylex"
	.byte	0x1
	.value	0x1953
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x35
	.string	"from_obj"
	.byte	0x1
	.value	0x1954
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x37
	.long	.LASF48
	.byte	0x1
	.value	0x1955
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.string	"val_is_implicit_typename"
	.byte	0x1
	.value	0x1956
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"iter"
	.byte	0x1
	.value	0x1957
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x42
	.string	"done"
	.byte	0x1
	.value	0x1a09
	.long	.L2995
	.uleb128 0x3b
	.long	0xe4cc
	.long	.LBB67
	.long	.LBE67
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1962
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x36
	.long	.LBB68
	.long	.LBE68
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x197f
	.long	0x7aa2
	.byte	0x3
	.byte	0x91
	.sleb128 -84
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0xe517
	.long	.LBB69
	.long	.LBE69
	.uleb128 0x37
	.long	.LASF58
	.byte	0x1
	.value	0x19b9
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x36
	.long	.LBB70
	.long	.LBE70
	.uleb128 0x37
	.long	.LASF65
	.byte	0x1
	.value	0x19bf
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"operators"
	.byte	0x1
	.value	0x19c0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.byte	0x0
	.uleb128 0x36
	.long	.LBB71
	.long	.LBE71
	.uleb128 0x37
	.long	.LASF54
	.byte	0x1
	.value	0x19d8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xe570
	.byte	0x1
	.string	"lookup_name_nonclass"
	.byte	0x1
	.value	0x1a2b
	.byte	0x1
	.long	0x1e4
	.long	.LFB155
	.long	.LFE155
	.long	.LLST140
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1a2a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0xe5c2
	.byte	0x1
	.string	"lookup_function_nonclass"
	.byte	0x1
	.value	0x1a33
	.byte	0x1
	.long	0x1e4
	.long	.LFB156
	.long	.LFE156
	.long	.LLST141
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1a31
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF107
	.byte	0x1
	.value	0x1a32
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xe607
	.byte	0x1
	.string	"lookup_name_namespace_only"
	.byte	0x1
	.value	0x1a3a
	.byte	0x1
	.long	0x1e4
	.long	.LFB157
	.long	.LFE157
	.long	.LLST142
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1a39
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0xe64c
	.byte	0x1
	.string	"lookup_name"
	.byte	0x1
	.value	0x1a43
	.byte	0x1
	.long	0x1e4
	.long	.LFB158
	.long	.LFE158
	.long	.LLST143
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1a41
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF104
	.byte	0x1
	.value	0x1a42
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xe6aa
	.byte	0x1
	.string	"lookup_name_current_level"
	.byte	0x1
	.value	0x1a4d
	.byte	0x1
	.long	0x1e4
	.long	.LFB159
	.long	.LFE159
	.long	.LLST144
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1a4c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x1a4e
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1a4f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xe726
	.byte	0x1
	.string	"lookup_type_current_level"
	.byte	0x1
	.value	0x1a76
	.byte	0x1
	.long	0x1e4
	.long	.LFB160
	.long	.LFE160
	.long	.LLST145
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1a75
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1a77
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x3b
	.long	0xe715
	.long	.LBB72
	.long	.LBE72
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x1a80
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x129c7
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.25360
	.byte	0x0
	.uleb128 0x41
	.byte	0x1
	.string	"begin_only_namespace_names"
	.byte	0x1
	.value	0x1a92
	.byte	0x1
	.long	.LFB161
	.long	.LFE161
	.long	.LLST146
	.uleb128 0x41
	.byte	0x1
	.string	"end_only_namespace_names"
	.byte	0x1
	.value	0x1a98
	.byte	0x1
	.long	.LFB162
	.long	.LFE162
	.long	.LLST147
	.uleb128 0x39
	.long	0xe80f
	.byte	0x1
	.string	"record_builtin_type"
	.byte	0x1
	.value	0x1aa6
	.byte	0x1
	.long	.LFB163
	.long	.LFE163
	.long	.LLST148
	.uleb128 0x3a
	.string	"rid_index"
	.byte	0x1
	.value	0x1aa3
	.long	0x726b
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1aa4
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1aa5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"rname"
	.byte	0x1
	.value	0x1aa7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"tname"
	.byte	0x1
	.value	0x1aa7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"tdecl"
	.byte	0x1
	.value	0x1aa8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xe87e
	.string	"record_builtin_java_type"
	.byte	0x1
	.value	0x1ad1
	.byte	0x1
	.long	0x1e4
	.long	.LFB164
	.long	.LFE164
	.long	.LLST149
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1acf
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF24
	.byte	0x1
	.value	0x1ad0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1ad2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1ad2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xe8d5
	.string	"record_unknown_type"
	.byte	0x1
	.value	0x1af2
	.byte	0x1
	.long	.LFB165
	.long	.LFE165
	.long	.LLST150
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1af0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1af1
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1af3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x2f
	.long	0xe91c
	.long	.LASF108
	.byte	0xc
	.byte	0x1
	.value	0x1b01
	.uleb128 0x20
	.long	.LASF31
	.byte	0x1
	.value	0x1b03
	.long	0x538d
	.byte	0x2
	.byte	0x23
	.uleb128 0x0
	.uleb128 0xe
	.string	"node"
	.byte	0x1
	.value	0x1b05
	.long	0xe91c
	.byte	0x2
	.byte	0x23
	.uleb128 0x4
	.uleb128 0xe
	.string	"ctor_or_dtor_p"
	.byte	0x1
	.value	0x1b07
	.long	0x83a
	.byte	0x2
	.byte	0x23
	.uleb128 0x8
	.byte	0x0
	.uleb128 0xb
	.long	0x53c4
	.uleb128 0x2e
	.long	.LASF108
	.byte	0x1
	.value	0x1b08
	.long	0xe8d5
	.uleb128 0x33
	.long	0xe999
	.string	"initialize_predefined_identifiers"
	.byte	0x1
	.value	0x1b0e
	.byte	0x1
	.long	.LFB166
	.long	.LFE166
	.long	.LLST151
	.uleb128 0x35
	.string	"pid"
	.byte	0x1
	.value	0x1b0f
	.long	0xe999
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"predefined_identifiers"
	.byte	0x1
	.value	0x1b12
	.long	0x129b2
	.byte	0x5
	.byte	0x3
	.long	predefined_identifiers.25492
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0xe99f
	.uleb128 0xb
	.long	0xe921
	.uleb128 0x39
	.long	0xeaa5
	.byte	0x1
	.string	"cxx_init_decl_processing"
	.byte	0x1
	.value	0x1b37
	.byte	0x1
	.long	.LFB167
	.long	.LFE167
	.long	.LLST152
	.uleb128 0x35
	.string	"void_ftype"
	.byte	0x1
	.value	0x1b38
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"void_ftype_ptr"
	.byte	0x1
	.value	0x1b39
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x3b
	.long	0xea27
	.long	.LBB73
	.long	.LBE73
	.uleb128 0x35
	.string	"vfunc_type"
	.byte	0x1
	.value	0x1bbb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x3b
	.long	0xea94
	.long	.LBB74
	.long	.LBE74
	.uleb128 0x35
	.string	"bad_alloc_type_node"
	.byte	0x1
	.value	0x1bd8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF97
	.byte	0x1
	.value	0x1bd8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"deltype"
	.byte	0x1
	.value	0x1bd8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"ptr_ftype_sizetype"
	.byte	0x1
	.value	0x1bd9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x1299d
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.25509
	.byte	0x0
	.uleb128 0x38
	.long	0xeb1c
	.byte	0x1
	.string	"cp_fname_init"
	.byte	0x1
	.value	0x1c10
	.byte	0x1
	.long	0x1e4
	.long	.LFB168
	.long	.LFE168
	.long	.LLST153
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1c0f
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"domain"
	.byte	0x1
	.value	0x1c11
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1c12
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF84
	.byte	0x1
	.value	0x1c13
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF18
	.byte	0x1
	.value	0x1c14
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3f
	.long	0xeb98
	.string	"cp_make_fname_decl"
	.byte	0x1
	.value	0x1c34
	.byte	0x1
	.long	0x1e4
	.long	.LFB169
	.long	.LFE169
	.long	.LLST154
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x1c32
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"type_dep"
	.byte	0x1
	.value	0x1c33
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x1c35
	.long	0x538d
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF84
	.byte	0x1
	.value	0x1c37
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1c38
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xec43
	.string	"builtin_function_1"
	.byte	0x1
	.value	0x1c62
	.byte	0x1
	.long	0x1e4
	.long	.LFB170
	.long	.LFE170
	.long	.LLST155
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1c5b
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1c5c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF32
	.byte	0x1
	.value	0x1c5d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF0
	.byte	0x1
	.value	0x1c5e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3a
	.string	"class"
	.byte	0x1
	.value	0x1c5f
	.long	0x147b
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x3a
	.string	"libname"
	.byte	0x1
	.value	0x1c60
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x34
	.long	.LASF109
	.byte	0x1
	.value	0x1c61
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1c63
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x38
	.long	0xeccf
	.byte	0x1
	.string	"builtin_function"
	.byte	0x1
	.value	0x1c97
	.byte	0x1
	.long	0x1e4
	.long	.LFB171
	.long	.LFE171
	.long	.LLST156
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1c91
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1c92
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF0
	.byte	0x1
	.value	0x1c93
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3a
	.string	"class"
	.byte	0x1
	.value	0x1c94
	.long	0x147b
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3a
	.string	"libname"
	.byte	0x1
	.value	0x1c95
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x34
	.long	.LASF109
	.byte	0x1
	.value	0x1c96
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.byte	0x0
	.uleb128 0x3f
	.long	0xed37
	.string	"build_library_fn_1"
	.byte	0x1
	.value	0x1cad
	.byte	0x1
	.long	0x1e4
	.long	.LFB172
	.long	.LFE172
	.long	.LLST157
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1caa
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF50
	.byte	0x1
	.value	0x1cab
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1cac
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"fn"
	.byte	0x1
	.value	0x1cae
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xed81
	.byte	0x1
	.string	"build_library_fn"
	.byte	0x1
	.value	0x1cc0
	.byte	0x1
	.long	0x1e4
	.long	.LFB173
	.long	.LFE173
	.long	.LLST158
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1cbe
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1cbf
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x3f
	.long	0xedea
	.string	"build_cp_library_fn"
	.byte	0x1
	.value	0x1ccb
	.byte	0x1
	.long	0x1e4
	.long	.LFB174
	.long	.LFE174
	.long	.LLST159
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1cc8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF50
	.byte	0x1
	.value	0x1cc9
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1cca
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"fn"
	.byte	0x1
	.value	0x1ccc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xee38
	.byte	0x1
	.string	"build_library_fn_ptr"
	.byte	0x1
	.value	0x1cdb
	.byte	0x1
	.long	0x1e4
	.long	.LFB175
	.long	.LFE175
	.long	.LLST160
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1cd9
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1cda
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xee89
	.byte	0x1
	.string	"build_cp_library_fn_ptr"
	.byte	0x1
	.value	0x1ce6
	.byte	0x1
	.long	0x1e4
	.long	.LFB176
	.long	.LFE176
	.long	.LLST161
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1ce4
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1ce5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0xeee0
	.byte	0x1
	.string	"push_library_fn"
	.byte	0x1
	.value	0x1cf0
	.byte	0x1
	.long	0x1e4
	.long	.LFB177
	.long	.LFE177
	.long	.LLST162
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1cef
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1cef
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"fn"
	.byte	0x1
	.value	0x1cf1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xef39
	.string	"push_cp_library_fn"
	.byte	0x1
	.value	0x1cfd
	.byte	0x1
	.long	0x1e4
	.long	.LFB178
	.long	.LFE178
	.long	.LLST163
	.uleb128 0x34
	.long	.LASF50
	.byte	0x1
	.value	0x1cfb
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1cfc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"fn"
	.byte	0x1
	.value	0x1cfe
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xef96
	.byte	0x1
	.string	"push_void_library_fn"
	.byte	0x1
	.value	0x1d0b
	.byte	0x1
	.long	0x1e4
	.long	.LFB179
	.long	.LFE179
	.long	.LLST164
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1d0a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF110
	.byte	0x1
	.value	0x1d0a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1d0c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xeff3
	.byte	0x1
	.string	"push_throw_library_fn"
	.byte	0x1
	.value	0x1d16
	.byte	0x1
	.long	0x1e4
	.long	.LFB180
	.long	.LFE180
	.long	.LLST165
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x1d15
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1d15
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"fn"
	.byte	0x1
	.value	0x1d17
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0xf037
	.byte	0x1
	.string	"cxx_insert_default_attributes"
	.byte	0x1
	.value	0x1d23
	.byte	0x1
	.long	.LFB181
	.long	.LFE181
	.long	.LLST166
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1d22
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0xf0a5
	.byte	0x1
	.string	"fixup_anonymous_aggr"
	.byte	0x1
	.value	0x1d38
	.byte	0x1
	.long	.LFB182
	.long	.LFE182
	.long	.LLST167
	.uleb128 0x3a
	.string	"t"
	.byte	0x1
	.value	0x1d37
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"q"
	.byte	0x1
	.value	0x1d39
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB75
	.long	.LBE75
	.uleb128 0x37
	.long	.LASF111
	.byte	0x1
	.value	0x1d58
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1d58
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xf182
	.byte	0x1
	.string	"check_tag_decl"
	.byte	0x1
	.value	0x1d76
	.byte	0x1
	.long	0x1e4
	.long	.LFB183
	.long	.LFE183
	.long	.LLST168
	.uleb128 0x34
	.long	.LASF112
	.byte	0x1
	.value	0x1d75
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"found_type"
	.byte	0x1
	.value	0x1d77
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"saw_friend"
	.byte	0x1
	.value	0x1d78
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"saw_typedef"
	.byte	0x1
	.value	0x1d79
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"ob_modifier"
	.byte	0x1
	.value	0x1d7a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x35
	.string	"link"
	.byte	0x1
	.value	0x1d7b
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -32
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1d7c
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x3b
	.long	0xf171
	.long	.LBB76
	.long	.LBE76
	.uleb128 0x37
	.long	.LASF20
	.byte	0x1
	.value	0x1d80
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12988
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.25978
	.byte	0x0
	.uleb128 0x39
	.long	0xf1d9
	.byte	0x1
	.string	"shadow_tag"
	.byte	0x1
	.value	0x1df6
	.byte	0x1
	.long	.LFB184
	.long	.LFE184
	.long	.LLST169
	.uleb128 0x34
	.long	.LASF112
	.byte	0x1
	.value	0x1df5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x1df7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB77
	.long	.LBE77
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1e07
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0xf23f
	.byte	0x1
	.string	"groktypename"
	.byte	0x1
	.value	0x1e13
	.byte	0x1
	.long	0x1e4
	.long	.LFB185
	.long	.LFE185
	.long	.LLST170
	.uleb128 0x34
	.long	.LASF106
	.byte	0x1
	.value	0x1e12
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"specs"
	.byte	0x1
	.value	0x1e14
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x37
	.long	.LASF109
	.byte	0x1
	.value	0x1e14
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1e15
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x38
	.long	0xf32f
	.byte	0x1
	.string	"start_decl"
	.byte	0x1
	.value	0x1e34
	.byte	0x1
	.long	0x1e4
	.long	.LFB186
	.long	.LFE186
	.long	.LLST171
	.uleb128 0x34
	.long	.LASF113
	.byte	0x1
	.value	0x1e31
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF112
	.byte	0x1
	.value	0x1e31
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF114
	.byte	0x1
	.value	0x1e32
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF26
	.byte	0x1
	.value	0x1e33
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3a
	.string	"prefix_attributes"
	.byte	0x1
	.value	0x1e33
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x1e35
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1e36
	.long	0x1e4
	.byte	0x1
	.byte	0x52
	.uleb128 0x35
	.string	"tem"
	.byte	0x1
	.value	0x1e36
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF32
	.byte	0x1
	.value	0x1e37
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x3b
	.long	0xf315
	.long	.LBB78
	.long	.LBE78
	.uleb128 0x37
	.long	.LASF111
	.byte	0x1
	.value	0x1ea5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x36
	.long	.LBB79
	.long	.LBE79
	.uleb128 0x37
	.long	.LASF111
	.byte	0x1
	.value	0x1ebe
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x39
	.long	0xf380
	.byte	0x1
	.string	"start_decl_1"
	.byte	0x1
	.value	0x1ef2
	.byte	0x1
	.long	.LFB187
	.long	.LFE187
	.long	.LLST172
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1ef1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1ef3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF114
	.byte	0x1
	.value	0x1ef4
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xf3f9
	.string	"grok_reference_init"
	.byte	0x1
	.value	0x1f40
	.byte	0x1
	.long	0x1e4
	.long	.LFB188
	.long	.LFE188
	.long	.LLST173
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1f3f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x1f3f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x1f3f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF115
	.byte	0x1
	.value	0x1f3f
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x35
	.string	"tmp"
	.byte	0x1
	.value	0x1f41
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xf4a1
	.string	"maybe_deduce_size_from_array_init"
	.byte	0x1
	.value	0x1f83
	.byte	0x1
	.long	.LFB189
	.long	.LFE189
	.long	.LLST174
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1f81
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x1f82
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1f84
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x36
	.long	.LBB80
	.long	.LBE80
	.uleb128 0x37
	.long	.LASF116
	.byte	0x1
	.value	0x1f8c
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"initializer"
	.byte	0x1
	.value	0x1f8d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"failure"
	.byte	0x1
	.value	0x1f8e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xf4e5
	.string	"layout_var_decl"
	.byte	0x1
	.value	0x1fae
	.byte	0x1
	.long	.LFB190
	.long	.LFE190
	.long	.LLST175
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1fad
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x1faf
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xf51e
	.string	"maybe_commonize_var"
	.byte	0x1
	.value	0x1fef
	.byte	0x1
	.long	.LFB191
	.long	.LFE191
	.long	.LLST176
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x1fee
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x33
	.long	0xf574
	.string	"check_for_uninitialized_const_var"
	.byte	0x1
	.value	0x2026
	.byte	0x1
	.long	.LFB192
	.long	.LFE192
	.long	.LLST177
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x2025
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x2027
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xf5b6
	.string	"next_initializable_field"
	.byte	0x1
	.value	0x203b
	.byte	0x1
	.long	0x1e4
	.long	.LFB193
	.long	.LFE193
	.long	.LLST178
	.uleb128 0x34
	.long	.LASF111
	.byte	0x1
	.value	0x203a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3f
	.long	0xf70f
	.string	"reshape_init"
	.byte	0x1
	.value	0x2056
	.byte	0x1
	.long	0x1e4
	.long	.LFB194
	.long	.LFE194
	.long	.LLST179
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x2055
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"initp"
	.byte	0x1
	.value	0x2055
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"inits"
	.byte	0x1
	.value	0x2057
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.string	"old_init"
	.byte	0x1
	.value	0x2058
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.string	"old_init_value"
	.byte	0x1
	.value	0x2059
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"new_init"
	.byte	0x1
	.value	0x205a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"brace_enclosed_p"
	.byte	0x1
	.value	0x205b
	.long	0x5397
	.byte	0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x3b
	.long	0xf6a8
	.long	.LBB81
	.long	.LBE81
	.uleb128 0x37
	.long	.LASF111
	.byte	0x1
	.value	0x20ba
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x36
	.long	.LBB82
	.long	.LBE82
	.uleb128 0x35
	.string	"field_init"
	.byte	0x1
	.value	0x20cf
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0xf6fe
	.long	.LBB83
	.long	.LBE83
	.uleb128 0x35
	.string	"index"
	.byte	0x1
	.value	0x20ef
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"max_index"
	.byte	0x1
	.value	0x20f0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB84
	.long	.LBE84
	.uleb128 0x35
	.string	"element_init"
	.byte	0x1
	.value	0x20fb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12983
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.26841
	.byte	0x0
	.uleb128 0x3f
	.long	0xf80b
	.string	"check_initializer"
	.byte	0x1
	.value	0x2120
	.byte	0x1
	.long	0x1e4
	.long	.LFB195
	.long	.LFE195
	.long	.LLST180
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x211f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x211f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x211f
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF115
	.byte	0x1
	.value	0x211f
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x2121
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x42
	.string	"initialize_aggr"
	.byte	0x1
	.value	0x217e
	.long	.L3733
	.uleb128 0x42
	.string	"dont_use_constructor"
	.byte	0x1
	.value	0x218e
	.long	.L3732
	.uleb128 0x3b
	.long	0xf7d7
	.long	.LBB85
	.long	.LBE85
	.uleb128 0x37
	.long	.LASF117
	.byte	0x1
	.value	0x217c
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3b
	.long	0xf7fa
	.long	.LBB86
	.long	.LBE86
	.uleb128 0x35
	.string	"core_type"
	.byte	0x1
	.value	0x2199
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x1296e
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.27038
	.byte	0x0
	.uleb128 0x33
	.long	0xf8a2
	.string	"make_rtl_for_nonlocal_decl"
	.byte	0x1
	.value	0x21b3
	.byte	0x1
	.long	.LFB196
	.long	.LFE196
	.long	.LLST181
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x21b0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x21b1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"asmspec"
	.byte	0x1
	.value	0x21b2
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"toplev"
	.byte	0x1
	.value	0x21b4
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"defer_p"
	.byte	0x1
	.value	0x21b5
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12959
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.27265
	.byte	0x0
	.uleb128 0x39
	.long	0xf90d
	.byte	0x1
	.string	"maybe_inject_for_scope_var"
	.byte	0x1
	.value	0x2209
	.byte	0x1
	.long	.LFB197
	.long	.LFE197
	.long	.LLST182
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x2208
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x36
	.long	.LBB87
	.long	.LBE87
	.uleb128 0x35
	.string	"outer"
	.byte	0x1
	.value	0x2217
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF90
	.byte	0x1
	.value	0x2223
	.long	0x7e0d
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0xf9c3
	.string	"initialize_local_var"
	.byte	0x1
	.value	0x223c
	.byte	0x1
	.long	.LFB198
	.long	.LFE198
	.long	.LLST183
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x223a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x223b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x223d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF115
	.byte	0x1
	.value	0x223e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x3b
	.long	0xf9b2
	.long	.LBB88
	.long	.LBE88
	.uleb128 0x35
	.string	"already_used"
	.byte	0x1
	.value	0x224e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB89
	.long	.LBE89
	.uleb128 0x37
	.long	.LASF117
	.byte	0x1
	.value	0x2256
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12944
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.27461
	.byte	0x0
	.uleb128 0x39
	.long	0xfad3
	.byte	0x1
	.string	"cp_finish_decl"
	.byte	0x1
	.value	0x2285
	.byte	0x1
	.long	.LFB199
	.long	.LFE199
	.long	.LLST184
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x2282
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x2282
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF118
	.byte	0x1
	.value	0x2283
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x2284
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x2286
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"ttype"
	.byte	0x1
	.value	0x2287
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF115
	.byte	0x1
	.value	0x2288
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"asmspec"
	.byte	0x1
	.value	0x2289
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"was_readonly"
	.byte	0x1
	.value	0x228a
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x42
	.string	"finish_end0"
	.byte	0x1
	.value	0x236c
	.long	.L3921
	.uleb128 0x42
	.string	"finish_end"
	.byte	0x1
	.value	0x2387
	.long	.L3940
	.uleb128 0x3b
	.long	0xfac2
	.long	.LBB90
	.long	.LBE90
	.uleb128 0x37
	.long	.LASF32
	.byte	0x1
	.value	0x2372
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x1292f
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.27542
	.byte	0x0
	.uleb128 0x39
	.long	0xfb23
	.byte	0x1
	.string	"finish_decl"
	.byte	0x1
	.value	0x2393
	.byte	0x1
	.long	.LFB200
	.long	.LFE200
	.long	.LLST185
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x2391
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x2391
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF118
	.byte	0x1
	.value	0x2392
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x38
	.long	0xfb7e
	.byte	0x1
	.string	"declare_global_var"
	.byte	0x1
	.value	0x23a2
	.byte	0x1
	.long	0x1e4
	.long	.LFB201
	.long	.LFE201
	.long	.LLST186
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x23a0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x23a1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x23a3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0xfc09
	.string	"get_atexit_node"
	.byte	0x1
	.value	0x23b7
	.byte	0x1
	.long	0x1e4
	.long	.LFB202
	.long	.LFE202
	.long	.LLST187
	.uleb128 0x35
	.string	"atexit_fndecl"
	.byte	0x1
	.value	0x23b8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF119
	.byte	0x1
	.value	0x23b9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"fn_type"
	.byte	0x1
	.value	0x23ba
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"fn_ptr_type"
	.byte	0x1
	.value	0x23bb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x23bc
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3d
	.string	"get_dso_handle_node"
	.byte	0x1
	.value	0x23f6
	.byte	0x1
	.long	0x1e4
	.long	.LFB203
	.long	.LFE203
	.long	.LLST188
	.uleb128 0x3f
	.long	0xfd12
	.string	"start_cleanup_fn"
	.byte	0x1
	.value	0x2406
	.byte	0x1
	.long	0x1e4
	.long	.LFB204
	.long	.LFE204
	.long	.LLST189
	.uleb128 0x35
	.string	"old_interface_only"
	.byte	0x1
	.value	0x2408
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x35
	.string	"old_interface_unknown"
	.byte	0x1
	.value	0x2409
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x240a
	.long	0x82a
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x37
	.long	.LASF110
	.byte	0x1
	.value	0x240b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x37
	.long	.LASF120
	.byte	0x1
	.value	0x240c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x37
	.long	.LASF121
	.byte	0x1
	.value	0x240d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x3b
	.long	0xfcfb
	.long	.LBB91
	.long	.LBE91
	.uleb128 0x35
	.string	"parmdecl"
	.byte	0x1
	.value	0x2431
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.byte	0x0
	.uleb128 0x35
	.string	"counter"
	.byte	0x1
	.value	0x2407
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	counter.27933
	.byte	0x0
	.uleb128 0x40
	.string	"end_cleanup_fn"
	.byte	0x1
	.value	0x2448
	.byte	0x1
	.long	.LFB205
	.long	.LFE205
	.long	.LLST190
	.uleb128 0x39
	.long	0xfdcc
	.byte	0x1
	.string	"register_dtor_fn"
	.byte	0x1
	.value	0x2454
	.byte	0x1
	.long	.LFB206
	.long	.LFE206
	.long	.LLST191
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x2453
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF115
	.byte	0x1
	.value	0x2455
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF122
	.byte	0x1
	.value	0x2456
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF107
	.byte	0x1
	.value	0x2457
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"fcall"
	.byte	0x1
	.value	0x2458
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"saved_flag_access_control"
	.byte	0x1
	.value	0x245a
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0xfea3
	.string	"expand_static_init"
	.byte	0x1
	.value	0x248e
	.byte	0x1
	.long	.LFB207
	.long	.LFE207
	.long	.LLST192
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x248c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF84
	.byte	0x1
	.value	0x248d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF98
	.byte	0x1
	.value	0x248f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3b
	.long	0xfe92
	.long	.LBB92
	.long	.LBE92
	.uleb128 0x37
	.long	.LASF123
	.byte	0x1
	.value	0x24a4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"then_clause"
	.byte	0x1
	.value	0x24a5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"assignment"
	.byte	0x1
	.value	0x24a6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"guard"
	.byte	0x1
	.value	0x24a7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"guard_init"
	.byte	0x1
	.value	0x24a8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x1292a
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.28000
	.byte	0x0
	.uleb128 0x38
	.long	0xfeff
	.byte	0x1
	.string	"start_handler_parms"
	.byte	0x1
	.value	0x24f4
	.byte	0x1
	.long	0x1e4
	.long	.LFB208
	.long	.LFE208
	.long	.LLST193
	.uleb128 0x34
	.long	.LASF112
	.byte	0x1
	.value	0x24f2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF113
	.byte	0x1
	.value	0x24f3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x24f5
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0xfff4
	.byte	0x1
	.string	"complete_array_type"
	.byte	0x1
	.value	0x250c
	.byte	0x1
	.long	0x2d8
	.long	.LFB209
	.long	.LFE209
	.long	.LLST194
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x250a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"initial_value"
	.byte	0x1
	.value	0x250a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF116
	.byte	0x1
	.value	0x250b
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"maxindex"
	.byte	0x1
	.value	0x250d
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -40
	.uleb128 0x37
	.long	.LASF20
	.byte	0x1
	.value	0x250e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x3b
	.long	0xffa8
	.long	.LBB93
	.long	.LBE93
	.uleb128 0x35
	.string	"eltsize"
	.byte	0x1
	.value	0x2520
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x3b
	.long	0xffc6
	.long	.LBB94
	.long	.LBE94
	.uleb128 0x35
	.string	"elts"
	.byte	0x1
	.value	0x2527
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x36
	.long	.LBB95
	.long	.LBE95
	.uleb128 0x35
	.string	"itype"
	.byte	0x1
	.value	0x2549
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"domain"
	.byte	0x1
	.value	0x254a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.long	0x10058
	.string	"member_function_or_else"
	.byte	0x1
	.value	0x256d
	.byte	0x1
	.long	0x2d8
	.long	.LFB210
	.long	.LFE210
	.long	.LLST195
	.uleb128 0x34
	.long	.LASF124
	.byte	0x1
	.value	0x256b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"cur_type"
	.byte	0x1
	.value	0x256b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x256c
	.long	0x957e
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x33
	.long	0x100eb
	.string	"bad_specifiers"
	.byte	0x1
	.value	0x2585
	.byte	0x1
	.long	.LFB211
	.long	.LFE211
	.long	.LLST196
	.uleb128 0x3a
	.string	"object"
	.byte	0x1
	.value	0x2582
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x2583
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF125
	.byte	0x1
	.value	0x2584
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3a
	.string	"quals"
	.byte	0x1
	.value	0x2584
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x34
	.long	.LASF126
	.byte	0x1
	.value	0x2584
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x34
	.long	.LASF127
	.byte	0x1
	.value	0x2584
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x34
	.long	.LASF128
	.byte	0x1
	.value	0x2584
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 24
	.byte	0x0
	.uleb128 0x3f
	.long	0x102a4
	.string	"grokfndecl"
	.byte	0x1
	.value	0x25b2
	.byte	0x1
	.long	0x1e4
	.long	.LFB212
	.long	.LFE212
	.long	.LLST197
	.uleb128 0x34
	.long	.LASF124
	.byte	0x1
	.value	0x25aa
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x25aa
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF113
	.byte	0x1
	.value	0x25ab
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3a
	.string	"orig_declarator"
	.byte	0x1
	.value	0x25ac
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x34
	.long	.LASF125
	.byte	0x1
	.value	0x25ad
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x25ae
	.long	0x957e
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x3a
	.string	"quals"
	.byte	0x1
	.value	0x25af
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 24
	.uleb128 0x34
	.long	.LASF128
	.byte	0x1
	.value	0x25af
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 28
	.uleb128 0x3a
	.string	"check"
	.byte	0x1
	.value	0x25b0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 32
	.uleb128 0x34
	.long	.LASF127
	.byte	0x1
	.value	0x25b0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 36
	.uleb128 0x34
	.long	.LASF129
	.byte	0x1
	.value	0x25b0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 40
	.uleb128 0x34
	.long	.LASF126
	.byte	0x1
	.value	0x25b0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 44
	.uleb128 0x34
	.long	.LASF130
	.byte	0x1
	.value	0x25b0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 48
	.uleb128 0x34
	.long	.LASF131
	.byte	0x1
	.value	0x25b0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 52
	.uleb128 0x34
	.long	.LASF132
	.byte	0x1
	.value	0x25b1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 56
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x25b3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.string	"staticp"
	.byte	0x1
	.value	0x25b4
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.string	"has_default_arg"
	.byte	0x1
	.value	0x25b5
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x25b6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x3b
	.long	0x10276
	.long	.LBB96
	.long	.LBE96
	.uleb128 0x35
	.string	"fns"
	.byte	0x1
	.value	0x2644
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x37
	.long	.LASF107
	.byte	0x1
	.value	0x2645
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x3b
	.long	0x10293
	.long	.LBB97
	.long	.LBE97
	.uleb128 0x37
	.long	.LASF99
	.byte	0x1
	.value	0x2697
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12925
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.28248
	.byte	0x0
	.uleb128 0x3f
	.long	0x10378
	.string	"grokvardecl"
	.byte	0x1
	.value	0x26d7
	.byte	0x1
	.long	0x1e4
	.long	.LFB213
	.long	.LFE213
	.long	.LLST198
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x26d1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x26d2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"specbits_in"
	.byte	0x1
	.value	0x26d3
	.long	0x10378
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF114
	.byte	0x1
	.value	0x26d4
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x3a
	.string	"constp"
	.byte	0x1
	.value	0x26d5
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x34
	.long	.LASF57
	.byte	0x1
	.value	0x26d6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 20
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x26d8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF133
	.byte	0x1
	.value	0x26d9
	.long	0x970c
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x3b
	.long	0x10367
	.long	.LBB98
	.long	.LBE98
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2742
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12910
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.28651
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x970c
	.uleb128 0x38
	.long	0x103fc
	.byte	0x1
	.string	"build_ptrmemfunc_type"
	.byte	0x1
	.value	0x2755
	.byte	0x1
	.long	0x1e4
	.long	.LFB214
	.long	.LFE214
	.long	.LLST199
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x2754
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"fields"
	.byte	0x1
	.value	0x2756
	.long	0x103fc
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2757
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"unqualified_variant"
	.byte	0x1
	.value	0x2758
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x10
	.long	0x1040c
	.long	0x1e4
	.uleb128 0x11
	.long	0x3c8
	.byte	0x3
	.byte	0x0
	.uleb128 0x38
	.long	0x1045f
	.byte	0x1
	.string	"build_ptrmem_type"
	.byte	0x1
	.value	0x2793
	.byte	0x1
	.long	0x1e4
	.long	.LFB215
	.long	.LFE215
	.long	.LLST200
	.uleb128 0x34
	.long	.LASF65
	.byte	0x1
	.value	0x2792
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"member_type"
	.byte	0x1
	.value	0x2792
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0x104b9
	.byte	0x1
	.string	"check_static_variable_definition"
	.byte	0x1
	.value	0x27a0
	.byte	0x1
	.long	0x2d8
	.long	.LFB216
	.long	.LFE216
	.long	.LLST201
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x279e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x279f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.byte	0x0
	.uleb128 0x38
	.long	0x1057d
	.byte	0x1
	.string	"compute_array_index_type"
	.byte	0x1
	.value	0x27c2
	.byte	0x1
	.long	0x1e4
	.long	.LFB217
	.long	.LFE217
	.long	.LLST202
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x27c0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF24
	.byte	0x1
	.value	0x27c1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"itype"
	.byte	0x1
	.value	0x27c3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x3b
	.long	0x10536
	.long	.LBB99
	.long	.LBE99
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x27d1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.uleb128 0x36
	.long	.LBB100
	.long	.LBE100
	.uleb128 0x35
	.string	"old_flag_pedantic_errors"
	.byte	0x1
	.value	0x27f2
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"old_pedantic"
	.byte	0x1
	.value	0x27f3
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.long	0x10605
	.string	"create_array_type_for_decl"
	.byte	0x1
	.value	0x2845
	.byte	0x1
	.long	0x1e4
	.long	.LFB218
	.long	.LFE218
	.long	.LLST203
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x2842
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x2843
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF24
	.byte	0x1
	.value	0x2844
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"itype"
	.byte	0x1
	.value	0x2846
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"error_msg"
	.byte	0x1
	.value	0x2847
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0x10682
	.string	"check_special_function_return_type"
	.byte	0x1
	.value	0x2898
	.byte	0x1
	.long	0x1e4
	.long	.LFB219
	.long	.LFE219
	.long	.LLST204
	.uleb128 0x3a
	.string	"sfk"
	.byte	0x1
	.value	0x2895
	.long	0x94dc
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x2896
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x3a
	.string	"optype"
	.byte	0x1
	.value	0x2897
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128fb
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.29079
	.byte	0x0
	.uleb128 0x38
	.long	0x10f03
	.byte	0x1
	.string	"grokdeclarator"
	.byte	0x1
	.value	0x28fc
	.byte	0x1
	.long	0x1e4
	.long	.LFB220
	.long	.LFE220
	.long	.LLST205
	.uleb128 0x34
	.long	.LASF113
	.byte	0x1
	.value	0x28f8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF112
	.byte	0x1
	.value	0x28f7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF81
	.byte	0x1
	.value	0x28f9
	.long	0x96ae
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF114
	.byte	0x1
	.value	0x28fa
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x34
	.long	.LASF134
	.byte	0x1
	.value	0x28fb
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 16
	.uleb128 0x37
	.long	.LASF133
	.byte	0x1
	.value	0x28fd
	.long	0x970c
	.byte	0x3
	.byte	0x91
	.sleb128 -308
	.uleb128 0x35
	.string	"nclasses"
	.byte	0x1
	.value	0x28fe
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -304
	.uleb128 0x35
	.string	"spec"
	.byte	0x1
	.value	0x28ff
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -300
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x2900
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -312
	.uleb128 0x35
	.string	"longlong"
	.byte	0x1
	.value	0x2901
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -296
	.uleb128 0x35
	.string	"type_quals"
	.byte	0x1
	.value	0x2902
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -292
	.uleb128 0x37
	.long	.LASF125
	.byte	0x1
	.value	0x2903
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -288
	.uleb128 0x35
	.string	"explicitp"
	.byte	0x1
	.value	0x2903
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -284
	.uleb128 0x37
	.long	.LASF127
	.byte	0x1
	.value	0x2903
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -280
	.uleb128 0x37
	.long	.LASF126
	.byte	0x1
	.value	0x2903
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -276
	.uleb128 0x35
	.string	"staticp"
	.byte	0x1
	.value	0x2903
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -272
	.uleb128 0x35
	.string	"explicit_int"
	.byte	0x1
	.value	0x2904
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -268
	.uleb128 0x35
	.string	"explicit_char"
	.byte	0x1
	.value	0x2905
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -264
	.uleb128 0x35
	.string	"defaulted_int"
	.byte	0x1
	.value	0x2906
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -260
	.uleb128 0x35
	.string	"extern_langp"
	.byte	0x1
	.value	0x2907
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -256
	.uleb128 0x35
	.string	"dependant_name"
	.byte	0x1
	.value	0x2908
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -252
	.uleb128 0x35
	.string	"typedef_decl"
	.byte	0x1
	.value	0x290a
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -248
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x290b
	.long	0x2c5
	.byte	0x3
	.byte	0x91
	.sleb128 -244
	.uleb128 0x35
	.string	"typedef_type"
	.byte	0x1
	.value	0x290c
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -240
	.uleb128 0x37
	.long	.LASF130
	.byte	0x1
	.value	0x290d
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -236
	.uleb128 0x35
	.string	"innermost_code"
	.byte	0x1
	.value	0x290e
	.long	0xafc
	.byte	0x3
	.byte	0x91
	.sleb128 -232
	.uleb128 0x35
	.string	"bitfield"
	.byte	0x1
	.value	0x290f
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -228
	.uleb128 0x37
	.long	.LASF84
	.byte	0x1
	.value	0x2916
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -224
	.uleb128 0x35
	.string	"sfk"
	.byte	0x1
	.value	0x291b
	.long	0x94dc
	.byte	0x3
	.byte	0x91
	.sleb128 -220
	.uleb128 0x35
	.string	"dname"
	.byte	0x1
	.value	0x291d
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -216
	.uleb128 0x37
	.long	.LASF124
	.byte	0x1
	.value	0x291e
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -212
	.uleb128 0x35
	.string	"ctor_return_type"
	.byte	0x1
	.value	0x291f
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -208
	.uleb128 0x37
	.long	.LASF48
	.byte	0x1
	.value	0x2920
	.long	0x957e
	.byte	0x3
	.byte	0x91
	.sleb128 -204
	.uleb128 0x35
	.string	"quals"
	.byte	0x1
	.value	0x2921
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -200
	.uleb128 0x37
	.long	.LASF128
	.byte	0x1
	.value	0x2922
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -196
	.uleb128 0x37
	.long	.LASF131
	.byte	0x1
	.value	0x2923
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -192
	.uleb128 0x37
	.long	.LASF132
	.byte	0x1
	.value	0x2924
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -188
	.uleb128 0x35
	.string	"returned_attrs"
	.byte	0x1
	.value	0x2925
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -316
	.uleb128 0x42
	.string	"found"
	.byte	0x1
	.value	0x2b1b
	.long	.L4703
	.uleb128 0x42
	.string	"done_scoping"
	.byte	0x1
	.value	0x2eb3
	.long	.L5193
	.uleb128 0x3b
	.long	0x10a9f
	.long	.LBB101
	.long	.LBE101
	.uleb128 0x37
	.long	.LASF42
	.byte	0x1
	.value	0x2932
	.long	0x53c4
	.byte	0x3
	.byte	0x91
	.sleb128 -184
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x2933
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -344
	.uleb128 0x3b
	.long	0x10a46
	.long	.LBB102
	.long	.LBE102
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x2947
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -320
	.uleb128 0x35
	.string	"rename"
	.byte	0x1
	.value	0x2948
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -180
	.uleb128 0x3b
	.long	0x10a2d
	.long	.LBB103
	.long	.LBE103
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2959
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -176
	.byte	0x0
	.uleb128 0x36
	.long	.LBB104
	.long	.LBE104
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2960
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -172
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10a64
	.long	.LBB105
	.long	.LBE105
	.uleb128 0x37
	.long	.LASF26
	.byte	0x1
	.value	0x2980
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -168
	.byte	0x0
	.uleb128 0x3b
	.long	0x10a82
	.long	.LBB106
	.long	.LBE106
	.uleb128 0x35
	.string	"fns"
	.byte	0x1
	.value	0x29b9
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -164
	.byte	0x0
	.uleb128 0x36
	.long	.LBB107
	.long	.LBE107
	.uleb128 0x35
	.string	"cname"
	.byte	0x1
	.value	0x29eb
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -160
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10abb
	.long	.LBB108
	.long	.LBE108
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x2a7f
	.long	0x7e07
	.byte	0x3
	.byte	0x91
	.sleb128 -156
	.byte	0x0
	.uleb128 0x3b
	.long	0x10afe
	.long	.LBB109
	.long	.LBE109
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x2aa3
	.long	0x2d8
	.byte	0x3
	.byte	0x75
	.sleb128 -340
	.uleb128 0x35
	.string	"id"
	.byte	0x1
	.value	0x2aa4
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -336
	.uleb128 0x36
	.long	.LBB110
	.long	.LBE110
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2b0d
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -332
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10b20
	.long	.LBB111
	.long	.LBE111
	.uleb128 0x35
	.string	"is_main"
	.byte	0x1
	.value	0x2b38
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -152
	.byte	0x0
	.uleb128 0x3b
	.long	0x10b3d
	.long	.LBB112
	.long	.LBE112
	.uleb128 0x35
	.string	"ok"
	.byte	0x1
	.value	0x2b76
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -148
	.byte	0x0
	.uleb128 0x3b
	.long	0x10b6a
	.long	.LBB113
	.long	.LBE113
	.uleb128 0x35
	.string	"tmp"
	.byte	0x1
	.value	0x2c66
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -144
	.uleb128 0x35
	.string	"op"
	.byte	0x1
	.value	0x2c67
	.long	0x2d8
	.byte	0x3
	.byte	0x75
	.sleb128 -328
	.byte	0x0
	.uleb128 0x3b
	.long	0x10b8a
	.long	.LBB114
	.long	.LBE114
	.uleb128 0x35
	.string	"dummy"
	.byte	0x1
	.value	0x2cd8
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -140
	.byte	0x0
	.uleb128 0x3b
	.long	0x10bcf
	.long	.LBB115
	.long	.LBE115
	.uleb128 0x37
	.long	.LASF109
	.byte	0x1
	.value	0x2ce6
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -136
	.uleb128 0x37
	.long	.LASF135
	.byte	0x1
	.value	0x2ce7
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -132
	.uleb128 0x35
	.string	"attr_flags"
	.byte	0x1
	.value	0x2ce8
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -128
	.byte	0x0
	.uleb128 0x3b
	.long	0x10bed
	.long	.LBB116
	.long	.LBE116
	.uleb128 0x37
	.long	.LASF24
	.byte	0x1
	.value	0x2cff
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -324
	.byte	0x0
	.uleb128 0x3b
	.long	0x10c85
	.long	.LBB117
	.long	.LBE117
	.uleb128 0x37
	.long	.LASF119
	.byte	0x1
	.value	0x2d12
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -124
	.uleb128 0x35
	.string	"funcdecl_p"
	.byte	0x1
	.value	0x2d13
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -120
	.uleb128 0x35
	.string	"inner_parms"
	.byte	0x1
	.value	0x2d14
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -116
	.uleb128 0x37
	.long	.LASF135
	.byte	0x1
	.value	0x2d15
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -112
	.uleb128 0x3b
	.long	0x10c6c
	.long	.LBB118
	.long	.LBE118
	.uleb128 0x35
	.string	"tmp_bits"
	.byte	0x1
	.value	0x2d79
	.long	0x970c
	.byte	0x3
	.byte	0x91
	.sleb128 -320
	.byte	0x0
	.uleb128 0x36
	.long	.LBB119
	.long	.LBE119
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2dbf
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -108
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10d1c
	.long	.LBB120
	.long	.LBE120
	.uleb128 0x35
	.string	"typemodlist"
	.byte	0x1
	.value	0x2df4
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -320
	.uleb128 0x35
	.string	"erred"
	.byte	0x1
	.value	0x2df5
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -104
	.uleb128 0x35
	.string	"constp"
	.byte	0x1
	.value	0x2df6
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -100
	.uleb128 0x35
	.string	"volatilep"
	.byte	0x1
	.value	0x2df7
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -96
	.uleb128 0x35
	.string	"restrictp"
	.byte	0x1
	.value	0x2df8
	.long	0x2d8
	.byte	0x3
	.byte	0x91
	.sleb128 -92
	.uleb128 0x36
	.long	.LBB121
	.long	.LBE121
	.uleb128 0x35
	.string	"qualifier"
	.byte	0x1
	.value	0x2dfd
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -88
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10d64
	.long	.LBB122
	.long	.LBE122
	.uleb128 0x35
	.string	"sname"
	.byte	0x1
	.value	0x2e29
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -84
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2e2a
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -80
	.uleb128 0x36
	.long	.LBB123
	.long	.LBE123
	.uleb128 0x37
	.long	.LASF107
	.byte	0x1
	.value	0x2e47
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -76
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10dad
	.long	.LBB124
	.long	.LBE124
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x2f30
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -72
	.uleb128 0x36
	.long	.LBB125
	.long	.LBE125
	.uleb128 0x35
	.string	"oldname"
	.byte	0x1
	.value	0x2f52
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x2f53
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10df2
	.long	.LBB126
	.long	.LBE126
	.uleb128 0x37
	.long	.LASF89
	.byte	0x1
	.value	0x2f95
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x37
	.long	.LASF107
	.byte	0x1
	.value	0x2f96
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x36
	.long	.LBB127
	.long	.LBE127
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x2f9a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10e11
	.long	.LBB128
	.long	.LBE128
	.uleb128 0x35
	.string	"dummy"
	.byte	0x1
	.value	0x2fe4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.byte	0x0
	.uleb128 0x3b
	.long	0x10ef2
	.long	.LBB129
	.long	.LBE129
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x3023
	.long	0x1e4
	.byte	0x3
	.byte	0x75
	.sleb128 -316
	.uleb128 0x3b
	.long	0x10e80
	.long	.LBB130
	.long	.LBE130
	.uleb128 0x37
	.long	.LASF129
	.byte	0x1
	.value	0x303c
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"function_context"
	.byte	0x1
	.value	0x303d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x36
	.long	.LBB131
	.long	.LBE131
	.uleb128 0x37
	.long	.LASF119
	.byte	0x1
	.value	0x3091
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x10e9b
	.long	.LBB132
	.long	.LBE132
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x30d0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x36
	.long	.LBB133
	.long	.LBE133
	.uleb128 0x35
	.string	"original_name"
	.byte	0x1
	.value	0x3133
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF129
	.byte	0x1
	.value	0x3134
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB134
	.long	.LBE134
	.uleb128 0x35
	.string	"invalid_static"
	.byte	0x1
	.value	0x316e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128e6
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.29141
	.byte	0x0
	.uleb128 0x38
	.long	0x10f44
	.byte	0x1
	.string	"parmlist_is_exprlist"
	.byte	0x1
	.value	0x31de
	.byte	0x1
	.long	0x2d8
	.long	.LFB221
	.long	.LFE221
	.long	.LLST206
	.uleb128 0x3a
	.string	"exprs"
	.byte	0x1
	.value	0x31dd
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x33
	.long	0x10f8c
	.string	"require_complete_types_for_parms"
	.byte	0x1
	.value	0x31f8
	.byte	0x1
	.long	.LFB222
	.long	.LFE222
	.long	.LLST207
	.uleb128 0x3a
	.string	"parms"
	.byte	0x1
	.value	0x31f7
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0x10fc5
	.byte	0x1
	.string	"local_variable_p"
	.byte	0x1
	.value	0x320d
	.byte	0x1
	.long	0x2d8
	.long	.LFB223
	.long	.LFE223
	.long	.LLST208
	.uleb128 0x3a
	.string	"t"
	.byte	0x1
	.value	0x320c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0x11004
	.byte	0x1
	.string	"nonstatic_local_decl_p"
	.byte	0x1
	.value	0x3221
	.byte	0x1
	.long	0x2d8
	.long	.LFB224
	.long	.LFE224
	.long	.LLST209
	.uleb128 0x3a
	.string	"t"
	.byte	0x1
	.value	0x3220
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3f
	.long	0x1106c
	.string	"local_variable_p_walkfn"
	.byte	0x1
	.value	0x322f
	.byte	0x1
	.long	0x1e4
	.long	.LFB225
	.long	.LFE225
	.long	.LLST210
	.uleb128 0x3a
	.string	"tp"
	.byte	0x1
	.value	0x322c
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"walk_subtrees"
	.byte	0x1
	.value	0x322d
	.long	0x83f
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF46
	.byte	0x1
	.value	0x322e
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.byte	0x0
	.uleb128 0x38
	.long	0x110e0
	.byte	0x1
	.string	"check_default_argument"
	.byte	0x1
	.value	0x323d
	.byte	0x1
	.long	0x1e4
	.long	.LFB226
	.long	.LFE226
	.long	.LLST211
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x323b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"arg"
	.byte	0x1
	.value	0x323c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"var"
	.byte	0x1
	.value	0x323e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"decl_type"
	.byte	0x1
	.value	0x323f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0x11212
	.string	"grokparms"
	.byte	0x1
	.value	0x3290
	.byte	0x1
	.long	0x1e4
	.long	.LFB227
	.long	.LFE227
	.long	.LLST212
	.uleb128 0x3a
	.string	"first_parm"
	.byte	0x1
	.value	0x328f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF39
	.byte	0x1
	.value	0x3291
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x37
	.long	.LASF89
	.byte	0x1
	.value	0x3292
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.string	"ellipsis"
	.byte	0x1
	.value	0x3293
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.string	"parm"
	.byte	0x1
	.value	0x3294
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x37
	.long	.LASF9
	.byte	0x1
	.value	0x3294
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"any_error"
	.byte	0x1
	.value	0x3295
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3b
	.long	0x11201
	.long	.LBB135
	.long	.LBE135
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x329b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x329c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x37
	.long	.LASF84
	.byte	0x1
	.value	0x329d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"specs"
	.byte	0x1
	.value	0x329e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x37
	.long	.LASF109
	.byte	0x1
	.value	0x329e
	.long	0x1e4
	.byte	0x3
	.byte	0x91
	.sleb128 -68
	.uleb128 0x36
	.long	.LBB136
	.long	.LBE136
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x32df
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"ptr"
	.byte	0x1
	.value	0x32e0
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128e1
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.31862
	.byte	0x0
	.uleb128 0x38
	.long	0x11286
	.byte	0x1
	.string	"copy_fn_p"
	.byte	0x1
	.value	0x331a
	.byte	0x1
	.long	0x2d8
	.long	.LFB228
	.long	.LFE228
	.long	.LLST213
	.uleb128 0x3a
	.string	"d"
	.byte	0x1
	.value	0x3319
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF107
	.byte	0x1
	.value	0x331b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"arg_type"
	.byte	0x1
	.value	0x331c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF39
	.byte	0x1
	.value	0x331d
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128dc
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.32028
	.byte	0x0
	.uleb128 0x39
	.long	0x11304
	.byte	0x1
	.string	"grok_special_member_properties"
	.byte	0x1
	.value	0x3349
	.byte	0x1
	.long	.LFB229
	.long	.LFE229
	.long	.LLST214
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x3348
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3b
	.long	0x112e8
	.long	.LBB137
	.long	.LBE137
	.uleb128 0x35
	.string	"ctor"
	.byte	0x1
	.value	0x334e
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x36
	.long	.LBB138
	.long	.LBE138
	.uleb128 0x35
	.string	"assop"
	.byte	0x1
	.value	0x3368
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0x11367
	.byte	0x1
	.string	"grok_ctor_properties"
	.byte	0x1
	.value	0x337b
	.byte	0x1
	.long	0x2d8
	.long	.LFB230
	.long	.LFE230
	.long	.LLST215
	.uleb128 0x34
	.long	.LASF124
	.byte	0x1
	.value	0x337a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x337a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"ctor_parm"
	.byte	0x1
	.value	0x337c
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3f
	.long	0x1139a
	.string	"ambi_op_p"
	.byte	0x1
	.value	0x339d
	.byte	0x1
	.long	0x2d8
	.long	.LFB231
	.long	.LFE231
	.long	.LLST216
	.uleb128 0x34
	.long	.LASF0
	.byte	0x1
	.value	0x339c
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3f
	.long	0x113ce
	.string	"unary_op_p"
	.byte	0x1
	.value	0x33ab
	.byte	0x1
	.long	0x2d8
	.long	.LFB232
	.long	.LFE232
	.long	.LLST217
	.uleb128 0x34
	.long	.LASF0
	.byte	0x1
	.value	0x33aa
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x39
	.long	0x11545
	.byte	0x1
	.string	"grok_op_properties"
	.byte	0x1
	.value	0x33b8
	.byte	0x1
	.long	.LFB233
	.long	.LFE233
	.long	.LLST218
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x33b6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF127
	.byte	0x1
	.value	0x33b7
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"argtypes"
	.byte	0x1
	.value	0x33b9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -64
	.uleb128 0x35
	.string	"argtype"
	.byte	0x1
	.value	0x33ba
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x35
	.string	"methodp"
	.byte	0x1
	.value	0x33bb
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x37
	.long	.LASF31
	.byte	0x1
	.value	0x33bc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x37
	.long	.LASF50
	.byte	0x1
	.value	0x33bd
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.string	"arity"
	.byte	0x1
	.value	0x33be
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x42
	.string	"foundaggr"
	.byte	0x1
	.value	0x343f
	.long	.L6069
	.uleb128 0x3b
	.long	0x114c4
	.long	.LBB139
	.long	.LBE139
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x3429
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x36
	.long	.LBB140
	.long	.LBE140
	.uleb128 0x35
	.string	"arg"
	.byte	0x1
	.value	0x3431
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x11508
	.long	.LBB141
	.long	.LBE141
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x3449
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x36
	.long	.LBB142
	.long	.LBE142
	.uleb128 0x35
	.string	"ref"
	.byte	0x1
	.value	0x344c
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"what"
	.byte	0x1
	.value	0x344d
	.long	0x2c5
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.long	0x11534
	.long	.LBB143
	.long	.LBE143
	.uleb128 0x35
	.string	"arg"
	.byte	0x1
	.value	0x34ad
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"ret"
	.byte	0x1
	.value	0x34ae
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128c7
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.32209
	.byte	0x0
	.uleb128 0x3f
	.long	0x11587
	.string	"tag_name"
	.byte	0x1
	.value	0x3501
	.byte	0x1
	.long	0x2c5
	.long	.LFB234
	.long	.LFE234
	.long	.LLST219
	.uleb128 0x34
	.long	.LASF0
	.byte	0x1
	.value	0x3500
	.long	0x92dd
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128c2
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.32957
	.byte	0x0
	.uleb128 0x3f
	.long	0x115ec
	.string	"check_elaborated_type_specifier"
	.byte	0x1
	.value	0x3519
	.byte	0x1
	.long	0x1e4
	.long	.LFB235
	.long	.LFE235
	.long	.LLST220
	.uleb128 0x34
	.long	.LASF136
	.byte	0x1
	.value	0x3517
	.long	0x92dd
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x3518
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x351a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0x116f7
	.byte	0x1
	.string	"xref_tag"
	.byte	0x1
	.value	0x353e
	.byte	0x1
	.long	0x1e4
	.long	.LFB236
	.long	.LFE236
	.long	.LLST221
	.uleb128 0x34
	.long	.LASF136
	.byte	0x1
	.value	0x353c
	.long	0x92dd
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x353c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF26
	.byte	0x1
	.value	0x353c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF93
	.byte	0x1
	.value	0x353d
	.long	0x5397
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x37
	.long	.LASF0
	.byte	0x1
	.value	0x353f
	.long	0xafc
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"ref"
	.byte	0x1
	.value	0x3540
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -60
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x3540
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -56
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x3541
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x37
	.long	.LASF32
	.byte	0x1
	.value	0x3542
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x3b
	.long	0x116af
	.long	.LBB144
	.long	.LBE144
	.uleb128 0x37
	.long	.LASF91
	.byte	0x1
	.value	0x3564
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.byte	0x0
	.uleb128 0x3b
	.long	0x116ce
	.long	.LBB145
	.long	.LBE145
	.uleb128 0x35
	.string	"old_b"
	.byte	0x1
	.value	0x35f6
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128bd
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.32994
	.uleb128 0x35
	.string	"explained"
	.byte	0x1
	.value	0x3563
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	explained.32995
	.byte	0x0
	.uleb128 0x38
	.long	0x11765
	.byte	0x1
	.string	"xref_tag_from_type"
	.byte	0x1
	.value	0x3612
	.byte	0x1
	.long	0x1e4
	.long	.LFB237
	.long	.LFE237
	.long	.LLST222
	.uleb128 0x3a
	.string	"old"
	.byte	0x1
	.value	0x3610
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"id"
	.byte	0x1
	.value	0x3610
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF93
	.byte	0x1
	.value	0x3611
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x35
	.string	"tag_kind"
	.byte	0x1
	.value	0x3613
	.long	0x92dd
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0x11872
	.byte	0x1
	.string	"xref_basetypes"
	.byte	0x1
	.value	0x362a
	.byte	0x1
	.long	.LFB238
	.long	.LFE238
	.long	.LLST223
	.uleb128 0x3a
	.string	"ref"
	.byte	0x1
	.value	0x3628
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3a
	.string	"binfo"
	.byte	0x1
	.value	0x3629
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x35
	.string	"binfos"
	.byte	0x1
	.value	0x362d
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -60
	.uleb128 0x35
	.string	"base"
	.byte	0x1
	.value	0x362e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -56
	.uleb128 0x35
	.string	"i"
	.byte	0x1
	.value	0x3630
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.string	"len"
	.byte	0x1
	.value	0x3630
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x37
	.long	.LASF136
	.byte	0x1
	.value	0x3631
	.long	0x92dd
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x36
	.long	.LBB146
	.long	.LBE146
	.uleb128 0x35
	.string	"via_public"
	.byte	0x1
	.value	0x364a
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"via_protected"
	.byte	0x1
	.value	0x3650
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"via_virtual"
	.byte	0x1
	.value	0x3653
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"basetype"
	.byte	0x1
	.value	0x3658
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x35
	.string	"base_binfo"
	.byte	0x1
	.value	0x3659
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0x118c3
	.byte	0x1
	.string	"start_enum"
	.byte	0x1
	.value	0x36d9
	.byte	0x1
	.long	0x1e4
	.long	.LFB239
	.long	.LFE239
	.long	.LLST224
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x36d8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF137
	.byte	0x1
	.value	0x36da
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -24
	.uleb128 0x35
	.string	"b"
	.byte	0x1
	.value	0x36db
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0x119a5
	.byte	0x1
	.string	"finish_enum"
	.byte	0x1
	.value	0x36fb
	.byte	0x1
	.long	.LFB240
	.long	.LFE240
	.long	.LLST225
	.uleb128 0x34
	.long	.LASF137
	.byte	0x1
	.value	0x36fa
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"pair"
	.byte	0x1
	.value	0x36fc
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x35
	.string	"minnode"
	.byte	0x1
	.value	0x36fd
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x35
	.string	"maxnode"
	.byte	0x1
	.value	0x36fe
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x36ff
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x37
	.long	.LASF41
	.byte	0x1
	.value	0x3700
	.long	0x5397
	.byte	0x2
	.byte	0x91
	.sleb128 -13
	.uleb128 0x35
	.string	"lowprec"
	.byte	0x1
	.value	0x3701
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"highprec"
	.byte	0x1
	.value	0x3702
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF27
	.byte	0x1
	.value	0x3703
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x36
	.long	.LBB147
	.long	.LBE147
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x371b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF20
	.byte	0x1
	.value	0x371c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x39
	.long	0x11a47
	.byte	0x1
	.string	"build_enumerator"
	.byte	0x1
	.value	0x3783
	.byte	0x1
	.long	.LFB241
	.long	.LFE241
	.long	.LLST226
	.uleb128 0x34
	.long	.LASF31
	.byte	0x1
	.value	0x3780
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF20
	.byte	0x1
	.value	0x3781
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF137
	.byte	0x1
	.value	0x3782
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF3
	.byte	0x1
	.value	0x3784
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x37
	.long	.LASF32
	.byte	0x1
	.value	0x3785
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x3786
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB148
	.long	.LBE148
	.uleb128 0x35
	.string	"prev_value"
	.byte	0x1
	.value	0x37a2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0x11ace
	.string	"check_function_type"
	.byte	0x1
	.value	0x37ea
	.byte	0x1
	.long	.LFB242
	.long	.LFE242
	.long	.LLST227
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x37e8
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF138
	.byte	0x1
	.value	0x37e9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x37
	.long	.LASF120
	.byte	0x1
	.value	0x37eb
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x35
	.string	"return_type"
	.byte	0x1
	.value	0x37ec
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB149
	.long	.LBE149
	.uleb128 0x37
	.long	.LASF124
	.byte	0x1
	.value	0x37f9
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0x11bf3
	.byte	0x1
	.string	"start_function"
	.byte	0x1
	.value	0x3825
	.byte	0x1
	.long	0x2d8
	.long	.LFB243
	.long	.LFE243
	.long	.LLST228
	.uleb128 0x34
	.long	.LASF112
	.byte	0x1
	.value	0x3823
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF113
	.byte	0x1
	.value	0x3823
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF109
	.byte	0x1
	.value	0x3823
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x3824
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 12
	.uleb128 0x35
	.string	"decl1"
	.byte	0x1
	.value	0x3826
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -52
	.uleb128 0x37
	.long	.LASF124
	.byte	0x1
	.value	0x3827
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -48
	.uleb128 0x37
	.long	.LASF120
	.byte	0x1
	.value	0x3828
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -44
	.uleb128 0x35
	.string	"restype"
	.byte	0x1
	.value	0x3829
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x35
	.string	"doing_friend"
	.byte	0x1
	.value	0x382a
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"bl"
	.byte	0x1
	.value	0x382b
	.long	0x7e07
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x37
	.long	.LASF138
	.byte	0x1
	.value	0x382c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x3b
	.long	0x11bc5
	.long	.LBB150
	.long	.LBE150
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x3918
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x3b
	.long	0x11be2
	.long	.LBB151
	.long	.LBE151
	.uleb128 0x35
	.string	"ctx"
	.byte	0x1
	.value	0x3935
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x128a8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.33853
	.byte	0x0
	.uleb128 0x33
	.long	0x11c8a
	.string	"store_parm_decls"
	.byte	0x1
	.value	0x3992
	.byte	0x1
	.long	.LFB244
	.long	.LFE244
	.long	.LLST229
	.uleb128 0x34
	.long	.LASF138
	.byte	0x1
	.value	0x3991
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF121
	.byte	0x1
	.value	0x3993
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -32
	.uleb128 0x35
	.string	"parm"
	.byte	0x1
	.value	0x3994
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x35
	.string	"nonparms"
	.byte	0x1
	.value	0x3999
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x36
	.long	.LBB152
	.long	.LBE152
	.uleb128 0x35
	.string	"specparms"
	.byte	0x1
	.value	0x39a2
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF42
	.byte	0x1
	.value	0x39a3
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.long	0x11cdf
	.string	"save_function_data"
	.byte	0x1
	.value	0x39df
	.byte	0x1
	.long	.LFB245
	.long	.LFE245
	.long	.LLST230
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x39de
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"f"
	.byte	0x1
	.value	0x39e0
	.long	0x646c
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12893
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.34507
	.byte	0x0
	.uleb128 0x40
	.string	"begin_constructor_body"
	.byte	0x1
	.value	0x3a07
	.byte	0x1
	.long	.LFB246
	.long	.LFE246
	.long	.LLST231
	.uleb128 0x40
	.string	"finish_constructor_body"
	.byte	0x1
	.value	0x3a10
	.byte	0x1
	.long	.LFB247
	.long	.LFE247
	.long	.LLST232
	.uleb128 0x33
	.long	0x11d7a
	.string	"begin_destructor_body"
	.byte	0x1
	.value	0x3a18
	.byte	0x1
	.long	.LFB248
	.long	.LFE248
	.long	.LLST233
	.uleb128 0x37
	.long	.LASF123
	.byte	0x1
	.value	0x3a19
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF122
	.byte	0x1
	.value	0x3a1a
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x33
	.long	0x11dec
	.string	"finish_destructor_body"
	.byte	0x1
	.value	0x3a47
	.byte	0x1
	.long	.LFB249
	.long	.LFE249
	.long	.LLST234
	.uleb128 0x35
	.string	"exprstmt"
	.byte	0x1
	.value	0x3a48
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB153
	.long	.LBE153
	.uleb128 0x37
	.long	.LASF123
	.byte	0x1
	.value	0x3a51
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"virtual_size"
	.byte	0x1
	.value	0x3a52
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.long	0x11e2b
	.byte	0x1
	.string	"begin_function_body"
	.byte	0x1
	.value	0x3a71
	.byte	0x1
	.long	0x1e4
	.long	.LFB250
	.long	.LFE250
	.long	.LLST235
	.uleb128 0x35
	.string	"stmt"
	.byte	0x1
	.value	0x3a72
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0x11e6b
	.byte	0x1
	.string	"finish_function_body"
	.byte	0x1
	.value	0x3a95
	.byte	0x1
	.long	.LFB251
	.long	.LFE251
	.long	.LLST236
	.uleb128 0x3a
	.string	"compstmt"
	.byte	0x1
	.value	0x3a94
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0x11f5b
	.byte	0x1
	.string	"finish_function"
	.byte	0x1
	.value	0x3aae
	.byte	0x1
	.long	0x1e4
	.long	.LFB252
	.long	.LFE252
	.long	.LLST237
	.uleb128 0x34
	.long	.LASF48
	.byte	0x1
	.value	0x3aad
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF121
	.byte	0x1
	.value	0x3aaf
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -40
	.uleb128 0x37
	.long	.LASF120
	.byte	0x1
	.value	0x3ab0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -40
	.uleb128 0x37
	.long	.LASF124
	.byte	0x1
	.value	0x3ab0
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x35
	.string	"inclass_inline"
	.byte	0x1
	.value	0x3ab1
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x35
	.string	"nested"
	.byte	0x1
	.value	0x3ab2
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x3b
	.long	0x11f1e
	.long	.LBB154
	.long	.LBE154
	.uleb128 0x35
	.string	"fnclass"
	.byte	0x1
	.value	0x3abd
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x3b
	.long	0x11f4a
	.long	.LBB155
	.long	.LBE155
	.uleb128 0x35
	.string	"r"
	.byte	0x1
	.value	0x3b0e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"outer"
	.byte	0x1
	.value	0x3b0f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x1287e
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.34635
	.byte	0x0
	.uleb128 0x38
	.long	0x11fbf
	.byte	0x1
	.string	"start_method"
	.byte	0x1
	.value	0x3b94
	.byte	0x1
	.long	0x1e4
	.long	.LFB253
	.long	.LFE253
	.long	.LLST238
	.uleb128 0x34
	.long	.LASF112
	.byte	0x1
	.value	0x3b93
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x34
	.long	.LASF113
	.byte	0x1
	.value	0x3b93
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 4
	.uleb128 0x34
	.long	.LASF134
	.byte	0x1
	.value	0x3b93
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 8
	.uleb128 0x37
	.long	.LASF121
	.byte	0x1
	.value	0x3b95
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x38
	.long	0x1203d
	.byte	0x1
	.string	"finish_method"
	.byte	0x1
	.value	0x3be2
	.byte	0x1
	.long	0x1e4
	.long	.LFB254
	.long	.LFE254
	.long	.LLST239
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x3be1
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF121
	.byte	0x1
	.value	0x3be3
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -32
	.uleb128 0x35
	.string	"old_initial"
	.byte	0x1
	.value	0x3be4
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"link"
	.byte	0x1
	.value	0x3be6
	.long	0x1e4
	.byte	0x2
	.byte	0x75
	.sleb128 -28
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12869
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.35007
	.byte	0x0
	.uleb128 0x39
	.long	0x120b5
	.byte	0x1
	.string	"maybe_register_incomplete_var"
	.byte	0x1
	.value	0x3c17
	.byte	0x1
	.long	.LFB255
	.long	.LFE255
	.long	.LLST240
	.uleb128 0x3a
	.string	"var"
	.byte	0x1
	.value	0x3c16
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x3b
	.long	0x120a4
	.long	.LBB156
	.long	.LBE156
	.uleb128 0x35
	.string	"inner_type"
	.byte	0x1
	.value	0x3c1e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x12864
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.35053
	.byte	0x0
	.uleb128 0x39
	.long	0x12126
	.byte	0x1
	.string	"complete_vars"
	.byte	0x1
	.value	0x3c33
	.byte	0x1
	.long	.LFB256
	.long	.LFE256
	.long	.LLST241
	.uleb128 0x34
	.long	.LASF4
	.byte	0x1
	.value	0x3c32
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"list"
	.byte	0x1
	.value	0x3c34
	.long	0x53c4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x3b
	.long	0x12115
	.long	.LBB157
	.long	.LBE157
	.uleb128 0x35
	.string	"var"
	.byte	0x1
	.value	0x3c3b
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3c
	.long	.LASF88
	.long	0x1284f
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	__FUNCTION__.35106
	.byte	0x0
	.uleb128 0x38
	.long	0x121a0
	.byte	0x1
	.string	"cxx_maybe_build_cleanup"
	.byte	0x1
	.value	0x3c4d
	.byte	0x1
	.long	0x1e4
	.long	.LFB257
	.long	.LFE257
	.long	.LLST242
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x3c4c
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x37
	.long	.LASF4
	.byte	0x1
	.value	0x3c4e
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x36
	.long	.LBB158
	.long	.LBE158
	.uleb128 0x37
	.long	.LASF48
	.byte	0x1
	.value	0x3c52
	.long	0x2d8
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"rval"
	.byte	0x1
	.value	0x3c53
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x41
	.byte	0x1
	.string	"finish_stmt"
	.byte	0x1
	.value	0x3c73
	.byte	0x1
	.long	.LFB258
	.long	.LFE258
	.long	.LLST243
	.uleb128 0x39
	.long	0x12229
	.byte	0x1
	.string	"revert_static_member_fn"
	.byte	0x1
	.value	0x3c80
	.byte	0x1
	.long	.LFB259
	.long	.LFE259
	.long	.LLST244
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x3c7f
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"tmp"
	.byte	0x1
	.value	0x3c81
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.uleb128 0x37
	.long	.LASF34
	.byte	0x1
	.value	0x3c82
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x37
	.long	.LASF107
	.byte	0x1
	.value	0x3c83
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0x12274
	.byte	0x1
	.string	"cxx_push_function_context"
	.byte	0x1
	.value	0x3c9b
	.byte	0x1
	.long	.LFB260
	.long	.LFE260
	.long	.LLST245
	.uleb128 0x3a
	.string	"f"
	.byte	0x1
	.value	0x3c9a
	.long	0x4849
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"p"
	.byte	0x1
	.value	0x3c9c
	.long	0x646c
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x39
	.long	0x122b1
	.byte	0x1
	.string	"cxx_pop_function_context"
	.byte	0x1
	.value	0x3cb0
	.byte	0x1
	.long	.LFB261
	.long	.LFE261
	.long	.LLST246
	.uleb128 0x3a
	.string	"f"
	.byte	0x1
	.value	0x3caf
	.long	0x4849
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0x122f0
	.byte	0x1
	.string	"cp_tree_node_structure"
	.byte	0x1
	.value	0x3cba
	.byte	0x1
	.long	0x8185
	.long	.LFB262
	.long	.LFE262
	.long	.LLST247
	.uleb128 0x3a
	.string	"t"
	.byte	0x1
	.value	0x3cb9
	.long	0x122f0
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x823a
	.uleb128 0x38
	.long	0x12336
	.byte	0x1
	.string	"identifier_global_value"
	.byte	0x1
	.value	0x3cce
	.byte	0x1
	.long	0x1e4
	.long	.LFB263
	.long	.LFE263
	.long	.LLST248
	.uleb128 0x3a
	.string	"t"
	.byte	0x1
	.value	0x3ccd
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x38
	.long	0x12373
	.byte	0x1
	.string	"build_void_list_node"
	.byte	0x1
	.value	0x3cd5
	.byte	0x1
	.long	0x1e4
	.long	.LFB264
	.long	.LFE264
	.long	.LLST249
	.uleb128 0x35
	.string	"t"
	.byte	0x1
	.value	0x3cd6
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0x3f
	.long	0x123b5
	.string	"cp_missing_noreturn_ok_p"
	.byte	0x1
	.value	0x3cde
	.byte	0x1
	.long	0x2d8
	.long	.LFB265
	.long	.LFE265
	.long	.LLST250
	.uleb128 0x34
	.long	.LASF3
	.byte	0x1
	.value	0x3cdd
	.long	0x1e4
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.byte	0x0
	.uleb128 0x43
	.long	0x12400
	.byte	0x1
	.string	"gt_ggc_mx_named_label_list"
	.byte	0x3
	.byte	0x1a
	.byte	0x1
	.long	.LFB266
	.long	.LFE266
	.long	.LLST251
	.uleb128 0x44
	.string	"x_p"
	.byte	0x3
	.byte	0x19
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x3
	.byte	0x1b
	.long	0x12400
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x866c
	.uleb128 0x43
	.long	0x12454
	.byte	0x1
	.string	"gt_ggc_mx_named_label_use_list"
	.byte	0x3
	.byte	0x2a
	.byte	0x1
	.long	.LFB267
	.long	.LFE267
	.long	.LLST252
	.uleb128 0x44
	.string	"x_p"
	.byte	0x3
	.byte	0x29
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x3
	.byte	0x2b
	.long	0x12454
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x85b3
	.uleb128 0x43
	.long	0x124ba
	.byte	0x1
	.string	"gt_ggc_mx_binding_table_s"
	.byte	0x3
	.byte	0x38
	.byte	0x1
	.long	.LFB268
	.long	.LFE268
	.long	.LLST253
	.uleb128 0x44
	.string	"x_p"
	.byte	0x3
	.byte	0x37
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x3
	.byte	0x39
	.long	0x124ba
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x36
	.long	.LBB159
	.long	.LBE159
	.uleb128 0x45
	.string	"i1"
	.byte	0x3
	.byte	0x3d
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0xb
	.long	0x7e29
	.uleb128 0x43
	.long	0x1250a
	.byte	0x1
	.string	"gt_ggc_mx_cp_binding_level"
	.byte	0x3
	.byte	0x49
	.byte	0x1
	.long	.LFB269
	.long	.LFE269
	.long	.LLST254
	.uleb128 0x44
	.string	"x_p"
	.byte	0x3
	.byte	0x48
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x3
	.byte	0x4a
	.long	0x1250a
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x7e07
	.uleb128 0x43
	.long	0x1255b
	.byte	0x1
	.string	"gt_ggc_mx_cxx_saved_binding"
	.byte	0x3
	.byte	0x61
	.byte	0x1
	.long	.LFB270
	.long	.LFE270
	.long	.LLST255
	.uleb128 0x44
	.string	"x_p"
	.byte	0x3
	.byte	0x60
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x3
	.byte	0x62
	.long	0x1255b
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x12560
	.uleb128 0x3
	.byte	0x4
	.long	0x7a3e
	.uleb128 0x43
	.long	0x125ac
	.byte	0x1
	.string	"gt_ggc_mx_saved_scope"
	.byte	0x4
	.byte	0x1a
	.byte	0x1
	.long	.LFB271
	.long	.LFE271
	.long	.LLST256
	.uleb128 0x44
	.string	"x_p"
	.byte	0x4
	.byte	0x19
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x4
	.byte	0x1b
	.long	0x125ac
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x8524
	.uleb128 0x43
	.long	0x125f4
	.byte	0x1
	.string	"gt_ggc_mx_lang_id2"
	.byte	0x4
	.byte	0x38
	.byte	0x1
	.long	.LFB272
	.long	.LFE272
	.long	.LLST257
	.uleb128 0x44
	.string	"x_p"
	.byte	0x4
	.byte	0x37
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x4
	.byte	0x39
	.long	0x125f4
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x8000
	.uleb128 0x43
	.long	0x12643
	.byte	0x1
	.string	"gt_ggc_mx_binding_entry_s"
	.byte	0x4
	.byte	0x45
	.byte	0x1
	.long	.LFB273
	.long	.LFE273
	.long	.LLST258
	.uleb128 0x44
	.string	"x_p"
	.byte	0x4
	.byte	0x44
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x4
	.byte	0x46
	.long	0x12643
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x7e94
	.uleb128 0x43
	.long	0x1268e
	.byte	0x1
	.string	"gt_ggc_mx_cxx_binding"
	.byte	0x4
	.byte	0x52
	.byte	0x1
	.long	.LFB274
	.long	.LFE274
	.long	.LLST259
	.uleb128 0x44
	.string	"x_p"
	.byte	0x4
	.byte	0x51
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x4
	.byte	0x53
	.long	0x1268e
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x12693
	.uleb128 0x3
	.byte	0x4
	.long	0x7aad
	.uleb128 0x43
	.long	0x12753
	.byte	0x1
	.string	"gt_ggc_mx_lang_tree_node"
	.byte	0x4
	.byte	0x6a
	.byte	0x1
	.long	.LFB275
	.long	.LFE275
	.long	.LLST260
	.uleb128 0x44
	.string	"x_p"
	.byte	0x4
	.byte	0x69
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x45
	.string	"x"
	.byte	0x4
	.byte	0x6b
	.long	0x122f0
	.byte	0x2
	.byte	0x91
	.sleb128 -36
	.uleb128 0x45
	.string	"xlimit"
	.byte	0x4
	.byte	0x6c
	.long	0x122f0
	.byte	0x2
	.byte	0x91
	.sleb128 -32
	.uleb128 0x3b
	.long	0x12723
	.long	.LBB160
	.long	.LBE160
	.uleb128 0x45
	.string	"i1_0"
	.byte	0x4
	.byte	0xe5
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -28
	.uleb128 0x45
	.string	"ilimit1_0"
	.byte	0x4
	.byte	0xe6
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -24
	.byte	0x0
	.uleb128 0x36
	.long	.LBB161
	.long	.LBE161
	.uleb128 0x35
	.string	"i2_0"
	.byte	0x4
	.value	0x10b
	.long	0x412
	.byte	0x2
	.byte	0x91
	.sleb128 -20
	.uleb128 0x35
	.string	"ilimit2_0"
	.byte	0x4
	.value	0x10c
	.long	0xaaaf
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.byte	0x0
	.uleb128 0x39
	.long	0x1279a
	.byte	0x1
	.string	"gt_ggc_mx_lang_decl"
	.byte	0x4
	.value	0x14e
	.byte	0x1
	.long	.LFB276
	.long	.LFE276
	.long	.LLST261
	.uleb128 0x3a
	.string	"x_p"
	.byte	0x4
	.value	0x14d
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"x"
	.byte	0x4
	.value	0x14f
	.long	0x1279a
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x4fff
	.uleb128 0x39
	.long	0x127e6
	.byte	0x1
	.string	"gt_ggc_mx_lang_type"
	.byte	0x4
	.value	0x186
	.byte	0x1
	.long	.LFB277
	.long	.LFE277
	.long	.LLST262
	.uleb128 0x3a
	.string	"x_p"
	.byte	0x4
	.value	0x185
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"x"
	.byte	0x4
	.value	0x187
	.long	0x127e6
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x3de8
	.uleb128 0x39
	.long	0x1283a
	.byte	0x1
	.string	"gt_ggc_mx_language_function"
	.byte	0x4
	.value	0x1ab
	.byte	0x1
	.long	.LFB278
	.long	.LFE278
	.long	.LLST263
	.uleb128 0x3a
	.string	"x_p"
	.byte	0x4
	.value	0x1aa
	.long	0x4df
	.byte	0x2
	.byte	0x91
	.sleb128 0
	.uleb128 0x35
	.string	"x"
	.byte	0x4
	.value	0x1ac
	.long	0x1283a
	.byte	0x2
	.byte	0x91
	.sleb128 -16
	.byte	0x0
	.uleb128 0xb
	.long	0x646c
	.uleb128 0x10
	.long	0x1284f
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0xd
	.byte	0x0
	.uleb128 0xb
	.long	0x1283f
	.uleb128 0x10
	.long	0x12864
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x1d
	.byte	0x0
	.uleb128 0xb
	.long	0x12854
	.uleb128 0xb
	.long	0x1283f
	.uleb128 0x10
	.long	0x1287e
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0xf
	.byte	0x0
	.uleb128 0xb
	.long	0x1286e
	.uleb128 0x10
	.long	0x12893
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x12
	.byte	0x0
	.uleb128 0xb
	.long	0x12883
	.uleb128 0x10
	.long	0x128a8
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0xe
	.byte	0x0
	.uleb128 0xb
	.long	0x12898
	.uleb128 0x10
	.long	0x128bd
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x8
	.byte	0x0
	.uleb128 0xb
	.long	0x128ad
	.uleb128 0xb
	.long	0x128ad
	.uleb128 0xb
	.long	0x12883
	.uleb128 0x10
	.long	0x128dc
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x9
	.byte	0x0
	.uleb128 0xb
	.long	0x128cc
	.uleb128 0xb
	.long	0x128cc
	.uleb128 0xb
	.long	0x12898
	.uleb128 0x10
	.long	0x128fb
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x22
	.byte	0x0
	.uleb128 0xb
	.long	0x128eb
	.uleb128 0x10
	.long	0x12910
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0xb
	.byte	0x0
	.uleb128 0xb
	.long	0x12900
	.uleb128 0x10
	.long	0x12925
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0xa
	.byte	0x0
	.uleb128 0xb
	.long	0x12915
	.uleb128 0xb
	.long	0x12883
	.uleb128 0xb
	.long	0x12898
	.uleb128 0x10
	.long	0x12944
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x14
	.byte	0x0
	.uleb128 0xb
	.long	0x12934
	.uleb128 0x10
	.long	0x12959
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x1a
	.byte	0x0
	.uleb128 0xb
	.long	0x12949
	.uleb128 0x10
	.long	0x1296e
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x11
	.byte	0x0
	.uleb128 0xb
	.long	0x1295e
	.uleb128 0x10
	.long	0x12983
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0xc
	.byte	0x0
	.uleb128 0xb
	.long	0x12973
	.uleb128 0xb
	.long	0x12898
	.uleb128 0x10
	.long	0x1299d
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x18
	.byte	0x0
	.uleb128 0xb
	.long	0x1298d
	.uleb128 0x10
	.long	0x129b2
	.long	0xe921
	.uleb128 0x11
	.long	0x3c8
	.byte	0x12
	.byte	0x0
	.uleb128 0xb
	.long	0x129a2
	.uleb128 0x10
	.long	0x129c7
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x19
	.byte	0x0
	.uleb128 0xb
	.long	0x129b7
	.uleb128 0x10
	.long	0x129dc
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x1b
	.byte	0x0
	.uleb128 0xb
	.long	0x129cc
	.uleb128 0xb
	.long	0x12883
	.uleb128 0x10
	.long	0x129f6
	.long	0x2d0
	.uleb128 0x11
	.long	0x3c8
	.byte	0x15
	.byte	0x0
	.uleb128 0xb
	.long	0x129e6
	.uleb128 0xb
	.long	0x12934
	.uleb128 0xb
	.long	0x1286e
	.uleb128 0xb
	.long	0x128ad
	.uleb128 0xb
	.long	0x1286e
	.uleb128 0xb
	.long	0x81a
	.uleb128 0xb
	.long	0x12898
	.uleb128 0xb
	.long	0x1283f
	.uleb128 0xb
	.long	0x12898
	.uleb128 0xb
	.long	0x12898
	.uleb128 0xb
	.long	0x128cc
	.uleb128 0xb
	.long	0x128ad
	.uleb128 0xb
	.long	0x12900
	.uleb128 0xb
	.long	0x12883
	.uleb128 0xb
	.long	0x12900
	.uleb128 0xb
	.long	0x12934
	.uleb128 0xb
	.long	0x129e6
	.uleb128 0xb
	.long	0x1295e
	.uleb128 0x45
	.string	"global_type_node"
	.byte	0x1
	.byte	0xda
	.long	0x1e4
	.byte	0x5
	.byte	0x3
	.long	global_type_node
	.uleb128 0x45
	.string	"only_namespace_names"
	.byte	0x1
	.byte	0xdd
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	only_namespace_names
	.uleb128 0x35
	.string	"deprecated_state"
	.byte	0x1
	.value	0x124
	.long	0xa975
	.byte	0x5
	.byte	0x3
	.long	deprecated_state
	.uleb128 0x35
	.string	"free_binding_entry"
	.byte	0x1
	.value	0x136
	.long	0x7e7e
	.byte	0x5
	.byte	0x3
	.long	free_binding_entry
	.uleb128 0x35
	.string	"free_binding_level"
	.byte	0x1
	.value	0x2c6
	.long	0x7e07
	.byte	0x5
	.byte	0x3
	.long	free_binding_level
	.uleb128 0x35
	.string	"keep_next_level_flag"
	.byte	0x1
	.value	0x2ca
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	keep_next_level_flag
	.uleb128 0x35
	.string	"incomplete_vars"
	.byte	0x1
	.value	0x2d0
	.long	0x1e4
	.byte	0x5
	.byte	0x3
	.long	incomplete_vars
	.uleb128 0x37
	.long	.LASF61
	.byte	0x1
	.value	0x2d8
	.long	0x3b1
	.byte	0x5
	.byte	0x3
	.long	binding_depth
	.uleb128 0x35
	.string	"is_class_level"
	.byte	0x1
	.value	0x2d9
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	is_class_level
	.uleb128 0x35
	.string	"free_bindings"
	.byte	0x1
	.value	0x4aa
	.long	0x7e0d
	.byte	0x5
	.byte	0x3
	.long	free_bindings
	.uleb128 0x35
	.string	"no_print_functions"
	.byte	0x1
	.value	0x8b7
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	no_print_functions
	.uleb128 0x35
	.string	"no_print_builtins"
	.byte	0x1
	.value	0x8b8
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	no_print_builtins
	.uleb128 0x35
	.string	"anon_cnt"
	.byte	0x1
	.value	0xc53
	.long	0x2d8
	.byte	0x5
	.byte	0x3
	.long	anon_cnt
	.uleb128 0x35
	.string	"switch_stack"
	.byte	0x1
	.value	0x15a9
	.long	0xd8e6
	.byte	0x5
	.byte	0x3
	.long	switch_stack
	.uleb128 0x35
	.string	"typename_htab"
	.byte	0x1
	.value	0x1762
	.long	0x65d9
	.byte	0x5
	.byte	0x3
	.long	typename_htab
	.uleb128 0x46
	.string	"stderr"
	.byte	0x17
	.byte	0x90
	.long	0x7fe
	.byte	0x1
	.byte	0x1
	.uleb128 0x10
	.long	0x12c27
	.long	0x2d0
	.uleb128 0x47
	.byte	0x0
	.uleb128 0x46
	.string	"tree_code_type"
	.byte	0x7
	.byte	0x43
	.long	0x12c3f
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x12c1c
	.uleb128 0x10
	.long	0x12c4f
	.long	0x420
	.uleb128 0x47
	.byte	0x0
	.uleb128 0x46
	.string	"tree_code_length"
	.byte	0x7
	.byte	0x4e
	.long	0x12c69
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x12c44
	.uleb128 0x10
	.long	0x12c7e
	.long	0x1e4
	.uleb128 0x11
	.long	0x3c8
	.byte	0x3f
	.byte	0x0
	.uleb128 0x48
	.string	"global_trees"
	.byte	0x7
	.value	0x8ee
	.long	0x12c6e
	.byte	0x1
	.byte	0x1
	.uleb128 0x10
	.long	0x12ca5
	.long	0x1e4
	.uleb128 0x11
	.long	0x3c8
	.byte	0xa
	.byte	0x0
	.uleb128 0x48
	.string	"integer_types"
	.byte	0x7
	.value	0x95f
	.long	0x12c95
	.byte	0x1
	.byte	0x1
	.uleb128 0x10
	.long	0x12ccd
	.long	0x1e4
	.uleb128 0x11
	.long	0x3c8
	.byte	0x5
	.byte	0x0
	.uleb128 0x48
	.string	"sizetype_tab"
	.byte	0x7
	.value	0xb10
	.long	0x12cbd
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"input_filename"
	.byte	0x1a
	.byte	0x17
	.long	0x2c5
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"lineno"
	.byte	0x1a
	.byte	0x1d
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"immediate_size_expand"
	.byte	0x7
	.value	0xc03
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"current_function_decl"
	.byte	0x7
	.value	0xc07
	.long	0x1e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"struct_value_incoming_rtx"
	.byte	0x8
	.value	0x6ef
	.long	0x9c
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"warn_unused_label"
	.byte	0x1b
	.byte	0x68
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"warn_inline"
	.byte	0x1b
	.byte	0x73
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"warn_shadow"
	.byte	0x1b
	.byte	0x83
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"warn_return_type"
	.byte	0x1b
	.byte	0x96
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"pedantic"
	.byte	0x1b
	.byte	0xe3
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"in_system_header"
	.byte	0x1b
	.byte	0xe8
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"flag_signed_char"
	.byte	0x1b
	.byte	0xf3
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"flag_short_enums"
	.byte	0x1b
	.byte	0xf7
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_expensive_optimizations"
	.byte	0x1b
	.value	0x141
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_writable_strings"
	.byte	0x1b
	.value	0x146
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_inline_functions"
	.byte	0x1b
	.value	0x18a
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_no_inline"
	.byte	0x1b
	.value	0x198
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_pedantic_errors"
	.byte	0x1b
	.value	0x1d8
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_exceptions"
	.byte	0x1b
	.value	0x1ec
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"force_align_functions_log"
	.byte	0x1b
	.value	0x28d
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_non_call_exceptions"
	.byte	0x1b
	.value	0x2b2
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"cfun"
	.byte	0xc
	.value	0x202
	.long	0x4849
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"htab_hash_pointer"
	.byte	0x13
	.byte	0xa0
	.long	0x6483
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"ridpointers"
	.byte	0xe
	.byte	0x8a
	.long	0x53c4
	.byte	0x1
	.byte	0x1
	.uleb128 0x10
	.long	0x12f7e
	.long	0x1e4
	.uleb128 0x11
	.long	0x3c8
	.byte	0x1e
	.byte	0x0
	.uleb128 0x46
	.string	"c_global_trees"
	.byte	0xe
	.byte	0xee
	.long	0x12f6e
	.byte	0x1
	.byte	0x1
	.uleb128 0x18
	.long	0x12fa6
	.byte	0x1
	.long	0x2d8
	.uleb128 0x16
	.long	0x1e4
	.byte	0x0
	.uleb128 0x48
	.string	"lang_missing_noreturn_ok_p"
	.byte	0xe
	.value	0x14a
	.long	0x12fcb
	.byte	0x1
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x12f96
	.uleb128 0x48
	.string	"flag_ms_extensions"
	.byte	0xe
	.value	0x19b
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_const_strings"
	.byte	0xe
	.value	0x1a4
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_signed_bitfields"
	.byte	0xe
	.value	0x1ac
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"warn_long_long"
	.byte	0xe
	.value	0x1d1
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"warn_redundant_decls"
	.byte	0xe
	.value	0x1db
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"warn_conversion"
	.byte	0xe
	.value	0x1e7
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_implement_inlines"
	.byte	0xe
	.value	0x28e
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_alt_external_templates"
	.byte	0xe
	.value	0x299
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_default_inline"
	.byte	0xe
	.value	0x2b6
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_access_control"
	.byte	0xe
	.value	0x2c6
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_new_for_scope"
	.byte	0xe
	.value	0x2d4
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_weak"
	.byte	0xe
	.value	0x2da
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_use_cxa_atexit"
	.byte	0xe
	.value	0x2df
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_permissive"
	.byte	0xe
	.value	0x2e8
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"flag_enforce_eh_specs"
	.byte	0xe
	.value	0x2ef
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"warn_implicit"
	.byte	0xe
	.value	0x307
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"warn_ecpp"
	.byte	0xe
	.value	0x328
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"warn_deprecated"
	.byte	0xe
	.value	0x33a
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x18
	.long	0x131e4
	.byte	0x1
	.long	0x1e4
	.uleb128 0x16
	.long	0x1e4
	.uleb128 0x16
	.long	0x2d8
	.byte	0x0
	.uleb128 0x48
	.string	"make_fname_decl"
	.byte	0xe
	.value	0x364
	.long	0x131fe
	.byte	0x1
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x131cf
	.uleb128 0x10
	.long	0x13214
	.long	0x1e4
	.uleb128 0x11
	.long	0x3c8
	.byte	0x49
	.byte	0x0
	.uleb128 0x49
	.string	"cp_global_trees"
	.byte	0x1
	.byte	0xd5
	.long	0x13204
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	cp_global_trees
	.uleb128 0x4a
	.string	"scope_chain"
	.byte	0x1
	.value	0xa58
	.long	0x8524
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	scope_chain
	.uleb128 0x48
	.string	"global_namespace"
	.byte	0x5
	.value	0x3d4
	.long	0x1e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x4b
	.long	.LASF71
	.byte	0x5
	.value	0x3e6
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x4b
	.long	.LASF72
	.byte	0x5
	.value	0x3e6
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x4a
	.string	"adding_implicit_members"
	.byte	0x1
	.value	0x129
	.long	0x2d8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	adding_implicit_members
	.uleb128 0x49
	.string	"error_mark_list"
	.byte	0x1
	.byte	0xa6
	.long	0x1e4
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	error_mark_list
	.uleb128 0x49
	.string	"integer_two_node"
	.byte	0x1
	.byte	0xfa
	.long	0x1e4
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	integer_two_node
	.uleb128 0x49
	.string	"integer_three_node"
	.byte	0x1
	.byte	0xfa
	.long	0x1e4
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	integer_three_node
	.uleb128 0x4a
	.string	"anonymous_namespace_name"
	.byte	0x1
	.value	0x113
	.long	0x1e4
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	anonymous_namespace_name
	.uleb128 0x4a
	.string	"function_depth"
	.byte	0x1
	.value	0x118
	.long	0x2d8
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	function_depth
	.uleb128 0x48
	.string	"current_class_depth"
	.byte	0x5
	.value	0xcc7
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"local_classes"
	.byte	0x5
	.value	0xccb
	.long	0x6cfc
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"at_eof"
	.byte	0x5
	.value	0xd4d
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x49
	.string	"static_aggregates"
	.byte	0x1
	.byte	0xf4
	.long	0x1e4
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	static_aggregates
	.uleb128 0x48
	.string	"static_ctors"
	.byte	0x5
	.value	0xd57
	.long	0x1e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"static_dtors"
	.byte	0x5
	.value	0xd58
	.long	0x1e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x10
	.long	0x133ef
	.long	0x961f
	.uleb128 0x47
	.byte	0x0
	.uleb128 0x48
	.string	"operator_name_info"
	.byte	0x5
	.value	0xe32
	.long	0x133e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"assignment_operator_name_info"
	.byte	0x5
	.value	0xe34
	.long	0x133e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x4a
	.string	"have_extern_spec"
	.byte	0x1
	.value	0x12d
	.long	0x5397
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	have_extern_spec
	.uleb128 0x48
	.string	"processing_template_parmlist"
	.byte	0x5
	.value	0x1038
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"flag_inline_trees"
	.byte	0x1c
	.byte	0x28
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x49
	.string	"last_function_parms"
	.byte	0x1
	.byte	0xfd
	.long	0x1e4
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	last_function_parms
	.uleb128 0x46
	.string	"lastiddecl"
	.byte	0x14
	.byte	0x47
	.long	0x1e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"looking_for_typename"
	.byte	0x1
	.value	0x1961
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"looking_for_template"
	.byte	0x14
	.byte	0x4b
	.long	0x2d8
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"got_scope"
	.byte	0x14
	.byte	0x4e
	.long	0x1e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"got_object"
	.byte	0x14
	.byte	0x4f
	.long	0x1e4
	.byte	0x1
	.byte	0x1
	.uleb128 0x10
	.long	0x13540
	.long	0x13540
	.uleb128 0x11
	.long	0x3c8
	.byte	0x21
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x13546
	.uleb128 0xb
	.long	0x9720
	.uleb128 0x4a
	.string	"gt_ggc_rtab"
	.byte	0x4
	.value	0x251
	.long	0x13566
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	gt_ggc_rtab
	.uleb128 0xb
	.long	0x13530
	.uleb128 0x10
	.long	0x1357b
	.long	0x13540
	.uleb128 0x11
	.long	0x3c8
	.byte	0x5
	.byte	0x0
	.uleb128 0x4a
	.string	"gt_ggc_deletable_rtab"
	.byte	0x4
	.value	0x27a
	.long	0x135a0
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	gt_ggc_deletable_rtab
	.uleb128 0xb
	.long	0x1356b
	.uleb128 0x10
	.long	0x135b5
	.long	0x135b5
	.uleb128 0x11
	.long	0x3c8
	.byte	0x3
	.byte	0x0
	.uleb128 0x3
	.byte	0x4
	.long	0x135bb
	.uleb128 0xb
	.long	0x9772
	.uleb128 0x4a
	.string	"gt_ggc_cache_rtab"
	.byte	0x4
	.value	0x285
	.long	0x135e1
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	gt_ggc_cache_rtab
	.uleb128 0xb
	.long	0x135a5
	.uleb128 0x48
	.string	"targetm"
	.byte	0x1e
	.value	0x12d
	.long	0x9e4b
	.byte	0x1
	.byte	0x1
	.uleb128 0x48
	.string	"global_dc"
	.byte	0x1f
	.value	0x109
	.long	0xa6de
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"debug_hooks"
	.byte	0x22
	.byte	0x6a
	.long	0x13621
	.byte	0x1
	.byte	0x1
	.uleb128 0x3
	.byte	0x4
	.long	0x13627
	.uleb128 0xb
	.long	0xa730
	.uleb128 0x46
	.string	"sdb_debug_hooks"
	.byte	0x22
	.byte	0x81
	.long	0x13627
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"dwarf2_debug_hooks"
	.byte	0x22
	.byte	0x84
	.long	0x13627
	.byte	0x1
	.byte	0x1
	.uleb128 0x46
	.string	"In_MP_Region"
	.byte	0x1
	.byte	0x42
	.long	0x5397
	.byte	0x1
	.byte	0x1
	.uleb128 0x10
	.long	0x13687
	.long	0x9720
	.uleb128 0x11
	.long	0x3c8
	.byte	0x3
	.byte	0x0
	.uleb128 0x49
	.string	"gt_ggc_r_gt_cp_decl_h"
	.byte	0x3
	.byte	0x6f
	.long	0x136ab
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	gt_ggc_r_gt_cp_decl_h
	.uleb128 0xb
	.long	0x13677
	.uleb128 0x10
	.long	0x136c0
	.long	0x9720
	.uleb128 0x11
	.long	0x3c8
	.byte	0x3
	.byte	0x0
	.uleb128 0x49
	.string	"gt_ggc_rd_gt_cp_decl_h"
	.byte	0x3
	.byte	0x87
	.long	0x136e5
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	gt_ggc_rd_gt_cp_decl_h
	.uleb128 0xb
	.long	0x136b0
	.uleb128 0x10
	.long	0x136fa
	.long	0x9720
	.uleb128 0x11
	.long	0x3c8
	.byte	0xf
	.byte	0x0
	.uleb128 0x4a
	.string	"gt_ggc_r_gtype_cp_h"
	.byte	0x4
	.value	0x1c3
	.long	0x1371d
	.byte	0x1
	.byte	0x5
	.byte	0x3
	.long	gt_ggc_r_gtype_cp_h
	.uleb128 0xb
	.long	0x136ea
	.uleb128 0x10
	.long	0x1372d
	.long	0x9720
	.uleb128 0x47
	.byte	0x0
	.uleb128 0x48
	.string	"gt_ggc_r_gtype_desc_c"
	.byte	0x4
	.value	0x230
	.long	0x1374d
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_alias_h"
	.byte	0x4
	.value	0x231
	.long	0x13770
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cselib_h"
	.byte	0x4
	.value	0x232
	.long	0x13794
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_dwarf2out_h"
	.byte	0x4
	.value	0x233
	.long	0x137bb
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_emit_rtl_h"
	.byte	0x4
	.value	0x234
	.long	0x137e1
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_except_h"
	.byte	0x4
	.value	0x235
	.long	0x13805
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_explow_h"
	.byte	0x4
	.value	0x236
	.long	0x13829
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_expr_h"
	.byte	0x4
	.value	0x237
	.long	0x1384b
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_fold_const_h"
	.byte	0x4
	.value	0x238
	.long	0x13873
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_function_h"
	.byte	0x4
	.value	0x239
	.long	0x13899
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_gcse_h"
	.byte	0x4
	.value	0x23a
	.long	0x138bb
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_integrate_h"
	.byte	0x4
	.value	0x23b
	.long	0x138e2
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_optabs_h"
	.byte	0x4
	.value	0x23c
	.long	0x13906
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_profile_h"
	.byte	0x4
	.value	0x23d
	.long	0x1392b
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_ra_build_h"
	.byte	0x4
	.value	0x23e
	.long	0x13951
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_regclass_h"
	.byte	0x4
	.value	0x23f
	.long	0x13977
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_reg_stack_h"
	.byte	0x4
	.value	0x240
	.long	0x1399e
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_sdbout_h"
	.byte	0x4
	.value	0x241
	.long	0x139c2
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_stor_layout_h"
	.byte	0x4
	.value	0x242
	.long	0x139eb
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_varasm_h"
	.byte	0x4
	.value	0x243
	.long	0x13a0f
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_mips_h"
	.byte	0x4
	.value	0x244
	.long	0x13a31
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_mangle_h"
	.byte	0x4
	.value	0x245
	.long	0x13a58
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_call_h"
	.byte	0x4
	.value	0x247
	.long	0x13a7d
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_decl2_h"
	.byte	0x4
	.value	0x249
	.long	0x13aa3
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_parse_h"
	.byte	0x4
	.value	0x24a
	.long	0x13ac9
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_pt_h"
	.byte	0x4
	.value	0x24b
	.long	0x13aec
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_repo_h"
	.byte	0x4
	.value	0x24c
	.long	0x13b11
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_spew_h"
	.byte	0x4
	.value	0x24d
	.long	0x13b36
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_cp_tree_h"
	.byte	0x4
	.value	0x24e
	.long	0x13b5b
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_c_common_h"
	.byte	0x4
	.value	0x24f
	.long	0x13b81
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_r_gt_c_pragma_h"
	.byte	0x4
	.value	0x250
	.long	0x13ba7
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_rd_gt_bitmap_h"
	.byte	0x4
	.value	0x275
	.long	0x13bcc
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_rd_gt_cselib_h"
	.byte	0x4
	.value	0x276
	.long	0x13bf1
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_rd_gt_emit_rtl_h"
	.byte	0x4
	.value	0x277
	.long	0x13c18
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x48
	.string	"gt_ggc_rd_gt_lists_h"
	.byte	0x4
	.value	0x278
	.long	0x13c3c
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13722
	.uleb128 0x10
	.long	0x13c4c
	.long	0x9772
	.uleb128 0x47
	.byte	0x0
	.uleb128 0x48
	.string	"gt_ggc_rc_gt_emit_rtl_h"
	.byte	0x4
	.value	0x282
	.long	0x13c6e
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13c41
	.uleb128 0x48
	.string	"gt_ggc_rc_gt_fold_const_h"
	.byte	0x4
	.value	0x283
	.long	0x13c97
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13c41
	.uleb128 0x48
	.string	"gt_ggc_rc_gt_tree_h"
	.byte	0x4
	.value	0x284
	.long	0x13cba
	.byte	0x1
	.byte	0x1
	.uleb128 0xb
	.long	0x13c41
	.byte	0x0
	.section	.debug_abbrev
	.uleb128 0x1
	.uleb128 0x11
	.byte	0x1
	.uleb128 0x10
	.uleb128 0x6
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x25
	.uleb128 0x8
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1b
	.uleb128 0x8
	.byte	0x0
	.byte	0x0
	.uleb128 0x2
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xf
	.byte	0x0
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x4
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x5
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x6
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x7
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x8
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x9
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xa
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xb
	.uleb128 0x26
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0xc
	.uleb128 0x24
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0xd
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0xe
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0xf
	.uleb128 0x24
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3e
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x10
	.uleb128 0x1
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x11
	.uleb128 0x21
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2f
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x12
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x13
	.uleb128 0xf
	.byte	0x0
	.uleb128 0xb
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x14
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x15
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x27
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x16
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x17
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x18
	.uleb128 0x15
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x19
	.uleb128 0x26
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x1a
	.uleb128 0x15
	.byte	0x0
	.uleb128 0x27
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x1b
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x1c
	.uleb128 0x28
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0x0
	.byte	0x0
	.uleb128 0x1d
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x1e
	.uleb128 0x13
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x1f
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x20
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x21
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x22
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0xd
	.uleb128 0xb
	.uleb128 0xc
	.uleb128 0xb
	.uleb128 0x38
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x23
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x24
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x25
	.uleb128 0x17
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x26
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x27
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x28
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x29
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x2a
	.uleb128 0x13
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x2b
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x2c
	.uleb128 0xd
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x2d
	.uleb128 0x28
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x1c
	.uleb128 0xd
	.byte	0x0
	.byte	0x0
	.uleb128 0x2e
	.uleb128 0x16
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x2f
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.byte	0x0
	.byte	0x0
	.uleb128 0x30
	.uleb128 0x15
	.byte	0x0
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.byte	0x0
	.byte	0x0
	.uleb128 0x31
	.uleb128 0x4
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0xb
	.uleb128 0xb
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x32
	.uleb128 0x13
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0xb
	.uleb128 0x5
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x0
	.byte	0x0
	.uleb128 0x33
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x34
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x35
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x36
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x37
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x38
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x39
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x3a
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x3b
	.uleb128 0xb
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x3c
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x34
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x3d
	.uleb128 0x2e
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x3e
	.uleb128 0x2e
	.byte	0x0
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x3f
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x40
	.uleb128 0x2e
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x41
	.uleb128 0x2e
	.byte	0x0
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x42
	.uleb128 0xa
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x11
	.uleb128 0x1
	.byte	0x0
	.byte	0x0
	.uleb128 0x43
	.uleb128 0x2e
	.byte	0x1
	.uleb128 0x1
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x27
	.uleb128 0xc
	.uleb128 0x11
	.uleb128 0x1
	.uleb128 0x12
	.uleb128 0x1
	.uleb128 0x40
	.uleb128 0x6
	.byte	0x0
	.byte	0x0
	.uleb128 0x44
	.uleb128 0x5
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x45
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x46
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x47
	.uleb128 0x21
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.uleb128 0x48
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.uleb128 0x49
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0xb
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x4a
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0x8
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x2
	.uleb128 0xa
	.byte	0x0
	.byte	0x0
	.uleb128 0x4b
	.uleb128 0x34
	.byte	0x0
	.uleb128 0x3
	.uleb128 0xe
	.uleb128 0x3a
	.uleb128 0xb
	.uleb128 0x3b
	.uleb128 0x5
	.uleb128 0x49
	.uleb128 0x13
	.uleb128 0x3f
	.uleb128 0xc
	.uleb128 0x3c
	.uleb128 0xc
	.byte	0x0
	.byte	0x0
	.byte	0x0
	.section	.debug_pubnames,"",@progbits
	.long	0x1084
	.value	0x2
	.long	.Ldebug_info0
	.long	0x13cc0
	.long	0xab05
	.string	"binding_table_find"
	.long	0xac3c
	.string	"binding_table_foreach"
	.long	0xaf3e
	.string	"global_bindings_p"
	.long	0xafa6
	.string	"toplevel_bindings_p"
	.long	0xafe2
	.string	"namespace_bindings_p"
	.long	0xb01f
	.string	"keep_next_level"
	.long	0xb056
	.string	"kept_level_p"
	.long	0xb079
	.string	"innermost_scope_is_class_p"
	.long	0xb0d3
	.string	"template_parm_scope_p"
	.long	0xb0ff
	.string	"current_tmpl_spec_kind"
	.long	0xb1c1
	.string	"set_class_shadows"
	.long	0xb1fd
	.string	"pushlevel"
	.long	0xb23c
	.string	"maybe_push_cleanup_level"
	.long	0xb27b
	.string	"begin_scope"
	.long	0xb2bc
	.string	"finish_scope"
	.long	0xb2db
	.string	"note_level_for_for"
	.long	0xb300
	.string	"note_level_for_try"
	.long	0xb325
	.string	"note_level_for_catch"
	.long	0xb44e
	.string	"push_local_binding"
	.long	0xb4b1
	.string	"push_class_binding"
	.long	0xb617
	.string	"poplevel"
	.long	0xb7f3
	.string	"delete_block"
	.long	0xb833
	.string	"insert_block"
	.long	0xb866
	.string	"set_block"
	.long	0xb8a6
	.string	"pushlevel_class"
	.long	0xb8dc
	.string	"poplevel_class"
	.long	0xb964
	.string	"clear_identifier_class_values"
	.long	0xb9a6
	.string	"vtable_decl_p"
	.long	0xb9eb
	.string	"vtype_decl_p"
	.long	0xba2f
	.string	"cp_namespace_decls"
	.long	0xbb44
	.string	"walk_vtables"
	.long	0xbc1d
	.string	"walk_namespaces"
	.long	0xbd17
	.string	"walk_globals"
	.long	0xbd77
	.string	"wrapup_globals_for_namespace"
	.long	0xbe81
	.string	"print_binding_level"
	.long	0xbee4
	.string	"print_other_binding_stack"
	.long	0xbf35
	.string	"print_binding_stack"
	.long	0xbf6d
	.string	"cxx_scope_find_binding_for_name"
	.long	0xc049
	.string	"binding_for_name"
	.long	0xc0a2
	.string	"namespace_binding"
	.long	0xc0fa
	.string	"set_namespace_binding"
	.long	0xc161
	.string	"push_namespace"
	.long	0xc23b
	.string	"pop_namespace"
	.long	0xc270
	.string	"push_nested_namespace"
	.long	0xc2ab
	.string	"pop_nested_namespace"
	.long	0xc3b1
	.string	"maybe_push_to_top_level"
	.long	0xc446
	.string	"push_to_top_level"
	.long	0xc46a
	.string	"pop_from_top_level"
	.long	0xc570
	.string	"set_identifier_type_value"
	.long	0xc5be
	.string	"identifier_type_value"
	.long	0xc5fd
	.string	"pop_everything"
	.long	0xc7a5
	.string	"create_implicit_typedef"
	.long	0xc874
	.string	"pushtag"
	.long	0xc93a
	.string	"make_anon_name"
	.long	0xc973
	.string	"clear_anon_tags"
	.long	0xc9be
	.string	"decls_match"
	.long	0xcb0f
	.string	"duplicate_decls"
	.long	0xcced
	.string	"pushdecl"
	.long	0xced4
	.string	"pushdecl_namespace_level"
	.long	0xcfcd
	.string	"pushdecl_top_level"
	.long	0xd008
	.string	"pushdecl_top_level_and_finish"
	.long	0xd05d
	.string	"pushdecl_class_level"
	.long	0xd0d4
	.string	"maybe_push_decl"
	.long	0xd11d
	.string	"push_class_level_binding"
	.long	0xd1a7
	.string	"push_using_decl"
	.long	0xd20f
	.string	"push_using_directive"
	.long	0xd281
	.string	"push_overloaded_decl"
	.long	0xd397
	.string	"implicitly_declare"
	.long	0xd4e4
	.string	"lookup_label"
	.long	0xd538
	.string	"declare_local_label"
	.long	0xd791
	.string	"check_goto"
	.long	0xd813
	.string	"define_label"
	.long	0xd8ec
	.string	"push_switch"
	.long	0xd92b
	.string	"pop_switch"
	.long	0xd95b
	.string	"finish_case_label"
	.long	0xd9f8
	.string	"getdecls"
	.long	0xda47
	.string	"cxx_remember_type_decls"
	.long	0xddad
	.string	"lookup_namespace_name"
	.long	0xdf12
	.string	"build_typename_type"
	.long	0xdfaa
	.string	"make_typename_type"
	.long	0xe05d
	.string	"make_unbound_class_template"
	.long	0xe15c
	.string	"unqualified_namespace_lookup"
	.long	0xe342
	.string	"check_for_out_of_scope_variable"
	.long	0xe531
	.string	"lookup_name_nonclass"
	.long	0xe570
	.string	"lookup_function_nonclass"
	.long	0xe5c2
	.string	"lookup_name_namespace_only"
	.long	0xe607
	.string	"lookup_name"
	.long	0xe64c
	.string	"lookup_name_current_level"
	.long	0xe6aa
	.string	"lookup_type_current_level"
	.long	0xe726
	.string	"begin_only_namespace_names"
	.long	0xe753
	.string	"end_only_namespace_names"
	.long	0xe77e
	.string	"record_builtin_type"
	.long	0xe9a4
	.string	"cxx_init_decl_processing"
	.long	0xeaa5
	.string	"cp_fname_init"
	.long	0xec43
	.string	"builtin_function"
	.long	0xed37
	.string	"build_library_fn"
	.long	0xedea
	.string	"build_library_fn_ptr"
	.long	0xee38
	.string	"build_cp_library_fn_ptr"
	.long	0xee89
	.string	"push_library_fn"
	.long	0xef39
	.string	"push_void_library_fn"
	.long	0xef96
	.string	"push_throw_library_fn"
	.long	0xeff3
	.string	"cxx_insert_default_attributes"
	.long	0xf037
	.string	"fixup_anonymous_aggr"
	.long	0xf0a5
	.string	"check_tag_decl"
	.long	0xf182
	.string	"shadow_tag"
	.long	0xf1d9
	.string	"groktypename"
	.long	0xf23f
	.string	"start_decl"
	.long	0xf32f
	.string	"start_decl_1"
	.long	0xf8a2
	.string	"maybe_inject_for_scope_var"
	.long	0xf9c3
	.string	"cp_finish_decl"
	.long	0xfad3
	.string	"finish_decl"
	.long	0xfb23
	.string	"declare_global_var"
	.long	0xfd32
	.string	"register_dtor_fn"
	.long	0xfea3
	.string	"start_handler_parms"
	.long	0xfeff
	.string	"complete_array_type"
	.long	0x1037e
	.string	"build_ptrmemfunc_type"
	.long	0x1040c
	.string	"build_ptrmem_type"
	.long	0x1045f
	.string	"check_static_variable_definition"
	.long	0x104b9
	.string	"compute_array_index_type"
	.long	0x10682
	.string	"grokdeclarator"
	.long	0x10f03
	.string	"parmlist_is_exprlist"
	.long	0x10f8c
	.string	"local_variable_p"
	.long	0x10fc5
	.string	"nonstatic_local_decl_p"
	.long	0x1106c
	.string	"check_default_argument"
	.long	0x11212
	.string	"copy_fn_p"
	.long	0x11286
	.string	"grok_special_member_properties"
	.long	0x11304
	.string	"grok_ctor_properties"
	.long	0x113ce
	.string	"grok_op_properties"
	.long	0x115ec
	.string	"xref_tag"
	.long	0x116f7
	.string	"xref_tag_from_type"
	.long	0x11765
	.string	"xref_basetypes"
	.long	0x11872
	.string	"start_enum"
	.long	0x118c3
	.string	"finish_enum"
	.long	0x119a5
	.string	"build_enumerator"
	.long	0x11ace
	.string	"start_function"
	.long	0x11dec
	.string	"begin_function_body"
	.long	0x11e2b
	.string	"finish_function_body"
	.long	0x11e6b
	.string	"finish_function"
	.long	0x11f5b
	.string	"start_method"
	.long	0x11fbf
	.string	"finish_method"
	.long	0x1203d
	.string	"maybe_register_incomplete_var"
	.long	0x120b5
	.string	"complete_vars"
	.long	0x12126
	.string	"cxx_maybe_build_cleanup"
	.long	0x121a0
	.string	"finish_stmt"
	.long	0x121be
	.string	"revert_static_member_fn"
	.long	0x12229
	.string	"cxx_push_function_context"
	.long	0x12274
	.string	"cxx_pop_function_context"
	.long	0x122b1
	.string	"cp_tree_node_structure"
	.long	0x122f6
	.string	"identifier_global_value"
	.long	0x12336
	.string	"build_void_list_node"
	.long	0x123b5
	.string	"gt_ggc_mx_named_label_list"
	.long	0x12405
	.string	"gt_ggc_mx_named_label_use_list"
	.long	0x12459
	.string	"gt_ggc_mx_binding_table_s"
	.long	0x124bf
	.string	"gt_ggc_mx_cp_binding_level"
	.long	0x1250f
	.string	"gt_ggc_mx_cxx_saved_binding"
	.long	0x12566
	.string	"gt_ggc_mx_saved_scope"
	.long	0x125b1
	.string	"gt_ggc_mx_lang_id2"
	.long	0x125f9
	.string	"gt_ggc_mx_binding_entry_s"
	.long	0x12648
	.string	"gt_ggc_mx_cxx_binding"
	.long	0x12699
	.string	"gt_ggc_mx_lang_tree_node"
	.long	0x12753
	.string	"gt_ggc_mx_lang_decl"
	.long	0x1279f
	.string	"gt_ggc_mx_lang_type"
	.long	0x127eb
	.string	"gt_ggc_mx_language_function"
	.long	0x13214
	.string	"cp_global_trees"
	.long	0x13232
	.string	"scope_chain"
	.long	0x13284
	.string	"adding_implicit_members"
	.long	0x132ab
	.string	"error_mark_list"
	.long	0x132c9
	.string	"integer_two_node"
	.long	0x132e8
	.string	"integer_three_node"
	.long	0x13309
	.string	"anonymous_namespace_name"
	.long	0x13331
	.string	"function_depth"
	.long	0x13396
	.string	"static_aggregates"
	.long	0x13434
	.string	"have_extern_spec"
	.long	0x13496
	.string	"last_function_parms"
	.long	0x1354b
	.string	"gt_ggc_rtab"
	.long	0x1357b
	.string	"gt_ggc_deletable_rtab"
	.long	0x135c0
	.string	"gt_ggc_cache_rtab"
	.long	0x13687
	.string	"gt_ggc_r_gt_cp_decl_h"
	.long	0x136c0
	.string	"gt_ggc_rd_gt_cp_decl_h"
	.long	0x136fa
	.string	"gt_ggc_r_gtype_cp_h"
	.long	0x0
	.section	.debug_aranges,"",@progbits
	.long	0x1c
	.value	0x2
	.long	.Ldebug_info0
	.byte	0x4
	.byte	0x0
	.value	0x0
	.value	0x0
	.long	.Ltext0
	.long	.Letext0-.Ltext0
	.long	0x0
	.long	0x0
	.section	.debug_str,"",@progbits
.LASF76:
	.string	"scope_kind"
.LASF78:
	.string	"special_function_kind"
.LASF126:
	.string	"inlinep"
.LASF31:
	.string	"name"
.LASF39:
	.string	"result"
.LASF55:
	.string	"class_value"
.LASF36:
	.string	"cannot_inline"
.LASF91:
	.string	"shadowed"
.LASF10:
	.string	"lang_flag_0"
.LASF11:
	.string	"lang_flag_1"
.LASF12:
	.string	"lang_flag_2"
.LASF16:
	.string	"lang_flag_6"
.LASF75:
	.string	"befriending_classes"
.LASF127:
	.string	"friendp"
.LASF128:
	.string	"raises"
.LASF85:
	.string	"entry"
.LASF122:
	.string	"compound_stmt"
.LASF24:
	.string	"size"
.LASF86:
	.string	"table"
.LASF57:
	.string	"scope"
.LASF40:
	.string	"mem_attrs"
.LASF45:
	.string	"bindings"
.LASF77:
	.string	"tmpl_spec_kind"
.LASF109:
	.string	"attrs"
.LASF135:
	.string	"inner_decl"
.LASF72:
	.string	"interface_unknown"
.LASF56:
	.string	"cxx_binding"
.LASF110:
	.string	"parmtypes"
.LASF132:
	.string	"in_namespace"
.LASF113:
	.string	"declarator"
.LASF83:
	.string	"diagnostic_context"
.LASF1:
	.string	"common"
.LASF114:
	.string	"initialized"
.LASF99:
	.string	"old_decl"
.LASF47:
	.string	"cpp_hashnode"
.LASF58:
	.string	"level"
.LASF33:
	.string	"lang_specific"
.LASF44:
	.string	"sequence_rtl_expr"
.LASF97:
	.string	"newtype"
.LASF96:
	.string	"types_match"
.LASF70:
	.string	"old_value"
.LASF52:
	.string	"cxx_saved_binding"
.LASF43:
	.string	"sequence_stack"
.LASF38:
	.string	"function_frequency"
.LASF63:
	.string	"filename"
.LASF13:
	.string	"lang_flag_3"
.LASF34:
	.string	"function"
.LASF64:
	.string	"old_bindings"
.LASF87:
	.string	"newlevel"
.LASF42:
	.string	"next"
.LASF6:
	.string	"unsigned int"
.LASF125:
	.string	"virtualp"
.LASF80:
	.string	"operator_name_info_t"
.LASF102:
	.string	"fullname"
.LASF69:
	.string	"label_decl"
.LASF136:
	.string	"tag_code"
.LASF23:
	.string	"abstract_origin"
.LASF30:
	.string	"align"
.LASF124:
	.string	"ctype"
.LASF119:
	.string	"arg_types"
.LASF28:
	.string	"pointer_depth"
.LASF61:
	.string	"binding_depth"
.LASF73:
	.string	"use_template"
.LASF29:
	.string	"user_align"
.LASF66:
	.string	"function_decl"
.LASF50:
	.string	"operator_code"
.LASF81:
	.string	"decl_context"
.LASF103:
	.string	"complain"
.LASF25:
	.string	"size_unit"
.LASF105:
	.string	"namespaces_only"
.LASF138:
	.string	"current_function_parms"
.LASF108:
	.string	"predefined_identifier"
.LASF133:
	.string	"specbits"
.LASF4:
	.string	"type"
.LASF123:
	.string	"if_stmt"
.LASF37:
	.string	"language"
.LASF84:
	.string	"init"
.LASF9:
	.string	"chain"
.LASF71:
	.string	"interface_only"
.LASF20:
	.string	"value"
.LASF54:
	.string	"binding"
.LASF82:
	.string	"output_buffer"
.LASF95:
	.string	"olddecl"
.LASF93:
	.string	"globalize"
.LASF22:
	.string	"subblocks"
.LASF35:
	.string	"args_size"
.LASF111:
	.string	"field"
.LASF62:
	.string	"chain_count"
.LASF27:
	.string	"precision"
.LASF120:
	.string	"fntype"
.LASF121:
	.string	"fndecl"
.LASF8:
	.string	"built_in_class"
.LASF89:
	.string	"decls"
.LASF104:
	.string	"prefer_type"
.LASF115:
	.string	"cleanup"
.LASF100:
	.string	"identified"
.LASF92:
	.string	"namespace"
.LASF2:
	.string	"identifier"
.LASF90:
	.string	"outer_binding"
.LASF14:
	.string	"lang_flag_4"
.LASF15:
	.string	"lang_flag_5"
.LASF17:
	.string	"lang_flag_7"
.LASF21:
	.string	"abstract_flag"
.LASF49:
	.string	"cpp_macro"
.LASF68:
	.string	"names_in_scope"
.LASF51:
	.string	"x_stmt_tree"
.LASF0:
	.string	"code"
.LASF32:
	.string	"context"
.LASF101:
	.string	"switch_stmt"
.LASF65:
	.string	"class_type"
.LASF41:
	.string	"unsignedp"
.LASF19:
	.string	"ht_identifier"
.LASF59:
	.string	"level_chain"
.LASF130:
	.string	"funcdef_flag"
.LASF46:
	.string	"data"
.LASF67:
	.string	"binding_level"
.LASF117:
	.string	"saved_stmts_are_full_exprs_p"
.LASF106:
	.string	"typename"
.LASF60:
	.string	"tag_transparent"
.LASF131:
	.string	"template_count"
.LASF116:
	.string	"do_default"
.LASF134:
	.string	"attrlist"
.LASF94:
	.string	"newdecl"
.LASF74:
	.string	"template_info"
.LASF88:
	.string	"__FUNCTION__"
.LASF53:
	.string	"previous"
.LASF107:
	.string	"args"
.LASF48:
	.string	"flags"
.LASF137:
	.string	"enumtype"
.LASF5:
	.string	"block"
.LASF118:
	.string	"asmspec_tree"
.LASF129:
	.string	"publicp"
.LASF98:
	.string	"oldstatic"
.LASF112:
	.string	"declspecs"
.LASF7:
	.string	"_IO_FILE"
.LASF26:
	.string	"attributes"
.LASF3:
	.string	"decl"
.LASF18:
	.string	"length"
.LASF79:
	.string	"tsubst_flags_t"
	.ident	"GCC: (GNU) 4.1.2 (Ubuntu 4.1.2-0ubuntu4)"
	.section	.text.__i686.get_pc_thunk.cx,"axG",@progbits,__i686.get_pc_thunk.cx,comdat
.globl __i686.get_pc_thunk.cx
	.hidden	__i686.get_pc_thunk.cx
	.type	__i686.get_pc_thunk.cx, @function
__i686.get_pc_thunk.cx:
	movl	(%esp), %ecx
	ret
	.section	.text.__i686.get_pc_thunk.bx,"axG",@progbits,__i686.get_pc_thunk.bx,comdat
.globl __i686.get_pc_thunk.bx
	.hidden	__i686.get_pc_thunk.bx
	.type	__i686.get_pc_thunk.bx, @function
__i686.get_pc_thunk.bx:
	movl	(%esp), %ebx
	ret
	.section	.note.GNU-stack,"",@progbits
