# -*- Makefile -*-
#
#  Copyright 2003, 2004, 2005, 2006 PathScale, Inc.  All Rights Reserved.
#  File modified June 20, 2003 by PathScale, Inc. to update Open64 C/C++ 
#  front-ends to GNU 3.2.2 release.
#

#
#  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if 
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.
#
#  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
#  Mountain View, CA 94043, or:
#
#  http://www.sgi.com
#
#  For further information regarding this notice, see:
#
#  http://oss.sgi.com/projects/GenInfo/NoticeExplan
#
#

#
#  Makefile.base for f95_coco
#

#----------------------------------------------------------------------
#  Set environment variables
#
#  TARGDIR   :  is the targ specific directory in which we do build. 
#               e.q.  /d1/cmplrs.src/v4.00/host32
#
#----------------------------------------------------------------------
TARGDIR = $(BUILD_AREA)

#----------------------------------------------------------------------
#  Include the usual commondefs
#----------------------------------------------------------------------
include $(COMMONDEFS)

#----------------------------------------------------------------------
#  Set environment variables
#----------------------------------------------------------------------

#----------------------------------------------------------------------
#  Compiler Options
#----------------------------------------------------------------------

F90FLAGS += -DKEY
# Not clear whether BUILD_OS is host or target: anyay, we want this to be
# the OS on which coco will read Fortran source files and write its output
F90FLAGS += -D$(BUILD_OS)

#----------------------------------------------------------------------
#  List of directories, and source files of interest
#----------------------------------------------------------------------

FE_DIR 			= $(BUILD_BASE)

# These are the directories in which to look for source files.

SRC_DIRS =		\
  $(FE_DIR)
INC_DIRS =

#----------------------------------------------------------------------
#  List of source files.  Please keep them in alphabetical order.
#----------------------------------------------------------------------

F90FILES =		\
  coco.F90

F90OBJECTS = $(F90FILES:.F90=.o)

OBJECTS = $(F90OBJECTS)

VPATH    =  $(SRC_DIRS)

# setup stuff to build shared or non-shared
GLDOPTS = $(STD_LOAD_OPTS)

LDIRT =

#+----------------------------------------------------------------------
#  Extra Rules
#----------------------------------------------------------------------
.SUFFIXES: .F90

#------------------------------------------------------------
#  Define target
#------------------------------------------------------------
TARGETS = coco

#----------------------------------------------------------------------
#  Variables describing additional sources, objects, and libraries
#----------------------------------------------------------------------

default: first $(TARGETS) last

#----------------------------------------------------------------------
#  The commands in this section are done BEFORE any other target is 
#  built.
#----------------------------------------------------------------------
first:

#----------------------------------------------------------------------
#  The commands in this section are done AFTER every other target is 
#  built.
#----------------------------------------------------------------------
last:

# Imitate crayf90/sgi
install: default
ifeq ($(BUILD_OS), LINUX)
	$(STD_INSTALL) $(STD_INSTALL_EXEC_MASK) -D coco $(STD_MONGOOSE_LINUX_LOC)/coco
else
	$(STD_INSTALL) $(STD_INSTALL_EXEC_MASK) -F $(STD_MONGOOSE_LOC) coco
endif

coco :  $(OBJECTS)
	$(link.f90f) -o coco $(OBJECTS) $(LDFLAGS)

#----------------------------------------------------------------------
#  Include the usual commonrules
#----------------------------------------------------------------------
include $(COMMONRULES)
