# -*- Makefile -*-
#
#  Runtime library for supporting Coarray Fortran
#
#  Copyright (C) 2010-2013 University of Houston.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement 
#  or the like.  Any license provided herein, whether implied or 
#  otherwise, applies only to this software file.  Patent licenses, if 
#  any, provided herein do not apply to combinations of this program with 
#  other software, or any other product whatsoever.  
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.
#
#  Contact information: 
#  http://www.cs.uh.edu/~hpctools
#
#

GASNET_CONDUIT ?=mpi

################################################################


# What we're building, and where to find it.
LIBRARY := libcaf-gasnet-$(GASNET_CONDUIT).a
TARGETS = $(LIBRARY)
SRC_DIRS    = $(BUILD_BASE)
dso_version := 1
DSO = libcaf-gasnet-$(GASNET_CONDUIT).so.$(dso_version)

# Makefile setup
include $(COMMONDEFS)

ifeq ($(BUILD_TYPE), NONSHARED)
TARGETS = $(LIBRARY)
else
TARGETS = $(LIBRARY) $(DSO)
endif

VPATH    =  $(SRC_DIRS)

# Compiler options
STD_COMPILE_OPTS += -DGASNETI_BUG1389_WORKAROUND
LCOPTS = $(STD_COMPILE_OPTS) $(STD_C_OPTS)
LCDEFS = $(HOSTDEFS) $(TARGDEFS)
LCDEFS += -D_LITTLE_ENDIAN -D_WORD32 -D_LIB_INTERNAL -D_GNU_SOURCE -U__mips -DKEY -DPATHSCALE_MERGE
LCDEFS += -DGASNET_ALLOW_OPTIMIZED_DEBUG
ifeq ($(BUILD_OPTIMIZE),DEBUG)
LCDEFS += -DCAFRT_DEBUG
endif
ifeq ($(CAFRT_ENABLE_TRACES), YES)
LCDEFS += -DTRACE
endif
ifeq ($(CAFRT_ENABLE_PROFILES), YES)
LCDEFS += -DPCAF_INSTRUMENT -DEPIK
endif
LCDEFS += -DNB_COMM
LCINCS = -I$(BUILD_BASE)/../../clibinc
LCINCS += -I$(BUILD_BASE)/../../clibinc/cray
LCINCS += -I$(BUILD_BASE)/../uthash
LCINCS += -I$(EPIK_ROOT)/include

CFLAGS += -DTARG_$(BUILD_TARGET)

CFILES = \
	caf_rtl.c \
	caf_collectives.c \
	gasnet_comm_layer.c  \
	alloc.c \
	service.c \
	lock.c \
	env.c \
	util.c

ifeq ($(CAFRT_ENABLE_TRACES), YES)
CFILES += trace.c
endif

ifeq ($(CAFRT_ENABLE_PROFILES), YES)
CFILES += profile.c
endif

LCINCS += -I$(GASNET_HOME)/include 
LCINCS += -I$(GASNET_HOME)/include/$(GASNET_CONDUIT)-conduit
LCDEFS += -DGASNET # -DPERM_ANAL

ifeq ($(GASNET_CONDUIT),ibv)
LCDEFS += -DGASNET_CONDUIT_IBV
endif
ifeq ($(GASNET_CONDUIT),vapi)
LCDEFS += -DGASNET_CONDUIT_VAPI
endif
ifeq ($(GASNET_CONDUIT),gemini)
LCDEFS += -DGASNET_CONDUIT_GEMINI
endif
ifeq ($(GASNET_CONDUIT),mpi)
LCDEFS += -DGASNET_CONDUIT_MPI
LCINCS += -I$(MPI_INCLUDE)
endif

default: $(TARGETS)

$(LIBRARY): $(OBJECTS)
	$(ar) cru $@ $^

$(DSO): $(OBJECTS:%.o=%.pg.o)
ifeq ($(BUILD_OS), DARWIN)
	$(ld) $(STD_DSO_LOADOPTS) -Wl,-x -o $@ $^
else
	$(ld) $(STD_DSO_LOADOPTS) -Wl,-x -Wl,-soname=$(DSO) -o $@ $^
endif
	$(ln) -sf $(DSO) $(basename $(DSO))


include $(COMMONRULES)
