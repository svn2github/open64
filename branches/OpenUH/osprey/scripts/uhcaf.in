#!@BASH_PATH@
#
#
#  CAF compiler wrapper for OpenUH
#
#  Copyright (C) 2010-2011 University of Houston.
#
#  This program is free software; you can redistribute it and/or modify it
#  under the terms of version 2 of the GNU General Public License as
#  published by the Free Software Foundation.
#
#  This program is distributed in the hope that it would be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
#
#  Further, this software is distributed without any warranty that it is
#  free of the rightful claim of any third person regarding infringement
#  or the like.  Any license provided herein, whether implied or
#  otherwise, applies only to this software file.  Patent licenses, if
#  any, provided herein do not apply to combinations of this program with
#  other software, or any other product whatsoever.
#
#  You should have received a copy of the GNU General Public License along
#  with this program; if not, write the Free Software Foundation, Inc., 59
#  Temple Place - Suite 330, Boston MA 02111-1307, USA.
#
#  Contact information:
#  http://www.cs.uh.edu/~hpctools
#
#

progname="`basename $0`"

ARMCI_HOME=@ARMCI_HOME@
GASNET_HOME=@GASNET_HOME@
GASNET_CONDUIT=`echo "@GASNET_CONDUITS@" | cut -d" " -f1`
COMM_LAYER=@DEFAULT_COMM@
CC=uhcc
FC=uhf90
FFLAGS="-coarray -fno-second-underscore"
ENVIRONMENT="-----------------------\n"

uhcaf_usage()
{
  cat <<_EOT_

Usage: $progname  [OPTION]... [SOURCE]... [-- [OPENUH_OPTIONS]]

Where options are

  --layer=L         L represents a specified runtime layer to support remote
                    accesses. Available layers are:
                        gasnet-<conduit>, where <conduit> may be one of: @GASNET_CONDUITS@
                        armci

  --gasnet-path=G   G is the path to a specified GASNet installation
                        Currently set to: $GASNET_HOME

  --armci-path=A    A is the path to a specified ARMCI installation
                        Currently set to: $ARMCI_HOME

  --help, -h        Displays this menu

  --help2, -H       Displays available options for OpenUH compiler

  --verbose, -v     Output the command to be run

  --keep, -k        Keep any temporary files in current directory

Environment Variables:

   ARMCI_NETWORK    Specifies network layer for ARMCI installation. See ARMCI documentation.

   MSG_COMMS        Messaging library used by ARMCI. Default is MPI.

   TARGET           Target for the ARMCI installation. Defaults to LINUX64.

   ARMCI_LIB        Path containing ARMCI lib (e.g. libarmci.a), if necessary.
                        Typically: \$ARMCI_HOME/lib/\$TARGET

   MPI_LIB          Path to MPI lib, if necessary.

   LIBMPI           Explicitly specify MPI libs to link in.
                         Default is: -L\$MPI_LIB -lmpi

_EOT_

  exit 1
}

uhf90_usage()
{
  uhf90 --help
  exit 1
}

add_to_env_list()
{
  var=$1
  val=$(eval "echo \$$1")
  ENVIRONMENT+="  $var: $val\n"
}

set_env()
{
  var=$1
  shift
  val="$*"

  cmd="$var=\"$val\"; export $var"
  eval $cmd

  add_to_env_list $var $val
}

print_error()
{
  echo "Error: $1" >&2
  exit 1
}

print_warning()
{
  echo "Warning: $1" >&2
}


# -------------------------------------------------------------------

if [ $# -eq 0 ]; then
  uhcaf_usage
fi

options="`getopt \
		-u \
		-n "$progname" \
        -l gasnet-path: \
        -l armci-path: \
		-l layer: \
		-l help \
		-l help2 \
		-l verbose \
        -l keep \
        -o vhHk \
		-- \
		$*`"

# check ret status
case $? in
  0)
    ;;
  *)
    uhcaf_usage
    ;;
esac


set -- $options

verbose='n'

keep='n'

while [ $1 != "--" ]
do
  case $1 in
    -v | --verbose)
      verbose='y'
      FFLAGS+=" -show"
      ;;
    -h | --help)
      uhcaf_usage
      ;;
    -H | --help2)
      uhf90_usage
      ;;
    -k | --keep)
      keep='y'
      ;;
    --gasnet-path)
      shift
      if [ ! -d "$1" ]; then
        print_error "$1 does not exist"
      fi
      GASNET_HOME=$1
      ;;
    --armci-path)
      shift
      if [ ! -d "$1" ]; then
        print_error "$1 does not exist"
      fi
      ARMCI_HOME=$1
      ;;
    --layer)
      shift
      layer=`echo $1 | tr '[:upper:]' '[:lower:]'`
      if [ $layer == armci ]; then
        COMM_LAYER=armci
      elif [[ $layer == gasnet-* ]]; then
        GASNET_CONDUIT=`echo $layer | sed 's/gasnet-//'`
        valid=0
        for gc in @GASNET CONDUITS@; do
          if [ $GASNET_CONDUIT == $gc ]; then
            valid=1
          fi
        done
        if [ $valid == 0 ]; then
          print_error "$layer is not available"
        fi
        COMM_LAYER=gasnet
      elif [ $layer == gasnet ]; then
        COMM_LAYER=gasnet
      else
        print_error "$1 layer is not supported"
      fi

      ;;
  esac
  shift
done

# command for creating temporary files
if [ "$keep" == "y" ]; then
  if [ ! -d uhcaf.keep ]; then
    mkdir uhcaf.keep
  fi
  mktemp_cmd="mktemp -p uhcaf.keep"
else
  mktemp_cmd="mktemp"
fi

if [ -z "$COMM_LAYER" ]; then
  print_error "No communication layer specified"
elif [ "$COMM_LAYER" != "gasnet" -a "$COMM_LAYER" != "armci" ]; then
  print_error "Invalid comm layer specified: $COMM_LAYER"
fi

if [ $COMM_LAYER == gasnet -a -z "$GASNET_HOME" ]; then
  print_error "gasnet layer is not available"
elif [ $COMM_LAYER == armci -a -z "$ARMCI_HOME" ]; then
  print_error "armci layer is not available"
fi


# now gobble option end marker
shift


if [ $COMM_LAYER == gasnet ]; then

  if [ -z "$GASNET_CONDUIT" ]; then
     print_error "No gasnet conduit set."
  fi

  if [ "$keep" == "y" ]; then
    temp_name=`$mktemp_cmd`
    mv $temp_name $temp_name.mak
    echo -e "uhcaf-rule:\n\t@echo \$(GASNET_LIBS)"  \
     | cat ${GASNET_HOME}/include/$GASNET_CONDUIT-conduit/$GASNET_CONDUIT-par.mak - \
     > $temp_name.mak
    COMM_LIBS=`make uhcaf-rule --no-print-directory -sf $temp_name.mak`
  else
    get_libs="echo -e \"uhcaf-rule:\n\t@echo \\\$(GASNET_LIBS)\"  \
        | cat ${GASNET_HOME}/include/$GASNET_CONDUIT-conduit/$GASNET_CONDUIT-par.mak -  \
        | make uhcaf-rule --no-print-directory -sf -"
    COMM_LIBS=`eval $get_libs`
  fi

  if [ $GASNET_CONDUIT != smp ]; then
    # need to link in MPI libs as well. If LIBMPI isn't defined, then
    # just use -L${MPI_LIB} -lmpi
    if [ -z "$LIBMPI" ] ; then
      if [ -z "$MPI_LIB" ]; then
        print_error "MPI_LIB needs to be set"
      elif [ ! -d "$MPI_LIB" ]; then
        print_error "MPI_LIB needs to be set to valid path. Currently: $MPI_LIB"
      fi
      LIBMPI="-L${MPI_LIB} -lmpi"
    fi
    COMM_LIBS="-Wl,-rpath,$MPI_LIB $LIBMPI $COMM_LIBS"

    add_to_env_list "MPI_LIB"
    add_to_env_list "LIBMPI"

    if [ $GASNET_CONDUIT == udp ]; then
      FFLAGS+=" -link-gcpp"  # use g++ for link if layer is gasnet-udp 
    fi
  fi

  COMM_LIBS="-lcaf-gasnet-$GASNET_CONDUIT $COMM_LIBS"

elif [ $COMM_LAYER == armci ]; then

  if [ -z "$MSG_COMMS" -o "$MSG_COMMS" = "mpi" ]; then
    set_env MSG_COMMS "MPI"
  else
    add_to_env_list "MSG_COMMS"
  fi

  if [ -z "$TARGET" ]; then
    set_env TARGET "LINUX64"
  else
    add_to_env_list "TARGET"
  fi

  if [ $MSG_COMMS = MPI -a ! -d "$MPI_LIB" ]; then
    print_error "MPI_LIB needs to be set to valid path. Currently: $MPI_LIB"
  fi

  get_libs="echo -e \"uhcaf-rule:\n\t@echo -larmci \\\$(MP_LIBS) \\\$(COMM_LIBS)\" \
        | cat  ${ARMCI_HOME}/config/makemp.h ${ARMCI_HOME}/config/makecoms.h - \
        | make uhcaf-rule --no-print-directory -sf -"

  COMM_LIBS=`eval $get_libs`
  if [ $MSG_COMMS = MPI ]; then
    COMM_LIBS+=" -Wl,-rpath,$MPI_LIB "
  fi

  # find location of libarmci.a
  if [ -z "$ARMCI_LIB" ] ; then
    ARMCI_LIB=$ARMCI_HOME/lib/$TARGET
  fi
  if [ ! -f $ARMCI_LIB/libarmci.a ]; then
    print_error "Could not find libarmci.a. Check TARGET or specify location using ARMCI_LIB."
  fi

  COMM_LIBS="-lcaf-armci -L$ARMCI_LIB $COMM_LIBS"

  add_to_env_list "MPI_LIB"
  add_to_env_list "ARMCI_NETWORK"
  add_to_env_list "ARMCI_LIB"

fi

set_env OPENUH_COMM_LIBS $COMM_LIBS
set_env OPENUH_COMM_LAYER $COMM_LAYER

ENVIRONMENT+="-----------------------\n"

# add some symbols into executable for cafrun script to check
#
temp_name=`$mktemp_cmd`
symbol_defs="int OPENUH_COMM_LAYER_IS_$OPENUH_COMM_LAYER; \
            int OPENUH_GASNET_CONDUIT_IS_$GASNET_CONDUIT;"

rm -f $temp_name
echo $symbol_defs | $CC -c -x c -o $temp_name.o -

if [ "$keep" == "y" ]; then
  keep_opt="-keep"
else
  keep_opt=""
fi

case $verbose in
  y)
    echo "$progname environment:"
    echo -e $ENVIRONMENT
    echo
    echo "$progname:"
    echo "  $FC $FFLAGS $keep_opt $* $temp_name.o"
    echo
    ;;
  *)
    ;;
esac

$FC $FFLAGS $keep_opt $* $temp_name.o

if [ "$keep" == "n" ]; then
  rm -f $temp_name.o
fi
