#!/usr/bin/perl

=COMMENT
Wrapper on uhf90 for compiling CAF programs.
Usage: uhcaf [options] file.caf...
Options:
 --layer=gasnet/armci	default gasnet
 --show-uhf90-options
 --help
 All uhf90 options also applicable 
=cut

use Switch;

my $gasnet_conduit='MPI';
my $armci_conduit='MPI';
my $default_comm_layer='GASNET';
my $comm_layer=$default_comm_layer;
my $cmd = 'uhf90';
my @fixed_args=('-coarray','-fno-second-underscore');
my @final_cmd;
my @params;
my $show=0;
my $file_present=0;
my $MPI_LIB;

my $usage="Usage: uhcaf [options] file
Options:
--layer=GASNET/ARMCI	default $default_comm_layer
--show-uhf90-options
--help or -h
All uhf90 options also applicable
Environment Variables:
UHCAF_LOG_LEVELS: $ENV{'UHCAF_LOG_LEVELS'}        - default FATAL; Available Levels: 
    FATAL:DEBUG:TIME:NOTICE:TIME_SUMMARY:INIT:MEMORY:CACHE:BARRIER:REDUCE:SYMBOLS 
    You may also set it to 'all'
UHCAF_TRACE_FILE: $ENV{'UHCAF_TRACE_FILE'}        - Trace file, default stderr
GASNET_PSHM_NODES: $ENV{'GASNET_PSHM_NODES'}       - Number of images (SMP conduit only)
UHCAF_SHARED_MEMORY_SIZE: $ENV{'UHCAF_SHARED_MEMORY_SIZE'}- Total Memory Size for coarrays,default 30MB\n";

$ENV{'OPENUH_GASNET_CONDUIT'}=$gasnet_conduit;
$ENV{'OPENUH_ARMCI_CONDUIT'}=$armci_conduit;

die "uhcaf: no input file\n$usage" if ($#ARGV==-1);

foreach (@ARGV){
	if(/^--(.*?)=(.*$)/){ # arg starts with --, and has =
		switch (uc $1){
			case "LAYER"{
                if ( ((uc $2) eq "GASNET") || ((uc $2) eq "ARMCI") ){
                   $comm_layer=(uc $2);
                }
                else{
                    die "Unknown layer $2. Must be ARMCI/GASNET. Aborting..\n";
                }
			}
			case "OPTIONS"{
                push(@params,$2);
			}
			else{ #add the flag anyway
                push(@params,$_);
			}
		}
	}
	elsif(/.*\..*$/){ #arg is a *.* assuming some filename
		$file_present=1;
        push(@params,$_);
	}
	elsif(/-help/ or $_ eq '-h'){
		print "uhcaf is a wrapper on uhf90 for coarray fortran\n",$usage;
        exit 0;
	}
    elsif(/-show-uhf90-options/){
        system("uhf90","--help");
        die "command failed: $!\n" if($?==-1);
        exit $?>>8;
    }
    elsif(/-show/){
        $show=1;
        push(@params,$_);
    }
	else{
        push(@params,$_);
	}
}

$ENV{'OPENUH_COMM_LAYER'}=$comm_layer;
if($comm_layer eq 'GASNET'){
    $ENV{'GASNET_VIS_AMPIPE'}=1; #Enable packing of non-contiguous put/get
}

if ($file_present == 0){
    @final_cmd = ($cmd,@params);
    if ($show) {
        print "@final_cmd\n";
    }
    system(@final_cmd);
    die "command failed: $!\n" if ($?==-1);
    exit $?>>8;
}

if ($comm_layer eq 'GASNET' and $gasnet_conduit eq 'SMP'){
    @final_cmd = ($cmd,@fixed_args,@params);
    if ($show) {
      print "@final_cmd\n";
    }
    warn "Warning: Set environment variable GASNET_PSHM_NODES or pass --num-pshm-nodes=<n> to cafrun\n"
    unless (defined($ENV{'GASNET_PSHM_NODES'}));
    system(@final_cmd);
    die "command failed: $!\n" if ($?==-1);
    exit $?>>8;
}
else {
    die "Environment Variable MPI_LIB is not set\n" unless($ENV{'MPI_LIB'});
    $MPI_LIB=$ENV{'MPI_LIB'};
    push(@fixed_args,"-L$MPI_LIB");
    push(@fixed_args,"-lmpi");
    @final_cmd = ($cmd, @fixed_args, @params);
    if ($show) {
      print "@final_cmd\n";
    }
    system(@final_cmd);
    die "command failed: $!\n" if ($?==-1);
    exit $?>>8;
}
