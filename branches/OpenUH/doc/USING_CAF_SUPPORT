--------------------------------------------
README for OpenUH CAF (UHCAF) implementation
--------------------------------------------

CAF Installation
------------------

Minimally, to build and install (non-debug installation), do:

$ mkdir openuh-build
$ cd openuh-build
[openuh-build]$ ../source/configure --prefix=<openuh-install-path> \
                --enable-coarrays \
                --with-gasnet-root=<gasnet-install-path>    \
                --with-armci-root=<armci-install-path> \
                --with-armci-network-libs=<additional linker args>
[openuh-build]$ make all
[openuh-build]$ make install

You can use either GASNet or ARMCI or both.

When configuring, you may specify location of GASNet and/or ARMCI installation
(these are the currently supported runtimes that provide 1-sided communication
plus other features). The UH CAF runtime is compatible with GASNet version >=
1.18.2 and ARMCI version >= 5.0. Both these libraries also require MPI to be
installed on the system. If using ARMCI, additional arguments for the network
libraries to be linked in may be specified. For example, for Infiniband
network one may need to add --with-armci-network-libs="-libverbs".

GASNet source download:
    http://gasnet.cs.berkeley.edu/#download

ARMCI source download (part of Global Array Toolkit):
    http://www.emsl.pnl.gov/docs/global/download.shtml


Note that the above three commands should be run from a build directory that
you create outside the OpenUH source tree. For more configure options:
$ ../openuh-source/configure --help

If you need to rerun the configure script, you should probably first delete your
build directory (BUILD directory, not your SOURCE directory!), and then do 'make
all' again. You can also make specific compiler components, enable debug build,
or display verbose build progress with various options specified on the make
command. Type 'make help' and look at the Makefile for further details. In full,
building the entire compiler + libraries may take up to an hour or more,
depending on your system and whether or not you did a parallel make (with the -j
option).

After you have finished building the compiler, the make install command will
install the GNU front-end files and the actual compiler and runtime libraries
into your installation path (specified by prefix). If you open the Makefile,
you can specify a different prefix if you want to change your installation
path without redoing the configure. If you only want to install/reinstall the
openuh compiler/runtime and not the files associated with the GNU front-end,
you can try make install_compiler instead.

To install the compiler in a x86_64 machine
without 32-bit compatible libraries:

[openuh-build]$ ../source/configure <prev-options>    \
                 --build=x86_64-unknown-linux-gnu     \
                 --target=x86_64-unknown-linux-gnu    \
                 --host=x86_64-unknown-linux-gnu

[openuh-build]$ make ALL_TARGETS="build lib2"
[openuh-build]$ make install

Known Limitations
------------------

Please report incorrect or unsupported Fortran 2008 coarray functionality to
openuh@cs.uh.edu.


Using OpenUH CAF compiler
------------------------
uhcaf is a compiler wrapper for Coarray Fortran.

Usage: uhcaf  [OPTION]... [OPENUH_OPTION]... [SOURCE]...

Where options are

  --layer=L         L represents a specified runtime layer to support remote
                    accesses. Available layers are:
                        gasnet-<conduit>, where <conduit> may be one of: mpi smp udp
                        armci

  --gasnet-path=G   G is the path to a specified GASNet installation
                          Currently set to: $GASNET_HOME

  --armci-path=A    A is the path to a specified ARMCI installation
                          Currently set to: $ARMCI_HOME

  --help, -h        Displays this menu

  --help2, -H       Displays available options for OpenUH compiler

  --verbose         Displays UHCAF environment variables, and invocation
                    commands used by script and underlying compiler

  --show            Displays compiler defaults and linker settings for UHCAF
                    compiler and exits

  --keep, -k        Keep any temporary files in current directory

Environment Variables:

   MPI_LIB          Path to MPI libs may be required. Should be compatible
                    with GASNet or ARMCI installation being used.
                        Currently: $MPI_LIB

   MPI_LD_LIBS      Explicitly specify MPI libs to link in.
                        Currently: $MPI_LD_LIBS

   AUX_LD_LIBS      Optionally specify additional libraries that should be
                    linked in.
                        Currently: $AUX_LD_LIBS


Example:

$ uhcaf --layer=gasnet-smp  -O3 program.caf -o program


Launching a CAF Program
-----------------------

cafrun is a launcher for ror running CAF programs compiled with OpenUH.

Usage: cafrun  [OPTIONS]... PROGRAM... -- [LAUNCHER OPTIONS]...

Where OPTIONS are:

  --num-images=N
  -n,-np N            N is number of images to use

  --image-heap=I      I is heap size per image for storing coarray data. It
                      may be an integer which indicates size in bytes, or it
                      may have the suffixes K, M, G which indicates size in
                      kilobytes, megabytes, and gigabytes, respectively.

  --trace=L           Sets trace levels for runtime.
                      L=all or trace levels delimited by ':'.
                        Available trace levels:
                        FATAL:DEBUG:TIME:NOTICE:TIME_SUMMARY:INIT:EXIT:
                        COMM:MEMORY:CACHE:SYNC:COLLECTIVE:SERVICE:MEMORY_SUMMARY

  --trace-file=F      F is name of file to store trace

  --verbose,-v        Verbose output

  --show              Display launch settings and command, but does not run
                      program

  --help              Prints this menu and exits

  --help2             Prints underlying LAUNCHER OPTIONS and exits

  --help-env          Prints available environment variables for controlling
                      runtime environment and exits

  --version,-V        Print version of cafrun and exits


Example:

$ cafrun --num-images=16 --trace=TIME_SUMMARY program

