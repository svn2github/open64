--------------------------------------------
README for OpenUH CAF (UHCAF) implementation
--------------------------------------------

CAF Installation
------------------

Minimally, to build and install (non-debug installation), do:

$ mkdir openuh-build
$ cd openuh-build
[openuh-build]$ ../source/configure --prefix=<openuh-install-path> \
                --enable-coarrays \
                --with-gasnet-root=<gasnet-install-path>    \
                --with-armci-root=<armci-install-path>
You can use either gasnet or armci or both.
[openuh-build]$ make all 
[openuh-build]$ make install

Note that the above three commands should be run from a build directory that
you create outside the OpenUH source tree. For more configure options:
$ ../openuh-source/configure --help


If you need to rerun the configure script, you should probably first delete your
build directory (BUILD directory, not your SOURCE directory!), and then do 'make
all' again. You can also make specific compiler components, enable debug build,
or display verbose build progress with various options specified on the make
command. Type 'make help' and look at the Makefile for further details. In full,
building the entire compiler + libraries may take up to an hour or more,
depending on your system and whether or not you did a parallel make (with the -j
option). 

After you have finished building the compiler, the make install command will
install the GNU front-end files and the actual compiler and runtime libraries
into your installation path (specified by prefix). If you open the Makefile,
you can specify a different prefix if you want to change your installation
path without redoing the configure. If you only want to install/reinstall the
openuh compiler/runtime and not the files associated with the GNU front-end,
you can try make install_compiler instead.

To install the compiler in a x86_64 machine
without 32-bit compatible libraries:

[openuh-build]$ ../source/configure <prev-options>    \
                 --build=x86_64-unknown-linux-gnu     \
                 --target=x86_64-unknown-linux-gnu    \
                 --host=x86_64-unknown-linux-gnu 

[openuh-build]$ make ALL_TARGETS="build lib2" 
[openuh-build]$ make install

Known Limitations
------------------

* CAF support in OpenUH is currenty limited to use of allocatable coarrays
unless a GASNet installation built with EVERYTHING shared segment
configuration is used. 

* Fortran 2008 locks are not yet supported.

* Accessing a pointer component of a remote coarray of derived type is not yet
  supported. E.g. this won't work:
       t(2:5) = a[3]%p(1:4)


Using OpenUH CAF compiler
------------------------

uhcaf is a compiler wrapper for coarray fortran

Usage: uhcaf  [OPTION]... [OPENUH_OPTION]... [SOURCE]...

Where options are

  --layer=L         L represents a specified runtime layer to support remote
                    accesses. Available layers are:
                        gasnet-<conduit>, where <conduit> may be one of: mpi
smp udp
                        armci

  --gasnet-path=G   G is the path to a specified GASNet installation
                        Currently set to:
/opt/berkeley/gasnet/gnu/1.18.0/everything

  --armci-path=A    A is the path to a specified ARMCI installation
                        Currently set to: /home/dreachem/runtimes/armci-1-4

  --help, -h        Displays this menu

  --help2, -H       Displays available options for OpenUH compiler

  --verbose         Displays UHCAF environment variables, and invocation
                    commands used by script and underlying compiler

  --show-info       Displays compiler defaults and linker settings for UHCAF
                    compiler and exits

  --keep, -k        Keep any temporary files in current directory

Environment Variables:

   ARMCI_NETWORK    Specifies network layer for ARMCI installation. See ARMCI
documentation.

   MSG_COMMS        Messaging library used by ARMCI. Default is MPI.

   TARGET           Target for the ARMCI installation. Defaults to LINUX64.

   ARMCI_LIB        Path containing ARMCI lib (e.g. libarmci.a), if necessary.
                        Typically: $ARMCI_HOME/lib/$TARGET

   MPI_LIB          Path to MPI lib, if necessary.

   LIBMPI           Explicitly specify MPI libs to link in.
                         Default is: -L$MPI_LIB -lmpi


Example:

$ uhcaf --layer=gasnet-smp  -O3 program.caf -o program


Launching a CAF Program
-----------------------

cafrun is a launcher for ror running CAF programs compiled with OpenUH.

Usage: cafrun  [OPTIONS]... [PROGRAM] [-- [LAUNCHER_OPTIONS]]

Where options are

  -n, --num-images=N  N is number of images to use

  --log-info=L        Sets additional info for runtime to log.
                      L=all or info list delimited by ':'.
                        Available information to log:
                        FATAL:DEBUG:TIME:NOTICE:TIME_SUMMARY:INIT:MEMORY:
                        CACHE:BARRIER:REDUCE:SYMBOLS

  --log-file=F        F is name of file to store log

  --image-heap=I      I is heap size per image for storing coarray data. It
                      may be an integer which indicates size in bytes, or it
                      may have the suffixes K, M, G which indicates size in
                      kilobytes, megabytes, and gigabytes, respectively.

  --help, -h          Displays this menu

  --help2, -H         Displays more options for underlying launcher (mpirun)

  --verbose, -v       Verbose

Environment Variables:

   LAUNCHER           Underlying program to use for launching CAF images.
                         Defaults to mpirun

   LAUNCHER_OPTS      Additional options to pass to underlying launcher apart
                      from number of processes to spawn.

   UHCAF_LOG_INFO     Specifies information for runtime to log.
                         Can be set with --log-info

   UHCAF_LOG_FILE     Specifies file to store runtime log
                         Can be set with --log-file

   UHCAF_IMAGE_NUM_IMAGES
                      Specifies number of images to launch.
                         Can be set/overridden with --num-images

   UHCAF_IMAGE_HEAP_SIZE
                      Specifies heap size per image for storing coarray data.
                         Can be set with --image-heap

   GASNET_PSHM_NODES  Set number of POSIX shared memory nodes for when
                      gasnet-smp layer is used.
                         Can be set with --num-images

Example:

$ cafrun --num-images=16 --log-info=TIME_SUMMARY program

