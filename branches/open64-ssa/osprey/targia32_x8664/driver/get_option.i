/* THIS FILE IS AUTOMATICALLY GENERATED BY table */

/* return option index */
extern int
get_option(int *argi, char *argv[])
{
/* don't reset optargs, as may contain needed info */
optargd = 0;
switch (argv[*argi][optindex]) {
case 'z':
	if (strcmp(argv[*argi],"-zerouv") == 0) {
		get_next_arg(argi);
		return O_zerouv;
		/* NOTREACHED */
	}
	break;
case 'y':
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_y,optargs);
		/* NOTREACHED */
	break;
case 'x':
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option_or_dash(O_x,optargs);
		/* NOTREACHED */
	break;
case 'w':
	if ((strncmp(argv[*argi],"-woff",5) == 0)
	&& strcmp(next_string_after("-woff",argv,argi),"options") == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_woffoptions;
		/* NOTREACHED */
	}
	if ((strncmp(argv[*argi],"-woff",5) == 0)
	&& strcmp(next_string_after("-woff",argv,argi),"all") == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_woffall;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-woff",5) == 0) {
		end_option(argv, argi, 5);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_woff__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-w66") == 0) {
		get_next_arg(argi);
		return O_w66;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-w3") == 0) {
		get_next_arg(argi);
		return O_w3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-w2") == 0) {
		get_next_arg(argi);
		return O_w2;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_w;
	/* NOTREACHED */
	break;
case 'v':
	if (strcmp(argv[*argi],"-vms_stdin") == 0) {
		get_next_arg(argi);
		return O_vms_stdin;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-vms_library") == 0) {
		get_next_arg(argi);
		return O_vms_library;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-vms_endfile") == 0) {
		get_next_arg(argi);
		return O_vms_endfile;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-vms_cc") == 0) {
		get_next_arg(argi);
		return O_vms_cc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-vms") == 0) {
		get_next_arg(argi);
		return O_vms;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-version") == 0) {
		get_next_arg(argi);
		return O_version;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-varargs") == 0) {
		get_next_arg(argi);
		return O_varargs;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_v;
	/* NOTREACHED */
	break;
case 'u':
	if (strcmp(argv[*argi],"-usegfe") == 0) {
		get_next_arg(argi);
		return O_usegfe;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-usefpidx") == 0) {
		get_next_arg(argi);
		return O_usefpidx;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-usef90") == 0) {
		get_next_arg(argi);
		return O_usef90;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-useas") == 0) {
		get_next_arg(argi);
		return O_useas;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-use_readwrite_const") == 0) {
		get_next_arg(argi);
		return O_use_readwrite_const;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-use_readonly_const") == 0) {
		get_next_arg(argi);
		return O_use_readonly_const;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-undef") == 0) {
		get_next_arg(argi);
		return O_undef;
		/* NOTREACHED */
	}
		return parse_u_option(argv, argi);
		/* NOTREACHED */
	break;
case 't':
	if (strcmp(argv[*argi],"-trigraphs") == 0) {
		get_next_arg(argi);
		return O_trigraphs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-trapuv") == 0) {
		get_next_arg(argi);
		return O_trapuv;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-traditional-cpp") == 0) {
		get_next_arg(argi);
		return O_traditional_cpp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-traditional") == 0) {
		get_next_arg(argi);
		return O_traditional;
		/* NOTREACHED */
	}
	break;
case 's':
	if (strcmp(argv[*argi],"-syntax-only") == 0) {
		get_next_arg(argi);
		return O_syntax_only;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-symbolic") == 0) {
		get_next_arg(argi);
		return O_symbolic;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-subverbose") == 0) {
		get_next_arg(argi);
		return O_subverbose;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-stdinc") == 0) {
		get_next_arg(argi);
		return O_stdinc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=iso9899:199x") == 0) {
		get_next_arg(argi);
		return O_stdQiso9899_199x;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=iso9899:1999") == 0) {
		get_next_arg(argi);
		return O_stdQiso9899_1999;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=iso9899:199409") == 0) {
		get_next_arg(argi);
		return O_stdQiso9899_199409;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=iso9899:1990") == 0) {
		get_next_arg(argi);
		return O_stdQiso9899_1990;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=gnu9x") == 0) {
		get_next_arg(argi);
		return O_stdQgnu9x;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=gnu99") == 0) {
		get_next_arg(argi);
		return O_stdQgnu99;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=gnu89") == 0) {
		get_next_arg(argi);
		return O_stdQgnu89;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=gnu++98") == 0) {
		get_next_arg(argi);
		return O_stdQgnu__98;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=c9x") == 0) {
		get_next_arg(argi);
		return O_stdQc9x;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=c99") == 0) {
		get_next_arg(argi);
		return O_stdQc99;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=c89") == 0) {
		get_next_arg(argi);
		return O_stdQc89;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-std=c++98") == 0) {
		get_next_arg(argi);
		return O_stdQc__98;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-static_threadprivate") == 0) {
		get_next_arg(argi);
		return O_static_threadprivate;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-static-threadprivate") == 0) {
		get_next_arg(argi);
		return O_static_threadprivate;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-static-libgcc") == 0) {
		get_next_arg(argi);
		return O_static_libgcc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-static-data") == 0) {
		get_next_arg(argi);
		return O_static_data;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-static") == 0) {
		get_next_arg(argi);
		return O_static;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-specs=",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_specsQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-soname",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_soname,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-showt") == 0) {
		get_next_arg(argi);
		return O_showt;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-showd") == 0) {
		get_next_arg(argi);
		return O_showd;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-show1") == 0) {
		get_next_arg(argi);
		return O_show1;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-show0") == 0) {
		get_next_arg(argi);
		return O_show0;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-show-defaults") == 0) {
		get_next_arg(argi);
		return O_show_defaults;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-show") == 0) {
		get_next_arg(argi);
		return O_show;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-shared-libgcc") == 0) {
		get_next_arg(argi);
		return O_shared_libgcc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-shared") == 0) {
		get_next_arg(argi);
		return O_shared;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-save-temps") == 0) {
		get_next_arg(argi);
		return O_save_temps;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_s;
	/* NOTREACHED */
	break;
case 'r':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-rpath",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_rpath,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-realO") == 0) {
		get_next_arg(argi);
		return O_realO;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-rdynamic") == 0) {
		get_next_arg(argi);
		return O_rdynamic;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-r8const") == 0) {
		get_next_arg(argi);
		return O_r8const;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-r8") == 0) {
		get_next_arg(argi);
		return O_r8;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-r4") == 0) {
		get_next_arg(argi);
		return O_r4;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_r;
	/* NOTREACHED */
	break;
case 'p':
	if (strcmp(argv[*argi],"-pthread") == 0) {
		get_next_arg(argi);
		return O_pthread;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-promp") == 0) {
		get_next_arg(argi);
		return O_promp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-profile") == 0) {
		get_next_arg(argi);
		return O_profile;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-print-search-dirs") == 0) {
		get_next_arg(argi);
		return O_print_search_dirs;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-print-prog-name=",17) == 0) {
		end_option(argv, argi, 17);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_print_prog_nameQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-print-multi-lib") == 0) {
		get_next_arg(argi);
		return O_print_multi_lib;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-print-libgcc-file-name") == 0) {
		get_next_arg(argi);
		return O_print_libgcc_file_name;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-print-file-name=",17) == 0) {
		end_option(argv, argi, 17);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_print_file_nameQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-prelink") == 0) {
		get_next_arg(argi);
		return O_prelink;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pipe") == 0) {
		get_next_arg(argi);
		return O_pipe;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pie") == 0) {
		get_next_arg(argi);
		return O_pie;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pic2") == 0) {
		get_next_arg(argi);
		return O_pic2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pic1") == 0) {
		get_next_arg(argi);
		return O_pic1;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pg") == 0) {
		get_next_arg(argi);
		return O_pg;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pfa2") == 0) {
		get_next_arg(argi);
		return O_pfa2;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-pfa,",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_pfaC,optargs);
		/* NOTREACHED */
	}
	if ((strncmp(argv[*argi],"-pfa",4) == 0)
	&& strcmp(next_string_after("-pfa",argv,argi),"list") == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_pfalist;
		/* NOTREACHED */
	}
	if ((strncmp(argv[*argi],"-pfa",4) == 0)
	&& strcmp(next_string_after("-pfa",argv,argi),"keep") == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_pfakeep;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pfa") == 0) {
		get_next_arg(argi);
		return O_pfa;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pedantic-errors") == 0) {
		get_next_arg(argi);
		return O_pedantic_errors;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pedantic") == 0) {
		get_next_arg(argi);
		return O_pedantic;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-pca,",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_pcaC,optargs);
		/* NOTREACHED */
	}
	if ((strncmp(argv[*argi],"-pca",4) == 0)
	&& strcmp(next_string_after("-pca",argv,argi),"list") == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_pcalist;
		/* NOTREACHED */
	}
	if ((strncmp(argv[*argi],"-pca",4) == 0)
	&& strcmp(next_string_after("-pca",argv,argi),"keep") == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_pcakeep;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pca") == 0) {
		get_next_arg(argi);
		return O_pca;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pass-exit-codes") == 0) {
		get_next_arg(argi);
		return O_pass_exit_codes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-parse") == 0) {
		get_next_arg(argi);
		return O_parse;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pad_char_literals") == 0) {
		get_next_arg(argi);
		return O_pad_char_literals;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-pad-char-literals") == 0) {
		get_next_arg(argi);
		return O_pad_char_literals;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_p;
	/* NOTREACHED */
	break;
case 'o':
	if (strcmp(argv[*argi],"-openmp") == 0) {
		get_next_arg(argi);
		return O_openmp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-opencc") == 0) {
		get_next_arg(argi);
		return O_opencc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-onetrip") == 0) {
		get_next_arg(argi);
		return O_onetrip;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-old_rl") == 0) {
		get_next_arg(argi);
		return O_old_rl;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option_or_dash(O_o,optargs);
		/* NOTREACHED */
	break;
case 'n':
	if (strcmp(argv[*argi],"-nostdlib") == 0) {
		get_next_arg(argi);
		return O_nostdlib;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nostdinc++") == 0) {
		get_next_arg(argi);
		return O_nostdinc__;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nostdinc") == 0) {
		get_next_arg(argi);
		return O_nostdinc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nostartfiles") == 0) {
		get_next_arg(argi);
		return O_nostartfiles;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nolibopen64rt") == 0) {
		get_next_arg(argi);
		return O_nolibopen64rt;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-noinline") == 0) {
		get_next_arg(argi);
		return O_noinline;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-noi4") == 0) {
		get_next_arg(argi);
		return O_noi4;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nof77") == 0) {
		get_next_arg(argi);
		return O_nof77;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-noextend_source") == 0) {
		get_next_arg(argi);
		return O_noextend_source;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-noextend-source") == 0) {
		get_next_arg(argi);
		return O_noextend_source;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-noexpopt") == 0) {
		get_next_arg(argi);
		return O_noexpopt;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nodefaultlibs") == 0) {
		get_next_arg(argi);
		return O_nodefaultlibs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nocpp") == 0) {
		get_next_arg(argi);
		return O_nocpp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-nobool") == 0) {
		get_next_arg(argi);
		return O_nobool;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-noas") == 0) {
		get_next_arg(argi);
		return O_noas;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-no_prelink") == 0) {
		get_next_arg(argi);
		return O_no_prelink;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-no-traditional") == 0) {
		get_next_arg(argi);
		return O_no_traditional;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-no-prelink") == 0) {
		get_next_arg(argi);
		return O_no_prelink;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-no-opencc") == 0) {
		get_next_arg(argi);
		return O_no_opencc;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-no-intrinsic=",14) == 0) {
		end_option(argv, argi, 14);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_no_intrinsicQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-no-gcc") == 0) {
		get_next_arg(argi);
		return O_no_gcc;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_n;
	/* NOTREACHED */
	break;
case 'm':
	if (strcmp(argv[*argi],"-mxop") == 0) {
		get_next_arg(argi);
		return O_mxop;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-mx87-precision=",16) == 0) {
		end_option(argv, argi, 16);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_mx87_precisionQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-mvolatile-asm-stop") == 0) {
		get_next_arg(argi);
		return O_mvolatile_asm_stop;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-mtune=",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_mtuneQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mssse3") == 0) {
		get_next_arg(argi);
		return O_mssse3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-msse4a") == 0) {
		get_next_arg(argi);
		return O_msse4a;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-msse4.2") == 0) {
		get_next_arg(argi);
		return O_msse42;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-msse4.1") == 0) {
		get_next_arg(argi);
		return O_msse41;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-msse3") == 0) {
		get_next_arg(argi);
		return O_msse3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-msse2") == 0) {
		get_next_arg(argi);
		return O_msse2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-msse") == 0) {
		get_next_arg(argi);
		return O_msse;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mspace") == 0) {
		get_next_arg(argi);
		return O_mspace;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-msoft-float") == 0) {
		get_next_arg(argi);
		return O_msoft_float;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mso") == 0) {
		get_next_arg(argi);
		return O_mso;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mplist") == 0) {
		get_next_arg(argi);
		return O_mplist;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mpio") == 0) {
		get_next_arg(argi);
		return O_mpio;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mpclmul") == 0) {
		get_next_arg(argi);
		return O_mpclmul;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mp_use_locks") == 0) {
		get_next_arg(argi);
		return O_mp_use_locks;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mp_use_copy") == 0) {
		get_next_arg(argi);
		return O_mp_use_copy;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-mp_schedtype=",14) == 0) {
		end_option(argv, argi, 14);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_mp_schedtypeQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mp_keep") == 0) {
		get_next_arg(argi);
		return O_mp_keep;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-mp_chunk=",10) == 0) {
		end_option(argv, argi, 10);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_mp_chunkQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-mp") == 0) {
		get_next_arg(argi);
		return O_mp;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-module",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_module,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-xop") == 0) {
		get_next_arg(argi);
		return O_mno_xop;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-ssse3") == 0) {
		get_next_arg(argi);
		return O_mno_ssse3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-sse4a") == 0) {
		get_next_arg(argi);
		return O_mno_sse4a;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-sse4.2") == 0) {
		get_next_arg(argi);
		return O_mno_sse42;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-sse4.1") == 0) {
		get_next_arg(argi);
		return O_mno_sse41;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-sse3") == 0) {
		get_next_arg(argi);
		return O_mno_sse3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-sse2") == 0) {
		get_next_arg(argi);
		return O_mno_sse2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-sse") == 0) {
		get_next_arg(argi);
		return O_mno_sse;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-soft-float") == 0) {
		get_next_arg(argi);
		return O_mno_soft_float;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-sdata") == 0) {
		get_next_arg(argi);
		return O_mno_sdata;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-pclmul") == 0) {
		get_next_arg(argi);
		return O_mno_pclmul;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-mmx") == 0) {
		get_next_arg(argi);
		return O_mno_mmx;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-ieee-fp") == 0) {
		get_next_arg(argi);
		return O_mno_ieee_fp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-fma4") == 0) {
		get_next_arg(argi);
		return O_mno_fma4;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-avx") == 0) {
		get_next_arg(argi);
		return O_mno_avx;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-aes") == 0) {
		get_next_arg(argi);
		return O_mno_aes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mno-3dnow") == 0) {
		get_next_arg(argi);
		return O_mno_3dnow;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mmmx") == 0) {
		get_next_arg(argi);
		return O_mmmx;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mipslibs") == 0) {
		get_next_arg(argi);
		return O_mipslibs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-minline-all-stringops") == 0) {
		get_next_arg(argi);
		return O_minline_all_stringops;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mieee-fp") == 0) {
		get_next_arg(argi);
		return O_mieee_fp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mfma4") == 0) {
		get_next_arg(argi);
		return O_mfma4;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-mfixed-range=",14) == 0) {
		end_option(argv, argi, 14);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_mfixed_rangeQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-memsim") == 0) {
		get_next_arg(argi);
		return O_memsim;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-memctr") == 0) {
		get_next_arg(argi);
		return O_memctr;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-mcpu=",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_mcpuQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mconstant-gp") == 0) {
		get_next_arg(argi);
		return O_mconstant_gp;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-mcmodel=",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_mcmodelQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mb-step") == 0) {
		get_next_arg(argi);
		return O_mb_step;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-mavx") == 0) {
		get_next_arg(argi);
		return O_mavx;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-march=",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_marchQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-malign-loops=",14) == 0) {
		end_option(argv, argi, 14);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_malign_loopsQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-malign-jumps=",14) == 0) {
		end_option(argv, argi, 14);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_malign_jumpsQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-malign-functions=",18) == 0) {
		end_option(argv, argi, 18);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_malign_functionsQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-maes") == 0) {
		get_next_arg(argi);
		return O_maes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-macro_expand") == 0) {
		get_next_arg(argi);
		return O_macro_expand;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-macro-expand") == 0) {
		get_next_arg(argi);
		return O_macro_expand;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ma-step") == 0) {
		get_next_arg(argi);
		return O_ma_step;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-m64") == 0) {
		get_next_arg(argi);
		return O_m64;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-m3dnow") == 0) {
		get_next_arg(argi);
		return O_m3dnow;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-m386") == 0) {
		get_next_arg(argi);
		return O_m386;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-m32") == 0) {
		get_next_arg(argi);
		return O_m32;
		/* NOTREACHED */
	}
	if (strcmp(next_string(argv,argi), "elf_x86_64") == 0) {
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_melf_x86_64;
		/* NOTREACHED */
	}
	if (strcmp(next_string(argv,argi), "elf_i386") == 0) {
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_melf_i386;
		/* NOTREACHED */
	}
	break;
case 'l':
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_l,optargs);
		/* NOTREACHED */
	break;
case 'k':
	if (strcmp(argv[*argi],"-keepdollar") == 0) {
		get_next_arg(argi);
		return O_keepdollar;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-keep") == 0) {
		get_next_arg(argi);
		return O_keep;
		/* NOTREACHED */
	}
	break;
case 'j':
	if (strcmp(argv[*argi],"-jalr") == 0) {
		get_next_arg(argi);
		return O_jalr;
		/* NOTREACHED */
	}
	break;
case 'i':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-iwithprefixbefore",18) == 0) {
		end_option(argv, argi, 18);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_iwithprefixbefore__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_iwithprefixbefore__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-iwithprefix",12) == 0) {
		end_option(argv, argi, 12);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_iwithprefix__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_iwithprefix__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-itanium") == 0) {
		get_next_arg(argi);
		return O_itanium;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-isystem",8) == 0) {
		end_option(argv, argi, 8);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_isystem__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_isystem__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-isysroot",9) == 0) {
		end_option(argv, argi, 9);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_isysroot__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_isysroot__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-iquote",7) == 0) {
		end_option(argv, argi, 7);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_iquote__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_iquote__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-iprefix",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_iprefix,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ipa") == 0) {
		get_next_arg(argi);
		return O_ipa;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-intrinsic=",11) == 0) {
		end_option(argv, argi, 11);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_intrinsicQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-inline") == 0) {
		get_next_arg(argi);
		return O_inline;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-include",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_include,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-imacros",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_imacros,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ignore_suffix") == 0) {
		get_next_arg(argi);
		return O_ignore_suffix;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ignore-suffix") == 0) {
		get_next_arg(argi);
		return O_ignore_suffix;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-idirafter",10) == 0) {
		end_option(argv, argi, 10);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_idirafter__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_idirafter__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-ia32") == 0) {
		get_next_arg(argi);
		return O_ia32;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-i8") == 0) {
		get_next_arg(argi);
		return O_i8;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-i64") == 0) {
		get_next_arg(argi);
		return O_i64;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-i4") == 0) {
		get_next_arg(argi);
		return O_i4;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-i32") == 0) {
		get_next_arg(argi);
		return O_i32;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-i2") == 0) {
		get_next_arg(argi);
		return O_i2;
		/* NOTREACHED */
	}
	break;
case 'h':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-help:",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_help_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-help") == 0) {
		get_next_arg(argi);
		return O_help;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_h;
	/* NOTREACHED */
	break;
case 'g':
	if (strcmp(argv[*argi],"-gstabs3") == 0) {
		get_next_arg(argi);
		return O_gstabs3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gstabs2") == 0) {
		get_next_arg(argi);
		return O_gstabs2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gstabs1") == 0) {
		get_next_arg(argi);
		return O_gstabs1;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gstabs0") == 0) {
		get_next_arg(argi);
		return O_gstabs0;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gstabs+") == 0) {
		get_next_arg(argi);
		return O_gstabs_;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gstabs") == 0) {
		get_next_arg(argi);
		return O_gstabs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gnu42") == 0) {
		get_next_arg(argi);
		return O_gnu42;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gnu40") == 0) {
		get_next_arg(argi);
		return O_gnu40;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gnu4") == 0) {
		get_next_arg(argi);
		return O_gnu4;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gnu3") == 0) {
		get_next_arg(argi);
		return O_gnu3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ggdb3") == 0) {
		get_next_arg(argi);
		return O_ggdb3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ggdb") == 0) {
		get_next_arg(argi);
		return O_ggdb;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf-23") == 0) {
		get_next_arg(argi);
		return O_gdwarf_23;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf-22") == 0) {
		get_next_arg(argi);
		return O_gdwarf_22;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf-21") == 0) {
		get_next_arg(argi);
		return O_gdwarf_21;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf-20") == 0) {
		get_next_arg(argi);
		return O_gdwarf_20;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf-2") == 0) {
		get_next_arg(argi);
		return O_gdwarf_2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf-1+") == 0) {
		get_next_arg(argi);
		return O_gdwarf_1_;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf-1") == 0) {
		get_next_arg(argi);
		return O_gdwarf_1;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gdwarf") == 0) {
		get_next_arg(argi);
		return O_gdwarf;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-gcc") == 0) {
		get_next_arg(argi);
		return O_gcc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-g3") == 0) {
		get_next_arg(argi);
		return O_g3;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-g2") == 0) {
		get_next_arg(argi);
		return O_g2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-g1") == 0) {
		get_next_arg(argi);
		return O_g1;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-g0") == 0) {
		get_next_arg(argi);
		return O_g0;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_g;
	/* NOTREACHED */
	break;
case 'f':
	if (strcmp(argv[*argi],"-fwritable-strings") == 0) {
		get_next_arg(argi);
		return O_fwritable_strings;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fwrapv") == 0) {
		get_next_arg(argi);
		return O_fwrapv;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fweak") == 0) {
		get_next_arg(argi);
		return O_fweak;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fvolatile-static") == 0) {
		get_next_arg(argi);
		return O_fvolatile_static;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fvolatile-global") == 0) {
		get_next_arg(argi);
		return O_fvolatile_global;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fvolatile") == 0) {
		get_next_arg(argi);
		return O_fvolatile;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fvisibility=hidden") == 0) {
		get_next_arg(argi);
		return O_fvisibilityQhidden;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fvisibility=default") == 0) {
		get_next_arg(argi);
		return O_fvisibilityQdefault;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fvisibility-inlines-hidden") == 0) {
		get_next_arg(argi);
		return O_fvisibility_inlines_hidden;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fverify-tree") == 0) {
		get_next_arg(argi);
		return O_fverify_tree;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fverbose-asm") == 0) {
		get_next_arg(argi);
		return O_fverbose_asm;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fvar-tracking") == 0) {
		get_next_arg(argi);
		return O_fvar_tracking;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fuse-cxa-atexit") == 0) {
		get_next_arg(argi);
		return O_fuse_cxa_atexit;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-funwind-tables") == 0) {
		get_next_arg(argi);
		return O_funwind_tables;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-funsigned-char") == 0) {
		get_next_arg(argi);
		return O_funsigned_char;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-funsigned-bitfields") == 0) {
		get_next_arg(argi);
		return O_funsigned_bitfields;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-funsafe-math-optimizations") == 0) {
		get_next_arg(argi);
		return O_funsafe_math_optimizations;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-funroll-loops") == 0) {
		get_next_arg(argi);
		return O_funroll_loops;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-funroll-all-loops") == 0) {
		get_next_arg(argi);
		return O_funroll_all_loops;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-funderscoring") == 0) {
		get_next_arg(argi);
		return O_funderscoring;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fullwarn") == 0) {
		get_next_arg(argi);
		return O_fullwarn;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ftree-vrp") == 0) {
		get_next_arg(argi);
		return O_ftree_vrp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ftree-vectorize") == 0) {
		get_next_arg(argi);
		return O_ftree_vectorize;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ftree-ter") == 0) {
		get_next_arg(argi);
		return O_ftree_ter;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ftraditional") == 0) {
		get_next_arg(argi);
		return O_ftraditional;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ftpp") == 0) {
		get_next_arg(argi);
		return O_ftpp;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-ftls-model=",12) == 0) {
		end_option(argv, argi, 12);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_ftls_modelQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fthread-jumps") == 0) {
		get_next_arg(argi);
		return O_fthread_jumps;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ftest-coverage") == 0) {
		get_next_arg(argi);
		return O_ftest_coverage;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-ftemplate-depth-",17) == 0) {
		end_option(argv, argi, 17);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_ftemplate_depth___,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-fstrict-aliasing") == 0) {
		get_next_arg(argi);
		return O_fstrict_aliasing;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fstrength-reduce") == 0) {
		get_next_arg(argi);
		return O_fstrength_reduce;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fstack-check") == 0) {
		get_next_arg(argi);
		return O_fstack_check;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fssa-dce") == 0) {
		get_next_arg(argi);
		return O_fssa_dce;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fssa-ccp") == 0) {
		get_next_arg(argi);
		return O_fssa_ccp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fssa") == 0) {
		get_next_arg(argi);
		return O_fssa;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fsigned-char") == 0) {
		get_next_arg(argi);
		return O_fsigned_char;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fsigned-bitfields") == 0) {
		get_next_arg(argi);
		return O_fsigned_bitfields;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fshow-column") == 0) {
		get_next_arg(argi);
		return O_fshow_column;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fshort-wchar") == 0) {
		get_next_arg(argi);
		return O_fshort_wchar;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fshort-enums") == 0) {
		get_next_arg(argi);
		return O_fshort_enums;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fshort-double") == 0) {
		get_next_arg(argi);
		return O_fshort_double;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fshared-data") == 0) {
		get_next_arg(argi);
		return O_fshared_data;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fsecond-underscore") == 0) {
		get_next_arg(argi);
		return O_fsecond_underscore;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fschedule-insns2") == 0) {
		get_next_arg(argi);
		return O_fschedule_insns2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fschedule-insns") == 0) {
		get_next_arg(argi);
		return O_fschedule_insns;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-frtti") == 0) {
		get_next_arg(argi);
		return O_frtti;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-frerun-loop-opt") == 0) {
		get_next_arg(argi);
		return O_frerun_loop_opt;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-frerun-cse-after-loop") == 0) {
		get_next_arg(argi);
		return O_frerun_cse_after_loop;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-frepo") == 0) {
		get_next_arg(argi);
		return O_frepo;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-frename-registers") == 0) {
		get_next_arg(argi);
		return O_frename_registers;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fregmove") == 0) {
		get_next_arg(argi);
		return O_fregmove;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-freg-struct-return") == 0) {
		get_next_arg(argi);
		return O_freg_struct_return;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-freeform") == 0) {
		get_next_arg(argi);
		return O_freeform;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-freduce-all-givs") == 0) {
		get_next_arg(argi);
		return O_freduce_all_givs;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-frandom-seed=",14) == 0) {
		end_option(argv, argi, 14);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_frandom_seedQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-frandom-seed",13) == 0) {
		end_option(argv, argi, 13);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_frandom_seed,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-framepointer") == 0) {
		get_next_arg(argi);
		return O_framepointer;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fprofile-arcs") == 0) {
		get_next_arg(argi);
		return O_fprofile_arcs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fpreprocessed") == 0) {
		get_next_arg(argi);
		return O_fpreprocessed;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fprefix-function-name") == 0) {
		get_next_arg(argi);
		return O_fprefix_function_name;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fpie") == 0) {
		get_next_arg(argi);
		return O_fpie;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fpic") == 0) {
		get_next_arg(argi);
		return O_fpic;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fpermissive") == 0) {
		get_next_arg(argi);
		return O_fpermissive;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fpcc-struct-return") == 0) {
		get_next_arg(argi);
		return O_fpcc_struct_return;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fpack-struct") == 0) {
		get_next_arg(argi);
		return O_fpack_struct;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-foptimize-sibling-calls") == 0) {
		get_next_arg(argi);
		return O_foptimize_sibling_calls;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-foptimize-register-moves") == 0) {
		get_next_arg(argi);
		return O_foptimize_register_moves;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-foptimize-register-move") == 0) {
		get_next_arg(argi);
		return O_foptimize_register_move;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fopenmp") == 0) {
		get_next_arg(argi);
		return O_fopenmp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fonetrip") == 0) {
		get_next_arg(argi);
		return O_fonetrip;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fomit-frame-pointer") == 0) {
		get_next_arg(argi);
		return O_fomit_frame_pointer;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fnotraditional") == 0) {
		get_next_arg(argi);
		return O_fnotraditional;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-writable-strings") == 0) {
		get_next_arg(argi);
		return O_fno_writable_strings;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-weak") == 0) {
		get_next_arg(argi);
		return O_fno_weak;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-use-cxa-atexit") == 0) {
		get_next_arg(argi);
		return O_fno_use_cxa_atexit;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-unwind-tables") == 0) {
		get_next_arg(argi);
		return O_fno_unwind_tables;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-unsigned-char") == 0) {
		get_next_arg(argi);
		return O_fno_unsigned_char;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-unsigned-bitfields") == 0) {
		get_next_arg(argi);
		return O_fno_unsigned_bitfields;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-unsafe-math-optimizations") == 0) {
		get_next_arg(argi);
		return O_fno_unsafe_math_optimizations;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-underscoring") == 0) {
		get_next_arg(argi);
		return O_fno_underscoring;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-tree-vrp") == 0) {
		get_next_arg(argi);
		return O_fno_tree_vrp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-tree-vectorize") == 0) {
		get_next_arg(argi);
		return O_fno_tree_vectorize;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-tree-ter") == 0) {
		get_next_arg(argi);
		return O_fno_tree_ter;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-traditional") == 0) {
		get_next_arg(argi);
		return O_fno_traditional;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-strict-aliasing") == 0) {
		get_next_arg(argi);
		return O_fno_strict_aliasing;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-strength-reduce") == 0) {
		get_next_arg(argi);
		return O_fno_strength_reduce;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-ssa-dce") == 0) {
		get_next_arg(argi);
		return O_fno_ssa_dce;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-ssa-ccp") == 0) {
		get_next_arg(argi);
		return O_fno_ssa_ccp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-ssa") == 0) {
		get_next_arg(argi);
		return O_fno_ssa;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-signed-char") == 0) {
		get_next_arg(argi);
		return O_fno_signed_char;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-signed-bitfields") == 0) {
		get_next_arg(argi);
		return O_fno_signed_bitfields;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-show-column") == 0) {
		get_next_arg(argi);
		return O_fno_show_column;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-second-underscore") == 0) {
		get_next_arg(argi);
		return O_fno_second_underscore;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-schedule-insns2") == 0) {
		get_next_arg(argi);
		return O_fno_schedule_insns2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-schedule-insns") == 0) {
		get_next_arg(argi);
		return O_fno_schedule_insns;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-rtti") == 0) {
		get_next_arg(argi);
		return O_fno_rtti;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-preprocessed") == 0) {
		get_next_arg(argi);
		return O_fno_preprocessed;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-pie") == 0) {
		get_next_arg(argi);
		return O_fno_pie;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-pic") == 0) {
		get_next_arg(argi);
		return O_fno_pic;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-permissive") == 0) {
		get_next_arg(argi);
		return O_fno_permissive;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-peephole") == 0) {
		get_next_arg(argi);
		return O_fno_peephole;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-optimize-sibling-calls") == 0) {
		get_next_arg(argi);
		return O_fno_optimize_sibling_calls;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-optimize-register-move") == 0) {
		get_next_arg(argi);
		return O_fno_optimize_register_move;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-optimize-regions") == 0) {
		get_next_arg(argi);
		return O_fno_optimize_regions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-operator-names") == 0) {
		get_next_arg(argi);
		return O_fno_operator_names;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-omit-frame-pointer") == 0) {
		get_next_arg(argi);
		return O_fno_omit_frame_pointer;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-math-errno") == 0) {
		get_next_arg(argi);
		return O_fno_math_errno;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-ivopts") == 0) {
		get_next_arg(argi);
		return O_fno_ivopts;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-inline-functions") == 0) {
		get_next_arg(argi);
		return O_fno_inline_functions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-inline") == 0) {
		get_next_arg(argi);
		return O_fno_inline;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-implicit-templates") == 0) {
		get_next_arg(argi);
		return O_fno_implicit_templates;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-implicit-inline-templates") == 0) {
		get_next_arg(argi);
		return O_fno_implicit_inline_templates;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-implement-inlines") == 0) {
		get_next_arg(argi);
		return O_fno_implement_inlines;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-ident") == 0) {
		get_next_arg(argi);
		return O_fno_ident;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-hosted") == 0) {
		get_next_arg(argi);
		return O_fno_hosted;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-handle-exceptions") == 0) {
		get_next_arg(argi);
		return O_fno_handle_exceptions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-gnu-linker") == 0) {
		get_next_arg(argi);
		return O_fno_gnu_linker;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-gnu-keywords") == 0) {
		get_next_arg(argi);
		return O_fno_gnu_keywords;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-gnu-exceptions") == 0) {
		get_next_arg(argi);
		return O_fno_gnu_exceptions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-gcse") == 0) {
		get_next_arg(argi);
		return O_fno_gcse;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-function-cse") == 0) {
		get_next_arg(argi);
		return O_fno_function_cse;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-freestanding") == 0) {
		get_next_arg(argi);
		return O_fno_freestanding;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-for-scope") == 0) {
		get_next_arg(argi);
		return O_fno_for_scope;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-fast-stdlib") == 0) {
		get_next_arg(argi);
		return O_fno_fast_stdlib;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-fast-math") == 0) {
		get_next_arg(argi);
		return O_fno_fast_math;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-exceptions") == 0) {
		get_next_arg(argi);
		return O_fno_exceptions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-emit-exceptions") == 0) {
		get_next_arg(argi);
		return O_fno_emit_exceptions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-emit-class-debug-always") == 0) {
		get_next_arg(argi);
		return O_fno_emit_class_debug_always;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-elide-constructors") == 0) {
		get_next_arg(argi);
		return O_fno_elide_constructors;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-directives") == 0) {
		get_next_arg(argi);
		return O_fno_directives;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-defer-pop") == 0) {
		get_next_arg(argi);
		return O_fno_defer_pop;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-default-inline") == 0) {
		get_next_arg(argi);
		return O_fno_default_inline;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-cxx-openmp") == 0) {
		get_next_arg(argi);
		return O_fno_cxx_openmp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-common") == 0) {
		get_next_arg(argi);
		return O_fno_common;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-check-new") == 0) {
		get_next_arg(argi);
		return O_fno_check_new;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-builtin") == 0) {
		get_next_arg(argi);
		return O_fno_builtin;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-asm") == 0) {
		get_next_arg(argi);
		return O_fno_asm;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-PIE") == 0) {
		get_next_arg(argi);
		return O_fno_PIE;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fno-PIC") == 0) {
		get_next_arg(argi);
		return O_fno_PIC;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fms-extensions") == 0) {
		get_next_arg(argi);
		return O_fms_extensions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fmove-all-movables") == 0) {
		get_next_arg(argi);
		return O_fmove_all_movables;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fmessage-length=",17) == 0) {
		end_option(argv, argi, 17);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_fmessage_lengthQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-fmath-errno") == 0) {
		get_next_arg(argi);
		return O_fmath_errno;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-flist") == 0) {
		get_next_arg(argi);
		return O_flist;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fleading-underscore") == 0) {
		get_next_arg(argi);
		return O_fleading_underscore;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-flang-isoc9x") == 0) {
		get_next_arg(argi);
		return O_flang_isoc9x;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fkeep-inline-functions") == 0) {
		get_next_arg(argi);
		return O_fkeep_inline_functions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fixedform") == 0) {
		get_next_arg(argi);
		return O_fixedform;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fivopts") == 0) {
		get_next_arg(argi);
		return O_fivopts;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-finstrument-functions") == 0) {
		get_next_arg(argi);
		return O_finstrument_functions;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-finline-limit=",15) == 0) {
		end_option(argv, argi, 15);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_finline_limitQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-finline-functions") == 0) {
		get_next_arg(argi);
		return O_finline_functions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-finline") == 0) {
		get_next_arg(argi);
		return O_finline;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-finhibit-size-directive") == 0) {
		get_next_arg(argi);
		return O_finhibit_size_directive;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fimplicit-templates") == 0) {
		get_next_arg(argi);
		return O_fimplicit_templates;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fimplicit-inline-templates") == 0) {
		get_next_arg(argi);
		return O_fimplicit_inline_templates;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fident") == 0) {
		get_next_arg(argi);
		return O_fident;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fhosted") == 0) {
		get_next_arg(argi);
		return O_fhosted;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fhandle-exceptions") == 0) {
		get_next_arg(argi);
		return O_fhandle_exceptions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fgnu-keywords") == 0) {
		get_next_arg(argi);
		return O_fgnu_keywords;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fgnu-exceptions") == 0) {
		get_next_arg(argi);
		return O_fgnu_exceptions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fgcse") == 0) {
		get_next_arg(argi);
		return O_fgcse;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffunction-sections") == 0) {
		get_next_arg(argi);
		return O_ffunction_sections;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffreestanding") == 0) {
		get_next_arg(argi);
		return O_ffreestanding;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffortran2003") == 0) {
		get_next_arg(argi);
		return O_ffortran2003;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffortran-bounds-check") == 0) {
		get_next_arg(argi);
		return O_ffortran_bounds_check;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fforce-mem") == 0) {
		get_next_arg(argi);
		return O_fforce_mem;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fforce-addr") == 0) {
		get_next_arg(argi);
		return O_fforce_addr;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffor-scope") == 0) {
		get_next_arg(argi);
		return O_ffor_scope;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffloat-store") == 0) {
		get_next_arg(argi);
		return O_ffloat_store;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-ffixed-",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_ffixed_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffast-stdlib") == 0) {
		get_next_arg(argi);
		return O_ffast_stdlib;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ffast-math") == 0) {
		get_next_arg(argi);
		return O_ffast_math;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ff90") == 0) {
		get_next_arg(argi);
		return O_ff90;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ff77") == 0) {
		get_next_arg(argi);
		return O_ff77;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-ff2c-abi",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_ff2c_abi,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fexpensive-optimizations") == 0) {
		get_next_arg(argi);
		return O_fexpensive_optimizations;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fexceptions") == 0) {
		get_next_arg(argi);
		return O_fexceptions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-femit-class-debug-always") == 0) {
		get_next_arg(argi);
		return O_femit_class_debug_always;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-felide-constructors") == 0) {
		get_next_arg(argi);
		return O_felide_constructors;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-feedback",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_feedback,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fe") == 0) {
		get_next_arg(argi);
		return O_fe;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fdollars-in-identifiers") == 0) {
		get_next_arg(argi);
		return O_fdollars_in_identifiers;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fdirectives") == 0) {
		get_next_arg(argi);
		return O_fdirectives;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fdiagnostics-show-location=once") == 0) {
		get_next_arg(argi);
		return O_fdiagnostics_show_locationQonce;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fdiagnostics-show-location=every-line") == 0) {
		get_next_arg(argi);
		return O_fdiagnostics_show_locationQevery_line;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fdelayed-branch") == 0) {
		get_next_arg(argi);
		return O_fdelayed_branch;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fdecorate",10) == 0) {
		end_option(argv, argi, 10);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fdecorate,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fdata-sections") == 0) {
		get_next_arg(argi);
		return O_fdata_sections;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcxx-openmp") == 0) {
		get_next_arg(argi);
		return O_fcxx_openmp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcse-skip-blocks") == 0) {
		get_next_arg(argi);
		return O_fcse_skip_blocks;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcse-follow-jumps") == 0) {
		get_next_arg(argi);
		return O_fcse_follow_jumps;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fconserve-space") == 0) {
		get_next_arg(argi);
		return O_fconserve_space;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcond-mismatch") == 0) {
		get_next_arg(argi);
		return O_fcond_mismatch;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fcoco=",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fcocoQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcoco") == 0) {
		get_next_arg(argi);
		return O_fcoco;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcheck-new") == 0) {
		get_next_arg(argi);
		return O_fcheck_new;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcheck-memory-usage") == 0) {
		get_next_arg(argi);
		return O_fcheck_memory_usage;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fcaller-saves") == 0) {
		get_next_arg(argi);
		return O_fcaller_saves;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fcall-used-",12) == 0) {
		end_option(argv, argi, 12);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fcall_used_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fcall-saved-",13) == 0) {
		end_option(argv, argi, 13);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fcall_saved_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fbuse",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fbuse,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fbuiltin") == 0) {
		get_next_arg(argi);
		return O_fbuiltin;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fbranch-probabilities") == 0) {
		get_next_arg(argi);
		return O_fbranch_probabilities;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fbgen") == 0) {
		get_next_arg(argi);
		return O_fbgen;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fbexe",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fbexe,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb_xdir",8) == 0) {
		end_option(argv, argi, 8);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_fb_xdir__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_fb_xdir__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb_type=",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_typeQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb_phase=",10) == 0) {
		end_option(argv, argi, 10);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_phaseQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb_opt",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_opt,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb_create",10) == 0) {
		end_option(argv, argi, 10);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_create,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb_cdir",8) == 0) {
		end_option(argv, argi, 8);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_fb_cdir__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_fb_cdir__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb-type=",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_typeQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb-phase=",10) == 0) {
		end_option(argv, argi, 10);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_phaseQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb-opt",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_opt,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb-create",10) == 0) {
		end_option(argv, argi, 10);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb_create,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fb",3) == 0) {
		end_option(argv, argi, 3);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_fb,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fasm") == 0) {
		get_next_arg(argi);
		return O_fasm;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fargument-noalias-global") == 0) {
		get_next_arg(argi);
		return O_fargument_noalias_global;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fargument-noalias") == 0) {
		get_next_arg(argi);
		return O_fargument_noalias;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fargument-alias") == 0) {
		get_next_arg(argi);
		return O_fargument_alias;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-falign-loops=",14) == 0) {
		end_option(argv, argi, 14);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_falign_loopsQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-falign-loops") == 0) {
		get_next_arg(argi);
		return O_falign_loops;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-falign-labels") == 0) {
		get_next_arg(argi);
		return O_falign_labels;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-falign-jumps=",14) == 0) {
		end_option(argv, argi, 14);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_falign_jumpsQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-falign-functions=",18) == 0) {
		end_option(argv, argi, 18);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_falign_functionsQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-falign-functions") == 0) {
		get_next_arg(argi);
		return O_falign_functions;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-fabi-version=",14) == 0) {
		end_option(argv, argi, 14);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_fabi_versionQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-fPIE") == 0) {
		get_next_arg(argi);
		return O_fPIE;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-fPIC") == 0) {
		get_next_arg(argi);
		return O_fPIC;
		/* NOTREACHED */
	}
	break;
case 'e':
	if (strcmp(argv[*argi],"-external-gcc") == 0) {
		get_next_arg(argi);
		return O_external_gcc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-extend_source") == 0) {
		get_next_arg(argi);
		return O_extend_source;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-extend-source") == 0) {
		get_next_arg(argi);
		return O_extend_source;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-expand_include") == 0) {
		get_next_arg(argi);
		return O_expand_include;
		/* NOTREACHED */
	}
		return parse_e_option(argv, argi);
		/* NOTREACHED */
	break;
case 'd':
	if (strcmp(argv[*argi],"-dz") == 0) {
		get_next_arg(argi);
		return O_dz;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dx") == 0) {
		get_next_arg(argi);
		return O_dx;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dw") == 0) {
		get_next_arg(argi);
		return O_dw;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dv") == 0) {
		get_next_arg(argi);
		return O_dv;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dumpversion") == 0) {
		get_next_arg(argi);
		return O_dumpversion;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dumpspecs") == 0) {
		get_next_arg(argi);
		return O_dumpspecs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dumpmachine") == 0) {
		get_next_arg(argi);
		return O_dumpmachine;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dump_input") == 0) {
		get_next_arg(argi);
		return O_dump_input;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dummy") == 0) {
		get_next_arg(argi);
		return O_dummy;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dt") == 0) {
		get_next_arg(argi);
		return O_dt;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ds") == 0) {
		get_next_arg(argi);
		return O_ds;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dr") == 0) {
		get_next_arg(argi);
		return O_dr;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dp") == 0) {
		get_next_arg(argi);
		return O_dp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-do") == 0) {
		get_next_arg(argi);
		return O_do;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dm") == 0) {
		get_next_arg(argi);
		return O_dm;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dl") == 0) {
		get_next_arg(argi);
		return O_dl;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dk") == 0) {
		get_next_arg(argi);
		return O_dk;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dj") == 0) {
		get_next_arg(argi);
		return O_dj;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-directives-only") == 0) {
		get_next_arg(argi);
		return O_directives_only;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-di") == 0) {
		get_next_arg(argi);
		return O_di;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dh") == 0) {
		get_next_arg(argi);
		return O_dh;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dg") == 0) {
		get_next_arg(argi);
		return O_dg;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-df") == 0) {
		get_next_arg(argi);
		return O_df;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-demangle") == 0) {
		get_next_arg(argi);
		return O_demangle;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-default64") == 0) {
		get_next_arg(argi);
		return O_default64;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-de") == 0) {
		get_next_arg(argi);
		return O_de;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dd") == 0) {
		get_next_arg(argi);
		return O_dd;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dc") == 0) {
		get_next_arg(argi);
		return O_dc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-db") == 0) {
		get_next_arg(argi);
		return O_db;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-da") == 0) {
		get_next_arg(argi);
		return O_da;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-d_lines") == 0) {
		get_next_arg(argi);
		return O_d_lines;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dX") == 0) {
		get_next_arg(argi);
		return O_dX;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dS") == 0) {
		get_next_arg(argi);
		return O_dS;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dR") == 0) {
		get_next_arg(argi);
		return O_dR;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dP") == 0) {
		get_next_arg(argi);
		return O_dP;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dN") == 0) {
		get_next_arg(argi);
		return O_dN;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dM") == 0) {
		get_next_arg(argi);
		return O_dM;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dL") == 0) {
		get_next_arg(argi);
		return O_dL;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dI") == 0) {
		get_next_arg(argi);
		return O_dI;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dG") == 0) {
		get_next_arg(argi);
		return O_dG;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dF") == 0) {
		get_next_arg(argi);
		return O_dF;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dE") == 0) {
		get_next_arg(argi);
		return O_dE;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dD") == 0) {
		get_next_arg(argi);
		return O_dD;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dC") == 0) {
		get_next_arg(argi);
		return O_dC;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dB") == 0) {
		get_next_arg(argi);
		return O_dB;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-dA") == 0) {
		get_next_arg(argi);
		return O_dA;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-d8") == 0) {
		get_next_arg(argi);
		return O_d8;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-d-lines") == 0) {
		get_next_arg(argi);
		return O_d_lines;
		/* NOTREACHED */
	}
	break;
case 'c':
	if (strcmp(argv[*argi],"-craylibs") == 0) {
		get_next_arg(argi);
		return O_craylibs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-cray_directives") == 0) {
		get_next_arg(argi);
		return O_cray_directives;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-cpp") == 0) {
		get_next_arg(argi);
		return O_cpp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-cord") == 0) {
		get_next_arg(argi);
		return O_cord;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-convert",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_convert,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-compat-gcc") == 0) {
		get_next_arg(argi);
		return O_compat_gcc;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-col80") == 0) {
		get_next_arg(argi);
		return O_col80;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-col72") == 0) {
		get_next_arg(argi);
		return O_col72;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-col120") == 0) {
		get_next_arg(argi);
		return O_col120;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-clist") == 0) {
		get_next_arg(argi);
		return O_clist;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-cif") == 0) {
		get_next_arg(argi);
		return O_cif;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-chunk=",7) == 0) {
		end_option(argv, argi, 7);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_chunkQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-chararg1") == 0) {
		get_next_arg(argi);
		return O_chararg1;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-change_const") == 0) {
		get_next_arg(argi);
		return O_change_const;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-call_shared") == 0) {
		get_next_arg(argi);
		return O_call_shared;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_c;
	/* NOTREACHED */
	break;
case 'b':
	if (strcmp(argv[*argi],"-byteswapio") == 0) {
		get_next_arg(argi);
		return O_byteswapio;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-bytereclen") == 0) {
		get_next_arg(argi);
		return O_bytereclen;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-backslash") == 0) {
		get_next_arg(argi);
		return O_backslash;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_b,optargs);
		/* NOTREACHED */
	break;
case 'a':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-aux-info",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_aux_info,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-automatic") == 0) {
		get_next_arg(argi);
		return O_automatic;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-auto_use",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_auto_use,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-auto-use",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_auto_use,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ar") == 0) {
		get_next_arg(argi);
		return O_ar;
		/* NOTREACHED */
	}
	if ((strncmp(argv[*argi],"-apo",4) == 0)
	&& strcmp(next_string_after("-apo",argv,argi),"list") == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_apolist;
		/* NOTREACHED */
	}
	if ((strncmp(argv[*argi],"-apo",4) == 0)
	&& strcmp(next_string_after("-apo",argv,argi),"keep") == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_apokeep;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-apo") == 0) {
		get_next_arg(argi);
		return O_apo;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-ansi") == 0) {
		get_next_arg(argi);
		return O_ansi;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-all") == 0) {
		get_next_arg(argi);
		return O_all;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-align8") == 0) {
		get_next_arg(argi);
		return O_align8;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-align64") == 0) {
		get_next_arg(argi);
		return O_align64;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-align32") == 0) {
		get_next_arg(argi);
		return O_align32;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-align16") == 0) {
		get_next_arg(argi);
		return O_align16;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-align128") == 0) {
		get_next_arg(argi);
		return O_align128;
		/* NOTREACHED */
	}
	break;
case 'Y':
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_Y,optargs);
		/* NOTREACHED */
	break;
case 'X':
	if (strncmp(argv[*argi],"-Xlinker",8) == 0) {
		return parse_Xlinker_option(argv, argi);
		/* NOTREACHED */
	}
	break;
case 'W':
	if (strcmp(argv[*argi],"-Wwrite-strings") == 0) {
		get_next_arg(argi);
		return O_Wwrite_strings;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunused-variable") == 0) {
		get_next_arg(argi);
		return O_Wunused_variable;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunused-value") == 0) {
		get_next_arg(argi);
		return O_Wunused_value;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunused-parameter") == 0) {
		get_next_arg(argi);
		return O_Wunused_parameter;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunused-macros") == 0) {
		get_next_arg(argi);
		return O_Wunused_macros;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunused-label") == 0) {
		get_next_arg(argi);
		return O_Wunused_label;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunused-function") == 0) {
		get_next_arg(argi);
		return O_Wunused_function;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunused") == 0) {
		get_next_arg(argi);
		return O_Wunused;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunreachable-code") == 0) {
		get_next_arg(argi);
		return O_Wunreachable_code;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wunknown-pragmas") == 0) {
		get_next_arg(argi);
		return O_Wunknown_pragmas;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wuninitialized") == 0) {
		get_next_arg(argi);
		return O_Wuninitialized;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wundef") == 0) {
		get_next_arg(argi);
		return O_Wundef;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wtrigraphs") == 0) {
		get_next_arg(argi);
		return O_Wtrigraphs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wtraditional") == 0) {
		get_next_arg(argi);
		return O_Wtraditional;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wsystem-headers") == 0) {
		get_next_arg(argi);
		return O_Wsystem_headers;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wsynth") == 0) {
		get_next_arg(argi);
		return O_Wsynth;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wswitch-enum") == 0) {
		get_next_arg(argi);
		return O_Wswitch_enum;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wswitch-default") == 0) {
		get_next_arg(argi);
		return O_Wswitch_default;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wswitch") == 0) {
		get_next_arg(argi);
		return O_Wswitch;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wstrict-prototypes") == 0) {
		get_next_arg(argi);
		return O_Wstrict_prototypes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wstrict-aliasing") == 0) {
		get_next_arg(argi);
		return O_Wstrict_aliasing;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wsign-promo") == 0) {
		get_next_arg(argi);
		return O_Wsign_promo;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wsign-compare") == 0) {
		get_next_arg(argi);
		return O_Wsign_compare;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wshadow") == 0) {
		get_next_arg(argi);
		return O_Wshadow;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wsequence-point") == 0) {
		get_next_arg(argi);
		return O_Wsequence_point;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wreturn-type") == 0) {
		get_next_arg(argi);
		return O_Wreturn_type;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wreorder") == 0) {
		get_next_arg(argi);
		return O_Wreorder;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wredundant-decls") == 0) {
		get_next_arg(argi);
		return O_Wredundant_decls;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wpointer-to-int-cast") == 0) {
		get_next_arg(argi);
		return O_Wpointer_to_int_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wpointer-sign") == 0) {
		get_next_arg(argi);
		return O_Wpointer_sign;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wpointer-arith") == 0) {
		get_next_arg(argi);
		return O_Wpointer_arith;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wparentheses") == 0) {
		get_next_arg(argi);
		return O_Wparentheses;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wpadded") == 0) {
		get_next_arg(argi);
		return O_Wpadded;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wpacked") == 0) {
		get_next_arg(argi);
		return O_Wpacked;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-Wp,",4) == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_WpC,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Woverloaded-virtual") == 0) {
		get_next_arg(argi);
		return O_Woverloaded_virtual;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wold-style-definition") == 0) {
		get_next_arg(argi);
		return O_Wold_style_definition;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wold-style-cast") == 0) {
		get_next_arg(argi);
		return O_Wold_style_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wnonnull") == 0) {
		get_next_arg(argi);
		return O_Wnonnull;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wnon-virtual-dtor") == 0) {
		get_next_arg(argi);
		return O_Wnon_virtual_dtor;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-write-strings") == 0) {
		get_next_arg(argi);
		return O_Wno_write_strings;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-vla") == 0) {
		get_next_arg(argi);
		return O_Wno_vla;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unused-variable") == 0) {
		get_next_arg(argi);
		return O_Wno_unused_variable;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unused-value") == 0) {
		get_next_arg(argi);
		return O_Wno_unused_value;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unused-parameter") == 0) {
		get_next_arg(argi);
		return O_Wno_unused_parameter;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unused-macros") == 0) {
		get_next_arg(argi);
		return O_Wno_unused_macros;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unused-label") == 0) {
		get_next_arg(argi);
		return O_Wno_unused_label;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unused-function") == 0) {
		get_next_arg(argi);
		return O_Wno_unused_function;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unused") == 0) {
		get_next_arg(argi);
		return O_Wno_unused;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unreachable-code") == 0) {
		get_next_arg(argi);
		return O_Wno_unreachable_code;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-unknown-pragmas") == 0) {
		get_next_arg(argi);
		return O_Wno_unknown_pragmas;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-uninitialized") == 0) {
		get_next_arg(argi);
		return O_Wno_uninitialized;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-undef") == 0) {
		get_next_arg(argi);
		return O_Wno_undef;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-trigraphs") == 0) {
		get_next_arg(argi);
		return O_Wno_trigraphs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-traditional") == 0) {
		get_next_arg(argi);
		return O_Wno_traditional;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-system-headers") == 0) {
		get_next_arg(argi);
		return O_Wno_system_headers;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-synth") == 0) {
		get_next_arg(argi);
		return O_Wno_synth;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-switch") == 0) {
		get_next_arg(argi);
		return O_Wno_switch;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-strict-prototypes") == 0) {
		get_next_arg(argi);
		return O_Wno_strict_prototypes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-strict-aliasing") == 0) {
		get_next_arg(argi);
		return O_Wno_strict_aliasing;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-sign-promo") == 0) {
		get_next_arg(argi);
		return O_Wno_sign_promo;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-sign-compare") == 0) {
		get_next_arg(argi);
		return O_Wno_sign_compare;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-shadow") == 0) {
		get_next_arg(argi);
		return O_Wno_shadow;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-sequence-point") == 0) {
		get_next_arg(argi);
		return O_Wno_sequence_point;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-return-type") == 0) {
		get_next_arg(argi);
		return O_Wno_return_type;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-reorder") == 0) {
		get_next_arg(argi);
		return O_Wno_reorder;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-redundant-decls") == 0) {
		get_next_arg(argi);
		return O_Wno_redundant_decls;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-pointer-to-int-cast") == 0) {
		get_next_arg(argi);
		return O_Wno_pointer_to_int_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-pointer-sign") == 0) {
		get_next_arg(argi);
		return O_Wno_pointer_sign;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-pointer-arith") == 0) {
		get_next_arg(argi);
		return O_Wno_pointer_arith;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-pmf-conversions") == 0) {
		get_next_arg(argi);
		return O_Wno_pmf_conversions;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-parentheses") == 0) {
		get_next_arg(argi);
		return O_Wno_parentheses;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-padded") == 0) {
		get_next_arg(argi);
		return O_Wno_padded;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-packed") == 0) {
		get_next_arg(argi);
		return O_Wno_packed;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-overloaded-virtual") == 0) {
		get_next_arg(argi);
		return O_Wno_overloaded_virtual;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-old-style-definition") == 0) {
		get_next_arg(argi);
		return O_Wno_old_style_definition;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-old-style-cast") == 0) {
		get_next_arg(argi);
		return O_Wno_old_style_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-non-virtual-dtor") == 0) {
		get_next_arg(argi);
		return O_Wno_non_virtual_dtor;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-non-template-friend") == 0) {
		get_next_arg(argi);
		return O_Wno_non_template_friend;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-nested-externs") == 0) {
		get_next_arg(argi);
		return O_Wno_nested_externs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-multichar") == 0) {
		get_next_arg(argi);
		return O_Wno_multichar;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-missing-prototypes") == 0) {
		get_next_arg(argi);
		return O_Wno_missing_prototypes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-missing-noreturn") == 0) {
		get_next_arg(argi);
		return O_Wno_missing_noreturn;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-missing-format-attribute") == 0) {
		get_next_arg(argi);
		return O_Wno_missing_format_attribute;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-missing-field-initializers") == 0) {
		get_next_arg(argi);
		return O_Wno_missing_field_initializers;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-missing-declarations") == 0) {
		get_next_arg(argi);
		return O_Wno_missing_declarations;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-missing-braces") == 0) {
		get_next_arg(argi);
		return O_Wno_missing_braces;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-main") == 0) {
		get_next_arg(argi);
		return O_Wno_main;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-long-long") == 0) {
		get_next_arg(argi);
		return O_Wno_long_long;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-Wno-larger-than-",17) == 0) {
		end_option(argv, argi, 17);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_Wno_larger_than___,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-Wno-invalid-pch") == 0) {
		get_next_arg(argi);
		return O_Wno_invalid_pch;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-int-to-pointer-cast") == 0) {
		get_next_arg(argi);
		return O_Wno_int_to_pointer_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-inline") == 0) {
		get_next_arg(argi);
		return O_Wno_inline;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-import") == 0) {
		get_next_arg(argi);
		return O_Wno_import;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-implicit-int") == 0) {
		get_next_arg(argi);
		return O_Wno_implicit_int;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-implicit-function-declaration") == 0) {
		get_next_arg(argi);
		return O_Wno_implicit_function_declaration;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-implicit") == 0) {
		get_next_arg(argi);
		return O_Wno_implicit;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-format-zero-length") == 0) {
		get_next_arg(argi);
		return O_Wno_format_zero_length;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-format-y2k") == 0) {
		get_next_arg(argi);
		return O_Wno_format_y2k;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-format-security") == 0) {
		get_next_arg(argi);
		return O_Wno_format_security;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-format-nonliteral") == 0) {
		get_next_arg(argi);
		return O_Wno_format_nonliteral;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-format-extra-args") == 0) {
		get_next_arg(argi);
		return O_Wno_format_extra_args;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-format") == 0) {
		get_next_arg(argi);
		return O_Wno_format;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-float-equal") == 0) {
		get_next_arg(argi);
		return O_Wno_float_equal;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-Wno-error=",11) == 0) {
		end_option(argv, argi, 11);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_Wno_errorQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-error") == 0) {
		get_next_arg(argi);
		return O_Wno_error;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-endif-labels") == 0) {
		get_next_arg(argi);
		return O_Wno_endif_labels;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-effc++") == 0) {
		get_next_arg(argi);
		return O_Wno_effc__;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-div-by-zero") == 0) {
		get_next_arg(argi);
		return O_Wno_div_by_zero;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-disabled-optimization") == 0) {
		get_next_arg(argi);
		return O_Wno_disabled_optimization;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-deprecated-declarations") == 0) {
		get_next_arg(argi);
		return O_Wno_deprecated_declarations;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-deprecated") == 0) {
		get_next_arg(argi);
		return O_Wno_deprecated;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-ctor-dtor-privacy") == 0) {
		get_next_arg(argi);
		return O_Wno_ctor_dtor_privacy;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-conversion") == 0) {
		get_next_arg(argi);
		return O_Wno_conversion;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-comments") == 0) {
		get_next_arg(argi);
		return O_Wno_comments;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-comment") == 0) {
		get_next_arg(argi);
		return O_Wno_comment;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-char-subscripts") == 0) {
		get_next_arg(argi);
		return O_Wno_char_subscripts;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-cast-qual") == 0) {
		get_next_arg(argi);
		return O_Wno_cast_qual;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-cast-align") == 0) {
		get_next_arg(argi);
		return O_Wno_cast_align;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-bad-function-cast") == 0) {
		get_next_arg(argi);
		return O_Wno_bad_function_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wno-aggregate-return") == 0) {
		get_next_arg(argi);
		return O_Wno_aggregate_return;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wnested-externs") == 0) {
		get_next_arg(argi);
		return O_Wnested_externs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wmultichar") == 0) {
		get_next_arg(argi);
		return O_Wmultichar;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wmissing-prototypes") == 0) {
		get_next_arg(argi);
		return O_Wmissing_prototypes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wmissing-noreturn") == 0) {
		get_next_arg(argi);
		return O_Wmissing_noreturn;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wmissing-format-attribute") == 0) {
		get_next_arg(argi);
		return O_Wmissing_format_attribute;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wmissing-declarations") == 0) {
		get_next_arg(argi);
		return O_Wmissing_declarations;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wmissing-braces") == 0) {
		get_next_arg(argi);
		return O_Wmissing_braces;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wmain") == 0) {
		get_next_arg(argi);
		return O_Wmain;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wlong-long") == 0) {
		get_next_arg(argi);
		return O_Wlong_long;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-Wlarger-than-",14) == 0) {
		end_option(argv, argi, 14);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_Wlarger_than___,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-Wl,",4) == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_WlC,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Winvalid-pch") == 0) {
		get_next_arg(argi);
		return O_Winvalid_pch;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wint-to-pointer-cast") == 0) {
		get_next_arg(argi);
		return O_Wint_to_pointer_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Winline") == 0) {
		get_next_arg(argi);
		return O_Winline;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wimport") == 0) {
		get_next_arg(argi);
		return O_Wimport;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wimplicit-int") == 0) {
		get_next_arg(argi);
		return O_Wimplicit_int;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wimplicit-function-declaration") == 0) {
		get_next_arg(argi);
		return O_Wimplicit_function_declaration;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wimplicit") == 0) {
		get_next_arg(argi);
		return O_Wimplicit;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wframe-larger-than-100000000") == 0) {
		get_next_arg(argi);
		return O_Wframe_larger_than_100000000;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wformat=2") == 0) {
		get_next_arg(argi);
		return O_WformatQ2;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wformat-security") == 0) {
		get_next_arg(argi);
		return O_Wformat_security;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wformat-nonliteral") == 0) {
		get_next_arg(argi);
		return O_Wformat_nonliteral;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wformat") == 0) {
		get_next_arg(argi);
		return O_Wformat;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wfloat-equal") == 0) {
		get_next_arg(argi);
		return O_Wfloat_equal;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Werror-implicit-function-declaration") == 0) {
		get_next_arg(argi);
		return O_Werror_implicit_function_declaration;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Werror") == 0) {
		get_next_arg(argi);
		return O_Werror;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wendif-labels") == 0) {
		get_next_arg(argi);
		return O_Wendif_labels;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Weffc++") == 0) {
		get_next_arg(argi);
		return O_Weffc__;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wdiv-by-zero") == 0) {
		get_next_arg(argi);
		return O_Wdiv_by_zero;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wdisabled-optimization") == 0) {
		get_next_arg(argi);
		return O_Wdisabled_optimization;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wdeprecated") == 0) {
		get_next_arg(argi);
		return O_Wdeprecated;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wdeclaration-after-statement") == 0) {
		get_next_arg(argi);
		return O_Wdeclaration_after_statement;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wctor-dtor-privacy") == 0) {
		get_next_arg(argi);
		return O_Wctor_dtor_privacy;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wconversion") == 0) {
		get_next_arg(argi);
		return O_Wconversion;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wcomments") == 0) {
		get_next_arg(argi);
		return O_Wcomments;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wcomment") == 0) {
		get_next_arg(argi);
		return O_Wcomment;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wchar-subscripts") == 0) {
		get_next_arg(argi);
		return O_Wchar_subscripts;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wcast-qual") == 0) {
		get_next_arg(argi);
		return O_Wcast_qual;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wcast-align") == 0) {
		get_next_arg(argi);
		return O_Wcast_align;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wbad-function-cast") == 0) {
		get_next_arg(argi);
		return O_Wbad_function_cast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wall") == 0) {
		get_next_arg(argi);
		return O_Wall;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Waggregate-return") == 0) {
		get_next_arg(argi);
		return O_Waggregate_return;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-Wabi") == 0) {
		get_next_arg(argi);
		return O_Wabi;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-WOPT:",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_WOPT_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-WB,",4) == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_WBC,optargs);
		/* NOTREACHED */
	}
		return parse_W_option(argv, argi);
		/* NOTREACHED */
	get_next_char(argv, argi);
	return O_W;
	/* NOTREACHED */
	break;
case 'V':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-VHO:",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_VHO_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_V__,optargs);
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_V;
	/* NOTREACHED */
	break;
case 'U':
		return parse_U_option(argv, argi);
		/* NOTREACHED */
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_U,optargs);
		/* NOTREACHED */
	break;
case 'T':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-TENV:",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_TENV_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-TARG:",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_TARG_,optargs);
		/* NOTREACHED */
	}
	break;
case 'S':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-SWP:",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_SWP_,optargs);
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_S;
	/* NOTREACHED */
	break;
case 'R':
		return parse_R_option(argv, argi);
		/* NOTREACHED */
	break;
case 'Q':
	get_next_char(argv, argi);
	return O_Q;
	/* NOTREACHED */
	break;
case 'P':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-PURPLE:",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_PURPLE_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-PROMP:next_id=",15) == 0) {
		end_option(argv, argi, 15);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_PROMP_next_idQ__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-PROMP:",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_PROMP_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-PHASE:",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_PHASE_,optargs);
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_P;
	/* NOTREACHED */
	break;
case 'O':
	if (strcmp(argv[*argi],"-Os") == 0) {
		get_next_arg(argi);
		return O_Os;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-Olimit",7) == 0) {
		end_option(argv, argi, 7);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_Olimit__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-Ofast") == 0) {
		get_next_arg(argi);
		return O_Ofast;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-OPT:unroll_level=n") == 0) {
		get_next_arg(argi);
		return O_OPT_unroll_levelQn;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-OPT:keep_ext=on,off") == 0) {
		get_next_arg(argi);
		return O_OPT_keep_extQonCoff;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-OPT:",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_OPT_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(next_string(argv,argi), "3") == 0) {
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_O3;
		/* NOTREACHED */
	}
	if (strcmp(next_string(argv,argi), "2") == 0) {
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_O2;
		/* NOTREACHED */
	}
	if (strcmp(next_string(argv,argi), "1") == 0) {
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_O1;
		/* NOTREACHED */
	}
	if (strcmp(next_string(argv,argi), "0") == 0) {
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return O_O0;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_O__,optargs);
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_O;
	/* NOTREACHED */
	break;
case 'N':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-NC",3) == 0) {
		end_option(argv, argi, 3);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_NC__,optargs);
		/* NOTREACHED */
	}
	}
	break;
case 'M':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-MT",3) == 0) {
		end_option(argv, argi, 3);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_MT,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-MQ",3) == 0) {
		end_option(argv, argi, 3);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_MQ,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-MP") == 0) {
		get_next_arg(argi);
		return O_MP;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-MMD") == 0) {
		get_next_arg(argi);
		return O_MMD;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-MM") == 0) {
		get_next_arg(argi);
		return O_MM;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-MG") == 0) {
		get_next_arg(argi);
		return O_MG;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-MF",3) == 0) {
		end_option(argv, argi, 3);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_MF,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-MDupdate",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_MDupdate,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-MDtarget",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_MDtarget,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-MDignore",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_MDignore,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-MD") == 0) {
		get_next_arg(argi);
		return O_MD;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_M;
	/* NOTREACHED */
	break;
case 'L':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-LNO:",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_LNO_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-LMSG:",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_LMSG_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-LIST:",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_LIST_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-LD_",4) == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_LD_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-LANG:std") == 0) {
		get_next_arg(argi);
		return O_LANG_std;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-LANG:",6) == 0) {
		end_option(argv, argi, 6);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_LANG_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_L__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_L__,optargs);
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_L;
	/* NOTREACHED */
	break;
case 'I':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-IPA:",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_IPA_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-IPA") == 0) {
		get_next_arg(argi);
		return O_IPA;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-INTERNAL:",10) == 0) {
		end_option(argv, argi, 10);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_INTERNAL_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-INLINE:",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_INLINE_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-INLINE") == 0) {
		get_next_arg(argi);
		return O_INLINE;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-I-") == 0) {
		get_next_arg(argi);
		return O_I_;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O_I__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O_I__,optargs);
		/* NOTREACHED */
	}
	break;
case 'H':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-HUGEPAGE:",10) == 0) {
		end_option(argv, argi, 10);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_HUGEPAGE_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-HUGEPAGE") == 0) {
		get_next_arg(argi);
		return O_HUGEPAGE;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-HP:",4) == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_HP_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-HP") == 0) {
		get_next_arg(argi);
		return O_HP;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_H;
	/* NOTREACHED */
	break;
case 'G':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-Gspace",7) == 0) {
		end_option(argv, argi, 7);
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_Gspace__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"-GRA:unspill=on,off") == 0) {
		get_next_arg(argi);
		return O_GRA_unspillQonCoff;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-GRA:",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_GRA_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-GCM:",5) == 0) {
		end_option(argv, argi, 5);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_GCM_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (is_decimal(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		optargd = atoi(optargs);
		get_next_arg(argi);
		return add_string_option(O_G__,optargs);
		/* NOTREACHED */
	}
	break;
case 'F':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-FLIST:",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_FLIST_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-FE:",4) == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_FE_,optargs);
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O_F;
	/* NOTREACHED */
	break;
case 'E':
	get_next_char(argv, argi);
	return O_E;
	/* NOTREACHED */
	break;
case 'D':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-DEFAULT:",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_DEFAULT_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-DEBUG:",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_DEBUG_,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_D,optargs);
		/* NOTREACHED */
	break;
case 'C':
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-CLIST:",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_CLIST_,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-CG:unroll_level=n") == 0) {
		get_next_arg(argi);
		return O_CG_unroll_levelQn;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-CG:unroll_fb_req=on,off") == 0) {
		get_next_arg(argi);
		return O_CG_unroll_fb_reqQonCoff;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-CG:compute_to=on,off") == 0) {
		get_next_arg(argi);
		return O_CG_compute_toQonCoff;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"-CG:cmp_peep=on,off") == 0) {
		get_next_arg(argi);
		return O_CG_cmp_peepQonCoff;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"-CG:",4) == 0) {
		end_option(argv, argi, 4);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_CG_,optargs);
		/* NOTREACHED */
	}
		return parse_C_option(argv, argi);
		/* NOTREACHED */
	break;
case 'B':
	if (strcmp(argv[*argi],"-Bsymbolic") == 0) {
		get_next_arg(argi);
		return O_Bsymbolic;
		/* NOTREACHED */
	}
	break;
case 'A':
	if (!is_new_arg) break;
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O_A,optargs);
		/* NOTREACHED */
	break;
case '6':
	if (strcmp(argv[*argi],"-66") == 0) {
		get_next_arg(argi);
		return O_66;
		/* NOTREACHED */
	}
	break;
case '1':
	get_next_char(argv, argi);
	return O_1;
	/* NOTREACHED */
	break;
case '-':
	if (strcmp(argv[*argi],"--write-user-dependencies") == 0) {
		get_next_arg(argi);
		return O__write_user_dependencies;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--write-dependencies") == 0) {
		get_next_arg(argi);
		return O__write_dependencies;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--whole-archive") == 0) {
		get_next_arg(argi);
		return O__whole_archive;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--version") == 0) {
		get_next_arg(argi);
		return O__version;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--verbose") == 0) {
		get_next_arg(argi);
		return O__verbose;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--user-dependencies") == 0) {
		get_next_arg(argi);
		return O__user_dependencies;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--undefine-macro",16) == 0) {
		end_option(argv, argi, 16);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__undefine_macro,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--trigraphs") == 0) {
		get_next_arg(argi);
		return O__trigraphs;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--traditional-cpp") == 0) {
		get_next_arg(argi);
		return O__traditional_cpp;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--traditional") == 0) {
		get_next_arg(argi);
		return O__traditional;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--trace-includes") == 0) {
		get_next_arg(argi);
		return O__trace_includes;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--target",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__target,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--sysroot",9) == 0) {
		end_option(argv, argi, 9);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O__sysroot__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O__sysroot__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"--symbolic") == 0) {
		get_next_arg(argi);
		return O__symbolic;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--static") == 0) {
		get_next_arg(argi);
		return O__static;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--specs=",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__specsQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--specs",7) == 0) {
		end_option(argv, argi, 7);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__specs,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--shared") == 0) {
		get_next_arg(argi);
		return O__shared;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--save-temps") == 0) {
		get_next_arg(argi);
		return O__save_temps;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--profile") == 0) {
		get_next_arg(argi);
		return O__profile;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--print-search-dirs") == 0) {
		get_next_arg(argi);
		return O__print_search_dirs;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--print-prog-name=",18) == 0) {
		end_option(argv, argi, 18);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__print_prog_nameQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--print-prog-name",17) == 0) {
		end_option(argv, argi, 17);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__print_prog_name,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--print-multi-lib") == 0) {
		get_next_arg(argi);
		return O__print_multi_lib;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--print-missing-file-dependencies") == 0) {
		get_next_arg(argi);
		return O__print_missing_file_dependencies;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--print-libgcc-file-name") == 0) {
		get_next_arg(argi);
		return O__print_libgcc_file_name;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--print-file-name=",18) == 0) {
		end_option(argv, argi, 18);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__print_file_nameQ,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--print-file-name",17) == 0) {
		end_option(argv, argi, 17);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__print_file_name,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--preprocess") == 0) {
		get_next_arg(argi);
		return O__preprocess;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--pipe") == 0) {
		get_next_arg(argi);
		return O__pipe;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--pedantic-errors") == 0) {
		get_next_arg(argi);
		return O__pedantic_errors;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--pedantic") == 0) {
		get_next_arg(argi);
		return O__pedantic;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--output",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__output,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--optimize") == 0) {
		get_next_arg(argi);
		return O__optimize;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--no-whole-archive") == 0) {
		get_next_arg(argi);
		return O__no_whole_archive;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--no-warnings") == 0) {
		get_next_arg(argi);
		return O__no_warnings;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--no-standard-libraries") == 0) {
		get_next_arg(argi);
		return O__no_standard_libraries;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--no-standard-includes") == 0) {
		get_next_arg(argi);
		return O__no_standard_includes;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--no-line-commands") == 0) {
		get_next_arg(argi);
		return O__no_line_commands;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--library-directory",19) == 0) {
		end_option(argv, argi, 19);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O__library_directory__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O__library_directory__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--include-with-prefix-before",28) == 0) {
		end_option(argv, argi, 28);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_with_prefix_before__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_with_prefix_before__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--include-with-prefix",21) == 0) {
		end_option(argv, argi, 21);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_with_prefix__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_with_prefix__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--include-prefix",16) == 0) {
		end_option(argv, argi, 16);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__include_prefix,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--include-directory-after",25) == 0) {
		end_option(argv, argi, 25);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_directory_after__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_directory_after__,optargs);
		/* NOTREACHED */
	}
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--include-directory",19) == 0) {
		end_option(argv, argi, 19);
	if (want_directory(next_string(argv,argi))) {
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_directory__,optargs);
		/* NOTREACHED */
	} else if (!is_last_char(argv,argi)) {
		if (fullwarn) {
			warning("%s does not refer to a valid directory", option_name);
		}
		optargs = get_optarg(argv,argi);
		get_next_arg(argi);
		return add_any_string_option(O__include_directory__,optargs);
		/* NOTREACHED */
	}
	}
	if (strcmp(argv[*argi],"--include-barrier") == 0) {
		get_next_arg(argi);
		return O__include_barrier;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--include",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__include,optargs);
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--imacros",9) == 0) {
		end_option(argv, argi, 9);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__imacros,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--help") == 0) {
		get_next_arg(argi);
		return O__help;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--force-link",12) == 0) {
		end_option(argv, argi, 12);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__force_link,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--extra-warnings") == 0) {
		get_next_arg(argi);
		return O__extra_warnings;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--dumpversion") == 0) {
		get_next_arg(argi);
		return O__dumpversion;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--dependencies") == 0) {
		get_next_arg(argi);
		return O__dependencies;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--define-macro",14) == 0) {
		end_option(argv, argi, 14);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__define_macro,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--debug") == 0) {
		get_next_arg(argi);
		return O__debug;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--compile") == 0) {
		get_next_arg(argi);
		return O__compile;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--comments") == 0) {
		get_next_arg(argi);
		return O__comments;
		/* NOTREACHED */
	}
	if (!is_new_arg) break;
	if (strncmp(argv[*argi],"--assert",8) == 0) {
		end_option(argv, argi, 8);
		optargs = get_optarg(argv, argi);
		get_next_arg(argi);
		return add_string_option(O__assert,optargs);
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--assemble") == 0) {
		get_next_arg(argi);
		return O__assemble;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--ansi") == 0) {
		get_next_arg(argi);
		return O__ansi;
		/* NOTREACHED */
	}
	if (strcmp(argv[*argi],"--all-warnings") == 0) {
		get_next_arg(argi);
		return O__all_warnings;
		/* NOTREACHED */
	}
	get_next_char(argv, argi);
	return O__;
	/* NOTREACHED */
	break;
case '#':
	if (strcmp(argv[*argi],"-###") == 0) {
		get_next_arg(argi);
		return O_PPP;
		/* NOTREACHED */
	}
	break;
case '\0':
	if (strcmp(argv[*argi],"-") == 0) {
		get_next_arg(argi);
		return O_;
		/* NOTREACHED */
	}
	break;
}
optargs = current_string(argv,argi);
get_next_arg(argi);
return O_Unrecognized;
}
/* if alias, return real option index */
extern int
get_real_option_if_aliased(int flag)
{
  switch (flag) {
	case O_print_libgcc_file_name: {
		optargs = "libgcc.a";
		return add_string_option(O_print_file_nameQ,optargs);
		}
	case O_pic2: {
		optargs = "PIC";
		return add_string_option(O_TENV_,optargs);
		}
	case O_pic1: {
		optargs = "CPIC";
		return add_string_option(O_TENV_,optargs);
		}
	case O_mvolatile_asm_stop: {
		optargs = "volatile_asm_stop=on";
		return add_string_option(O_CG_,optargs);
		}
	case O_jalr: {
		optargs = "force_jalr";
		return add_string_option(O_TARG_,optargs);
		}
	case O_frandom_seed: return O_frandom_seedQ;
	case O_finstrument_functions: {
		optargs = "cyg_instr=4";
		return add_string_option(O_OPT_,optargs);
		}
	case O__write_user_dependencies: return O_MMD;
	case O__write_dependencies: return O_MD;
	case O__version: return O_version;
	case O__user_dependencies: return O_MM;
	case O__undefine_macro: return O_U;
	case O__trigraphs: return O_trigraphs;
	case O__traditional_cpp: return O_traditional_cpp;
	case O__traditional: return O_traditional;
	case O__target: return O_b;
	case O__symbolic: return O_symbolic;
	case O__specsQ: return O_specsQ;
	case O__specs: return O_specsQ;
	case O__shared: return O_shared;
	case O__save_temps: return O_save_temps;
	case O__print_search_dirs: return O_print_search_dirs;
	case O__print_prog_nameQ: return O_print_prog_nameQ;
	case O__print_prog_name: return O_print_prog_nameQ;
	case O__print_multi_lib: return O_print_multi_lib;
	case O__print_missing_file_dependencies: return O_MG;
	case O__print_libgcc_file_name: {
		optargs = "libgcc.a";
		return add_string_option(O_print_file_nameQ,optargs);
		}
	case O__print_file_nameQ: return O_print_file_nameQ;
	case O__print_file_name: return O_print_file_nameQ;
	case O__pipe: return O_pipe;
	case O__pedantic_errors: return O_pedantic_errors;
	case O__pedantic: return O_pedantic;
	case O__no_standard_libraries: return O_nostdlib;
	case O__no_standard_includes: return O_nostdinc;
	case O__library_directory__: return O_L__;
	case O__include_with_prefix_before__: return O_iwithprefixbefore__;
	case O__include_with_prefix__: return O_iwithprefix__;
	case O__include_prefix: return O_iprefix;
	case O__include_directory_after__: return O_idirafter__;
	case O__include_directory__: return O_I__;
	case O__include_barrier: return O_I_;
	case O__include: return O_include;
	case O__imacros: return O_imacros;
	case O__force_link: return O_u;
	case O__dumpversion: return O_dumpversion;
	case O__define_macro: return O_D;
	case O__assert: return O_A;
	case O__ansi: return O_ansi;
	case O__all_warnings: return O_Wall;
	default: return flag;
  }
}
