/* THIS FILE IS AUTOMATICALLY GENERATED BY table */

#include "option_names.h"
#include "opt_actions.h"

int msglevel = UNDEFINED;
int skip_as = UNDEFINED;
int shared = UNDEFINED;
int rflag = UNDEFINED;
int iflag = UNDEFINED;
int sse2 = UNDEFINED;
int xop = UNDEFINED;
int ssse3 = UNDEFINED;
int sse4a = UNDEFINED;
int sse42 = UNDEFINED;
int sse41 = UNDEFINED;
int sse3 = UNDEFINED;
int mmx = UNDEFINED;
int sse = UNDEFINED;
int ospace = UNDEFINED;
int oscale = UNDEFINED;
int pclmul = UNDEFINED;
int mpkind = UNDEFINED;
int fma4 = UNDEFINED;
int avx = UNDEFINED;
int aes = UNDEFINED;
int m3dnow = UNDEFINED;
int use_mipslibs = UNDEFINED;
int use_craylibs = UNDEFINED;
int abi = UNDEFINED;
int isa = UNDEFINED;
int ipa = UNDEFINED;
int gnu_major_version = UNDEFINED;
int gnu_minor_version = UNDEFINED;
int glevel = UNDEFINED;
int use_ftpp = UNDEFINED;
int fortran_form = UNDEFINED;
int pic = UNDEFINED;
int fmath_errno = UNDEFINED;
int ffast_math = UNDEFINED;
int fcxx_openmp = UNDEFINED;
int fbuiltin = UNDEFINED;
int use_coco = UNDEFINED;
int external_gcc = UNDEFINED;
int dflag = UNDEFINED;
int cordflag = UNDEFINED;
int io_byteswap = UNDEFINED;
int compat_gcc = UNDEFINED;
int isstatic = UNDEFINED;
int ansi = UNDEFINED;
int olevel = UNDEFINED;
int standard_cplusplus = UNDEFINED;
int gnum = UNDEFINED;

static void
create_option_info (int flag, mask_t lang_mask, mask_t phase_mask, char *name, char *help_msg)
{
	options[flag].valid_langs = lang_mask;
	options[flag].valid_phases = phase_mask;
	options[flag].implies = NULL;
	options[flag].name = string_copy(name);
	options[flag].help_msg = string_copy(help_msg);
}

static void
create_implies_item (int key, int index, char *name)
{
	option_list_t *p;
	p = (option_list_t *) malloc(sizeof(option_list_t));
	p->info_index = index;
	p->name = string_copy(name);
	p->next = options[key].implies;
	options[key].implies = p;
}


extern void
init_options (void)
{
	options = (option_info_t *) malloc(max_options*sizeof(option_info_t));
	create_option_info(0,0LL,0LL,"",NULL);
	create_option_info(1,0x80000018LL,0xf0000LL,"-xall",NULL);
	create_implies_item(O_xall, 1, "-xall");
	create_option_info(2,0x80000006LL,0x1000f0000000000LL,"-u",NULL);
	create_implies_item(O_u, 2, "-u %s");
	create_option_info(3,0x80000018LL,0x7000LL,"-scan",NULL);
	create_implies_item(O_scan, 3, "-scan");
	create_option_info(4,0x8fffffffLL,0x1000f0000000000LL,"-object",NULL);
	create_option_info(5,0x8fffffffLL,0x1f00f0000LL,"-m2",NULL);
	create_implies_item(O_m2, 5, "-m2");
	create_option_info(6,0x8fffffffLL,0x1f00f0000LL,"-m1",NULL);
	create_implies_item(O_m1, 6, "-m1");
	create_option_info(7,0x8fffffffLL,0x1f00f0000LL,"-m0",NULL);
	create_implies_item(O_m0, 7, "-m0");
	create_option_info(8,0x80000018LL,0x7000LL,"-lo=ocktl",NULL);
	create_implies_item(O_loQocktl, 8, "-lo=ocktl");
	create_option_info(9,0x80000004LL,0x1000f0000000000LL,"-init",NULL);
	create_implies_item(O_init, 9, "-init %s");
	create_option_info(10,0x80000018LL,0xf7000LL,"-include=",NULL);
	create_implies_item(O_includeQ__, 10, "-include=%D");
	create_option_info(11,0x80000004LL,0x1000f0000000000LL,"-fini",NULL);
	create_implies_item(O_fini, 11, "-fini %s");
	create_option_info(12,0x80000018LL,0xf0000LL,"-cvs_nosrc,",NULL);
	create_implies_item(O_cvs_nosrcC__, 12, "-cvs_nosrc,%D");
	create_option_info(13,0x80000018LL,0xf0000LL,"-cvs_nosrc",NULL);
	create_implies_item(O_cvs_nosrc, 13, "-cvs_nosrc");
	create_option_info(14,0x80000018LL,0xf0000LL,"-cvs,",NULL);
	create_implies_item(O_cvsC__, 14, "-cvs,%D");
	create_option_info(15,0x80000018LL,0xf0000LL,"-cvs",NULL);
	create_implies_item(O_cvs, 15, "-cvs");
	create_option_info(16,0x8fffffffLL,0LL,"-cpp_pic",NULL);
	create_implies_item(O_cpp_pic, 840, "-D__DSO__");
	create_implies_item(O_cpp_pic, 840, "-D_PIC");
	create_option_info(17,0x8fffffffLL,0LL,"-cpp_nonansi",NULL);
	create_implies_item(O_cpp_nonansi, 840, "-D_LONGLONG");
	create_option_info(18,0x80000010LL,0xff0LL,"-cpp_fortran90",NULL);
	create_implies_item(O_cpp_fortran90, 840, "-DLANGUAGE_FORTRAN90");
	create_implies_item(O_cpp_fortran90, 840, "-D_LANGUAGE_FORTRAN90");
	create_option_info(19,0x80000008LL,0xff0LL,"-cpp_fortran77",NULL);
	create_implies_item(O_cpp_fortran77, 840, "-DLANGUAGE_FORTRAN77");
	create_implies_item(O_cpp_fortran77, 840, "-D_LANGUAGE_FORTRAN77");
	create_option_info(20,0x80000018LL,0xff0LL,"-cpp_fortran",NULL);
	create_implies_item(O_cpp_fortran, 840, "-DLANGUAGE_FORTRAN");
	create_implies_item(O_cpp_fortran, 26, "-D_LANGUAGE_FORTRAN");
	create_option_info(21,0x8fffffffLL,0LL,"-cpp_extensions",NULL);
	create_implies_item(O_cpp_extensions, 840, "-D__MATH_HAS_NO_SIDE_EFFECTS");
	create_implies_item(O_cpp_extensions, 25, "-D__EXTENSIONS__");
	create_option_info(22,0x80000020LL,0xff0LL,"-cpp_assembly",NULL);
	create_implies_item(O_cpp_assembly, 840, "-DLANGUAGE_ASSEMBLY");
	create_implies_item(O_cpp_assembly, 29, "-D_LANGUAGE_ASSEMBLY");
	create_option_info(23,0x80000002LL,0x8000LL,"-Xansi",NULL);
	create_implies_item(O_Xansi, 23, "-Xansi");
	create_option_info(24,0x80000006LL,0xff0LL,"-D__GNUC__",NULL);
	create_implies_item(O_D__GNUC__, 24, "-D__GNUC__");
	create_option_info(25,0x80000006LL,0xff0LL,"-D__EXTENSIONS__",NULL);
	create_implies_item(O_D__EXTENSIONS__, 25, "-D__EXTENSIONS__");
	create_option_info(26,0x80000018LL,0xff0LL,"-D_LANGUAGE_FORTRAN",NULL);
	create_implies_item(O_D_LANGUAGE_FORTRAN, 26, "-D_LANGUAGE_FORTRAN");
	create_option_info(27,0x80000004LL,0xff0LL,"-D_LANGUAGE_C_PLUS_PLUS=1",NULL);
	create_implies_item(O_D_LANGUAGE_C_PLUS_PLUSQ1, 27, "-D_LANGUAGE_C_PLUS_PLUS=1");
	create_option_info(28,0x80000002LL,0xff0LL,"-D_LANGUAGE_C",NULL);
	create_implies_item(O_D_LANGUAGE_C, 28, "-D_LANGUAGE_C");
	create_option_info(29,0x80000020LL,0xff0LL,"-D_LANGUAGE_ASSEMBLY",NULL);
	create_implies_item(O_D_LANGUAGE_ASSEMBLY, 29, "-D_LANGUAGE_ASSEMBLY");
	create_option_info(30,0x1eLL,0x100000000LL,"-zerouv","set uninitialized variables to zero");
	create_implies_item(O_zerouv, 839, "-DEBUG:zero_uninitialized");
	create_option_info(31,0x1eLL,0x1000f0000000000LL,"-y",NULL);
	create_implies_item(O_y, 31, "-y %s");
	create_option_info(32,0xfffffffLL,0LL,"-x","Specify explicit language for input files");
	create_option_info(33,0xfffffffLL,0LL,"-woffoptions","turn off warnings about options");
	create_option_info(34,0xfffffffLL,0LL,"-woffall","turn off all warnings");
	create_implies_item(O_woffall, 7, "-m0");
	create_implies_item(O_woffall, 39, "-w");
	create_option_info(35,0x18LL,0x1000f0000LL,"-woff","turn off named warnings");
	create_implies_item(O_woff__, 35, "-woff%d");
	create_option_info(36,0x8LL,0xf0000LL,"-w66","turn off F66 incompatibility warnings");
	create_implies_item(O_w66, 36, "-w66");
	create_option_info(37,0x8LL,0xf0000LL,"-w3","supress warnings but exit with error status");
	create_implies_item(O_w3, 37, "-w3");
	create_option_info(38,0x8LL,0xf0000LL,"-w2","warnings count as errors");
	create_implies_item(O_w2, 38, "-w2");
	create_option_info(39,0xfffffffLL,0x3000f07ff0LL,"-w",NULL);
	create_implies_item(O_w, 7, "-m0");
	create_implies_item(O_w, 39, "-w");
	create_option_info(40,0x8LL,0xf0000LL,"-vms_stdin",NULL);
	create_implies_item(O_vms_stdin, 40, "-vms_stdin");
	create_option_info(41,0x8LL,0xf0000LL,"-vms_library",NULL);
	create_implies_item(O_vms_library, 41, "-vms_library");
	create_option_info(42,0x8LL,0xf0000LL,"-vms_endfile",NULL);
	create_implies_item(O_vms_endfile, 42, "-vms_endfile");
	create_option_info(43,0x8LL,0xf0000LL,"-vms_cc",NULL);
	create_implies_item(O_vms_cc, 43, "-vms_cc");
	create_option_info(44,0x18LL,0LL,"-vms",NULL);
	create_implies_item(O_vms, 44, "-vms");
	create_option_info(45,0xfffffffLL,0LL,"-version","Show the version of the compiler being used");
	create_option_info(46,0x8LL,0xf0000LL,"-varargs","MATRA varargs");
	create_implies_item(O_varargs, 46, "-varargs");
	create_option_info(47,0xfffffffLL,0x1000f3000000ff0LL,"-v","show phases and version as they are being invoked");
	create_implies_item(O_v, 88, "-show");
	create_implies_item(O_v, 47, "-v");
	create_option_info(48,0x6LL,0LL,"-usegfe",NULL);
	create_option_info(49,0x8LL,0xf0000LL,"-usefpidx",NULL);
	create_implies_item(O_usefpidx, 49, "-usefpidx");
	create_option_info(50,0x10LL,0LL,"-usef90",NULL);
	create_option_info(51,0xfffffffLL,0LL,"-useas",NULL);
	create_option_info(52,0x18LL,0xf00000LL,"-use_readwrite_const",NULL);
	create_implies_item(O_use_readwrite_const, 52, "-use_readwrite_const");
	create_option_info(53,0x18LL,0xf00000LL,"-use_readonly_const",NULL);
	create_implies_item(O_use_readonly_const, 53, "-use_readonly_const");
	create_option_info(54,0x27LL,0xff0LL,"-undef",NULL);
	create_implies_item(O_undef, 54, "-undef");
	create_option_info(55,0xfffffffLL,0LL,"-u",NULL);
	create_option_info(56,0x7LL,0xff0LL,"-trigraphs",NULL);
	create_implies_item(O_trigraphs, 56, "-trigraphs");
	create_option_info(57,0x1eLL,0x100000000LL,"-trapuv","trap uninitialized variables");
	create_implies_item(O_trapuv, 839, "-DEBUG:trap_uninitialized");
	create_option_info(58,0x7LL,0LL,"-traditional-cpp",NULL);
	create_implies_item(O_traditional_cpp, 59, "-traditional");
	create_option_info(59,0x7LL,0xff0LL,"-traditional","Attempt to support traditional K&R style C");
	create_implies_item(O_traditional, 59, "-traditional");
	create_option_info(60,0x6LL,0xff0000LL,"-syntax-only",NULL);
	create_implies_item(O_syntax_only, 60, "-syntax-only");
	create_option_info(61,0x1eLL,0x1000f0000000000LL,"-symbolic",NULL);
	create_implies_item(O_symbolic, 61, "-symbolic");
	create_option_info(62,0xfffffffLL,0LL,"-subverbose","Print diagnostic information about subscription management");
	create_implies_item(O_subverbose, 62, "-subverbose");
	create_option_info(63,0xfffffffLL,0xff0LL,"-stdinc","predefined include search path list");
	create_option_info(64,0x7LL,0xf00ff0LL,"-std=iso9899:199x","Support revised ISO C, from 1999");
	create_implies_item(O_stdQiso9899_199x, 64, "-std=iso9899:199x");
	create_option_info(65,0x7LL,0xf00ff0LL,"-std=iso9899:1999","Support revised ISO C, from 1999");
	create_implies_item(O_stdQiso9899_1999, 65, "-std=iso9899:1999");
	create_option_info(66,0x7LL,0xf00ff0LL,"-std=iso9899:199409","Support ISO C from 1990, with 1994 amendments");
	create_implies_item(O_stdQiso9899_199409, 66, "-std=iso9899:199409");
	create_option_info(67,0x7LL,0xf00ff0LL,"-std=iso9899:1990","Support ISO C from 1990");
	create_implies_item(O_stdQiso9899_1990, 67, "-std=iso9899:1990");
	create_option_info(68,0x7LL,0xf00ff0LL,"-std=gnu9x","Support ISO C from 1999, with GNU extensions");
	create_implies_item(O_stdQgnu9x, 68, "-std=gnu9x");
	create_option_info(69,0x7LL,0xf00ff0LL,"-std=gnu99","Support ISO C from 1999, with GNU extensions");
	create_implies_item(O_stdQgnu99, 69, "-std=gnu99");
	create_option_info(70,0x7LL,0xf00ff0LL,"-std=gnu89","Support ISO C from 1990, with GNU extensions");
	create_implies_item(O_stdQgnu89, 70, "-std=gnu89");
	create_option_info(71,0x5LL,0xf00ff0LL,"-std=gnu++98","The same as '-std=c++98' plus GNU extensions.  This is the default for C++ code.");
	create_implies_item(O_stdQgnu__98, 71, "-std=gnu++98");
	create_option_info(72,0x7LL,0xf00ff0LL,"-std=c9x","Support revised ISO C, from 1999");
	create_implies_item(O_stdQc9x, 72, "-std=c9x");
	create_option_info(73,0x7LL,0xf00ff0LL,"-std=c99","Support revised ISO C, from 1999");
	create_implies_item(O_stdQc99, 73, "-std=c99");
	create_option_info(74,0x7LL,0xf00ff0LL,"-std=c89","Support ISO C from 1990");
	create_implies_item(O_stdQc89, 74, "-std=c89");
	create_option_info(75,0x5LL,0xf00ff0LL,"-std=c++98","Support 1998 ISO C++ standard plus amendments");
	create_implies_item(O_stdQc__98, 75, "-std=c++98");
	create_option_info(76,0x18LL,0xf0000LL,"-static_threadprivate",NULL);
	create_implies_item(O_static_threadprivate, 76, "-static_threadprivate");
	create_option_info(78,0x1eLL,0x1000f0000000000LL,"-static-libgcc","Force the use of the static libgcc library");
	create_implies_item(O_static_libgcc, 78, "-static-libgcc");
	create_option_info(79,0x18LL,0xf0000LL,"-static-data","treat local data as static");
	create_implies_item(O_static_data, 79, "-static-data");
	create_option_info(80,0x1eLL,0x1000f0000000000LL,"-static",NULL);
	create_implies_item(O_static, 80, "-static");
	create_option_info(81,0xfffffffLL,0LL,"-specs=",NULL);
	create_implies_item(O_specsQ, 81, "-specs=");
	create_option_info(82,0x1eLL,0x1000f0000000000LL,"-soname",NULL);
	create_implies_item(O_soname, 82, "-soname %s");
	create_option_info(83,0xfffffffLL,0LL,"-showt","show time taken by each phase");
	create_option_info(84,0xfffffffLL,0LL,"-showd",NULL);
	create_option_info(85,0xfffffffLL,0LL,"-show1",NULL);
	create_option_info(86,0xfffffffLL,0LL,"-show0","show what phases would be called, but do not invoke anything");
	create_option_info(87,0xfffffffLL,0LL,"-show-defaults","Show the default compiler options being used");
	create_option_info(88,0xfffffffLL,0x1f00f0000LL,"-show","show phases as they are being invoked");
	create_implies_item(O_show, 88, "-show");
	create_option_info(89,0x1eLL,0x1000f0000000000LL,"-shared-libgcc","Force the use of the shared libgcc library");
	create_implies_item(O_shared_libgcc, 89, "-shared-libgcc");
	create_option_info(90,0xfffffffLL,0x1000f0000000000LL,"-shared","dso-shared PIC code");
	create_implies_item(O_shared, 90, "-shared");
	create_implies_item(O_shared, 773, "-TENV:PIC");
	create_option_info(91,0xfffffffLL,0LL,"-save-temps",NULL);
	create_option_info(92,0x1eLL,0x1000f0000000000LL,"-s","Strip symbol table and relocation information");
	create_implies_item(O_s, 92, "-s");
	create_option_info(93,0x1eLL,0x1000f0000000000LL,"-rpath",NULL);
	create_implies_item(O_rpath, 93, "-rpath %s");
	create_option_info(94,0xfffffffLL,0LL,"-realO","override the turning down of optimization levels");
	create_option_info(95,0x1eLL,0x1000f0000000000LL,"-rdynamic",NULL);
	create_implies_item(O_rdynamic, 731, "-Wl,--export-dynamic");
	create_option_info(96,0x8LL,0xf0000LL,"-r8const",NULL);
	create_implies_item(O_r8const, 96, "-r8const");
	create_option_info(97,0x18LL,0xf0000LL,"-r8","use REAL*8 and COMPLEX*16 as the defaults for real and complex");
	create_implies_item(O_r8, 97, "-r8");
	create_option_info(98,0x18LL,0xf0000LL,"-r4","use REAL*4 and COMPLEX*8 as the defaults for real and complex");
	create_implies_item(O_r4, 98, "-r4");
	create_option_info(99,0xfffffffLL,0x1000f0000000000LL,"-r","produce a relocatable .o and stop");
	create_implies_item(O_r, 99, "-r");
	create_option_info(100,0xfffffffLL,0LL,"-pthread","Compile with pthreads support");
	create_option_info(101,0x1eLL,0x100000000LL,"-promp",NULL);
	create_implies_item(O_promp, 781, "-PROMP:=on");
	create_implies_item(O_promp, 782, "-PHASE:prompf");
	create_option_info(102,0xfffffffLL,0x1000f0000000000LL,"-profile",NULL);
	create_implies_item(O_profile, 773, "-TENV:call_mcount");
	create_implies_item(O_profile, 225, "-lm");
	create_implies_item(O_profile, 102, "-profile");
	create_option_info(103,0xfffffffLL,0LL,"-print-search-dirs","Print the installation directory and directories the compiler will search");
	create_option_info(104,0xfffffffLL,0LL,"-print-prog-name=",NULL);
	create_option_info(105,0xfffffffLL,0LL,"-print-multi-lib","Print the mapping from multilib directory names to compiler switches that enable them.");
	create_option_info(106,0xfffffffLL,0LL,"-print-libgcc-file-name",NULL);
	create_implies_item(O_print_libgcc_file_name, 107, "-print-file-name=libgcc.a");
	create_option_info(107,0xfffffffLL,0LL,"-print-file-name=",NULL);
	create_option_info(108,0x4LL,0LL,"-prelink","use prelinker (default)");
	create_option_info(109,0xfffffffLL,0LL,"-pipe",NULL);
	create_option_info(110,0xfffffffLL,0x1000f0000000000LL,"-pie","Generate position independent code, if possible");
	create_implies_item(O_pie, 773, "-TENV:PIC");
	create_implies_item(O_pie, 110, "-pie");
	create_option_info(111,0xfffffffLL,0LL,"-pic2",NULL);
	create_implies_item(O_pic2, 773, "-TENV:PIC");
	create_option_info(112,0xfffffffLL,0LL,"-pic1",NULL);
	create_implies_item(O_pic1, 773, "-TENV:CPIC");
	create_option_info(113,0xfffffffLL,0x1000f0000000000LL,"-pg",NULL);
	create_implies_item(O_pg, 773, "-TENV:call_mcount");
	create_implies_item(O_pg, 225, "-lm");
	create_implies_item(O_pg, 113, "-pg");
	create_option_info(114,0xfffffffLL,0LL,"-pfa2",NULL);
	create_option_info(115,0x1eLL,0x100000000LL,"-pfa,",NULL);
	create_implies_item(O_pfaC, 118, "-pfa");
	create_option_info(116,0x1eLL,0x100000000LL,"-pfalist",NULL);
	create_implies_item(O_pfalist, 809, "-LNO:prompl");
	create_implies_item(O_pfalist, 118, "-pfa");
	create_option_info(117,0x1eLL,0x100000000LL,"-pfakeep",NULL);
	create_implies_item(O_pfakeep, 809, "-LNO:prompl");
	create_implies_item(O_pfakeep, 118, "-pfa");
	create_option_info(118,0x1eLL,0x100000000LL,"-pfa",NULL);
	create_implies_item(O_pfa, 118, "-pfa");
	create_option_info(119,0x7LL,0xff0ff0LL,"-pedantic-errors","Issue warnings needed by strict compliance to ANSI C");
	create_implies_item(O_pedantic_errors, 119, "-pedantic-errors");
	create_option_info(120,0x7LL,0xf00ff0LL,"-pedantic",NULL);
	create_implies_item(O_pedantic, 120, "-pedantic");
	create_option_info(121,0x1eLL,0x100000000LL,"-pca,",NULL);
	create_implies_item(O_pcaC, 118, "-pfa");
	create_option_info(122,0x1eLL,0x100000000LL,"-pcalist",NULL);
	create_implies_item(O_pcalist, 809, "-LNO:prompl");
	create_implies_item(O_pcalist, 118, "-pfa");
	create_option_info(123,0x1aLL,0x100000000LL,"-pcakeep",NULL);
	create_implies_item(O_pcakeep, 809, "-LNO:prompl");
	create_implies_item(O_pcakeep, 118, "-pfa");
	create_option_info(124,0x1eLL,0x100000000LL,"-pca",NULL);
	create_implies_item(O_pca, 118, "-pfa");
	create_option_info(125,0xfffffffLL,0LL,"-pass-exit-codes","Return the highest error code encountered by any phase");
	create_option_info(126,0x6LL,0xf00000LL,"-parse",NULL);
	create_implies_item(O_parse, 126, "-parse");
	create_option_info(127,0x10LL,0xf0000LL,"-pad_char_literals",NULL);
	create_implies_item(O_pad_char_literals, 127, "-pad_char_literals");
	create_option_info(129,0xfffffffLL,0x1000f0000000000LL,"-p",NULL);
	create_implies_item(O_p, 773, "-TENV:call_mcount");
	create_implies_item(O_p, 129, "-p");
	create_option_info(130,0x1eLL,0xf0000LL,"-openmp","enable the multiprocessing directives (same as -mp)");
	create_implies_item(O_openmp, 179, "-mp");
	create_option_info(131,0x6LL,0xff0LL,"-opencc","Define __OPENCC__ and other macros");
	create_option_info(132,0x8LL,0xf0000LL,"-onetrip","One trip DO loops");
	create_implies_item(O_onetrip, 851, "-1");
	create_option_info(133,0x8LL,0xf0000LL,"-old_rl",NULL);
	create_implies_item(O_old_rl, 133, "-old_rl");
	create_option_info(134,0xfffffffLL,0LL,"-o","put output in following file name rather than a.out");
	create_option_info(135,0x1eLL,0x1000f0000000000LL,"-nostdlib","Do not use standard system startup files or libraries when linking");
	create_implies_item(O_nostdlib, 135, "-nostdlib");
	create_option_info(136,0x5LL,0xff0LL,"-nostdinc++","Do not search for header files in the standard directories specific to C++");
	create_implies_item(O_nostdinc__, 136, "-nostdinc++");
	create_option_info(137,0xfffffffLL,0xff0LL,"-nostdinc","no predefined include search path list");
	create_implies_item(O_nostdinc, 137, "-nostdinc");
	create_option_info(138,0x1eLL,0x1000f0000000000LL,"-nostartfiles","Do not use standard system startup files when linking");
	create_implies_item(O_nostartfiles, 138, "-nostartfiles");
	create_option_info(139,0x1eLL,0x1000f0000000000LL,"-nolibopen64rt","Do not link with libopen64rt");
	create_option_info(140,0x6LL,0LL,"-noinline","suppress inline processing");
	create_implies_item(O_noinline, 820, "-INLINE:=OFF");
	create_option_info(141,0x8LL,0xf0000LL,"-noi4","make integer and logical quantities short (2 bytes)");
	create_implies_item(O_noi4, 141, "-noi4");
	create_option_info(142,0x8LL,0xf0000LL,"-nof77",NULL);
	create_implies_item(O_nof77, 142, "-nof77");
	create_option_info(143,0x18LL,0xf0000LL,"-noextend_source",NULL);
	create_implies_item(O_noextend_source, 3, "-scan=72");
	create_implies_item(O_noextend_source, 143, "-noextend_source");
	create_option_info(145,0x18LL,0x100000000LL,"-noexpopt","Do not optimize exponentiation operations");
	create_implies_item(O_noexpopt, 789, "-OPT:fast_exp=no");
	create_option_info(146,0x1eLL,0x1000f0000000000LL,"-nodefaultlibs","Do not use standard system libraries when linking");
	create_implies_item(O_nodefaultlibs, 146, "-nodefaultlibs");
	create_option_info(147,0x18LL,0xff0000LL,"-nocpp","do not do cpp processing");
	create_implies_item(O_nocpp, 147, "-nocpp");
	create_option_info(148,0x4LL,0xf00000LL,"-nobool","disallow bool keyword");
	create_implies_item(O_nobool, 148, "-nobool");
	create_option_info(149,0xfffffffLL,0LL,"-noas",NULL);
	create_option_info(150,0x4LL,0xf00000LL,"-no_prelink",NULL);
	create_implies_item(O_no_prelink, 150, "-no_prelink");
	create_option_info(151,0x6LL,0xff0000LL,"-no-traditional",NULL);
	create_implies_item(O_no_traditional, 151, "-no-traditional");
	create_option_info(153,0x6LL,0xff0LL,"-no-opencc","Do not define __OPENCC__ and other macros");
	create_option_info(154,0x18LL,0xf0000LL,"-no-intrinsic=","Remove intrinsic from the initial set the compiler recognizes");
	create_implies_item(O_no_intrinsicQ, 154, "-no-intrinsic=%s");
	create_option_info(155,0x6LL,0xff0LL,"-no-gcc","Do not define __GNUC__ and other macros");
	create_implies_item(O_no_gcc, 155, "-no-gcc");
	create_option_info(156,0x1eLL,0x1000f0000000000LL,"-n",NULL);
	create_implies_item(O_n, 156, "-n");
	create_option_info(157,0xfffffffLL,0xf00ff0LL,"-mxop","Enable XOP extensions");
	create_implies_item(O_mxop, 157, "-mxop");
	create_option_info(158,0xfffffffLL,0x100000000LL,"-mx87-precision=","Specify the precision of x87 floating-point calculations (32/64/80-bit)");
	create_implies_item(O_mx87_precisionQ__, 774, "-TARG:x87-precision=%d");
	create_option_info(159,0xfffffffLL,0LL,"-mvolatile-asm-stop",NULL);
	create_implies_item(O_mvolatile_asm_stop, 846, "-CG:volatile_asm_stop=on");
	create_option_info(160,0xfffffffLL,0LL,"-mtune=","Set CPU type");
	create_option_info(161,0xfffffffLL,0xf00ff0LL,"-mssse3","Enable SSSE3 extensions");
	create_implies_item(O_mssse3, 161, "-mssse3");
	create_option_info(162,0xfffffffLL,0xf00ff0LL,"-msse4a","Enable SSE4a extensions");
	create_implies_item(O_msse4a, 162, "-msse4a");
	create_option_info(163,0xfffffffLL,0xf00ff0LL,"-msse4.2","Enable SSE4.2 extensions");
	create_implies_item(O_msse42, 163, "-msse4.2");
	create_option_info(164,0xfffffffLL,0xf00ff0LL,"-msse4.1","Enable SSE4.1 extensions");
	create_implies_item(O_msse41, 164, "-msse4.1");
	create_option_info(165,0xfffffffLL,0xf00ff0LL,"-msse3","Enable SSE3 extensions");
	create_implies_item(O_msse3, 165, "-msse3");
	create_option_info(166,0xfffffffLL,0xf00ff0LL,"-msse2","Enable SSE2 extensions");
	create_implies_item(O_msse2, 166, "-msse2");
	create_option_info(167,0xfffffffLL,0xfffffffffffffffLL,"-msse","Enable SSE extensions");
	create_option_info(168,0xfffffffLL,0x1f0ff0000LL,"-mspace",NULL);
	create_implies_item(O_mspace, 789, "-OPT:space");
	create_option_info(169,0xfffffffLL,0LL,"-msoft-float",NULL);
	create_option_info(170,0xfffffffLL,0x101f0ff0000LL,"-mso","Optimize for multicore scalability");
	create_option_info(171,0x1aLL,0x100000000LL,"-mplist",NULL);
	create_implies_item(O_mplist, 171, "-mplist");
	create_option_info(172,0x18LL,0x100000000LL,"-mpio",NULL);
	create_implies_item(O_mpio, 172, "-mpio");
	create_option_info(173,0xfffffffLL,0xf00ff0LL,"-mpclmul","Enable PCLMUL extensions");
	create_implies_item(O_mpclmul, 173, "-mpclmul");
	create_option_info(174,0x18LL,0LL,"-mp_use_locks",NULL);
	create_option_info(175,0x18LL,0LL,"-mp_use_copy",NULL);
	create_option_info(176,0x18LL,0xf7000LL,"-mp_schedtype=",NULL);
	create_implies_item(O_mp_schedtypeQ, 176, "-mp_schedtype=%s");
	create_option_info(177,0x1aLL,0LL,"-mp_keep",NULL);
	create_option_info(178,0x18LL,0xf0000LL,"-mp_chunk=",NULL);
	create_implies_item(O_mp_chunkQ__, 178, "-mp_chunk=%d");
	create_option_info(179,0x1eLL,0xff0000LL,"-mp","enable the multiprocessing directives");
	create_implies_item(O_mp, 179, "-mp");
	create_option_info(180,0x10LL,0LL,"-module","Directory in which to create .mod file");
	create_option_info(181,0xfffffffLL,0xf00ff0LL,"-mno-xop","Disable XOP extensions");
	create_implies_item(O_mno_xop, 181, "-mno-xop");
	create_option_info(182,0xfffffffLL,0xf00ff0LL,"-mno-ssse3","Disable SSSE3 extensions");
	create_implies_item(O_mno_ssse3, 182, "-mno-ssse3");
	create_option_info(183,0xfffffffLL,0xf00ff0LL,"-mno-sse4a","Disable SSE4a extensions");
	create_implies_item(O_mno_sse4a, 183, "-mno-sse4a");
	create_option_info(184,0xfffffffLL,0xf00ff0LL,"-mno-sse4.2","Disable SSE4.2 extensions");
	create_implies_item(O_mno_sse42, 184, "-mno-sse4.2");
	create_option_info(185,0xfffffffLL,0xf00ff0LL,"-mno-sse4.1","Disable SSE4.1 extensions");
	create_implies_item(O_mno_sse41, 185, "-mno-sse4.1");
	create_option_info(186,0xfffffffLL,0xf00ff0LL,"-mno-sse3","Disable SSE3 extensions");
	create_implies_item(O_mno_sse3, 186, "-mno-sse3");
	create_option_info(187,0xfffffffLL,0xf00ff0LL,"-mno-sse2","Disable SSE2/SSE3 extensions");
	create_implies_item(O_mno_sse2, 187, "-mno-sse2");
	create_option_info(188,0xfffffffLL,0x100000000LL,"-mno-sse","Disable SSE2/SSE3/SSE4a extensions");
	create_option_info(189,0xfffffffLL,0LL,"-mno-soft-float",NULL);
	create_option_info(190,0x6LL,0LL,"-mno-sdata",NULL);
	create_implies_item(O_mno_sdata, 833, "-G0");
	create_option_info(191,0xfffffffLL,0xf00ff0LL,"-mno-pclmul","Disable PCLMUL extensions");
	create_implies_item(O_mno_pclmul, 191, "-mno-pclmul");
	create_option_info(192,0xfffffffLL,0LL,"-mno-mmx","Disable MMX extensions");
	create_implies_item(O_mno_mmx, 192, "-mno-mmx");
	create_option_info(193,0xfffffffLL,0x100000000LL,"-mno-ieee-fp","IEEE floating point comparisons not required");
	create_implies_item(O_mno_ieee_fp, 789, "-OPT:IEEE_NaN_Inf=off");
	create_option_info(194,0xfffffffLL,0xf00ff0LL,"-mno-fma4","Disable FMA4 extensions");
	create_implies_item(O_mno_fma4, 194, "-mno-fma4");
	create_option_info(195,0xfffffffLL,0xf00ff0LL,"-mno-avx","Disable AVX extensions");
	create_implies_item(O_mno_avx, 195, "-mno-avx");
	create_option_info(196,0xfffffffLL,0xf00ff0LL,"-mno-aes","Disable AES extensions");
	create_implies_item(O_mno_aes, 196, "-mno-aes");
	create_option_info(197,0xfffffffLL,0xf00ff0LL,"-mno-3dnow","Disable 3Dnow extensions");
	create_implies_item(O_mno_3dnow, 197, "-mno-3dnow");
	create_option_info(198,0xfffffffLL,0xfffffffffffffffLL,"-mmmx","Enable MMX extensions");
	create_option_info(199,0x8LL,0LL,"-mipslibs",NULL);
	create_option_info(200,0x6LL,0x10000000000LL,"-minline-all-stringops","force inline all stringops,ignored at present");
	create_option_info(201,0xfffffffLL,0x100000000LL,"-mieee-fp","Use IEEE floating point comparisons");
	create_implies_item(O_mieee_fp, 789, "-OPT:IEEE_NaN_Inf=on");
	create_option_info(202,0xfffffffLL,0xf00ff0LL,"-mfma4","Enable FMA4 extensions");
	create_implies_item(O_mfma4, 202, "-mfma4");
	create_option_info(203,0x6LL,0LL,"-mfixed-range=",NULL);
	create_implies_item(O_mfixed_rangeQ, 773, "-TENV:registers_not_allocatable=%s");
	create_option_info(204,0xfffffffLL,0LL,"-memsim",NULL);
	create_implies_item(O_memsim, 225, "-lmemsim");
	create_implies_item(O_memsim, 809, "-LNO:mem_sim=TRUE");
	create_option_info(205,0xfffffffLL,0x100000000LL,"-memctr",NULL);
	create_implies_item(O_memctr, 205, "-memctr");
	create_option_info(206,0xfffffffLL,0LL,"-mcpu=","Set CPU type");
	create_option_info(207,0x6LL,0LL,"-mconstant-gp",NULL);
	create_implies_item(O_mconstant_gp, 773, "-TENV:constant_gp=on");
	create_option_info(208,0xfffffffLL,0LL,"-mcmodel=","Set the memory model to use");
	create_implies_item(O_mcmodelQ, 773, "-TENV:mcmodel=%s");
	create_implies_item(O_mcmodelQ, 208, "-mcmodel=%s");
	create_option_info(209,0xfffffffLL,0LL,"-mb-step",NULL);
	create_option_info(210,0xfffffffLL,0xf00ff0LL,"-mavx","Enable AVX extensions");
	create_implies_item(O_mavx, 210, "-mavx");
	create_option_info(211,0xfffffffLL,0LL,"-march=","Set CPU type");
	create_option_info(212,0xfffffffLL,0LL,"-malign-loops=",NULL);
	create_implies_item(O_malign_loopsQ__, 212, "-malign-loops=");
	create_option_info(213,0xfffffffLL,0LL,"-malign-jumps=",NULL);
	create_implies_item(O_malign_jumpsQ__, 213, "-malign-jumps=");
	create_option_info(214,0xfffffffLL,0LL,"-malign-functions=",NULL);
	create_implies_item(O_malign_functionsQ__, 214, "-malign-functions=");
	create_option_info(215,0xfffffffLL,0xf00ff0LL,"-maes","Enable AES extensions");
	create_implies_item(O_maes, 215, "-maes");
	create_option_info(216,0x10LL,0LL,"-macro_expand",NULL);
	create_option_info(218,0xfffffffLL,0LL,"-ma-step",NULL);
	create_implies_item(O_ma_step, 209, "-mb-step");
	create_implies_item(O_ma_step, 774, "-TARG:ma0_step=on");
	create_option_info(219,0xfffffffLL,0x100000000LL,"-m64","Compile for 64-bit ABI");
	create_implies_item(O_m64, 774, "-TARG:abi=n64");
	create_option_info(220,0xfffffffLL,0xf00ff0LL,"-m3dnow","Enable 3Dnow extensions");
	create_implies_item(O_m3dnow, 220, "-m3dnow");
	create_option_info(221,0xfffffffLL,0LL,"-m386",NULL);
	create_implies_item(O_m386, 221, "-m386");
	create_option_info(222,0xfffffffLL,0x100000000LL,"-m32","Compile for 32-bit ABI");
	create_implies_item(O_m32, 774, "-TARG:abi=n32");
	create_option_info(223,0x1eLL,0x1000f0000000000LL,"-melf_x86_64","Pass -m args to linker");
	create_option_info(224,0x1eLL,0x1000f0000000000LL,"-melf_i386","Pass -m args to linker");
	create_option_info(225,0x1eLL,0x1000f0000000000LL,"-l","-l<arg> adds library lib<arg> to link list");
	create_implies_item(O_l, 225, "-l%s");
	create_option_info(226,0x8LL,0xf0000LL,"-keepdollar","Treat $ as a normal last character in symbol names");
	create_implies_item(O_keepdollar, 226, "-keepdollar");
	create_option_info(227,0xfffffffLL,0x10000000000LL,"-keep","keep intermediate files");
	create_implies_item(O_keep, 227, "-keep");
	create_option_info(228,0xfffffffLL,0LL,"-jalr",NULL);
	create_implies_item(O_jalr, 774, "-TARG:force_jalr");
	create_option_info(229,0x27LL,0xff0LL,"-iwithprefixbefore",NULL);
	create_implies_item(O_iwithprefixbefore__, 229, "-iwithprefixbefore %D");
	create_option_info(230,0x27LL,0xff0LL,"-iwithprefix",NULL);
	create_implies_item(O_iwithprefix__, 230, "-iwithprefix %D");
	create_option_info(231,0xfffffffLL,0LL,"-itanium",NULL);
	create_implies_item(O_itanium, 246, "-i64");
	create_option_info(232,0x3fLL,0xff0LL,"-isystem",NULL);
	create_implies_item(O_isystem__, 232, "-isystem %D");
	create_option_info(233,0x27LL,0xff0LL,"-isysroot",NULL);
	create_implies_item(O_isysroot__, 233, "-isysroot %D");
	create_option_info(234,0xfffffffLL,0xff0LL,"-iquote","add following directory to the include search path list");
	create_implies_item(O_iquote__, 234, "-iquote=%D");
	create_option_info(235,0x27LL,0xff0LL,"-iprefix",NULL);
	create_implies_item(O_iprefix, 235, "-iprefix %s");
	create_option_info(236,0xfffffffLL,0x10000000000LL,"-ipa","Perform interprocedural analysis and optimization");
	create_implies_item(O_ipa, 236, "-ipa");
	create_option_info(237,0x18LL,0xf0000LL,"-intrinsic=","Add intrinsic to the initial set the compiler recognizes");
	create_implies_item(O_intrinsicQ, 237, "-intrinsic=%s");
	create_option_info(238,0x6LL,0LL,"-inline","request inline processing");
	create_implies_item(O_inline, 821, "-INLINE");
	create_option_info(239,0x27LL,0xff0LL,"-include",NULL);
	create_implies_item(O_include, 239, "-include %s");
	create_option_info(240,0x27LL,0xff0LL,"-imacros",NULL);
	create_implies_item(O_imacros, 240, "-imacros %s");
	create_option_info(241,0xfffffffLL,0LL,"-ignore_suffix",NULL);
	create_option_info(243,0x27LL,0xff0LL,"-idirafter",NULL);
	create_implies_item(O_idirafter__, 243, "-idirafter %D");
	create_option_info(244,0xfffffffLL,0xf000LL,"-ia32",NULL);
	create_implies_item(O_ia32, 840, "-D__ia32=1");
	create_implies_item(O_ia32, 774, "-TARG:abi=ia32");
	create_implies_item(O_ia32, 849, "-Amodel(ilp32)");
	create_implies_item(O_ia32, 840, "-D_ILP32");
	create_implies_item(O_ia32, 244, "-ia32");
	create_option_info(245,0x18LL,0xf0000LL,"-i8","make integer and logical quantities long long (8 bytes)");
	create_implies_item(O_i8, 245, "-i8");
	create_option_info(246,0xfffffffLL,0xf000LL,"-i64",NULL);
	create_implies_item(O_i64, 840, "-D__ia64=1");
	create_implies_item(O_i64, 774, "-TARG:abi=i64");
	create_implies_item(O_i64, 840, "-D_LP64");
	create_implies_item(O_i64, 246, "-i64");
	create_option_info(247,0x18LL,0xf0000LL,"-i4","make integer and logical quantities long (4 bytes)");
	create_implies_item(O_i4, 247, "-i4");
	create_option_info(248,0xfffffffLL,0xf000LL,"-i32",NULL);
	create_implies_item(O_i32, 840, "-D__ia64=1");
	create_implies_item(O_i32, 774, "-TARG:abi=i32");
	create_implies_item(O_i32, 849, "-Amodel(ilp32)");
	create_implies_item(O_i32, 840, "-D_ILP32");
	create_implies_item(O_i32, 248, "-i32");
	create_option_info(249,0x8LL,0xf0000LL,"-i2","make integer and logical quantities short (2 bytes)");
	create_implies_item(O_i2, 249, "-i2");
	create_option_info(250,0xfffffffLL,0LL,"-help:","print list of possible options that contain given string");
	create_option_info(251,0xfffffffLL,0LL,"-help","print list of possible options");
	create_option_info(252,0xfffffffLL,0LL,"-h",NULL);
	create_option_info(253,0xfffffffLL,0LL,"-gstabs3",NULL);
	create_option_info(254,0xfffffffLL,0LL,"-gstabs2",NULL);
	create_option_info(255,0xfffffffLL,0LL,"-gstabs1",NULL);
	create_option_info(256,0xfffffffLL,0LL,"-gstabs0",NULL);
	create_option_info(257,0xfffffffLL,0LL,"-gstabs+",NULL);
	create_option_info(258,0xfffffffLL,0LL,"-gstabs",NULL);
	create_option_info(259,0x6LL,0LL,"-gnu42","Use GCC 4.2 C/C++ front-end.");
	create_option_info(260,0x6LL,0LL,"-gnu40","Use GCC 4.0 C/C++ front-end.");
	create_option_info(261,0x6LL,0LL,"-gnu4","Use GCC 4.2 C/C++ front-end.");
	create_option_info(262,0x6LL,0LL,"-gnu3","Use GCC 3.3 C/C++ front-end.");
	create_option_info(263,0xfffffffLL,0x1f0ff0000LL,"-ggdb3","Produce debugging information for use by GDB");
	create_implies_item(O_ggdb3, 274, "-g3");
	create_option_info(264,0xfffffffLL,0x1f0ff0000LL,"-ggdb","Produce debugging information for use by GDB");
	create_implies_item(O_ggdb, 275, "-g2");
	create_option_info(265,0xfffffffLL,0x1f0ff0000LL,"-gdwarf-23","Produce DWARF 2 debugging information at debug level 3");
	create_implies_item(O_gdwarf_23, 274, "-g3");
	create_option_info(266,0xfffffffLL,0x1f0ff0000LL,"-gdwarf-22","Produce DWARF 2 debugging information at debug level 2");
	create_implies_item(O_gdwarf_22, 275, "-g2");
	create_option_info(267,0xfffffffLL,0x1f0ff0000LL,"-gdwarf-21","Produce DWARF 2 debugging information at debug level 1");
	create_implies_item(O_gdwarf_21, 276, "-g1");
	create_option_info(268,0xfffffffLL,0x1f0ff0000LL,"-gdwarf-20","Produce DWARF 2 debugging information at debug level 0");
	create_implies_item(O_gdwarf_20, 277, "-g0");
	create_option_info(269,0xfffffffLL,0x1f0ff0000LL,"-gdwarf-2","Produce debugging information in DWARF version 2 format");
	create_implies_item(O_gdwarf_2, 275, "-g2");
	create_option_info(270,0xfffffffLL,0LL,"-gdwarf-1+",NULL);
	create_option_info(271,0xfffffffLL,0LL,"-gdwarf-1",NULL);
	create_option_info(272,0xfffffffLL,0LL,"-gdwarf",NULL);
	create_option_info(273,0x6LL,0xff0LL,"-gcc","Define __GNUC__ and other macros");
	create_implies_item(O_gcc, 273, "-gcc");
	create_option_info(274,0xfffffffLL,0x1f0ff0ff0LL,"-g3","Add debugging information for C preprocessor macros");
	create_implies_item(O_g3, 274, "-g3");
	create_option_info(275,0xfffffffLL,0x1f0ff0000LL,"-g2",NULL);
	create_implies_item(O_g2, 275, "-g2");
	create_option_info(276,0xfffffffLL,0x1f0ff0000LL,"-g1",NULL);
	create_implies_item(O_g1, 731, "-Wl,--export-dynamic");
	create_implies_item(O_g1, 276, "-g1");
	create_option_info(277,0xfffffffLL,0x1f0ff0000LL,"-g0","no debug info");
	create_implies_item(O_g0, 277, "-g0");
	create_option_info(278,0xfffffffLL,0x1f0ff0000LL,"-g","full debug info");
	create_implies_item(O_g, 275, "-g2");
	create_option_info(279,0x6LL,0xff0000LL,"-fwritable-strings","Attempt to support writable-strings K&R style C");
	create_implies_item(O_fwritable_strings, 279, "-fwritable-strings");
	create_option_info(280,0x6LL,0xf00000LL,"-fwrapv","for options compatibility only, ignored by Open64");
	create_implies_item(O_fwrapv, 280, "-fwrapv");
	create_option_info(281,0xfffffffLL,0LL,"-fweak",NULL);
	create_option_info(282,0x6LL,0LL,"-fvolatile-static",NULL);
	create_option_info(283,0x6LL,0LL,"-fvolatile-global","Consider all mem refs to global data to be volatile");
	create_option_info(284,0x6LL,0LL,"-fvolatile","Consider all mem refs through pointers as volatile");
	create_option_info(285,0x6LL,0xf00000LL,"-fvisibility=hidden","Set the default ELF image symbol visibility to be hidden, for options compatibility only, ignored by Open64");
	create_implies_item(O_fvisibilityQhidden, 285, "-fvisibility=hidden");
	create_option_info(286,0x6LL,0xf00000LL,"-fvisibility=default","Make every ELF image symbol public, for options compatibility only, ignored by Open64");
	create_implies_item(O_fvisibilityQdefault, 286, "-fvisibility=default");
	create_option_info(287,0x4LL,0xf00000LL,"-fvisibility-inlines-hidden","for options compatibility only, ignored by Open64");
	create_implies_item(O_fvisibility_inlines_hidden, 287, "-fvisibility-inlines-hidden");
	create_option_info(288,0x4LL,0xff0000LL,"-fverify-tree","Run verification routine before tree-to-whirl conversion");
	create_implies_item(O_fverify_tree, 288, "-fverify-tree");
	create_option_info(289,0x6LL,0LL,"-fverbose-asm",NULL);
	create_option_info(290,0xfffffffLL,0xf00000LL,"-fvar-tracking","Run variable tracking pass, for options compatibility only, ignored by Open64");
	create_implies_item(O_fvar_tracking, 290, "-fvar-tracking");
	create_option_info(291,0x4LL,0xf00000LL,"-fuse-cxa-atexit","Register static destructors with __cxa_atexit instead of atexit");
	create_implies_item(O_fuse_cxa_atexit, 291, "-fuse-cxa-atexit");
	create_option_info(292,0xfffffffLL,0LL,"-funwind-tables",NULL);
	create_implies_item(O_funwind_tables, 773, "-TENV:frame_pointer=on");
	create_implies_item(O_funwind_tables, 846, "-CG:emit_unwind_info=on");
	create_option_info(293,0x6LL,0xff0000LL,"-funsigned-char","Make 'char' be unsigned by default");
	create_implies_item(O_funsigned_char, 840, "-D__CHAR_UNSIGNED__");
	create_implies_item(O_funsigned_char, 293, "-funsigned-char");
	create_option_info(294,0x6LL,0xff0000LL,"-funsigned-bitfields","Make bitfields be unsigned by default");
	create_implies_item(O_funsigned_bitfields, 294, "-funsigned-bitfields");
	create_option_info(295,0x6LL,0xff0000LL,"-funsafe-math-optimizations","Improve FP speed by violating ANSI & IEEE rules");
	create_implies_item(O_funsafe_math_optimizations, 386, "-fno-math-errno");
	create_implies_item(O_funsafe_math_optimizations, 789, "-OPT:funsafe_math_optimizations=ON");
	create_option_info(296,0x6LL,0xff0000LL,"-funroll-loops","unroll-loops");
	create_implies_item(O_funroll_loops, 296, "-funroll-loops");
	create_option_info(297,0x6LL,0xff0000LL,"-funroll-all-loops","Peform loop onrolling for all loops");
	create_implies_item(O_funroll_all_loops, 297, "-funroll-all-loops");
	create_option_info(298,0x18LL,0xf0000LL,"-funderscoring","Append underscores to symbols");
	create_implies_item(O_funderscoring, 298, "-funderscoring");
	create_option_info(299,0x18LL,0xff0LL,"-fullwarn","give more warnings, especially about missing prototypes");
	create_implies_item(O_fullwarn, 5, "-m2");
	create_option_info(300,0xfffffffLL,0LL,"-ftree-vrp","Perform Value Range Propagation on trees");
	create_option_info(301,0xfffffffLL,0LL,"-ftree-vectorize","Perform 'tree' specific vectorization; for options compatibility only, ignored by Open64");
	create_option_info(302,0x6LL,0xff0000LL,"-ftree-ter",NULL);
	create_implies_item(O_ftree_ter, 302, "-ftree-ter");
	create_option_info(303,0x6LL,0xff0000LL,"-ftraditional",NULL);
	create_implies_item(O_ftraditional, 303, "-ftraditional");
	create_option_info(304,0x10LL,0LL,"-ftpp",NULL);
	create_option_info(305,0x6LL,0xf00000LL,"-ftls-model=","Thread-Local Storage model. \n\t\tShould be one of `global-dynamic', `local-dynamic', `initial-exec' or `local-exec'.\n\t\tThe default without -fpic is `local-exec'; with -fpic the default is `global-dynamic`.");
	create_implies_item(O_ftls_modelQ, 305, "-ftls-model=%s");
	create_option_info(306,0x6LL,0xff0000LL,"-fthread-jumps","Perform jump threading optimisations");
	create_implies_item(O_fthread_jumps, 306, "-fthread-jumps");
	create_option_info(307,0xfffffffLL,0x100000000LL,"-ftest-coverage","turn on test coverage");
	create_implies_item(O_ftest_coverage, 846, "-CG:test_coverage=true");
	create_option_info(308,0x4LL,0xff0000LL,"-ftemplate-depth-","Set maximum instantiation depth for template classes");
	create_implies_item(O_ftemplate_depth___, 308, "-ftemplate-depth-%d");
	create_option_info(309,0x6LL,0xff0000LL,"-fstrict-aliasing","Assume strictest aliasing rules");
	create_implies_item(O_fstrict_aliasing, 789, "-OPT:alias=typed");
	create_implies_item(O_fstrict_aliasing, 309, "-fstrict-aliasing");
	create_option_info(310,0x6LL,0xff0000LL,"-fstrength-reduce","Perform strength reduction optimisations");
	create_implies_item(O_fstrength_reduce, 310, "-fstrength-reduce");
	create_option_info(311,0x6LL,0LL,"-fstack-check",NULL);
	create_option_info(312,0xfffffffLL,0LL,"-fssa-dce",NULL);
	create_option_info(313,0xfffffffLL,0LL,"-fssa-ccp",NULL);
	create_option_info(314,0xfffffffLL,0LL,"-fssa",NULL);
	create_option_info(315,0x6LL,0xff0000LL,"-fsigned-char","Make 'char' be signed by default");
	create_implies_item(O_fsigned_char, 315, "-fsigned-char");
	create_option_info(316,0x6LL,0xff0000LL,"-fsigned-bitfields","Make bitfields be signed by default");
	create_implies_item(O_fsigned_bitfields, 316, "-fsigned-bitfields");
	create_option_info(317,0x6LL,0xff0000LL,"-fshow-column","Show column numbers in diagnostics when available");
	create_implies_item(O_fshow_column, 317, "-fshow-column");
	create_option_info(318,0x6LL,0xff0000LL,"-fshort-wchar","Use short unsigned int for wchar_t instead of the default underlying type for the target.");
	create_implies_item(O_fshort_wchar, 318, "-fshort-wchar");
	create_option_info(319,0x6LL,0LL,"-fshort-enums","Use the smallest fitting integer to hold enums");
	create_option_info(320,0x6LL,0LL,"-fshort-double","Use the same size for double as for float");
	create_option_info(321,0x6LL,0LL,"-fshared-data","Mark data as shared rather than private");
	create_option_info(322,0x18LL,0xf0000LL,"-fsecond-underscore","Append a second underscore to symbols that already contain an underscore");
	create_implies_item(O_fsecond_underscore, 322, "-fsecond-underscore");
	create_option_info(323,0x6LL,0xff0000LL,"-fschedule-insns2",NULL);
	create_implies_item(O_fschedule_insns2, 323, "-fschedule-insns2");
	create_option_info(324,0x6LL,0xff0000LL,"-fschedule-insns",NULL);
	create_implies_item(O_fschedule_insns, 324, "-fschedule-insns");
	create_option_info(325,0x4LL,0xf00000LL,"-frtti","Generate runtime type information");
	create_implies_item(O_frtti, 325, "-frtti");
	create_option_info(326,0x6LL,0xff0000LL,"-frerun-loop-opt",NULL);
	create_implies_item(O_frerun_loop_opt, 326, "-frerun-loop-opt");
	create_option_info(327,0x6LL,0xff0000LL,"-frerun-cse-after-loop",NULL);
	create_implies_item(O_frerun_cse_after_loop, 327, "-frerun-cse-after-loop");
	create_option_info(328,0x4LL,0xf00000LL,"-frepo","Enable automatic template instantiation at link time, for options compatibility only, ignored by Open64");
	create_implies_item(O_frepo, 328, "-frepo");
	create_option_info(329,0xfffffffLL,0LL,"-frename-registers","for options compatibility only, ignored by Open64");
	create_option_info(330,0x6LL,0xff0000LL,"-fregmove",NULL);
	create_implies_item(O_fregmove, 330, "-fregmove");
	create_option_info(331,0x6LL,0LL,"-freg-struct-return",NULL);
	create_option_info(332,0x10LL,0xf0000LL,"-freeform","sets Fortran 90 free form source statement formatting");
	create_option_info(333,0x6LL,0xff0000LL,"-freduce-all-givs",NULL);
	create_implies_item(O_freduce_all_givs, 333, "-freduce-all-givs");
	create_option_info(334,0x6LL,0xff0000LL,"-frandom-seed=",NULL);
	create_implies_item(O_frandom_seedQ, 334, "-frandom-seed=%s");
	create_option_info(335,0xfffffffLL,0LL,"-frandom-seed","specify random seed (string) for internal random number generator");
	create_implies_item(O_frandom_seed, 334, "-frandom-seed=%s");
	create_option_info(336,0xfffffffLL,0LL,"-framepointer",NULL);
	create_option_info(337,0xfffffffLL,0x100000000LL,"-fprofile-arcs",NULL);
	create_implies_item(O_fprofile_arcs, 789, "-OPT:profile_arcs=true");
	create_option_info(338,0x27LL,0xf00ff0LL,"-fpreprocessed","Tell preprocessor that input has already been preprocessed");
	create_implies_item(O_fpreprocessed, 338, "-fpreprocessed");
	create_option_info(339,0x6LL,0LL,"-fprefix-function-name","Add a prefix to all function names");
	create_option_info(340,0xfffffffLL,0xff0000LL,"-fpie","Generate position independent code, if possible");
	create_implies_item(O_fpie, 773, "-TENV:PIC");
	create_implies_item(O_fpie, 340, "-fpie");
	create_option_info(341,0xfffffffLL,0xff0000LL,"-fpic","Generate position independent code, if possible");
	create_implies_item(O_fpic, 773, "-TENV:PIC");
	create_implies_item(O_fpic, 341, "-fpic");
	create_option_info(342,0x4LL,0xf00000LL,"-fpermissive","Downgrade messages about nonconformant code to warnings");
	create_implies_item(O_fpermissive, 342, "-fpermissive");
	create_option_info(343,0x6LL,0LL,"-fpcc-struct-return",NULL);
	create_option_info(344,0x6LL,0LL,"-fpack-struct","Pack structure members together without holes");
	create_option_info(345,0xfffffffLL,0LL,"-foptimize-sibling-calls",NULL);
	create_option_info(346,0x6LL,0xff0000LL,"-foptimize-register-moves",NULL);
	create_implies_item(O_foptimize_register_moves, 346, "-foptimize-register-moves");
	create_option_info(347,0xfffffffLL,0LL,"-foptimize-register-move",NULL);
	create_option_info(348,0x6LL,0xf00000LL,"-fopenmp",NULL);
	create_implies_item(O_fopenmp, 348, "-fopenmp");
	create_option_info(349,0x8LL,0xf0000LL,"-fonetrip","One trip DO loops");
	create_implies_item(O_fonetrip, 851, "-1");
	create_option_info(350,0x6LL,0xff0000LL,"-fomit-frame-pointer","When possible do not generate stack frames");
	create_implies_item(O_fomit_frame_pointer, 350, "-fomit-frame-pointer");
	create_option_info(351,0x6LL,0xff0000LL,"-fnotraditional",NULL);
	create_implies_item(O_fnotraditional, 351, "-fnotraditional");
	create_option_info(352,0x6LL,0xff0000LL,"-fno-writable-strings",NULL);
	create_implies_item(O_fno_writable_strings, 352, "-fno-writable-strings");
	create_option_info(353,0xfffffffLL,0LL,"-fno-weak",NULL);
	create_option_info(354,0x4LL,0xf00000LL,"-fno-use-cxa-atexit","Register static destructors with atexit instead of __cxa_atexit");
	create_implies_item(O_fno_use_cxa_atexit, 354, "-fno-use-cxa-atexit");
	create_option_info(355,0x6LL,0LL,"-fno-unwind-tables",NULL);
	create_implies_item(O_fno_unwind_tables, 846, "-CG:emit_unwind_info=off");
	create_option_info(356,0x6LL,0xff0000LL,"-fno-unsigned-char",NULL);
	create_implies_item(O_fno_unsigned_char, 356, "-fno-unsigned-char");
	create_option_info(357,0x6LL,0xff0000LL,"-fno-unsigned-bitfields","Make bitfields be signed by default");
	create_implies_item(O_fno_unsigned_bitfields, 357, "-fno-unsigned-bitfields");
	create_option_info(358,0x6LL,0xff0000LL,"-fno-unsafe-math-optimizations","Conform to ANSI & IEEE math rules at the expense of speed");
	create_implies_item(O_fno_unsafe_math_optimizations, 422, "-fmath-errno");
	create_implies_item(O_fno_unsafe_math_optimizations, 789, "-OPT:funsafe_math_optimizations=OFF");
	create_option_info(359,0x18LL,0xf0000LL,"-fno-underscoring","Do not append underscores to symbols");
	create_implies_item(O_fno_underscoring, 359, "-fno-underscoring");
	create_option_info(360,0xfffffffLL,0LL,"-fno-tree-vrp",NULL);
	create_option_info(361,0xfffffffLL,0LL,"-fno-tree-vectorize","Don't perform 'tree' specific vectorization; for options compatibility only, ignored by Open64");
	create_option_info(362,0x6LL,0xff0000LL,"-fno-tree-ter",NULL);
	create_implies_item(O_fno_tree_ter, 362, "-fno-tree-ter");
	create_option_info(363,0x6LL,0xff0000LL,"-fno-traditional",NULL);
	create_implies_item(O_fno_traditional, 363, "-fno-traditional");
	create_option_info(364,0x6LL,0xff0000LL,"-fno-strict-aliasing","Do not assume strict aliasing rules");
	create_implies_item(O_fno_strict_aliasing, 364, "-fno-strict-aliasing");
	create_option_info(365,0x6LL,0xff0000LL,"-fno-strength-reduce",NULL);
	create_implies_item(O_fno_strength_reduce, 365, "-fno-strength-reduce");
	create_option_info(366,0xfffffffLL,0LL,"-fno-ssa-dce",NULL);
	create_option_info(367,0xfffffffLL,0LL,"-fno-ssa-ccp",NULL);
	create_option_info(368,0xfffffffLL,0LL,"-fno-ssa",NULL);
	create_option_info(369,0x6LL,0xff0000LL,"-fno-signed-char","Make 'char' be unsigned by default");
	create_implies_item(O_fno_signed_char, 840, "-D__CHAR_UNSIGNED__");
	create_implies_item(O_fno_signed_char, 369, "-fno-signed-char");
	create_option_info(370,0x6LL,0xff0000LL,"-fno-signed-bitfields","Make bitfields be unsigned by default");
	create_implies_item(O_fno_signed_bitfields, 370, "-fno-signed-bitfields");
	create_option_info(371,0x6LL,0xff0000LL,"-fno-show-column",NULL);
	create_implies_item(O_fno_show_column, 371, "-fno-show-column");
	create_option_info(372,0x18LL,0xf0000LL,"-fno-second-underscore","Do not append a second underscore to symbols that already contain an underscore");
	create_implies_item(O_fno_second_underscore, 372, "-fno-second-underscore");
	create_option_info(373,0x6LL,0xff0000LL,"-fno-schedule-insns2",NULL);
	create_implies_item(O_fno_schedule_insns2, 373, "-fno-schedule-insns2");
	create_option_info(374,0x6LL,0xff0000LL,"-fno-schedule-insns",NULL);
	create_implies_item(O_fno_schedule_insns, 374, "-fno-schedule-insns");
	create_option_info(375,0x4LL,0xf00000LL,"-fno-rtti","Do not generate runtime type information");
	create_implies_item(O_fno_rtti, 375, "-fno-rtti");
	create_option_info(376,0x27LL,0xf00ff0LL,"-fno-preprocessed","Tell preprocessor that input has not already been preprocessed");
	create_implies_item(O_fno_preprocessed, 376, "-fno-preprocessed");
	create_option_info(377,0xfffffffLL,0xff0000LL,"-fno-pie","Do not generate position independent code");
	create_implies_item(O_fno_pie, 377, "-fno-pie");
	create_option_info(378,0xfffffffLL,0xff0000LL,"-fno-pic","Do not generate position independent code");
	create_implies_item(O_fno_pic, 378, "-fno-pic");
	create_option_info(379,0x4LL,0xf00000LL,"-fno-permissive","Keep messages about nonconformant code as errors");
	create_implies_item(O_fno_permissive, 379, "-fno-permissive");
	create_option_info(380,0x6LL,0xff0000LL,"-fno-peephole",NULL);
	create_implies_item(O_fno_peephole, 380, "-fno-peephole");
	create_option_info(381,0xfffffffLL,0LL,"-fno-optimize-sibling-calls",NULL);
	create_option_info(382,0xfffffffLL,0LL,"-fno-optimize-register-move",NULL);
	create_option_info(383,0x6LL,0xf00000LL,"-fno-optimize-regions","Enable optimization of EH regions formation");
	create_implies_item(O_fno_optimize_regions, 383, "-fno-optimize-regions");
	create_option_info(384,0x4LL,0xff0000LL,"-fno-operator-names","Do not treat operator keywords and, bitand, bitor, compl, not, or and xor as keywords.");
	create_implies_item(O_fno_operator_names, 384, "-fno-operator-names");
	create_option_info(385,0x6LL,0xff0000LL,"-fno-omit-frame-pointer",NULL);
	create_implies_item(O_fno_omit_frame_pointer, 385, "-fno-omit-frame-pointer");
	create_option_info(386,0x1eLL,0LL,"-fno-math-errno","Do not set ERRNO after calling math functions that are executed with a single instruction");
	create_implies_item(O_fno_math_errno, 814, "-LANG:math_errno=off");
	create_implies_item(O_fno_math_errno, 386, "-fno-math-errno");
	create_option_info(387,0xfffffffLL,0LL,"-fno-ivopts","Do not perform induction variable optimizations (for options compatibility only, ignored by Open64)");
	create_option_info(388,0x6LL,0xff0000LL,"-fno-inline-functions","Do not automatically integrate simple functions into their callers");
	create_implies_item(O_fno_inline_functions, 388, "-fno-inline-functions");
	create_option_info(389,0x6LL,0xff0000LL,"-fno-inline",NULL);
	create_implies_item(O_fno_inline, 820, "-INLINE:=off");
	create_option_info(390,0x4LL,0xf00000LL,"-fno-implicit-templates","Never emit code for non-inline templates instantiated implicitly");
	create_implies_item(O_fno_implicit_templates, 390, "-fno-implicit-templates");
	create_option_info(391,0x4LL,0xf00000LL,"-fno-implicit-inline-templates","Never emit code for inline templates instantiated implicitly");
	create_implies_item(O_fno_implicit_inline_templates, 391, "-fno-implicit-inline-templates");
	create_option_info(392,0x4LL,0xf00000LL,"-fno-implement-inlines","Do not emit out-of-line copies of inline functions controlled by `#pragma implementation', for options compatibility only, ignored by Open64");
	create_implies_item(O_fno_implement_inlines, 392, "-fno-implement-inlines");
	create_option_info(393,0x6LL,0xf00000LL,"-fno-ident","Ignore #ident directives");
	create_implies_item(O_fno_ident, 393, "-fno-ident");
	create_option_info(394,0x6LL,0xff0000LL,"-fno-hosted",NULL);
	create_implies_item(O_fno_hosted, 394, "-fno-hosted");
	create_option_info(395,0x6LL,0xf00ff0LL,"-fno-handle-exceptions",NULL);
	create_implies_item(O_fno_handle_exceptions, 395, "-fno-handle-exceptions");
	create_option_info(396,0x6LL,0LL,"-fno-gnu-linker",NULL);
	create_option_info(397,0x6LL,0xff0000LL,"-fno-gnu-keywords","Do not recognize 'typeof' as a keyword");
	create_implies_item(O_fno_gnu_keywords, 397, "-fno-gnu-keywords");
	create_option_info(398,0x6LL,0xf00ff0LL,"-fno-gnu-exceptions",NULL);
	create_implies_item(O_fno_gnu_exceptions, 405, "-fno-exceptions");
	create_option_info(399,0x6LL,0xff0000LL,"-fno-gcse","Disable global common subexpression elimination, for options compatibility only, ignored by Open64");
	create_implies_item(O_fno_gcse, 399, "-fno-gcse");
	create_option_info(400,0x6LL,0xff0000LL,"-fno-function-cse",NULL);
	create_implies_item(O_fno_function_cse, 400, "-fno-function-cse");
	create_option_info(401,0x6LL,0xff0000LL,"-fno-freestanding",NULL);
	create_implies_item(O_fno_freestanding, 401, "-fno-freestanding");
	create_option_info(402,0x4LL,0xf00000LL,"-fno-for-scope","Variables declared in a for-init loop extend to the enclosing scope");
	create_implies_item(O_fno_for_scope, 402, "-fno-for-scope");
	create_option_info(403,0xfffffffLL,0x1000f0000ff0000LL,"-fno-fast-stdlib","Do not use faster versions of standard library functions");
	create_implies_item(O_fno_fast_stdlib, 789, "-OPT:fast_stdlib=off");
	create_option_info(404,0x1eLL,0xff0000LL,"-fno-fast-math","Conform to ANSI & IEEE math rules at the expense of speed");
	create_implies_item(O_fno_fast_math, 422, "-fmath-errno");
	create_implies_item(O_fno_fast_math, 789, "-OPT:ffast_math=OFF");
	create_option_info(405,0x6LL,0xf00ff0LL,"-fno-exceptions","Disable exception handling");
	create_implies_item(O_fno_exceptions, 405, "-fno-exceptions");
	create_option_info(406,0x6LL,0x1000000LL,"-fno-emit-exceptions","Do not emit code to handle exceptions");
	create_implies_item(O_fno_emit_exceptions, 406, "-fno-emit-exceptions");
	create_option_info(407,0xfffffffLL,0LL,"-fno-emit-class-debug-always",NULL);
	create_option_info(408,0x4LL,0xf00000LL,"-fno-elide-constructors","Do not perform an optimization that can avoid calling the copy constructor");
	create_implies_item(O_fno_elide_constructors, 408, "-fno-elide-constructors");
	create_option_info(409,0x18LL,0xf0000LL,"-fno-directives","Ignore Fortran compiler directives inside comments");
	create_implies_item(O_fno_directives, 1, "-xall");
	create_option_info(410,0x6LL,0xff0000LL,"-fno-defer-pop",NULL);
	create_implies_item(O_fno_defer_pop, 410, "-fno-defer-pop");
	create_option_info(411,0x6LL,0xff0000LL,"-fno-default-inline",NULL);
	create_implies_item(O_fno_default_inline, 411, "-fno-default-inline");
	create_option_info(412,0x6LL,0LL,"-fno-cxx-openmp","Do not handle OpenMP under C++");
	create_implies_item(O_fno_cxx_openmp, 814, "-LANG:cxx_openmp=off");
	create_implies_item(O_fno_cxx_openmp, 412, "-fno-cxx-openmp");
	create_option_info(413,0x6LL,0xf00000LL,"-fno-common","use strict ref/def initialization model");
	create_implies_item(O_fno_common, 413, "-fno-common");
	create_option_info(414,0x4LL,0xf00000LL,"-fno-check-new","Do not check result of operator new for NULL");
	create_implies_item(O_fno_check_new, 414, "-fno-check-new");
	create_option_info(415,0x6LL,0LL,"-fno-builtin","Do not recognise any built in functions");
	create_implies_item(O_fno_builtin, 415, "-fno-builtin");
	create_option_info(416,0x6LL,0xff0000LL,"-fno-asm","Do not recognise the 'asm' keyword");
	create_implies_item(O_fno_asm, 416, "-fno-asm");
	create_option_info(417,0xfffffffLL,0xff0000LL,"-fno-PIE","Do not generate position independent code");
	create_implies_item(O_fno_PIE, 417, "-fno-PIE");
	create_option_info(418,0xfffffffLL,0xff0000LL,"-fno-PIC","Do not generate position independent code");
	create_implies_item(O_fno_PIC, 418, "-fno-PIC");
	create_option_info(419,0x6LL,0xff0000LL,"-fms-extensions","Accept broken MFC extensions without warning");
	create_implies_item(O_fms_extensions, 419, "-fms-extensions");
	create_option_info(420,0x6LL,0xff0000LL,"-fmove-all-movables",NULL);
	create_implies_item(O_fmove_all_movables, 420, "-fmove-all-movables");
	create_option_info(421,0x4LL,0xff0000LL,"-fmessage-length=","Try to format error messages so that they fit on lines of about n characters.");
	create_implies_item(O_fmessage_lengthQ__, 421, "-fmessage-length=%d");
	create_option_info(422,0x1eLL,0LL,"-fmath-errno",NULL);
	create_implies_item(O_fmath_errno, 422, "-fmath-errno");
	create_option_info(423,0x18LL,0x100000000LL,"-flist",NULL);
	create_implies_item(O_flist, 834, "-FLIST:=ON");
	create_implies_item(O_flist, 782, "-PHASE:flist");
	create_option_info(424,0x6LL,0LL,"-fleading-underscore",NULL);
	create_option_info(425,0x6LL,0xff0000LL,"-flang-isoc9x",NULL);
	create_implies_item(O_flang_isoc9x, 425, "-flang-isoc9x");
	create_option_info(426,0x6LL,0xff0000LL,"-fkeep-inline-functions","Generate code for funcs even if they are fully inlined");
	create_implies_item(O_fkeep_inline_functions, 426, "-fkeep-inline-functions");
	create_option_info(427,0x10LL,0xf0000LL,"-fixedform","sets Fortran 90 fixed form source statement formatting");
	create_option_info(428,0xfffffffLL,0LL,"-fivopts","Perform induction variable optimizations (for options compatibility only, performed by default by Open64)");
	create_option_info(429,0xfffffffLL,0LL,"-finstrument-functions",NULL);
	create_implies_item(O_finstrument_functions, 789, "-OPT:cyg_instr=4");
	create_option_info(430,0x6LL,0xff0000LL,"-finline-limit=",NULL);
	create_implies_item(O_finline_limitQ__, 430, "-finline-limit=%d");
	create_option_info(431,0x6LL,0xff0000LL,"-finline-functions","Automatically integrate simple functions into their callers");
	create_implies_item(O_finline_functions, 431, "-finline-functions");
	create_option_info(432,0x6LL,0xff0000LL,"-finline",NULL);
	create_implies_item(O_finline, 821, "-INLINE");
	create_option_info(433,0x6LL,0x100000000LL,"-finhibit-size-directive","Do not generate .size directives");
	create_implies_item(O_finhibit_size_directive, 846, "-CG:inhibit_size_directive=1:emit_asm_dwarf=0");
	create_option_info(434,0x4LL,0xf00000LL,"-fimplicit-templates","Emit code for non-inline templates instantiated implicitly");
	create_implies_item(O_fimplicit_templates, 434, "-fimplicit-templates");
	create_option_info(435,0x4LL,0xf00000LL,"-fimplicit-inline-templates","Emit code for inline templates instantiated implicitly");
	create_implies_item(O_fimplicit_inline_templates, 435, "-fimplicit-inline-templates");
	create_option_info(436,0x6LL,0xf00000LL,"-fident","for options compatibility only, ignored by Open64");
	create_implies_item(O_fident, 436, "-fident");
	create_option_info(437,0x6LL,0xff0000LL,"-fhosted",NULL);
	create_implies_item(O_fhosted, 437, "-fhosted");
	create_option_info(438,0x6LL,0xf00ff0LL,"-fhandle-exceptions",NULL);
	create_implies_item(O_fhandle_exceptions, 438, "-fhandle-exceptions");
	create_option_info(439,0x6LL,0xff0000LL,"-fgnu-keywords","Recognize 'typeof' as a keyword");
	create_implies_item(O_fgnu_keywords, 439, "-fgnu-keywords");
	create_option_info(440,0x6LL,0xf00ff0LL,"-fgnu-exceptions",NULL);
	create_implies_item(O_fgnu_exceptions, 457, "-fexceptions");
	create_option_info(441,0x6LL,0xff0000LL,"-fgcse",NULL);
	create_implies_item(O_fgcse, 441, "-fgcse");
	create_option_info(442,0x6LL,0xff0000LL,"-ffunction-sections",NULL);
	create_implies_item(O_ffunction_sections, 442, "-ffunction-sections");
	create_option_info(443,0x6LL,0xff0000LL,"-ffreestanding",NULL);
	create_implies_item(O_ffreestanding, 443, "-ffreestanding");
	create_option_info(444,0x18LL,0xf0000LL,"-ffortran2003","Fortran 2003 behavior for BOZ constants in intrinsics");
	create_implies_item(O_ffortran2003, 444, "-ffortran2003");
	create_option_info(445,0x18LL,0xf0000LL,"-ffortran-bounds-check","check bounds");
	create_implies_item(O_ffortran_bounds_check, 839, "-DEBUG:subscript_check");
	create_option_info(446,0x6LL,0xff0000LL,"-fforce-mem",NULL);
	create_implies_item(O_fforce_mem, 446, "-fforce-mem");
	create_option_info(447,0x6LL,0xff0000LL,"-fforce-addr",NULL);
	create_implies_item(O_fforce_addr, 447, "-fforce-addr");
	create_option_info(448,0x4LL,0xf00000LL,"-ffor-scope","Variables declared in a for-init loop are constrained to that scope");
	create_implies_item(O_ffor_scope, 448, "-ffor-scope");
	create_option_info(449,0x1eLL,0x100000000LL,"-ffloat-store","Do not store floats in registers");
	create_implies_item(O_ffloat_store, 846, "-CG:x87_store=1:min_spill_loc_size=1");
	create_option_info(450,0x6LL,0LL,"-ffixed-",NULL);
	create_implies_item(O_ffixed_, 773, "-TENV:registers_not_allocatable=%s");
	create_option_info(451,0xfffffffLL,0x1000f0000ff0000LL,"-ffast-stdlib","Use faster versions of some standard library functions, when available");
	create_implies_item(O_ffast_stdlib, 789, "-OPT:fast_stdlib=on");
	create_option_info(452,0x1eLL,0x100ff0000LL,"-ffast-math","Improve FP speed by violating ANSI & IEEE rules");
	create_implies_item(O_ffast_math, 386, "-fno-math-errno");
	create_implies_item(O_ffast_math, 789, "-OPT:ffast_math=ON");
	create_option_info(453,0x18LL,0LL,"-ff90","Allow Fortran 90 constructs");
	create_option_info(454,0x18LL,0LL,"-ff77","Use idiomatic UNIX FORTRAN 77");
	create_option_info(455,0xfffffffLL,0xf0000LL,"-ff2c-abi","Tell Fortran compiler to use the f2c ABI for symbols in file");
	create_implies_item(O_ff2c_abi, 455, "-ff2c-abi %s");
	create_option_info(456,0x6LL,0xff0000LL,"-fexpensive-optimizations",NULL);
	create_implies_item(O_fexpensive_optimizations, 456, "-fexpensive-optimizations");
	create_option_info(457,0x6LL,0xf00ff0LL,"-fexceptions","Enable exception handling");
	create_implies_item(O_fexceptions, 773, "-TENV:frame_pointer=on");
	create_implies_item(O_fexceptions, 457, "-fexceptions");
	create_option_info(458,0xfffffffLL,0LL,"-femit-class-debug-always",NULL);
	create_option_info(459,0x4LL,0xf00000LL,"-felide-constructors","for options compatibility only, ignored by Open64");
	create_implies_item(O_felide_constructors, 459, "-felide-constructors");
	create_option_info(460,0xfffffffLL,0LL,"-feedback",NULL);
	create_option_info(461,0x1eLL,0LL,"-fe","stop after the front end is run");
	create_option_info(462,0xfffffffLL,0xff0LL,"-fdollars-in-identifiers","Accept `$' in identifiers");
	create_implies_item(O_fdollars_in_identifiers, 462, "-fdollars-in-identifiers");
	create_option_info(463,0x18LL,0xf0000LL,"-fdirectives","Recognize Fortran compiler directives inside comments");
	create_option_info(464,0x4LL,0xff0000LL,"-fdiagnostics-show-location=once","Instructs the diagnostic messages reporter to emit source location information once");
	create_implies_item(O_fdiagnostics_show_locationQonce, 464, "-fdiagnostics-show-location=once");
	create_option_info(465,0x4LL,0xff0000LL,"-fdiagnostics-show-location=every-line","Instructs the diagnostic messages reporter to emit source location information on every line");
	create_implies_item(O_fdiagnostics_show_locationQevery_line, 465, "-fdiagnostics-show-location=every-line");
	create_option_info(466,0x6LL,0xff0000LL,"-fdelayed-branch",NULL);
	create_implies_item(O_fdelayed_branch, 466, "-fdelayed-branch");
	create_option_info(467,0xfffffffLL,0xf0000LL,"-fdecorate","File tells Fortran compiler how to transform ids into linker symbols");
	create_implies_item(O_fdecorate, 467, "-fdecorate %s");
	create_option_info(468,0x6LL,0xff0000LL,"-fdata-sections",NULL);
	create_implies_item(O_fdata_sections, 468, "-fdata-sections");
	create_option_info(469,0x6LL,0LL,"-fcxx-openmp","Do OpenMP processing under C++");
	create_implies_item(O_fcxx_openmp, 814, "-LANG:cxx_openmp=on");
	create_implies_item(O_fcxx_openmp, 469, "-fcxx-openmp");
	create_option_info(470,0x6LL,0xff0000LL,"-fcse-skip-blocks",NULL);
	create_implies_item(O_fcse_skip_blocks, 470, "-fcse-skip-blocks");
	create_option_info(471,0x6LL,0xff0000LL,"-fcse-follow-jumps",NULL);
	create_implies_item(O_fcse_follow_jumps, 471, "-fcse-follow-jumps");
	create_option_info(472,0x4LL,0xf00000LL,"-fconserve-space","Put uninitialized or runtime-initialized global variables into the common segment, for options compatibility only, ignored by Open64");
	create_implies_item(O_fconserve_space, 472, "-fconserve-space");
	create_option_info(473,0x6LL,0xff0000LL,"-fcond-mismatch",NULL);
	create_implies_item(O_fcond_mismatch, 473, "-fcond-mismatch");
	create_option_info(474,0x18LL,0LL,"-fcoco=","use coco Fortran preprocessor");
	create_option_info(475,0x18LL,0LL,"-fcoco","use coco Fortran preprocessor");
	create_option_info(476,0x4LL,0xf00000LL,"-fcheck-new","Check result of operator new for NULL");
	create_implies_item(O_fcheck_new, 476, "-fcheck-new");
	create_option_info(477,0x6LL,0LL,"-fcheck-memory-usage",NULL);
	create_option_info(478,0x6LL,0xff0000LL,"-fcaller-saves",NULL);
	create_implies_item(O_fcaller_saves, 478, "-fcaller-saves");
	create_option_info(479,0x6LL,0LL,"-fcall-used-",NULL);
	create_option_info(480,0x6LL,0LL,"-fcall-saved-",NULL);
	create_option_info(481,0xfffffffLL,0LL,"-fbuse",NULL);
	create_option_info(482,0x6LL,0LL,"-fbuiltin",NULL);
	create_implies_item(O_fbuiltin, 482, "-fbuiltin");
	create_option_info(483,0x6LL,0xff0000LL,"-fbranch-probabilities",NULL);
	create_implies_item(O_fbranch_probabilities, 483, "-fbranch-probabilities");
	create_option_info(484,0xfffffffLL,0LL,"-fbgen",NULL);
	create_option_info(485,0xfffffffLL,0LL,"-fbexe",NULL);
	create_option_info(486,0xfffffffLL,0LL,"-fb_xdir",NULL);
	create_option_info(487,0xfffffffLL,0LL,"-fb_type=",NULL);
	create_option_info(488,0xfffffffLL,0LL,"-fb_phase=",NULL);
	create_option_info(489,0xfffffffLL,0LL,"-fb_opt",NULL);
	create_option_info(490,0xfffffffLL,0LL,"-fb_create",NULL);
	create_option_info(491,0xfffffffLL,0LL,"-fb_cdir",NULL);
	create_option_info(496,0xfffffffLL,0LL,"-fb",NULL);
	create_option_info(497,0x6LL,0xff0000LL,"-fasm",NULL);
	create_implies_item(O_fasm, 497, "-fasm");
	create_option_info(498,0x6LL,0LL,"-fargument-noalias-global",NULL);
	create_option_info(499,0x6LL,0LL,"-fargument-noalias",NULL);
	create_option_info(500,0x6LL,0LL,"-fargument-alias",NULL);
	create_option_info(501,0x6LL,0xff0000LL,"-falign-loops=","Align loops to a power-of-two boundary, skipping up to n bytes, for options compatibility only, ignored by Open64");
	create_implies_item(O_falign_loopsQ__, 501, "-falign-loops=%d");
	create_option_info(502,0x6LL,0xff0000LL,"-falign-loops","Align loops to a machine-dependent default value, for options compatibility only, ignored by Open64");
	create_implies_item(O_falign_loops, 502, "-falign-loops");
	create_option_info(503,0x6LL,0xff0000LL,"-falign-labels","Align all branch targets to a machine-dependent default value, for options compatibility only, ignored by Open64");
	create_implies_item(O_falign_labels, 503, "-falign-labels");
	create_option_info(504,0x6LL,0xff0000LL,"-falign-jumps=","Align branch targets to a power-of-two boundary, for options compatibility only, ignored by Open64");
	create_implies_item(O_falign_jumpsQ__, 504, "-falign-jumps=%d");
	create_option_info(505,0x6LL,0xff0000LL,"-falign-functions=","Align the start of functions to the next power-of-two greater than n, for options compatibility only, ignored by Open64");
	create_implies_item(O_falign_functionsQ__, 505, "-falign-functions=%d");
	create_option_info(506,0x6LL,0xff0000LL,"-falign-functions","Align the start of functions to the machine-dependent default value, for options compatibility only, ignored by Open64");
	create_implies_item(O_falign_functions, 506, "-falign-functions");
	create_option_info(507,0x4LL,0xff0000LL,"-fabi-version=",NULL);
	create_implies_item(O_fabi_versionQ__, 507, "-fabi-version=%d");
	create_option_info(508,0xfffffffLL,0xff0000LL,"-fPIE","Generate position independent code, if possible");
	create_implies_item(O_fPIE, 773, "-TENV:PIC");
	create_implies_item(O_fPIE, 508, "-fPIE");
	create_option_info(509,0xfffffffLL,0xff0000LL,"-fPIC","Generate position independent code, if possible");
	create_implies_item(O_fPIC, 773, "-TENV:PIC");
	create_implies_item(O_fPIC, 509, "-fPIC");
	create_option_info(510,0xfffffffLL,0x10000000000LL,"-external-gcc","Do not use internal gcc to preprocess and link");
	create_implies_item(O_external_gcc, 510, "-external-gcc");
	create_option_info(511,0x18LL,0xf0000LL,"-extend_source",NULL);
	create_implies_item(O_extend_source, 3, "-scan=132");
	create_implies_item(O_extend_source, 511, "-extend_source");
	create_option_info(513,0x18LL,0xf0000LL,"-expand_include",NULL);
	create_implies_item(O_expand_include, 513, "-expand_include");
	create_option_info(514,0x1eLL,0x1000f0000000000LL,"-e",NULL);
	create_option_info(515,0x6LL,0LL,"-dz",NULL);
	create_implies_item(O_dz, 515, "-dz");
	create_option_info(516,0x6LL,0LL,"-dx",NULL);
	create_implies_item(O_dx, 516, "-dx");
	create_option_info(517,0x6LL,0LL,"-dw",NULL);
	create_implies_item(O_dw, 517, "-dw");
	create_option_info(518,0x6LL,0LL,"-dv",NULL);
	create_implies_item(O_dv, 518, "-dv");
	create_option_info(519,0xfffffffLL,0LL,"-dumpversion","Show the version of the compiler being used, and nothing else");
	create_option_info(520,0xfffffffLL,0xff0000LL,"-dumpspecs",NULL);
	create_implies_item(O_dumpspecs, 520, "-dumpspecs");
	create_option_info(521,0xfffffffLL,0LL,"-dumpmachine","Print the compilers target machine");
	create_option_info(522,0x8LL,0xf0000LL,"-dump_input",NULL);
	create_implies_item(O_dump_input, 522, "-dump_input");
	create_option_info(523,0xfffffffLL,0LL,"-dummy",NULL);
	create_option_info(524,0x6LL,0LL,"-dt",NULL);
	create_implies_item(O_dt, 524, "-dt");
	create_option_info(525,0x6LL,0LL,"-ds",NULL);
	create_implies_item(O_ds, 525, "-ds");
	create_option_info(526,0x6LL,0LL,"-dr",NULL);
	create_implies_item(O_dr, 526, "-dr");
	create_option_info(527,0x6LL,0LL,"-dp",NULL);
	create_implies_item(O_dp, 527, "-dp");
	create_option_info(528,0x6LL,0LL,"-do",NULL);
	create_implies_item(O_do, 528, "-do");
	create_option_info(529,0x6LL,0LL,"-dm",NULL);
	create_implies_item(O_dm, 529, "-dm");
	create_option_info(530,0x6LL,0LL,"-dl",NULL);
	create_implies_item(O_dl, 530, "-dl");
	create_option_info(531,0x6LL,0LL,"-dk",NULL);
	create_implies_item(O_dk, 531, "-dk");
	create_option_info(532,0x6LL,0LL,"-dj",NULL);
	create_implies_item(O_dj, 532, "-dj");
	create_option_info(533,0xfffffffLL,0LL,"-directives-only","ignored by open64");
	create_option_info(534,0x6LL,0LL,"-di",NULL);
	create_implies_item(O_di, 534, "-di");
	create_option_info(535,0x6LL,0LL,"-dh",NULL);
	create_implies_item(O_dh, 535, "-dh");
	create_option_info(536,0x6LL,0LL,"-dg",NULL);
	create_implies_item(O_dg, 536, "-dg");
	create_option_info(537,0x6LL,0LL,"-df",NULL);
	create_implies_item(O_df, 537, "-df");
	create_option_info(538,0x4LL,0x1000f0000000000LL,"-demangle",NULL);
	create_implies_item(O_demangle, 538, "-demangle");
	create_option_info(539,0x10LL,0xf0000LL,"-default64","Cray compatibility mode for F90");
	create_implies_item(O_default64, 539, "-default64");
	create_option_info(540,0x6LL,0LL,"-de",NULL);
	create_implies_item(O_de, 540, "-de");
	create_option_info(541,0x6LL,0LL,"-dd",NULL);
	create_implies_item(O_dd, 541, "-dd");
	create_option_info(542,0x6LL,0LL,"-dc",NULL);
	create_implies_item(O_dc, 542, "-dc");
	create_option_info(543,0x6LL,0LL,"-db",NULL);
	create_implies_item(O_db, 543, "-db");
	create_option_info(544,0x6LL,0LL,"-da",NULL);
	create_implies_item(O_da, 544, "-da");
	create_option_info(545,0x18LL,0xf0000LL,"-d_lines",NULL);
	create_implies_item(O_d_lines, 545, "-d_lines");
	create_option_info(546,0x6LL,0LL,"-dX",NULL);
	create_implies_item(O_dX, 546, "-dX");
	create_option_info(547,0x6LL,0LL,"-dS",NULL);
	create_implies_item(O_dS, 547, "-dS");
	create_option_info(548,0x6LL,0LL,"-dR",NULL);
	create_implies_item(O_dR, 548, "-dR");
	create_option_info(549,0x6LL,0LL,"-dP",NULL);
	create_implies_item(O_dP, 549, "-dP");
	create_option_info(550,0x27LL,0xff0LL,"-dN","Generate list of all macro names defined");
	create_implies_item(O_dN, 550, "-dN");
	create_option_info(551,0x27LL,0xff0LL,"-dM","Generate list of directives for all macros");
	create_implies_item(O_dM, 551, "-dM");
	create_option_info(552,0x6LL,0LL,"-dL",NULL);
	create_implies_item(O_dL, 552, "-dL");
	create_option_info(553,0x27LL,0xff0LL,"-dI","Output #include directives in addition to preprocessor results");
	create_implies_item(O_dI, 553, "-dI");
	create_option_info(554,0x6LL,0LL,"-dG",NULL);
	create_implies_item(O_dG, 554, "-dG");
	create_option_info(555,0x6LL,0LL,"-dF",NULL);
	create_implies_item(O_dF, 555, "-dF");
	create_option_info(556,0x6LL,0LL,"-dE",NULL);
	create_implies_item(O_dE, 556, "-dE");
	create_option_info(557,0x27LL,0xff0LL,"-dD","Generate list of non-predefined macro directives");
	create_implies_item(O_dD, 557, "-dD");
	create_option_info(558,0x6LL,0LL,"-dC",NULL);
	create_implies_item(O_dC, 558, "-dC");
	create_option_info(559,0x6LL,0LL,"-dB",NULL);
	create_implies_item(O_dB, 559, "-dB");
	create_option_info(560,0x6LL,0LL,"-dA",NULL);
	create_implies_item(O_dA, 560, "-dA");
	create_option_info(561,0x18LL,0xf0000LL,"-d8","use double=8 and dcomplex=16");
	create_implies_item(O_d8, 561, "-d8");
	create_option_info(563,0x8LL,0LL,"-craylibs",NULL);
	create_option_info(564,0x18LL,0LL,"-cray_directives",NULL);
	create_implies_item(O_cray_directives, 564, "-cray_directives");
	create_option_info(565,0xfffffffLL,0LL,"-cpp",NULL);
	create_option_info(566,0xfffffffLL,0LL,"-cord",NULL);
	create_option_info(567,0x10LL,0xf0000LL,"-convert","Convert files by swapping bytes during I/O");
	create_implies_item(O_convert, 567, "-convert %s");
	create_option_info(568,0xfffffffLL,0LL,"-compat-gcc",NULL);
	create_option_info(569,0x10LL,0xf0000LL,"-col80","sets the source statement length to 80 columns");
	create_implies_item(O_col80, 3, "-scan=80");
	create_implies_item(O_col80, 569, "-col80");
	create_option_info(570,0x18LL,0xf0000LL,"-col72","sets the source statement length to 72 columns");
	create_implies_item(O_col72, 3, "-scan=72");
	create_implies_item(O_col72, 570, "-col72");
	create_option_info(571,0x18LL,0xf0000LL,"-col120","sets the source statement length to 120 columns");
	create_implies_item(O_col120, 3, "-scan=120");
	create_implies_item(O_col120, 571, "-col120");
	create_option_info(572,0x2LL,0x100000000LL,"-clist",NULL);
	create_implies_item(O_clist, 841, "-CLIST:=ON");
	create_implies_item(O_clist, 782, "-PHASE:clist");
	create_option_info(573,0x10LL,0xff0000LL,"-cif",NULL);
	create_implies_item(O_cif, 573, "-cif");
	create_option_info(574,0x18LL,0xf7000LL,"-chunk=","Set the MP chunksize");
	create_implies_item(O_chunkQ__, 574, "-chunk=%d");
	create_option_info(575,0x8LL,0xf0000LL,"-chararg1",NULL);
	create_implies_item(O_chararg1, 575, "-chararg1");
	create_option_info(576,0x18LL,0LL,"-change_const",NULL);
	create_option_info(577,0xfffffffLL,0LL,"-call_shared","call-shared PIC code");
	create_implies_item(O_call_shared, 111, "-pic2");
	create_implies_item(O_call_shared, 773, "-TENV:PIC");
	create_option_info(578,0xfffffffLL,0LL,"-c","produce a .o and stop");
	create_option_info(579,0x10LL,0xf0000LL,"-byteswapio","Swap bytes during file I/O");
	create_implies_item(O_byteswapio, 579, "-byteswapio");
	create_option_info(580,0x8LL,0xf0000LL,"-bytereclen",NULL);
	create_implies_item(O_bytereclen, 133, "-old_rl");
	create_option_info(581,0x8LL,0xf0000LL,"-backslash","treat backslash as normal character rather than an escape");
	create_implies_item(O_backslash, 581, "-backslash");
	create_option_info(582,0xfffffffLL,0LL,"-b",NULL);
	create_implies_item(O_b, 582, "-b");
	create_option_info(583,0x20LL,0xf00000LL,"-aux-info",NULL);
	create_implies_item(O_aux_info, 583, "-aux-info %s");
	create_option_info(584,0x18LL,0LL,"-automatic",NULL);
	create_option_info(585,0x10LL,0xf0000LL,"-auto_use",NULL);
	create_implies_item(O_auto_use, 585, "-auto_use=%s");
	create_option_info(587,0xfffffffLL,0LL,"-ar","create an archive (instead of a shared object or executable) using ar");
	create_option_info(588,0x1eLL,0x100000000LL,"-apolist",NULL);
	create_implies_item(O_apolist, 809, "-LNO:prompl");
	create_implies_item(O_apolist, 118, "-pfa");
	create_option_info(589,0x1eLL,0x100000000LL,"-apokeep",NULL);
	create_implies_item(O_apokeep, 809, "-LNO:prompl");
	create_implies_item(O_apokeep, 118, "-pfa");
	create_option_info(590,0x1eLL,0x100000000LL,"-apo",NULL);
	create_implies_item(O_apo, 118, "-pfa");
	create_option_info(591,0x2LL,0xff0ff0LL,"-ansi","strict ansi and standard intrinsics only");
	create_implies_item(O_ansi, 840, "-D__STRICT_ANSI__");
	create_implies_item(O_ansi, 23, "-Xansi");
	create_implies_item(O_ansi, 591, "-ansi");
	create_option_info(592,0x1eLL,0x1000f0000000000LL,"-all",NULL);
	create_implies_item(O_all, 854, "--whole-archive");
	create_option_info(593,0xeLL,0x1000f0000LL,"-align8","align data in common blocks to 8-bit boundaries");
	create_implies_item(O_align8, 593, "-align8");
	create_option_info(594,0x1eLL,0x1000f0000LL,"-align64","align data in common blocks to 64-bit boundaries");
	create_implies_item(O_align64, 594, "-align64");
	create_option_info(595,0x1eLL,0x1000f0000LL,"-align32","align data in common blocks to 32-bit boundaries");
	create_implies_item(O_align32, 595, "-align32");
	create_option_info(596,0xeLL,0x1000f0000LL,"-align16","align data in common blocks to 16-bit boundaries");
	create_implies_item(O_align16, 596, "-align16");
	create_option_info(597,0xeLL,0x1000f0000LL,"-align128","align data in common blocks to 128-bit boundaries");
	create_implies_item(O_align128, 597, "-align128");
	create_option_info(598,0xfffffffLL,0x10000000000LL,"-Y","-Y<phase>,<path> uses path to find phase {p=cpp,f=fe,b=be,a=as,l=ld,i=inline,I=include,S=startup,L=libraries}");
	create_implies_item(O_Y, 598, "-Y%s");
	create_option_info(599,0x1eLL,0x1000f0000000000LL,"-Xlinker",NULL);
	create_option_info(600,0x6LL,0xff0000LL,"-Wwrite-strings","Mark strings as 'const char *'");
	create_implies_item(O_Wwrite_strings, 600, "-Wwrite-strings");
	create_option_info(601,0x6LL,0xff0000LL,"-Wunused-variable","Warn about local and static variables that are not used");
	create_implies_item(O_Wunused_variable, 601, "-Wunused-variable");
	create_option_info(602,0x6LL,0xff0000LL,"-Wunused-value","Warn about statements whose results are not used");
	create_implies_item(O_Wunused_value, 602, "-Wunused-value");
	create_option_info(603,0x6LL,0xff0000LL,"-Wunused-parameter","Warn about unused function parameters");
	create_implies_item(O_Wunused_parameter, 603, "-Wunused-parameter");
	create_option_info(604,0x7LL,0xff0ff0LL,"-Wunused-macros","Warn about macros defined but not used");
	create_implies_item(O_Wunused_macros, 604, "-Wunused-macros");
	create_option_info(605,0x6LL,0xff0000LL,"-Wunused-label","Warn about unused labels");
	create_implies_item(O_Wunused_label, 605, "-Wunused-label");
	create_option_info(606,0x6LL,0xff0000LL,"-Wunused-function","Warn about unused static and inline functions");
	create_implies_item(O_Wunused_function, 606, "-Wunused-function");
	create_option_info(607,0x6LL,0xff0000LL,"-Wunused","Warn when a variable is unused");
	create_implies_item(O_Wunused, 607, "-Wunused");
	create_option_info(608,0x6LL,0xff0000LL,"-Wunreachable-code","Warn about code that will never be executed");
	create_implies_item(O_Wunreachable_code, 608, "-Wunreachable-code");
	create_option_info(609,0x6LL,0xff0000LL,"-Wunknown-pragmas","Warn when an unknown #pragma directive is encountered");
	create_implies_item(O_Wunknown_pragmas, 609, "-Wunknown-pragmas");
	create_option_info(610,0x1eLL,0xff0000LL,"-Wuninitialized","Warn about unitialized automatic variables");
	create_implies_item(O_Wuninitialized, 764, "-WOPT:warn_uninit=on");
	create_implies_item(O_Wuninitialized, 610, "-Wuninitialized");
	create_option_info(611,0x7LL,0xff0ff0LL,"-Wundef","Warn if an undefined identifier appears in a #if directive");
	create_implies_item(O_Wundef, 611, "-Wundef");
	create_option_info(612,0x7LL,0xff0ff0LL,"-Wtrigraphs","Warn when trigraphs are encountered");
	create_implies_item(O_Wtrigraphs, 612, "-Wtrigraphs");
	create_option_info(613,0x7LL,0xff0ff0LL,"-Wtraditional","Warn about constructs whoes meaning change in ANSI C");
	create_implies_item(O_Wtraditional, 613, "-Wtraditional");
	create_option_info(614,0x7LL,0xff0ff0LL,"-Wsystem-headers","Print warnings for constructs in system header files");
	create_implies_item(O_Wsystem_headers, 614, "-Wsystem-headers");
	create_option_info(615,0x4LL,0xff0000LL,"-Wsynth","Warn about synthesis that is not backwards compatible with cfront");
	create_implies_item(O_Wsynth, 615, "-Wsynth");
	create_option_info(616,0x6LL,0xff0000LL,"-Wswitch-enum","Warn when a switch statement is missing a case for an enum member");
	create_implies_item(O_Wswitch_enum, 616, "-Wswitch-enum");
	create_option_info(617,0x6LL,0xff0000LL,"-Wswitch-default","Warn when a switch statement has no default");
	create_implies_item(O_Wswitch_default, 617, "-Wswitch-default");
	create_option_info(618,0x6LL,0xff0000LL,"-Wswitch","Warn when a switch statement is incorrectly indexed with an enum");
	create_implies_item(O_Wswitch, 618, "-Wswitch");
	create_option_info(619,0x6LL,0xff0000LL,"-Wstrict-prototypes","Warn about non-prototyped function decls");
	create_implies_item(O_Wstrict_prototypes, 619, "-Wstrict-prototypes");
	create_option_info(620,0x6LL,0xff0000LL,"-Wstrict-aliasing","Warn about code that breaks strict aliasing rules");
	create_implies_item(O_Wstrict_aliasing, 620, "-Wstrict-aliasing");
	create_option_info(621,0x4LL,0xff0000LL,"-Wsign-promo","Warn when overload resolution promotes from unsigned to signed");
	create_implies_item(O_Wsign_promo, 621, "-Wsign-promo");
	create_option_info(622,0x6LL,0xff0000LL,"-Wsign-compare","Warn about signed/unsigned comparisons");
	create_implies_item(O_Wsign_compare, 622, "-Wsign-compare");
	create_option_info(623,0x6LL,0xff0000LL,"-Wshadow","Warn when one local variable shadows another");
	create_implies_item(O_Wshadow, 623, "-Wshadow");
	create_option_info(624,0x6LL,0xff0000LL,"-Wsequence-point","Warn about code violating sequence point rules");
	create_implies_item(O_Wsequence_point, 624, "-Wsequence-point");
	create_option_info(625,0x6LL,0xff0000LL,"-Wreturn-type","Warn when a function return type defaults to int");
	create_implies_item(O_Wreturn_type, 625, "-Wreturn-type");
	create_option_info(626,0x4LL,0xff0000LL,"-Wreorder","Warn when reordering member initializers");
	create_implies_item(O_Wreorder, 626, "-Wreorder");
	create_option_info(627,0x6LL,0xff0000LL,"-Wredundant-decls","Warn about multiple declarations of the same object");
	create_implies_item(O_Wredundant_decls, 627, "-Wredundant-decls");
	create_option_info(628,0x6LL,0xff0000LL,"-Wpointer-to-int-cast","Warn for pointer casts to integer types of a different size");
	create_implies_item(O_Wpointer_to_int_cast, 628, "-Wpointer-to-int-cast");
	create_option_info(629,0x6LL,0xff0000LL,"-Wpointer-sign","Warn for pointer asignments with different signedness");
	create_implies_item(O_Wpointer_sign, 629, "-Wpointer-sign");
	create_option_info(630,0x6LL,0xff0000LL,"-Wpointer-arith","Warn about function pointer arithmetic");
	create_implies_item(O_Wpointer_arith, 630, "-Wpointer-arith");
	create_option_info(631,0x6LL,0xff0000LL,"-Wparentheses","Warn about possible missing parentheses");
	create_implies_item(O_Wparentheses, 631, "-Wparentheses");
	create_option_info(632,0x6LL,0xff0000LL,"-Wpadded","Warn when padding is included in a struct");
	create_implies_item(O_Wpadded, 632, "-Wpadded");
	create_option_info(633,0x6LL,0xff0000LL,"-Wpacked","Warn when packed attribute of a struct has no effect");
	create_implies_item(O_Wpacked, 633, "-Wpacked");
	create_option_info(634,0xfffffffLL,0xff0LL,"-Wp,","pass comma-separated opts to preprocessor as individual opts");
	create_implies_item(O_WpC, 634, "-Wp,%s");
	create_option_info(635,0x4LL,0xff0000LL,"-Woverloaded-virtual","Warn when a function declaration hides virtual functions");
	create_implies_item(O_Woverloaded_virtual, 635, "-Woverloaded-virtual");
	create_option_info(636,0x6LL,0xff0000LL,"-Wold-style-definition","Warn if an old-style function definition is used. A warning is given even if there is a previous prototype.");
	create_implies_item(O_Wold_style_definition, 636, "-Wold-style-definition");
	create_option_info(637,0x4LL,0xff0000LL,"-Wold-style-cast","Warn when a C-style cast to a non-void type is used");
	create_implies_item(O_Wold_style_cast, 637, "-Wold-style-cast");
	create_option_info(638,0x6LL,0xff0000LL,"-Wnonnull","Warn when passing null to functions requiring non-null pointers");
	create_implies_item(O_Wnonnull, 638, "-Wnonnull");
	create_option_info(639,0x4LL,0xff0000LL,"-Wnon-virtual-dtor","Warn when a class declares a dtor that should be virtual");
	create_implies_item(O_Wnon_virtual_dtor, 639, "-Wnon-virtual-dtor");
	create_option_info(640,0x6LL,0xff0000LL,"-Wno-write-strings","Do not mark strings as 'const char *'");
	create_implies_item(O_Wno_write_strings, 640, "-Wno-write-strings");
	create_option_info(641,0xfffffffLL,0LL,"-Wno-vla","prevent the -pedantic warning of the variable length array");
	create_option_info(642,0x6LL,0xff0000LL,"-Wno-unused-variable","Do not warnarn about local and static variables that are not used");
	create_implies_item(O_Wno_unused_variable, 642, "-Wno-unused-variable");
	create_option_info(643,0x6LL,0xff0000LL,"-Wno-unused-value","Do not warn about statements whose results are not used");
	create_implies_item(O_Wno_unused_value, 643, "-Wno-unused-value");
	create_option_info(644,0x6LL,0xff0000LL,"-Wno-unused-parameter","Do not warn about unused function parameters");
	create_implies_item(O_Wno_unused_parameter, 644, "-Wno-unused-parameter");
	create_option_info(645,0x7LL,0xff0ff0LL,"-Wno-unused-macros","Do not warn about macros defined but not used");
	create_implies_item(O_Wno_unused_macros, 645, "-Wno-unused-macros");
	create_option_info(646,0x6LL,0xff0000LL,"-Wno-unused-label","Do not warn about unused labels");
	create_implies_item(O_Wno_unused_label, 646, "-Wno-unused-label");
	create_option_info(647,0x6LL,0xff0000LL,"-Wno-unused-function","Do not warn about unused static and inline functions");
	create_implies_item(O_Wno_unused_function, 647, "-Wno-unused-function");
	create_option_info(648,0x6LL,0xff0000LL,"-Wno-unused","Do not warn when a variable is unused");
	create_implies_item(O_Wno_unused, 648, "-Wno-unused");
	create_option_info(649,0x6LL,0xff0000LL,"-Wno-unreachable-code","Do not warn about code that will never be executed");
	create_implies_item(O_Wno_unreachable_code, 649, "-Wno-unreachable-code");
	create_option_info(650,0x6LL,0xff0000LL,"-Wno-unknown-pragmas","Do not warn when an unknown #pragma directive is encountered");
	create_implies_item(O_Wno_unknown_pragmas, 650, "-Wno-unknown-pragmas");
	create_option_info(651,0x6LL,0xff0000LL,"-Wno-uninitialized","Do not warn about unitialized automatic variables");
	create_implies_item(O_Wno_uninitialized, 764, "-WOPT:warn_uninit=off");
	create_implies_item(O_Wno_uninitialized, 651, "-Wno-uninitialized");
	create_option_info(652,0x7LL,0xff0ff0LL,"-Wno-undef","Do not warn if an undefined identifier appears in a #if directive");
	create_implies_item(O_Wno_undef, 652, "-Wno-undef");
	create_option_info(653,0x7LL,0xff0ff0LL,"-Wno-trigraphs","Do not warn when trigraphs are encountered");
	create_implies_item(O_Wno_trigraphs, 653, "-Wno-trigraphs");
	create_option_info(654,0x7LL,0xff0ff0LL,"-Wno-traditional","Do not warn about constructs whoes meaning change in ANSI C");
	create_implies_item(O_Wno_traditional, 654, "-Wno-traditional");
	create_option_info(655,0x7LL,0xff0ff0LL,"-Wno-system-headers","Do not print warnings for constructs in system header files");
	create_implies_item(O_Wno_system_headers, 655, "-Wno-system-headers");
	create_option_info(656,0x4LL,0xff0000LL,"-Wno-synth","Do not warn about synthesis that is not backwards compatible with cfront");
	create_implies_item(O_Wno_synth, 656, "-Wno-synth");
	create_option_info(657,0x6LL,0xff0000LL,"-Wno-switch","Do not warn when a switch statement is incorrectly indexed with an enum");
	create_implies_item(O_Wno_switch, 657, "-Wno-switch");
	create_option_info(658,0x6LL,0xff0000LL,"-Wno-strict-prototypes","Do not warn about non-prototyped function decls");
	create_implies_item(O_Wno_strict_prototypes, 658, "-Wno-strict-prototypes");
	create_option_info(659,0x6LL,0xff0000LL,"-Wno-strict-aliasing","Do not warn about code that breaks strict aliasing rules");
	create_implies_item(O_Wno_strict_aliasing, 659, "-Wno-strict-aliasing");
	create_option_info(660,0x4LL,0xff0000LL,"-Wno-sign-promo","Do not warn when overload resolution promotes from unsigned to signed");
	create_implies_item(O_Wno_sign_promo, 660, "-Wno-sign-promo");
	create_option_info(661,0x6LL,0xff0000LL,"-Wno-sign-compare","Do not warn about signed/unsigned comparisons");
	create_implies_item(O_Wno_sign_compare, 661, "-Wno-sign-compare");
	create_option_info(662,0x6LL,0xff0000LL,"-Wno-shadow","Do not warn when one local variable shadows another");
	create_implies_item(O_Wno_shadow, 662, "-Wno-shadow");
	create_option_info(663,0x6LL,0xff0000LL,"-Wno-sequence-point","Do not warn about code violating sequence point rules");
	create_implies_item(O_Wno_sequence_point, 663, "-Wno-sequence-point");
	create_option_info(664,0x6LL,0xff0000LL,"-Wno-return-type","Do not warn when a function return type defaults to int");
	create_implies_item(O_Wno_return_type, 664, "-Wno-return-type");
	create_option_info(665,0x4LL,0xff0000LL,"-Wno-reorder","Do not warn when reordering member initializers");
	create_implies_item(O_Wno_reorder, 665, "-Wno-reorder");
	create_option_info(666,0x6LL,0xff0000LL,"-Wno-redundant-decls","Do not warn about multiple declarations of the same object");
	create_implies_item(O_Wno_redundant_decls, 666, "-Wno-redundant-decls");
	create_option_info(667,0x6LL,0xff0000LL,"-Wno-pointer-to-int-cast","Don't warn for pointer casts to integer types of a different size");
	create_implies_item(O_Wno_pointer_to_int_cast, 667, "-Wno-pointer-to-int-cast");
	create_option_info(668,0x6LL,0xff0000LL,"-Wno-pointer-sign","Don't warn for pointer asignments with different signedness");
	create_implies_item(O_Wno_pointer_sign, 668, "-Wno-pointer-sign");
	create_option_info(669,0x6LL,0xff0000LL,"-Wno-pointer-arith","Do not warn about function pointer arithmetic");
	create_implies_item(O_Wno_pointer_arith, 669, "-Wno-pointer-arith");
	create_option_info(670,0x4LL,0xff0000LL,"-Wno-pmf-conversions","Do not warn about converting PMFs to plain pointers");
	create_implies_item(O_Wno_pmf_conversions, 670, "-Wno-pmf-conversions");
	create_option_info(671,0x6LL,0xff0000LL,"-Wno-parentheses","Do not warn about possible missing parentheses");
	create_implies_item(O_Wno_parentheses, 671, "-Wno-parentheses");
	create_option_info(672,0x6LL,0xff0000LL,"-Wno-padded","Do not warn when padding is included in a struct");
	create_implies_item(O_Wno_padded, 672, "-Wno-padded");
	create_option_info(673,0x6LL,0xff0000LL,"-Wno-packed","Do not warn when packed attribute of a struct has no effect");
	create_implies_item(O_Wno_packed, 673, "-Wno-packed");
	create_option_info(674,0x4LL,0xff0000LL,"-Wno-overloaded-virtual","Do not warn when a function declaration hides virtual functions");
	create_implies_item(O_Wno_overloaded_virtual, 674, "-Wno-overloaded-virtual");
	create_option_info(675,0x6LL,0xff0000LL,"-Wno-old-style-definition","Do not warn about old style fucntion definition");
	create_implies_item(O_Wno_old_style_definition, 675, "-Wno-old-style-definition");
	create_option_info(676,0x4LL,0xff0000LL,"-Wno-old-style-cast","Do not warn when a C-style cast to a non-void type is used");
	create_implies_item(O_Wno_old_style_cast, 676, "-Wno-old-style-cast");
	create_option_info(677,0x4LL,0xff0000LL,"-Wno-non-virtual-dtor","Do not warn when a class declares a dtor that should be virtual");
	create_implies_item(O_Wno_non_virtual_dtor, 677, "-Wno-non-virtual-dtor");
	create_option_info(678,0x4LL,0xff0000LL,"-Wno-non-template-friend","Do not warn about friend functions declared in templates");
	create_implies_item(O_Wno_non_template_friend, 678, "-Wno-non-template-friend");
	create_option_info(679,0x6LL,0xff0000LL,"-Wno-nested-externs","Do not warn about externs not at file scope level");
	create_implies_item(O_Wno_nested_externs, 679, "-Wno-nested-externs");
	create_option_info(680,0x6LL,0xff0000LL,"-Wno-multichar","Do not warn if a multicharacter constant is used");
	create_implies_item(O_Wno_multichar, 680, "-Wno-multichar");
	create_option_info(681,0x6LL,0xff0000LL,"-Wno-missing-prototypes","Do not warn about global funcs without prototypes");
	create_implies_item(O_Wno_missing_prototypes, 681, "-Wno-missing-prototypes");
	create_option_info(682,0x6LL,0xff0000LL,"-Wno-missing-noreturn","Do not warn about functions that are candidates for 'noreturn' attribute");
	create_implies_item(O_Wno_missing_noreturn, 682, "-Wno-missing-noreturn");
	create_option_info(683,0x6LL,0xff0000LL,"-Wno-missing-format-attribute","Do not warn on candidates for 'format' attributes");
	create_implies_item(O_Wno_missing_format_attribute, 683, "-Wno-missing-format-attribute");
	create_option_info(684,0x6LL,0xff0000LL,"-Wno-missing-field-initializers","Do not warn if a structure's initializer has some fields missing");
	create_implies_item(O_Wno_missing_field_initializers, 684, "-Wno-missing-field-initializers");
	create_option_info(685,0x6LL,0xff0000LL,"-Wno-missing-declarations","Do not warn about global funcs without previous declarations");
	create_implies_item(O_Wno_missing_declarations, 685, "-Wno-missing-declarations");
	create_option_info(686,0x6LL,0xff0000LL,"-Wno-missing-braces","Do not warn about possibly missing braces around initialisers");
	create_implies_item(O_Wno_missing_braces, 686, "-Wno-missing-braces");
	create_option_info(687,0x6LL,0xff0000LL,"-Wno-main","Do not warn about suspicious declarations of main");
	create_implies_item(O_Wno_main, 687, "-Wno-main");
	create_option_info(688,0x6LL,0xff0000LL,"-Wno-long-long","Do not warn if the long long type is used");
	create_implies_item(O_Wno_long_long, 688, "-Wno-long-long");
	create_option_info(689,0x6LL,0xff0000LL,"-Wno-larger-than-","Do not warn if an object is larger than <number> bytes");
	create_implies_item(O_Wno_larger_than___, 689, "-Wno-larger-than-%d");
	create_option_info(690,0x6LL,0xff0000LL,"-Wno-invalid-pch",NULL);
	create_option_info(691,0x6LL,0xff0000LL,"-Wno-int-to-pointer-cast","Don't warn for casts to pointers from integer types of a different size");
	create_implies_item(O_Wno_int_to_pointer_cast, 691, "-Wno-int-to-pointer-cast");
	create_option_info(692,0x6LL,0xff0000LL,"-Wno-inline","Do not warn if a function declared as inline cannot be inlined");
	create_implies_item(O_Wno_inline, 692, "-Wno-inline");
	create_option_info(693,0x7LL,0xff0ff0LL,"-Wno-import","Do not warn about the use of the #import directive");
	create_implies_item(O_Wno_import, 693, "-Wno-import");
	create_option_info(694,0x6LL,0xff0000LL,"-Wno-implicit-int","Do not warn when a declaration does not specify a type");
	create_implies_item(O_Wno_implicit_int, 694, "-Wno-implicit-int");
	create_option_info(695,0x6LL,0xff0000LL,"-Wno-implicit-function-declaration","Do not warn when a function is used before being declared");
	create_implies_item(O_Wno_implicit_function_declaration, 695, "-Wno-implicit-function-declaration");
	create_option_info(696,0x6LL,0xff0000LL,"-Wno-implicit","Do not warn about implicit declarations of functions or variables");
	create_implies_item(O_Wno_implicit, 696, "-Wno-implicit");
	create_option_info(697,0x6LL,0xff0000LL,"-Wno-format-zero-length","Do not warn about zero-length format string");
	create_implies_item(O_Wno_format_zero_length, 697, "-Wno-format-zero-length");
	create_option_info(698,0x6LL,0xff0000LL,"-Wno-format-y2k","Do not warn about 'strftime' formats that yield two-digit years");
	create_implies_item(O_Wno_format_y2k, 698, "-Wno-format-y2k");
	create_option_info(699,0x6LL,0xff0000LL,"-Wno-format-security","Do not warn on potentially insecure format functions");
	create_implies_item(O_Wno_format_security, 699, "-Wno-format-security");
	create_option_info(700,0x6LL,0xff0000LL,"-Wno-format-nonliteral","Do not warn if format string is not a string literal");
	create_implies_item(O_Wno_format_nonliteral, 700, "-Wno-format-nonliteral");
	create_option_info(701,0x6LL,0xff0000LL,"-Wno-format-extra-args","Do not warn about extra arguments to printf-like functions");
	create_implies_item(O_Wno_format_extra_args, 701, "-Wno-format-extra-args");
	create_option_info(702,0x6LL,0xff0000LL,"-Wno-format","Do not warn about printf format anomalies");
	create_implies_item(O_Wno_format, 702, "-Wno-format");
	create_option_info(703,0x6LL,0xff0000LL,"-Wno-float-equal","Do not warn if floating point values are compared for equality");
	create_implies_item(O_Wno_float_equal, 703, "-Wno-float-equal");
	create_option_info(704,0xfffffffLL,0LL,"-Wno-error=","makes -Ws warnings not be error");
	create_option_info(705,0x7LL,0xff0ff0LL,"-Wno-error","Do not make all warnings into errors");
	create_implies_item(O_Wno_error, 705, "-Wno-error");
	create_option_info(706,0xfLL,0xff0LL,"-Wno-endif-labels","Do not warn if #if or #endif is followed by text");
	create_implies_item(O_Wno_endif_labels, 706, "-Wno-endif-labels");
	create_option_info(707,0x4LL,0xff0000LL,"-Wno-effc++","Do not warn on 'Effective C++' style violations");
	create_implies_item(O_Wno_effc__, 707, "-Wno-effc++");
	create_option_info(708,0x6LL,0xff0000LL,"-Wno-div-by-zero","Suppress warnings about compile-time integer division by zero");
	create_implies_item(O_Wno_div_by_zero, 708, "-Wno-div-by-zero");
	create_option_info(709,0x6LL,0xff0000LL,"-Wno-disabled-optimization","Do not warn if a requested optimization pass is disabled");
	create_implies_item(O_Wno_disabled_optimization, 709, "-Wno-disabled-optimization");
	create_option_info(710,0x6LL,0xff0000LL,"-Wno-deprecated-declarations","Do not warn about deprecated code");
	create_implies_item(O_Wno_deprecated_declarations, 710, "-Wno-deprecated-declarations");
	create_option_info(711,0xeLL,0xff0LL,"-Wno-deprecated","Do not announce deprecation of compiler features");
	create_implies_item(O_Wno_deprecated, 711, "-Wno-deprecated");
	create_option_info(712,0x4LL,0xff0LL,"-Wno-ctor-dtor-privacy","Do not warn when all constructors/destructors are private");
	create_implies_item(O_Wno_ctor_dtor_privacy, 712, "-Wno-ctor-dtor-privacy");
	create_option_info(713,0x6LL,0xff0000LL,"-Wno-conversion","Do not warn about possibly confusing type conversions");
	create_implies_item(O_Wno_conversion, 713, "-Wno-conversion");
	create_option_info(714,0x7LL,0xff0ff0LL,"-Wno-comments","Do not warn if nested comments are detected");
	create_implies_item(O_Wno_comments, 714, "-Wno-comments");
	create_option_info(715,0x7LL,0xff0ff0LL,"-Wno-comment","Do not warn if nested comments are detected");
	create_implies_item(O_Wno_comment, 715, "-Wno-comment");
	create_option_info(716,0x6LL,0xff0000LL,"-Wno-char-subscripts","Do not warn about subscripts whose type is 'char'");
	create_implies_item(O_Wno_char_subscripts, 716, "-Wno-char-subscripts");
	create_option_info(717,0x6LL,0xff0000LL,"-Wno-cast-qual","Do not warn about casts which discard qualifiers");
	create_implies_item(O_Wno_cast_qual, 717, "-Wno-cast-qual");
	create_option_info(718,0x6LL,0xff0000LL,"-Wno-cast-align","Do not warn about pointer casts which increase alignment");
	create_implies_item(O_Wno_cast_align, 718, "-Wno-cast-align");
	create_option_info(719,0x6LL,0xff0000LL,"-Wno-bad-function-cast","Do not warn when a function call is cast to a non-matching type");
	create_implies_item(O_Wno_bad_function_cast, 719, "-Wno-bad-function-cast");
	create_option_info(720,0x6LL,0xff0000LL,"-Wno-aggregate-return","Do not warn about returning structures, unions or arrays");
	create_implies_item(O_Wno_aggregate_return, 720, "-Wno-aggregate-return");
	create_option_info(721,0x6LL,0xff0000LL,"-Wnested-externs","Warn about externs not at file scope level");
	create_implies_item(O_Wnested_externs, 721, "-Wnested-externs");
	create_option_info(722,0x6LL,0xff0000LL,"-Wmultichar","Warn if a multicharacter constant is used");
	create_implies_item(O_Wmultichar, 722, "-Wmultichar");
	create_option_info(723,0x6LL,0xff0000LL,"-Wmissing-prototypes","Warn about global funcs without prototypes");
	create_implies_item(O_Wmissing_prototypes, 723, "-Wmissing-prototypes");
	create_option_info(724,0x6LL,0xff0000LL,"-Wmissing-noreturn","Warn about functions that are candidates for 'noreturn' attribute");
	create_implies_item(O_Wmissing_noreturn, 724, "-Wmissing-noreturn");
	create_option_info(725,0x6LL,0xff0000LL,"-Wmissing-format-attribute","If -Wformat, warn on candidates for 'format' attributes");
	create_implies_item(O_Wmissing_format_attribute, 725, "-Wmissing-format-attribute");
	create_option_info(726,0x6LL,0xff0000LL,"-Wmissing-declarations","Warn about global funcs without previous declarations");
	create_implies_item(O_Wmissing_declarations, 726, "-Wmissing-declarations");
	create_option_info(727,0x6LL,0xff0000LL,"-Wmissing-braces","Warn about possibly missing braces around initialisers");
	create_implies_item(O_Wmissing_braces, 727, "-Wmissing-braces");
	create_option_info(728,0x6LL,0xff0000LL,"-Wmain","Warn about suspicious declarations of main");
	create_implies_item(O_Wmain, 728, "-Wmain");
	create_option_info(729,0x6LL,0xff0000LL,"-Wlong-long","Warn if the long long type is used");
	create_implies_item(O_Wlong_long, 729, "-Wlong-long");
	create_option_info(730,0x6LL,0xff0000LL,"-Wlarger-than-","Warn if an object is larger than <number> bytes");
	create_implies_item(O_Wlarger_than___, 730, "-Wlarger-than-%d");
	create_option_info(731,0x1eLL,0x1000f0000000000LL,"-Wl,","pass comma-separated opts to linker as individual opts");
	create_implies_item(O_WlC, 731, "-Wl,%s");
	create_option_info(732,0x6LL,0xff0000LL,"-Winvalid-pch",NULL);
	create_option_info(733,0x6LL,0xff0000LL,"-Wint-to-pointer-cast","Warn for casts to pointers from integer types of a different size");
	create_implies_item(O_Wint_to_pointer_cast, 733, "-Wint-to-pointer-cast");
	create_option_info(734,0x6LL,0xff0000LL,"-Winline","Warn if a function declared as inline cannot be inlined");
	create_implies_item(O_Winline, 734, "-Winline");
	create_option_info(735,0x7LL,0xff0ff0LL,"-Wimport","Warn about the use of the #import directive");
	create_implies_item(O_Wimport, 735, "-Wimport");
	create_option_info(736,0x6LL,0xff0000LL,"-Wimplicit-int","Warn when a declaration does not specify a type");
	create_implies_item(O_Wimplicit_int, 736, "-Wimplicit-int");
	create_option_info(737,0x6LL,0xff0000LL,"-Wimplicit-function-declaration","Warn when a function is used before being declared");
	create_implies_item(O_Wimplicit_function_declaration, 737, "-Wimplicit-function-declaration");
	create_option_info(738,0x6LL,0xff0000LL,"-Wimplicit","Warn about implicit declarations of functions or variables");
	create_implies_item(O_Wimplicit, 738, "-Wimplicit");
	create_option_info(739,0xfffffffLL,0LL,"-Wframe-larger-than-100000000","help noticing functions with larger than usual frame sizes");
	create_option_info(740,0x6LL,0xff0000LL,"-Wformat=2","Enable -Wformat plus format checks not included in -Wformat");
	create_implies_item(O_WformatQ2, 741, "-Wformat-security");
	create_implies_item(O_WformatQ2, 742, "-Wformat-nonliteral");
	create_implies_item(O_WformatQ2, 743, "-Wformat");
	create_option_info(741,0x6LL,0xff0000LL,"-Wformat-security","If -Wformat, warn on potentially insecure format functions");
	create_implies_item(O_Wformat_security, 741, "-Wformat-security");
	create_option_info(742,0x6LL,0xff0000LL,"-Wformat-nonliteral","If -Wformat, warn if format string is not a string literal");
	create_implies_item(O_Wformat_nonliteral, 742, "-Wformat-nonliteral");
	create_option_info(743,0x6LL,0xff0000LL,"-Wformat","Warn about printf format anomalies");
	create_implies_item(O_Wformat, 743, "-Wformat");
	create_option_info(744,0x6LL,0xff0000LL,"-Wfloat-equal","Warn if floating point values are compared for equality");
	create_implies_item(O_Wfloat_equal, 744, "-Wfloat-equal");
	create_option_info(745,0x6LL,0xff0000LL,"-Werror-implicit-function-declaration","Give an error when a function is used before being declared");
	create_implies_item(O_Werror_implicit_function_declaration, 745, "-Werror-implicit-function-declaration");
	create_option_info(746,0x7LL,0x100ff0ff0LL,"-Werror","Make all warnings into errors");
	create_implies_item(O_Werror, 746, "-Werror");
	create_option_info(747,0xfLL,0xff0LL,"-Wendif-labels","Warn if #if or #endif is followed by text");
	create_implies_item(O_Wendif_labels, 747, "-Wendif-labels");
	create_option_info(748,0x4LL,0xff0000LL,"-Weffc++","Warn on 'Effective C++' style violations");
	create_implies_item(O_Weffc__, 748, "-Weffc++");
	create_option_info(749,0x6LL,0xff0000LL,"-Wdiv-by-zero","Warn about compile-time integer division by zero");
	create_implies_item(O_Wdiv_by_zero, 749, "-Wdiv-by-zero");
	create_option_info(750,0x6LL,0LL,"-Wdisabled-optimization","Warn if a requested optimization pass is disabled");
	create_option_info(751,0xeLL,0xff0LL,"-Wdeprecated","Announce deprecation of compiler features");
	create_implies_item(O_Wdeprecated, 751, "-Wdeprecated");
	create_option_info(752,0x2LL,0xff0000LL,"-Wdeclaration-after-statement","Warn about declarations after statements (pre-C99)");
	create_implies_item(O_Wdeclaration_after_statement, 752, "-Wdeclaration-after-statement");
	create_option_info(753,0x4LL,0xff0LL,"-Wctor-dtor-privacy","Warn when all constructors/destructors are private");
	create_implies_item(O_Wctor_dtor_privacy, 753, "-Wctor-dtor-privacy");
	create_option_info(754,0x6LL,0xff0000LL,"-Wconversion","Warn about possibly confusing type conversions");
	create_implies_item(O_Wconversion, 754, "-Wconversion");
	create_option_info(755,0x7LL,0xff0ff0LL,"-Wcomments","Warn if nested comments are detected");
	create_implies_item(O_Wcomments, 755, "-Wcomments");
	create_option_info(756,0x7LL,0xff0ff0LL,"-Wcomment","Warn if nested comments are detected");
	create_implies_item(O_Wcomment, 756, "-Wcomment");
	create_option_info(757,0x6LL,0xff0000LL,"-Wchar-subscripts","Warn about subscripts whose type is 'char'");
	create_implies_item(O_Wchar_subscripts, 757, "-Wchar-subscripts");
	create_option_info(758,0x6LL,0xff0000LL,"-Wcast-qual","Warn about casts which discard qualifiers");
	create_implies_item(O_Wcast_qual, 758, "-Wcast-qual");
	create_option_info(759,0x6LL,0xff0000LL,"-Wcast-align","Warn about pointer casts which increase alignment");
	create_implies_item(O_Wcast_align, 759, "-Wcast-align");
	create_option_info(760,0x6LL,0xff0000LL,"-Wbad-function-cast","Attempt to support writable-strings K&R style C");
	create_implies_item(O_Wbad_function_cast, 760, "-Wbad-function-cast");
	create_option_info(761,0x7LL,0xff0ff0LL,"-Wall","Enable most warning messages");
	create_implies_item(O_Wall, 764, "-WOPT:warn_uninit=on");
	create_implies_item(O_Wall, 761, "-Wall");
	create_option_info(762,0x6LL,0xff0000LL,"-Waggregate-return","Warn about returning structures, unions or arrays");
	create_implies_item(O_Waggregate_return, 762, "-Waggregate-return");
	create_option_info(763,0xfffffffLL,0xf00000LL,"-Wabi",NULL);
	create_implies_item(O_Wabi, 763, "-Wabi");
	create_option_info(764,0xfffffffLL,0x1f0000000LL,"-WOPT:","option group internal-use WOPT options");
	create_implies_item(O_WOPT_, 764, "-WOPT:%s");
	create_option_info(765,0x1eLL,0x1000f0000000000LL,"-WB,","-WB,<arg> passes <arg> to the back-end via ipacom");
	create_implies_item(O_WBC, 765, "-WB,%s");
	create_option_info(766,0xfffffffLL,0LL,"-W","-W<phase>,<arg> sends arg to phase {p=cpp,f=fe,b=be,a=as,l=ld}");
	create_option_info(767,0x6LL,0xff0000LL,"-W","Enable extra warnings");
	create_implies_item(O_W, 767, "-W");
	create_option_info(768,0xfffffffLL,0x1f00f0000LL,"-VHO:","option group to control vho lowering");
	create_implies_item(O_VHO_, 768, "-VHO:%s");
	create_option_info(769,0x2LL,0x1000f01f0ff0ff0LL,"-V",NULL);
	create_option_info(770,0xfffffffLL,0LL,"-V","Show the version of the compiler being used");
	create_option_info(771,0xfffffffLL,0LL,"-U",NULL);
	create_option_info(772,0xfffffffLL,0xff0LL,"-U","undefine the following macro");
	create_implies_item(O_U, 772, "-U%s");
	create_option_info(773,0xfffffffLL,0x1f00f0000LL,"-TENV:","option group to control target environment");
	create_implies_item(O_TENV_, 773, "-TENV:%s");
	create_option_info(774,0xfffffffLL,0x1f00f0000LL,"-TARG:","option group to control compilation target");
	create_implies_item(O_TARG_, 774, "-TARG:%s");
	create_option_info(775,0xfffffffLL,0x100000000LL,"-SWP:",NULL);
	create_implies_item(O_SWP_, 775, "-SWP:%s");
	create_option_info(776,0x1eLL,0LL,"-S","produce a .s and stop");
	create_option_info(777,0xfffffffLL,0LL,"-R","pass flags to RATFOR");
	create_option_info(778,0xfffffffLL,0LL,"-Q","suppress timing information (g++) ");
	create_option_info(779,0x8LL,0x100000000LL,"-PURPLE:","option group to control problem isolation slicing tool");
	create_implies_item(O_PURPLE_, 779, "-PURPLE:%s");
	create_implies_item(O_PURPLE_, 782, "-PHASE:purple");
	create_option_info(780,0x1eLL,0x100000000LL,"-PROMP:next_id=",NULL);
	create_implies_item(O_PROMP_next_idQ__, 780, "-PROMP:next_id=%d");
	create_option_info(781,0x1eLL,0x100000000LL,"-PROMP:",NULL);
	create_implies_item(O_PROMP_, 781, "-PROMP:%s");
	create_implies_item(O_PROMP_, 782, "-PHASE:prompf");
	create_option_info(782,0xfffffffLL,0x1f0000000LL,"-PHASE:",NULL);
	create_implies_item(O_PHASE_, 782, "-PHASE:%s");
	create_option_info(783,0xfffffffLL,0xff0LL,"-P",NULL);
	create_implies_item(O_P, 783, "-P");
	create_option_info(784,0xfffffffLL,0x1f0ff0000LL,"-Os","Optimize for space");
	create_implies_item(O_Os, 789, "-OPT:space");
	create_option_info(785,0xfffffffLL,0LL,"-Olimit",NULL);
	create_implies_item(O_Olimit__, 785, "-Olimit");
	create_option_info(786,0xfffffffLL,0LL,"-Ofast","default fast option configuration");
	create_option_info(787,0xfffffffLL,0x100000000LL,"-OPT:unroll_level=n","where n=1,2 controls unrolling, default=1, aggressive=2");
	create_option_info(788,0xfffffffLL,0x100000000LL,"-OPT:keep_ext=on,off","where default is off, on means external syms are preserved");
	create_option_info(789,0xfffffffLL,0x101f0ff0000LL,"-OPT:","option group to control optimization");
	create_implies_item(O_OPT_, 789, "-OPT:%s");
	create_option_info(790,0xfffffffLL,0x1f0ff0ff0LL,"-O3","full optimization");
	create_implies_item(O_O3, 840, "-D__OPTIMIZE__");
	create_implies_item(O_O3, 790, "-O3");
	create_option_info(791,0xfffffffLL,0x1f0ff0ff0LL,"-O2","global optimization");
	create_implies_item(O_O2, 840, "-D__OPTIMIZE__");
	create_implies_item(O_O2, 791, "-O2");
	create_option_info(792,0xfffffffLL,0x1f0ff0ff0LL,"-O1","minimal optimization");
	create_implies_item(O_O1, 840, "-D__OPTIMIZE__");
	create_implies_item(O_O1, 792, "-O1");
	create_option_info(793,0xfffffffLL,0x1f0ff0ff0LL,"-O0","no optimization");
	create_implies_item(O_O0, 793, "-O0");
	create_option_info(794,0xfffffffLL,0x1f0ff0ff0LL,"-O","full optimization");
	create_implies_item(O_O__, 790, "-O3");
	create_option_info(795,0xfffffffLL,0x1f0ff0ff0LL,"-O","same as -O2");
	create_implies_item(O_O, 840, "-D__OPTIMIZE__");
	create_implies_item(O_O, 791, "-O2");
	create_option_info(796,0x18LL,0xf0000LL,"-NC","set max # of continuation lines");
	create_implies_item(O_NC__, 796, "-NC%d");
	create_option_info(797,0x27LL,0xff0LL,"-MT","Change the target of the generated dependency rules");
	create_implies_item(O_MT, 797, "-MT %s");
	create_option_info(798,0x27LL,0xff0LL,"-MQ","Same as -MT, but quote characters that are special to Make");
	create_implies_item(O_MQ, 798, "-MQ %s");
	create_option_info(799,0x27LL,0xff0LL,"-MP","With -M or -MM, add phony targets for each dependency");
	create_implies_item(O_MP, 799, "-MP");
	create_option_info(800,0x27LL,0xff0LL,"-MMD","Write user dependencies to .d output file");
	create_implies_item(O_MMD, 800, "-MMD");
	create_option_info(801,0x27LL,0xff0LL,"-MM","Output user dependencies of source file");
	create_implies_item(O_MM, 801, "-MM");
	create_option_info(802,0x27LL,0xff0LL,"-MG","With -M or -MM, treat missing header files as generated files");
	create_implies_item(O_MG, 802, "-MG");
	create_option_info(803,0x27LL,0xff0LL,"-MF","Write dependencies to specified output file");
	create_implies_item(O_MF, 803, "-MF %s");
	create_option_info(804,0xfffffffLL,0x1000f0000000ff0LL,"-MDupdate","update the following file with make dependencies");
	create_implies_item(O_MDupdate, 804, "-MDupdate %s");
	create_option_info(805,0xfffffffLL,0xff0LL,"-MDtarget","use the following as the target for make dependencies");
	create_implies_item(O_MDtarget, 805, "-MDtarget %s");
	create_option_info(806,0xfffffffLL,0x1000f0000000000LL,"-MDignore",NULL);
	create_implies_item(O_MDignore, 806, "-MDignore %s");
	create_option_info(807,0x27LL,0xff0LL,"-MD","Write dependencies to .d output file");
	create_implies_item(O_MD, 807, "-MD");
	create_option_info(808,0xfffffffLL,0xff0LL,"-M","run cpp and print list of make dependencies");
	create_implies_item(O_M, 808, "-M");
	create_option_info(809,0xfffffffLL,0x100000000LL,"-LNO:","option group to control loop nest optimization");
	create_implies_item(O_LNO_, 809, "-LNO:%s");
	create_option_info(810,0xfffffffLL,0x1000f0000000000LL,"-LMSG:","option group to control error/warning messages in ld");
	create_implies_item(O_LMSG_, 810, "-LMSG:%s");
	create_option_info(811,0xfffffffLL,0x1f0000000LL,"-LIST:","option group to control listing file and contents");
	create_implies_item(O_LIST_, 811, "-LIST:%s");
	create_option_info(812,0xfffffffLL,0x1000f0000000000LL,"-LD_",NULL);
	create_implies_item(O_LD_, 812, "-LD_%s");
	create_option_info(813,0x4LL,0x1f00f0000LL,"-LANG:std","Use ISO/ANSI standard-conforming C++ language and library");
	create_implies_item(O_LANG_std, 813, "-LANG:std");
	create_option_info(814,0x1eLL,0x1f00f0000LL,"-LANG:","option group to control language features");
	create_implies_item(O_LANG_, 814, "-LANG:%s");
	create_option_info(815,0x1eLL,0x1000f0000000000LL,"-L","add following directory to the library search path list");
	create_implies_item(O_L__, 815, "-L%D");
	create_option_info(816,0x1eLL,0x1000f0000000000LL,"-L",NULL);
	create_implies_item(O_L, 816, "-L");
	create_option_info(817,0xfffffffLL,0x100f0000000LL,"-IPA:","option group to control interprocedural optimizations");
	create_implies_item(O_IPA_, 817, "-IPA:%s");
	create_option_info(818,0xfffffffLL,0LL,"-IPA","Perform interprocedural analysis and optimization");
	create_implies_item(O_IPA, 236, "-ipa");
	create_option_info(819,0x1eLL,0x101f00f0000LL,"-INTERNAL:","option group to control features while testing");
	create_implies_item(O_INTERNAL_, 819, "-INTERNAL:%s");
	create_option_info(820,0xfffffffLL,0x10000000000LL,"-INLINE:","specify inline processing option group");
	create_implies_item(O_INLINE_, 820, "-INLINE:%s");
	create_option_info(821,0xfffffffLL,0LL,"-INLINE","request inline processing");
	create_option_info(822,0xfffffffLL,0xff0LL,"-I-",NULL);
	create_implies_item(O_I_, 822, "-I-");
	create_option_info(823,0xfffffffLL,0xff0LL,"-I","add following directory to the include search path list");
	create_implies_item(O_I__, 10, "-include=%D");
	create_implies_item(O_I__, 823, "-I%D");
	create_option_info(824,0xfffffffLL,0x100000000LL,"-HUGEPAGE:","equivalent to -HP:");
	create_option_info(825,0xfffffffLL,0x100000000LL,"-HUGEPAGE","equivalent to -HP");
	create_option_info(826,0xfffffffLL,0x100000000LL,"-HP:","option group to specify huge page usage, e.g., -HP:bdt=2m:heap=2m,limit=150");
	create_option_info(827,0xfffffffLL,0x100000000LL,"-HP","equivalent to -HP:heap=2m");
	create_option_info(828,0x27LL,0xff0LL,"-H","print name of each header file used");
	create_implies_item(O_H, 828, "-H");
	create_option_info(829,0xfffffffLL,0x100000000LL,"-Gspace",NULL);
	create_implies_item(O_Gspace__, 773, "-TENV:Gspace=%d");
	create_option_info(830,0xfffffffLL,0x100000000LL,"-GRA:unspill=on,off","when on enables optimal GRA/LRA boundary condition allocations");
	create_option_info(831,0xfffffffLL,0x100000000LL,"-GRA:","option group to control global register allocation");
	create_implies_item(O_GRA_, 831, "-GRA:%s");
	create_option_info(832,0LL,0LL,"-GCM:",NULL);
	create_option_info(833,0xfffffffLL,0x1000f0000LL,"-G",NULL);
	create_implies_item(O_G__, 833, "-G%d");
	create_option_info(834,0x18LL,0x100000000LL,"-FLIST:","option group to control Fortran source listing of compiler intermediate");
	create_implies_item(O_FLIST_, 834, "-FLIST:%s");
	create_implies_item(O_FLIST_, 782, "-PHASE:flist");
	create_option_info(835,0xfffffffLL,0xf0000LL,"-FE:",NULL);
	create_implies_item(O_FE_, 835, "-FE:%s");
	create_option_info(836,0x8LL,0LL,"-F","stop after RATFOR (f77 only)");
	create_option_info(837,0xfffffffLL,0LL,"-E","run cpp and send result to standard output");
	create_implies_item(O_E, 837, "-E");
	create_option_info(838,0xfffffffLL,0LL,"-DEFAULT:",NULL);
	create_option_info(839,0xfffffffLL,0x1f00f0000LL,"-DEBUG:","option group to debugging options");
	create_implies_item(O_DEBUG_, 839, "-DEBUG:%s");
	create_option_info(840,0xfffffffLL,0xff0LL,"-D","add following macro define");
	create_implies_item(O_D, 840, "-D%s");
	create_option_info(841,0x2LL,0x100000000LL,"-CLIST:","option group to control C source listing of compiler intermediate");
	create_implies_item(O_CLIST_, 841, "-CLIST:%s");
	create_implies_item(O_CLIST_, 782, "-PHASE:clist");
	create_option_info(842,0xfffffffLL,0x100000000LL,"-CG:unroll_level=n","where n=0,1,2 controls unrolling, none=0, default=1, aggressive=2");
	create_option_info(843,0xfffffffLL,0x100000000LL,"-CG:unroll_fb_req=on,off","when on with FDO disables cold code layout for unrolled loops");
	create_option_info(844,0xfffffffLL,0x100000000LL,"-CG:compute_to=on,off","when on, enables SSE based scheduling/local code motion optimizations");
	create_option_info(845,0xfffffffLL,0x100000000LL,"-CG:cmp_peep=on,off","when on load-exec opts include compare instructions");
	create_option_info(846,0xfffffffLL,0x100000000LL,"-CG:","option group to control code generation");
	create_implies_item(O_CG_, 846, "-CG:%s");
	create_option_info(847,0xfffffffLL,0LL,"-C","C/C++: keep C comments after cpp; Fortran: runtime subscript checking");
	create_option_info(848,0x1eLL,0x1000f0000000000LL,"-Bsymbolic","Let the linker to resolve as many symbols as possible at link time");
	create_implies_item(O_Bsymbolic, 848, "-Bsymbolic");
	create_option_info(849,0xfffffffLL,0xff0LL,"-A","add following cpp assertions");
	create_implies_item(O_A, 849, "-A%s");
	create_option_info(850,0x8LL,0xf0000LL,"-66","issue errors when non-F66 feature used");
	create_implies_item(O_66, 850, "-66");
	create_option_info(851,0x8LL,0xf0000LL,"-1","One trip DO loops");
	create_implies_item(O_1, 851, "-1");
	create_option_info(852,0xfffffffLL,0LL,"--write-user-dependencies",NULL);
	create_implies_item(O__write_user_dependencies, 800, "-MMD");
	create_option_info(853,0xfffffffLL,0LL,"--write-dependencies",NULL);
	create_implies_item(O__write_dependencies, 807, "-MD");
	create_option_info(854,0x1eLL,0x1000f0000000000LL,"--whole-archive",NULL);
	create_implies_item(O__whole_archive, 854, "--whole-archive");
	create_option_info(855,0xfffffffLL,0LL,"--version",NULL);
	create_implies_item(O__version, 45, "-version");
	create_option_info(856,0xfffffffLL,0LL,"--verbose",NULL);
	create_implies_item(O__verbose, 47, "-v");
	create_option_info(857,0xfffffffLL,0LL,"--user-dependencies",NULL);
	create_implies_item(O__user_dependencies, 801, "-MM");
	create_option_info(858,0xfffffffLL,0LL,"--undefine-macro",NULL);
	create_implies_item(O__undefine_macro, 772, "-U%s");
	create_option_info(859,0xfffffffLL,0LL,"--trigraphs",NULL);
	create_implies_item(O__trigraphs, 56, "-trigraphs");
	create_option_info(860,0xfffffffLL,0LL,"--traditional-cpp",NULL);
	create_implies_item(O__traditional_cpp, 58, "-traditional-cpp");
	create_option_info(861,0xfffffffLL,0LL,"--traditional",NULL);
	create_implies_item(O__traditional, 59, "-traditional");
	create_option_info(862,0xfffffffLL,0LL,"--trace-includes",NULL);
	create_implies_item(O__trace_includes, 828, "-H");
	create_option_info(863,0xfffffffLL,0LL,"--target",NULL);
	create_implies_item(O__target, 582, "-b%s");
	create_option_info(864,0x27LL,0x1000f0000000000LL,"--sysroot",NULL);
	create_implies_item(O__sysroot__, 233, "-isysroot %D");
	create_implies_item(O__sysroot__, 864, "--sysroot %D");
	create_option_info(865,0xfffffffLL,0LL,"--symbolic",NULL);
	create_implies_item(O__symbolic, 61, "-symbolic");
	create_option_info(866,0x1eLL,0x1000f0000000000LL,"--static",NULL);
	create_implies_item(O__static, 866, "--static");
	create_option_info(867,0xfffffffLL,0LL,"--specs=",NULL);
	create_implies_item(O__specsQ, 81, "-specs=%s");
	create_option_info(868,0xfffffffLL,0LL,"--specs",NULL);
	create_implies_item(O__specs, 81, "-specs=%s");
	create_option_info(869,0xfffffffLL,0LL,"--shared",NULL);
	create_implies_item(O__shared, 90, "-shared");
	create_option_info(870,0xfffffffLL,0LL,"--save-temps",NULL);
	create_implies_item(O__save_temps, 91, "-save-temps");
	create_option_info(871,0xfffffffLL,0LL,"--profile",NULL);
	create_implies_item(O__profile, 129, "-p");
	create_option_info(872,0xfffffffLL,0LL,"--print-search-dirs",NULL);
	create_implies_item(O__print_search_dirs, 103, "-print-search-dirs");
	create_option_info(873,0xfffffffLL,0LL,"--print-prog-name=",NULL);
	create_implies_item(O__print_prog_nameQ, 104, "-print-prog-name=%s");
	create_option_info(874,0xfffffffLL,0LL,"--print-prog-name",NULL);
	create_implies_item(O__print_prog_name, 104, "-print-prog-name=%s");
	create_option_info(875,0xfffffffLL,0LL,"--print-multi-lib",NULL);
	create_implies_item(O__print_multi_lib, 105, "-print-multi-lib");
	create_option_info(876,0xfffffffLL,0LL,"--print-missing-file-dependencies",NULL);
	create_implies_item(O__print_missing_file_dependencies, 802, "-MG");
	create_option_info(877,0xfffffffLL,0LL,"--print-libgcc-file-name",NULL);
	create_implies_item(O__print_libgcc_file_name, 107, "-print-file-name=libgcc.a");
	create_option_info(878,0xfffffffLL,0LL,"--print-file-name=",NULL);
	create_implies_item(O__print_file_nameQ, 107, "-print-file-name=%s");
	create_option_info(879,0xfffffffLL,0LL,"--print-file-name",NULL);
	create_implies_item(O__print_file_name, 107, "-print-file-name=%s");
	create_option_info(880,0xfffffffLL,0LL,"--preprocess",NULL);
	create_implies_item(O__preprocess, 837, "-E");
	create_option_info(881,0xfffffffLL,0LL,"--pipe",NULL);
	create_implies_item(O__pipe, 109, "-pipe");
	create_option_info(882,0xfffffffLL,0LL,"--pedantic-errors",NULL);
	create_implies_item(O__pedantic_errors, 119, "-pedantic-errors");
	create_option_info(883,0xfffffffLL,0LL,"--pedantic",NULL);
	create_implies_item(O__pedantic, 120, "-pedantic");
	create_option_info(884,0xfffffffLL,0LL,"--output",NULL);
	create_implies_item(O__output, 134, "-o %s");
	create_option_info(885,0xfffffffLL,0LL,"--optimize",NULL);
	create_implies_item(O__optimize, 795, "-O");
	create_option_info(886,0x1eLL,0x1000f0000000000LL,"--no-whole-archive",NULL);
	create_implies_item(O__no_whole_archive, 886, "--no-whole-archive");
	create_option_info(887,0xfffffffLL,0LL,"--no-warnings",NULL);
	create_implies_item(O__no_warnings, 39, "-w");
	create_option_info(888,0xfffffffLL,0LL,"--no-standard-libraries",NULL);
	create_implies_item(O__no_standard_libraries, 135, "-nostdlib");
	create_option_info(889,0xfffffffLL,0LL,"--no-standard-includes",NULL);
	create_implies_item(O__no_standard_includes, 137, "-nostdinc");
	create_option_info(890,0xfffffffLL,0LL,"--no-line-commands",NULL);
	create_implies_item(O__no_line_commands, 783, "-P");
	create_option_info(891,0xfffffffLL,0LL,"--library-directory",NULL);
	create_implies_item(O__library_directory__, 815, "-L%D");
	create_option_info(892,0xfffffffLL,0LL,"--include-with-prefix-before",NULL);
	create_implies_item(O__include_with_prefix_before__, 229, "-iwithprefixbefore %D");
	create_option_info(893,0xfffffffLL,0LL,"--include-with-prefix",NULL);
	create_implies_item(O__include_with_prefix__, 230, "-iwithprefix %D");
	create_option_info(894,0xfffffffLL,0LL,"--include-prefix",NULL);
	create_implies_item(O__include_prefix, 235, "-iprefix %s");
	create_option_info(895,0xfffffffLL,0LL,"--include-directory-after",NULL);
	create_implies_item(O__include_directory_after__, 243, "-idirafter %D");
	create_option_info(896,0xfffffffLL,0LL,"--include-directory",NULL);
	create_implies_item(O__include_directory__, 823, "-I%D");
	create_option_info(897,0xfffffffLL,0LL,"--include-barrier",NULL);
	create_implies_item(O__include_barrier, 822, "-I-");
	create_option_info(898,0xfffffffLL,0LL,"--include",NULL);
	create_implies_item(O__include, 239, "-include %s");
	create_option_info(899,0xfffffffLL,0LL,"--imacros",NULL);
	create_implies_item(O__imacros, 240, "-imacros %s");
	create_option_info(900,0xfffffffLL,0LL,"--help","print list of possible options");
	create_option_info(901,0xfffffffLL,0LL,"--force-link",NULL);
	create_implies_item(O__force_link, 2, "-u %s");
	create_option_info(902,0xfffffffLL,0LL,"--extra-warnings",NULL);
	create_implies_item(O__extra_warnings, 766, "-W");
	create_option_info(903,0xfffffffLL,0LL,"--dumpversion",NULL);
	create_implies_item(O__dumpversion, 519, "-dumpversion");
	create_option_info(904,0xfffffffLL,0LL,"--dependencies",NULL);
	create_implies_item(O__dependencies, 808, "-M");
	create_option_info(905,0xfffffffLL,0LL,"--define-macro",NULL);
	create_implies_item(O__define_macro, 840, "-D%s");
	create_option_info(906,0xfffffffLL,0LL,"--debug",NULL);
	create_implies_item(O__debug, 278, "-g");
	create_option_info(907,0xfffffffLL,0LL,"--compile",NULL);
	create_implies_item(O__compile, 578, "-c");
	create_option_info(908,0xfffffffLL,0LL,"--comments",NULL);
	create_implies_item(O__comments, 847, "-C");
	create_option_info(909,0xfffffffLL,0LL,"--assert",NULL);
	create_implies_item(O__assert, 849, "-A%s");
	create_option_info(910,0xfffffffLL,0LL,"--assemble",NULL);
	create_implies_item(O__assemble, 776, "-S");
	create_option_info(911,0xfffffffLL,0LL,"--ansi",NULL);
	create_implies_item(O__ansi, 591, "-ansi");
	create_option_info(912,0xfffffffLL,0LL,"--all-warnings",NULL);
	create_implies_item(O__all_warnings, 761, "-Wall");
	create_option_info(913,0xfffffffLL,0LL,"--",NULL);
	create_option_info(914,0xfffffffLL,0LL,"-###","Like -v, only nothing is run and args are quoted");
	create_implies_item(O_PPP, 914, "-###");
	create_option_info(915,0xfffffffLL,0xff0LL,"-",NULL);
}

