
x86 Open64 4.2.2.2 Release Notes 


               August 28, 2009


1. Overview

2. Resolved Issues

3. Features

4. The Packages of the Compiler Suite

5. Supported Operating Systems

6. Installing the Compiler Suite
  6.1 Install from bz2 Package
  6.2 Install from RPM packages

7. Bug Reporting and Support

8. Known Issues and Limitations


1. Overview
===========

 This is version 4.2.2.2 of the x86 Open64 compiler suite. It is a bug fix and
 maintenance release for version 4.2.2.

 x86 Open64 is an open source, optimizing compiler for 32-bit (x86) and
 64-bit (x86-64) achitectures. x86 Open64 supports Fortran 77/90/95, C (C89
 and C99 with GNU extensions), and C++ (C++98 with GNU extensions), as well as
 the shared memory programming model OpenMP (version 2.5).

 The compiler source code and instrumentation library (libinstr) are released
 under GPL v2. Libraries intended for redistribution are licensed under
 LGPL v2.1. These libraries include libffio, libfortran, libhugetlbfs, libmv,
 libopen64rt, libopen64rt_shared, and libopenmp.

 The libacml_mv runtime library, used automatically for certain optimizations,
 is provided in binary form at this time. The Software License Agreement is
 detailed in the file LICENSE-LIBACML_MV.



2. Issues Resolved in x86 Open64 4.2.2.2
========================================

2.1 Issues Resolved in version 4.2.2.2
--------------------------------------

 o The OpenMP runtime library (libopenmp) has been updated with several
   performance and correctness improvements.

   The library now respects the following environment variable controls:

   O64_OMP_SET_AFFINITY (TRUE or FALSE)
   When TRUE, the operating system's affinity mechanism (where available) is
   used to assign OpenMP threads to CPUs, otherwise no affinity assignments
   are made. The default value is TRUE.

   O64_OMP_SPIN_COUNT (Integer Value)
   O64_OMP_SPIN_COUNT takes a numeric value and sets the number of times that
   the spin loops will spin at user-level before falling back to O/S schedule/
   reschedule mechanisms. The default value is 20000. If there are more active
   threads than processors and this is set very high, then the thread
   contention will typically cause a performance drop. Synchronization using
   the O/S schedule and reschedule mechanisms is significantly more expensive
   but frees up execution resources for other threads.

   O64_SPIN_USER_LOCK (TRUE or FALSE)
   O64_SPIN_USER_LOCK specifies whether or not to use user-level spin
   mechanism for OpenMP locks. By default it is FALSE, where pthread mutexes
   are used for OpenMP locks.

 o The explicit dependency on using the bash shell to build from source has
   been removed.


2.2 Issues Resolved in version 4.2.2.1
--------------------------------------

 o The automatic CPU detection in the x86 Open64 driver now recognizes the
   the Intel(R) Core(TM) i7 CPU and uses the included 'wolfdale.so' target
   description module.

 o Building a program for the generic 'i386' target no longer results in the
   error:

     /usr/bin/ld: cannot find -lacml_mv
     collect2: ld returned 1 exit status

 o The automatic CPU detection in the x86 Open64 driver now recognizes the
   the Intel(R) Core(TM) i7 CPU and uses the included 'wolfdale.so' target
   description module.

 o The combination of '-g' and '-ipa' (or an option that implies IPA
   compilation, such as '-Ofast') in the link command is now accepted.

 o Shared object versions of the OpenMP runtime library (libopenmp.so) and
   legacy vector math library (libmv.so) are now included.

 o A front-end issue that caused increased compilation time for C/C++ programs
   has been fixed.

 o As a result of extensive testing with language and compiler regression test
   suites, benchmark suites, and many libraries and applications; several
   internal compiler errors and assertions have been fixed. A few cases of
   incorrect code generation with aggressive optimization have also been found
   and fixed.

   For information on some of the code that the x86 Open64 compiler is tested
   with, please see the "Applications and Libraries Built by x86 Open64" link
   at http://developer.amd.com/cpu/open64.



3. New Features in x86 Open64 4.2.2
===================================

 o Support for 2 MB huge pages.

 o Improved loop fusion and loop unrolling.

 o Improved head/tail duplication, if-merging, scalar replacement and
   constant folding optimizations.

 o Improved interprocedural alias analysis.

 o Improved partial inlining and inlining of virtual functions.

 o More aggressive re-layout optimization for structure members.

 o Improved instruction selection and instruction scheduling.

 o Improved tuning of library functions.



4. The Packages of the Compiler Suite
=====================================

 This compiler is available in both binary and source-code forms.

 o x86_open64-4.2.2.2-1.src.tar.bz2

   This package contains the compiler's source code. To unpack the source, use
   the command:

     tar xjvf x86_open64-4.2.2.2-1.src.tar.bz2

   For instructions on how to build the compiler from source, see the included
   INSTALL file.

 o x86_open64-4.2.2.2-1.x86_64.tar.bz2

   This package contains the binary code for x86-64 machines.

   The compiler is built on an x86-64-based system running SUSE Linux
   Enterprise Server (SLES) 10 with SP2 installed. We use the system
   compilers (GCC 4.1.2) to build the compiler components and a prebuilt
   binary release of the Open64 compiler, version 4.2.1, to build the
   libraries. The Open64 4.2.1 release can be downloaded from
   http://www.open64.net.

 o x86_open64-4.2.2.2-1.x86_64.rpm

   This package contains the same binaries as the tar.bz2 package in RPM form.



5. Supported Operating Systems
==============================

 The two binary packages,

 o x86_open64-4.2.2.2-1.x86_64.tar.bz2
 o x86_open64-4.2.2.2-1.x86_64.rpm

 are tested and validated on 64-bit Linux systems running:

 o SUSE Linux Enterprise Server (SLES) 10 with SP2
 o Red Hat Enterprise Linux (RHEL) 5.3

 x86 Open64 compilers make use of the system GCC compilers. This release is
 interoperable with GCC 4.1.x and GCC 4.2.x.

 Example packages that supply a compatible version of gcc are:

 o gcc-4.1.2_20070115-0.22 (SLES 10 with SP2)
 o gcc-4.1.2-44.el5 (RHEL 5.3)


6. Installing the Compiler Suite
================================

6.1 Install from bz2 Package
----------------------------

 To install the compiler from the bz2 package:

 o Expand x86_open64-4.2.2.2-1.x86_64.tar.bz2 with the command:

   tar xjvf x86_open64-4.2.2.2-1.x86_64.tar.bz2

 o If desired, move the x86_open64-4.2.2.2 directory to the final
   installation location using the 'mv' command.

   The C, C++, FORTRAN compilers are now available in the 'bin'
   subdirectory.


6.2 Install from RPM Package
----------------------------

 Normally you must have superuser privileges to install RPM packages.

 To install the compiler from RPM:

 $ rpm -ivh x86_open64-4.2.2.2-1.x86_64.rpm

 This command will install the x86 Open64 compiler to
 /opt/x86_open64-4.2.2.2. The C, C++, FORTRAN compilers are in folder
 /opt/x86_open64-4.2.2.2/bin.

 To install the compiler to another location:

 $ rpm --prefix=/path/to/folder -ivh x86_open64-4.2.2.2-1.x86_64.rpm

 Then the compiler will be installed to /path/to/folder.



7. Bug Reporting and Support
============================

 To report a bug or get help with the binary releases, please see the Support
 section on http://developer.amd.com/cpu/open64.

 Bug reports should include these items in order to be reproduced:

 o The compiler release version.

 o System details -- the OS, GCC version, libc, etc.

 o The compilation flags that trigger the bug.

 o The test file if applicable (it is highly appreciated if the test file is
   minimized).

 o The correct output of the test file.



8. Known Issues and Limitations
===============================

 o OpenMP (enabled by '-mp') support and Auto-Parallel optimization (enabled
   by '-apo') are not fully qualified and should be treated as preview
   features.

 o Fortran runtime error messages such as 'Subscript is out of range' may be
   incorrectly displayed as:

     Unable to find error message (check NLSPATH, file lib.cat)

   This problem will be resolved in a future release.

 o The x86 Open64 compiler ABI is designed to be compatible with the GNU ABI.
   However, recently an ABI incompatibility has been uncovered.

   The 64-bit ABI used by gcc assumes that the high order 32 bits in %rax are
   undefined for a function that returns a 32-bit quantity; thus the caller
   is responsible for converting %eax into a 64-bit value when the result is
   used as an operand to a 64-bit operation.
 
   The ABI used by the Open64 compiler assumes that a function that returns a
   32-bit value will produce a 64-bit extended result in %rax; thus no
   conversion is needed when the result is used in a 64-bit operation.
 
   In practice this incompatibility will produce bad results in rare
   situations. This issue will be addressed in a future release of the
   x86 Open64 compiler.



