###############################################################################
# Department of Computer Science, University of Houston,
# High Performance Computing and Tools Research Group 
#
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
###############################################################################
pluginName=Open64 Managed Builder UI
providerName=Eclipse.org

# The Wizards
MngFortranWizard.name=Managed Make Fortran Project
MngFortranWizard.description=Create a new Fortran project and let Eclipse create and manage the makefile

#The property pages
MngBuildProp.name=Build Configuration
MngOtherProp.name= Error/Binary Parsers

#The Resource Property page
MngResourceProp.name=Build Configuration


# Build Model Names
TargetName.open64.fortran.linux.exe=Executable (Open64 Fortran)
TargetName.open64.csuite.linux.exe=Executable (Open64 C/C++)
TargetName.open64.fortran.linux.so=Shared Library (Open64 on Linux)
TargetName.open64.fortran.linux.lib=Static Library (Open64 on Linux)

# Default Configuration Names
ConfigName.Rel=Release
ConfigName.Dbg=Debug
ConfigName.Fompisingle=Fompi (Default)
ConfigName.Fompimulti=Fompi (Inter-procedural Analysis)

# Generic tool-chain names
ToolChainName.Rel=GCC Tool Chain
ToolChainName.Dbg=GCC Tool Chain
ToolChainName.Fompisingle=GCC Tool Chain
ToolChainName.Fompimulti=GCC Tool Chain

# Generic platform names
PlatformName.Rel=Release Platform
PlatformName.Dbg=Debug Platform
PlatformName.Fompisingle=Fompi Single Platform
PlatformName.Fompimulti=Fompi Multi Platform

# Generic builder names
BuilderName.Rel=Gnu Make
BuilderName.Dbg=Gnu Make
BuilderName.Fompisingle=Gnu Make
BuilderName.Fompimulti=Gnu Make

# Open64 tool names
ToolName.compiler.open64.fortran = Open64 Fortran Compiler
ToolName.linker.open64.fortran = Open64 Fortran Linker
ToolName.compiler.open64.csuite = Open64 C/C++ Compiler
ToolName.linker.open64.csuite = Open64 C/C++ Linker

# Generic Category Names
OptionCategory.Source = Source
OptionCategory.Symbols = Symbols
OptionCategory.Preproc = Preprocessor
OptionCategory.Dirs = Directories
OptionCategory.General = General
OptionCategory.Optimize=Optimization
OptionCategory.Debug=Debugging
OptionCategory.Warn=Warnings
OptionCategory.Misc=Miscellaneous
OptionCategory.Libs=Libraries
OptionCategory.Shared.Settings=Shared Library Settings
OptionCategory.Multiproc=Multi-Processing
OptionCategory.LNOpt=Loop Nest Optimization
OptionCategory.Interproc=Interprocedural Optimization
OptionCategory.Command=Command Line
OptionCategory.Codegen=Code Generation

# Generic Option Names
Option.Posix.PreprocOnly=Preprocess only (-E)
Option.Posix.Nostdinc=Do not search system directories (-nostdinc)

Option.Posix.DefSym=Defined symbols (-D)
Option.Posix.UndefSym=Undefined symbols (-U)

Option.Posix.InclPaths=Include paths (-I)
Option.Posix.InclLibs=Include libraries (-L)

Option.Posix.OptLevel=Optimization Level
Option.Posix.Optimize.Nothing=None
Option.Posix.Optimize.None=No optimization (-O0)
Option.Posix.Optimize.Optimize=Optimize (-O1)
Option.Posix.Optimize.More=Optimize more (-O2)
Option.Posix.Optimize.Most=Optimize most (-O3)
Option.Posix.Optimize.Flags=Other optimization flags

Option.Posix.DebugLevel=Debug Level
Option.Posix.Debug.None=None
Option.Posix.Debug.Min=Minimal (-g1)
Option.Posix.Debug.Def=Default (-g)
Option.Posix.Debug.Max=Maximum (-g3)
Option.Posix.Debug.Other=Other debugging flags
Option.Posix.Debug.gprof=Generate gprof information (-pg)
Option.Posix.Debug.prof=Generate prof information (-p)

Option.Posix.Warn.Syntax=Check syntax only (-fsyntax-only)
Option.Posix.Warn.Pedandic=Pedantic (-pedantic)
Option.Posix.Warn.PedErrors=Pedantic warnings as errors (-pedantic-errors)
Option.Posix.Warn.nowarn=Inhibit all warnings (-w)
Option.Posix.Warn.allwarn=All warnings (-Wall)
Option.Posix.Warn.toerrs=Warnings as errors (-Werror)

Option.Posix.Verbose=Verbose (-v)
Option.Posix.TriHash=Like Verbose, no compile (-###)
Option.OtherFlags=Other flags
Option.Posix.Ansi=Support ANSI programs (-ansi)
Option.Posix.Version=Show compiler version; no compile (-version)
Option.Posix.Help=Print possible options; no compile (-help)

Option.Posix.Linker.NoStartFiles=Do not use standard start files (-nostartfiles)
Option.Posix.Linker.NoDefLibs=Do not use default libraries (-nodefaultlibs)
Option.Posix.Linker.NoStdLibs=No startup or default libs (-nostdlib)
Option.Posix.Linker.Strip=Omit all symbol information (-s)
Option.Posix.Linker.Strip.debug=Omit debug symbol information (-S)
Option.Posix.Linker.Static=No shared libraries (-static)
Option.Posix.Linker.XLinker=Other options (-Xlinker [option])
Option.Posix.Linker.Flags=Linker flags
Option.Posix.Libs=Libraries (-l)
Option.Posix.Libsearch=Library search path (-L)
Option.Posix.UserObjs=Other objects
Option.Posix.Linker.Shared=Shared (-shared)
Option.Posix.Linker.SOName=Shared object name (-Wl,-soname=)
Option.Posix.Linker.Implib=Import Library name (-Wl,--out-implib=)
Option.Posix.Linker.Defname=DEF file name (-Wl,--output-def=)

Option.Posix.Archiver.Flags=Archiver flags

Option.Gnu.Assembler.Flags=Assembler flags
Option.Gnu.Assembler.warn.suppress=Suppress warnings (-W)
Option.Gnu.Assembler.version=Announce version (-v)

# Open64 compiler specific option names
Option.OPEN64.Source.extension=Source file extension
Option.OPEN64.Source.fixedform=Set Fortran 90 fixed form (-fixedform)
Option.OPEN64.Source.collevel=Source statement lengths
Option.OPEN64.Source.none=none
Option.OPEN64.Source.col120=120 columns (-col120)
Option.OPEN64.Source.col72=72 columns (-col72)
Option.OPEN64.Source.col80=80 columns (-col80)
Option.OPEN64.Codegen.intrinsic=Add intrinsic (-intrinsic=[n])
Option.OPEN64.Codegen.nointrinsic=Remove intrinsic (-no-intrinsic=[n])
Option.OPEN64.Codegen.fpic=Generate position independent code (-fpic)
Option.OPEN64.Codegen.nofpic=Do not Generate position independent code (-fno-pic)
Option.OPEN64.Codegen.ff77=Use idiomatic UNIX FORTRAN 77 (-ff77)
Option.OPEN64.Codegen.ff90=Allow Fortran 90 constructs (-ff90)
Option.OPEN64.Codegen.ffastmath=Improve FP speed; violates ansi and IEEE (-ffast-math)
Option.OPEN64.Codegen.noffastmath=Use ansi and IEEE rules; degrades speed (-fno-fast-math)
Option.OPEN64.Codegen.ansi=Strict ansi and standard intrinsics only (-ansi)
Option.OPEN64.Codegen.ffaststdlib=Use faster version of standard lib (-ffast-stdlib)
Option.OPEN64.Codegen.noffaststdlib=Do not use faster version of standard lib (-fno-fast-stdlib)
Option.OPEN64.Codegen.staticdata=Treat local data as static (-static-data)
Option.OPEN64.Codegen.staticlibgcc=Force use of static libgcc (-static-libgcc)
Option.OPEN64.Optimize.inline=Request inline processing (-INLINE)
Option.OPEN64.Optimize.march=Set cpu type (-march=[n])
Option.OPEN64.Optimize.mcmodel=Set the memory model to use (-mcmodel=[n])
Option.OPEN64.Optimize.mx87=Specify precision of x87 floating-point calculations
Option.OPEN64.Optimize.optspace=Optimize for space (-Os)
Option.OPEN64.Optimize.m32opt=Compile for 32-bit ABI (-m32)
Option.OPEN64.Optimize.m64opt=Compile for 64-bit ABI (-m64)
Option.OPEN64.Optimize.m3dnow=Enable 3Dnow extensions (-m3dnow)
Option.OPEN64.Optimize.nom3dnow=Disable 3Dnow extensions (-mno-3dnow)
Option.OPEN64.Optimize.mmmx=Enable MMX extensions (-mmmx)
Option.OPEN64.Optimize.nommmx=Disable MMX extensions (-mno-mmx)
Option.OPEN64.Optimize.msse=Enable SSE extensions (-msse)
Option.OPEN64.Optimize.nosse=Disable SSE extensions (-mno-sse)
Option.OPEN64.Optimize.msse2=Enable SSE2 extensions (-msse2)
Option.OPEN64.Optimize.nosse2=Disable SSE2 extensions (-mno-sse2)
Option.OPEN64.Optimize.msse3=Enable SSE3 extensions (-msse3)
Option.OPEN64.Optimize.nosse3=Disable SSE3 extensions (-mno-sse3)
Option.OPEN64.Optimize.pthread=Compile with pthreads support (-pthread)
Option.OPEN64.Multiproc.openmp=OpenMP (-mp)
Option.OPEN64.Multiproc.mpchunk=Set MP chunksize (-chunk=[n])
Option.OPEN64.Multiproc.apo=Auto-Parallelization (-APO)
Option.OPEN64.Preproc.preproclevel=Preprocessor Levels
Option.OPEN64.Preproc.none=none
Option.OPEN64.Preproc.noproc=Inhibit cpp (-nocpp)
Option.OPEN64.Preproc.cpp=C Preprocessor (-cpp)
Option.OPEN64.Preproc.eproc=Run cpp, send output to std.out (-E)
Option.OPEN64.Preproc.mproc=Run cpp, print make dependencies (-M)
Option.OPEN64.Preproc.wp=Pass comma seperated opts to preprocessor (-wp,[n])
Option.OPEN64.Preproc.nc=Set max number of continuation lines (-NC=[n])
Option.OPEN64.Preproc.i4=Set integer/locgical quantities long (4 bytes) (-i4)
Option.OPEN64.Preproc.i8=Set integer/locgical quantities long long (8 bytes) (-i8)
Option.OPEN64.Source.fixed=Fixed source format (-fixedform)
Option.OPEN64.Source.free=Free source format (-freeform)
Option.OPEN64.Debug.level=Debug Levels
Option.OPEN64.Debug.none=None
Option.OPEN64.Debug.full=Full Debug Info (-g)
Option.OPEN64.Debug.nodebug=No Debug Info (-g0)
Option.OPEN64.Debug.cdebug=Info for C preprocessor macros (-g3)
Option.OPEN64.Debug.dwarfdebug=DWARF v.2 Debug Info (-gdwarf-2)
Option.OPEN64.Debug.dwarfdebug0=DWARF 2, level 0 (-gdwarf-20)
Option.OPEN64.Debug.dwarfdebug1=DWARF 2, level 1 (-gdwarf-21)
Option.OPEN64.Debug.dwarfdebug2=DWARF 2, level 2 (-gdwarf-22)
Option.OPEN64.Debug.dwarfdebug3=DWARF 2, level 3 (-gdwarf-23)
Option.OPEN64.Debug.ggdebug=GDB debug info (-ggdb)
Option.OPEN64.Debug.ggdebug3=GDB debug info (-ggdb3)
Option.OPEN64.Debug.showlevel=Show Levels
Option.OPEN64.Debug.shownone=None
Option.OPEN64.Debug.showdefault=Show default options (-show-defaults)
Option.OPEN64.Debug.show0=Show phases, don't invoke (-show0)
Option.OPEN64.Debug.showt=Show time in each phase (-showt)
Option.OPEN64.Debug.runcheck=Runtime subscript checking (-A)
Option.OPEN64.Warn.optwarn=Warning Levels
Option.OPEN64.Warn.warnnone=None
Option.OPEN64.Warn.nonamewarn=Inhibit named warnings (-woff)
Option.OPEN64.Warn.nowarn=Inhibit all warnings (-woffall)
Option.OPEN64.Warn.nooptwarn=Inhibit option warnings (-woffoptions)
Option.OPEN64.Warn.allwarn=Accept all warnings (-fullwarn)
Option.OPEN64.Warn.uninwarn=Warn about uninitialized automatic variables
Option.OPEN64.Source.openmp=OpenMP (-mp)
Option.OPEN64.Interproc.ipa=Interprocedural Analysis/Optimization (-IPA)
Option.OPEN64.Misc.copy=Show copyright info; no compile (-copyright)
Option.OPEN64.Misc.dump=Show compiler's target machine; no compile (-dumpmachine)
Option.OPEN64.Command.cmd=Any Additional Options

# Open64 General Optimization Options
Option.OPEN64.Optimize.aliascraypointerlevel=Cray pointer aliasing model, alias=
Option.OPEN64.Optimize.aliasnone=default
Option.OPEN64.Optimize.aliascraypointer=cray_pointer
Option.OPEN64.Optimize.aliasnocraypointer=no_cray_pointer
Option.OPEN64.Optimize.aliasdisjoint=Improve alias analysis, alias=disjoint
Option.OPEN64.Optimize.aliasparmlevel=Parameters do not alias to other variables, alias=
Option.OPEN64.Optimize.aliasparmnone=default
Option.OPEN64.Optimize.aliasparm=parm
Option.OPEN64.Optimize.aliasparmno=no_parm
Option.OPEN64.Optimize.cislevel=Convert SIN/COS pairs to single call, cis=
Option.OPEN64.Optimize.cisnone=default
Option.OPEN64.Optimize.cison=on
Option.OPEN64.Optimize.cisoff=off
Option.OPEN64.Optimize.crayivdeplevel=Ignore vector dependencies of IVDEP, cray_ivdep=
Option.OPEN64.Optimize.crayivdepnone=default
Option.OPEN64.Optimize.crayivdepon=on
Option.OPEN64.Optimize.crayivdepoff=off
Option.OPEN64.Optimize.divsplitlevel=Calculate x/y as x*(1.0/y), div_split=
Option.OPEN64.Optimize.divsplitnone=default
Option.OPEN64.Optimize.divspliton=on
Option.OPEN64.Optimize.divsplitoff=off
Option.OPEN64.Optimize.fastbitintrinsicslevel=Removes bit count check, fast_bit_intrinsics=
Option.OPEN64.Optimize.fastbitintrinsicsnone=default
Option.OPEN64.Optimize.fastbitintrinsicson=on
Option.OPEN64.Optimize.fastbitintrinsicsoff=off
Option.OPEN64.Optimize.fastcomplexlevel=Fast calculations for complex values, fast_complex=
Option.OPEN64.Optimize.fastcomplexnone=default
Option.OPEN64.Optimize.fastcomplexon=on
Option.OPEN64.Optimize.fastcomplexoff=off
Option.OPEN64.Optimize.fastexplevel=Optimization of exponentiation, fast_exp=
Option.OPEN64.Optimize.fastexpnone=default
Option.OPEN64.Optimize.fastexpon=on
Option.OPEN64.Optimize.fastexpoff=off
Option.OPEN64.Optimize.fastnintlevel=Use hardware to implement NINT/ANINT, fast_nint=
Option.OPEN64.Optimize.fastnintnone=default
Option.OPEN64.Optimize.fastninton=on
Option.OPEN64.Optimize.fastnintoff=off
Option.OPEN64.Optimize.fastsqrtlevel=Calculate sqrt(x) = x*rsqrt(x), fast_sqrt=
Option.OPEN64.Optimize.fastsqrtnone=default
Option.OPEN64.Optimize.fastsqrton=on
Option.OPEN64.Optimize.fastsqrtoff=off
Option.OPEN64.Optimize.fasttrunclevel=Inline NINT, ANINT, AINT, and AMOD, fast_trunc=
Option.OPEN64.Optimize.fasttruncnone=default
Option.OPEN64.Optimize.fasttruncon=on
Option.OPEN64.Optimize.fasttruncoff=off
Option.OPEN64.Optimize.foldreassociatelevel=Optimize reassociation of floating point, fold_reassociate=
Option.OPEN64.Optimize.foldreassociatenone=default
Option.OPEN64.Optimize.foldreassociateon=on
Option.OPEN64.Optimize.foldreassociateoff=off
Option.OPEN64.Optimize.foldunsaferelopslevel=If int overflow, fold relational operators, fold_unsafe_relops=
Option.OPEN64.Optimize.foldunsaferelopsnone=default
Option.OPEN64.Optimize.foldunsaferelopson=on
Option.OPEN64.Optimize.foldunsaferelopsoff=off
Option.OPEN64.Optimize.foldunsignedrelopslevel=Fold unsigned relational operators, fold_unsigned_relops=
Option.OPEN64.Optimize.foldunsignedrelopsnone=default
Option.OPEN64.Optimize.foldunsignedrelopson=on
Option.OPEN64.Optimize.foldunsignedrelopsoff=off
Option.OPEN64.Optimize.gotcallconversionlevel=Load function addr to be moved from loops, got_call_conversion=
Option.OPEN64.Optimize.gotcallconversionnone=default
Option.OPEN64.Optimize.gotcallconversionon=on
Option.OPEN64.Optimize.gotcallconversionoff=off
Option.OPEN64.Optimize.ieeearithmeticlevel=Specify conformance level to ANSI/IEEE, IEEE_arithmetic=
Option.OPEN64.Optimize.ieeearithmeticnone=default
Option.OPEN64.Optimize.ieeearithmetic1=1 Full
Option.OPEN64.Optimize.ieeearithmetic2=2 Moderate
Option.OPEN64.Optimize.ieeearithmetic3=3 Little
Option.OPEN64.Optimize.ieeecomparisonslevel=Force comparisons to conform to ANSI/IEEE, IEEE_comparisons=
Option.OPEN64.Optimize.ieeecomparisonsnone=default
Option.OPEN64.Optimize.ieeecomparisonson=on
Option.OPEN64.Optimize.ieeecomparisonsoff=off
Option.OPEN64.Optimize.ieeenaninflevel=IEEE NaN/infinity operands must conform ANSI/IEEE, IEEE_NaN_inf=
Option.OPEN64.Optimize.ieeenaninfnone=default
Option.OPEN64.Optimize.ieeenaninfon=on
Option.OPEN64.Optimize.ieeenaninfoff=off
Option.OPEN64.Optimize.inlineintrinsicslevel=Turn intrinsics with lib func to call to func, inline_intrinsics=
Option.OPEN64.Optimize.inlineintrinsicsnone=default
Option.OPEN64.Optimize.inlineintrinsicson=on
Option.OPEN64.Optimize.inlineintrinsicsoff=off
Option.OPEN64.Optimize.liberalivdeplevel=Use UNICOS semantics on !DIR$ IVDEP directive, liberal_ivdep=
Option.OPEN64.Optimize.liberalivdepnone=default
Option.OPEN64.Optimize.liberalivdepon=on
Option.OPEN64.Optimize.liberalivdepoff=off
Option.OPEN64.Optimize.Olimit=Any routine larger than n will not be optimized, Olimit=[n]
Option.OPEN64.Optimize.padcommonlevel=Reorganize common blocks, pad_common=
Option.OPEN64.Optimize.padcommonnone=default
Option.OPEN64.Optimize.padcommonon=on
Option.OPEN64.Optimize.padcommonoff=off
Option.OPEN64.Optimize.reciplevel=Reorganize common blocks, recip=
Option.OPEN64.Optimize.recipnone=default
Option.OPEN64.Optimize.recipon=on
Option.OPEN64.Optimize.recipoff=off
Option.OPEN64.Optimize.reorgcommonlevel=Reorganize common blocks, reorg_common=
Option.OPEN64.Optimize.reorgcommonnone=default
Option.OPEN64.Optimize.reorgcommonon=on
Option.OPEN64.Optimize.reorgcommonoff=off
Option.OPEN64.Optimize.roundofflevel=Departure from floating point/roundoff/overflow semantics, roundoff=
Option.OPEN64.Optimize.roundoffnone=default
Option.OPEN64.Optimize.roundoff0=0 None
Option.OPEN64.Optimize.roundoff1=1 Little
Option.OPEN64.Optimize.roundoff2=2 More
Option.OPEN64.Optimize.roundoff3=3 Most
Option.OPEN64.Optimize.rsqrtlevel=Use faster, less accurate sqrt operations, rsqrt=
Option.OPEN64.Optimize.rsqrtnone=default
Option.OPEN64.Optimize.rsqrton=on
Option.OPEN64.Optimize.rsqrtoff=off
Option.OPEN64.Optimize.spacelevel=Select code space over execution time tradeoff, space=
Option.OPEN64.Optimize.spacenone=default
Option.OPEN64.Optimize.spaceon=on
Option.OPEN64.Optimize.spaceoff=off
Option.OPEN64.Optimize.speculativeptrdereflevel=Speculative loads of differing mem location, speculative_ptr_deref=
Option.OPEN64.Optimize.speculativeptrderefnone=default
Option.OPEN64.Optimize.speculativeptrderefon=on
Option.OPEN64.Optimize.speculativeptrderefoff=off
Option.OPEN64.Optimize.swplevel=Software pipelining, swp=
Option.OPEN64.Optimize.swpnone=default
Option.OPEN64.Optimize.swpon=on
Option.OPEN64.Optimize.swpoff=off
Option.OPEN64.Optimize.unrollanalysislevel=Analyze resource usage/recurrence in loops, unroll_analysis=
Option.OPEN64.Optimize.unrollanalysisnone=default
Option.OPEN64.Optimize.unrollanalysison=on
Option.OPEN64.Optimize.unrollanalysisoff=off
Option.OPEN64.Optimize.unrollsize=Max size of unrolled loop, unroll_size=[n]
Option.OPEN64.Optimize.unrolltimesmax=Max number of times to unroll loop, unroll_times_max=[n]
Option.OPEN64.Optimize.warninglevel=Warning messages from compiler about optimizations, warning=
Option.OPEN64.Optimize.warningnone=default
Option.OPEN64.Optimize.warningon=on
Option.OPEN64.Optimize.warningoff=off
Option.OPEN64.Optimize.wraparoundunsafeoptlevel=No induction var/lin-func replacement, wrap_around_unsafe_opt=
Option.OPEN64.Optimize.wraparoundunsafeoptnone=default
Option.OPEN64.Optimize.wraparoundunsafeopton=on
Option.OPEN64.Optimize.wraparoundunsafeoptoff=off

# Open64 LNO specific options
Option.OPEN64.LNOpt.lno=Loop Nest Optimization (-LNO) (requires -O3)
Option.OPEN64.LNOpt.autodistlevel=Dist. local arrays in parallel common blocks, auto_dist=
Option.OPEN64.LNOpt.autodistnone=default
Option.OPEN64.LNOpt.autodiston=on
Option.OPEN64.LNOpt.autodistoff=off
Option.OPEN64.LNOpt.fissionlevel=Loop fission, fission=
Option.OPEN64.LNOpt.fissionnone=default
Option.OPEN64.LNOpt.fission0=0 (Disable loop fission)
Option.OPEN64.LNOpt.fission1=1 (Enable fission)
Option.OPEN64.LNOpt.fission2=2 (Enable fission; use before fusion)
Option.OPEN64.LNOpt.fusionlevel=Loop fusion, fusion=
Option.OPEN64.LNOpt.fusionnone=default
Option.OPEN64.LNOpt.fusion0=0 (Disable loop fusion)
Option.OPEN64.LNOpt.fusion1=1 (Enable fusion)
Option.OPEN64.LNOpt.fusion2=2 (Specify out loop fusion)
Option.OPEN64.LNOpt.fusionpeellimit=Number of iterations peeled in fusion
Option.OPEN64.LNOpt.gatherscatterlevel=gather_scatter=
Option.OPEN64.LNOpt.gatherscatternone=default
Option.OPEN64.LNOpt.gatherscatter0=0 (Disable gatherscatter optimization)
Option.OPEN64.LNOpt.gatherscatter1=1 (Optimize non-nested IF statements)
Option.OPEN64.LNOpt.gatherscatter2=2 (Multi-level gatherscatter)
Option.OPEN64.LNOpt.ignorepragmaslevel=cmd line options override directives, ignore_pragmas=
Option.OPEN64.LNOpt.ignorepragmasnone=default
Option.OPEN64.LNOpt.ignorepragmason=on
Option.OPEN64.LNOpt.ignorepragmasoff=off
Option.OPEN64.LNOpt.localpadsize=Array dimesion padding (local_pad_size=n)
Option.OPEN64.LNOpt.nonblockingloadslevel=processor load blocking, non_blocking_loads=
Option.OPEN64.LNOpt.nonblockingloadsnone=default
Option.OPEN64.LNOpt.nonblockingloadson=on
Option.OPEN64.LNOpt.nonblockingloadsoff=off
Option.OPEN64.LNOpt.onivarlevel=outer loop hoisting onivar=
Option.OPEN64.LNOpt.onivarnone=default
Option.OPEN64.LNOpt.onivaron=on
Option.OPEN64.LNOpt.onivaroff=off
Option.OPEN64.LNOpt.outerlevel=outer loop fusion, outer=
Option.OPEN64.LNOpt.outernone=default
Option.OPEN64.LNOpt.outeron=on
Option.OPEN64.LNOpt.outeroff=off
Option.OPEN64.LNOpt.paralleloverhead=parallel_overhead=[num_cycles]
Option.OPEN64.LNOpt.purelevel=pure=
Option.OPEN64.LNOpt.purenone=default
Option.OPEN64.LNOpt.pure0=0 (Ignore PURE and !DIR$ NOSIDEEFFECTS)
Option.OPEN64.LNOpt.pure1=1 (Consider no globad data access) 
Option.OPEN64.LNOpt.pure2=2 (No global data access PURE/!DIR$ NOSIDEEFFECTS)
Option.OPEN64.LNOpt.vintrlevel=Vectorizable intrinsic math, vintr=
Option.OPEN64.LNOpt.vintrnone=default
Option.OPEN64.LNOpt.vintron=on
Option.OPEN64.LNOpt.vintroff=off
Option.OPEN64.LNOpt.blockinglevel=Cache blocking transformation, blocking=
Option.OPEN64.LNOpt.blockingnone=default
Option.OPEN64.LNOpt.blockingon=on
Option.OPEN64.LNOpt.blockingoff=off 
Option.OPEN64.LNOpt.blockingsize=blocking_size=[n]
Option.OPEN64.LNOpt.interchangelevel=Loop interchange optimization, interchange=
Option.OPEN64.LNOpt.interchangenone=default
Option.OPEN64.LNOpt.interchangeon=on
Option.OPEN64.LNOpt.interchangeoff=off  
Option.OPEN64.LNOpt.ou=unroll loops by n, ou=[n]
Option.OPEN64.LNOpt.oudeeplevel=Outer unrolling of wind-down loops, ou_deep=
Option.OPEN64.LNOpt.oudeepnone=default
Option.OPEN64.LNOpt.oudeepon=on
Option.OPEN64.LNOpt.oudeepoff=off 
Option.OPEN64.LNOpt.oufurther=ou_further=[n]
Option.OPEN64.LNOpt.oumax=unroll n copies per loop, ou_max=[n]
Option.OPEN64.LNOpt.ouprodmax=product of loop unrolling cannot exceed n, ou_prod_max=[n]

# Open64 IPA specific options
Option.OPEN64.Interproc.addressinglevel=Analysis of address operator usage, addressing=
Option.OPEN64.Interproc.addressingnone=default
Option.OPEN64.Interproc.addressingon=on (requires alias=ON)
Option.OPEN64.Interproc.addressingoff=off
Option.OPEN64.Interproc.aggrcproplevel=Aggressive interprocedural constant propagation, aggr_cprop=
Option.OPEN64.Interproc.aggrcpropnone=default
Option.OPEN64.Interproc.aggrcpropon=on
Option.OPEN64.Interproc.aggrcpropoff=off
Option.OPEN64.Interproc.aliaslevel=Alias/mod/ref analysis, alias=
Option.OPEN64.Interproc.aliasnone=default
Option.OPEN64.Interproc.aliason=on
Option.OPEN64.Interproc.aliasoff=off
Option.OPEN64.Interproc.autognumlevel=Determine optimal value of the -Gnum option, autognum=
Option.OPEN64.Interproc.autognumnone=default
Option.OPEN64.Interproc.autognumon=on
Option.OPEN64.Interproc.autognumoff=off
Option.OPEN64.Interproc.cgilevel=Constant global variable identification, cgi=
Option.OPEN64.Interproc.cginone=default
Option.OPEN64.Interproc.cgion=on
Option.OPEN64.Interproc.cgioff=off
Option.OPEN64.Interproc.commonpadsize=Pad size for common block array dimensions, common_pad_size=
Option.OPEN64.Interproc.cproplevel=Interprocedural constant propagation, cprop=
Option.OPEN64.Interproc.cpropnone=default
Option.OPEN64.Interproc.cpropon=on
Option.OPEN64.Interproc.cpropoff=off
Option.OPEN64.Interproc.dfelevel=Dead function elimination, dfe=
Option.OPEN64.Interproc.dfenone=default
Option.OPEN64.Interproc.dfeon=on
Option.OPEN64.Interproc.dfeoff=off
Option.OPEN64.Interproc.dvelevel=Dead variable elimination, dve=
Option.OPEN64.Interproc.dvenone=default
Option.OPEN64.Interproc.dveon=on
Option.OPEN64.Interproc.dveoff=off
Option.OPEN64.Interproc.echolevel=Echo compile and final link commands, echo=
Option.OPEN64.Interproc.echonone=default
Option.OPEN64.Interproc.echoon=on
Option.OPEN64.Interproc.echooff=off
Option.OPEN64.Interproc.forcedepth=Inline depths, forcedepth=[n]
Option.OPEN64.Interproc.Gfactor=Percentage for GOT multiplication, Gfactor=[n]
Option.OPEN64.Interproc.Gnum=User specified Gnum, Gnum=[n]
Option.OPEN64.Interproc.Gspace=Bytes of data allocation (64 KB max), Gspace=[n]
Option.OPEN64.Interproc.gppartitionlevel=Partitioning for archiving GP-groups, gp_partition=
Option.OPEN64.Interproc.gppartitionnone=default
Option.OPEN64.Interproc.gppartitionon=on
Option.OPEN64.Interproc.gppartitionoff=off
Option.OPEN64.Interproc.inlinelevel=Inter-file subprogram inlining, inline=
Option.OPEN64.Interproc.inlinenone=default
Option.OPEN64.Interproc.inlineon=on
Option.OPEN64.Interproc.inlineoff=off
Option.OPEN64.Interproc.intrinsics=Number Fortran intrinsic functions in GOT, intrinsics=[n]
Option.OPEN64.Interproc.keeplightlevel=Prevent -keep from being sent to compiler, keeplight=
Option.OPEN64.Interproc.keeplightnone=default
Option.OPEN64.Interproc.keeplighton=on
Option.OPEN64.Interproc.keeplightoff=off
Option.OPEN64.Interproc.linearlevel=Linearization of array references, linear=
Option.OPEN64.Interproc.linearnone=default
Option.OPEN64.Interproc.linearon=on
Option.OPEN64.Interproc.linearoff=off
Option.OPEN64.Interproc.maplimit=Max bytes input files before sp_partition, map_limit=[n]
Option.OPEN64.Interproc.maxdepth=Inline functions at depth no more than n, maxdepth=[n]
Option.OPEN64.Interproc.maxjob=Max parallelism n simultaneous compilations, max_job=[n]
Option.OPEN64.Interproc.multiclone=Max clones from a single procedure, multi_clone=[n]
Option.OPEN64.Interproc.noadbloat=Show max percentage procedure growth, noad_bloat=[n]
Option.OPEN64.Interproc.picoptlevel=Perform PIC optimizations, picopt=
Option.OPEN64.Interproc.picoptnone=default
Option.OPEN64.Interproc.picopton=on
Option.OPEN64.Interproc.picoptoff=off
Option.OPEN64.Interproc.plimit=Stop inlining once IR size reaches n, plimit=[n]
Option.OPEN64.Interproc.reloptlevel=Optimization based on position dependant code, relopt=
Option.OPEN64.Interproc.reloptnone=default
Option.OPEN64.Interproc.relopton=on
Option.OPEN64.Interproc.reloptoff=off
Option.OPEN64.Interproc.space=Stop inlining when program size has increased by n%, space=[n]
Option.OPEN64.Interproc.sppartitionlevel=Partitioning for disk/address-saving, sp_partition=
Option.OPEN64.Interproc.sppartitionnone=default
Option.OPEN64.Interproc.sppartitionon=on
Option.OPEN64.Interproc.sppartitionoff=off
Option.OPEN64.Interproc.useintrinsiclevel=Intrinsic version of std lib functions, use_intrinsic=
Option.OPEN64.Interproc.useintrinsicnone=default
Option.OPEN64.Interproc.useintrinsicon=on
Option.OPEN64.Interproc.useintrinsicoff=off

# Open64 Linker specific option names
Option.OPEN64.General.relo=Produce a relocatable .o and stop (-r)
Option.OPEN64.General.pros=Produce a .s and stop (-S)
Option.OPEN64.General.openmp=OpenMP (-mp)
