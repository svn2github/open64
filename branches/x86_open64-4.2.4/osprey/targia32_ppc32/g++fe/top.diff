1c1
< /* 
---
> /*
3c3
<    File modified October 3, 2003 by PathScale, Inc. to update Open64 C/C++ 
---
>    File modified October 9, 2003 by PathScale, Inc. to update Open64 C/C++
86c86
< #ifdef SGI_MONGOOSE 
---
> #ifdef SGI_MONGOOSE
89d88
< #include "wfe_decl.h"
129a129,132
> #ifdef KEY
> extern void mark_referenced_funcs PARAMS ((tree));
> extern void gxx_emits_decl PARAMS ((tree));
> #endif /* KEY */
450c453
< 
---
>                                                                                  
451a455,457
> #ifdef KEY
> int pstatic_as_global = 1;
> #else
452a459
> #endif
719,721c726,727
< #ifdef SGI_MONGOOSE
< // Do not run the gnu inliner. It will create all sorts of STMT_EXPR nodes.
< int flag_no_inline = 1;
---
> #ifdef KEY
> int flag_no_inline = 1; // disable GNU inliner
724c730
< #endif /* SGI_MONGOOSE */
---
> #endif // KEY
729,732d734
< #ifdef SGI_MONGOOSE
< // Do not run the gnu inliner. It will create all sorts of STMT_EXPR nodes.
< int flag_really_no_inline = 1;
< #else
734d735
< #endif /* SGI_MONGOOSE */
787a789,793
> #ifdef KEY
> int key_exceptions;
> int opt_regions;
> #endif // KEY
> 
959c965
< /* Bug 8041: 
---
> /* Bug 8041:
1169a1176
> #ifndef KEY
1171a1179,1184
> #else
>   {"exceptions", &key_exceptions, 1,
>    N_("Enable exception handling") },
>   {"optimize-regions", &opt_regions, 1,
>    N_("Optimize EH region formation") },
> #endif
1729a1743
> 
1747d1760
< 
2098,2101d2110
< #ifdef SGI_MONGOOSE
<           /* TREE_ASM_WRITTEN is not set, so set by hand */
<           TREE_ASM_WRITTEN (decl) = 1;
< #endif /* SGI_MONGOOSE */
2235,2238d2243
< #ifdef KEY
< extern void WFE_Alias_Finish (void);
< #endif // KEY
< 
2255c2260
< 	aux_base_name = name ? name : "gccaux";
---
>         aux_base_name = name ? name : "gccaux";
2299,2301d2303
< #ifdef KEY
<   WFE_Alias_Finish ();
< #endif // KEY
2303c2305
< #ifndef SGI_MONGOOSE
---
> #ifndef KEY
2314c2316
< #endif /* SGI_MONGOOSE */
---
> #endif /* KEY */
2342d2343
< #ifndef SGI_MONGOOSE
2348d2348
< #endif /* SGI_MONGOOSE */
2358a2359,2362
>   /* Since open64 calls compile_file directly, we need to do finalization
>      here rather than in do_compile.  In fact, when SGI_MONGOOSE is
>      defined, do_compile only does initialization; it does not call
>      compile_file ().  */
2360c2364
<   
---
> 
2404a2409,2415
> #ifdef KEY
> 	// Put aliases into the list of decls emitted by g++ so that we can
> 	// iterate through the list when expanding aliases to WHIRL.  An An
> 	// alias can be expanded only if its target, which can be another
> 	// alias, is expanded.  Bug 4393.
> 	gxx_emits_decl (decl);
> #endif
2418d2428
< #ifndef SGI_MONGOOSE
2428d2437
< #endif /* SGI_MONGOOSE */
2438a2448,2452
> #ifdef KEY
> 	  // If a VAR_DECL's DECL_ASMREG is non-zero, then DECL_ASMREG-1 is the
> 	  // register number assigned through an "asm".
>           DECL_ASMREG(decl) = decode_reg_name (asmspec) + 1;
> #else
2439a2454
> #endif /* KEY */
2469d2483
< #ifndef KEY	// Fix Bug# 34
2479d2492
< #endif // !KEY
2510d2522
< #ifndef SGI_MONGOOSE
2515d2526
< #endif /* SGI_MONGOOSE */
2712d2722
< #ifndef SGI_MONGOOSE
2715d2724
< #endif /* SGI_MONGOOSE */
2739a2749,2752
> #ifdef KEY
>   goto turn_rtl_into_assembler_code;
> #endif
> 
2743c2756
<   if (((rtl_dump_and_exit || flag_syntax_only)
---
>   if (((rtl_dump_and_exit || flag_syntax_only) 
2745,2749c2758,2760
<       /* Will die in "instantiate_virtual_regs_1" if we
< 	 continue. so no return type warnings */
<       && !warn_return_type)
< #else
<      )
---
> 	/* Will die in "instantiate_virtual_regs_1" if we
>          continue. so no return type warnings */
> 	&& !warn_return_type
2751c2762
<       || errorcount || sorrycount)
---
>       ) || errorcount || sorrycount)
3746a3758,3785
> #ifdef KEY
>   // Run final() in order to find all the functions that are called from the
>   // current function.  The called functions will have their
>   // TREE_SYMBOL_REFERENCED flag set, which will cause those functions to be
>   // emitted.  This is the only way to emit functions that GCC defers emitting.
> 
>   turn_rtl_into_assembler_code:
> 
>   // Add the function to the list of functions to be emitted.  Emitting only
>   // the functions in the global namespace and the functions defined as methods
>   // within class definitions are not enough, because methods that are defined
>   // as standalone are missed, such as C::foo:
>   //   struct A {virtual void foo()=0;};
>   //   struct B {virtual void foo()=0;};
>   //   struct C : public A, public B {virtual void foo();};
>   //   void C::foo() {}
>   // Func_emitted_by_gxx is a catch-all for all functions that g++ turns into
>   // assembler.
>   //
>   // (Gxx_emits_funcs adds the function to the list of decls that are emitted
>   // by g++ into assembly.  The list is a hack to catch all such functions.
>   // The correct way is to find all the places where g++ decides that the
>   // function should be emitted, and then put the fndecl into the top-level
>   // namespace using pushdecl_top_level(fndecl).)
> 
>   gxx_emits_decl (decl);
> #endif
> 
3785a3825,3828
> #ifdef KEY
>     goto exit_rest_of_compilation;
> #endif
> 
4098c4141
< 	parse_tree_dump = 1;
---
>         parse_tree_dump = 1;
4100c4143
< 	dump_file[DFI_sgi_parse_tree].enabled = 1;
---
>         dump_file[DFI_sgi_parse_tree].enabled = 1;
4102c4145
< 	break;
---
>         break;
4404a4448,4450
> #ifndef KEY
> 	  // Debugging is handled by the WHIRL front-end. Ignore what Gnu
> 	  // has to say.
4406a4453
> #endif // KEY
4427a4475,4477
> #ifdef KEY
>               write_symbols = NO_DEBUG;
> #else
4430a4481
> #endif // KEY
4528c4579
< #endif // KEY
---
> #endif /* KEY */
4785,4791c4836,4837
< #ifdef KEY
<   fnotice (file, "ChangeSet %s (%s)\n", cset_rev, cset_key);
<   fnotice (file, "Built by %s@%s in %s\n", build_user, build_host, build_root);
<   fnotice (file, "Built on %s\n", build_date);
< #else
<   extern const char bk_cset_key[], bk_cset_rev[];
<   fnotice (file, "Revision %s (%s)\n", bk_cset_rev, bk_cset_key);
---
>   //extern const char bk_cset_key[], bk_cset_rev[];
>   //fnotice (file, "Revision %s (%s)\n", bk_cset_rev, bk_cset_key);
4795d4840
< #endif // KEY
4920a4966,4970
> #ifdef KEY
>   asm_out_file = fopen ("/dev/null", "w");
>   return;
> #endif  // KEY
> 
4949d4998
< #endif /* SGI_MONGOOSE */
4951d4999
< #ifndef SGI_MONGOOSE
5025d5072
< 
5126a5174,5177
> #ifndef KEY	// Disable gcc's sibling call optimization because it may
> 		// inline away some functions that kg++fe doesn't inline,
> 		// resulting in the code calling undefined functions under
> 		// kg++fe.  Bug 3397.
5127a5179
> #endif
5260,5263c5312,5320
< #ifdef KEY
<   // bug 5635: Disable it silently even if the user enabled -finline
<   flag_no_inline = 1;
< #endif /* KEY */
---
> #if 0
>   // undo fix of bug 2254
>   if (key_exceptions)
>   {
>       set_param_value ("max-inline-insns", 440);
>       set_param_value ("max-inline-insns-single", 220);
>       set_param_value ("min-inline-insns", 80);
>   }
> #endif
5479,5480d5535
<   /* init_emit_once uses reg_raw_mode and therefore must be called
<      after init_regs which initialized reg_raw_mode.  */
5487a5543,5544
>   /* init_emit_once uses reg_raw_mode and therefore must be called
>      after init_regs which initialized reg_raw_mode.  */
5627a5685
> 
5629c5687
< static const char *
---
> static const char * // KEY
5638c5696
< 
---
>                                                                                  
5643c5701
< 
---
>                                                                                  
5651c5709
< 
---
>                                                                                  
5717c5775
< const char *
---
> const char * // KEY
5736d5793
< #ifndef SGI_MONGOOSE
5737a5795
> #ifndef SGI_MONGOOSE
5739,5743d5796
< 
<   if (errorcount || sorrycount)
<     return (FATAL_EXIT_CODE);
< 
<   return (SUCCESS_EXIT_CODE);
5745,5746c5798,5799
<   if (!exit_after_options)
<     return do_init_compile(); 
---
>   return do_init_compile();
> #endif /* SGI_MONGOOSE */
5749c5802
<     return (const char *) (FATAL_EXIT_CODE);
---
>     return (const char *)(FATAL_EXIT_CODE);
5751,5752c5804
<   return (const char *) (SUCCESS_EXIT_CODE);
< #endif /* SGI_MONGOOSE */
---
>   return (const char *)(SUCCESS_EXIT_CODE);
