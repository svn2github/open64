/*

  Copyright (C) 2000, 2001 Silicon Graphics, Inc.  All Rights Reserved.

  This program is free software; you can redistribute it and/or modify it
  under the terms of version 2 of the GNU General Public License as
  published by the Free Software Foundation.

  This program is distributed in the hope that it would be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  

  Further, this software is distributed without any warranty that it is
  free of the rightful claim of any third person regarding infringement 
  or the like.  Any license provided herein, whether implied or 
  otherwise, applies only to this software file.  Patent licenses, if 
  any, provided herein do not apply to combinations of this program with 
  other software, or any other product whatsoever.  

  You should have received a copy of the GNU General Public License along
  with this program; if not, write the Free Software Foundation, Inc., 59
  Temple Place - Suite 330, Boston MA 02111-1307, USA.

  Contact information:  Silicon Graphics, Inc., 1600 Amphitheatre Pky,
  Mountain View, CA 94043, or:

  http://www.sgi.com

  For further information regarding this notice, see:

  http://oss.sgi.com/projects/GenInfo/NoticeExplan

*/


#include <stdio.h>
#include <stdlib.h>
#include <cmplrs/rcodes.h>

#define TRUE  1
#define FALSE 0

#include "defs.h"
#include "wintrinsic.h"
#include "wio.h"
#include "wutil.h"

static const struct {
  INTRINSIC   opcode;
  char      * name;
} intrinsic_name_table [] = {
  INTRINSIC_NONE,	"NONE",
  INTRN_I4EXPEXPR,	"I4EXPEXPR",
  INTRN_I8EXPEXPR,	"I8EXPEXPR",
  INTRN_F4EXPEXPR,	"F4EXPEXPR",
  INTRN_F8EXPEXPR,	"F8EXPEXPR",
  INTRN_FQEXPEXPR,	"FQEXPEXPR",
  INTRN_C4EXPEXPR,	"C4EXPEXPR",
  INTRN_C8EXPEXPR,	"C8EXPEXPR",
  INTRN_CQEXPEXPR,	"CQEXPEXPR",
  INTRN_F4I4EXPEXPR,	"F4I4EXPEXPR",
  INTRN_F4I8EXPEXPR,	"F4I8EXPEXPR",
  INTRN_F8I4EXPEXPR,	"F8I4EXPEXPR",
  INTRN_F8I8EXPEXPR,	"F8I8EXPEXPR",
  INTRN_FQI4EXPEXPR,	"FQI4EXPEXPR",
  INTRN_FQI8EXPEXPR,	"FQI8EXPEXPR",
  INTRN_C4I4EXPEXPR,	"C4I4EXPEXPR",
  INTRN_C4I8EXPEXPR,	"C4I8EXPEXPR",
  INTRN_C8I4EXPEXPR,	"C8I4EXPEXPR",
  INTRN_C8I8EXPEXPR,	"C8I8EXPEXPR",
  INTRN_CQI4EXPEXPR,	"CQI4EXPEXPR",
  INTRN_CQI8EXPEXPR,	"CQI8EXPEXPR",
  INTRN_CEQEXPR,	"CEQEXPR",
  INTRN_CNEEXPR,	"CNEEXPR",
  INTRN_CGEEXPR,	"CGEEXPR",
  INTRN_CGTEXPR,	"CGTEXPR",
  INTRN_CLEEXPR,	"CLEEXPR",
  INTRN_CLTEXPR,	"CLTEXPR",
  INTRN_SUBSTRINGEXPR,	"SUBSTRINGEXPR",
  INTRN_CONCATEXPR,	"CONCATEXPR",
  INTRN_CASSIGNSTMT,	"CASSIGNSTMT",
  INTRN_I2ABSe,		"I2ABSe",
  INTRN_I4ABSe,		"I4ABSe",
  INTRN_I8ABSe,		"I8ABSe",
  INTRN_F4ABSe,		"F4ABSe",
  INTRN_F8ABSe,		"F8ABSe",
  INTRN_FQABSe,		"FQABSe",
  INTRN_F4C4ABS,	"F4C4ABS",
  INTRN_F4C4ABSe,	"F4C4ABSe",
  INTRN_F8C8ABS,	"F8C8ABS",
  INTRN_F8C8ABSe,	"F8C8ABSe",
  INTRN_FQCQABS,	"FQCQABS",
  INTRN_FQCQABSe,	"FQCQABSe",
  INTRN_I2MODe,		"I2MODe",
  INTRN_I4MODe,		"I4MODe",
  INTRN_I8MODe,		"I8MODe",
  INTRN_F4MOD,		"F4MOD",
  INTRN_F4MODe,		"F4MODe",
  INTRN_F8MOD,		"F8MOD",
  INTRN_F8MODe,		"F8MODe",
  INTRN_FQMOD,		"FQMOD",
  INTRN_FQMODe,		"FQMODe",
  INTRN_F4SQRTe,	"F4SQRTe",
  INTRN_F8SQRTe,	"F8SQRTe",
  INTRN_FQSQRTe,	"FQSQRTe",
  INTRN_C4SQRTe,	"C4SQRTe",
  INTRN_C8SQRTe,	"C8SQRTe",
  INTRN_CQSQRTe,	"CQSQRTe",
  INTRN_C4CONJG,	"C4CONJG",
  INTRN_C4CONJGe,	"C4CONJGe",
  INTRN_C8CONJG,	"C8CONJG",
  INTRN_C8CONJGe,	"C8CONJGe",
  INTRN_CQCONJG,	"CQCONJG",
  INTRN_CQCONJGe,	"CQCONJGe",
  INTRN_I1DIM,		"I1DIM",
  INTRN_I2DIM,		"I2DIM",
  INTRN_I2DIMe,		"I2DIMe",
  INTRN_I4DIM,		"I4DIM",
  INTRN_I4DIMe,		"I4DIMe",
  INTRN_I8DIM,		"I8DIM",
  INTRN_I8DIMe,		"I8DIMe",
  INTRN_F4DIM,		"F4DIM",
  INTRN_F4DIMe,		"F4DIMe",
  INTRN_F8DIM,		"F8DIM",
  INTRN_F8DIMe,		"F8DIMe",
  INTRN_FQDIM,		"FQDIM",
  INTRN_FQDIMe,		"FQDIMe",
  INTRN_F8F4PROD,	"F8F4PROD",
  INTRN_F8F4PRODe,	"F8F4PRODe",
  INTRN_FQF8PROD,	"FQF8PROD",
  INTRN_FQF8PRODe,	"FQF8PRODe",
  INTRN_I1SIGN,		"I1SIGN",
  INTRN_I2SIGN,		"I2SIGN",
  INTRN_I2SIGNe,	"I2SIGNe",
  INTRN_I4SIGN,		"I4SIGN",
  INTRN_I4SIGNe,	"I4SIGNe",
  INTRN_I8SIGN,		"I8SIGN",
  INTRN_I8SIGNe,	"I8SIGNe",
  INTRN_F4SIGN,		"F4SIGN",
  INTRN_F4SIGNe,	"F4SIGNe",
  INTRN_F8SIGN,		"F8SIGN",
  INTRN_F8SIGNe,	"F8SIGNe",
  INTRN_FQSIGN,		"FQSIGN",
  INTRN_FQSIGNe,	"FQSIGNe",
  INTRN_F4IMAGe,	"F4IMAGe",
  INTRN_F8IMAGe,	"F8IMAGe",
  INTRN_FQIMAGe,	"FQIMAGe",
  INTRN_F4AINT,		"F4AINT",
  INTRN_F4AINTe,	"F4AINTe",
  INTRN_F8AINT,		"F8AINT",
  INTRN_F8AINTe,	"F8AINTe",
  INTRN_FQAINT,		"FQAINT",
  INTRN_FQAINTe,	"FQAINTe",
  INTRN_I2F4INTe,	"I2F4INTe",
  INTRN_I4F4INTe,	"I4F4INTe",
  INTRN_I8F4INTe,	"I8F4INTe",
  INTRN_I2F8IDINTe,	"I2F8IDINTe",
  INTRN_I4F8IDINTe,	"I4F8IDINTe",
  INTRN_I8F8IDINTe,	"I8F8IDINTe",
  INTRN_I2FQIQINTe,	"I2FQIQINTe",
  INTRN_I4FQIQINTe,	"I4FQIQINTe",
  INTRN_I8FQIQINTe,	"I8FQIQINTe",
  INTRN_I2F4NINT,	"I2F4NINT",
  INTRN_I2F4NINTe,	"I2F4NINTe",
  INTRN_I4F4NINT,	"I4F4NINT",
  INTRN_I4F4NINTe,	"I4F4NINTe",
  INTRN_I8F4NINT,	"I8F4NINT",
  INTRN_I8F4NINTe,	"I8F4NINTe",
  INTRN_I2F8IDNINT,	"I2F8IDNINT",
  INTRN_I2F8IDNINTe,	"I2F8IDNINTe",
  INTRN_I4F8IDNINT,	"I4F8IDNINT",
  INTRN_I4F8IDNINTe,	"I4F8IDNINTe",
  INTRN_I8F8IDNINT,	"I8F8IDNINT",
  INTRN_I8F8IDNINTe,	"I8F8IDNINTe",
  INTRN_I2FQIQNINT,	"I2FQIQNINT",
  INTRN_I2FQIQNINTe,	"I2FQIQNINTe",
  INTRN_I4FQIQNINT,	"I4FQIQNINT",
  INTRN_I4FQIQNINTe,	"I4FQIQNINTe",
  INTRN_I8FQIQNINT,	"I8FQIQNINT",
  INTRN_I8FQIQNINTe,	"I8FQIQNINTe",
  INTRN_F4ANINT,	"F4ANINT",
  INTRN_F4ANINTe,	"F4ANINTe",
  INTRN_F8ANINT,	"F8ANINT",
  INTRN_F8ANINTe,	"F8ANINTe",
  INTRN_FQANINT,	"FQANINT",
  INTRN_FQANINTe,	"FQANINTe",
  INTRN_I2BNOTe,	"I2BNOTe",
  INTRN_I4BNOTe,	"I4BNOTe",
  INTRN_I8BNOTe,	"I8BNOTe",
  INTRN_I2BANDe,	"I2BANDe",
  INTRN_I4BANDe,	"I4BANDe",
  INTRN_I8BANDe,	"I8BANDe",
  INTRN_I2BIORe,	"I2BIORe",
  INTRN_I4BIORe,	"I4BIORe",
  INTRN_I8BIORe,	"I8BIORe",
  INTRN_I2BXORe,	"I2BXORe",
  INTRN_I4BXORe,	"I4BXORe",
  INTRN_I8BXORe,	"I8BXORe",
  INTRN_I1BITS,		"I1BITS",
  INTRN_I2BITS,		"I2BITS",
  INTRN_I2BITSe,	"I2BITSe",
  INTRN_I4BITS,		"I4BITS",
  INTRN_I4BITSe,	"I4BITSe",
  INTRN_I8BITS,		"I8BITS",
  INTRN_I8BITSe,	"I8BITSe",
  INTRN_I1BSET,		"I1BSET",
  INTRN_I2BSET,		"I2BSET",
  INTRN_I2BSETe,	"I2BSETe",
  INTRN_I4BSET,		"I4BSET",
  INTRN_I4BSETe,	"I4BSETe",
  INTRN_I8BSET,		"I8BSET",
  INTRN_I8BSETe,	"I8BSETe",
  INTRN_I1BCLR,		"I1BCLR",
  INTRN_I2BCLR,		"I2BCLR",
  INTRN_I2BCLRe,	"I2BCLRe",
  INTRN_I4BCLR,		"I4BCLR",
  INTRN_I4BCLRe,	"I4BCLRe",
  INTRN_I8BCLR,		"I8BCLR",
  INTRN_I8BCLRe,	"I8BCLRe",
  INTRN_I1BTEST,	"I1BTEST",
  INTRN_I2BTEST,	"I2BTEST",
  INTRN_I2BTESTe,	"I2BTESTe",
  INTRN_I4BTEST,	"I4BTEST",
  INTRN_I4BTESTe,	"I4BTESTe",
  INTRN_I8BTEST,	"I8BTEST",
  INTRN_I8BTESTe,	"I8BTESTe",
  INTRN_I1MVBITS,	"I1MVBITS",
  INTRN_I2MVBITS,	"I2MVBITS",
  INTRN_I4MVBITS,	"I4MVBITS",
  INTRN_I8MVBITS,	"I8MVBITS",
  INTRN_I1SHL,		"I1SHL",
  INTRN_I2SHL,		"I2SHL",
  INTRN_I1SHR,		"I1SHR",
  INTRN_I2SHR,		"I2SHR",
  INTRN_I1SHFT,		"I1SHFT",
  INTRN_I2SHFT,		"I2SHFT",
  INTRN_I2SHFTe,	"I2SHFTe",
  INTRN_I4SHFT,		"I4SHFT",
  INTRN_I4SHFTe,	"I4SHFTe",
  INTRN_I8SHFT,		"I8SHFT",
  INTRN_I8SHFTe,	"I8SHFTe",
  INTRN_I1SHFTC,	"I1SHFTC",
  INTRN_I2SHFTC,	"I2SHFTC",
  INTRN_I2SHFTCe,	"I2SHFTCe",
  INTRN_I4SHFTC,	"I4SHFTC",
  INTRN_I4SHFTCe,	"I4SHFTCe",
  INTRN_I8SHFTC,	"I8SHFTC",
  INTRN_I8SHFTCe,	"I8SHFTCe",
  INTRN_I4CLEN,		"I4CLEN",
  INTRN_I4CLENe,	"I4CLENe",
  INTRN_I4CINDEX,	"I4CINDEX",
  INTRN_I4CINDEXe,	"I4CINDEXe",
  INTRN_CLGE,		"CLGE",
  INTRN_CLGEe,		"CLGEe",
  INTRN_CLGT,		"CLGT",
  INTRN_CLGTe,		"CLGTe",
  INTRN_CLLE,		"CLLE",
  INTRN_CLLEe,		"CLLEe",
  INTRN_CLLT,		"CLLT",
  INTRN_CLLTe,		"CLLTe",
  INTRN_F4EXP,		"F4EXP",
  INTRN_F4EXPe,		"F4EXPe",
  INTRN_F8EXP,		"F8EXP",
  INTRN_F8EXPe,		"F8EXPe",
  INTRN_FQEXP,		"FQEXP",
  INTRN_FQEXPe,		"FQEXPe",
  INTRN_C4EXP,		"C4EXP",
  INTRN_C4EXPe,		"C4EXPe",
  INTRN_C8EXP,		"C8EXP",
  INTRN_C8EXPe,		"C8EXPe",
  INTRN_CQEXP,		"CQEXP",
  INTRN_CQEXPe,		"CQEXPe",
  INTRN_F4LOG,		"F4LOG",
  INTRN_F4LOGe,		"F4LOGe",
  INTRN_F8LOG,		"F8LOG",
  INTRN_F8LOGe,		"F8LOGe",
  INTRN_FQLOG,		"FQLOG",
  INTRN_FQLOGe,		"FQLOGe",
  INTRN_C4LOG,		"C4LOG",
  INTRN_C4LOGe,		"C4LOGe",
  INTRN_C8LOG,		"C8LOG",
  INTRN_C8LOGe,		"C8LOGe",
  INTRN_CQLOG,		"CQLOG",
  INTRN_CQLOGe,		"CQLOGe",
  INTRN_F4LOG10,	"F4LOG10",
  INTRN_F4LOG10e,	"F4LOG10e",
  INTRN_F8LOG10,	"F8LOG10",
  INTRN_F8LOG10e,	"F8LOG10e",
  INTRN_FQLOG10,	"FQLOG10",
  INTRN_FQLOG10e,	"FQLOG10e",
  INTRN_F4COS,		"F4COS",
  INTRN_F4COSe,		"F4COSe",
  INTRN_F8COS,		"F8COS",
  INTRN_F8COSe,		"F8COSe",
  INTRN_FQCOS,		"FQCOS",
  INTRN_FQCOSe,		"FQCOSe",
  INTRN_C4COS,		"C4COS",
  INTRN_C4COSe,		"C4COSe",
  INTRN_C8COS,		"C8COS",
  INTRN_C8COSe,		"C8COSe",
  INTRN_CQCOS,		"CQCOS",
  INTRN_CQCOSe,		"CQCOSe",
  INTRN_F4SIN,		"F4SIN",
  INTRN_F4SINe,		"F4SINe",
  INTRN_F8SIN,		"F8SIN",
  INTRN_F8SINe,		"F8SINe",
  INTRN_FQSIN,		"FQSIN",
  INTRN_FQSINe,		"FQSINe",
  INTRN_C4SIN,		"C4SIN",
  INTRN_C4SINe,		"C4SINe",
  INTRN_C8SIN,		"C8SIN",
  INTRN_C8SINe,		"C8SINe",
  INTRN_CQSIN,		"CQSIN",
  INTRN_CQSINe,		"CQSINe",
  INTRN_F4CIS,		"F4CIS",
  INTRN_F4CISe,		"F4CISe",
  INTRN_F8CIS,		"F8CIS",
  INTRN_F8CISe,		"F8CISe",
  INTRN_FQCIS,		"FQCIS",
  INTRN_FQCISe,		"FQCISe",
  INTRN_F4TAN,		"F4TAN",
  INTRN_F4TANe,		"F4TANe",
  INTRN_F8TAN,		"F8TAN",
  INTRN_F8TANe,		"F8TANe",
  INTRN_FQTAN,		"FQTAN",
  INTRN_FQTANe,		"FQTANe",
  INTRN_F4COSD,		"F4COSD",
  INTRN_F4COSDe,	"F4COSDe",
  INTRN_F8COSD,		"F8COSD",
  INTRN_F8COSDe,	"F8COSDe",
  INTRN_FQCOSD,		"FQCOSD",
  INTRN_FQCOSDe,	"FQCOSDe",
  INTRN_F4SIND,		"F4SIND",
  INTRN_F4SINDe,	"F4SINDe",
  INTRN_F8SIND,		"F8SIND",
  INTRN_F8SINDe,	"F8SINDe",
  INTRN_FQSIND,		"FQSIND",
  INTRN_FQSINDe,	"FQSINDe",
  INTRN_F4TAND,		"F4TAND",
  INTRN_F4TANDe,	"F4TANDe",
  INTRN_F8TAND,		"F8TAND",
  INTRN_F8TANDe,	"F8TANDe",
  INTRN_FQTAND,		"FQTAND",
  INTRN_FQTANDe,	"FQTANDe",
  INTRN_F4COSH,		"F4COSH",
  INTRN_F4COSHe,	"F4COSHe",
  INTRN_F8COSH,		"F8COSH",
  INTRN_F8COSHe,	"F8COSHe",
  INTRN_FQCOSH,		"FQCOSH",
  INTRN_FQCOSHe,	"FQCOSHe",
  INTRN_F4SINH,		"F4SINH",
  INTRN_F4SINHe,	"F4SINHe",
  INTRN_F8SINH,		"F8SINH",
  INTRN_F8SINHe,	"F8SINHe",
  INTRN_FQSINH,		"FQSINH",
  INTRN_FQSINHe,	"FQSINHe",
  INTRN_F4TANH,		"F4TANH",
  INTRN_F4TANHe,	"F4TANHe",
  INTRN_F8TANH,		"F8TANH",
  INTRN_F8TANHe,	"F8TANHe",
  INTRN_FQTANH,		"FQTANH",
  INTRN_FQTANHe,	"FQTANHe",
  INTRN_F4ACOS,		"F4ACOS",
  INTRN_F4ACOSe,	"F4ACOSe",
  INTRN_F8ACOS,		"F8ACOS",
  INTRN_F8ACOSe,	"F8ACOSe",
  INTRN_FQACOS,		"FQACOS",
  INTRN_FQACOSe,	"FQACOSe",
  INTRN_F4ASIN,		"F4ASIN",
  INTRN_F4ASINe,	"F4ASINe",
  INTRN_F8ASIN,		"F8ASIN",
  INTRN_F8ASINe,	"F8ASINe",
  INTRN_FQASIN,		"FQASIN",
  INTRN_FQASINe,	"FQASINe",
  INTRN_F4ATAN,		"F4ATAN",
  INTRN_F4ATANe,	"F4ATANe",
  INTRN_F8ATAN,		"F8ATAN",
  INTRN_F8ATANe,	"F8ATANe",
  INTRN_FQATAN,		"FQATAN",
  INTRN_FQATANe,	"FQATANe",
  INTRN_F4ACOSD,	"F4ACOSD",
  INTRN_F4ACOSDe,	"F4ACOSDe",
  INTRN_F8ACOSD,	"F8ACOSD",
  INTRN_F8ACOSDe,	"F8ACOSDe",
  INTRN_FQACOSD,	"FQACOSD",
  INTRN_FQACOSDe,	"FQACOSDe",
  INTRN_F4ASIND,	"F4ASIND",
  INTRN_F4ASINDe,	"F4ASINDe",
  INTRN_F8ASIND,	"F8ASIND",
  INTRN_F8ASINDe,	"F8ASINDe",
  INTRN_FQASIND,	"FQASIND",
  INTRN_FQASINDe,	"FQASINDe",
  INTRN_F4ATAND,	"F4ATAND",
  INTRN_F4ATANDe,	"F4ATANDe",
  INTRN_F8ATAND,	"F8ATAND",
  INTRN_F8ATANDe,	"F8ATANDe",
  INTRN_FQATAND,	"FQATAND",
  INTRN_FQATANDe,	"FQATANDe",
  INTRN_F4ATAN2,	"F4ATAN2",
  INTRN_F4ATAN2e,	"F4ATAN2e",
  INTRN_F8ATAN2,	"F8ATAN2",
  INTRN_F8ATAN2e,	"F8ATAN2e",
  INTRN_FQATAN2,	"FQATAN2",
  INTRN_FQATAN2e,	"FQATAN2e",
  INTRN_F4ATAN2D,	"F4ATAN2D",
  INTRN_F4ATAN2De,	"F4ATAN2De",
  INTRN_F8ATAN2D,	"F8ATAN2D",
  INTRN_F8ATAN2De,	"F8ATAN2De",
  INTRN_FQATAN2D,	"FQATAN2D",
  INTRN_FQATAN2De,	"FQATAN2De",
  INTRN_U4I4ALLOCA,	"U4I4ALLOCA",
  INTRN_U8I8ALLOCA,	"U8I8ALLOCA",
  INTRN_U4I4MALLOC,	"U4I4MALLOC",
  INTRN_U8I8MALLOC,	"U8I8MALLOC",
  INTRN_U4FREE,		"U4FREE",
  INTRN_U8FREE,		"U8FREE",
  INTRN_MDATE,		"MDATE",
  INTRN_I1DATE,		"I1DATE",
  INTRN_I2DATE,		"I2DATE",
  INTRN_I4DATE,		"I4DATE",
  INTRN_I8DATE,		"I8DATE",
  INTRN_I1ERRSNS,	"I1ERRSNS",
  INTRN_I2ERRSNS,	"I2ERRSNS",
  INTRN_I4ERRSNS,	"I4ERRSNS",
  INTRN_I8ERRSNS,	"I8ERRSNS",
  INTRN_VEXIT,		"VEXIT",
  INTRN_I1EXIT,		"I1EXIT",
  INTRN_I2EXIT,		"I2EXIT",
  INTRN_I4EXIT,		"I4EXIT",
  INTRN_I8EXIT,		"I8EXIT",
  INTRN_TIME,		"TIME",
  INTRN_F4SECNDS,	"F4SECNDS",
  INTRN_F8SECNDS,	"F8SECNDS",
  INTRN_PAUSE,		"PAUSE",
  INTRN_STOP,		"STOP",
  INTRN_F4I4RAN,	"F4I4RAN",
  INTRN_F4I8RAN,	"F4I8RAN",
  INTRN_F8I4RAN,	"F8I4RAN",
  INTRN_F8I8RAN,	"F8I8RAN",
  INTRN_FQI4RAN,	"FQI4RAN",
  INTRN_FQI8RAN,	"FQI8RAN",
  INTRN_I4DIVFLOOR,	"I4DIVFLOOR",
  INTRN_I8DIVFLOOR,	"I8DIVFLOOR",
  INTRN_U4DIVFLOOR,	"U4DIVFLOOR",
  INTRN_U8DIVFLOOR,	"U8DIVFLOOR",
  INTRN_I4DIVCEIL,	"I4DIVCEIL",
  INTRN_I8DIVCEIL,	"I8DIVCEIL",
  INTRN_U4DIVCEIL,	"U4DIVCEIL",
  INTRN_U8DIVCEIL,	"U8DIVCEIL",
  INTRN_I4MODFLOOR,	"I4MODFLOOR",
  INTRN_I8MODFLOOR,	"I8MODFLOOR",
  INTRN_U4MODFLOOR,	"U4MODFLOOR",
  INTRN_U8MODFLOOR,	"U8MODFLOOR",
  INTRN_I4MODCEIL,	"I4MODCEIL",
  INTRN_I8MODCEIL,	"I8MODCEIL",
  INTRN_U4MODCEIL,	"U4MODCEIL",
  INTRN_U8MODCEIL,	"U8MODCEIL",
  INTRN_U4I4SETSTACKPOINTER,	"U4I4SETSTACKPOINTER",
  INTRN_U8I8SETSTACKPOINTER,	"U8I8SETSTACKPOINTER",
  INTRN_U4READSTACKPOINTER,	"U4READSTACKPOINTER",
  INTRN_U8READSTACKPOINTER,	"U8READSTACKPOINTER",
  INTRN_ADD_AND_FETCH_I4,	"ADD_AND_FETCH_I4",
  INTRN_SUB_AND_FETCH_I4,	"SUB_AND_FETCH_I4",
  INTRN_OR_AND_FETCH_I4,	"OR_AND_FETCH_I4",
  INTRN_XOR_AND_FETCH_I4,	"XOR_AND_FETCH_I4",
  INTRN_AND_AND_FETCH_I4,	"AND_AND_FETCH_I4",
  INTRN_NAND_AND_FETCH_I4,	"NAND_AND_FETCH_I4",
  INTRN_FETCH_AND_ADD_I4,	"FETCH_AND_ADD_I4",
  INTRN_FETCH_AND_SUB_I4,	"FETCH_AND_SUB_I4",
  INTRN_FETCH_AND_OR_I4,	"FETCH_AND_OR_I4",
  INTRN_FETCH_AND_XOR_I4,	"FETCH_AND_XOR_I4",
  INTRN_FETCH_AND_AND_I4,	"FETCH_AND_AND_I4",
  INTRN_FETCH_AND_NAND_I4,	"FETCH_AND_NAND_I4",
  INTRN_ADD_AND_FETCH_I8,	"ADD_AND_FETCH_I8",
  INTRN_SUB_AND_FETCH_I8,	"SUB_AND_FETCH_I8",
  INTRN_OR_AND_FETCH_I8,	"OR_AND_FETCH_I8",
  INTRN_XOR_AND_FETCH_I8,	"XOR_AND_FETCH_I8",
  INTRN_AND_AND_FETCH_I8,	"AND_AND_FETCH_I8",
  INTRN_NAND_AND_FETCH_I8,	"NAND_AND_FETCH_I8",
  INTRN_FETCH_AND_ADD_I8,	"FETCH_AND_ADD_I8",
  INTRN_FETCH_AND_SUB_I8,	"FETCH_AND_SUB_I8",
  INTRN_FETCH_AND_OR_I8,	"FETCH_AND_OR_I8",
  INTRN_FETCH_AND_XOR_I8,	"FETCH_AND_XOR_I8",
  INTRN_FETCH_AND_AND_I8,	"FETCH_AND_AND_I8",
  INTRN_FETCH_AND_NAND_I8,	"FETCH_AND_NAND_I8",
  INTRN_LOCK_TEST_AND_SET_I4,	"LOCK_TEST_AND_SET_I4",
  INTRN_LOCK_TEST_AND_SET_I8,	"LOCK_TEST_AND_SET_I8",
  INTRN_LOCK_RELEASE_I4,	"LOCK_RELEASE_I4",
  INTRN_LOCK_RELEASE_I8,	"LOCK_RELEASE_I8",
  INTRN_COMPARE_AND_SWAP_I4,	"COMPARE_AND_SWAP_I4",
  INTRN_COMPARE_AND_SWAP_I8,	"COMPARE_AND_SWAP_I8",
  INTRN_SYNCHRONIZE,		"SYNCHRONIZE",
  INTRN_RETURN_ADDRESS,		"RETURN_ADDRESS",
  INTRN_U4I1ADRTMP,		"U4I1ADRTMP",
  INTRN_U4I2ADRTMP,		"U4I2ADRTMP",
  INTRN_U4I4ADRTMP,		"U4I4ADRTMP",
  INTRN_U4I8ADRTMP,		"U4I8ADRTMP",
  INTRN_U4F4ADRTMP,		"U4F4ADRTMP",
  INTRN_U4F8ADRTMP,		"U4F8ADRTMP",
  INTRN_U4FQADRTMP,		"U4FQADRTMP",
  INTRN_U4C4ADRTMP,		"U4C4ADRTMP",
  INTRN_U4C8ADRTMP,		"U4C8ADRTMP",
  INTRN_U4CQADRTMP,		"U4CQADRTMP",
  INTRN_U4VADRTMP,		"U4VADRTMP",
  INTRN_U8I1ADRTMP,		"U8I1ADRTMP",
  INTRN_U8I2ADRTMP,		"U8I2ADRTMP",
  INTRN_U8I4ADRTMP,		"U8I4ADRTMP",
  INTRN_U8I8ADRTMP,		"U8I8ADRTMP",
  INTRN_U8F4ADRTMP,		"U8F4ADRTMP",
  INTRN_U8F8ADRTMP,		"U8F8ADRTMP",
  INTRN_U8FQADRTMP,		"U8FQADRTMP",
  INTRN_U8C4ADRTMP,		"U8C4ADRTMP",
  INTRN_U8C8ADRTMP,		"U8C8ADRTMP",
  INTRN_U8CQADRTMP,		"U8CQADRTMP",
  INTRN_U8VADRTMP,		"U8VADRTMP",
  INTRN_I4VALTMP,		"I4VALTMP",
  INTRN_I8VALTMP,		"I8VALTMP",
  INTRN_U4VALTMP,		"U4VALTMP",
  INTRN_U8VALTMP,		"U8VALTMP",
  INTRN_F4VALTMP,		"F4VALTMP",
  INTRN_F8VALTMP,		"F8VALTMP",
  INTRN_FQVALTMP,		"FQVALTMP",
  INTRN_C4VALTMP,		"C4VALTMP",
  INTRN_C8VALTMP,		"C8VALTMP",
  INTRN_CQVALTMP,		"CQVALTMP",
  INTRN_BCOPY,			"BCOPY",
  INTRN_BCMP,			"BCMP",
  INTRN_BZERO,			"BZERO",
  INTRN_MEMCCPY,		"MEMCCPY",
  INTRN_MEMCHR,			"MEMCHR",
  INTRN_MEMCMP,			"MEMCMP",
  INTRN_MEMCPY,			"MEMCPY",
  INTRN_MEMMOVE,		"MEMMOVE",
  INTRN_MEMSET,			"MEMSET",
  INTRN_STRCMP,			"STRCMP",
  INTRN_STRNCMP,		"STRNCMP",
  INTRN_STRCPY,			"STRCPY",
  INTRN_STRNCPY,		"STRNCPY",
  INTRN_STRLEN,			"STRLEN",
  INTRN_PRINTF,			"PRINTF",
  INTRN_FPRINTF,		"FPRINTF",
  INTRN_SPRINTF,		"SPRINTF",
  INTRN_PRINTW,			"PRINTW",
  INTRN_SCANF,			"SCANF",
  INTRN_FSCANF,			"FSCANF",
  INTRN_SSCANF,			"SSCANF",
  INTRN_FPUTC,			"FPUTC",
  INTRN_FPUTS,			"FPUTS",
  INTRN_FGETC,			"FGETC",
  INTRN_FGETS,			"FGETS",
  INTRN_F4VACOS,		"F4VACOS",
  INTRN_F8VACOS,		"F8VACOS",
  INTRN_F4VASIN,		"F4VASIN",
  INTRN_F8VASIN,		"F8VASIN",
  INTRN_F4VATAN,		"F4VATAN",
  INTRN_F8VATAN,		"F8VATAN",
  INTRN_F4VCOS,			"F4VCOS",
  INTRN_F8VCOS,			"F8VCOS",
  INTRN_F4VEXP,			"F4VEXP",
  INTRN_F8VEXP,			"F8VEXP",
  INTRN_F4VLOG,			"F4VLOG",
  INTRN_F8VLOG,			"F8VLOG",
  INTRN_F4VSIN,			"F4VSIN",
  INTRN_F8VSIN,			"F8VSIN",
  INTRN_F4VSQRT,		"F4VSQRT",
  INTRN_F8VSQRT,		"F8VSQRT",
  INTRN_F4VTAN,			"F4VTAN",
  INTRN_F8VTAN,			"F8VTAN",
  INTRN_NARY_ADD,		"NARY_ADD",
  INTRN_NARY_MPY,		"NARY_MPY",
  INTRN_U4I4TRAPUV_MALLOC,	"U4I4TRAPUV_MALLOC",
  INTRN_U8I8TRAPUV_MALLOC,	"U8I8TRAPUV_MALLOC",
  INTRN_F77_BOUNDS_ERR,		"F77_BOUNDS_ERR",
  INTRN_DSM_NUMTHREADS,		"DSM_NUMTHREADS",
  INTRN_DSM_CHUNKSIZE,		"DSM_CHUNKSIZE",
  INTRN_DSM_THIS_CHUNKSIZE,	"DSM_THIS_CHUNKSIZE",
  INTRN_DSM_REM_CHUNKSIZE,	"DSM_REM_CHUNKSIZE",
  INTRN_DSM_NUMCHUNKS,		"DSM_NUMCHUNKS",
  INTRN_DSM_THIS_THREADNUM,	"DSM_THIS_THREADNUM",
  INTRN_DSM_DISTRIBUTION_BLOCK,	"DSM_DISTRIBUTION_BLOCK",
  INTRN_DSM_DISTRIBUTION_STAR,	"DSM_DISTRIBUTION_STAR",
  INTRN_DSM_ISRESHAPED,		"DSM_ISRESHAPED",
  INTRN_DSM_ISDISTRIBUTED,	"DSM_ISDISTRIBUTED",
  INTRN_DSM_THIS_STARTINDEX,	"DSM_THIS_STARTINDEX",
  INTRN_DSM_DISTRIBUTION_CYCLIC,	"DSM_DISTRIBUTION_CYCLIC",
  INTRN_MPY_AND_FETCH_I4,	"MPY_AND_FETCH_I4",
  INTRN_MIN_AND_FETCH_I4,	"MIN_AND_FETCH_I4",
  INTRN_MAX_AND_FETCH_I4,	"MAX_AND_FETCH_I4",
  INTRN_FETCH_AND_MPY_I4,	"FETCH_AND_MPY_I4",
  INTRN_FETCH_AND_MIN_I4,	"FETCH_AND_MIN_I4",
  INTRN_FETCH_AND_MAX_I4,	"FETCH_AND_MAX_I4",
  INTRN_MPY_AND_FETCH_I8,	"MPY_AND_FETCH_I8",
  INTRN_MIN_AND_FETCH_I8,	"MIN_AND_FETCH_I8",
  INTRN_MAX_AND_FETCH_I8,	"MAX_AND_FETCH_I8",
  INTRN_FETCH_AND_MPY_I8,	"FETCH_AND_MPY_I8",
  INTRN_FETCH_AND_MIN_I8,	"FETCH_AND_MIN_I8",
  INTRN_FETCH_AND_MAX_I8,	"FETCH_AND_MAX_I8",
  INTRN_ADD_AND_FETCH_F4,	"ADD_AND_FETCH_F4",
  INTRN_SUB_AND_FETCH_F4,	"SUB_AND_FETCH_F4",
  INTRN_OR_AND_FETCH_F4,	"OR_AND_FETCH_F4",
  INTRN_XOR_AND_FETCH_F4,	"XOR_AND_FETCH_F4",
  INTRN_AND_AND_FETCH_F4,	"AND_AND_FETCH_F4",
  INTRN_NAND_AND_FETCH_F4,	"NAND_AND_FETCH_F4",
  INTRN_MPY_AND_FETCH_F4,	"MPY_AND_FETCH_F4",
  INTRN_MIN_AND_FETCH_F4,	"MIN_AND_FETCH_F4",
  INTRN_MAX_AND_FETCH_F4,	"MAX_AND_FETCH_F4",
  INTRN_FETCH_AND_ADD_F4,	"FETCH_AND_ADD_F4",
  INTRN_FETCH_AND_SUB_F4,	"FETCH_AND_SUB_F4",
  INTRN_FETCH_AND_OR_F4,	"FETCH_AND_OR_F4",
  INTRN_FETCH_AND_XOR_F4,	"FETCH_AND_XOR_F4",
  INTRN_FETCH_AND_AND_F4,	"FETCH_AND_AND_F4",
  INTRN_FETCH_AND_NAND_F4,	"FETCH_AND_NAND_F4",
  INTRN_FETCH_AND_MPY_F4,	"FETCH_AND_MPY_F4",
  INTRN_FETCH_AND_MIN_F4,	"FETCH_AND_MIN_F4",
  INTRN_FETCH_AND_MAX_F4,	"FETCH_AND_MAX_F4",
  INTRN_ADD_AND_FETCH_F8,	"ADD_AND_FETCH_F8",
  INTRN_SUB_AND_FETCH_F8,	"SUB_AND_FETCH_F8",
  INTRN_OR_AND_FETCH_F8,	"OR_AND_FETCH_F8",
  INTRN_XOR_AND_FETCH_F8,	"XOR_AND_FETCH_F8",
  INTRN_AND_AND_FETCH_F8,	"AND_AND_FETCH_F8",
  INTRN_NAND_AND_FETCH_F8,	"NAND_AND_FETCH_F8",
  INTRN_MPY_AND_FETCH_F8,	"MPY_AND_FETCH_F8",
  INTRN_MIN_AND_FETCH_F8,	"MIN_AND_FETCH_F8",
  INTRN_MAX_AND_FETCH_F8,	"MAX_AND_FETCH_F8",
  INTRN_FETCH_AND_ADD_F8,	"FETCH_AND_ADD_F8",
  INTRN_FETCH_AND_SUB_F8,	"FETCH_AND_SUB_F8",
  INTRN_FETCH_AND_OR_F8,	"FETCH_AND_OR_F8",
  INTRN_FETCH_AND_XOR_F8,	"FETCH_AND_XOR_F8",
  INTRN_FETCH_AND_AND_F8,	"FETCH_AND_AND_F8",
  INTRN_FETCH_AND_NAND_F8,	"FETCH_AND_NAND_F8",
  INTRN_FETCH_AND_MPY_F8,	"FETCH_AND_MPY_F8",
  INTRN_FETCH_AND_MIN_F8,	"FETCH_AND_MIN_F8",
  INTRN_FETCH_AND_MAX_F8,	"FETCH_AND_MAX_F8",
  INTRN_LOCK_ACQUIRE_I4,	"LOCK_ACQUIRE_I4",
  INTRN_LOCK_ACQUIRE_I8,	"LOCK_ACQUIRE_I8",
  INTRN_F90_STACKTEMPALLOC,	"F90_STACKTEMPALLOC",
  INTRN_F90_HEAPTEMPALLOC,	"F90_HEAPTEMPALLOC",
  INTRN_F90_STACKTEMPFREE,	"F90_STACKTEMPFREE",
  INTRN_F90_HEAPTEMPFREE,	"F90_HEAPTEMPFREE",

  /* Automatically generated F90 intrinsic definitions */

#include "wutil90.h"

  INTRN_MP_IN_PARALLEL_REGION,  "MP_IN_PARALLEL_REGION", 
  INTRN_RT_ERR,			"RT_ERR", 
  INTRN_OMP_DO_WORKSHARING,	"OMP_DO_WORKSHARING",
  INTRN_OMP_TEST_LOCK,		"OMP_TEST_LOCK",
  INTRN_OMP_GET_NUM_THREADS,	"OMP_GET_NUM_THREADS",
  INTRN_OMP_GET_MAX_THREADS,	"OMP_GET_MAX_THREADS",
  INTRN_OMP_GET_THREAD_NUM,	"OMP_GET_THREAD_NUM",
  INTRN_OMP_GET_NUM_PROCS,	"OMP_GET_NUM_PROCS",
  INTRN_OMP_IN_PARALLEL,	"OMP_IN_PARALLEL",
  INTRN_OMP_GET_DYNAMIC,	"OMP_GET_DYNAMIC",
  INTRN_OMP_GET_NESTED,		"OMP_GET_NESTED",
    INTRN_I1IEEE_INT, "I1IEEE_INT",
    INTRN_I2IEEE_INT, "I2IEEE_INT",
    INTRN_I4IEEE_INT, "I4IEEE_INT",
    INTRN_I8IEEE_INT, "I8IEEE_INT",
    INTRN_F4IEEE_INT, "F4IEEE_INT",
    INTRN_F8IEEE_INT, "F8IEEE_INT",
    INTRN_FQIEEE_INT, "FQIEEE_INT",
    INTRN_F90BOUNDS_CHECK, "F90BOUNDS_CHECK",
  INTRN_F90_DYNAMICTEMPALLOC,	"F90_DYNAMICTEMPALLOC",
  INTRN_F90_DYNAMICTEMPFREE,	"F90_DYNAMICTEMPFREE",
  INTRN_F90CONFORM_CHECK, "F90CONFORM_CHECK",
  
  INTRN_C_F4FLOOR,		"C_F4FLOOR",
  INTRN_C_F8FLOOR,		"C_F8FLOOR",
  INTRN_C_FQFLOOR,		"C_FQFLOOR",
  INTRN_C_F4CEIL,		"C_F4CEIL",
  INTRN_C_F8CEIL,		"C_F8CEIL",
  INTRN_C_FQCEIL,		"C_FQCEIL",
  INTRN_C_F4TRUNC,		"C_F4TRUNC",
  INTRN_C_F8TRUNC,		"C_F8TRUNC",
  INTRN_C_FQTRUNC,		"C_FQTRUNC",

  INTRN_I4DSHIFTL,		"I4DSHIFTL",
  INTRN_I8DSHIFTL,		"I8DSHIFTL",
  INTRN_I4DSHIFTR,		"I4DSHIFTR",
  INTRN_I8DSHIFTR,		"I8DSHIFTR",
  INTRN_I4GBIT,			"I4GBIT",
  INTRN_I8GBIT,			"I8GBIT",
  INTRN_I4GBITS,		"I4GBITS",
  INTRN_I8GBITS,		"I8GBITS",
  INTRN_I4MASK,			"I4MASK",
  INTRN_I8MASK,			"I8MASK",
  INTRN_I4MASKL,		"I4MASKL",
  INTRN_I8MASKL,		"I8MASKL",
  INTRN_I4MASKR,		"I4MASKR",
  INTRN_I8MASKR,		"I8MASKR",
  INTRN_I4PBIT,			"I4PBIT",
  INTRN_I8PBIT,			"I8PBIT",
  INTRN_I4PBITS,		"I4PBITS",
  INTRN_I8PBITS,		"I8PBITS",
  INTRN_I4POPPAR,		"I4POPPAR",
  INTRN_I8POPPAR,		"I8POPPAR",
  INTRN_I4RTC,			"I4RTC",
  INTRN_I8RTC,			"I8RTC",

  INTRN_GETF_EXP,               "GETF_EXP",
  INTRN_SETF_EXP,               "SETF_EXP",
  INTRN_GETF_SIG,               "GETF_SIG",
  INTRN_SETF_SIG,               "SETF_SIG",

  INTRN_FMERGE_NS,              "FMERGE_NS",
  INTRN_FMERGE_S,               "FMERGE_S",
  INTRN_FMERGE_SE,              "FMERGE_SE",
  INTRN_STOP_F90,               "STOP_F90",

  INTRN_F4VLOG10,		"F4VLOG10",
  INTRN_F8VLOG10,		"F8VLOG10",

  INTRN_MODSI3,			"MODSI3",
  INTRN_UMODSI3,		"UMODSI3",
  INTRN_DIVSI3,			"DIVSI3",
  INTRN_UDIVSI3,		"UDIVSI3",
  INTRN_MODDI3,			"MODDI3",
  INTRN_UMODDI3,		"UMODDI3",
  INTRN_DIVDI3,			"DIVDI3",
  INTRN_UDIVDI3,		"UDIVDI3",
  INTRN_DIVSF3,			"DIVSF3",
  INTRN_DIVDF3,			"DIVDF3",

  INTRN_I4FFS,			"I4FFS",

  INTRN_SINCOSF,		"SINCOSF",
  INTRN_SINCOS,			"SINCOS",
  INTRN_SINCOSL,		"SINCOSL",

  INTRINSIC_LAST,		"INTRINSIC_LAST"

};

struct {
  IOSTATEMENT   opcode;
  char        * name;
} iostatement_name_table [] = {
  (IOSTATEMENT) 0,	NULL,
  IOS_BACKSPACE,	"BACKSPACE",
  IOS_CLOSE,		"CLOSE",
  IOS_DEFINEFILE,	"DEFINEFILE",
  IOS_DELETE,		"DELETE",
  IOS_ENDFILE,		"ENDFILE",
  IOS_FIND,		"FIND",
  IOS_INQUIRE,		"INQUIRE",
  IOS_NAMELIST,		"NAMELIST",
  IOS_OPEN,		"OPEN",
  IOS_REWIND,		"REWIND",
  IOS_UNLOCK,		"UNLOCK",
  IOS_ACCEPT,		"ACCEPT",
  IOS_DECODE,		"DECODE",
  IOS_ENCODE,		"ENCODE",
  IOS_PRINT,		"PRINT",
  IOS_READ,		"READ",
  IOS_REWRITE,		"REWRITE",
  IOS_TYPE,		"TYPE",
  IOS_WRITE,		"WRITE",
  IOS_CR_FWU,		"UNFORMATTED_WRITE",
  IOS_CR_FRU,		"UNFORMATTED_READ",
  IOS_CR_FWF,		"FORMATTED_WRITE",
  IOS_CR_FRF,		"FORMATTED_READ",
  IOS_CR_FWN,		"NAMELIST_WRITE",
  IOS_CR_FRN,		"NAMELIST_READ",
  IOS_INQLENGTH,	"INQUIRE_LENGTH",
  IOS_CR_OPEN,		"OPEN",
  IOS_CR_CLOSE,		"CLOSE",
  IOS_CR_ENDFILE,	"ENDFILE",
  IOS_CR_REWIND,	"REWIND",
  IOS_CR_INQUIRE,	"INQUIRE",
  IOS_CR_BACKSPACE,	"BACKSPACE",
  IOS_CR_BUFFERIN,	"BUFFERIN",
  IOS_CR_BUFFEROUT,	"BUFFEROUT"
};

struct {
  IOITEM   opcode;
  char   * name;
} ioitem_name_table [] = {
  (IOITEM) 0,		NULL,
  IOU_NONE,		"NONE",
  IOU_DEFAULT,		"DEFAULT",
  IOU_EXTERNAL,		"EXTERNAL",
  IOU_INTERNAL,		"INTERNAL",
  IOU_DOPE,		"DOPE",
  (IOITEM) 6,		NULL,		/* spare */
  (IOITEM) 7,		NULL,		/* spare */
  (IOITEM) 8,		NULL,		/* spare */
  (IOITEM) 9,		NULL,		/* spare */
  IOF_NONE,		"NONE",
  IOF_ASSIGNED_VAR,	"ASSIGNED_VAR",
  IOF_CHAR_EXPR,	"CHAR_EXPR",
  IOF_LABEL,		"LABEL",
  IOF_LIST_DIRECTED,	"LIST_DIRECTED",
  IOF_NAMELIST_DIRECTED,"NAMELIST_DIRECTED",
  IOF_UNFORMATTED,	"UNFORMATTED",
  IOF_CR_PARSFMT,	"PREPARSED_FORMAT",
  IOF_CR_FMTSRC,	"FORMAT_SOURCE",
  IOF_CR_FMTSRC_DOPE,	"FORMAT_SOURCE_DOPE",
  (IOITEM) 20,		NULL,		/* spare */
  (IOITEM) 21,		NULL,		/* spare */
  (IOITEM) 22,		NULL,		/* spare */
  (IOITEM) 23,		NULL,		/* spare */
  (IOITEM) 24,		NULL,		/* spare */
  IOC_ACCESS,		"ACCESS",
  IOC_ASSOCIATEVARIABLE,"ASSOCIATEVARIABLE",
  IOC_BLANK,		"BLANK",
  IOC_CARRIAGECONTROL,	"CARRIAGECONTROL",
  IOC_DEFAULTFILE,	"DEFAULTFILE",
  IOC_DIRECT,		"DIRECT",
  IOC_DISPOSE,		"DISPOSE",
  IOC_END,		"END",
  IOC_ERR,		"ERR",
  IOC_EXIST,		"EXIST",
  IOC_FILE,		"FILE",
  IOC_FORM,		"FORM",
  IOC_FORMATTED,	"FORMATTED",
  IOC_IOSTAT,		"IOSTAT",
  IOC_KEY,		"KEY",
  IOC_KEYEQ,		"KEYEQ",
  IOC_KEYGE,		"KEYGE",
  IOC_KEYGT,		"KEYGT",
  IOC_KEY_START,	"KEY_START",
  IOC_KEY_END,		"KEY_END",
  IOC_KEY_CHARACTER,	"KEY_CHARACTER",
  IOC_KEY_INTEGER,	"KEY_INTEGER",
  IOC_KEYED,		"KEYED",
  IOC_KEYID,		"KEYID",
  IOC_MAXREC,		"MAXREC",
  IOC_NAME,		"NAME",
  IOC_NAMED,		"NAMED",
  IOC_NEXTREC,		"NEXTREC",
  IOC_NML,		"NML",
  IOC_NUMBER,		"NUMBER",
  IOC_OPENED,		"OPENED",
  IOC_ORGANIZATION,	"ORGANIZATION",
  IOC_READONLY,		"READONLY",
  IOC_REC,		"REC",
  IOC_RECCOUNT,		"RECCOUNT",
  IOC_RECL,		"RECL",
  IOC_RECORDTYPE,	"RECORDTYPE",
  IOC_SEQUENTIAL,	"SEQUENTIAL",
  IOC_SHARED,		"SHARED",
  IOC_STATUS,		"STATUS",
  IOC_TYPE,		"TYPE",
  IOC_U,		"U",
  IOC_UNFORMATTED,	"UNFORMATTED",
  IOC_VARFMT,		"VARFMT",
  IOC_VARFMT_ORIGFMT,	"VARFMT_ORIGFMT",
  IOC_CR_EEEFLAG,	"END_EOR_EOF_FLAG",
  IOC_ADVANCE,		"ADVANCE",
  IOC_SIZE,		"SIZE",
  IOC_CR_FLFLAG,	"FIRST_LAST_FLAG",
  IOC_EOR,		"EOR",
  IOC_INQLENGTH_VAR,	"INQLENGTH_VAR",
  IOC_CR_EDFLAG,	"ENCODE_DECODE_FLAG",
  IOC_PAD,		"PAD",
  IOC_DELIM,		"DELIM",
  IOC_ACTION,		"ACTION",
  IOC_POSITION,		"POSITION",
  IOC_READWRITE,	"READWRITE",
  IOC_WRITE,		"WRITE",
  IOC_READ,		"READ",
  IOC_ERRFLAG,		"ERRFLAG",
  (IOITEM) 85,		NULL,		/* spare */
  (IOITEM) 86,		NULL,		/* spare */
  (IOITEM) 87,		NULL,		/* spare */
  (IOITEM) 88,		NULL,		/* spare */
  (IOITEM) 89,		NULL,		/* spare */
  (IOITEM) 90,		NULL,		/* spare */
  (IOITEM) 91,		NULL,		/* spare */
  (IOITEM) 92,		NULL,		/* spare */
  (IOITEM) 93,		NULL,		/* spare */
  (IOITEM) 94,		NULL,		/* spare */
  IOL_ARRAY,		"ARRAY",
  IOL_CHAR,		"CHAR",
  IOL_CHAR_ARRAY,	"CHAR_ARRAY",
  IOL_EXPR,		"EXPR",
  IOL_IMPLIED_DO,	"IMPLIED_DO",
  IOL_IMPLIED_DO_1TRIP,	"IMPLIED_DO_1TRIP",
  IOL_LOGICAL,		"LOGICAL",
  IOL_RECORD,		"RECORD",
  IOL_VAR,		"VAR",
  IOL_DOPE,		"DOPE",
  (IOITEM) 105,		NULL,		/* spare */
  (IOITEM) 106,		NULL,		/* spare */
  (IOITEM) 107,		NULL,		/* spare */
  (IOITEM) 108,		NULL,		/* spare */
  (IOITEM) 109,		NULL,		/* spare */
  (IOITEM) 110,		NULL,		/* spare */
  (IOITEM) 111,		NULL,		/* spare */
  (IOITEM) 112,		NULL,		/* spare */
  (IOITEM) 113,		NULL,		/* spare */
  (IOITEM) 114,		NULL,		/* spare */
};

char *
get_intrinsic_name ( INTRINSIC opcode )
{
  static INT32 init_intrinsic = FALSE;

  if ( ! init_intrinsic ) {
    init_intrinsic = TRUE;

    for (INT opc = INTRINSIC_FIRST; opc <= INTRINSIC_LAST; opc++ ) {
      if ( opc != intrinsic_name_table [opc].opcode ) {
        printf ( "get_intrinsic_name : %d %d %s\n", opc,
                 intrinsic_name_table [opc].opcode,
                 intrinsic_name_table [opc].name );
        printf ( "intrinsic names out of sync\n" );
	exit (RC_INTERNAL_ERROR);
      }
    }
  }

  return intrinsic_name_table [opcode].name;
}

char *
get_iostatement_name ( IOSTATEMENT opcode )
{
  static INT32 init_iostatement = FALSE;

  if ( ! init_iostatement ) {
    init_iostatement = TRUE;

    for (INT opc = IOSTATEMENT_FIRST; opc <= IOSTATEMENT_LAST; opc++ ) {
      if ( opc != iostatement_name_table [opc].opcode ) {
        printf ( "get_iostatement_name : %d %d %s\n", opc,
                 iostatement_name_table [opc].opcode,
                 iostatement_name_table [opc].name );
        printf ( "iostatement names out of sync\n" );
	exit (RC_INTERNAL_ERROR);
      }
    }
  }

  return iostatement_name_table [opcode].name;
}

char *
get_ioitem_name ( IOITEM opcode )
{
  static INT32 init_ioitem = FALSE;

  if ( ! init_ioitem ) {
    init_ioitem = TRUE;

    for (INT opc = IOITEM_FIRST; opc <= IOITEM_LAST; opc++ ) {
      if ( opc != ioitem_name_table [opc].opcode ) {
        printf ( "get_ioitem_name : %d %d %s\n", opc,
                 ioitem_name_table [opc].opcode,
                 ioitem_name_table [opc].name );
        printf ( "ioitem names out of sync\n" );
	exit (RC_INTERNAL_ERROR);
      }
    }
  }

  return ioitem_name_table [opcode].name;
}

char *
get_iolibrary_name( IOLIB lib)
{
  switch (lib) {
   case IOLIB_UNSPECIFIED:
     return ("unspec");
   case IOLIB_MIPS:
     return ("mips");
   case IOLIB_CRAY:
     return ("cray");
   default:
     return ("unknown");
  }
}
