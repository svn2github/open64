# Generated automatically from Makefile.in by configure.
# po/Makefile for libelf.
# Copyright (C) 1995, 1996 Michael Riepe <michael@stud.uni-hannover.de>
# 
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) any later version.
# 
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Library General Public License for more details.
# 
# You should have received a copy of the GNU Library General Public
# License along with this library; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# @(#) $Id: Makefile,v 1.1.1.1 2005/10/21 19:00:00 marcel Exp $

prefix = /usr/local
exec_prefix = ${prefix}
localedir = $(prefix)/share/locale

CC = gcc
RM = rm -f
MV = mv -f
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644

GENCAT = 
GMSGFMT = /usr/bin/msgfmt
MSGFMT = /usr/bin/msgfmt
XGETTEXT = /usr/bin/xgettext
TUPDATE = tupdate

CFLAGS = -g -O2
CPPFLAGS = 
DEFS = -DHAVE_CONFIG_H
LDFLAGS = 
LIBS = 

# no user serviceable parts below

PACKAGE = libelf
VERSION = 0.7.0

SHELL = /bin/sh


srcdir = .
top_srcdir = ..

topdir = ..
subdir = po

.SUFFIXES:
.SUFFIXES: .po .mo .gmo .msg .cat

.po.mo:
	@$(RM) $@
	$(MSGFMT) -o $@ $<

.po.gmo:
	file=$(srcdir)/`echo $*|sed 's,.*/,,'`.gmo; \
	  $(RM) $$file && $(GMSGFMT) -o $$file $<

.msg.cat:
	@$(RM) $@
	$(GENCAT) $@ $<

POFILES = 
GMOFILES = 
MSGFILES = 

DISTFILES = \
	gmo2msg.c Makefile.in $(PACKAGE).pot stamp-po \
	$(POFILES) $(GMOFILES) $(MSGFILES)

POTFILES = $(top_srcdir)/lib/errors.h

CATALOGS = 
CATOBJEXT = .gmo
INSTOBJEXT = .mo

all: $(CATALOGS)

install: all install-data

install-data: $(top_srcdir)/mkinstalldirs
	catalogs="$(CATALOGS)"; \
	for cat in $$catalogs; do \
	  lang=`echo $$cat | sed 's,$(CATOBJEXT)$$,,'`; \
	  dir=$(localedir)/$$lang/LC_MESSAGES; \
	  $(SHELL) $(top_srcdir)/mkinstalldirs $$dir; \
	  if test -r $$cat; then \
	    $(INSTALL_DATA) $$cat $$dir/$(PACKAGE)$(INSTOBJEXT); \
	  else \
	    $(INSTALL_DATA) $(srcdir)/$$cat $$dir/$(PACKAGE)$(INSTOBJEXT); \
	  fi; \
	done

uninstall:
	catalogs="$(CATALOGS)"; \
	for cat in $$catalogs; do \
	  lang=`echo $$cat | sed 's,$(CATOBJEXT)$$,,'`; \
	  $(RM) $(localedir)/$$lang/LC_MESSAGES/$(PACKAGE)$(INSTOBJEXT); \
	done

mostlyclean:
	$(RM) core core.* $(PACKAGE).po *.po.tmp

clean: mostlyclean

distclean: clean
	$(RM) Makefile gmo2msg *.mo *.cat

maintainer-clean: distclean
	$(RM) stamp-po

distdir = $(topdir)/$(PACKAGE)-$(VERSION)/$(subdir)
dist: update-po $(DISTFILES)
	if test -d $(distdir); then true; else mkdir $(distdir); fi
	for file in $(DISTFILES); do \
	  ln $(srcdir)/$$file $(distdir) >/dev/null 2>&1 || \
	    cp -p $(srcdir)/$$file $(distdir) || exit 1; \
	done

$(PACKAGE).pot: $(POTFILES)
	$(XGETTEXT) -c -d$(PACKAGE) -k_ $(POTFILES)
	if cmp -s $(PACKAGE).po $(srcdir)/$(PACKAGE).pot; then \
	  $(RM) $(PACKAGE).po; \
	else \
	  $(RM) $(srcdir)/$(PACKAGE).pot && \
	    $(MV) $(PACKAGE).po $(srcdir)/$(PACKAGE).pot; \
	fi

update-po: stamp-po
stamp-po: $(PACKAGE).pot
	pofiles="$(POFILES)"; \
	cd $(srcdir) && for po in $$pofiles; do \
	  $(RM) $$po.tmp; \
	  if $(TUPDATE) $(PACKAGE).pot $$po > $$po.tmp; then \
	    $(RM) $$po; \
	    $(MV) $$po.tmp $$po; \
	  else \
	    echo "tupdate for $$po failed!"; \
	    $(RM) $$po.tmp; \
	  fi; \
	done
	$(RM) $@ && echo timestamp > $@

# Create X/Open message catalog sources from .gmo files.

.gmo.msg:
	$(MAKE) $(srcdir)/gmo2msg
	LANGUAGE=`echo $*|sed 's,.*/,,'`; export LANGUAGE; \
	  cd $(srcdir) && $(RM) $$LANGUAGE.msg && ./gmo2msg > $$LANGUAGE.msg

.SUFFIXES: .c

.c:
	@$(RM) $@
	$(CC) $(DEFS) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) $(XCFLAGS) \
	  $(LDFLAGS) $*.c $(LIBS) -lintl -o $@

INCLUDES = -I$(topdir) -I. -I$(topdir)/lib -I$(srcdir) -I$(top_srcdir)/lib

Makefile: Makefile.in $(topdir)/config.status
	cd $(topdir) && CONFIG_FILES=$(subdir)/$@ CONFIG_HEADERS= ./config.status

# Tell versions [3.59,3.63) of GNU make not to export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
