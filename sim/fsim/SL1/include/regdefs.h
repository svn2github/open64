#ifndef regdef_sl1_INCLUDED
#define regdef_sl1_INCLUDED

/*********************************************************************\
 |*                                                                  *|   
 |*    Copyright (c) 2006 by SimpLight Nanoelectronics.              *|
 |*    All rights reserved                                           *|
 |*                                                                  *|
 |* This material constitutes the trade secrets and confidential,    *| 
 |* proprietary information of SimpLight.  This material is not to   *|  
 |* be disclosed, reproduced, copied, or used in any manner  not     *|  
 |* permitted under license from SimpLight Nanoelectronics Ltd.      *|  
 |*                                                                  *|   
\*********************************************************************/ 

// File Name         : sl1.vh
// Owner             : Simon Moy
// Creation Date     : August 31, 2006                                               
// Description       : The RTL header file for SL1 project
// $Id: sl1.vh 24934 2008-06-19 21:46:45Z stanleyli $

// ASIC Mask Version Number Define
#define ASIC_VERSION_WIDTH 		 (4)

// FPGA Synthesis Define        
// `define FPGA

// DEBUG defines
#define DBG_PORT_WIDTH 		 (32)
#define DBG_PORT_SEL_WIDTH 		 (8)

// TEST defines 
// Defined SL1 test mode bits as TEST_MODES = {TEST_MODE_IN,ATE_MODE[3:0]}. -SL 05/05/08
#define TEST_MODE_WIDTH 		 (5)
#define	TEST_MODE_FUNC		 0x0
#define	TEST_MODE_MEMBIST		 0x11
#define	TEST_MODE_PLL		 0x12
#define	TEST_MODE_USBPHY		 0x13
#define	TEST_MODE_PLLBP		 0x14
#define	TEST_MODE_PLLSYSCBP		 0x15
#define	TEST_MODE_STANDBY		 0x16
#define	TEST_MODE_IOMUXC		 0x17
#define	TEST_MODE_STUCKAT		 0x18
#define	TEST_MODE_ATSP140M		 0x19
#define	TEST_MODE_ATSP100M		 0x1a
#define	TEST_MODE_ATSP70M		 0x1c

// AMBA-AHB defines:
#define AHB_ADDR_THREAD_ID 		 (31)
#define AHB_ADDR_THREAD_CORE 	 (0)
#define AHB_ADDR_THREAD_DSP 		 (1)

#define AHB_ADDR_WIDTH 		 (32)
#define AHB_DATA_WIDTH 		 (32)
#define AHB_SIZE_WIDTH 		 (3)
#define AHB_TRANS_WIDTH 		 (2)
#define AHB_BURST_WIDTH 		 (3)
#define AHB_RSPS_WIDTH 		 (2)

#define	AHB_BURST_SINGLE		 0x0
#define	AHB_BURST_INCR		 0x1
#define	AHB_BURST_WRAP4		 0x2
#define	AHB_BURST_INCR4		 0x3
#define	AHB_BURST_WRAP8		 0x4
#define	AHB_BURST_INCR8		 0x5
#define	AHB_BURST_WRAP16		 0x6
#define	AHB_BURST_INCR16		 0x7

#define	AHB_TRANS_IDLE		 0x0
#define	AHB_TRANS_BUSY		 0x1
#define	AHB_TRANS_NOSEQ		 0x2
#define	AHB_TRANS_SEQ		 0x3

#define	AHB_SIZE_BYTE		 0x0
#define	AHB_SIZE_HALF		 0x1
#define	AHB_SIZE_WORD		 0x2

#define	AHB_RSPS_OKAY		 0x0
#define	AHB_RSPS_ERROR		 0x1
#define	AHB_RSPS_RETRY		 0x2
#define	AHB_RSPS_SPLIT		 0x3

// cbus defines:
#define CBUS_DATA_WIDTH 		 (32)
#define CBUS_ADDR_WIDTH 		 (32)
#define CBUS_MASK_BITS 		 (CBUS_DATA_WIDTH/8)

// sram defines:
#define SRAM_ADDR_WIDTH 		 (32)
#define SRAM_DATA_WIDTH 		 (32)

// d-cache defines:
#define DCA_LINES 			 (8*4)
#define DCA_SETS 			 (2)

// i-cache defines:
#define ICA_LINES 			 (8*4)
#define ICA_SETS 			 (2)

// dma defines:
#define DMA_CHANNELS 		 (16)
// intrc defines:
#define INTRC_INTERRUPTS 		 (32)
#define INTRC_NESTS 			 (4)
#define INTRC_RUNS 			 (8)

// external interface defines;
#define XI_RQSTS 			  (3)
#define XI_ADDR_WIDTH 		 (32)
#define XI_DATA_WIDTH 		 (32)
#define XI_BASE_WIDTH 		 (32)
#define XI_TAG_WIDTH 		 (2)
#define XI_TAG_ICA			0x1
#define XI_TAG_DCA			0x2
#define XI_TAG_DMA			0x3

// memory-map defines: 
#define	CORE_REGS_BASE		0x02000000
#define CORE_BUF_BASE 		 (CORE_REGS_BASE + CORE_REGS_SPACE)
#define	CORE_DARAM_BASE		0x04000000
#define	CORE_IRAM_BASE		0x08000000
#define	CORE_BOOTROM_BASE		0x00100000
#define	CORE_FLASH_BASE		0x10000000
#define CORE_DRAM_BASE		0x60000000

#define	DSP_REGS_BASE		0x02000000
//`define DSP_DMALUT_BASE		`DSP_REGS_BASE + `DSP_REGS_SPACE
#define DSP_BUF_BASE 		 (DSP_REGS_BASE + DSP_REGS_SPACE)
#define	DSP_DARAM_BASE		0x04000000
#define	DSP_IRAM_BASE		0x08000000
#define	DSP_FLASH_BASE		0x10000000
#define	DSP_DRAM_BASE		0x60000000

#define CORE_REGS_SPACE 		 (32*1024*1024)
#define CORE_BUF_SPACE 		 (4*1024)
#define CORE_DARAM_SPACE 		 (64*1024*1024)
#define CORE_DARAM_SIZE 		 (64*1024)
#define CORE_IRAM_SPACE 		 (64*1024*1024)
#define CORE_IRAM_SIZE 		 (64*1024)
#define CORE_BOOTROM_SPACE 		 (4*1024)
#define CORE_FLASH_SPACE 		 (256*1024*1024)
#define CORE_DRAM_SPACE 		 (256*1024*1024)

#define DSP_REGS_SPACE 		 (32*1024*1024)
//`define DSP_DMALUT_SPACE		4*1024
#define DSP_BUF_SPACE 		 (4*1024)
#define DSP_DARAM_SPACE 		 (64*1024*1024)
#define DSP_DARAM_SIZE 		 (64*1024)
#define DSP_IRAM_SPACE 		 (64*1024*1024)
#define DSP_IRAM_SIZE 		 (64*1024)
#define DSP_FLASH_SPACE 		 (256*1024*1024)
#define DSP_DRAM_SPACE 		 (256*1024*1024)


// MMR Defines
// The following defines the MMR bases, spaces, offsets of each individual within the peripheral space:
// Note that both threads use the same index and currently we allow both threads 
// to be able to access all peripherals:

// MMR Base Defines
//`define REGS_CBUS_BASE		32'h400
//`define REGS_AMBA_BASE            32'h1000
#define REGS_CBUS_BASE		0x02000000
#define REGS_AMBA_BASE            	0x02010000

// The following are MMR spaces in units of Bytes:
#define REGS_SPACE_DMA 		 (2*1024)
#define REGS_SPACE_INTRC 		 (1*1024)
#define REGS_SPACE_SYSC 		 (2*1024)
#define REGS_SPACE_SRAM 		 (2*1024)
#define REGS_SPACE_TIMERS 		 (2*1024)
#define REGS_SPACE_RTC                (2*1024)
#define REGS_SPACE_WDT                (2*1024)
#define REGS_SPACE_XI 		 (2*1024)
#define REGS_SPACE_AHBC 		 (1024)
#define REGS_SPACE_ASMC 		 (1024)
#define REGS_SPACE_ASMC1 		 (1024)
//`define REGS_SPACE_AHBCRES        1*1024
#define REGS_SPACE_ASMC2 		 (1024)
#define REGS_SPACE_SDMC 		 (128)
#define REGS_SPACE_SDMCRES 		 ((4*1024 - (REGS_SPACE_SDMC)))
#define REGS_SPACE_RSVD1              (4*1024)
#define REGS_SPACE_RSVD2              (4*1024)
#define REGS_SPACE_RSVD3              (4*1024)
#define REGS_SPACE_RFICON 		 (4*1024)
#define REGS_SPACE_RFIIQ 		 (4*1024)
#define REGS_SPACE_GRFICON 		 (4*1024)
#define REGS_SPACE_GRFIIQ 		 (4*1024)
#define REGS_SPACE_USBOTG 		 (4*1024)
#define REGS_SPACE_LCD 		 (4*1024)
#define REGS_SPACE_APBBR 		 (4*1024)
#define REGS_SPACE_OGPS0 		 (4*1024)
#define REGS_SPACE_OGPS1 		 (4*1024)
#define REGS_SPACE_RSVD0 		 (128)
#define REGS_SPACE_UART2 		 (128)
#define REGS_SPACE_UART3 		 (128)
#define REGS_SPACE_KEYP 		 (128)
#define REGS_SPACE_SIMC 		 (128)
#define REGS_SPACE_MMCSD 		 (128)
#define REGS_SPACE_PMU                (128)
#define REGS_SPACE_PWM 		 (128)
#define REGS_SPACE_DBGPRES 		 (128)
#define REGS_SPACE_GSPI 		 (128)
#define REGS_SPACE_GSSI               (128)
#define REGS_SPACE_GI2C 		 (128)
#define REGS_SPACE_GPIO0 		 (128)
#define REGS_SPACE_GPIO1              (128)
#define REGS_SPACE_GPIO2              (128)
#define REGS_SPACE_GPIO3              (128)
#define REGS_SPACE_GPIO4              (128)

// MMR Offset Defines
// Cbus:
// Cbus MMRs offset must start from the location of 32'400 as the base address after the 1KB reserved space
#define REGS_OFFSET_DMA 		 (REGS_CBUS_BASE)
#define REGS_OFFSET_INTRC_T0 	 (REGS_OFFSET_DMA +REGS_SPACE_DMA)
#define REGS_OFFSET_INTRC_T1 	 (REGS_OFFSET_INTRC_T0 + REGS_SPACE_INTRC)
#define REGS_OFFSET_SYSC 		 (REGS_OFFSET_INTRC_T1 + REGS_SPACE_INTRC)
#define REGS_OFFSET_SRAM 		 (REGS_OFFSET_SYSC +REGS_SPACE_SYSC)
#define REGS_OFFSET_TIMERS 		 (REGS_OFFSET_SRAM +REGS_SPACE_SRAM)
#define REGS_OFFSET_RTC               (REGS_OFFSET_TIMERS +REGS_SPACE_TIMERS)
#define REGS_OFFSET_WDT 		 (REGS_OFFSET_RTC +REGS_SPACE_RTC)
#define REGS_OFFSET_XI 		 (REGS_OFFSET_WDT +REGS_SPACE_WDT)

// AHB:
// AMBA MMRs offset must start from the location of 32'1000 at 4KB boundary as the base address 
#define REGS_OFFSET_AHBC 		 (REGS_AMBA_BASE)
#define REGS_OFFSET_ASMC 		 (REGS_OFFSET_AHBC +REGS_SPACE_AHBC)
#define REGS_OFFSET_ASMC1 		 (REGS_OFFSET_ASMC +REGS_SPACE_ASMC)
//`define REGS_OFFSET_AHBCRES         `REGS_OFFSET_ASMC1 +`REGS_SPACE_ASMC1
//`define REGS_OFFSET_SDMC		`REGS_OFFSET_AHBCRES +`REGS_SPACE_AHBCRES
#define REGS_OFFSET_ASMC2 		 (REGS_OFFSET_ASMC1 +REGS_SPACE_ASMC1)
#define REGS_OFFSET_SDMC 		 (REGS_OFFSET_ASMC2 +REGS_SPACE_ASMC2)
#define REGS_OFFSET_SDMCRES 		 (REGS_OFFSET_SDMC +REGS_SPACE_SDMC)
#define REGS_OFFSET_RSVD1             (REGS_OFFSET_SDMCRES +REGS_SPACE_SDMCRES)
#define REGS_OFFSET_RSVD2             (REGS_OFFSET_RSVD1 +REGS_SPACE_RSVD1)
#define REGS_OFFSET_RSVD3             (REGS_OFFSET_RSVD2 +REGS_SPACE_RSVD2)
#define REGS_OFFSET_RFICON 		 (REGS_OFFSET_RSVD3 +REGS_SPACE_RSVD3)
#define REGS_OFFSET_RFIIQ 		 (REGS_OFFSET_RFICON +REGS_SPACE_RFICON)
#define REGS_OFFSET_GRFICON 		 (REGS_OFFSET_RFIIQ +REGS_SPACE_RFIIQ)
#define REGS_OFFSET_GRFIIQ 		 (REGS_OFFSET_GRFICON +REGS_SPACE_GRFICON)
#define REGS_OFFSET_USBOTG 		 (REGS_OFFSET_GRFIIQ +REGS_SPACE_GRFIIQ)
#define REGS_OFFSET_LCD 		 (REGS_OFFSET_USBOTG +REGS_SPACE_USBOTG)

// APB:
#define REGS_OFFSET_APBBASE 		 (REGS_OFFSET_LCD + REGS_SPACE_LCD)
#define REGS_OFFSET_RSVD0             (REGS_OFFSET_LCD + REGS_SPACE_LCD)
#define REGS_OFFSET_UART2             (REGS_OFFSET_RSVD0 + REGS_SPACE_RSVD0)
#define REGS_OFFSET_UART3 		 (REGS_OFFSET_UART2 + REGS_SPACE_UART2)
#define REGS_OFFSET_KEYP 		 (REGS_OFFSET_UART3 + REGS_SPACE_UART3)
#define REGS_OFFSET_SIMC 		 (REGS_OFFSET_KEYP + REGS_SPACE_KEYP)
#define REGS_OFFSET_MMCSD 		 (REGS_OFFSET_SIMC + REGS_SPACE_SIMC)
#define REGS_OFFSET_PMU 		 (REGS_OFFSET_MMCSD + REGS_SPACE_MMCSD)
#define REGS_OFFSET_PWM 		 (REGS_OFFSET_PMU + REGS_SPACE_PMU)
#define REGS_OFFSET_DBGPRES 		 (REGS_OFFSET_PWM + REGS_SPACE_PWM)
#define REGS_OFFSET_GSPI               (REGS_OFFSET_DBGPRES + REGS_SPACE_DBGPRES)
#define REGS_OFFSET_GSSI               (REGS_OFFSET_GSPI + REGS_SPACE_GSPI)
#define REGS_OFFSET_GI2C 		 (REGS_OFFSET_GSSI + REGS_SPACE_GSSI)
#define REGS_OFFSET_GPIO0 		 (REGS_OFFSET_GI2C + REGS_SPACE_GI2C)
#define REGS_OFFSET_GPIO1             (REGS_OFFSET_GPIO0 + REGS_SPACE_GPIO0)
#define REGS_OFFSET_GPIO2             (REGS_OFFSET_GPIO1 + REGS_SPACE_GPIO1)
#define REGS_OFFSET_GPIO3             (REGS_OFFSET_GPIO2 + REGS_SPACE_GPIO2)
#define REGS_OFFSET_GPIO4             (REGS_OFFSET_GPIO3 + REGS_SPACE_GPIO3)

// OGPS:
#define REGS_OFFSET_OGPS0 		 (REGS_OFFSET_APBBASE + REGS_SPACE_APBBR)
#define REGS_OFFSET_OGPS1 		 (REGS_OFFSET_OGPS0 + REGS_SPACE_OGPS0)

// MMR Address Defines 
// AHBC
// All AHBC configuration registers can only be accessed as word
#define REGS_ADDR_AHBC_PTYP 		 (REGS_OFFSET_AHBC+4)
#define REGS_ADDR_AHBC_ASMBASE 	 (REGS_OFFSET_AHBC+8)
#define REGS_ADDR_AHBC_ASMMASK 	 (REGS_OFFSET_AHBC+12)
#define REGS_ADDR_AHBC_SDMBASE 	 (REGS_OFFSET_AHBC+16)
#define REGS_ADDR_AHBC_SDMMASK 	 (REGS_OFFSET_AHBC+20)
#define REGS_ADDR_AHBC_ADDEXCPT 	 (REGS_OFFSET_AHBC+24)

// ASMC
// All ASMC configuration registers can only be accessed as word
#define REGS_ADDR_ASMC_BW0 		 (REGS_OFFSET_ASMC+0)
#define REGS_ADDR_ASMC_BW1 		 (REGS_OFFSET_ASMC+4)
#define REGS_ADDR_ASMC_BW2 		 (REGS_OFFSET_ASMC+8)
#define REGS_ADDR_ASMC_BW3 		 (REGS_OFFSET_ASMC+12)
#define REGS_ADDR_ASMC_BW4 		 (REGS_OFFSET_ASMC+16)
#define REGS_ADDR_ASMC_BW5 		 (REGS_OFFSET_ASMC+20)
#define REGS_ADDR_ASMC_BW6 		 (REGS_OFFSET_ASMC+24)
#define REGS_ADDR_ASMC_BW7 		 (REGS_OFFSET_ASMC+28)
#define REGS_ADDR_ASMC_BBASE0 	 (REGS_OFFSET_ASMC+32)
#define REGS_ADDR_ASMC_BMASK0 	 (REGS_OFFSET_ASMC+36)
#define REGS_ADDR_ASMC_BBASE1 	 (REGS_OFFSET_ASMC+40)
#define REGS_ADDR_ASMC_BMASK1 	 (REGS_OFFSET_ASMC+44)
#define REGS_ADDR_ASMC_BBASE2 	 (REGS_OFFSET_ASMC+48)
#define REGS_ADDR_ASMC_BMASK2 	 (REGS_OFFSET_ASMC+52)
#define REGS_ADDR_ASMC_BBASE3 	 (REGS_OFFSET_ASMC+56)
#define REGS_ADDR_ASMC_BMASK3 	 (REGS_OFFSET_ASMC+60)
#define REGS_ADDR_ASMC_BBASE4 	 (REGS_OFFSET_ASMC+64)
#define REGS_ADDR_ASMC_BMASK4 	 (REGS_OFFSET_ASMC+68)
#define REGS_ADDR_ASMC_BBASE5 	 (REGS_OFFSET_ASMC+72)
#define REGS_ADDR_ASMC_BMASK5 	 (REGS_OFFSET_ASMC+76)
#define REGS_ADDR_ASMC_BBASE6 	 (REGS_OFFSET_ASMC+80)
#define REGS_ADDR_ASMC_BMASK6 	 (REGS_OFFSET_ASMC+84)
#define REGS_ADDR_ASMC_BBASE7 	 (REGS_OFFSET_ASMC+88)
#define REGS_ADDR_ASMC_BMASK7 	 (REGS_OFFSET_ASMC+92)
#define REGS_ADDR_ASMC_CFG0 		 (REGS_OFFSET_ASMC+96)
#define REGS_ADDR_ASMC_CFG1 		 (REGS_OFFSET_ASMC+100)
#define REGS_ADDR_ASMC_CFG2 		 (REGS_OFFSET_ASMC+104)
#define REGS_ADDR_ASMC_CFG3 		 (REGS_OFFSET_ASMC+108)
#define REGS_ADDR_ASMC_CFG4 		 (REGS_OFFSET_ASMC+112)
#define REGS_ADDR_ASMC_CFG5 		 (REGS_OFFSET_ASMC+116)
#define REGS_ADDR_ASMC_CFG6 		 (REGS_OFFSET_ASMC+120)
#define REGS_ADDR_ASMC_CFG7 		 (REGS_OFFSET_ASMC+124)


// ASMC1 - Added to config ASMC1 Controller for accessing to OGPS's Lower 4KB MMR0 Space. -SL 01/23/08
// All ASMC1 configuration registers can only be accessed as word
//`define	REGS_ADDR_ASMC1_BW0		`REGS_OFFSET_ASMC1+0 
//`define	REGS_ADDR_ASMC1_BW1		`REGS_OFFSET_ASMC1+4 
//`define	REGS_ADDR_ASMC1_BBASE0	`REGS_OFFSET_ASMC1+8 
//`define	REGS_ADDR_ASMC1_BMASK0	`REGS_OFFSET_ASMC1+12 
//`define	REGS_ADDR_ASMC1_BBASE1	`REGS_OFFSET_ASMC1+16 
//`define	REGS_ADDR_ASMC1_BMASK1	`REGS_OFFSET_ASMC1+20 
//`define	REGS_ADDR_ASMC1_CFG0	`REGS_OFFSET_ASMC1+24 
//`define	REGS_ADDR_ASMC1_CFG1	`REGS_OFFSET_ASMC1+28 
#define REGS_ADDR_ASMC1_BW0 		 (REGS_OFFSET_ASMC1+0)
#define REGS_ADDR_ASMC1_BBASE0 	 (REGS_OFFSET_ASMC1+4)
#define REGS_ADDR_ASMC1_BMASK0 	 (REGS_OFFSET_ASMC1+8)
#define REGS_ADDR_ASMC1_CFG0 	 (REGS_OFFSET_ASMC1+12)

// ASMC2 - Added to config ASMC2 Controller for accessing to OGPS's Upprer 4KB MMR1 Space. -SL 06/18/08
// All ASMC2 configuration registers can only be accessed as word
#define REGS_ADDR_ASMC2_BW0 		 (REGS_OFFSET_ASMC2+0)
#define REGS_ADDR_ASMC2_BBASE0 	 (REGS_OFFSET_ASMC2+4)
#define REGS_ADDR_ASMC2_BMASK0 	 (REGS_OFFSET_ASMC2+8)
#define REGS_ADDR_ASMC2_CFG0 	 (REGS_OFFSET_ASMC2+12)


// SDMC Control Registers (SDMC MMR spaces must be accessed in word aligned and reserved spaces are invalid.)-SL
#define REGS_ADDR_SDMC_SDRCR0 	 (REGS_OFFSET_SDMC+0)
#define REGS_ADDR_SDMC_SDRCR1 	 (REGS_OFFSET_SDMC+4)
#define REGS_ADDR_SDMC_SDRCR2 	 (REGS_OFFSET_SDMC+8)
#define REGS_ADDR_SDMC_SDRCRRES0 	 (REGS_OFFSET_SDMC+12)
#define REGS_ADDR_SDMC_SDRCR8 	 (REGS_OFFSET_SDMC+32)
#define REGS_ADDR_SDMC_SDRCRRES1 	 (REGS_OFFSET_SDMC+36)
#define REGS_ADDR_SDMC_DDRCR0 	 (REGS_OFFSET_SDMC+64)
#define REGS_ADDR_SDMC_DDRCR1 	 (REGS_OFFSET_SDMC+68)
#define REGS_ADDR_SDMC_DDRCR2 	 (REGS_OFFSET_SDMC+72)
#define REGS_ADDR_SDMC_DDRCR3 	 (REGS_OFFSET_SDMC+76)
#define REGS_ADDR_SDMC_DDRCR4 	 (REGS_OFFSET_SDMC+80)
#define REGS_ADDR_SDMC_DDRCR5 	 (REGS_OFFSET_SDMC+84)
#define REGS_ADDR_SDMC_DDRCRRES 	 (REGS_OFFSET_SDMC+88)


// On-chip registers of Generic SPI defines:  // Modified to use the new GSPI define. -SL 07/03/07
#define REGS_ADDR_GSPI_SPCR 		 (REGS_OFFSET_GSPI + 0)
#define REGS_ADDR_GSPI_SPSR           (REGS_OFFSET_GSPI + 4)
#define REGS_ADDR_GSPI_SPDR           (REGS_OFFSET_GSPI + 8)
#define REGS_ADDR_GSPI_SPTCR          (REGS_OFFSET_GSPI + 12)
#define REGS_ADDR_GSPI_BCNT           (REGS_OFFSET_GSPI + 16)
#define REGS_ADDR_GSPI_DCNT 		 (REGS_OFFSET_GSPI + 20)
#define REGS_ADDR_GSPI_DIVIDE 	 (REGS_OFFSET_GSPI + 24)
#define REGS_ADDR_GSPI_ALMFULL 	 (REGS_OFFSET_GSPI + 28)
#define REGS_ADDR_GSPI_ALMEMPTY 	 (REGS_OFFSET_GSPI + 32)
#define REGS_ADDR_GSPI_INTR_MASK 	 (REGS_OFFSET_GSPI + 36)
#define REGS_ADDR_GSPI_INTR_STA 	 (REGS_OFFSET_GSPI + 40)
#define REGS_ADDR_GSPI_SPSSR 	 (REGS_OFFSET_GSPI + 44)
#define REGS_ADDR_GSPI_ENA 		 (REGS_OFFSET_GSPI + 48)

// On-chip registers of RFIC Control Interface defines: // Modified to use the new RFICON define. -SL 07/03/07
#define REGS_ADDR_RFICON_SPI_SPCR 		 (REGS_OFFSET_RFICON + 0)
#define REGS_ADDR_RFICON_SPI_SPSR        	 (REGS_OFFSET_RFICON + 4)
#define REGS_ADDR_RFICON_SPI_SPDR        	 (REGS_OFFSET_RFICON + 8)
#define REGS_ADDR_RFICON_SPI_SPTCR       	 (REGS_OFFSET_RFICON + 12)
#define REGS_ADDR_RFICON_SPI_BCNT        	 (REGS_OFFSET_RFICON + 16)
#define REGS_ADDR_RFICON_SPI_DCNT 		 (REGS_OFFSET_RFICON + 20)
#define REGS_ADDR_RFICON_SPI_DIVIDE 		 (REGS_OFFSET_RFICON + 24)
#define REGS_ADDR_RFICON_SPI_ALMFULL 	 (REGS_OFFSET_RFICON + 28)
#define REGS_ADDR_RFICON_SPI_ALMEMPTY 	 (REGS_OFFSET_RFICON + 32)
#define REGS_ADDR_RFICON_SPI_INTR_MASK 	 (REGS_OFFSET_RFICON + 36)
#define REGS_ADDR_RFICON_SPI_INTR_STA 	 (REGS_OFFSET_RFICON + 40)
#define REGS_ADDR_RFICON_SPI_TX_TRIG 	 (REGS_OFFSET_RFICON + 44)
#define REGS_ADDR_RFICON_SPI_TX_AMT 		 (REGS_OFFSET_RFICON + 48)
#define REGS_ADDR_RFICON_SPI_EVT_ENA 	 (REGS_OFFSET_RFICON + 52)

#define REGS_ADDR_RFICON_TIM_RET_VAL 	 (REGS_OFFSET_RFICON + 56)
#define REGS_ADDR_RFICON_TIM_ADJ_VAL 	 (REGS_OFFSET_RFICON + 60)
#define REGS_ADDR_RFICON_TIM_CUR_VAL 	 (REGS_OFFSET_RFICON + 64)
#define REGS_ADDR_RFICON_TIM_ENA 		 (REGS_OFFSET_RFICON + 68)

#define REGS_ADDR_RFICON_STIM_INC_OFFSET 	 (REGS_OFFSET_RFICON + 72)
#define REGS_ADDR_RFICON_STIM_RET_FRA_NUM 	 (REGS_OFFSET_RFICON + 76)
#define REGS_ADDR_RFICON_STIM_RET_TIM_NUM 	 (REGS_OFFSET_RFICON + 80)
#define REGS_ADDR_RFICON_STIM_RET_MOD 	 (REGS_OFFSET_RFICON + 84)
#define REGS_ADDR_RFICON_STIM_FRA_CNT 	 (REGS_OFFSET_RFICON + 88)

#define REGS_ADDR_RFICON_EVT_INDEX 		 (REGS_OFFSET_RFICON + 92)
#define REGS_ADDR_RFICON_EVT_DATA 		 (REGS_OFFSET_RFICON + 96)
#define REGS_ADDR_RFICON_EVT_DATA_EXT 	 (REGS_OFFSET_RFICON + 100)
#define REGS_ADDR_RFICON_EVT_STA0 		 (REGS_OFFSET_RFICON + 104)
#define REGS_ADDR_RFICON_EVT_STA1 		 (REGS_OFFSET_RFICON + 108)
#define REGS_ADDR_RFICON_EVT_ENA 		 (REGS_OFFSET_RFICON + 112)
#define REGS_ADDR_RFICON_EVT_SEL 		 (REGS_OFFSET_RFICON + 116)

#define REGS_ADDR_RFICON_GPO_EVT_ENA 	 (REGS_OFFSET_RFICON + 120)
#define REGS_ADDR_RFICON_GPO_DAT 		 (REGS_OFFSET_RFICON + 124)

#define REGS_ADDR_RFICON_FSYNC_INT_STA_DSP 	 (REGS_OFFSET_RFICON + 128)
#define REGS_ADDR_RFICON_FSYNC_INT_STA_CPU 	 (REGS_OFFSET_RFICON + 132)
#define REGS_ADDR_RFICON_FSYNC_INT_MSK_DSP 	 (REGS_OFFSET_RFICON + 136)
#define REGS_ADDR_RFICON_FSYNC_INT_MSK_CPU 	 (REGS_OFFSET_RFICON + 140)
#define REGS_ADDR_RFICON_FRA_IRQ_PNT 	 (REGS_OFFSET_RFICON + 144)
#define REGS_ADDR_RFICON_EVT_INDEX_RD 	 (REGS_OFFSET_RFICON + 148)

#define REGS_ADDR_RFICON_STIM_WK_FRA_NUM 	 (REGS_OFFSET_RFICON + 152)
#define REGS_ADDR_RFICON_STIM_WK_TIM_NUM 	 (REGS_OFFSET_RFICON + 156)

#define REGS_ADDR_RFICON_ENA 		 (REGS_OFFSET_RFICON + 160)

#define REGS_ADDR_RFICON_EVT_TAB_00 		 (REGS_OFFSET_RFICON + 256)
#define REGS_ADDR_RFICON_EVT_TAB_63 		 (REGS_OFFSET_RFICON + 508)

// On-chip registers of RFIC IQ Interface defines: 
#define REGS_ADDR_RFIIQ_SPCR 		 (REGS_OFFSET_RFIIQ + 0)
#define REGS_ADDR_RFIIQ_SPSR 		 (REGS_OFFSET_RFIIQ + 4)
#define REGS_ADDR_RFIIQ_SPDR 		 (REGS_OFFSET_RFIIQ + 8)
#define REGS_ADDR_RFIIQ_SPTCR 		 (REGS_OFFSET_RFIIQ + 12)
#define REGS_ADDR_RFIIQ_WLEN 		 (REGS_OFFSET_RFIIQ + 16)
#define REGS_ADDR_RFIIQ_PLEN 		 (REGS_OFFSET_RFIIQ + 20)
#define REGS_ADDR_RFIIQ_ALMFULL 		 (REGS_OFFSET_RFIIQ + 28)
#define REGS_ADDR_RFIIQ_ALMEMPTY 		 (REGS_OFFSET_RFIIQ + 32)
#define REGS_ADDR_RFIIQ_INTR_MASK 		 (REGS_OFFSET_RFIIQ + 36)
#define REGS_ADDR_RFIIQ_INTR_STA 		 (REGS_OFFSET_RFIIQ + 40)
#define REGS_ADDR_RFIIQ_ENA 			 (REGS_OFFSET_RFIIQ + 52)
#define REGS_ADDR_RFIIQ_DIV_VAL 		 (REGS_OFFSET_RFIIQ + 56)
#define REGS_ADDR_RFIIQ_OPE_MOD 		 (REGS_OFFSET_RFIIQ + 60)

// On-chip registers of GRFIC Control Interface defines:
#define REGS_ADDR_GRFICON_SPCR 		 (REGS_OFFSET_GRFICON + 0)
#define REGS_ADDR_GRFICON_SPSR        	 (REGS_OFFSET_GRFICON + 4)
#define REGS_ADDR_GRFICON_SPDR        	 (REGS_OFFSET_GRFICON + 8)
#define REGS_ADDR_GRFICON_SPTCR        	 (REGS_OFFSET_GRFICON + 12)
#define REGS_ADDR_GRFICON_BCNT_DADR        	 (REGS_OFFSET_GRFICON + 16)
#define REGS_ADDR_GRFICON_DCNT        	 (REGS_OFFSET_GRFICON + 20)
#define REGS_ADDR_GRFICON_DIVIDE        	 (REGS_OFFSET_GRFICON + 24)
#define REGS_ADDR_GRFICON_ALMFULL        	 (REGS_OFFSET_GRFICON + 28)
#define REGS_ADDR_GRFICON_ALMEMPTY        	 (REGS_OFFSET_GRFICON + 32)
#define REGS_ADDR_GRFICON_INTR_MASK        	 (REGS_OFFSET_GRFICON + 36)
#define REGS_ADDR_GRFICON_INTR_STA        	 (REGS_OFFSET_GRFICON + 40)
#define REGS_ADDR_GRFICON_SIF_MOD_SEL       	 (REGS_OFFSET_GRFICON + 44)
#define REGS_ADDR_GRFICON_GPO        	 (REGS_OFFSET_GRFICON + 48)
#define REGS_ADDR_GRFICON_ENA        	 (REGS_OFFSET_GRFICON + 52)

// On-chip registers of GRFIC IQ Interface defines:
#define REGS_ADDR_GRFIIQ_SPCR 		 (REGS_OFFSET_GRFIIQ + 0)
#define REGS_ADDR_GRFIIQ_SPSR 		 (REGS_OFFSET_GRFIIQ + 4)
#define REGS_ADDR_GRFIIQ_SPDR 		 (REGS_OFFSET_GRFIIQ + 8)
#define REGS_ADDR_GRFIIQ_ENA 		 (REGS_OFFSET_GRFIIQ + 12)
#define REGS_ADDR_GRFIIQ_TIM_SLP_PNT 	 (REGS_OFFSET_GRFIIQ + 16)
#define REGS_ADDR_GRFIIQ_TIM_IRQ_PNT0 	 (REGS_OFFSET_GRFIIQ + 20)
#define REGS_ADDR_GRFIIQ_TIM_IRQ_PNT1 	 (REGS_OFFSET_GRFIIQ + 24)
#define REGS_ADDR_GRFIIQ_ALMFULL 		 (REGS_OFFSET_GRFIIQ + 28)
#define REGS_ADDR_GRFIIQ_ALMEMPTY 		 (REGS_OFFSET_GRFIIQ + 32)
#define REGS_ADDR_GRFIIQ_INTR_MASK 		 (REGS_OFFSET_GRFIIQ + 36)
#define REGS_ADDR_GRFIIQ_INTR_STA 		 (REGS_OFFSET_GRFIIQ + 40)
#define REGS_ADDR_GRFIIQ_TIM_CTR 		 (REGS_OFFSET_GRFIIQ + 44)
#define REGS_ADDR_GRFIIQ_TIM_RET_VAL 	 (REGS_OFFSET_GRFIIQ + 48)
#define REGS_ADDR_GRFIIQ_TIM_ADJ_VAL 	 (REGS_OFFSET_GRFIIQ + 52)
#define REGS_ADDR_GRFIIQ_TIM_CUR_VAL 	 (REGS_OFFSET_GRFIIQ + 56)
#define REGS_ADDR_GRFIIQ_IQD_PAD_PNT 	 (REGS_OFFSET_GRFIIQ + 60)

// On-chip registers of Generic SSI defines: // Modified to use the new GSSI define. -SL 07/03/07
#define REGS_ADDR_GSSI_SPCR           	 (REGS_OFFSET_GSSI + 0)
#define REGS_ADDR_GSSI_SPSR           	 (REGS_OFFSET_GSSI + 4)
#define REGS_ADDR_GSSI_SPDR           	 (REGS_OFFSET_GSSI + 8)
#define REGS_ADDR_GSSI_SPTCR          	 (REGS_OFFSET_GSSI + 12)
#define REGS_ADDR_GSSI_WDLEN          	 (REGS_OFFSET_GSSI + 16)
#define REGS_ADDR_GSSI_DATDLY         	 (REGS_OFFSET_GSSI + 20)
#define REGS_ADDR_GSSI_CLKGDV         	 (REGS_OFFSET_GSSI + 24)
#define REGS_ADDR_GSSI_ALMFULL        	 (REGS_OFFSET_GSSI + 28)
#define REGS_ADDR_GSSI_ALMEMPTY       	 (REGS_OFFSET_GSSI + 32)
#define REGS_ADDR_GSSI_INTR_MASK      	 (REGS_OFFSET_GSSI + 36)
#define REGS_ADDR_GSSI_INTR_STA       	 (REGS_OFFSET_GSSI + 40)
#define REGS_ADDR_GSSI_SPCR2          	 (REGS_OFFSET_GSSI + 44)
#define REGS_ADDR_GSSI_FRLEN          	 (REGS_OFFSET_GSSI + 48)
#define REGS_ADDR_GSSI_FPER           	 (REGS_OFFSET_GSSI + 52)
#define REGS_ADDR_GSSI_FWID           	 (REGS_OFFSET_GSSI + 56)
#define REGS_ADDR_GSSI_ENA 		 	 (REGS_OFFSET_GSSI + 60)

// On-chip registers of PMU defines:
#define REGS_ADDR_PMU_SPCR 		 (REGS_OFFSET_PMU + 0)
#define REGS_ADDR_PMU_SPSR            (REGS_OFFSET_PMU + 4)
#define REGS_ADDR_PMU_SPDR            (REGS_OFFSET_PMU + 8)
#define REGS_ADDR_PMU_SPTCR           (REGS_OFFSET_PMU + 12)
#define REGS_ADDR_PMU_DADR            (REGS_OFFSET_PMU + 16)
#define REGS_ADDR_PMU_DCNT 		 (REGS_OFFSET_PMU + 20)
#define REGS_ADDR_PMU_DIVIDE 	 (REGS_OFFSET_PMU + 24)
#define REGS_ADDR_PMU_ALMFULL 	 (REGS_OFFSET_PMU + 28)
#define REGS_ADDR_PMU_ALMEMPTY 	 (REGS_OFFSET_PMU + 32)
#define REGS_ADDR_PMU_INTR_MASK 	 (REGS_OFFSET_PMU + 36)
#define REGS_ADDR_PMU_INTR_STA 	 (REGS_OFFSET_PMU + 40)
//`define REGS_ADDR_PMU_DATAOUT       `REGS_OFFSET_PMU + 0  + 44
//`define REGS_ADDR_PMU_DIRECTION     `REGS_OFFSET_PMU + 4  + 44
//`define REGS_ADDR_PMU_EDGE_CTRL1    `REGS_OFFSET_PMU + 8  + 44
//`define REGS_ADDR_PMU_EDGE_CTRL2    `REGS_OFFSET_PMU + 12 + 44
//`define REGS_ADDR_PMU_IRQENABLE     `REGS_OFFSET_PMU + 16 + 44
//`define REGS_ADDR_PMU_WUPENABLE     `REGS_OFFSET_PMU + 20 + 44
//`define REGS_ADDR_PMU_IRQSTATUS     `REGS_OFFSET_PMU + 24 + 44
//`define REGS_ADDR_PMU_DATAIN        `REGS_OFFSET_PMU + 28 + 44
//`define REGS_ADDR_PMU_WUPSTATUS     `REGS_OFFSET_PMU + 32 + 44
//`define REGS_ADDR_PMU_PULLDWN       `REGS_OFFSET_PMU + 36 + 44
//`define REGS_ADDR_PMU_PULLUP        `REGS_OFFSET_PMU + 40 + 44
#define REGS_ADDR_PMU_LDO_OFF         (REGS_OFFSET_PMU + 4  + 40)
#define REGS_ADDR_PMU_LDO_RST         (REGS_OFFSET_PMU + 8  + 40)
#define REGS_ADDR_PMU_LDO_CMDVCC      (REGS_OFFSET_PMU + 12 + 40)
#define REGS_ADDR_PMU_LDO_MODE        (REGS_OFFSET_PMU + 16 + 40)
#define REGS_ADDR_PMU_ENA 	         (REGS_OFFSET_PMU + 20 + 40)

// On-chip registers of Generic I2C defines:  // Modified to use the new GI2C define. -SL 07/03/07
#define REGS_ADDR_GI2C_SPCR 		 (REGS_OFFSET_GI2C + 0)
#define REGS_ADDR_GI2C_SPSR           (REGS_OFFSET_GI2C + 4)
#define REGS_ADDR_GI2C_SPDR           (REGS_OFFSET_GI2C + 8)
#define REGS_ADDR_GI2C_SPTCR          (REGS_OFFSET_GI2C + 12)
#define REGS_ADDR_GI2C_DADR           (REGS_OFFSET_GI2C + 16)
#define REGS_ADDR_GI2C_DCNT 		 (REGS_OFFSET_GI2C + 20)
#define REGS_ADDR_GI2C_DIVIDE 	 (REGS_OFFSET_GI2C + 24)
#define REGS_ADDR_GI2C_ALMFULL 	 (REGS_OFFSET_GI2C + 28)
#define REGS_ADDR_GI2C_ALMEMPTY 	 (REGS_OFFSET_GI2C + 32)
#define REGS_ADDR_GI2C_INTR_MASK 	 (REGS_OFFSET_GI2C + 36)
#define REGS_ADDR_GI2C_INTR_STA 	 (REGS_OFFSET_GI2C + 40)
#define REGS_ADDR_GI2C_ENA 		 (REGS_OFFSET_GI2C + 44)

// On-chip registers of GPIO defines:
#define REGS_ADDR_GPIO0_DATAOUT        (REGS_OFFSET_GPIO0 + 0)
#define REGS_ADDR_GPIO0_DIRECTION      (REGS_OFFSET_GPIO0 + 4)
#define REGS_ADDR_GPIO0_EDGE_CTRL1     (REGS_OFFSET_GPIO0 + 8)
#define REGS_ADDR_GPIO0_EDGE_CTRL2     (REGS_OFFSET_GPIO0 + 12)
#define REGS_ADDR_GPIO0_IRQENABLE      (REGS_OFFSET_GPIO0 + 16)
#define REGS_ADDR_GPIO0_WUPENABLE      (REGS_OFFSET_GPIO0 + 20)
#define REGS_ADDR_GPIO0_IRQSTATUS      (REGS_OFFSET_GPIO0 + 24)
#define REGS_ADDR_GPIO0_DATAIN         (REGS_OFFSET_GPIO0 + 28)
#define REGS_ADDR_GPIO0_WUPSTATUS      (REGS_OFFSET_GPIO0 + 32)

#define REGS_ADDR_GPIO1_DATAOUT        (REGS_OFFSET_GPIO1 + 0)
#define REGS_ADDR_GPIO1_DIRECTION      (REGS_OFFSET_GPIO1 + 4)
#define REGS_ADDR_GPIO1_EDGE_CTRL1     (REGS_OFFSET_GPIO1 + 8)
#define REGS_ADDR_GPIO1_EDGE_CTRL2     (REGS_OFFSET_GPIO1 + 12)
#define REGS_ADDR_GPIO1_IRQENABLE      (REGS_OFFSET_GPIO1 + 16)
#define REGS_ADDR_GPIO1_WUPENABLE      (REGS_OFFSET_GPIO1 + 20)
#define REGS_ADDR_GPIO1_IRQSTATUS      (REGS_OFFSET_GPIO1 + 24)
#define REGS_ADDR_GPIO1_DATAIN         (REGS_OFFSET_GPIO1 + 28)
#define REGS_ADDR_GPIO1_WUPSTATUS      (REGS_OFFSET_GPIO1 + 32)

#define REGS_ADDR_GPIO2_DATAOUT        (REGS_OFFSET_GPIO2 + 0)
#define REGS_ADDR_GPIO2_DIRECTION      (REGS_OFFSET_GPIO2 + 4)
#define REGS_ADDR_GPIO2_EDGE_CTRL1     (REGS_OFFSET_GPIO2 + 8)
#define REGS_ADDR_GPIO2_EDGE_CTRL2     (REGS_OFFSET_GPIO2 + 12)
#define REGS_ADDR_GPIO2_IRQENABLE      (REGS_OFFSET_GPIO2 + 16)
#define REGS_ADDR_GPIO2_WUPENABLE      (REGS_OFFSET_GPIO2 + 20)
#define REGS_ADDR_GPIO2_IRQSTATUS      (REGS_OFFSET_GPIO2 + 24)
#define REGS_ADDR_GPIO2_DATAIN         (REGS_OFFSET_GPIO2 + 28)
#define REGS_ADDR_GPIO2_WUPSTATUS      (REGS_OFFSET_GPIO2 + 32)

#define REGS_ADDR_GPIO3_DATAOUT        (REGS_OFFSET_GPIO3 + 0)
#define REGS_ADDR_GPIO3_DIRECTION      (REGS_OFFSET_GPIO3 + 4)
#define REGS_ADDR_GPIO3_EDGE_CTRL1     (REGS_OFFSET_GPIO3 + 8)
#define REGS_ADDR_GPIO3_EDGE_CTRL2     (REGS_OFFSET_GPIO3 + 12)
#define REGS_ADDR_GPIO3_IRQENABLE      (REGS_OFFSET_GPIO3 + 16)
#define REGS_ADDR_GPIO3_WUPENABLE      (REGS_OFFSET_GPIO3 + 20)
#define REGS_ADDR_GPIO3_IRQSTATUS      (REGS_OFFSET_GPIO3 + 24)
#define REGS_ADDR_GPIO3_DATAIN         (REGS_OFFSET_GPIO3 + 28)
#define REGS_ADDR_GPIO3_WUPSTATUS      (REGS_OFFSET_GPIO3 + 32)
#define REGS_ADDR_GPIO3_PULLDWN        (REGS_OFFSET_GPIO3 + 36)
#define REGS_ADDR_GPIO3_PULLUP         (REGS_OFFSET_GPIO3 + 40)

#define REGS_ADDR_GPIO4_DATAOUT        (REGS_OFFSET_GPIO4 + 0)
#define REGS_ADDR_GPIO4_DIRECTION      (REGS_OFFSET_GPIO4 + 4)
#define REGS_ADDR_GPIO4_EDGE_CTRL1     (REGS_OFFSET_GPIO4 + 8)
#define REGS_ADDR_GPIO4_EDGE_CTRL2     (REGS_OFFSET_GPIO4 + 12)
#define REGS_ADDR_GPIO4_IRQENABLE      (REGS_OFFSET_GPIO4 + 16)
#define REGS_ADDR_GPIO4_WUPENABLE      (REGS_OFFSET_GPIO4 + 20)
#define REGS_ADDR_GPIO4_IRQSTATUS      (REGS_OFFSET_GPIO4 + 24)
#define REGS_ADDR_GPIO4_DATAIN         (REGS_OFFSET_GPIO4 + 28)
#define REGS_ADDR_GPIO4_WUPSTATUS      (REGS_OFFSET_GPIO4 + 32)
#define REGS_ADDR_GPIO4_PULLDWN        (REGS_OFFSET_GPIO4 + 36)
#define REGS_ADDR_GPIO4_PULLUP         (REGS_OFFSET_GPIO4 + 40)


//SRAM register
#define REGS_ADDR_SRAM_IRAM0 	 (REGS_OFFSET_SRAM + 0)
#define REGS_ADDR_SRAM_IRAM1 	 (REGS_OFFSET_SRAM + 4)
#define REGS_ADDR_SRAM_IRAM_PA 	 (REGS_OFFSET_SRAM + 8)
#define REGS_ADDR_SRAM_DRAM0 	 (REGS_OFFSET_SRAM + 12)
#define REGS_ADDR_SRAM_DRAM1 	 (REGS_OFFSET_SRAM + 16)
#define REGS_ADDR_SRAM_DRAM_CPU_END 	  (REGS_OFFSET_SRAM + 20)
#define REGS_ADDR_SRAM_DRAM_BB_START   (REGS_OFFSET_SRAM + 24)
#define REGS_ADDR_CIRBUF0_BEGIN       (REGS_OFFSET_SRAM + 28)
#define REGS_ADDR_CIRBUF0_END         (REGS_OFFSET_SRAM + 32)
#define REGS_ADDR_CIRBUF1_BEGIN       (REGS_OFFSET_SRAM + 36)
#define REGS_ADDR_CIRBUF1_END         (REGS_OFFSET_SRAM + 40)
#define REGS_ADDR_CACHE_EN            (REGS_OFFSET_SRAM + 44)
#define REGS_ADDR_SDRAM_NC_START      (REGS_OFFSET_SRAM + 48)
#define REGS_ADDR_SDRAM_NC_SIZE       (REGS_OFFSET_SRAM + 52)
#define REGS_ADDR_SRAM_CACHE_START    (REGS_OFFSET_SRAM + 56)
#define REGS_ADDR_SRAM_CACHE_SIZE     (REGS_OFFSET_SRAM + 60)
#define REGS_ADDR_CACHE_THR1_EN       (REGS_OFFSET_SRAM + 64)

//DMA registers
// DMA MMRs must start from the DMA reg offset `REGS_OFFSET_DMA defined above to be consistent. -SL
#define DMA_REGS_SRC_BASE 		 (REGS_OFFSET_DMA 	+ 0)
#define DMA_REGS_DST_BASE 		 (DMA_REGS_SRC_BASE 	+ DMA_CHANNELS*4)
#define DMA_REGS_LLP_BASE 		 (DMA_REGS_DST_BASE 	+ DMA_CHANNELS*4)
#define DMA_REGS_CTL_BASE 		 (DMA_REGS_LLP_BASE 	+ DMA_CHANNELS*4)
#define DMA_REGS_CTL_H_BASE 		 (DMA_REGS_CTL_BASE 	+ DMA_CHANNELS*4)

#define DMA_REGS_SSN0 		 (DMA_REGS_CTL_H_BASE + DMA_CHANNELS*4)
#define DMA_REGS_SSN1 		 (DMA_REGS_SSN0	+ 1*4)
#define DMA_REGS_STA 		 (DMA_REGS_SSN1	+ 1*4)
#define DMA_REGS_STA_H 		 (DMA_REGS_STA	+ 1*4)
#define DMA_REGS_IRC 		 (DMA_REGS_STA_H	+ 1*4)
#define DMA_REGS_POL 		 (DMA_REGS_IRC	+ 1*4)

// DMA Look-Up Table is no longer supported. So we just commented follow out for now. -SL 05/13/08
//`define	DMA_XORLUT_BASE		`DSP_DMALUT_BASE
//`define	DMA_RSCLUT_BASE		`DMA_XORLUT_BASE 	+ 1024
//`define	DMA_LOCLUT_BASE		`DMA_RSCLUT_BASE 	+ 1024
//`define	DMA_PATLUT_BASE		`DMA_LOCLUT_BASE	+ 1024

//MMC/SD registers
#define MMCSD_REGS_BASE               (REGS_OFFSET_MMCSD)

#define MMCSD_REGS_CTRL               (MMCSD_REGS_BASE)
#define MMCSD_REGS_PWRE               (MMCSD_REGS_CTRL    +       1*4)
#define MMCSD_REGS_CLKD               (MMCSD_REGS_PWRE    +       1*4)
#define MMCSD_REGS_CLKS               (MMCSD_REGS_CLKD    +       1*4)
#define MMCSD_REGS_CLKE               (MMCSD_REGS_CLKS    +       1*4)
#define MMCSD_REGS_TOUT               (MMCSD_REGS_CLKE    +       1*4)
#define MMCSD_REGS_CTYP               (MMCSD_REGS_TOUT    +       1*4)
#define MMCSD_REGS_BSIZ               (MMCSD_REGS_CTYP    +       1*4)
#define MMCSD_REGS_BCNT               (MMCSD_REGS_BSIZ    +       1*4)
#define MMCSD_REGS_IMSK               (MMCSD_REGS_BCNT    +       1*4)
#define MMCSD_REGS_CMDA               (MMCSD_REGS_IMSK    +       1*4)
#define MMCSD_REGS_CMD                (MMCSD_REGS_CMDA    +       1*4)
#define MMCSD_REGS_RSP0               (MMCSD_REGS_CMD     +       1*4)
#define MMCSD_REGS_RSP1               (MMCSD_REGS_RSP0    +       1*4)
#define MMCSD_REGS_RSP2               (MMCSD_REGS_RSP1    +       1*4)
#define MMCSD_REGS_RSP3               (MMCSD_REGS_RSP2    +       1*4)
#define MMCSD_REGS_MIST               (MMCSD_REGS_RSP3    +       1*4)
#define MMCSD_REGS_RIST               (MMCSD_REGS_MIST    +       1*4)
#define MMCSD_REGS_STAT               (MMCSD_REGS_RIST    +       1*4)
#define MMCSD_REGS_FFTH               (MMCSD_REGS_STAT    +       1*4)
#define MMCSD_REGS_CDET               (MMCSD_REGS_FFTH    +       1*4)
#define MMCSD_REGS_WPRT               (MMCSD_REGS_CDET    +       1*4)
#define MMCSD_REGS_CCNT               (MMCSD_REGS_WPRT    +       1*4)
#define MMCSD_REGS_TCNT               (MMCSD_REGS_CCNT    +       1*4)
#define MMCSD_REGS_DBNC               (MMCSD_REGS_TCNT    +       1*4)
#define MMCSD_REGS_UID                (MMCSD_REGS_DBNC    +       1*4)
#define MMCSD_REGS_RXFF               (MMCSD_REGS_UID     +       1*4)
#define MMCSD_REGS_TXFF               (MMCSD_REGS_RXFF    +       1*4)
#define MMCSD_REGS_ENA 		 (MMCSD_REGS_TXFF	+	1*4)


//UART2 registers
#define REGS_ADDR_UART2_RBR           (REGS_OFFSET_UART2  + 0)
#define REGS_ADDR_UART2_THR           (REGS_OFFSET_UART2  + 0)
#define REGS_ADDR_UART2_DLL           (REGS_OFFSET_UART2  + 0)
#define REGS_ADDR_UART2_DLH           (REGS_OFFSET_UART2  + 4)
#define REGS_ADDR_UART2_IER           (REGS_OFFSET_UART2  + 4)
#define REGS_ADDR_UART2_IIR           (REGS_OFFSET_UART2  + 8)
#define REGS_ADDR_UART2_FCR           (REGS_OFFSET_UART2  + 8)
#define REGS_ADDR_UART2_LCR           (REGS_OFFSET_UART2  + 12)
#define REGS_ADDR_UART2_MCR           (REGS_OFFSET_UART2  + 16)
#define REGS_ADDR_UART2_LSR           (REGS_OFFSET_UART2  + 20)
#define REGS_ADDR_UART2_MSR           (REGS_OFFSET_UART2  + 24)
#define REGS_ADDR_UART2_FSR           (REGS_OFFSET_UART2  + 28)
#define REGS_ADDR_UART2_UART_EN           (REGS_OFFSET_UART2  + 32)

//UART3 registers
#define REGS_ADDR_UART3_RBR           (REGS_OFFSET_UART3  + 0)
#define REGS_ADDR_UART3_THR           (REGS_OFFSET_UART3  + 0)
#define REGS_ADDR_UART3_DLL           (REGS_OFFSET_UART3  + 0)
#define REGS_ADDR_UART3_DLH           (REGS_OFFSET_UART3  + 4)
#define REGS_ADDR_UART3_IER           (REGS_OFFSET_UART3  + 4)
#define REGS_ADDR_UART3_IIR           (REGS_OFFSET_UART3  + 8)
#define REGS_ADDR_UART3_FCR           (REGS_OFFSET_UART3  + 8)
#define REGS_ADDR_UART3_LCR           (REGS_OFFSET_UART3  + 12)
#define REGS_ADDR_UART3_MCR           (REGS_OFFSET_UART3  + 16)
#define REGS_ADDR_UART3_LSR           (REGS_OFFSET_UART3  + 20)
#define REGS_ADDR_UART3_MSR           (REGS_OFFSET_UART3  + 24)
#define REGS_ADDR_UART3_FSR           (REGS_OFFSET_UART3  + 28)
#define REGS_ADDR_UART3_UART_EN           (REGS_OFFSET_UART3  + 32)

// SIMC Configuration Registers
#define REGS_ADDR_SIMC_CTRL 		 (REGS_OFFSET_SIMC + 0)
#define REGS_ADDR_SIMC_GCONF 	 (REGS_OFFSET_SIMC + 4)
#define REGS_ADDR_SIMC_TCONF 	 (REGS_OFFSET_SIMC + 8)
#define REGS_ADDR_SIMC_RCONF 	 (REGS_OFFSET_SIMC + 12)
#define REGS_ADDR_SIMC_THRH 		 (REGS_OFFSET_SIMC + 16)
#define REGS_ADDR_SIMC_ICR 		 (REGS_OFFSET_SIMC + 20)
#define REGS_ADDR_SIMC_IER 		 (REGS_OFFSET_SIMC + 24)
#define REGS_ADDR_SIMC_TBUF 		 (REGS_OFFSET_SIMC + 28)
#define REGS_ADDR_SIMC_RBUF 		 (REGS_OFFSET_SIMC + 32)
#define REGS_ADDR_SIMC_TSTAT 	 (REGS_OFFSET_SIMC + 36)
#define REGS_ADDR_SIMC_RSTAT 	 (REGS_OFFSET_SIMC + 40)
#define REGS_ADDR_SIMC_ERR 		 (REGS_OFFSET_SIMC + 44)
#define REGS_ADDR_SIMC_SIMCEN 	 (REGS_OFFSET_SIMC + 48)

// KEYP Configuration Registers
#define REGS_ADDR_KEYP_CTRL 		 (REGS_OFFSET_KEYP + 0)
#define REGS_ADDR_KEYP_CONF 		 (REGS_OFFSET_KEYP + 4)
#define REGS_ADDR_KEYP_STAT 		 (REGS_OFFSET_KEYP + 8)
#define REGS_ADDR_KEYP_KCODE 	 (REGS_OFFSET_KEYP + 12)
#define REGS_ADDR_KEYP_ICR 		 (REGS_OFFSET_KEYP + 16)
#define REGS_ADDR_KEYP_FLGR 		 (REGS_OFFSET_KEYP + 20)
#define REGS_ADDR_KEYP_KEYPEN 	 (REGS_OFFSET_KEYP + 24)

// PWM registers
#define REGS_ADDR_PWM_CYC0 		 (REGS_OFFSET_PWM  + 0)
#define REGS_ADDR_PWM_DUT0 		 (REGS_OFFSET_PWM  + 4)
#define REGS_ADDR_PWM_CNT0 		 (REGS_OFFSET_PWM  + 8)
#define REGS_ADDR_PWM_TIM0 		 (REGS_OFFSET_PWM  + 12)
#define REGS_ADDR_PWM_CYC1            (REGS_OFFSET_PWM  + 16)
#define REGS_ADDR_PWM_DUT1            (REGS_OFFSET_PWM  + 20)
#define REGS_ADDR_PWM_CNT1            (REGS_OFFSET_PWM  + 24)
#define REGS_ADDR_PWM_TIM1            (REGS_OFFSET_PWM  + 28)
#define REGS_ADDR_PWM_CYC2            (REGS_OFFSET_PWM  + 32)
#define REGS_ADDR_PWM_DUT2            (REGS_OFFSET_PWM  + 36)
#define REGS_ADDR_PWM_CNT2            (REGS_OFFSET_PWM  + 40)
#define REGS_ADDR_PWM_TIM2            (REGS_OFFSET_PWM  + 44)
#define REGS_ADDR_PWM_PWMOUT_EN       (REGS_OFFSET_PWM  + 48)
#define REGS_ADDR_PWM_INTAS           (REGS_OFFSET_PWM  + 52)
#define REGS_ADDR_PWM_INTEN           (REGS_OFFSET_PWM  + 56)
#define REGS_ADDR_PWM_INTSR           (REGS_OFFSET_PWM  + 60)
#define REGS_ADDR_PWM_PWM_EN  	 (REGS_OFFSET_PWM  + 64)

// INTRC registers
#define T0_REGS_ADDR_INTR_SW_INTR          (REGS_OFFSET_INTRC_T0 + 0)
#define T0_REGS_ADDR_INTR_SW_DATA          (REGS_OFFSET_INTRC_T0 + 4)
#define T0_REGS_ADDR_INTR_PEND             (REGS_OFFSET_INTRC_T0 + 8)
#define T0_REGS_ADDR_INTR_MASK             (REGS_OFFSET_INTRC_T0 + 12)
#define T0_REGS_ADDR_INTR_CAUS_RD          (REGS_OFFSET_INTRC_T0 + 16)
#define T0_REGS_ADDR_SW_GLOBAL_EN          (REGS_OFFSET_INTRC_T0 + 20)
#define T0_REGS_ADDR_INTR_CURR_LVL         (REGS_OFFSET_INTRC_T0 + 24)
#define T0_REGS_ADDR_PREV_LVL_RD           (REGS_OFFSET_INTRC_T0 + 28)
#define T0_REGS_ADDR_INTR_VEC_TAB0         (REGS_OFFSET_INTRC_T0 + 32)
#define T0_REGS_ADDR_INTR_VEC_TAB1         (REGS_OFFSET_INTRC_T0 + 36)
#define T0_REGS_ADDR_INTR_VEC_TAB2         (REGS_OFFSET_INTRC_T0 + 40)
#define T0_REGS_ADDR_INTR_VEC_TAB3         (REGS_OFFSET_INTRC_T0 + 44)
#define T0_REGS_ADDR_INTR_VEC_TAB4         (REGS_OFFSET_INTRC_T0 + 48)
#define T0_REGS_ADDR_INTR_VEC_TAB5         (REGS_OFFSET_INTRC_T0 + 52)
#define T0_REGS_ADDR_INTR_VEC_TAB6         (REGS_OFFSET_INTRC_T0 + 56)
#define T0_REGS_ADDR_INTR_VEC_TAB7         (REGS_OFFSET_INTRC_T0 + 60)
#define T0_REGS_CONTEXT_PC_OFFSET          (REGS_OFFSET_INTRC_T0 + 64)
#define T0_REGS_CONTEXT_LOOP_CNT0_OFFSET   (REGS_OFFSET_INTRC_T0 + 68)
#define T0_REGS_CONTEXT_LOOP_CNT1_OFFSET   (REGS_OFFSET_INTRC_T0 + 72)
#define T0_REGS_CONTEXT_LOOP_CNT2_OFFSET   (REGS_OFFSET_INTRC_T0 + 76)
#define T0_REGS_CONTEXT_LOOP_CNT3_OFFSET   (REGS_OFFSET_INTRC_T0 + 80)
#define T0_REGS_CONTEXT_LOOP_PC0_OFFSET    (REGS_OFFSET_INTRC_T0 + 84)
#define T0_REGS_CONTEXT_LOOP_PC1_OFFSET    (REGS_OFFSET_INTRC_T0 + 88)
#define T0_REGS_CONTEXT_LOOP_PC2_OFFSET    (REGS_OFFSET_INTRC_T0 + 92)
#define T0_REGS_CONTEXT_LOOP_PC3_OFFSET    (REGS_OFFSET_INTRC_T0 + 96)
#define T0_REGS_CONTEXT_LOOP_END0_OFFSET   (REGS_OFFSET_INTRC_T0 + 100)
#define T0_REGS_CONTEXT_LOOP_END1_OFFSET   (REGS_OFFSET_INTRC_T0 + 104)
#define T0_REGS_CONTEXT_LOOP_END2_OFFSET   (REGS_OFFSET_INTRC_T0 + 108)
#define T0_REGS_CONTEXT_LOOP_END3_OFFSET   (REGS_OFFSET_INTRC_T0 + 112)
#define T0_REGS_ADDR_INTR_LVL_LUT00        (REGS_OFFSET_INTRC_T0 + 128)
#define T0_REGS_ADDR_INTR_LVL_LUT01        (REGS_OFFSET_INTRC_T0 + 132)
#define T0_REGS_ADDR_INTR_LVL_LUT02        (REGS_OFFSET_INTRC_T0 + 136)
#define T0_REGS_ADDR_INTR_LVL_LUT03        (REGS_OFFSET_INTRC_T0 + 140)
#define T0_REGS_ADDR_INTR_LVL_LUT04        (REGS_OFFSET_INTRC_T0 + 144)
#define T0_REGS_ADDR_INTR_LVL_LUT05        (REGS_OFFSET_INTRC_T0 + 148)
#define T0_REGS_ADDR_INTR_LVL_LUT06        (REGS_OFFSET_INTRC_T0 + 152)
#define T0_REGS_ADDR_INTR_LVL_LUT07        (REGS_OFFSET_INTRC_T0 + 156)
#define T0_REGS_ADDR_INTR_LVL_LUT08        (REGS_OFFSET_INTRC_T0 + 160)
#define T0_REGS_ADDR_INTR_LVL_LUT09        (REGS_OFFSET_INTRC_T0 + 164)
#define T0_REGS_ADDR_INTR_LVL_LUT10        (REGS_OFFSET_INTRC_T0 + 168)
#define T0_REGS_ADDR_INTR_LVL_LUT11        (REGS_OFFSET_INTRC_T0 + 172)
#define T0_REGS_ADDR_INTR_LVL_LUT12        (REGS_OFFSET_INTRC_T0 + 176)
#define T0_REGS_ADDR_INTR_LVL_LUT13        (REGS_OFFSET_INTRC_T0 + 180)
#define T0_REGS_ADDR_INTR_LVL_LUT14        (REGS_OFFSET_INTRC_T0 + 184)
#define T0_REGS_ADDR_INTR_LVL_LUT15        (REGS_OFFSET_INTRC_T0 + 188)
#define T0_REGS_ADDR_INTR_LVL_LUT16        (REGS_OFFSET_INTRC_T0 + 192)
#define T0_REGS_ADDR_INTR_LVL_LUT17        (REGS_OFFSET_INTRC_T0 + 196)
#define T0_REGS_ADDR_INTR_LVL_LUT18        (REGS_OFFSET_INTRC_T0 + 200)
#define T0_REGS_ADDR_INTR_LVL_LUT19        (REGS_OFFSET_INTRC_T0 + 204)
#define T0_REGS_ADDR_INTR_LVL_LUT20        (REGS_OFFSET_INTRC_T0 + 208)
#define T0_REGS_ADDR_INTR_LVL_LUT21        (REGS_OFFSET_INTRC_T0 + 212)
#define T0_REGS_ADDR_INTR_LVL_LUT22        (REGS_OFFSET_INTRC_T0 + 216)
#define T0_REGS_ADDR_INTR_LVL_LUT23        (REGS_OFFSET_INTRC_T0 + 220)
#define T0_REGS_ADDR_INTR_LVL_LUT24        (REGS_OFFSET_INTRC_T0 + 224)
#define T0_REGS_ADDR_INTR_LVL_LUT25        (REGS_OFFSET_INTRC_T0 + 228)
#define T0_REGS_ADDR_INTR_LVL_LUT26        (REGS_OFFSET_INTRC_T0 + 232)
#define T0_REGS_ADDR_INTR_LVL_LUT27        (REGS_OFFSET_INTRC_T0 + 236)
#define T0_REGS_ADDR_INTR_LVL_LUT28        (REGS_OFFSET_INTRC_T0 + 240)
#define T0_REGS_ADDR_INTR_LVL_LUT29        (REGS_OFFSET_INTRC_T0 + 244)
#define T0_REGS_ADDR_INTR_LVL_LUT30        (REGS_OFFSET_INTRC_T0 + 248)
#define T0_REGS_ADDR_INTR_LVL_LUT31        (REGS_OFFSET_INTRC_T0 + 252)
#define T0_REGS_CONTEXT_BRK_PC_OFFSET          (REGS_OFFSET_INTRC_T0 + 256)
#define T0_REGS_CONTEXT_BRK_LOOP_CNT0_OFFSET   (REGS_OFFSET_INTRC_T0 + 260)
#define T0_REGS_CONTEXT_BRK_LOOP_CNT1_OFFSET   (REGS_OFFSET_INTRC_T0 + 264)
#define T0_REGS_CONTEXT_BRK_LOOP_CNT2_OFFSET   (REGS_OFFSET_INTRC_T0 + 268)
#define T0_REGS_CONTEXT_BRK_LOOP_CNT3_OFFSET   (REGS_OFFSET_INTRC_T0 + 272)
#define T0_REGS_ADDR_EXCPT_STAT 		 (REGS_OFFSET_INTRC_T0 + 320)
#define T0_REGS_ADDR_DBG_SEL 		 (REGS_OFFSET_INTRC_T0 + 324)

#define T1_REGS_ADDR_INTR_SW_INTR          (REGS_OFFSET_INTRC_T1 + 0)
#define T1_REGS_ADDR_INTR_SW_DATA          (REGS_OFFSET_INTRC_T1 + 4)
#define T1_REGS_ADDR_INTR_PEND             (REGS_OFFSET_INTRC_T1 + 8)
#define T1_REGS_ADDR_INTR_MASK             (REGS_OFFSET_INTRC_T1 + 12)
#define T1_REGS_ADDR_INTR_CAUS_RD          (REGS_OFFSET_INTRC_T1 + 16)
#define T1_REGS_ADDR_SW_GLOBAL_EN          (REGS_OFFSET_INTRC_T1 + 20)
#define T1_REGS_ADDR_INTR_CURR_LVL         (REGS_OFFSET_INTRC_T1 + 24)
#define T1_REGS_ADDR_PREV_LVL_RD           (REGS_OFFSET_INTRC_T1 + 28)
#define T1_REGS_ADDR_INTR_VEC_TAB0         (REGS_OFFSET_INTRC_T1 + 32)
#define T1_REGS_ADDR_INTR_VEC_TAB1         (REGS_OFFSET_INTRC_T1 + 36)
#define T1_REGS_ADDR_INTR_VEC_TAB2         (REGS_OFFSET_INTRC_T1 + 40)
#define T1_REGS_ADDR_INTR_VEC_TAB3         (REGS_OFFSET_INTRC_T1 + 44)
#define T1_REGS_ADDR_INTR_VEC_TAB4         (REGS_OFFSET_INTRC_T1 + 48)
#define T1_REGS_ADDR_INTR_VEC_TAB5         (REGS_OFFSET_INTRC_T1 + 52)
#define T1_REGS_ADDR_INTR_VEC_TAB6         (REGS_OFFSET_INTRC_T1 + 56)
#define T1_REGS_ADDR_INTR_VEC_TAB7         (REGS_OFFSET_INTRC_T1 + 60)
#define T1_REGS_CONTEXT_PC_OFFSET          (REGS_OFFSET_INTRC_T1 + 64)
#define T1_REGS_CONTEXT_LOOP_CNT0_OFFSET   (REGS_OFFSET_INTRC_T1 + 68)
#define T1_REGS_CONTEXT_LOOP_CNT1_OFFSET   (REGS_OFFSET_INTRC_T1 + 72)
#define T1_REGS_CONTEXT_LOOP_CNT2_OFFSET   (REGS_OFFSET_INTRC_T1 + 76)
#define T1_REGS_CONTEXT_LOOP_CNT3_OFFSET   (REGS_OFFSET_INTRC_T1 + 80)
#define T1_REGS_CONTEXT_LOOP_PC0_OFFSET    (REGS_OFFSET_INTRC_T1 + 84)
#define T1_REGS_CONTEXT_LOOP_PC1_OFFSET    (REGS_OFFSET_INTRC_T1 + 88)
#define T1_REGS_CONTEXT_LOOP_PC2_OFFSET    (REGS_OFFSET_INTRC_T1 + 92)
#define T1_REGS_CONTEXT_LOOP_PC3_OFFSET    (REGS_OFFSET_INTRC_T1 + 96)
#define T1_REGS_CONTEXT_LOOP_END0_OFFSET   (REGS_OFFSET_INTRC_T1 + 100)
#define T1_REGS_CONTEXT_LOOP_END1_OFFSET   (REGS_OFFSET_INTRC_T1 + 104)
#define T1_REGS_CONTEXT_LOOP_END2_OFFSET   (REGS_OFFSET_INTRC_T1 + 108)
#define T1_REGS_CONTEXT_LOOP_END3_OFFSET   (REGS_OFFSET_INTRC_T1 + 112)
#define T1_REGS_ADDR_INTR_LVL_LUT00        (REGS_OFFSET_INTRC_T1 + 128)
#define T1_REGS_ADDR_INTR_LVL_LUT01        (REGS_OFFSET_INTRC_T1 + 132)
#define T1_REGS_ADDR_INTR_LVL_LUT02        (REGS_OFFSET_INTRC_T1 + 136)
#define T1_REGS_ADDR_INTR_LVL_LUT03        (REGS_OFFSET_INTRC_T1 + 140)
#define T1_REGS_ADDR_INTR_LVL_LUT04        (REGS_OFFSET_INTRC_T1 + 144)
#define T1_REGS_ADDR_INTR_LVL_LUT05        (REGS_OFFSET_INTRC_T1 + 148)
#define T1_REGS_ADDR_INTR_LVL_LUT06        (REGS_OFFSET_INTRC_T1 + 152)
#define T1_REGS_ADDR_INTR_LVL_LUT07        (REGS_OFFSET_INTRC_T1 + 156)
#define T1_REGS_ADDR_INTR_LVL_LUT08        (REGS_OFFSET_INTRC_T1 + 160)
#define T1_REGS_ADDR_INTR_LVL_LUT09        (REGS_OFFSET_INTRC_T1 + 164)
#define T1_REGS_ADDR_INTR_LVL_LUT10        (REGS_OFFSET_INTRC_T1 + 168)
#define T1_REGS_ADDR_INTR_LVL_LUT11        (REGS_OFFSET_INTRC_T1 + 172)
#define T1_REGS_ADDR_INTR_LVL_LUT12        (REGS_OFFSET_INTRC_T1 + 176)
#define T1_REGS_ADDR_INTR_LVL_LUT13        (REGS_OFFSET_INTRC_T1 + 180)
#define T1_REGS_ADDR_INTR_LVL_LUT14        (REGS_OFFSET_INTRC_T1 + 184)
#define T1_REGS_ADDR_INTR_LVL_LUT15        (REGS_OFFSET_INTRC_T1 + 188)
#define T1_REGS_ADDR_INTR_LVL_LUT16        (REGS_OFFSET_INTRC_T1 + 192)
#define T1_REGS_ADDR_INTR_LVL_LUT17        (REGS_OFFSET_INTRC_T1 + 196)
#define T1_REGS_ADDR_INTR_LVL_LUT18        (REGS_OFFSET_INTRC_T1 + 200)
#define T1_REGS_ADDR_INTR_LVL_LUT19        (REGS_OFFSET_INTRC_T1 + 204)
#define T1_REGS_ADDR_INTR_LVL_LUT20        (REGS_OFFSET_INTRC_T1 + 208)
#define T1_REGS_ADDR_INTR_LVL_LUT21        (REGS_OFFSET_INTRC_T1 + 212)
#define T1_REGS_ADDR_INTR_LVL_LUT22        (REGS_OFFSET_INTRC_T1 + 216)
#define T1_REGS_ADDR_INTR_LVL_LUT23        (REGS_OFFSET_INTRC_T1 + 220)
#define T1_REGS_ADDR_INTR_LVL_LUT24        (REGS_OFFSET_INTRC_T1 + 224)
#define T1_REGS_ADDR_INTR_LVL_LUT25        (REGS_OFFSET_INTRC_T1 + 228)
#define T1_REGS_ADDR_INTR_LVL_LUT26        (REGS_OFFSET_INTRC_T1 + 232)
#define T1_REGS_ADDR_INTR_LVL_LUT27        (REGS_OFFSET_INTRC_T1 + 236)
#define T1_REGS_ADDR_INTR_LVL_LUT28        (REGS_OFFSET_INTRC_T1 + 240)
#define T1_REGS_ADDR_INTR_LVL_LUT29        (REGS_OFFSET_INTRC_T1 + 244)
#define T1_REGS_ADDR_INTR_LVL_LUT30        (REGS_OFFSET_INTRC_T1 + 248)
#define T1_REGS_ADDR_INTR_LVL_LUT31        (REGS_OFFSET_INTRC_T1 + 252)
#define T1_REGS_CONTEXT_BRK_PC_OFFSET          (REGS_OFFSET_INTRC_T1 + 256)
#define T1_REGS_CONTEXT_BRK_LOOP_CNT0_OFFSET   (REGS_OFFSET_INTRC_T1 + 260)
#define T1_REGS_CONTEXT_BRK_LOOP_CNT1_OFFSET   (REGS_OFFSET_INTRC_T1 + 264)
#define T1_REGS_CONTEXT_BRK_LOOP_CNT2_OFFSET   (REGS_OFFSET_INTRC_T1 + 268)
#define T1_REGS_CONTEXT_BRK_LOOP_CNT3_OFFSET   (REGS_OFFSET_INTRC_T1 + 272)
#define T1_REGS_ADDR_EXCPT_STAT 		 (REGS_OFFSET_INTRC_T1 + 320)
#define T1_REGS_ADDR_DBG_SEL 		 (REGS_OFFSET_INTRC_T1 + 324)


// SYSC registers
#define REGS_ADDR_SYSC_CFIG 		 (REGS_OFFSET_SYSC + 0)
#define REGS_ADDR_SYSC_STAT 		 (REGS_ADDR_SYSC_CFIG + 4)
#define REGS_ADDR_SYSC_PWRC           (REGS_ADDR_SYSC_STAT + 4)
#define REGS_ADDR_SYSC_LPMC           (REGS_ADDR_SYSC_PWRC + 4)
#define REGS_ADDR_SYSC_RSTC           (REGS_ADDR_SYSC_LPMC + 4)
#define REGS_ADDR_SYSC_PLLC0 	 (REGS_ADDR_SYSC_RSTC + 4)
#define REGS_ADDR_SYSC_PLLLCNT0 	 (REGS_ADDR_SYSC_PLLC0 + 4)
#define REGS_ADDR_SYSC_PLLC1          (REGS_ADDR_SYSC_PLLLCNT0 + 4)
#define REGS_ADDR_SYSC_PLLLCNT1 	 (REGS_ADDR_SYSC_PLLC1 + 4)
#define REGS_ADDR_SYSC_CLKC0          (REGS_ADDR_SYSC_PLLLCNT1 + 4)
#define REGS_ADDR_SYSC_CLKC1          (REGS_ADDR_SYSC_CLKC0 + 4)
#define REGS_ADDR_SYSC_CLKC2          (REGS_ADDR_SYSC_CLKC1 + 4)
#define REGS_ADDR_SYSC_CLKC3          (REGS_ADDR_SYSC_CLKC2 + 4)
#define REGS_ADDR_SYSC_CLKC4          (REGS_ADDR_SYSC_CLKC3 + 4)
#define REGS_ADDR_SYSC_CLKC5          (REGS_ADDR_SYSC_CLKC4 + 4)
#define REGS_ADDR_SYSC_PDETTIME 	 (REGS_ADDR_SYSC_CLKC5 + 4)
#define REGS_ADDR_SYSC_PONTIME 	 (REGS_ADDR_SYSC_PDETTIME + 4)
#define REGS_ADDR_SYSC_PDNTIME 	 (REGS_ADDR_SYSC_PONTIME + 4)
#define REGS_ADDR_SYSC_PDNDTIME 	 (REGS_ADDR_SYSC_PDNTIME + 4)
#define REGS_ADDR_SYSC_WKUPC 	 (REGS_ADDR_SYSC_PDNDTIME + 4)
#define REGS_ADDR_SYSC_SWKTIME 	 (REGS_ADDR_SYSC_WKUPC + 4)
#define REGS_ADDR_SYSC_FWKTIME 	 (REGS_ADDR_SYSC_SWKTIME + 4)
#define REGS_ADDR_SYSC_WKDTIME 	 (REGS_ADDR_SYSC_FWKTIME + 4)
#define REGS_ADDR_SYSC_CLKSCALC 	 (REGS_ADDR_SYSC_WKDTIME + 4)
#define REGS_ADDR_SYSC_CLKFCALV 	 (REGS_ADDR_SYSC_CLKSCALC + 4)
#define REGS_ADDR_SYSC_INTRC0 	 (REGS_ADDR_SYSC_CLKFCALV + 4)
#define REGS_ADDR_SYSC_INTRSTAT0 	 (REGS_ADDR_SYSC_INTRC0 + 4)
#define REGS_ADDR_SYSC_INTRC1 	 (REGS_ADDR_SYSC_INTRSTAT0 + 4)
#define REGS_ADDR_SYSC_INTRSTAT1 	 (REGS_ADDR_SYSC_INTRC1 + 4)
#define REGS_ADDR_SYSC_IOMUXC0 	 (REGS_ADDR_SYSC_INTRSTAT1 + 4)
#define REGS_ADDR_SYSC_IOMUXC1 	 (REGS_ADDR_SYSC_IOMUXC0 + 4)
#define REGS_ADDR_SYSC_IOPADDR 	 (REGS_ADDR_SYSC_IOMUXC1 + 4)


// RTC registers
#define REGS_ADDR_RTC_CNT_CURR        (REGS_OFFSET_RTC + 0)
#define REGS_ADDR_RTC_CNT_LOAD        (REGS_OFFSET_RTC + 4)
#define REGS_ADDR_RTC_MATCH_ON        (REGS_OFFSET_RTC + 8)
#define REGS_ADDR_RTC_MATCH_OFF       (REGS_OFFSET_RTC + 12)
#define REGS_ADDR_RTC_MATCH_ALM       (REGS_OFFSET_RTC + 16)
#define REGS_ADDR_RTC_INTR_CTRL       (REGS_OFFSET_RTC + 20)
#define REGS_ADDR_RTC_INTR_STATUS     (REGS_OFFSET_RTC + 24)
#define REGS_ADDR_RTC_WEEK_CNT        (REGS_OFFSET_RTC + 28)
#define REGS_ADDR_RTC_WEEK_LOAD       (REGS_OFFSET_RTC + 32)

// timer registers
#define REGS_ADDR_TIM0_LOAD           (REGS_OFFSET_TIMERS + 0)
#define REGS_ADDR_TIM0_CNT            (REGS_OFFSET_TIMERS + 4)
#define REGS_ADDR_TIM0_CTRL           (REGS_OFFSET_TIMERS + 8)
#define REGS_ADDR_TIM0_INTR_CLR       (REGS_OFFSET_TIMERS + 12)
#define REGS_ADDR_TIM0_INTR_STAT      (REGS_OFFSET_TIMERS + 16)
#define REGS_ADDR_TIM1_LOAD           (REGS_OFFSET_TIMERS + 32)
#define REGS_ADDR_TIM1_CNT            (REGS_OFFSET_TIMERS + 36)
#define REGS_ADDR_TIM1_CTRL           (REGS_OFFSET_TIMERS + 40)
#define REGS_ADDR_TIM1_INTR_CLR       (REGS_OFFSET_TIMERS + 44)
#define REGS_ADDR_TIM1_INTR_STAT      (REGS_OFFSET_TIMERS + 48)
#define REGS_ADDR_TIM2_LOAD           (REGS_OFFSET_TIMERS + 64)
#define REGS_ADDR_TIM2_CNT            (REGS_OFFSET_TIMERS + 68)
#define REGS_ADDR_TIM2_CTRL           (REGS_OFFSET_TIMERS + 72)
#define REGS_ADDR_TIM2_INTR_CLR       (REGS_OFFSET_TIMERS + 76)
#define REGS_ADDR_TIM2_INTR_STAT      (REGS_OFFSET_TIMERS + 80)
#define REGS_ADDR_TIM3_LOAD           (REGS_OFFSET_TIMERS + 96)
#define REGS_ADDR_TIM3_CNT            (REGS_OFFSET_TIMERS + 100)
#define REGS_ADDR_TIM3_CTRL           (REGS_OFFSET_TIMERS + 104)
#define REGS_ADDR_TIM3_INTR_CLR       (REGS_OFFSET_TIMERS + 108)
#define REGS_ADDR_TIM3_INTR_STAT      (REGS_OFFSET_TIMERS + 112)

// WDT registers
#define REGS_ADDR_WDT_CTRL            (REGS_OFFSET_WDT + 0)
#define REGS_ADDR_WDT_LOAD            (REGS_OFFSET_WDT + 4)
#define REGS_ADDR_WDT_CNT             (REGS_OFFSET_WDT + 8)
#define REGS_ADDR_WDT_RESTART         (REGS_OFFSET_WDT + 12)
#define REGS_ADDR_WDT_INTR_CLR        (REGS_OFFSET_WDT + 16)
#define REGS_ADDR_WDT_INTR_STAT       (REGS_OFFSET_WDT + 20)
#define REGS_ADDR_WDT_DEBUG_SW        (REGS_OFFSET_WDT + 24)

//USB registers
#define REGS_ADDR_USB_ID 			 (REGS_OFFSET_USBOTG + 0)
#define REGS_ADDR_USB_HWGENERAL 		 (REGS_OFFSET_USBOTG + 4)
#define REGS_ADDR_USB_HWHOST 		 (REGS_OFFSET_USBOTG + 8)
#define REGS_ADDR_USB_HWDEVICE 		 (REGS_OFFSET_USBOTG + 12)
#define REGS_ADDR_USB_HWTXBUF 		 (REGS_OFFSET_USBOTG + 16)
#define REGS_ADDR_USB_HWRXBUF 		 (REGS_OFFSET_USBOTG + 20)
#define REGS_ADDR_USB_GPTIMER0LD 		 (REGS_OFFSET_USBOTG + 128)
#define REGS_ADDR_USB_GPTIMER0CTRL 		 (REGS_OFFSET_USBOTG + 132)
#define REGS_ADDR_USB_GPTIMER1LD              (REGS_OFFSET_USBOTG + 136)
#define REGS_ADDR_USB_GPTIMER1CTRL            (REGS_OFFSET_USBOTG + 140)
#define REGS_ADDR_USB_SBUSCFG 		 (REGS_OFFSET_USBOTG + 144)
#define REGS_ADDR_USB_CAPLENGTH 		 (REGS_OFFSET_USBOTG + 256)
#define REGS_ADDR_USB_HCIVERSION 		 (REGS_OFFSET_USBOTG + 258)
#define REGS_ADDR_USB_HCSPARAMS 		 (REGS_OFFSET_USBOTG + 260)
#define REGS_ADDR_USB_HCCPARAMS 		 (REGS_OFFSET_USBOTG + 264)
#define REGS_ADDR_USB_DCIVERSION 		 (REGS_OFFSET_USBOTG + 288)
#define REGS_ADDR_USB_DCCPARAMS 		 (REGS_OFFSET_USBOTG + 292)
#define REGS_ADDR_USB_USBCMD 		 (REGS_OFFSET_USBOTG + 320)
#define REGS_ADDR_USB_USBSTS 		 (REGS_OFFSET_USBOTG + 324)
#define REGS_ADDR_USB_USBINTR 		 (REGS_OFFSET_USBOTG + 328)
#define REGS_ADDR_USB_FRINDEX 		 (REGS_OFFSET_USBOTG + 332)
#define REGS_ADDR_USB_CTRLDSSEGMENT 		 (REGS_OFFSET_USBOTG + 336)
#define REGS_ADDR_USB_PERIODICLISTBASE 	 (REGS_OFFSET_USBOTG + 340)
#define REGS_ADDR_USB_DEVICEADDR 		 (REGS_OFFSET_USBOTG + 340)
#define REGS_ADDR_USB_ASYNCLISTADDR 		 (REGS_OFFSET_USBOTG + 344)
#define REGS_ADDR_USB_ENDPOINTLISTADDR 	 (REGS_OFFSET_USBOTG + 344)
#define REGS_ADDR_USB_TTCTRL 		 (REGS_OFFSET_USBOTG + 348)
#define REGS_ADDR_USB_BURSTSIZE 		 (REGS_OFFSET_USBOTG + 352)
#define REGS_ADDR_USB_TXFILLTUNING 		 (REGS_OFFSET_USBOTG + 356)
#define REGS_ADDR_USB_ULPIVIEWPORT 		 (REGS_OFFSET_USBOTG + 368)
#define REGS_ADDR_USB_ENDPTNAK 		 (REGS_OFFSET_USBOTG + 376)
#define REGS_ADDR_USB_ENDPTNAKEN 		 (REGS_OFFSET_USBOTG + 380)
#define REGS_ADDR_USB_CONFIGFLAG 		 (REGS_OFFSET_USBOTG + 384)
#define REGS_ADDR_USB_PORTSC1 		 (REGS_OFFSET_USBOTG + 388)
#define REGS_ADDR_USB_PORTSC2 		 (REGS_OFFSET_USBOTG + 392)
#define REGS_ADDR_USB_PORTSC3 		 (REGS_OFFSET_USBOTG + 396)
#define REGS_ADDR_USB_PORTSC4 		 (REGS_OFFSET_USBOTG + 400)
#define REGS_ADDR_USB_PORTSC5 		 (REGS_OFFSET_USBOTG + 404)
#define REGS_ADDR_USB_PORTSC6 		 (REGS_OFFSET_USBOTG + 408)
#define REGS_ADDR_USB_PORTSC7 		 (REGS_OFFSET_USBOTG + 412)
#define REGS_ADDR_USB_PORTSC8 		 (REGS_OFFSET_USBOTG + 416)
#define REGS_ADDR_USB_OTGSC 			 (REGS_OFFSET_USBOTG + 420)
#define REGS_ADDR_USB_USBMODE 		 (REGS_OFFSET_USBOTG + 424)
#define REGS_ADDR_USB_ENDPTSETUPSTAT 	 (REGS_OFFSET_USBOTG + 428)
#define REGS_ADDR_USB_ENDPTPRIME 		 (REGS_OFFSET_USBOTG + 432)
#define REGS_ADDR_USB_ENDPTFLUSH 		 (REGS_OFFSET_USBOTG + 436)
#define REGS_ADDR_USB_ENDPTSTAT 		 (REGS_OFFSET_USBOTG + 440)
#define REGS_ADDR_USB_ENDPTCOMPLETE 		 (REGS_OFFSET_USBOTG + 444)
#define REGS_ADDR_USB_ENDPTCTRL0 		 (REGS_OFFSET_USBOTG + 448)
#define REGS_ADDR_USB_ENDPTCTRL1 		 (REGS_OFFSET_USBOTG + 452)
#define REGS_ADDR_USB_ENDPTCTRL2 		 (REGS_OFFSET_USBOTG + 456)
#define REGS_ADDR_USB_ENDPTCTRL3 		 (REGS_OFFSET_USBOTG + 460)
#define REGS_ADDR_USB_ENDPTCTRL4 		 (REGS_OFFSET_USBOTG + 464)
#define REGS_ADDR_USB_ENDPTCTRL5 		 (REGS_OFFSET_USBOTG + 468)
#define REGS_ADDR_USB_ENDPTCTRL6 		 (REGS_OFFSET_USBOTG + 472)
#define REGS_ADDR_USB_ENDPTCTRL7 		 (REGS_OFFSET_USBOTG + 476)
#define REGS_ADDR_USB_ENDPTCTRL8 		 (REGS_OFFSET_USBOTG + 480)
#define REGS_ADDR_USB_ENDPTCTRL9 		 (REGS_OFFSET_USBOTG + 484)
#define REGS_ADDR_USB_ENDPTCTRL10 		 (REGS_OFFSET_USBOTG + 488)
#define REGS_ADDR_USB_ENDPTCTRL11 		 (REGS_OFFSET_USBOTG + 492)
#define REGS_ADDR_USB_ENDPTCTRL12 		 (REGS_OFFSET_USBOTG + 496)
#define REGS_ADDR_USB_ENDPTCTRL13 		 (REGS_OFFSET_USBOTG + 500)
#define REGS_ADDR_USB_ENDPTCTRL14 		 (REGS_OFFSET_USBOTG + 504)
#define REGS_ADDR_USB_ENDPTCTRL15 		 (REGS_OFFSET_USBOTG + 508)

#define REGS_ADDR_LCDC_BPCR           (REGS_OFFSET_LCD + 0)
#define REGS_ADDR_LCDC_BPSR           (REGS_OFFSET_LCD + 4)
#define REGS_ADDR_LCDC_BPDR           (REGS_OFFSET_LCD + 8)
#define REGS_ADDR_LCDC_BPIR           (REGS_OFFSET_LCD + 12)
#define REGS_ADDR_LCDC_INTC           (REGS_OFFSET_LCD + 16)
#define REGS_ADDR_LCDC_RDCR           (REGS_OFFSET_LCD + 20)
#define REGS_ADDR_LCDC_ENA          	 (REGS_OFFSET_LCD + 24)


// definition of interrupt source assignment
#define INTRC_INDEX_T0_KEYPAD      (31)
#define INTRC_INDEX_T0_SIMC        (30)
#define INTRC_INDEX_T0_PWM         (29)
#define INTRC_INDEX_T0_UART3       (28)
#define INTRC_INDEX_T0_UART2       (27)
//`define INTRC_INDEX_T0_UNUSE1    26
#define INTRC_INDEX_T0_OGPS 	  (26)
#define INTRC_INDEX_T0_LCDC        (25)
#define INTRC_INDEX_T0_USB         (24)
#define INTRC_INDEX_T0_GPIO2       (23)
#define INTRC_INDEX_T0_GPIO1       (22)
#define INTRC_INDEX_T0_GPIO0       (21)
#define INTRC_INDEX_T0_GSSI        (20)
#define INTRC_INDEX_T0_GI2C        (19)
#define INTRC_INDEX_T0_GSPI        (18)
#define INTRC_INDEX_T0_RTC         (17)
#define INTRC_INDEX_T0_PMU         (16)
#define INTRC_INDEX_T0_FSYN        (15)
#define INTRC_INDEX_T0_TIM1        (14)
#define INTRC_INDEX_T0_TIM0        (13)
#define INTRC_INDEX_T0_WDT         (12)
#define INTRC_INDEX_T0_DMA         (11)
#define INTRC_INDEX_T0_SW_INT      (10)
#define INTRC_INDEX_T0_MMC         (9)
#define INTRC_INDEX_T0_CHGOFF      (8)
#define INTRC_INDEX_T0_CHGON       (7)
#define INTRC_INDEX_T0_CLKCAL      (6)
#define INTRC_INDEX_T0_POFF        (5)
#define INTRC_INDEX_T0_SYSRST      (4)
#define INTRC_INDEX_T0_CPURST      (3)
#define INTRC_INDEX_T0_WKUP        (2)
#define INTRC_INDEX_T0_BREAK       (1)
#define INTRC_INDEX_T0_EXCPT       (0)

#define INTRC_INDEX_T1_UNUSE1      (31)
#define INTRC_INDEX_T1_UNUSE2      (30)
#define INTRC_INDEX_T1_UNUSE3      (29)
#define INTRC_INDEX_T1_UART3       (28)
#define INTRC_INDEX_T1_UART2       (27)
#define INTRC_INDEX_T1_UNUSE4      (26)
#define INTRC_INDEX_T1_GPIO4       (25)
#define INTRC_INDEX_T1_GPIO3       (24)
#define INTRC_INDEX_T1_GPIO2       (23)
#define INTRC_INDEX_T1_GPIO1       (22)
#define INTRC_INDEX_T1_GPIO0       (21)
#define INTRC_INDEX_T1_GSSI        (20)
#define INTRC_INDEX_T1_GI2C        (19)
#define INTRC_INDEX_T1_GSPI        (18)
#define INTRC_INDEX_T1_TIM3        (17)
#define INTRC_INDEX_T1_TIM2        (16)
#define INTRC_INDEX_T1_FSYN        (15)
#define INTRC_INDEX_T1_TIM1        (14)
#define INTRC_INDEX_T1_TIM0        (13)
#define INTRC_INDEX_T1_UNUSE5      (12)
#define INTRC_INDEX_T1_DMA         (11)
#define INTRC_INDEX_T1_SW_INT      (10)
#define INTRC_INDEX_T1_GRFIIQ      (9)
#define INTRC_INDEX_T1_GRFICON     (8)
#define INTRC_INDEX_T1_RFIIQ       (7)
#define INTRC_INDEX_T1_UNUSE6      (6)
#define INTRC_INDEX_T1_UNUSE7      (5)
#define INTRC_INDEX_T1_UNUSE8      (4)
#define INTRC_INDEX_T1_RFICON      (3)
#define INTRC_INDEX_T1_DSPRST      (2)
#define INTRC_INDEX_T1_BREAK       (1)
#define INTRC_INDEX_T1_EXCPT       (0)

// Peripheral FIFO Depth defines: (FIFO Depth == 1<< FASIZE)
#define GI2C_FASIZE 		 (2)
#define GSSI_FASIZE 		 (2)
#define PMU_FASIZE 		 (2)
#define GSPI_FASIZE 		 (2)
#define RFICON_FASIZE 	 (3)
#define RFIIQ_FASIZE 	 (3)
#define GRFICON_FASIZE 	 (3)
#define GRFIIQ_FASIZE 	 (3)
#define SIMC_RX_FASIZE 	 (5)
#define SIMC_TX_FASIZE 	 (4)
#endif // regdef_sl1_INCLUDED

