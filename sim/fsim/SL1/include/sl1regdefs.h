/*
 *  File: sl1regdefs.h
 * 
 *  Copyright (c) 2006 Beijing SimpLight Nanoelectornics, Ltd.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without modification, 
 *  are permitted provided that the following conditions are met:
 *
 *  1.Redistributions of source code must retain the above copyright notice, 
 *    this list of conditions and the following disclaimer. 
 *  2.Redistributions in binary form must reproduce the above copyright notice, 
 *    this list of conditions and the following disclaimer in the documentation 
 *    and/or other materials provided with the distribution. 
 *
 *  THIS SOFTWARE IS PROVIDED BY THE FREEBSD PROJECT ``AS IS'' AND ANY EXPRESS 
 *  OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES 
 *  OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
 *  IN NO EVENT SHALL THE FREEBSD PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, 
 *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, 
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY 
 *  OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE 
 *  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
 *  OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef SL1REGDEFS_H_
#define SL1REGDEFS_H_

#define REG_PRINT_PER_LINE 4
//mips register name to index mapping

#define INDEX_REG_ZERO 0
#define INDEX_REG_AT	1
#define INDEX_REG_V0	2
#define INDEX_REG_V1	3
#define INDEX_REG_A0	4
#define INDEX_REG_A1	5
#define INDEX_REG_A2	6
#define INDEX_REG_A3	7
#define INDEX_REG_T0	8
#define INDEX_REG_T1	9
#define INDEX_REG_T2	10
#define INDEX_REG_T3	11
#define INDEX_REG_T4	12
#define INDEX_REG_T5	13
#define INDEX_REG_T6	14
#define INDEX_REG_T7	15
#define INDEX_REG_S0	16
#define INDEX_REG_S1	17
#define INDEX_REG_S2	18
#define INDEX_REG_S3	19
#define INDEX_REG_S4	20
#define INDEX_REG_S5	21
#define INDEX_REG_S6	22
#define INDEX_REG_S7	23
#define INDEX_REG_T8	24
#define INDEX_REG_T9	25
#define INDEX_REG_K0	26
#define INDEX_REG_K1	27	
#define INDEX_REG_GP	28
#define INDEX_REG_SP	29
#define INDEX_REG_FP	30
#define INDEX_REG_RA	31

#define REG_GPR_SIZE 32
#define REG_RA_SIZE 1
#define REG_JA_SIZE 1
#define REG_LOOP_SIZE 8
#define REG_LOOP_CUR_SIZE 4
#define REG_CTRL_SIZE (REG_RA_SIZE+REG_JA_SIZE)
#define REG_ALL_CTRL_SIZE (REG_CTRL_SIZE+REG_LOOP_CUR_SIZE)

#define EBASE_GPR 0
	// core ctrl reg
#define EBASE_CTRL (EBASE_GPR + REG_GPR_SIZE)
#define EBASE_LOOP_CNT (EBASE_CTRL + REG_CTRL_SIZE)

#define EBASE_CORE_REGS_LAST_INDEX (EBASE_LOOP_CNT + REG_LOOP_CUR_SIZE -1)
#define EBASE_CORE_REGS_SIZE (EBASE_LOOP_CNT + REG_LOOP_CUR_SIZE)
#define EBASE_FE_REGS_SIZE ((REG_LOOP_CUR_SIZE * 3))

//#define REG_NAME_SIZE 12
enum ECR_CTRL {
	ECR_UNDEF = -1,
	ECR_JA = 0,
	ECR_RA = 1,
	ECR_LOOP_CNT = 2,	
	ECR_INSTR_CNT = ECR_LOOP_CNT + REG_LOOP_CUR_SIZE,	
	ECR_MAX = ECR_INSTR_CNT + REG_LOOP_CUR_SIZE,
};

#define REG_JA_INDEX (EBASE_CTRL + ECR_JA)
#define REG_RA_INDEX (EBASE_CTRL + ECR_RA)
#define REG_LOOPCNT_INDEX0 (EBASE_CTRL + ECR_LOOP_CNT)
#define REG_LOOPCNT_INDEX1 (REG_LOOPCNT_INDEX0 + 1)
#define REG_LOOPCNT_INDEX2 (REG_LOOPCNT_INDEX1 + 1)
#define REG_LOOPCNT_INDEX3 (REG_LOOPCNT_INDEX2 + 1)

#define REG_ACC_SIZE 4
#define REG_ACC_CUR_SIZE 4
#define REG_AR_SIZE 8
#define REG_AR_CUR_SIZE 8
#define REG_AR_ALL_SIZE (2*REG_AR_CUR_SIZE)
#define REG_HI_SIZE 1
#define REG_FFT_SIZE 1
#define REG_VITERBI_SIZE 1
#define REG_TRBACK_SIZE 1
#define REG_STATUS_SIZE 1
#define REG_ALL_C3_SPEC_SIZE \
(REG_ACC_CUR_SIZE+REG_AR_ALL_SIZE+REG_HI_SIZE+REG_FFT_SIZE+REG_VITERBI_SIZE+REG_TRBACK_SIZE+REG_STATUS_SIZE)

//BB spec register
#define EBASE_AR (EBASE_CTRL + REG_ALL_CTRL_SIZE)
#define EBASE_AR_USIZE (EBASE_AR + REG_AR_CUR_SIZE)
#define EBASE_ACC (EBASE_AR_USIZE + REG_AR_CUR_SIZE)
#define EBASE_HI (EBASE_ACC + REG_ACC_CUR_SIZE)
#define EBASE_FFT (EBASE_HI+REG_HI_SIZE)
#define EBASE_VITERBI (EBASE_FFT+REG_FFT_SIZE)
#define EBASE_TRBACK (EBASE_VITERBI+REG_VITERBI_SIZE)
#define EBASE_STATUS (EBASE_VITERBI+REG_TRBACK_SIZE)
#define SL1_ALL_REGS_SIZE (EBASE_STATUS + REG_STATUS_SIZE)

#define REG_STATUS_THREADID_MASK (0x3)

enum EREG_SPEC {
	ESR_UNDEF = -1,
	ESR_AR = 0,
	ESR_AR_USIZE = ESR_AR + REG_AR_CUR_SIZE,
	ESR_ACC = ESR_AR_USIZE + REG_AR_CUR_SIZE,
	ESR_HI = ESR_ACC + REG_ACC_CUR_SIZE,
	ESR_FFT = ESR_HI + REG_HI_SIZE,
	ESR_VITERBI = ESR_FFT + REG_FFT_SIZE,
	ESR_TRBACK = ESR_VITERBI + REG_VITERBI_SIZE,
	ESR_STATUS = ESR_TRBACK + REG_TRBACK_SIZE,
	ESR_MAX = EBASE_STATUS + REG_STATUS_SIZE,
};


#endif /*SL1REGDEFS_H_*/

