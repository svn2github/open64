#!/usr/bin/expect -f

proc reset_stat_vars { } {
    global comp_total comp_pass
    global run_total run_pass

    set comp_total 0;
    set comp_pass 0;
    set run_total 0;
    set run_pass 0;
}

proc read_time_table { table_n filename } {
    upvar $table_n table

    array unset table;
    set res [catch {set fd [open $filename r]}];
    if { $res } {
	return;
    }
    while { ![eof $fd] } {
	set line [gets $fd];
	set pair [split $line "="];
	set name [string trim [lindex $pair 0]];
	set values [split [lindex $pair 1] ","];
	set len [llength $values];
	for { set i 0 } { $i < $len } { incr i } {
	    lset values $i [string trim [lindex $values $i]];
	}
	set table($name) $values;
    }
    close $fd;
}

proc write_time_table { table_n filename } {
    global time_history
    upvar $table_n table

    exec mkdir -p [file dirname $filename];
    set fd [open $filename w];
    set names [array names table];
    foreach name $names {
	puts -nonewline $fd "$name = ";
	set values $table($name);
	set start 0;
	if { [llength $values] > $time_history } {
	    set start 1;
	}
	set len [llength $values];
	puts -nonewline $fd [lindex $values $start];
	for { set i [expr $start + 1] } { $i < $len } { incr i } {
	    puts -nonewline $fd ", [lindex $values $i]";
	} 
	puts $fd "";
    }
    close $fd;
}

proc get_history_time_avg { list } {
    set count 0;
    set sum 0;
    foreach v $list {
	if { $v >= 0 } {
	    incr count;
	    set sum [expr $sum + $v];
	}
    }
    if { $count == 0 } {
	return -1;
    } else {
	return [expr round($sum / $count)];
    }
}
